antoraSearch.initSearch(lunr, {"index":{"version":"2.3.9","fields":["title","name","text","component"],"fieldVectors":[["title/1-1",[0,22.482,1,48.149]],["name/1-1",[]],["text/1-1",[]],["component/1-1",[]],["title/1",[]],["name/1",[1,1.378]],["text/1",[1,6.758,2,3.493,3,3.215,4,2.411,5,2.857,6,3.086,7,4.162,8,2.603,9,3.086,10,3.44,11,4.224,12,2.51,13,2.323,14,2.584,15,3.44,16,3.907,17,3.864,18,3.235,19,4.122,20,3.121,21,3.167,22,3.783,23,3.021,24,2.945,25,6.474,26,4.105,27,2.903,28,4.774,29,5.939,30,5.171,31,4.836,32,6.093,33,6.602,34,5.443,35,5.171,36,5.678,37,5.678,38,5.678,39,5.97,40,4.497,41,5.171,42,5.374,43,5.171,44,3.746,45,5.171,46,4.051,47,3.952,48,4.527,49,3.952,50,2.315,51,5.171,52,4.623,53,2.836,54,5.171,55,2.889,56,3.952,57,2.875,58,3.415,59,2.849,60,3.053,61,4.435,62,3.953,63,3.823,64,2.043,65,3.037,66,2.931,67,2.799]],["component/1",[68,0.364]],["title/2-1",[0,14.998,69,29.017,70,36.373,71,23.184,72,22.094]],["name/2-1",[]],["text/2-1",[]],["component/2-1",[]],["title/2-2",[13,20.297,73,27.925,74,27.594,75,21.351,76,14.082]],["name/2-2",[]],["text/2-2",[]],["component/2-2",[]],["title/2-3",[77,26.118,78,20.551,79,33.747,80,21.201,81,38.181,82,22.515]],["name/2-3",[]],["text/2-3",[]],["component/2-3",[]],["title/2-4",[81,42.418,82,25.013,83,29.843,84,26.825,85,45.188]],["name/2-4",[]],["text/2-4",[]],["component/2-4",[]],["title/2-5",[86,42.494,87,33.078,88,31.435]],["name/2-5",[]],["text/2-5",[]],["component/2-5",[]],["title/2",[]],["name/2",[89,2.129]],["text/2",[0,3.354,13,3.4,50,0.953,59,1.172,61,1.27,70,6.731,71,1.092,74,2.947,75,4.233,76,2.359,78,5.344,79,8.262,80,5.731,81,5.385,82,6.003,84,5.711,85,4.827,87,4.554,88,2.613,90,1.689,91,1.738,92,1.541,93,1.541,94,1.541,95,2.95,96,2.983,97,2.087,98,1.557,99,3.04,100,5.975,101,6.394,102,4.721,103,8.552,104,3.497,105,4.531,106,2.983,107,8.004,108,9.541,109,1.449,110,1.59,111,1.256,112,2.128,113,1.063,114,1.765,115,3.503,116,1.713,117,1.827,118,4.241,119,4.2,120,2.336,121,5.378,122,6.777,123,3.547,124,4.781,125,3.147,126,4.566,127,4.893,128,2.119,129,1.048,130,2.128,131,2.769,132,4.024,133,5.537,134,3.129,135,1.997,136,3.261,137,4.944,138,3.665,139,1.997,140,1.997,141,4.024,142,6.298,143,4.024,144,4.024,145,2.336,146,3.72,147,4.291,148,2.175,149,2.336,150,2.336,151,1.976,152,2.129,153,2.613,154,4.827,155,2.835,156,1.157,157,1.385,158,1.449]],["component/2",[68,0.364]],["title/3-1",[0,14.998,74,27.594,159,28.097,160,27.594,161,35.871]],["name/3-1",[]],["text/3-1",[]],["component/3-1",[]],["title/3",[]],["name/3",[162,2.129]],["text/3",[]],["component/3",[68,0.364]],["title/4-1",[0,19.276,74,35.465,76,18.099]],["name/4-1",[]],["text/4-1",[]],["component/4-1",[]],["title/4-2",[73,35.891,128,33.579,163,29.455]],["name/4-2",[]],["text/4-2",[]],["component/4-2",[]],["title/4-3",[77,43.496,111,39.994]],["name/4-3",[]],["text/4-3",[]],["component/4-3",[]],["title/4-4",[83,38.355,126,31.714,164,38.355]],["name/4-4",[]],["text/4-4",[]],["component/4-4",[]],["title/4-5",[86,49.562,165,53.065]],["name/4-5",[]],["text/4-5",[]],["component/4-5",[]],["title/4-6",[166,50.843,167,36.336,168,48.185]],["name/4-6",[]],["text/4-6",[]],["component/4-6",[]],["title/4-7",[169,50.843,170,54.517,171,54.517]],["name/4-7",[]],["text/4-7",[]],["component/4-7",[]],["title/4-8",[14,25.396,172,45.439,173,45.439,174,28.808]],["name/4-8",[]],["text/4-8",[]],["component/4-8",[]],["title/4",[]],["name/4",[175,2.129]],["text/4",[0,2.993,3,0.618,4,0.241,5,0.199,9,0.593,10,0.344,13,0.232,14,2.165,18,0.622,19,1.942,23,0.84,31,1.442,32,1.298,34,0.268,40,0.514,42,1.143,50,1.711,53,0.788,55,0.803,57,0.799,58,0.341,59,0.285,62,1.726,63,0.382,64,1.157,65,0.844,67,0.28,74,6.03,75,3.207,76,1.273,78,0.726,80,0.518,82,0.286,84,0.853,87,1.272,88,2.594,96,1.143,97,3.866,102,1.53,111,5.529,113,0.258,115,1.129,117,5.829,119,1.713,121,4.822,122,1.303,123,0.545,125,1.234,126,1.22,128,5.584,129,3.574,134,1.976,136,0.971,137,2.287,146,1.685,147,0.293,148,0.853,151,1.449,152,1.144,153,0.778,155,1.086,156,3.758,158,1.994,161,1.141,163,1.315,164,2.697,165,2.774,167,6.26,168,1.192,170,3.323,171,2.096,173,3.874,174,2.315,176,0.378,177,1.325,178,0.917,179,1.409,180,3.179,181,0.59,182,0.361,183,0.7,184,3.68,185,1.63,186,1.196,187,7.98,188,4.832,189,1.272,190,1.526,191,1.15,192,2.191,193,1.628,194,0.643,195,1.437,196,0.308,197,0.473,198,0.854,199,0.567,200,0.894,201,4.224,202,1.349,203,1.12,204,0.743,205,5.654,206,3.72,207,3.579,208,1.712,209,1.126,210,0.386,211,5.047,212,0.567,213,0.846,214,0.517,215,5.599,216,3.98,217,4.23,218,0.743,219,0.558,220,2.173,221,0.485,222,3.663,223,0.429,224,2.975,225,1.437,226,3.12,227,0.444,228,2.411,229,2.9,230,2.659,231,0.517,232,0.854,233,2.786,234,3.595,235,1.653,236,2.317,237,2.096,238,2.226,239,2.03,240,2.03,241,1.578,242,0.517,243,0.517,244,0.485,245,2.143,246,0.517,247,0.854,248,1.469,249,2.645,250,2.592,251,0.308,252,0.364,253,0.936,254,1.08,255,0.374,256,2.162,257,1.112,258,1.236,259,1.713,260,1.634,261,0.485,262,0.517,263,0.462,264,0.485,265,0.839,266,0.933,267,1.588,268,0.933,269,0.462,270,0.567,271,0.569,272,1.534,273,0.416,274,3.045,275,0.485,276,1.242,277,0.485,278,1.736,279,0.567,280,2.591,281,0.485,282,0.567,283,0.485,284,0.567,285,0.485,286,0.567,287,0.327,288,0.713,289,0.979,290,1.546,291,1.024,292,0.429,293,0.567,294,0.485,295,0.485,296,0.567,297,0.462,298,1.335,299,7.009,300,0.7,301,1.074,302,4.452,303,0.386,304,3.635,305,1.041,306,0.39,307,0.287,308,0.55,309,1.028,310,0.444,311,0.444,312,0.395,313,0.336,314,3.075,315,0.517,316,0.485,317,0.339,318,1.736,319,0.567,320,0.319,321,0.395,322,0.395,323,0.667,324,4.777,325,0.287,326,2.541,327,0.564,328,1.285,329,0.485,330,0.444,331,1.578,332,1.578,333,1.174,334,0.462,335,0.462,336,1.372,337,0.994,338,0.567,339,0.334,340,0.567,341,1.092,342,2.452,343,0.567,344,0.444,345,0.567,346,0.371,347,0.358,348,1.424,349,0.367,350,0.429,351,0.49,352,1.34,353,2.473,354,1.499,355,0.634,356,0.614,357,1.592,358,1.382,359,1.534,360,0.743,361,0.569,362,0.854,363,0.405,364,0.374,365,0.807,366,0.352,367,0.336,368,0.844,369,0.517,370,0.371,371,0.462,372,0.567,373,0.543,374,0.429,375,0.567,376,0.803,377,6.849,378,2.452,379,4.194,380,0.567,381,1.212,382,1.192,383,1.578,384,0.567,385,0.534,386,1.092,387,0.386,388,0.878,389,5.925,390,0.462,391,1.092,392,1.092,393,0.854,394,0.485,395,0.3,396,0.517,397,0.332,398,0.344,399,0.889,400,0.39,401,1.092,402,2.03,403,0.567,404,1.798,405,0.707,406,0.8,407,0.933,408,1.092,409,1.092,410,1.092,411,0.567,412,0.517,413,0.567,414,0.315,415,0.746,416,0.567,417,0.911,418,0.567,419,0.405,420,0.256,421,0.567,422,0.567,423,0.567,424,0.517,425,2.233,426,0.517,427,0.436,428,1.285,429,0.395,430,0.485,431,2.505,432,0.835,433,1.349,434,1.285,435,0.979,436,1.437,437,1.126,438,1.099,439,0.452,440,0.961,441,2.786,442,1.918,443,0.378,444,2.452,445,0.371,446,0.517,447,0.567,448,2.452,449,0.462,450,0.386,451,0.567,452,0.979,453,0.334,454,0.567,455,1.437,456,1.437,457,0.567,458,0.334,459,1.286,460,0.567,461,0.567,462,1.092,463,1.092,464,0.727,465,0.924,466,0.622,467,0.517,468,0.5,469,0.567,470,0.517,471,1.092,472,0.325,473,0.193,474,0.364,475,1.092,476,0.567,477,0.567,478,0.349,479,0.332,480,0.341,481,0.416,482,2.03,483,0.567,484,2.846,485,0.52,486,0.7,487,0.567,488,0.485,489,0.422,490,2.452,491,0.567,492,0.462,493,0.429,494,0.429,495,0.485,496,0.538,497,0.567,498,1.092,499,0.386,500,0.567,501,0.575,502,4.484,503,0.735,504,1.092,505,0.994,506,1.092,507,1.092,508,0.378,509,0.567,510,0.308,511,0.485,512,0.567,513,0.567]],["component/4",[68,0.364]],["title/5-1",[0,19.276,473,21.709,514,63.769]],["name/5-1",[]],["text/5-1",[]],["component/5-1",[]],["title/5",[]],["name/5",[515,2.129]],["text/5",[]],["component/5",[68,0.364]],["title/6-1",[0,16.87,71,26.078,72,24.852,516,33.09]],["name/6-1",[]],["text/6-1",[]],["component/6-1",[]],["title/6-2",[73,41.861,355,43.207]],["name/6-2",[]],["text/6-2",[]],["component/6-2",[]],["title/6-3",[77,37.293,119,28.099,516,37.809]],["name/6-3",[]],["text/6-3",[]],["component/6-3",[]],["title/6-4",[185,26.74,516,37.809,517,54.517]],["name/6-4",[]],["text/6-4",[]],["component/6-4",[]],["title/6-5",[208,38.355,516,37.809,518,54.517]],["name/6-5",[]],["text/6-5",[]],["component/6-5",[]],["title/6-6",[351,28.599,516,37.809,519,58.078]],["name/6-6",[]],["text/6-6",[]],["component/6-6",[]],["title/6-7",[516,37.809,520,63.769,521,58.078]],["name/6-7",[]],["text/6-7",[]],["component/6-7",[]],["title/6-8",[111,34.29,516,37.809,522,63.769]],["name/6-8",[]],["text/6-8",[]],["component/6-8",[]],["title/6-9",[298,26.18,516,33.09,523,60.138,524,30.858]],["name/6-9",[]],["text/6-9",[]],["component/6-9",[]],["title/6-10",[298,26.18,516,33.09,525,60.138,526,39.818]],["name/6-10",[]],["text/6-10",[]],["component/6-10",[]],["title/6-11",[119,28.099,516,37.809,527,68.715]],["name/6-11",[]],["text/6-11",[]],["component/6-11",[]],["title/6-12",[516,37.809,528,68.715,529,58.078]],["name/6-12",[]],["text/6-12",[]],["component/6-12",[]],["title/6-13",[516,37.809,530,68.715,531,43.88]],["name/6-13",[]],["text/6-13",[]],["component/6-13",[]],["title/6-14",[516,37.809,532,68.715,533,54.517]],["name/6-14",[]],["text/6-14",[]],["component/6-14",[]],["title/6-15",[220,24.177,516,33.09,534,60.138,535,26.931]],["name/6-15",[]],["text/6-15",[]],["component/6-15",[]],["title/6-16",[220,24.177,259,24.592,516,33.09,536,60.138]],["name/6-16",[]],["text/6-16",[]],["component/6-16",[]],["title/6-17",[76,15.84,151,20.809,516,33.09,526,39.818]],["name/6-17",[]],["text/6-17",[]],["component/6-17",[]],["title/6-18",[76,15.84,111,30.01,351,25.029,537,42.171]],["name/6-18",[]],["text/6-18",[]],["component/6-18",[]],["title/6-19",[0,19.276,524,35.259,538,48.185]],["name/6-19",[]],["text/6-19",[]],["component/6-19",[]],["title/6-20",[151,23.776,524,35.259,539,51.919]],["name/6-20",[]],["text/6-20",[]],["component/6-20",[]],["title/6-21",[152,25.623,524,35.259,540,54.517]],["name/6-21",[]],["text/6-21",[]],["component/6-21",[]],["title/6-22",[526,39.818,541,45.439,542,31.801,543,32.861]],["name/6-22",[]],["text/6-22",[]],["component/6-22",[]],["title/6",[]],["name/6",[516,1.262]],["text/6",[0,3.11,4,0.339,5,0.756,8,0.366,10,0.484,13,2.952,15,0.484,17,0.544,19,0.931,34,1.021,42,0.45,50,1.335,52,3.059,57,0.405,59,1.083,61,0.823,64,0.287,68,0.21,71,1.529,74,6.918,75,1.984,76,2.356,78,1.506,80,4.323,90,2.716,92,0.527,96,1.215,98,3.073,100,0.544,106,3.188,111,5.741,115,0.444,119,2.98,121,3.466,128,2.811,129,4.135,131,0.55,133,0.57,134,2.496,137,0.938,147,2.38,151,2.767,152,0.321,155,0.427,156,1.358,164,3.407,167,4.341,174,1.939,177,1.005,180,2.214,181,0.432,183,0.512,184,3.334,185,3.272,187,8.383,188,3.437,189,4.217,191,0.375,196,0.434,201,2.092,202,0.683,203,0.365,205,1.469,206,1.395,208,1.649,210,0.544,211,3.739,215,4.648,216,1.909,217,0.57,219,0.774,220,0.935,226,0.898,230,2.228,232,0.625,245,3.073,259,1.208,290,0.504,291,0.763,298,2.799,300,0.512,302,3.976,304,2.228,307,0.405,309,0.405,313,0.474,314,1.582,320,0.45,323,0.488,327,1.114,335,2.664,348,0.88,351,3.137,357,1.534,361,0.416,369,0.728,376,0.406,385,0.74,388,1.2,397,2.697,406,3.08,414,0.444,415,2.678,427,2.887,429,2.615,435,1.339,436,0.728,452,0.495,459,1.478,480,1.298,486,0.512,495,0.683,499,0.544,508,0.532,516,6.657,521,4.862,524,3.299,526,6.657,529,3.422,531,2.252,533,2.798,535,3.263,542,0.455,543,0.892,544,4.616,545,0.799,546,0.799,547,0.425,548,1.294,549,1.289,550,0.683,551,0.604,552,0.504,553,0.65,554,0.625,555,1.514,556,0.563,557,0.512,558,0.484,559,6.105,560,0.625,561,0.416,562,0.604,563,0.504,564,3.333,565,0.532,566,1.757,567,7.81,568,0.625,569,0.625,570,0.504,571,0.586,572,0.586,573,1.502,574,4.989,575,4.808,576,3.942,577,0.423,578,0.378,579,0.544,580,0.728,581,1.144,582,0.416,583,0.604,584,3.592,585,4.202,586,3.757,587,3.272,588,3.272,589,3.592,590,5.11,591,0.625,592,0.799,593,0.799,594,1.582,595,0.728,596,4.888,597,0.423,598,1.23,599,0.408,600,0.799,601,0.799,602,1.379,603,0.728,604,0.504,605,0.65,606,0.439,607,2.232,608,0.604,609,2.158,610,0.799,611,0.799,612,0.65,613,0.65,614,1.757,615,0.799,616,0.594,617,1.379,618,0.728,619,0.586,620,0.799,621,1.294,622,0.799,623,1.379,624,0.604,625,1.514,626,0.799,627,0.799,628,1.137,629,0.586,630,0.799,631,2.335,632,2.158,633,0.544,634,0.625,635,1.769,636,3.757,637,3.757,638,8.645,639,2.232,640,1.798,641,1.379,642,4.017,643,1.514,644,5.434,645,6.043,646,3.757,647,3.422,648,3.422,649,0.989,650,2.197,651,2.615,652,3.422,653,3.059,654,1.438,655,0.924,656,1.042,657,1.262,658,1.514,659,0.532,660,0.799,661,0.532,662,0.728,663,0.614,664,0.799]],["component/6",[68,0.364]],["title/7-1",[0,16.87,71,26.078,72,24.852,567,43.649]],["name/7-1",[]],["text/7-1",[]],["component/7-1",[]],["title/7-2",[73,41.861,355,43.207]],["name/7-2",[]],["text/7-2",[]],["component/7-2",[]],["title/7-3",[77,32.638,185,23.402,208,33.568,575,37.19]],["name/7-3",[]],["text/7-3",[]],["component/7-3",[]],["title/7-4",[76,18.099,83,38.355,575,42.494]],["name/7-4",[]],["text/7-4",[]],["component/7-4",[]],["title/7-5",[86,33.063,136,30.528,184,23.649,429,34.538,575,33.063]],["name/7-5",[]],["text/7-5",[]],["component/7-5",[]],["title/7-6",[76,15.84,166,44.497,575,37.19,645,45.439]],["name/7-6",[]],["text/7-6",[]],["component/7-6",[]],["title/7-7",[169,44.497,450,37.979,575,37.19,576,47.712]],["name/7-7",[]],["text/7-7",[]],["component/7-7",[]],["title/7-8",[172,36.362,220,19.347,259,19.68,429,31.088,575,45.498]],["name/7-8",[]],["text/7-8",[]],["component/7-8",[]],["title/7-9",[76,12.676,220,19.347,429,31.088,575,45.498,665,37.211]],["name/7-9",[]],["text/7-9",[]],["component/7-9",[]],["title/7-10",[430,54.517,575,42.494,666,56.135]],["name/7-10",[]],["text/7-10",[]],["component/7-10",[]],["title/7",[]],["name/7",[567,1.665]],["text/7",[0,2.951,13,2.018,18,0.944,27,0.847,55,0.843,59,1.492,61,0.9,64,1.775,65,0.886,66,0.855,71,2.655,74,6.311,76,1.795,78,4.661,80,3.494,87,2.098,90,2.149,94,1.093,96,3.559,97,1.542,98,2.695,99,2.246,106,4.382,111,0.891,113,0.754,115,1.653,117,1.295,119,2.504,121,2.625,123,2.839,128,2.13,129,4.183,131,3.91,134,3.746,136,2.488,137,3.548,148,0.895,155,0.886,156,0.82,163,0.765,164,2.432,167,2.304,177,0.771,180,1.319,184,1.417,185,3.692,186,1.75,187,8.435,188,1.644,189,3.289,190,0.786,192,1.453,196,0.9,201,1.696,203,0.756,205,2.023,208,1.788,211,1.459,213,0.69,215,2.121,220,2.462,226,1.763,227,2.325,245,2.695,248,3.264,258,1.499,259,3.03,290,1.874,291,4.116,298,2.314,304,1.763,308,0.835,309,0.839,310,1.295,312,1.153,333,6.754,336,2.262,348,1.727,351,0.743,354,1.565,388,0.921,397,1.738,406,1.214,415,2.332,427,4.858,429,6.319,430,1.416,450,3.867,459,1.827,464,1.981,468,0.759,470,1.508,499,1.127,510,1.616,535,2.381,559,5.447,564,4.067,567,7.635,568,1.295,570,1.044,575,8.055,576,9.775,581,2.246,582,2.572,594,4.636,596,6.089,602,5.759,607,1.348,617,4.493,624,1.251,628,5.642,631,2.121,638,7.594,639,2.42,642,2.001,644,4.493,645,7.168,647,2.707,648,2.707,650,0.969,651,2.069,652,2.707,653,2.42,655,1.011,667,1.214,668,1.044,669,1.416,670,1.788,671,1.656,672,1.656,673,6.263,674,4.044,675,1.656,676,0.789,677,7.36,678,1.416,679,0.982,680,2.989,681,1.981,682,2.541,683,1.036,684,4.493,685,1.416,686,2.965,687,2.973,688,2.973,689,1.104,690,8.501,691,1.251,692,1.656,693,1.508,694,4.044,695,6.323,696,1.961,697,3.056,698,2.707,699,1.656,700,1.508,701,1.348,702,1.115,703,1.093,704,1.656]],["component/7",[68,0.364]],["title/8-1",[0,16.87,78,25.681,159,31.604,249,37.979]],["name/8-1",[]],["text/8-1",[]],["component/8-1",[]],["title/8-2",[87,33.078,151,23.776,705,44.389]],["name/8-2",[]],["text/8-2",[]],["component/8-2",[]],["title/8-3",[152,25.623,325,32.297,438,44.389]],["name/8-3",[]],["text/8-3",[]],["component/8-3",[]],["title/8-4",[50,26.007,97,33.078,705,44.389]],["name/8-4",[]],["text/8-4",[]],["component/8-4",[]],["title/8",[]],["name/8",[706,2.129]],["text/8",[27,3.723,34,3.443,59,4.864,69,4.259,71,4.529,72,3.243,76,2.067,78,5.013,87,5.651,97,5.651,101,4.259,102,5.212,115,5.391,119,3.209,129,3.266,160,4.05,161,5.265,177,3.39,178,4.23,192,3.559,213,4.54,249,7.414,298,3.416,325,3.688,365,3.723,438,8.085,606,6.649,657,4.259,686,7.106,705,7.584,707,5.011,708,6.41,709,6.91,710,5.265,711,6.91,712,5.503,713,5.918,714,6.67,715,6.226]],["component/8",[68,0.364]],["title/9-1",[0,16.87,72,24.852,78,25.681,114,42.171]],["name/9-1",[]],["text/9-1",[]],["component/9-1",[]],["title/9-2",[73,35.891,101,37.293,302,42.494]],["name/9-2",[]],["text/9-2",[]],["component/9-2",[]],["title/9-3",[77,37.293,101,37.293,102,34.29]],["name/9-3",[]],["text/9-3",[]],["component/9-3",[]],["title/9-4",[83,38.355,101,37.293,103,49.873]],["name/9-4",[]],["text/9-4",[]],["component/9-4",[]],["title/9-5",[86,42.494,101,37.293,107,44.389]],["name/9-5",[]],["text/9-5",[]],["component/9-5",[]],["title/9-6",[101,37.293,108,51.919,166,50.843]],["name/9-6",[]],["text/9-6",[]],["component/9-6",[]],["title/9-7",[65,29.85,169,44.497,716,37.19,717,43.649]],["name/9-7",[]],["text/9-7",[]],["component/9-7",[]],["title/9-8",[65,29.85,172,45.439,717,43.649,718,37.19]],["name/9-8",[]],["text/9-8",[]],["component/9-8",[]],["title/9-9",[65,26.538,665,41.34,717,38.805,718,33.063,719,29.628]],["name/9-9",[]],["text/9-9",[]],["component/9-9",[]],["title/9-10",[65,26.538,366,30.771,666,43.677,717,38.805,719,29.628]],["name/9-10",[]],["text/9-10",[]],["component/9-10",[]],["title/9-11",[298,29.913,438,44.389,720,56.135]],["name/9-11",[]],["text/9-11",[]],["component/9-11",[]],["title/9-12",[228,30.771,300,31.831,382,37.492,721,49.617,722,38.805]],["name/9-12",[]],["text/9-12",[]],["component/9-12",[]],["title/9-13",[87,25.737,92,32.736,723,53.465,724,45.188,725,37.492]],["name/9-13",[]],["text/9-13",[]],["component/9-13",[]],["title/9",[]],["name/9",[726,2.129]],["text/9",[2,1.445,13,2.914,19,3.869,28,2.297,34,1.911,55,2.057,64,1.914,65,5.66,71,1.097,74,4.328,75,3.787,76,2.498,78,5.809,80,3.956,82,3.924,84,6.286,87,1.218,92,1.549,96,3.557,97,4.774,101,7.409,102,5.3,103,7.197,104,2.667,105,2.008,106,1.322,107,6.406,108,7.776,109,1.456,110,2.75,111,1.263,114,6.297,117,1.837,128,2.128,130,2.139,157,2.396,158,1.456,167,2.303,177,1.881,185,1.695,200,1.33,201,2.231,203,3.253,209,1.675,213,0.979,228,1.456,249,2.75,251,2.197,256,6.579,298,2.496,300,1.507,302,6.365,308,1.184,309,1.189,320,1.322,325,2.695,353,3.837,354,5.332,366,3.92,367,1.392,368,2.162,382,1.774,438,6.126,559,3.143,599,1.201,606,1.291,711,2.228,714,1.616,716,3.545,717,7.197,718,6.132,719,6.19,722,3.161,724,2.139,725,3.054,727,5.32,728,1.837,729,1.912,730,6.65,731,6.648,732,1.747,733,1.206,734,5.553,735,1.675,736,1.872,737,1.774,738,1.102,739,1.243,740,4.02,741,3.291,742,2.348,743,4.042,744,2.994,745,3.545,746,1.804,747,1.872,748,1.306,749,1.549,750,3.455,751,2.781,752,1.912,753,1.565]],["component/9",[68,0.364]],["title/10-1",[0,14.998,71,23.184,72,22.094,78,22.831,754,38.805]],["name/10-1",[]],["text/10-1",[]],["component/10-1",[]],["title/10",[]],["name/10",[755,2.129]],["text/10",[0,3.307,4,1.18,10,3.65,13,3.216,19,2.046,42,2.624,64,3.253,68,0.729,75,2.592,76,0.789,78,5.402,80,1.319,94,3.076,102,4.227,113,1.264,119,1.224,121,5.423,124,4.75,134,4.491,137,4.553,146,1.456,151,1.036,155,3.773,167,1.583,178,2.709,180,1.233,181,1.502,182,1.767,183,1.782,184,1.324,186,1.636,188,3.858,189,1.242,193,2.361,211,4.843,213,1.943,219,1.42,220,3.056,251,1.51,252,1.782,253,1.647,259,4.348,290,1.752,291,3.037,305,1.833,309,4.31,327,1.434,357,2.608,373,1.382,376,1.414,387,5.35,390,2.262,414,1.545,438,4.194,459,1.255,465,1.264,466,4.48,468,2.137,473,0.946,481,3.418,485,1.324,486,2.991,501,2.455,531,3.208,556,1.957,558,2.825,564,2.783,565,3.107,605,3.796,619,4.416,628,2.455,635,1.502,650,2.727,683,1.737,697,2.099,707,5.856,754,9.274,756,2.778,757,4.663,758,2.375,759,2.778,760,2.099,761,1.494,762,2.468,763,2.262,764,2.53,765,7.491,766,7.055,767,2.778,768,7.055,769,7.055,770,2.468,771,6.024,772,6.024,773,2.778,774,2.826,775,2.778,776,2.778,777,3.327,778,3.707,779,5.518,780,1.957,781,3.523,782,2.593,783,2.778,784,2.315,785,6.024,786,1.51,787,2.778,788,2.778,789,1.982,790,1.737,791,4.663,792,1.934,793,4.663,794,2.262,795,4.663,796,4.663,797,4.663,798,4.246,799,3.937,800,4.663,801,1.782,802,1.427,803,2.778,804,1.625,805,2.778,806,5.487,807,2.53,808,1.851,809,6.425,810,6.425,811,3.246,812,1.303,813,2.53,814,2.778,815,2.778,816,3.647,817,2.468,818,2.231,819,2.037,820,2.375,821,4.663,822,1.891,823,1.51]],["component/10",[68,0.364]],["title/11-1",[0,16.87,71,26.078,72,24.852,824,50.829]],["name/11-1",[]],["text/11-1",[]],["component/11-1",[]],["title/11",[]],["name/11",[824,1.939]],["text/11",[]],["component/11",[68,0.364]],["title/12-1",[0,16.87,71,26.078,72,24.852,716,37.19]],["name/12-1",[]],["text/12-1",[]],["component/12-1",[]],["title/12-2",[73,35.891,159,36.111,716,42.494]],["name/12-2",[]],["text/12-2",[]],["component/12-2",[]],["title/12-3",[77,37.293,552,40.205,825,54.517]],["name/12-3",[]],["text/12-3",[]],["component/12-3",[]],["title/12-4",[83,38.355,501,33.579,716,42.494]],["name/12-4",[]],["text/12-4",[]],["component/12-4",[]],["title/12-5",[552,40.205,826,42.934,827,58.078]],["name/12-5",[]],["text/12-5",[]],["component/12-5",[]],["title/12-6",[297,51.919,552,40.205,828,44.389]],["name/12-6",[]],["text/12-6",[]],["component/12-6",[]],["title/12-7",[87,33.078,829,56.135,830,40.91]],["name/12-7",[]],["text/12-7",[]],["component/12-7",[]],["title/12-8",[76,18.099,111,34.29,831,58.078]],["name/12-8",[]],["text/12-8",[]],["component/12-8",[]],["title/12-9",[86,42.494,473,21.709,716,42.494]],["name/12-9",[]],["text/12-9",[]],["component/12-9",[]],["title/12-10",[177,29.682,832,48.993,833,58.078]],["name/12-10",[]],["text/12-10",[]],["component/12-10",[]],["title/12-11",[177,29.682,834,51.919,835,58.078]],["name/12-11",[]],["text/12-11",[]],["component/12-11",[]],["title/12-12",[177,29.682,836,60.511,837,58.078]],["name/12-12",[]],["text/12-12",[]],["component/12-12",[]],["title/12",[]],["name/12",[716,1.419]],["text/12",[0,3.417,2,0.311,4,0.416,7,0.371,8,0.232,13,0.4,14,0.23,19,1.875,23,1.731,27,1.322,32,1.175,34,0.239,50,2.408,53,1.924,55,0.498,57,1.125,58,0.588,59,0.491,60,0.272,61,0.532,62,1.076,63,1.741,64,0.352,66,0.505,67,0.25,71,1.038,74,1.81,75,0.218,76,1.508,78,3.415,82,0.924,84,4.68,87,2.528,90,0.366,96,1.455,97,2.276,101,2.082,102,1.39,111,4.12,113,2.32,115,0.282,117,1.11,118,0.659,119,1.291,121,2.937,124,1.972,128,1.875,129,2.952,131,0.348,134,3.214,136,0.873,137,4.806,146,1.164,148,0.991,151,2.857,152,3.125,155,1.567,156,0.907,157,3.994,163,1.353,164,1.762,167,2.029,173,0.412,174,0.946,177,3.721,178,2.397,179,0.251,182,0.622,184,3.211,185,1.365,186,0.836,187,1.954,188,4.774,189,0.226,190,0.24,191,0.459,192,1.085,195,0.461,200,0.287,201,1.84,202,0.433,203,0.447,205,1.247,206,1.13,207,0.361,208,0.304,210,0.345,211,2.276,213,0.925,215,5.548,216,6.084,218,0.966,219,0.5,220,2.302,224,1.317,230,1.087,232,1.433,238,3.432,249,1.247,251,0.532,253,0.58,254,2.593,255,0.334,256,0.544,271,0.264,280,2.924,287,3.067,289,1.137,290,0.895,291,1.64,292,0.383,297,8.12,298,1.936,300,3.904,302,4.587,305,1.465,306,0.348,307,0.256,309,0.256,313,0.842,318,0.433,321,0.988,326,0.698,327,0.261,329,1.899,336,1.82,346,0.331,351,0.439,352,0.334,353,2.034,355,0.294,356,0.799,357,0.283,358,1.511,360,1.247,361,1.348,368,1.188,370,0.639,373,0.252,388,1.98,390,2.385,398,0.593,400,2.45,406,1.628,440,0.446,465,1.481,466,2.906,473,0.997,479,0.296,480,0.304,485,0.466,486,0.628,493,3.683,501,0.747,508,0.337,543,0.576,552,7.583,560,0.765,564,2.027,565,0.337,570,1.156,578,0.239,582,0.955,598,0.288,606,0.278,607,1.492,616,0.377,628,5.048,656,0.244,668,0.319,683,0.317,686,4.047,689,0.337,705,0.352,716,6.033,725,5.511,731,0.352,739,2.323,744,3.323,745,1.723,746,0.389,748,0.282,753,4.489,761,0.763,764,0.461,777,0.361,790,0.317,822,1.994,825,4.543,827,5.996,830,1.176,833,5.699,835,4.223,837,2.964,838,0.836,839,0.412,840,0.412,841,1.214,842,0.891,843,0.461,844,0.506,845,0.352,846,0.357,847,1.42,848,3.772,849,4.223,850,2.022,851,2.505,852,1.899,853,0.412,854,0.371,855,2.245,856,0.506,857,4.402,858,4.127,859,0.666,860,0.978,861,0.836,862,0.461,863,0.461,864,0.433,865,0.836,866,0.978,867,2.265,868,0.506,869,5.099,870,0.461,871,0.371,872,2.712,873,0.946,874,4.259,875,2.023,876,0.461,877,1.156,878,1.344,879,1.344,880,1.385,881,1.344,882,0.334,883,5.099,884,4.388,885,4.388,886,4.388,887,3.254,888,3.432,889,4.388,890,4.388,891,3.997,892,1.42,893,1.42,894,4.388,895,4.388,896,1.214,897,1.584,898,0.612,899,0.352,900,4.127,901,0.307,902,0.506,903,2.09,904,2.459,905,3.254,906,4.388,907,0.978,908,2.023,909,2.586,910,0.978,911,5.717,912,0.978,913,1.833,914,0.978,915,1.567,916,1.799,917,2.221,918,3.561,919,3.254,920,2.221,921,1.42,922,6.258,923,3.254,924,2.586,925,2.865,926,2.785,927,1.42,928,1.42,929,0.506,930,1.833,931,1.137,932,0.978,933,0.978,934,0.978,935,0.978,936,0.978,937,0.978,938,0.978,939,0.978,940,0.597,941,0.506,942,0.506,943,0.698,944,0.433,945,0.433,946,0.506,947,0.506,948,0.412,949,0.396,950,1.929,951,1.741,952,1.198,953,1.833,954,4.874,955,0.383,956,0.946,957,0.978,958,0.797,959,0.978,960,0.978]],["component/12",[68,0.364]],["title/13-1",[961,89.216]],["name/13-1",[]],["text/13-1",[]],["component/13-1",[]],["title/13-2",[962,70.576,963,54.524]],["name/13-2",[]],["text/13-2",[]],["component/13-2",[]],["title/13",[964,84.658]],["name/13",[965,1.11]],["text/13",[4,4.555,18,6.112,19,2.892,22,4.017,24,5.564,25,3.739,29,2.897,34,4.026,56,4.196,59,3.025,60,4.578,64,2.169,68,2.236,76,2.417,95,4.419,113,3.874,177,3.963,181,4.603,184,2.873,188,2.451,194,3.55,210,4.102,251,3.277,300,3.867,323,3.681,325,4.999,327,4.395,339,5.013,365,3.082,373,2.998,414,3.353,415,2.85,466,3.435,501,3.174,535,2.909,549,3.6,554,4.715,667,4.419,714,4.148,762,4.506,804,3.526,812,2.828,817,3.191,818,4.075,950,3.574,966,5.28,967,6.028,968,3.097,969,7.236,970,4.763,971,5.154,972,4.196,973,3.6,974,4.102,975,6.028,976,4.358,977,4.196,978,5.49,979,7.459,980,3.834,981,5.154,982,4.247,983,7.754,984,5.49,985,4.806,986,3.502,987,4.806,988,5.154,989,5.154,990,4.715,991,5.49,992,5.49,993,4.358,994,5.49]],["component/13",[68,0.364]],["title/14-1",[0,19.276,468,29.234,995,45.497]],["name/14-1",[]],["text/14-1",[]],["component/14-1",[]],["title/14-2",[73,41.861,996,47.714]],["name/14-2",[]],["text/14-2",[]],["component/14-2",[]],["title/14-3",[77,37.293,969,46.748,973,38.078]],["name/14-3",[]],["text/14-3",[]],["component/14-3",[]],["title/14-4",[83,44.735,997,53.065]],["name/14-4",[]],["text/14-4",[]],["component/14-4",[]],["title/14-5",[68,19.528,826,50.076]],["name/14-5",[]],["text/14-5",[]],["component/14-5",[]],["title/14-6",[828,51.773,998,60.556]],["name/14-6",[]],["text/14-6",[]],["component/14-6",[]],["title/14-7",[68,16.743,86,42.494,999,48.185]],["name/14-7",[]],["text/14-7",[]],["component/14-7",[]],["title/14-8",[60,39.994,166,59.3]],["name/14-8",[]],["text/14-8",[]],["component/14-8",[]],["title/14-9",[60,30.01,761,30.01,1000,60.138,1001,43.649]],["name/14-9",[]],["text/14-9",[]],["component/14-9",[]],["title/14-10",[60,47.621,1002,38.355]],["name/14-10",[]],["text/14-10",[]],["component/14-10",[]],["title/14-11",[60,34.29,1002,38.355,1003,51.919]],["name/14-11",[]],["text/14-11",[]],["component/14-11",[]],["title/14-12",[60,34.29,1002,38.355,1004,51.919]],["name/14-12",[]],["text/14-12",[]],["component/14-12",[]],["title/14-13",[24,28.949,58,33.568,60,30.01,1005,60.138]],["name/14-13",[]],["text/14-13",[]],["component/14-13",[]],["title/14-14",[60,30.01,169,44.497,365,28.532,1006,32.638]],["name/14-14",[]],["text/14-14",[]],["component/14-14",[]],["title/14-15",[172,45.439,307,28.266,415,26.388,966,34.612]],["name/14-15",[]],["text/14-15",[]],["component/14-15",[]],["title/14-16",[665,53.131,808,42.494,966,39.548]],["name/14-16",[]],["text/14-16",[]],["component/14-16",[]],["title/14-17",[394,47.712,473,19,666,49.128,1007,42.878]],["name/14-17",[]],["text/14-17",[]],["component/14-17",[]],["title/14-18",[19,21.659,720,56.135,1008,51.919]],["name/14-18",[]],["text/14-18",[]],["component/14-18",[]],["title/14-19",[721,63.769,998,51.919,1009,45.497]],["name/14-19",[]],["text/14-19",[]],["component/14-19",[]],["title/14-20",[203,29.125,535,30.772,1010,68.715]],["name/14-20",[]],["text/14-20",[]],["component/14-20",[]],["title/14",[]],["name/14",[468,0.539,995,0.84]],["text/14",[2,0.422,4,1.225,5,0.842,7,0.503,8,1.89,10,1.456,12,3.194,13,0.983,14,2.038,15,0.794,16,0.472,17,0.467,18,2.741,19,2.864,20,1.586,21,0.933,23,0.697,24,2.495,25,4.243,26,0.496,27,0.961,28,0.566,29,0.63,33,1.123,34,0.889,39,0.429,53,2.403,55,0.349,56,2.317,57,1.217,58,0.413,59,1.67,60,5.587,61,1.568,62,1.997,64,0.471,66,1.24,68,1.742,72,0.305,75,1.034,76,1.271,80,0.326,92,0.864,113,0.312,119,1.816,134,0.577,136,0.806,137,0.817,146,1.511,148,1.299,156,0.34,157,1.115,177,0.319,178,4.745,181,0.708,184,1.586,185,2.385,186,1.698,188,5.151,189,0.307,190,0.893,191,1.561,192,1.174,193,0.664,196,0.373,201,0.288,203,0.859,209,0.489,210,0.467,211,1.634,213,2.37,219,0.351,254,0.365,255,0.864,256,0.382,258,0.346,271,1.95,272,0.518,287,1.664,289,0.812,304,0.407,305,0.864,307,2.268,308,1.211,309,0.664,313,1.115,322,0.478,323,0.419,325,1.217,327,0.354,339,1.96,347,0.826,348,0.399,364,0.453,365,0.961,373,0.935,385,2.189,394,6.863,398,0.794,414,0.382,415,1.949,417,0.396,435,0.812,453,0.771,458,0.404,459,1.303,464,0.873,465,1.702,466,1.369,468,0.315,473,0.982,478,1.774,479,4.855,480,0.413,485,0.624,501,0.99,503,0.462,510,0.712,535,1.805,542,4.116,549,1.435,551,0.518,564,1.11,571,0.503,577,0.363,578,1.949,579,1.279,608,0.518,612,0.559,616,0.51,628,0.361,634,1.025,635,1.299,656,0.331,657,1.1,663,1.007,676,0.327,683,0.429,685,0.587,689,0.457,691,0.99,703,0.453,705,0.478,713,1.148,738,1.353,746,0.527,748,0.382,749,0.864,761,1.292,762,1.272,763,3.045,770,0.363,778,0.422,782,0.382,804,1.1,808,1.601,811,0.912,812,0.615,818,3.072,822,0.467,848,0.453,853,0.559,859,1.279,871,0.503,882,3.922,898,0.819,899,0.912,945,1.12,963,0.503,966,5.066,968,0.673,969,0.503,970,0.733,973,0.41,976,0.496,977,0.478,979,0.518,981,0.587,982,1.693,988,0.587,989,1.607,990,1.025,996,0.44,997,3.195,998,8.152,1001,5.919,1002,3.86,1003,3.646,1004,2.71,1006,2.813,1007,5.098,1008,5.881,1009,2.375,1011,0.686,1012,5.405,1013,0.96,1014,0.826,1015,0.503,1016,0.819,1017,2.205,1018,0.892,1019,1.963,1020,0.99,1021,2.71,1022,0.537,1023,0.686,1024,0.489,1025,3.57,1026,3.527,1027,1.985,1028,6.269,1029,0.686,1030,0.686,1031,2.054,1032,2.403,1033,0.923,1034,4.058,1035,3.912,1036,0.686,1037,0.559,1038,0.686,1039,0.686,1040,0.686,1041,0.625,1042,0.686,1043,0.559,1044,0.686,1045,2.884,1046,0.686,1047,0.686,1048,0.686,1049,0.686,1050,0.686,1051,0.686,1052,0.587,1053,0.686,1054,0.686,1055,0.686,1056,0.572,1057,0.686,1058,0.559,1059,0.686,1060,0.537,1061,0.686,1062,0.686,1063,0.686,1064,0.686,1065,0.686,1066,0.686,1067,1.31,1068,0.686,1069,0.686,1070,0.686,1071,1.816,1072,0.686,1073,0.503,1074,1.49,1075,0.686,1076,1.88,1077,1.31,1078,0.686,1079,2.403,1080,0.686,1081,0.686,1082,0.625,1083,0.686,1084,0.686,1085,2.845,1086,0.686,1087,0.686,1088,0.686,1089,0.686,1090,2.188,1091,1.025,1092,0.686,1093,0.686,1094,0.467,1095,0.686,1096,1.556,1097,1.31,1098,1.31,1099,1.193,1100,2.466,1101,2.466,1102,2.466,1103,2.466,1104,2.466,1105,0.587,1106,5.09,1107,3.579,1108,2.884,1109,1.12,1110,4.159,1111,0.686,1112,2.032,1113,1.341,1114,2.403,1115,2.403,1116,1.399,1117,0.686,1118,2.081,1119,3.197,1120,0.686,1121,0.433,1122,5.687,1123,1.88,1124,3.406,1125,4.122,1126,1.31,1127,1.879,1128,0.864,1129,0.686,1130,0.686,1131,1.607,1132,0.686,1133,1.31,1134,0.453,1135,0.686,1136,0.686,1137,0.559,1138,0.686,1139,0.559,1140,0.587,1141,0.587,1142,0.559,1143,2.517,1144,1.12,1145,1.31,1146,1.31,1147,0.686,1148,1.24,1149,0.496,1150,1.31,1151,0.686,1152,0.99,1153,0.812,1154,0.833,1155,5.673,1156,0.51,1157,0.559,1158,0.625,1159,0.537,1160,0.651,1161,0.448,1162,3.031,1163,2.403,1164,0.737,1165,3.328,1166,0.686,1167,0.686,1168,1.556,1169,1.31,1170,0.462,1171,0.518,1172,0.453,1173,1.067,1174,1.88,1175,0.686,1176,1.88,1177,0.99,1178,0.518,1179,0.518,1180,0.686,1181,1.803,1182,0.467,1183,4.122,1184,0.537,1185,0.686,1186,0.686,1187,0.686,1188,0.686,1189,0.559,1190,0.686,1191,1.176,1192,0.422,1193,1.31,1194,1.31,1195,0.686,1196,0.419,1197,0.547,1198,0.572,1199,0.686,1200,1.193,1201,1.12,1202,0.686,1203,1.12,1204,0.527,1205,0.559,1206,1.12,1207,0.625,1208,0.686,1209,0.462,1210,0.625,1211,0.686,1212,0.686,1213,1.31,1214,1.784,1215,0.686,1216,1.31,1217,0.547,1218,0.686,1219,1.88,1220,1.31,1221,0.44,1222,0.686,1223,1.31,1224,1.31,1225,1.88,1226,0.349,1227,1.025,1228,0.686,1229,0.433,1230,2.054,1231,2.002,1232,1.542,1233,0.686,1234,2.904,1235,0.686,1236,0.559,1237,2.403,1238,1.31,1239,0.686,1240,0.686,1241,1.31,1242,1.31,1243,0.686,1244,0.625,1245,0.686,1246,0.686,1247,0.686,1248,0.686,1249,0.686,1250,0.686,1251,0.44,1252,0.467,1253,0.625,1254,0.812,1255,1.325,1256,0.651,1257,0.686,1258,0.686,1259,2.884,1260,0.686,1261,0.686,1262,0.467,1263,0.686,1264,0.686,1265,1.31,1266,0.686,1267,0.686,1268,0.686,1269,0.453,1270,0.686,1271,0.686,1272,1.31,1273,2.884,1274,2.29,1275,2.403,1276,2.403,1277,2.403,1278,3.115,1279,2.403,1280,2.403,1281,2.403,1282,0.686,1283,0.625,1284,4.628,1285,1.607,1286,0.572,1287,0.686,1288,0.686,1289,0.686,1290,0.686,1291,1.341,1292,0.686,1293,0.503,1294,0.651,1295,0.686,1296,1.31,1297,0.686,1298,0.448,1299,0.559,1300,0.537,1301,0.99,1302,0.559,1303,0.572,1304,0.587,1305,0.686,1306,0.51,1307,0.686,1308,0.686,1309,0.686,1310,0.527,1311,0.527,1312,0.686,1313,1.31,1314,0.686,1315,0.686,1316,0.856,1317,0.425,1318,0.478,1319,0.686,1320,0.462,1321,0.686,1322,0.99,1323,0.527,1324,0.503,1325,0.686,1326,0.527,1327,0.448,1328,0.686,1329,0.686,1330,0.587,1331,0.686,1332,0.686]],["component/14",[68,0.364]],["title/15-1",[0,19.276,129,28.599,1333,54.517]],["name/15-1",[]],["text/15-1",[]],["component/15-1",[]],["title/15-2",[73,35.891,180,28.296,226,37.809]],["name/15-2",[]],["text/15-2",[]],["component/15-2",[]],["title/15-3",[77,37.293,128,33.579,163,29.455]],["name/15-3",[]],["text/15-3",[]],["component/15-3",[]],["title/15-4",[83,44.735,222,51.773]],["name/15-4",[]],["text/15-4",[]],["component/15-4",[]],["title/15-5",[86,42.494,163,29.455,164,38.355]],["name/15-5",[]],["text/15-5",[]],["component/15-5",[]],["title/15-6",[166,50.843,432,33.752,434,51.919]],["name/15-6",[]],["text/15-6",[]],["component/15-6",[]],["title/15-7",[169,50.843,351,28.599,830,40.91]],["name/15-7",[]],["text/15-7",[]],["component/15-7",[]],["title/15-8",[102,30.01,172,45.439,351,25.029,830,35.803]],["name/15-8",[]],["text/15-8",[]],["component/15-8",[]],["title/15-9",[76,15.84,220,24.177,259,24.592,665,46.5]],["name/15-9",[]],["text/15-9",[]],["component/15-9",[]],["title/15-10",[220,27.625,288,41.669,666,56.135]],["name/15-10",[]],["text/15-10",[]],["component/15-10",[]],["title/15-11",[28,32.112,720,65.472]],["name/15-11",[]],["text/15-11",[]],["component/15-11",[]],["title/15",[]],["name/15",[1334,2.129]],["text/15",[0,1.041,4,0.361,5,0.298,8,0.736,9,0.462,13,0.934,19,1.768,31,0.431,34,0.402,40,0.4,42,1.627,50,2.645,53,0.425,55,1.161,57,0.813,59,0.427,61,0.462,63,0.572,64,2.429,67,0.419,69,0.497,70,1.177,74,1.608,75,3.459,76,1.119,78,2.984,79,0.642,80,0.404,82,0.81,84,0.868,88,3.674,102,2.592,103,0.665,104,1.059,107,0.592,113,0.387,115,0.473,119,0.708,121,5.747,122,0.545,123,0.425,124,0.572,125,0.665,128,4.85,129,4.018,133,0.606,134,2.294,137,5.752,138,0.774,139,0.727,140,0.727,147,0.439,151,1.078,154,0.774,155,1.841,163,1.821,164,5.223,167,5.499,168,1.213,174,0.439,177,0.747,179,0.421,180,2.468,181,0.46,182,2.508,183,1.03,184,0.405,187,1.725,188,4.109,190,1.083,193,0.431,194,0.501,201,2.471,203,1.042,204,0.578,205,1.553,206,2.831,207,0.606,208,0.511,210,0.578,211,3.551,213,0.354,219,0.435,220,3.229,222,4.102,223,0.642,224,3.087,226,3.298,228,4.342,229,4.239,230,3.087,233,4.072,234,3.643,235,4.239,236,4.239,237,3.371,238,4.072,245,1.07,248,0.439,249,0.578,250,0.774,253,0.504,254,0.854,256,1.269,258,2.219,259,2.294,260,2.294,261,0.727,262,2.079,263,0.692,264,0.727,265,1.753,266,1.951,267,3.084,268,1.951,269,1.307,271,0.443,272,2.185,273,0.623,274,4.121,275,0.727,276,2.229,277,0.727,278,2.472,280,2.294,281,0.727,283,0.727,285,0.727,287,0.491,288,2.577,289,1.793,290,0.536,291,1.988,292,0.642,294,0.727,295,0.727,297,0.692,304,0.504,308,0.429,321,0.592,329,0.727,346,1.889,351,3.14,353,0.419,357,0.476,365,0.435,388,0.473,414,0.473,425,2.633,432,2.087,434,3.211,435,0.527,439,0.678,450,1.093,452,0.996,455,0.774,456,0.774,465,1.316,466,1.3,468,0.39,485,0.765,486,0.545,501,0.448,533,0.727,543,0.501,556,0.599,564,0.393,565,0.566,598,0.484,628,0.448,650,3.446,668,0.536,691,0.642,693,1.463,696,3.888,714,0.585,738,0.399,763,5.7,777,0.606,789,0.606,801,0.545,806,1.463,830,3.34,852,0.727,897,0.606,916,0.888,955,0.642,1060,1.256,1143,1.393,1172,0.561,1173,0.692,1182,0.578,1251,2.53,1274,0.585,1326,0.653,1333,2.472,1335,0.585,1336,0.606,1337,0.536,1338,0.555,1339,0.531,1340,0.85,1341,1.463,1342,0.774,1343,0.774,1344,0.774,1345,0.774,1346,0.774,1347,0.774,1348,0.678,1349,1.606,1350,1.606,1351,2.891,1352,4.102,1353,4.609,1354,3.442,1355,0.642,1356,1.714,1357,1.373,1358,0.85,1359,2.891,1360,2.891,1361,3.442,1362,2.891,1363,2.282,1364,2.891,1365,3.968,1366,1.785,1367,3.442,1368,2.601,1369,4.849,1370,0.85,1371,1.606,1372,1.213,1373,1.021,1374,0.727,1375,0.727,1376,0.642,1377,1.725,1378,2.282,1379,1.725,1380,1.606,1381,0.85,1382,1.606,1383,0.692,1384,0.774,1385,0.85,1386,0.85,1387,1.606,1388,1.628,1389,0.85,1390,1.606,1391,0.85,1392,1.506,1393,0.578,1394,0.85,1395,0.85,1396,2.282,1397,0.85,1398,0.85,1399,0.665,1400,0.85,1401,1.463,1402,0.85,1403,0.85,1404,0.85,1405,0.85,1406,0.85,1407,0.85,1408,0.606,1409,0.85,1410,0.85,1411,0.85,1412,0.85,1413,1.606,1414,0.85,1415,0.85,1416,1.951,1417,0.85,1418,0.85,1419,0.85,1420,0.85,1421,0.85,1422,0.85,1423,0.85,1424,0.85,1425,0.85,1426,0.85,1427,0.85,1428,0.85,1429,0.85,1430,0.85,1431,0.85,1432,0.85,1433,0.85,1434,0.85,1435,0.85,1436,0.85,1437,0.85,1438,0.85,1439,0.85,1440,0.85,1441,0.85,1442,1.093,1443,0.665,1444,0.85,1445,0.665,1446,0.85,1447,1.606,1448,0.642,1449,0.85,1450,7.545,1451,0.85,1452,0.85,1453,0.85,1454,0.85,1455,0.85,1456,0.774,1457,0.85,1458,0.85,1459,0.85,1460,0.85,1461,0.85,1462,0.85,1463,0.85,1464,0.85,1465,0.85,1466,0.85,1467,0.85,1468,0.85,1469,0.85,1470,0.85,1471,0.85,1472,0.85,1473,0.665,1474,0.85,1475,0.85,1476,0.85,1477,0.85,1478,7.855,1479,0.85,1480,0.85,1481,0.85,1482,0.85,1483,1.606,1484,0.592,1485,1.606,1486,0.692,1487,1.606,1488,1.606,1489,1.606,1490,1.606,1491,1.606,1492,0.774,1493,0.487,1494,0.727,1495,0.606,1496,0.298,1497,0.615,1498,0.85,1499,0.85,1500,0.85,1501,0.85,1502,0.85,1503,0.85,1504,0.85,1505,0.85,1506,0.85,1507,0.85,1508,0.85,1509,0.85,1510,0.85,1511,0.85,1512,0.85,1513,0.85,1514,0.85,1515,0.85,1516,0.85,1517,0.85,1518,0.85,1519,0.85,1520,0.85,1521,0.85,1522,0.85,1523,0.85,1524,0.85,1525,0.85,1526,0.85,1527,0.85,1528,0.85,1529,0.85,1530,0.85,1531,0.85,1532,0.85,1533,0.85,1534,0.85,1535,0.85,1536,0.85,1537,0.85,1538,0.85,1539,0.85,1540,0.85,1541,0.85,1542,0.85,1543,0.85,1544,0.85,1545,0.85,1546,0.85,1547,0.85,1548,0.85,1549,0.85,1550,0.85,1551,0.85,1552,0.85,1553,0.85,1554,0.85,1555,0.85,1556,0.85,1557,0.85,1558,0.85,1559,0.85,1560,0.85,1561,0.85,1562,0.85,1563,0.85,1564,0.85,1565,0.85,1566,0.85,1567,0.85,1568,1.177,1569,0.85,1570,0.85,1571,0.85,1572,0.85,1573,0.85,1574,0.85,1575,0.85,1576,0.85,1577,0.85,1578,0.85,1579,0.85,1580,0.85,1581,0.85,1582,0.85,1583,0.85,1584,0.85,1585,0.85,1586,0.85,1587,0.85,1588,0.85,1589,0.85,1590,0.85,1591,0.85,1592,0.85,1593,0.85,1594,0.85,1595,0.85,1596,0.85,1597,0.85,1598,0.85,1599,0.85,1600,0.85,1601,0.85,1602,0.85,1603,0.85,1604,0.85,1605,0.85,1606,0.85,1607,0.85,1608,0.85,1609,0.85,1610,0.85,1611,0.85,1612,0.85,1613,0.85,1614,0.85,1615,0.85,1616,0.85,1617,0.85,1618,0.85,1619,0.85,1620,0.85,1621,0.85,1622,0.85,1623,0.85,1624,0.85,1625,0.85,1626,0.85,1627,0.85,1628,0.85,1629,0.85,1630,0.85,1631,0.421,1632,0.85,1633,0.653]],["component/15",[68,0.364]],["title/16-1",[0,16.87,71,26.078,72,24.852,1634,39.818]],["name/16-1",[]],["text/16-1",[]],["component/16-1",[]],["title/16-2",[151,27.731,355,43.207]],["name/16-2",[]],["text/16-2",[]],["component/16-2",[]],["title/16-3",[152,29.885,901,45.067]],["name/16-3",[]],["text/16-3",[]],["component/16-3",[]],["title/16-4",[702,50.076,1635,45.762]],["name/16-4",[]],["text/16-4",[]],["component/16-4",[]],["title/16-5",[74,41.364,1636,47.296]],["name/16-5",[]],["text/16-5",[]],["component/16-5",[]],["title/16-6",[557,47.714,1637,50.614]],["name/16-6",[]],["text/16-6",[]],["component/16-6",[]],["title/16-7",[184,30.395,1638,60.511,1639,63.769]],["name/16-7",[]],["text/16-7",[]],["component/16-7",[]],["title/16-8",[259,32.773,1640,70.576]],["name/16-8",[]],["text/16-8",[]],["component/16-8",[]],["title/16-9",[208,38.355,1634,45.497,1641,60.511]],["name/16-9",[]],["text/16-9",[]],["component/16-9",[]],["title/16-10",[184,30.395,1642,60.511,1643,63.769]],["name/16-10",[]],["text/16-10",[]],["component/16-10",[]],["title/16",[]],["name/16",[1634,1.519]],["text/16",[0,2.176,5,0.627,8,1.461,18,1.02,19,2.753,23,2.292,27,1.63,50,0.73,53,2.993,55,1.622,57,0.907,59,0.899,62,0.868,64,1.147,65,0.958,74,5.781,75,0.771,76,1.223,78,4.314,88,2.576,106,1.008,119,1.898,121,3.533,128,4.464,129,4.662,147,0.924,148,0.968,151,1.948,152,2.1,156,0.887,163,0.827,164,1.077,167,5.02,174,0.924,177,0.834,179,1.578,180,0.795,184,0.854,185,3.018,187,7.084,188,0.728,189,1.425,190,2.844,191,0.84,192,2.554,196,0.974,201,4.033,203,1.456,205,3.556,206,3.663,208,1.077,211,3.978,213,1.795,215,4.738,216,3.638,217,4.738,219,0.916,226,4.268,245,1.193,249,4.078,251,0.974,253,2.554,256,0.996,257,1.262,259,0.789,271,0.934,291,2.172,298,3.603,308,0.903,309,0.907,318,1.531,327,1.645,336,1.002,346,3.415,357,1.783,368,0.958,370,1.17,374,5.018,376,0.911,385,0.875,412,6.556,414,0.996,429,1.247,446,1.631,452,3.716,468,0.821,473,0.61,478,1.961,480,1.077,494,3.949,495,2.725,524,4.688,526,7.163,543,2.536,549,2.572,556,1.262,557,1.149,559,5.248,560,3.369,562,2.409,567,4.087,575,3.482,577,0.948,578,0.847,579,2.169,580,1.631,581,1.353,583,7.268,589,6.567,596,1.401,606,0.985,607,1.458,667,1.313,673,1.631,683,1.12,684,1.631,701,1.458,702,2.9,712,1.353,713,1.093,714,1.232,748,2.396,761,0.963,801,1.149,852,1.531,854,3.831,861,1.531,898,1.12,952,1.17,1154,1.139,1254,2.672,1333,1.531,1335,7.453,1352,1.247,1634,8.596,1644,4.299,1645,1.791,1646,1.791,1647,1.791,1648,1.791,1649,1.791,1650,1.791,1651,1.791,1652,7.198,1653,5.226,1654,7.198,1655,4.308,1656,5.992,1657,1.093,1658,2.194,1659,1.401,1660,1.791,1661,5.992,1662,1.791,1663,2.124,1664,4.308,1665,1.791,1666,1.219,1667,1.206,1668,5.226,1669,8.478,1670,8.104,1671,6.254,1672,1.791,1673,1.401,1674,1.531,1675,1.791,1676,1.791,1677,1.791,1678,4.308,1679,3.188,1680,3.188,1681,1.791,1682,3.188,1683,1.791,1684,3.188,1685,1.17,1686,3.188,1687,4.308,1688,3.188,1689,4.308,1690,1.791,1691,1.791,1692,3.188,1693,3.188,1694,3.188,1695,3.188,1696,3.188,1697,3.188,1698,3.188,1699,1.791,1700,3.188,1701,1.791,1702,1.791]],["component/16",[68,0.364]],["title/17-1",[0,19.276,159,36.111,179,31.574]],["name/17-1",[]],["text/17-1",[]],["component/17-1",[]],["title/17",[]],["name/17",[1703,2.129]],["text/17",[14,2.264,55,4.502,64,3.183,69,4.331,70,3.647,78,3.408,84,4.004,87,2.58,97,2.58,102,3.982,109,4.593,110,5.04,111,3.982,115,2.766,129,3.321,159,2.817,160,2.766,165,3.549,167,2.834,168,3.759,170,4.253,171,4.253,173,4.05,174,4.567,177,3.447,188,5.725,193,3.751,200,2.817,351,2.231,354,3.9,366,3.085,373,3.683,374,3.759,376,2.531,388,2.766,499,3.385,547,4.707,552,3.136,561,2.593,568,3.89,578,2.352,606,2.735,670,2.992,716,3.315,718,4.935,719,5.853,754,3.89,830,3.191,838,4.253,839,4.05,840,4.05,970,2.783,1205,4.05,1496,1.742,1631,2.463,1634,3.549,1644,3.22,1704,2.909,1705,1.959,1706,3.549,1707,4.05,1708,4.05,1709,3.085]],["component/17",[68,0.364]],["title/18-1",[1710,69.775]],["name/18-1",[]],["text/18-1",[]],["component/18-1",[]],["title/18-2",[355,51.827]],["name/18-2",[]],["text/18-2",[]],["component/18-2",[]],["title/18-3",[1255,62.856]],["name/18-3",[]],["text/18-3",[]],["component/18-3",[]],["title/18",[68,19.528,355,43.207]],["name/18",[355,1.237]],["text/18",[4,3.346,5,1.443,7,3.02,8,1.888,18,5.816,19,3.619,23,2.192,24,4.613,34,3.033,56,2.867,60,4.236,64,1.482,68,2.894,71,1.925,74,2.291,76,2.236,95,3.02,113,2.919,128,2.169,156,2.039,176,4.275,177,2.986,181,3.468,182,2.619,184,1.963,188,4.15,189,2.867,190,1.955,192,2.013,194,4.639,200,2.333,203,2.93,210,2.803,251,2.239,255,2.718,313,2.442,325,4.504,327,4.067,339,3.777,353,2.031,365,2.106,373,2.049,415,1.948,420,1.861,466,2.347,473,1.402,479,4.607,480,3.858,501,4.148,535,1.988,542,2.347,549,2.46,554,3.222,557,2.643,577,3.395,578,3.725,616,3.064,714,2.834,762,3.395,802,4.95,804,2.409,812,3.696,818,4.612,859,4.365,950,2.442,966,4.886,968,2.116,969,3.02,970,3.589,977,4.465,978,3.752,979,5.953,980,2.619,981,3.522,982,2.902,983,5.842,984,3.752,985,3.284,986,2.393,987,3.284,988,3.522,989,3.522,990,3.222,991,3.752,992,3.752,993,2.978,994,3.752,998,5.223,1060,3.222,1099,5.842,1106,6.615,1107,6.615,1168,4.153,1269,2.718,1316,2.692,1317,2.555,1339,4.011,1379,3.113,1704,2.409,1710,3.222,1711,4.119,1712,4.119,1713,4.119,1714,3.354,1715,4.119,1716,4.119,1717,4.119,1718,3.522,1719,4.119,1720,4.119,1721,3.752,1722,4.119,1723,4.119,1724,4.119,1725,3.165,1726,3.752,1727,4.119,1728,3.222,1729,3.064,1730,3.113,1731,3.222,1732,2.939,1733,3.222,1734,2.643,1735,4.119]],["component/18",[68,0.364]],["title/19-1",[0,13.5,71,20.868,72,19.887,88,22.016,179,22.113,254,23.762]],["name/19-1",[]],["text/19-1",[]],["component/19-1",[]],["title/19-2",[73,35.891,88,31.435,180,28.296]],["name/19-2",[]],["text/19-2",[]],["component/19-2",[]],["title/19-3",[77,37.293,128,33.579,163,29.455]],["name/19-3",[]],["text/19-3",[]],["component/19-3",[]],["title/19",[]],["name/19",[1736,2.129]],["text/19",[9,1.926,19,1.934,40,1.668,42,4.6,50,3.9,53,1.77,57,1.794,74,1.97,75,4.325,78,1.63,88,2.806,121,6.315,125,2.77,128,6.067,134,2.508,137,1.54,155,3.045,163,3.297,167,5.727,179,1.754,180,4.638,182,3.62,183,2.272,188,4.685,190,2.702,193,1.794,201,3.427,206,4.556,207,2.527,208,2.131,211,5.294,220,3.541,222,5.69,224,4.846,226,4.846,228,5.069,229,6.655,230,4.846,233,6.393,234,6.176,235,6.655,236,6.655,237,6.988,238,6.393,245,3.793,254,1.885,256,3.166,258,4.121,259,3.602,260,5.447,261,3.028,263,2.884,264,4.867,265,5.483,266,6.101,267,7.479,268,6.101,269,4.635,271,1.846,272,6.176,273,2.597,274,8.935,275,3.028,276,4.535,277,3.028,278,6.988,280,5.967,281,3.028,283,3.028,285,3.028,287,2.044,288,2.315,289,3.53,290,2.233,291,2.87,292,2.677,294,3.028,295,3.028,346,2.315,414,1.97,714,2.437,955,2.677,1336,2.527,1337,2.233,1341,5.185,1342,3.226,1343,3.226,1344,3.226,1345,3.226,1346,3.226,1347,3.226]],["component/19",[68,0.364]],["title/20-1",[0,13.5,71,20.868,72,19.887,1737,44.661,1738,44.661,1739,44.661]],["name/20-1",[]],["text/20-1",[]],["component/20-1",[]],["title/20",[]],["name/20",[1740,2.129]],["text/20",[]],["component/20",[68,0.364]],["title/21-1",[0,16.87,71,26.078,72,24.852,1741,29.093]],["name/21-1",[]],["text/21-1",[]],["component/21-1",[]],["title/21-2",[73,41.861,1742,74.376]],["name/21-2",[]],["text/21-2",[]],["component/21-2",[]],["title/21-3",[77,43.496,1743,74.376]],["name/21-3",[]],["text/21-3",[]],["component/21-3",[]],["title/21-4",[83,44.735,1744,43.496]],["name/21-4",[]],["text/21-4",[]],["component/21-4",[]],["title/21-5",[254,39.571,826,50.076]],["name/21-5",[]],["text/21-5",[]],["component/21-5",[]],["title/21-6",[13,30.425,828,51.773]],["name/21-6",[]],["text/21-6",[]],["component/21-6",[]],["title/21",[]],["name/21",[1741,1.11]],["text/21",[]],["component/21",[68,0.364]],["title/22-1",[0,22.482,719,44.412]],["name/22-1",[]],["text/22-1",[]],["component/22-1",[]],["title/22-2",[73,35.891,129,28.599,719,38.078]],["name/22-2",[]],["text/22-2",[]],["component/22-2",[]],["title/22-3",[77,37.293,366,39.548,719,38.078]],["name/22-3",[]],["text/22-3",[]],["component/22-3",[]],["title/22-4",[83,38.355,718,42.494,719,38.078]],["name/22-4",[]],["text/22-4",[]],["component/22-4",[]],["title/22",[]],["name/22",[719,1.271]],["text/22",[0,2.553,8,1.72,19,2.708,32,1.141,57,1.092,58,1.297,62,1.819,64,0.775,66,2.573,67,1.063,76,1.414,78,0.992,87,4.382,96,4.174,104,4.893,113,0.981,115,2.772,119,1.654,121,4.242,122,3.824,124,1.451,128,3.558,129,3.03,137,5.197,146,1.966,151,1.858,156,1.067,160,4.125,161,3.603,163,0.996,174,3.828,177,1.003,178,2.18,181,1.165,184,2.375,185,2.09,188,3.875,190,1.023,191,1.011,207,2.678,208,2.257,211,3.913,219,1.102,220,2.583,222,2.612,224,2.225,230,2.955,248,3.077,251,1.172,276,4.969,288,4.415,289,3.091,301,2.554,303,6.028,304,5.464,308,1.087,336,2.788,353,5.17,354,5.523,355,2.18,356,2.805,357,4.149,358,2.554,359,5.106,360,5.047,361,5.245,366,4.944,367,1.278,376,2.536,395,4.688,437,1.538,443,1.436,510,1.172,542,1.228,552,1.359,565,2.501,578,1.774,597,1.141,598,2.138,631,4.253,689,1.436,713,1.316,718,2.501,719,6.799,731,2.612,738,1.011,741,3.055,744,2.805,745,1.436,761,1.159,790,1.348,872,4.94,877,4.26,950,2.225,965,1.124,970,2.788,1034,3.556,1356,2.225,1408,2.678,1745,2.935,1746,4.662,1747,1.755,1748,6.493,1749,1.287,1750,3.418,1751,4.435,1752,3.304,1753,2.644,1754,4.37,1755,3.208,1756,2.935,1757,3.208,1758,3.753,1759,3.418,1760,3.208,1761,3.208,1762,5.285,1763,3.708,1764,3.197,1765,5.698,1766,3.753,1767,6.928,1768,3.753,1769,3.898,1770,5.8,1771,3.898,1772,3.898,1773,3.898,1774,3.654,1775,2.156,1776,3.898,1777,5.962,1778,2.751,1779,2.678,1780,3.418,1781,1.755,1782,1.686,1783,4.821,1784,1.629,1785,1.467,1786,1.686,1787,1.843]],["component/22",[68,0.364]],["title/23-1",[0,13.5,115,24.838,354,23.517,552,28.158,718,29.761,719,26.669]],["name/23-1",[]],["text/23-1",[]],["component/23-1",[]],["title/23",[]],["name/23",[718,1.419]],["text/23",[0,2.906,19,2.369,23,0.801,27,0.77,32,0.797,34,1.769,50,0.614,57,0.763,62,2.226,64,1.652,66,2.371,67,0.743,71,1.748,76,0.428,78,1.256,80,3.311,87,2.759,96,2.585,100,1.025,102,1.467,104,3.03,109,1.693,111,1.467,113,0.685,115,1.518,119,2.344,121,2.83,122,2.4,128,0.793,136,0.927,137,4.855,146,0.789,147,0.778,151,2.601,152,2.39,156,0.746,157,2.218,158,3.299,160,3.307,161,1.089,163,0.696,164,1.641,174,2.746,181,0.814,184,2.835,185,1.926,188,4.542,190,1.296,191,0.707,193,3.941,206,1.904,211,2.611,219,0.77,220,1.182,222,2.604,224,1.618,226,1.618,248,1.409,251,0.819,256,0.838,271,0.785,276,4.542,288,3.001,289,0.934,298,1.755,301,1.025,302,1.004,303,5.037,304,3.154,305,1.801,309,0.763,313,0.893,317,0.9,327,1.409,333,1.121,336,0.843,349,0.975,353,4.421,354,5.159,355,1.585,356,1.536,358,1.857,360,3.126,361,5.355,366,0.934,368,0.806,376,1.389,395,3.148,406,1.104,417,0.869,427,2.097,432,0.797,433,1.288,473,0.513,474,0.966,478,3.659,479,0.881,485,1.783,489,1.121,552,6.384,563,2.359,564,1.728,565,1.819,570,3.749,571,1.104,578,1.29,597,0.797,598,1.555,604,0.95,605,2.222,614,2.222,616,2.03,631,1.075,655,2.804,659,1.004,676,0.718,680,0.913,682,1.288,689,1.004,713,2.284,718,4.932,719,4.647,744,2.585,747,1.201,753,1.819,761,0.81,762,0.797,774,0.707,782,2.081,792,3.703,825,3.927,830,3.413,841,2.333,842,3.407,850,1.178,862,1.372,872,4.328,875,4.183,877,3.749,878,3.367,879,3.367,881,3.367,916,2.069,950,0.893,965,4.057,970,2.093,1034,2.669,1164,0.848,1170,1.014,1196,1.666,1226,1.389,1301,1.138,1348,2.176,1356,0.893,1373,0.958,1384,1.372,1392,1.801,1658,3.661,1709,0.934,1745,0.887,1747,1.226,1748,3.9,1751,2.03,1752,2.402,1754,2.001,1756,1.178,1757,1.288,1760,1.288,1761,1.288,1762,3.592,1763,2.783,1764,2.4,1765,4.989,1767,6.086,1769,2.926,1770,4.651,1771,2.926,1772,2.926,1773,2.926,1774,2.743,1779,3.277,1781,1.226,1782,1.178,1783,6.216,1784,1.138,1785,1.025,1786,1.178,1788,1.506,1789,1.506,1790,7.828,1791,4.548,1792,3.407,1793,3.927,1794,2.134,1795,2.486,1796,2.486,1797,3.741,1798,3.407,1799,2.729,1800,2.729,1801,2.827,1802,1.506,1803,2.729,1804,1.506,1805,1.104,1806,1.506,1807,0.994,1808,2.333,1809,1.226,1810,1.288,1811,3.198,1812,1.372,1813,1.372,1814,2.486,1815,1.288,1816,2.486,1817,1.372,1818,1.288,1819,4.593,1820,1.506,1821,1.506,1822,1.506,1823,2.729,1824,1.326,1825,2.333,1826,2.729,1827,2.729,1828,1.506,1829,3.407,1830,3.741,1831,2.729,1832,2.729,1833,2.729,1834,1.506,1835,2.729,1836,2.729,1837,2.729,1838,1.506,1839,2.729,1840,1.506,1841,2.729,1842,1.104,1843,1.506,1844,1.506,1845,1.506,1846,1.372,1847,1.506,1848,1.506,1849,1.429,1850,1.372,1851,1.372,1852,2.333,1853,2.729,1854,1.506]],["component/23",[68,0.364]],["title/24-1",[0,16.87,71,26.078,72,24.852,1855,47.712]],["name/24-1",[]],["text/24-1",[]],["component/24-1",[]],["title/24-2",[64,20.078,73,31.411,1128,36.822,1856,42.171]],["name/24-2",[]],["text/24-2",[]],["component/24-2",[]],["title/24",[]],["name/24",[1855,1.82]],["text/24",[]],["component/24",[68,0.364]],["title/25-1",[0,16.87,71,26.078,72,24.852,1857,55.81]],["name/25-1",[]],["text/25-1",[]],["component/25-1",[]],["title/25",[]],["name/25",[1858,2.129]],["text/25",[]],["component/25",[68,0.364]],["title/26-1",[0,22.482,109,46.127]],["name/26-1",[]],["text/26-1",[]],["component/26-1",[]],["title/26-2",[73,35.891,109,39.548,1706,45.497]],["name/26-2",[]],["text/26-2",[]],["component/26-2",[]],["title/26-3",[77,32.638,109,34.612,1706,39.818,1707,45.439]],["name/26-3",[]],["text/26-3",[]],["component/26-3",[]],["title/26-4",[83,33.568,109,34.612,193,28.266,200,31.604]],["name/26-4",[]],["text/26-4",[]],["component/26-4",[]],["title/26",[]],["name/26",[109,1.32]],["text/26",[0,2.608,10,1.127,13,1.348,18,1.059,19,2.086,23,3.912,27,2.269,28,0.803,34,2.099,50,2.999,53,0.929,57,1.669,58,1.118,59,0.933,61,2.413,62,1.597,64,1.597,65,0.994,66,0.96,67,0.916,72,1.467,75,1.91,76,2.224,78,3.127,82,2.238,96,4.647,97,1.709,100,1.265,101,1.927,102,6.461,109,4.214,110,3.654,115,1.034,119,3.453,121,4.393,123,4.31,124,4.136,129,1.991,137,4.335,146,1.727,147,4.624,151,2.534,152,2.468,153,2.647,157,1.102,158,3.81,161,2.382,177,0.865,184,3.239,185,1.382,188,3.186,190,0.883,191,2.082,192,2.624,193,4.182,196,1.791,200,1.866,201,1.861,203,2.027,204,1.265,206,1.677,210,1.265,211,3.335,213,0.775,224,5.913,230,3.184,248,3.171,257,1.31,267,1.454,290,2.078,301,2.243,304,1.102,308,3.707,312,2.294,317,1.11,330,2.577,335,1.514,337,1.693,351,0.834,353,4.691,356,3.022,357,1.844,364,2.174,365,1.685,370,1.215,371,1.514,376,0.946,390,3.614,400,1.279,404,1.363,414,1.034,438,7.08,450,2.243,464,1.239,468,1.511,473,0.633,478,3.78,486,1.193,561,1.718,564,2.48,569,1.454,570,1.172,571,1.363,578,0.879,598,1.059,599,0.95,628,0.979,657,2.596,715,3.794,748,1.833,749,1.227,761,1,778,4.821,798,3.001,846,1.31,898,1.162,951,1.252,985,1.482,1017,2.872,1153,1.153,1164,1.046,1196,1.135,1236,1.514,1300,1.454,1356,2.632,1658,2.268,1706,5.891,1707,2.683,1709,2.044,1746,3.471,1749,1.968,1774,1.363,1783,1.326,1793,3.794,1794,1.454,1801,5.556,1850,1.693,1859,5.252,1860,4.372,1861,1.693,1862,5.556,1863,5.921,1864,1.454,1865,1.693,1866,3.354,1867,3.794,1868,2.294,1869,2.817,1870,1.693,1871,1.693,1872,1.693,1873,1.693,1874,1.279,1875,1.693,1876,1.693,1877,2.873,1878,4.441,1879,1.204,1880,1.454,1881,5.135,1882,10.948,1883,2.243,1884,3.295,1885,2.683,1886,1.859,1887,2.577,1888,1.859,1889,5.37,1890,6.143,1891,1.693,1892,4.438,1893,3.354,1894,4.438,1895,3.295,1896,3.001,1897,1.693,1898,4.804,1899,1.693,1900,1.693,1901,1.514,1902,1.859,1903,1.859,1904,1.859,1905,1.859,1906,1.859,1907,1.859,1908,1.859,1909,1.859,1910,1.859,1911,1.693,1912,1.859,1913,1.859,1914,1.859,1915,1.589,1916,1.589,1917,1.215,1918,1.859,1919,1.265,1920,1.514,1921,1.859,1922,1.326,1923,1.294,1924,1.693]],["component/26",[68,0.364]],["title/27-1",[0,16.87,71,26.078,72,24.852,1709,34.612]],["name/27-1",[]],["text/27-1",[]],["component/27-1",[]],["title/27-2",[73,41.861,1925,63.585]],["name/27-2",[]],["text/27-2",[]],["component/27-2",[]],["title/27-3",[1926,60.511,1927,58.078,1928,63.769]],["name/27-3",[]],["text/27-3",[]],["component/27-3",[]],["title/27-4",[1929,60.511,1930,51.919,1931,63.769]],["name/27-4",[]],["text/27-4",[]],["component/27-4",[]],["title/27-5",[1932,60.511,1933,51.919,1934,63.769]],["name/27-5",[]],["text/27-5",[]],["component/27-5",[]],["title/27-6",[1935,80.145,1936,74.376]],["name/27-6",[]],["text/27-6",[]],["component/27-6",[]],["title/27-7",[559,27.756,560,43.649,1709,34.612,1937,60.138]],["name/27-7",[]],["text/27-7",[]],["component/27-7",[]],["title/27-8",[77,43.496,1938,67.738]],["name/27-8",[]],["text/27-8",[]],["component/27-8",[]],["title/27-9",[83,44.735,1939,67.738]],["name/27-9",[]],["text/27-9",[]],["component/27-9",[]],["title/27-10",[75,27.441,76,18.099,86,42.494]],["name/27-10",[]],["text/27-10",[]],["component/27-10",[]],["title/27",[]],["name/27",[1709,1.32]],["text/27",[0,3.26,2,0.898,8,1.671,13,0.597,15,0.884,17,1.805,19,3.005,20,0.802,23,1.411,27,0.746,34,1.254,47,1.016,50,2.375,53,1.325,55,0.743,57,0.739,59,1.331,62,0.707,64,1.613,65,0.781,68,0.383,74,1.475,75,0.628,76,2.173,78,0.672,80,1.259,90,1.055,106,0.822,119,1.976,121,4.571,125,6.92,128,0.769,137,4.21,151,2.982,152,2.559,160,5.052,167,0.832,174,0.753,179,1.805,180,2.584,181,0.789,182,1.687,183,2.338,184,0.696,188,3.252,190,2.47,191,2.103,192,0.713,193,1.343,201,1.528,203,0.667,205,3.54,206,1.35,211,0.716,213,2.168,215,4.544,216,1.016,249,0.993,251,1.442,253,0.865,257,1.028,259,1.169,287,2.103,291,0.736,305,0.963,308,0.736,309,0.739,313,0.865,320,0.822,325,1.846,336,2.039,346,0.954,351,1.189,368,0.781,376,1.35,385,2.846,414,0.812,415,0.69,417,3.002,431,3.947,443,1.767,445,1.733,465,1.659,468,3.139,473,0.903,478,0.898,479,0.854,481,4.669,486,0.936,494,1.103,499,0.993,503,0.983,508,0.973,524,1.466,542,0.832,547,1.411,549,3.106,554,2.851,559,1.319,560,4.069,564,0.674,577,0.773,578,0.69,596,2.074,633,0.993,634,1.142,655,1.619,676,0.696,679,0.865,698,1.329,703,0.963,713,0.891,735,1.892,738,1.71,751,1.004,799,0.954,817,1.404,818,2.146,845,4.433,855,0.92,861,1.248,898,1.658,970,2.039,972,1.016,1002,2.697,1041,4.738,1094,0.993,1128,2.958,1143,0.891,1168,0.945,1172,4.202,1184,2.851,1191,0.913,1197,1.164,1209,0.983,1226,0.743,1291,3.199,1320,0.983,1335,3.085,1339,0.913,1352,1.016,1356,2.161,1376,1.103,1408,1.041,1657,0.891,1708,1.188,1709,3.226,1726,1.329,1733,2.851,1879,2.36,1885,2.967,1896,1.329,1925,9.472,1927,4.738,1930,4.742,1933,2.967,1938,4.738,1939,4.738,1940,1.46,1941,4.981,1942,5.558,1943,2.652,1944,1.285,1945,6.368,1946,1.46,1947,1.248,1948,1.329,1949,3.507,1950,1.329,1951,1.46,1952,1.46,1953,0.983,1954,1.46,1955,1.46,1956,1.46,1957,1.46,1958,1.188,1959,1.46,1960,1.46,1961,1.216,1962,1.248,1963,1.188,1964,1.385,1965,1.46,1966,1.248,1967,1.892,1968,0.854,1969,0.92,1970,4.738,1971,9.084,1972,5.202,1973,7.999,1974,9.084,1975,7.285,1976,3.645,1977,3.645,1978,7.999,1979,7.999,1980,4.484,1981,1.46,1982,2.652,1983,2.652,1984,1.46,1985,6.368,1986,7.656,1987,10.018,1988,7.656,1989,4.484,1990,5.202,1991,3.645,1992,1.46,1993,2.652,1994,3.645,1995,1.46,1996,3.645,1997,3.645,1998,3.645,1999,3.645,2000,3.645,2001,3.645,2002,3.645,2003,7.274,2004,7.274,2005,3.645,2006,1.46,2007,1.46,2008,1.46,2009,3.645,2010,3.645,2011,1.46,2012,2.652,2013,3.645,2014,1.46,2015,1.46,2016,1.46,2017,1.46,2018,1.46,2019,1.46,2020,1.46,2021,5.824,2022,5.824,2023,2.652,2024,2.652,2025,1.46,2026,1.46,2027,1.248,2028,1.46]],["component/27",[68,0.364]],["title/28-1",[0,22.482,110,50.614]],["name/28-1",[]],["text/28-1",[]],["component/28-1",[]],["title/28-2",[73,35.891,110,43.395,129,28.599]],["name/28-2",[]],["text/28-2",[]],["component/28-2",[]],["title/28-3",[77,37.293,102,34.29,110,43.395]],["name/28-3",[]],["text/28-3",[]],["component/28-3",[]],["title/28-4",[517,63.585,2029,56.2]],["name/28-4",[]],["text/28-4",[]],["component/28-4",[]],["title/28-5",[518,63.585,1866,56.2]],["name/28-5",[]],["text/28-5",[]],["component/28-5",[]],["title/28",[]],["name/28",[110,1.449]],["text/28",[0,1.994,8,1.447,9,3.586,19,1.761,32,2.744,34,1.493,50,2.115,55,1.607,57,1.599,58,1.899,59,1.584,61,2.819,62,1.53,64,1.136,65,1.689,67,1.556,76,1.472,78,1.453,96,4.298,97,3.422,102,4.535,110,2.149,115,3.669,119,1.391,121,3.51,124,5.679,129,3.783,134,1.391,146,3.456,161,5.521,180,1.401,184,1.505,185,2.766,188,3.686,190,1.499,192,3.224,196,3.586,201,1.324,211,3.238,213,2.16,224,7.093,251,1.716,253,1.872,256,2.883,276,3.868,290,1.991,307,2.626,309,1.599,312,2.198,320,1.777,325,1.599,334,4.221,336,3.691,346,2.063,353,4.158,357,4.719,368,1.689,376,4.613,385,1.543,395,5.294,400,2.173,404,2.315,415,1.493,438,4.592,450,3.528,473,2.246,486,3.326,565,2.104,569,4.055,570,3.269,571,3.801,618,2.875,621,4.433,628,1.663,653,2.571,662,2.875,681,2.104,774,3.095,778,1.943,780,2.224,784,2.631,786,1.716,802,1.622,951,3.491,1017,2.773,1161,2.063,1164,2.918,1269,2.083,1326,2.426,1377,3.918,1379,2.386,1631,1.563,1745,5.338,1746,5.973,1747,2.571,1748,7.332,1749,3.939,1750,2.875,1783,3.699,1794,4.055,1851,2.875,1862,7.827,1863,3.918,1866,6.373,1867,2.699,1868,6.311,1869,6.529,1870,4.722,1871,4.722,1872,2.875,1873,4.722,1874,2.173,1875,4.722,1876,2.875,1881,3.918,1883,2.149,1893,5.771,1898,4.055,1968,1.846,2029,7.827,2030,5.371,2031,2.699,2032,7.798,2033,2.699,2034,4.722,2035,2.386,2036,5.185,2037,2.198,2038,4.433,2039,3.157,2040,3.157,2041,2.699,2042,3.157]],["component/28",[68,0.364]],["title/29-1",[0,19.276,501,33.579,744,35.891]],["name/29-1",[]],["text/29-1",[]],["component/29-1",[]],["title/29-2",[151,20.809,349,36.129,501,29.388,744,31.411]],["name/29-2",[]],["text/29-2",[]],["component/29-2",[]],["title/29",[]],["name/29",[2043,2.129]],["text/29",[0,3.2,9,0.744,10,0.83,17,1.702,19,2.513,27,1.279,31,1.267,32,4.552,42,0.77,50,2.275,53,0.684,55,0.697,57,0.693,61,0.744,62,2.703,64,0.493,66,0.707,67,1.703,75,0.589,76,1.41,78,1.589,80,1.64,82,1.261,87,0.71,96,0.77,102,3.545,106,1.944,113,1.941,115,1.391,119,1.88,121,1.838,122,0.878,123,1.25,128,0.721,129,2.228,133,0.977,137,3.366,146,1.81,151,1.288,152,2.241,153,0.675,156,4.769,157,0.812,160,0.761,163,2.577,174,1.291,177,0.637,180,0.607,184,3.345,185,0.574,186,0.806,188,4.305,189,1.544,190,2.358,191,0.642,192,1.688,193,0.693,201,1.448,203,1.949,206,0.697,207,1.785,208,2.078,211,0.672,213,0.57,216,0.953,219,4.633,220,1.848,226,2.048,228,0.849,247,1.957,255,0.903,260,0.912,298,0.642,305,0.903,307,0.693,308,1.741,309,0.693,312,0.953,317,0.817,320,0.77,336,0.766,352,1.65,353,2.75,355,0.795,356,0.77,360,0.932,361,3.658,365,1.279,367,4.16,398,0.83,405,1.619,415,1.633,417,2.462,443,4.393,445,4.308,453,0.806,459,1.13,465,1.138,466,0.78,473,0.466,474,0.878,485,1.192,486,0.878,501,2.247,559,0.681,564,0.632,566,1.115,572,1.004,573,0.953,577,2.629,578,0.647,594,3.128,598,0.78,599,2.181,604,0.863,628,1.317,649,1.635,654,0.912,656,0.661,668,2.178,670,3.355,680,1.516,691,1.034,697,1.89,703,0.903,716,0.912,731,2.97,735,0.977,736,1.091,737,1.034,738,1.173,739,5.764,744,6.44,745,7.317,748,1.391,753,5.891,760,1.034,761,0.736,774,2.33,792,1.741,808,2.302,817,0.725,819,1.004,820,2.139,838,1.17,839,1.115,840,1.115,841,1.17,864,2.139,865,1.17,870,2.278,872,3.577,873,2.302,874,4.486,877,0.863,882,3.277,891,3.146,896,1.17,899,0.953,901,1.516,916,3.084,940,3.033,956,2.302,965,0.714,968,0.703,995,0.977,1016,0.856,1128,1.65,1161,0.895,1182,0.932,1184,1.957,1226,1.758,1254,3.081,1274,1.721,1324,1.004,1339,0.856,1495,0.977,1496,1.954,1568,1.004,1631,1.239,1633,1.922,1778,1.004,1783,1.785,1792,1.247,1805,1.004,1808,1.17,1860,2.037,1919,0.932,1953,0.922,1962,1.17,1968,0.801,2044,1.034,2045,3.454,2046,1.369,2047,1.369,2048,1.369,2049,1.369,2050,4.968,2051,0.964,2052,3.146,2053,1.369,2054,1.369,2055,1.369,2056,1.369,2057,1.369,2058,5.279,2059,1.247,2060,3.454,2061,1.369,2062,1.369,2063,1.369,2064,1.369,2065,2.502,2066,2.502,2067,2.502,2068,2.278,2069,2.502,2070,2.502,2071,2.502,2072,2.502,2073,2.502,2074,2.502,2075,2.502,2076,1.115,2077,2.502,2078,1.369,2079,2.502,2080,2.502,2081,2.502,2082,1.369,2083,1.369,2084,5.891,2085,1.369,2086,4.267,2087,1.004,2088,1.369,2089,1.369,2090,1.369,2091,1.369,2092,1.17,2093,1.369,2094,1.034,2095,1.369,2096,1.17,2097,1.369,2098,1.17,2099,1.369,2100,1.369,2101,1.369,2102,1.004,2103,2.502,2104,0.977,2105,1.369,2106,0.977,2107,1.369,2108,1.369,2109,3.454,2110,2.139,2111,2.139,2112,3.128,2113,4.267,2114,4.267,2115,2.502,2116,2.502,2117,3.454,2118,3.454,2119,2.502,2120,2.502,2121,2.502,2122,1.369,2123,1.369,2124,1.369,2125,3.454,2126,1.369,2127,1.369,2128,1.369,2129,1.369,2130,1.369,2131,2.502,2132,1.369,2133,1.369,2134,2.502,2135,1.369,2136,1.034,2137,1.115,2138,0.953,2139,0.903,2140,1.369,2141,1.369,2142,1.247,2143,2.037,2144,1.369,2145,1.369,2146,1.369,2147,2.502,2148,1.369,2149,1.369,2150,1.369,2151,1.369,2152,1.369,2153,0.977,2154,1.17,2155,8.083,2156,2.502,2157,2.502,2158,4.363,2159,5.579,2160,2.502,2161,1.299,2162,1.369,2163,1.018,2164,1.034,2165,2.502]],["component/29",[68,0.364]],["title/30-1",[0,19.276,179,31.574,501,33.579]],["name/30-1",[]],["text/30-1",[]],["component/30-1",[]],["title/30-2",[151,23.776,349,41.282,501,33.579]],["name/30-2",[]],["text/30-2",[]],["component/30-2",[]],["title/30",[]],["name/30",[2166,2.129]],["text/30",[4,4.81,5,1.717,18,6.453,19,2.979,64,1.764,70,5.371,72,3.262,74,2.727,76,2.079,78,4.037,80,2.328,87,2.543,91,3.647,92,5.788,97,2.543,106,2.759,128,2.582,174,2.531,177,4.083,179,5.411,180,4.622,189,3.92,213,3.053,219,2.507,220,2.124,226,2.907,252,7.266,288,3.204,289,5.44,291,2.472,303,3.337,306,3.374,349,5.679,351,4.365,353,2.417,373,2.438,417,2.83,420,2.215,473,2.494,489,5.451,499,3.337,501,5.754,547,3.898,613,3.992,697,3.705,716,4.882,744,4.937,745,3.267,754,3.835,763,5.965,765,6.449,809,4.465,810,4.465,819,3.594,823,2.665,839,3.992,840,3.992,854,3.594,1018,3.337,1060,3.835,1168,3.174,1191,4.581,1322,3.705,1442,3.337,1709,3.041,1925,6.264,1969,4.619,2138,6.774,2167,4.465,2168,4.903,2169,4.192,2170,4.903,2171,4.903,2172,3.118,2173,4.903,2174,4.903,2175,4.903,2176,4.652,2177,6.264,2178,3.835,2179,3.992,2180,4.903,2181,5.381,2182,4.465,2183,4.903]],["component/30",[68,0.364]],["title/31-1",[68,19.528,1116,55.331]],["name/31-1",[]],["text/31-1",[]],["component/31-1",[]],["title/31-2",[2184,65.403]],["name/31-2",[]],["text/31-2",[]],["component/31-2",[]],["title/31-3",[68,16.743,1734,40.91,2185,37.293]],["name/31-3",[]],["text/31-3",[]],["component/31-3",[]],["title/31-4",[1493,36.566,2185,37.293,2186,42.494]],["name/31-4",[]],["text/31-4",[]],["component/31-4",[]],["title/31-5",[177,25.977,2185,32.638,2187,31.604,2188,33.568]],["name/31-5",[]],["text/31-5",[]],["component/31-5",[]],["title/31-6",[113,40.597]],["name/31-6",[]],["text/31-6",[]],["component/31-6",[]],["title/31-7",[259,32.773,2189,48.149]],["name/31-7",[]],["text/31-7",[]],["component/31-7",[]],["title/31",[68,19.528,1116,55.331]],["name/31",[68,0.309,1116,0.875]],["text/31",[4,2.168,5,2.644,19,3.598,20,2.806,21,1.982,29,3.628,40,2.404,55,2.597,64,3.811,68,2.781,69,4.415,72,2.273,75,2.197,76,1.449,78,2.349,91,3.797,93,3.368,106,2.873,111,2.745,148,2.76,151,1.903,164,3.07,176,3.402,179,2.527,196,2.775,200,2.891,203,2.331,309,2.585,317,3.048,327,2.635,354,3.975,373,2.539,376,2.597,415,2.414,420,2.306,441,3.992,442,3.992,445,3.336,459,3.41,472,2.927,547,4.017,552,4.76,558,3.093,559,3.755,597,2.702,628,2.688,657,2.985,707,3.512,762,2.702,770,2.702,802,5.442,812,2.395,830,4.843,916,2.822,1116,3.797,1252,3.474,1337,4.76,1493,4.329,1685,3.336,1728,3.992,1729,3.797,1730,3.857,1731,3.992,1734,3.275,1749,3.048,1790,4.156,1791,6.454,1807,3.368,1825,4.364,1949,3.992,2037,3.553,2185,5.254,2186,5.031,2187,5.087,2188,5.971,2190,4.07,2191,3.141,2192,3.992,2193,4.364,2194,3.246,2195,3.742,2196,3.996,2197,3.642,2198,3.642,2199,4.364,2200,4.156,2201,4.364,2202,6.454,2203,3.275,2204,3.141,2205,3.992,2206,4.156,2207,3.402,2208,4.386,2209,5.816,2210,4.649,2211,4.649,2212,3.093,2213,4.649,2214,4.649,2215,4.156,2216,4.364,2217,4.156,2218,4.156]],["component/31",[68,0.364]],["title/32-1",[68,19.528,2190,59.3]],["name/32-1",[]],["text/32-1",[]],["component/32-1",[]],["title/32-2",[2184,65.403]],["name/32-2",[]],["text/32-2",[]],["component/32-2",[]],["title/32-3",[68,16.743,1734,40.91,2185,37.293]],["name/32-3",[]],["text/32-3",[]],["component/32-3",[]],["title/32-4",[2185,43.496,2187,42.117]],["name/32-4",[]],["text/32-4",[]],["component/32-4",[]],["title/32-5",[113,40.597]],["name/32-5",[]],["text/32-5",[]],["component/32-5",[]],["title/32-6",[4,23.704,5,19.545,676,26.601,2219,55.81]],["name/32-6",[]],["text/32-6",[]],["component/32-6",[]],["title/32-7",[203,22.661,802,25.488,999,37.492,1118,31.023,1181,31.023]],["name/32-7",[]],["text/32-7",[]],["component/32-7",[]],["title/32",[68,19.528,2190,59.3]],["name/32",[68,0.309,2190,0.938]],["text/32",[1,4.02,4,3.693,5,3.513,12,1.748,13,1.617,14,1.798,19,3.407,20,3.414,21,2.411,29,4.541,33,4.581,40,2.925,53,3.102,55,3.16,57,2.002,58,2.377,60,4.125,64,4.021,67,1.948,68,2.853,72,1.76,76,2.177,82,1.992,106,2.224,129,1.772,148,4.148,152,1.588,156,1.957,176,4.138,177,3.571,179,3.075,184,2.96,188,4.266,191,1.854,213,2.588,300,2.535,313,2.343,325,2.002,327,3.96,349,2.559,373,3.815,415,2.936,420,3.465,459,3.465,464,2.634,472,2.266,479,3.632,480,2.377,501,2.081,510,2.149,577,2.092,578,2.936,599,2.021,676,2.96,748,3.454,761,2.125,762,4.06,802,5.742,812,2.913,818,2.972,897,2.82,898,2.471,943,2.82,966,2.451,968,2.03,972,2.751,982,2.784,1006,2.311,1017,3.322,1019,2.69,1106,2.94,1107,2.94,1118,4.797,1131,3.379,1177,2.986,1316,4.058,1327,2.583,1379,2.986,1704,3.632,1728,4.857,1729,4.62,1730,4.693,1731,6.8,1732,2.82,1741,2.06,1944,3.479,2181,2.185,2187,4.344,2190,4.952,2191,2.432,2192,3.091,2194,2.513,2196,2.092,2198,2.82,2200,3.218,2203,2.535,2204,5.349,2207,2.634,2220,3.952,2221,2.751,2222,2.986,2223,3.952,2224,3.952,2225,3.218,2226,3.952,2227,3.952,2228,3.883,2229,4.181,2230,3.952,2231,2.82,2232,3.952,2233,3.952,2234,3.036,2235,1.992,2236,2.125,2237,3.218,2238,3.218,2239,3.952,2240,3.091,2241,2.69,2242,3.091]],["component/32",[68,0.364]],["title/33-1",[68,19.528,2243,57.142]],["name/33-1",[]],["text/33-1",[]],["component/33-1",[]],["title/33-2",[459,28.806,1877,41.282,2236,34.29]],["name/33-2",[]],["text/33-2",[]],["component/33-2",[]],["title/33-3",[547,39.571,676,35.45]],["name/33-3",[]],["text/33-3",[]],["component/33-3",[]],["title/33-4",[68,16.743,1734,40.91,2185,37.293]],["name/33-4",[]],["text/33-4",[]],["component/33-4",[]],["title/33-5",[64,14.608,415,19.199,1493,23.284,2186,27.058,2205,31.757,2244,40.605,2245,40.605]],["name/33-5",[]],["text/33-5",[]],["component/33-5",[]],["title/33-6",[259,32.773,2189,48.149]],["name/33-6",[]],["text/33-6",[]],["component/33-6",[]],["title/33",[68,19.528,2243,57.142]],["name/33",[68,0.309,2243,0.904]],["text/33",[0,2.308,4,3.242,5,1.815,13,2.12,19,2.593,24,2.688,44,3.419,64,2.746,68,2.625,69,3.031,72,2.308,76,1.471,78,4.17,87,2.688,91,3.855,93,3.419,97,2.688,102,2.786,106,2.917,111,2.786,113,2.358,129,3.424,160,2.882,191,2.431,192,2.533,200,2.934,291,2.612,309,3.866,317,3.094,357,2.899,370,3.386,376,2.637,395,2.743,415,2.45,420,2.341,432,2.743,442,4.053,458,3.051,459,4.094,472,2.971,526,5.446,558,3.14,597,2.743,633,3.526,642,3.489,770,2.743,774,2.431,802,2.662,812,2.431,916,2.865,1002,3.117,1134,3.419,1337,3.267,1365,3.489,1392,5.037,1493,2.971,1496,1.815,1631,2.566,1634,6.466,1671,4.219,1709,3.214,1734,3.324,1807,3.419,1942,2.833,1949,4.053,1970,4.72,2185,3.031,2186,3.453,2187,2.934,2188,3.117,2191,3.188,2194,3.295,2195,3.799,2196,4.04,2197,3.697,2198,3.697,2208,4.435,2209,6.473,2212,3.14,2217,4.219,2218,4.219,2228,3.24,2229,3.489,2236,2.786,2243,3.981,2246,3.607,2247,3.489,2248,4.132,2249,4.72,2250,3.566,2251,4.72,2252,5.628,2253,3.799,2254,5.14,2255,3.566,2256,4.053,2257,4.219,2258,5.182,2259,5.182,2260,5.182,2261,5.182,2262,5.182,2263,5.182,2264,4.132,2265,4.43,2266,6.526,2267,4.053,2268,3.566,2269,3.566,2270,4.942,2271,3.566,2272,3.419,2273,3.566]],["component/33",[68,0.364]],["title/34-1",[68,19.528,2246,51.773]],["name/34-1",[]],["text/34-1",[]],["component/34-1",[]],["title/34-2",[2184,65.403]],["name/34-2",[]],["text/34-2",[]],["component/34-2",[]],["title/34-3",[68,16.743,1734,40.91,2185,37.293]],["name/34-3",[]],["text/34-3",[]],["component/34-3",[]],["title/34-4",[1493,36.566,2185,37.293,2186,42.494]],["name/34-4",[]],["text/34-4",[]],["component/34-4",[]],["title/34-5",[177,25.977,2185,32.638,2187,31.604,2188,33.568]],["name/34-5",[]],["text/34-5",[]],["component/34-5",[]],["title/34-6",[113,40.597]],["name/34-6",[]],["text/34-6",[]],["component/34-6",[]],["title/34-7",[259,32.773,2189,48.149]],["name/34-7",[]],["text/34-7",[]],["component/34-7",[]],["title/34",[68,19.528,2246,51.773]],["name/34",[68,0.309,2246,0.819]],["text/34",[4,2.06,5,2.545,13,1.984,19,3.522,20,2.667,21,1.883,29,3.493,40,2.284,55,2.468,64,3.73,68,2.722,69,4.251,72,2.16,75,2.087,76,2.063,78,2.232,91,3.609,93,3.2,102,2.608,106,2.73,111,2.608,148,2.622,151,1.809,164,2.918,176,3.232,179,2.402,196,2.637,200,2.747,203,2.215,309,2.457,317,2.897,327,2.504,354,3.827,373,2.412,376,2.468,415,2.294,420,2.191,441,3.794,442,3.794,445,3.17,459,3.283,472,2.781,526,5.186,547,3.867,552,4.582,558,2.939,559,3.615,597,2.567,642,3.266,657,2.837,707,3.338,762,2.567,770,2.567,802,5.326,812,2.275,830,4.663,916,2.682,1116,3.609,1252,3.301,1337,4.582,1493,4.168,1634,6.219,1671,3.949,1685,3.17,1728,3.794,1729,3.609,1730,3.665,1731,3.794,1734,3.112,1749,2.897,1790,3.949,1791,6.214,1807,3.2,1825,4.147,1949,3.794,2037,3.377,2185,5.097,2186,4.843,2187,4.936,2188,5.822,2191,2.985,2194,3.085,2195,3.556,2196,3.847,2197,3.461,2198,3.461,2199,4.147,2200,3.949,2201,4.147,2202,6.214,2203,3.112,2204,2.985,2205,3.794,2206,3.949,2207,3.232,2208,4.222,2209,6.267,2210,4.418,2211,4.418,2212,2.939,2213,4.418,2214,4.418,2215,3.949,2216,4.147,2217,3.949,2218,3.949,2221,3.377,2246,3.377,2247,3.266,2265,4.147,2266,6.214,2267,3.794]],["component/34",[68,0.364]],["title/35-1",[68,19.528,2274,57.142]],["name/35-1",[]],["text/35-1",[]],["component/35-1",[]],["title/35-2",[459,28.806,1877,41.282,2236,34.29]],["name/35-2",[]],["text/35-2",[]],["component/35-2",[]],["title/35-3",[547,39.571,676,35.45]],["name/35-3",[]],["text/35-3",[]],["component/35-3",[]],["title/35-4",[68,16.743,1734,40.91,2185,37.293]],["name/35-4",[]],["text/35-4",[]],["component/35-4",[]],["title/35-5",[1128,42.073,1856,48.185,2275,63.769]],["name/35-5",[]],["text/35-5",[]],["component/35-5",[]],["title/35-6",[259,32.773,2189,48.149]],["name/35-6",[]],["text/35-6",[]],["component/35-6",[]],["title/35",[68,19.528,2274,57.142]],["name/35",[68,0.309,2274,0.904]],["text/35",[0,1.487,4,2.09,5,1.723,13,2.013,19,2.495,24,3.811,29,2.365,44,3.246,68,2.56,72,2.191,76,2.495,78,4.045,87,2.552,91,3.661,93,3.246,97,2.552,106,2.769,113,2.239,129,4.678,183,3.157,190,2.336,191,2.308,193,2.492,206,2.504,259,2.168,291,2.481,309,2.492,317,2.938,357,2.753,385,2.405,395,2.604,415,2.327,428,4.006,429,3.425,432,5.16,458,2.897,459,3.971,472,2.822,508,4.895,510,2.675,542,2.804,558,2.982,577,2.604,597,2.604,770,2.604,774,2.308,778,4.52,802,2.528,812,2.308,916,2.721,949,3.848,966,3.052,1018,3.349,1134,3.246,1337,3.102,1352,3.425,1353,3.848,1365,3.313,1368,3.718,1369,3.848,1392,4.847,1496,2.573,1631,2.436,1709,3.052,1734,3.157,1741,2.565,1807,3.246,1855,4.207,1963,4.006,1969,3.102,2185,2.878,2187,2.786,2188,2.96,2191,3.028,2194,3.129,2195,3.607,2196,3.888,2197,3.511,2198,3.511,2208,4.268,2209,6.311,2212,2.982,2221,3.425,2228,3.077,2229,3.313,2236,2.646,2243,3.78,2247,3.313,2250,3.386,2252,5.487,2253,3.607,2254,4.946,2255,3.386,2256,3.848,2257,4.006,2268,3.386,2269,3.386,2270,4.756,2271,3.386,2272,3.246,2273,3.386,2274,3.78,2276,4.207,2277,4.921,2278,4.921,2279,3.215,2280,3.511,2281,2.84,2282,2.552,2283,4.921,2284,4.207,2285,4.006,2286,4.481,2287,4.481,2288,4.481,2289,4.481,2290,4.481,2291,4.481,2292,3.718,2293,6.691,2294,4.006,2295,4.481]],["component/35",[68,0.364]],["title/36-1",[68,19.528,2296,57.142]],["name/36-1",[]],["text/36-1",[]],["component/36-1",[]],["title/36-2",[459,28.806,1877,41.282,2236,34.29]],["name/36-2",[]],["text/36-2",[]],["component/36-2",[]],["title/36-3",[547,39.571,676,35.45]],["name/36-3",[]],["text/36-3",[]],["component/36-3",[]],["title/36-4",[307,25.129,415,23.46,2187,28.097,2196,26.261,2285,40.397]],["name/36-4",[]],["text/36-4",[]],["component/36-4",[]],["title/36-5",[64,20.078,415,26.388,1496,19.545,2297,45.439]],["name/36-5",[]],["text/36-5",[]],["component/36-5",[]],["title/36-6",[64,22.941,730,48.185,1631,31.574]],["name/36-6",[]],["text/36-6",[]],["component/36-6",[]],["title/36-7",[1631,36.826,2298,60.556]],["name/36-7",[]],["text/36-7",[]],["component/36-7",[]],["title/36-8",[188,27.762,1631,22.113,1863,33.747,1881,33.747,2029,33.747]],["name/36-8",[]],["text/36-8",[]],["component/36-8",[]],["title/36-9",[1631,36.826,2299,67.738]],["name/36-9",[]],["text/36-9",[]],["component/36-9",[]],["title/36-10",[415,30.151,420,28.806,2300,63.769]],["name/36-10",[]],["text/36-10",[]],["component/36-10",[]],["title/36-11",[68,19.528,2301,74.376]],["name/36-11",[]],["text/36-11",[]],["component/36-11",[]],["title/36-12",[68,19.528,2302,74.376]],["name/36-12",[]],["text/36-12",[]],["component/36-12",[]],["title/36-13",[259,32.773,2189,48.149]],["name/36-13",[]],["text/36-13",[]],["component/36-13",[]],["title/36",[68,19.528,2296,57.142]],["name/36",[68,0.309,2296,0.904]],["text/36",[0,0.91,4,1.279,5,1.746,19,3.186,21,1.169,23,3.395,24,1.562,29,1.447,44,1.987,53,1.504,61,3.469,62,3.092,64,3.871,65,2.667,67,1.484,68,2.159,69,1.761,72,1.341,76,2.106,78,3.414,87,1.562,93,1.987,97,1.562,102,1.619,109,4.601,113,2.269,129,3.973,134,1.327,151,1.123,167,1.716,179,1.491,180,2.212,186,1.773,191,1.412,193,3.232,200,2.823,201,1.263,203,1.375,206,2.537,213,2.659,224,2.956,259,1.327,271,1.57,291,1.518,307,2.525,317,1.798,327,3.294,339,1.773,353,4.053,354,3.36,356,2.806,357,2.789,365,1.539,367,1.785,376,2.537,388,1.675,395,1.594,397,1.761,415,3.508,420,4.237,428,2.452,429,2.096,432,4.351,450,2.049,458,1.773,459,2.882,472,1.727,480,3.838,486,1.932,501,3.36,508,3.323,510,1.637,542,1.716,547,4.991,558,1.825,569,2.355,570,1.898,571,2.207,597,1.594,663,2.313,701,2.452,730,2.275,737,2.275,738,2.993,744,3.591,754,2.355,762,3.377,770,1.594,774,1.412,778,3.068,802,3.278,812,1.412,818,1.441,877,1.898,916,1.665,952,1.968,956,2.007,1022,2.355,1074,1.867,1134,1.987,1143,1.838,1205,2.452,1254,3.092,1327,1.968,1352,2.096,1353,2.355,1365,2.027,1368,2.275,1369,2.355,1392,3.29,1445,2.355,1493,1.727,1496,2.598,1631,4.071,1709,1.867,1733,3.9,1734,4.094,1764,1.932,1807,3.29,1862,3.768,1863,2.275,1880,2.355,1881,2.275,1885,2.452,1898,2.355,1963,2.452,1966,4.263,1969,1.898,2029,2.275,2185,1.761,2191,1.853,2194,1.915,2198,3.557,2206,2.452,2208,4.31,2209,4.803,2212,1.825,2222,2.275,2228,1.883,2229,2.027,2235,1.518,2236,1.619,2241,2.049,2247,2.027,2250,2.072,2252,4.176,2253,2.207,2254,3.357,2255,2.072,2268,2.072,2269,2.072,2270,3.228,2271,2.072,2272,1.987,2273,2.072,2274,2.313,2285,4.059,2286,2.742,2287,2.742,2288,2.742,2289,2.742,2291,2.742,2292,2.275,2293,4.541,2294,4.059,2295,2.742,2296,2.313,2297,4.059,2298,5.195,2299,2.742,2303,2.742,2304,2.742,2305,4.986,2306,2.313,2307,2.651,2308,3.011,2309,3.655,2310,3.011,2311,1.578,2312,3.011,2313,3.011,2314,2.355,2315,2.355,2316,3.011,2317,3.011,2318,2.452,2319,3.011,2320,3.011,2321,2.742,2322,2.742,2323,2.742,2324,3.011,2325,2.574,2326,2.742,2327,1.637,2328,1.761,2329,1.665,2330,3.011]],["component/36",[68,0.364]],["title/37-1",[0,19.276,68,16.743,2246,44.389]],["name/37-1",[]],["text/37-1",[]],["component/37-1",[]],["title/37-2",[2184,65.403]],["name/37-2",[]],["text/37-2",[]],["component/37-2",[]],["title/37-3",[68,16.743,1734,40.91,2185,37.293]],["name/37-3",[]],["text/37-3",[]],["component/37-3",[]],["title/37-4",[1493,36.566,2185,37.293,2186,42.494]],["name/37-4",[]],["text/37-4",[]],["component/37-4",[]],["title/37-5",[177,25.977,2185,32.638,2187,31.604,2188,33.568]],["name/37-5",[]],["text/37-5",[]],["component/37-5",[]],["title/37-6",[113,40.597]],["name/37-6",[]],["text/37-6",[]],["component/37-6",[]],["title/37-7",[259,32.773,2189,48.149]],["name/37-7",[]],["text/37-7",[]],["component/37-7",[]],["title/37",[0,19.276,68,16.743,2246,44.389]],["name/37",[0,0.246,68,0.213,2246,0.566]],["text/37",[0,1.555,4,2.184,5,2.659,13,2.104,19,3.609,20,2.827,21,1.997,29,3.648,64,3.823,68,2.79,69,4.44,72,2.29,76,1.46,91,3.826,93,3.393,102,2.765,106,2.895,111,2.765,148,2.781,151,1.918,164,3.093,176,3.427,179,2.546,196,2.796,200,2.912,203,2.349,309,2.605,314,3.77,317,3.071,327,2.655,373,2.558,376,2.617,415,2.432,420,2.323,442,4.022,452,3.19,459,3.429,472,2.949,526,5.416,547,4.039,558,3.116,597,2.722,635,2.781,642,3.463,649,3.361,657,3.008,707,3.539,762,2.722,770,2.722,802,5.459,812,2.413,995,3.669,1252,3.5,1337,4.786,1493,4.353,1634,6.438,1671,4.187,1728,4.022,1729,3.826,1730,3.886,1731,4.022,1734,3.299,1807,3.393,1949,5.937,2037,3.58,2185,5.277,2186,5.059,2187,5.11,2188,5.992,2191,3.164,2194,3.27,2195,3.77,2196,4.018,2197,3.669,2198,3.669,2199,4.397,2200,4.187,2201,4.397,2202,6.49,2203,3.299,2204,3.164,2205,4.022,2206,4.187,2207,3.427,2208,4.41,2209,4.914,2217,4.187,2218,4.187,2246,5.284,2247,3.463,2265,4.397,2266,6.49,2267,4.022,2331,5.143,2332,5.143,2333,3.951,2334,5.143,2335,5.143,2336,5.143,2337,5.143,2338,5.143,2339,5.143]],["component/37",[68,0.364]],["title/38-1",[68,19.528,2340,57.142]],["name/38-1",[]],["text/38-1",[]],["component/38-1",[]],["title/38-2",[459,28.806,1877,41.282,2236,34.29]],["name/38-2",[]],["text/38-2",[]],["component/38-2",[]],["title/38-3",[2184,65.403]],["name/38-3",[]],["text/38-3",[]],["component/38-3",[]],["title/38-4",[64,17.85,136,30.528,2187,28.097,2188,29.843,2341,40.397]],["name/38-4",[]],["text/38-4",[]],["component/38-4",[]],["title/38-5",[29,23.844,432,26.261,2188,29.843,2197,35.4,2342,24.248]],["name/38-5",[]],["text/38-5",[]],["component/38-5",[]],["title/38-6",[547,39.571,676,35.45]],["name/38-6",[]],["text/38-6",[]],["component/38-6",[]],["title/38-7",[64,20.078,415,26.388,718,37.19,1631,27.633]],["name/38-7",[]],["text/38-7",[]],["component/38-7",[]],["title/38-8",[259,32.773,2189,48.149]],["name/38-8",[]],["text/38-8",[]],["component/38-8",[]],["title/38",[68,19.528,2340,57.142]],["name/38",[68,0.309,2340,0.904]],["text/38",[0,1.202,4,2.65,5,2.185,13,2.552,14,2.839,19,2.615,21,1.543,23,3.319,24,2.062,29,4.191,33,2.374,44,2.623,53,1.986,55,3.175,62,1.926,64,2.244,68,2.29,72,1.77,75,1.711,76,1.128,78,3.543,87,2.062,97,2.062,113,1.809,115,3.47,119,1.752,127,2.506,129,2.798,148,2.149,191,1.865,194,2.341,201,1.667,203,2.849,208,2.391,253,2.357,271,2.072,291,2.004,307,2.013,309,2.013,317,2.374,353,1.96,354,3.285,357,2.224,395,2.104,404,2.914,415,2.95,420,1.796,432,4.076,458,2.341,459,4.75,472,2.279,551,3.004,552,4.855,558,2.409,597,3.302,634,3.109,642,2.676,676,3.67,681,4.157,718,2.649,719,3.725,738,1.865,770,2.104,774,1.865,802,3.956,855,6.63,916,2.198,1007,3.054,1009,2.836,1019,2.705,1118,2.486,1134,2.623,1153,2.465,1154,2.528,1161,2.598,1192,2.446,1269,2.623,1316,2.598,1365,2.676,1392,4.116,1496,1.392,1631,1.968,1666,2.705,1860,3.237,1878,2.874,1942,2.173,2037,4.343,2167,3.62,2187,2.251,2188,2.391,2191,2.446,2194,2.528,2197,4.451,2203,2.55,2207,4.157,2208,4.473,2209,4.039,2212,2.409,2225,3.237,2228,2.486,2229,2.676,2236,2.138,2250,2.735,2252,6.303,2253,2.914,2254,4.2,2255,2.735,2268,2.735,2269,2.735,2270,4.039,2271,2.735,2272,2.623,2273,2.735,2276,3.398,2296,5.916,2303,3.62,2304,3.62,2329,4.258,2340,3.054,2341,9.666,2342,1.943,2343,2.705,2344,3.004,2345,2.649,2346,3.169,2347,3.975,2348,3.62,2349,2.914,2350,3.975,2351,2.391,2352,1.716,2353,3.398,2354,2.836,2355,3.109,2356,2.705,2357,2.623,2358,3.62,2359,6.239,2360,3.975,2361,2.409,2362,3.975,2363,3.62,2364,2.735]],["component/38",[68,0.364]],["title/39-1",[68,19.528,2365,57.142]],["name/39-1",[]],["text/39-1",[]],["component/39-1",[]],["title/39-2",[459,28.806,1877,41.282,2236,34.29]],["name/39-2",[]],["text/39-2",[]],["component/39-2",[]],["title/39-3",[547,39.571,676,35.45]],["name/39-3",[]],["text/39-3",[]],["component/39-3",[]],["title/39-4",[4,17.246,5,14.22,64,14.608,307,20.565,996,26.049,1033,28.608,2366,34.714]],["name/39-4",[]],["text/39-4",[]],["component/39-4",[]],["title/39-5",[259,32.773,2189,48.149]],["name/39-5",[]],["text/39-5",[]],["component/39-5",[]],["title/39",[68,19.528,2365,57.142]],["name/39",[68,0.309,2365,0.904]],["text/39",[0,2.048,4,3.922,5,3.234,24,3.515,44,4.471,68,2.424,72,3.017,78,4.833,87,3.515,97,3.515,113,3.083,129,4.141,191,3.179,291,3.416,317,4.046,357,3.791,395,3.587,397,3.963,432,3.587,458,3.99,459,5.095,472,3.886,558,4.106,597,4.887,639,5.517,676,3.23,770,3.587,774,3.179,802,3.481,916,3.747,1033,4.774,1134,4.471,1365,4.562,1392,6.092,1496,2.373,2191,4.169,2194,4.309,2208,5.364,2209,5.978,2212,4.106,2228,4.237,2229,4.562,2236,3.644,2250,4.663,2252,6.348,2253,4.968,2254,6.217,2255,4.663,2268,4.663,2269,4.663,2270,5.978,2271,4.663,2272,4.471,2273,4.663,2340,5.206,2343,4.611,2365,5.206,2367,6.776,2368,6.776,2369,5.517,2370,4.717]],["component/39",[68,0.364]],["title/40-1",[68,19.528,2371,57.142]],["name/40-1",[]],["text/40-1",[]],["component/40-1",[]],["title/40-2",[459,28.806,1877,41.282,2236,34.29]],["name/40-2",[]],["text/40-2",[]],["component/40-2",[]],["title/40-3",[968,45.83]],["name/40-3",[]],["text/40-3",[]],["component/40-3",[]],["title/40-4",[547,39.571,676,35.45]],["name/40-4",[]],["text/40-4",[]],["component/40-4",[]],["title/40-5",[39,23.275,40,17.531,46,26.559,47,25.912,48,29.679,49,25.912,50,15.182,64,13.392]],["name/40-5",[]],["text/40-5",[]],["component/40-5",[]],["title/40-6",[20,27.277,21,19.264,33,29.628,676,23.649,2228,31.023]],["name/40-6",[]],["text/40-6",[]],["component/40-6",[]],["title/40-7",[259,32.773,2189,48.149]],["name/40-7",[]],["text/40-7",[]],["component/40-7",[]],["title/40",[68,19.528,2371,57.142]],["name/40",[68,0.309,2371,0.904]],["text/40",[0,1.515,4,3.774,5,2.608,12,3.929,13,2.05,19,1.702,20,2.755,21,1.945,24,2.599,33,2.992,34,2.369,39,3.133,40,2.36,44,3.306,50,2.044,62,2.428,64,1.803,68,2.76,72,2.231,78,4.089,84,2.709,87,2.599,97,2.599,113,3.388,129,3.34,191,3.493,219,2.562,271,2.612,291,2.526,307,2.538,317,2.992,357,2.803,373,2.492,395,2.652,397,2.93,415,2.369,432,2.652,458,2.95,459,4.749,472,2.873,558,3.036,578,2.369,579,3.41,597,3.941,676,3.549,770,2.652,774,2.351,802,3.825,818,2.398,916,2.771,968,4.565,1028,3.575,1033,3.53,1134,3.306,1143,3.059,1209,3.374,1255,3.53,1311,3.85,1316,3.274,1317,3.108,1365,3.374,1392,4.913,1496,3.112,1497,3.623,1631,2.481,1704,4.355,1774,3.673,1878,3.623,2191,3.083,2194,3.186,2208,4.326,2209,4.821,2212,3.036,2228,4.656,2229,3.374,2234,3.85,2236,2.694,2250,3.448,2252,5.537,2254,3.374,2255,3.448,2268,3.448,2269,3.448,2270,4.821,2271,3.448,2272,3.306,2273,3.448,2276,4.284,2343,5.067,2365,3.85,2370,5.183,2371,5.721,2372,5.011,2373,4.564,2374,5.54,2375,4.284,2376,3.623,2377,4.411,2378,6.063,2379,3.244,2380,5.124,2381,3.901,2382,4.411,2383,3.339,2384,5.011,2385,3.575,2386,4.284,2387,5.011,2388,4.08]],["component/40",[68,0.364]],["title/41-1",[0,19.276,68,16.743,2389,44.389]],["name/41-1",[]],["text/41-1",[]],["component/41-1",[]],["title/41-2",[459,28.806,1877,41.282,2236,34.29]],["name/41-2",[]],["text/41-2",[]],["component/41-2",[]],["title/41-3",[968,45.83]],["name/41-3",[]],["text/41-3",[]],["component/41-3",[]],["title/41-4",[547,39.571,676,35.45]],["name/41-4",[]],["text/41-4",[]],["component/41-4",[]],["title/41-5",[64,22.941,177,29.682,1705,25.109]],["name/41-5",[]],["text/41-5",[]],["component/41-5",[]],["title/41-6",[1745,43.793,2204,45.762]],["name/41-6",[]],["text/41-6",[]],["component/41-6",[]],["title/41-7",[259,32.773,2189,48.149]],["name/41-7",[]],["text/41-7",[]],["component/41-7",[]],["title/41",[0,19.276,68,16.743,2389,44.389]],["name/41",[0,0.246,68,0.213,2389,0.566]],["text/41",[0,2.795,4,3.928,5,2.742,19,1.822,24,2.783,44,3.54,64,1.93,68,2.839,72,2.389,76,2.885,78,4.255,84,2.901,87,2.783,97,2.783,113,2.441,129,4.147,148,2.901,176,3.575,177,3.645,191,2.517,271,2.797,291,2.705,309,2.717,317,3.204,357,3.002,363,3.828,395,2.84,397,3.138,415,2.537,432,2.84,458,3.159,459,4.177,472,3.077,558,3.251,578,2.537,579,3.651,597,2.84,676,2.557,770,2.84,774,2.517,802,4.75,817,2.84,901,3.251,916,2.967,968,4.75,1033,3.78,1134,3.54,1255,3.78,1311,4.122,1317,3.327,1365,3.612,1392,5.167,1496,1.879,1631,2.656,1705,2.113,1745,3.159,1878,3.879,2191,3.301,2194,3.412,2196,2.84,2204,4.818,2208,5.372,2209,5.069,2212,3.251,2222,4.054,2228,3.355,2229,3.612,2234,4.122,2236,2.885,2237,4.368,2250,3.692,2252,5.722,2254,3.612,2255,3.692,2268,3.692,2269,3.692,2270,5.069,2271,3.692,2272,3.54,2273,3.692,2343,5.329,2370,5.451,2374,5.826,2375,4.587,2376,3.879,2389,6.437,2390,4.886,2391,5.365,2392,4.886,2393,3.735,2394,3.735,2395,4.886,2396,4.054,2397,4.368,2398,3.735]],["component/41",[68,0.364]],["title/42-1",[68,19.528,2389,51.773]],["name/42-1",[]],["text/42-1",[]],["component/42-1",[]],["title/42-2",[459,28.806,1877,41.282,2236,34.29]],["name/42-2",[]],["text/42-2",[]],["component/42-2",[]],["title/42-3",[968,45.83]],["name/42-3",[]],["text/42-3",[]],["component/42-3",[]],["title/42-4",[547,39.571,676,35.45]],["name/42-4",[]],["text/42-4",[]],["component/42-4",[]],["title/42-5",[64,22.941,177,29.682,1705,25.109]],["name/42-5",[]],["text/42-5",[]],["component/42-5",[]],["title/42-6",[1745,43.793,2204,45.762]],["name/42-6",[]],["text/42-6",[]],["component/42-6",[]],["title/42-7",[259,32.773,2189,48.149]],["name/42-7",[]],["text/42-7",[]],["component/42-7",[]],["title/42",[68,19.528,2389,51.773]],["name/42",[68,0.309,2389,0.819]],["text/42",[0,1.654,4,3.972,5,2.782,19,1.859,24,2.839,44,3.611,64,1.969,68,2.861,72,2.437,76,2.913,78,4.304,84,2.959,87,2.839,97,2.839,113,2.49,129,4.194,148,2.959,176,3.647,177,3.698,191,2.567,271,2.853,291,2.759,309,2.772,317,3.268,357,3.062,395,2.897,397,3.201,415,2.588,432,2.897,458,3.222,459,4.225,472,3.138,558,3.316,578,2.588,579,3.724,597,4.205,676,2.609,770,2.897,774,2.567,802,4.805,901,3.316,916,3.026,968,4.805,1033,3.856,1134,3.611,1255,3.856,1311,4.205,1317,3.394,1365,3.685,1392,5.242,1496,1.917,1705,2.155,1745,3.222,1878,3.957,2191,3.367,2194,3.48,2196,2.897,2204,4.888,2208,5.433,2209,5.143,2212,3.316,2222,4.135,2228,3.422,2229,3.685,2234,4.205,2236,2.943,2237,4.456,2250,3.766,2252,5.776,2254,3.685,2255,3.766,2268,3.766,2269,3.766,2270,5.143,2271,3.766,2272,3.611,2273,3.766,2343,5.406,2370,5.53,2371,4.205,2373,4.984,2374,5.91,2375,4.679,2376,3.957,2389,5.53,2390,4.984,2392,4.984,2393,3.81,2394,3.81,2395,4.984,2396,4.135,2397,4.456]],["component/42",[68,0.364]],["title/43-1",[68,19.528,2399,58.169]],["name/43-1",[]],["text/43-1",[]],["component/43-1",[]],["title/43-2",[459,28.806,1877,41.282,2236,34.29]],["name/43-2",[]],["text/43-2",[]],["component/43-2",[]],["title/43-3",[968,45.83]],["name/43-3",[]],["text/43-3",[]],["component/43-3",[]],["title/43-4",[547,39.571,676,35.45]],["name/43-4",[]],["text/43-4",[]],["component/43-4",[]],["title/43-5",[64,26.757,1729,55.331]],["name/43-5",[]],["text/43-5",[]],["component/43-5",[]],["title/43-6",[64,20.078,177,25.977,1705,21.975,2204,34.339]],["name/43-6",[]],["text/43-6",[]],["component/43-6",[]],["title/43-7",[203,33.969,744,41.861]],["name/43-7",[]],["text/43-7",[]],["component/43-7",[]],["title/43-8",[39,25.388,40,19.123,46,28.971,47,28.265,48,32.374,49,28.265,50,16.56]],["name/43-8",[]],["text/43-8",[]],["component/43-8",[]],["title/43-9",[259,32.773,2189,48.149]],["name/43-9",[]],["text/43-9",[]],["component/43-9",[]],["title/43",[68,19.528,2399,58.169]],["name/43",[68,0.309,2399,0.92]],["text/43",[0,1.819,1,2.459,4,4.389,5,2.618,12,2.661,13,1.554,14,1.728,16,2.614,19,2.539,20,4.11,21,2.902,24,1.97,34,2.846,44,2.506,46,2.71,47,2.644,53,3.734,64,3.06,68,2.589,69,2.221,72,1.691,76,1.708,78,3.914,84,2.054,87,1.97,97,1.97,113,1.728,129,2.699,134,1.674,137,2.616,148,2.054,174,1.961,176,2.531,181,2.054,189,1.697,191,1.782,193,3.048,200,2.151,213,1.583,254,2.021,271,3.138,291,1.915,307,1.924,313,2.252,317,2.268,325,1.924,353,1.872,357,2.125,359,2.87,365,1.942,370,2.482,373,1.889,376,1.933,387,2.585,388,2.112,395,2.01,414,2.112,415,1.796,420,2.719,432,2.01,452,2.356,458,2.237,459,3.377,465,1.728,472,2.178,547,2.021,558,2.302,559,1.889,564,1.754,578,1.796,597,2.01,642,2.557,653,3.093,657,2.221,667,2.785,676,2.869,730,2.87,744,4.207,745,2.531,770,2.01,774,1.782,802,3.092,818,1.818,872,3.52,874,2.585,916,2.1,968,4.369,1014,2.395,1017,2.032,1033,2.676,1134,2.506,1255,2.676,1311,4.624,1317,2.356,1318,2.644,1352,2.644,1365,2.557,1392,3.971,1443,2.971,1493,2.178,1496,2.108,1631,2.98,1657,2.319,1705,2.944,1708,3.093,1709,4.636,1733,2.971,1862,4.548,1866,2.87,1878,2.746,1966,3.247,2032,3.093,2191,2.337,2194,2.415,2204,2.337,2208,3.496,2209,3.896,2212,2.302,2229,2.557,2234,2.918,2236,2.042,2250,2.614,2254,2.557,2255,2.614,2268,2.614,2269,2.614,2270,3.896,2271,2.614,2272,2.506,2273,2.614,2290,3.459,2298,3.093,2343,2.585,2352,1.64,2370,4.19,2374,5.561,2376,2.746,2377,3.344,2379,2.459,2381,1.99,2389,2.644,2399,4.707,2400,3.604,2401,3.604,2402,3.798,2403,3.798,2404,3.459,2405,3.604,2406,2.557,2407,3.798,2408,2.971,2409,3.459,2410,2.746,2411,3.247,2412,9.27,2413,3.798,2414,3.798,2415,2.971,2416,3.798,2417,3.798,2418,2.356,2419,3.798,2420,3.798,2421,3.798,2422,3.798,2423,3.798,2424,3.798,2425,2.971,2426,3.798,2427,3.247,2428,3.798]],["component/43",[68,0.364]],["title/44",[656,35.89,802,38.207]],["name/44",[2429,2.129]],["text/44",[0,3.319,68,3.626,578,4.178,656,4.264,802,5.64,1116,6.574,2243,6.79,2246,7.642,2274,6.79,2296,6.79,2340,6.79,2365,6.79,2369,7.195,2371,6.79,2389,7.642,2399,6.912]],["component/44",[68,0.364]],["title/45-1",[65,29.85,1496,19.545,2430,47.712,2431,49.128]],["name/45-1",[]],["text/45-1",[]],["component/45-1",[]],["title/45-2",[733,38.207,2352,32.112]],["name/45-2",[]],["text/45-2",[]],["component/45-2",[]],["title/45-3",[5,26.047,76,21.109]],["name/45-3",[]],["text/45-3",[]],["component/45-3",[]],["title/45-4",[76,21.109,2311,38.966]],["name/45-4",[]],["text/45-4",[]],["component/45-4",[]],["title/45-5",[2432,51.773,2433,54.524]],["name/45-5",[]],["text/45-5",[]],["component/45-5",[]],["title/45-6",[2432,51.773,2434,53.065]],["name/45-6",[]],["text/45-6",[]],["component/45-6",[]],["title/45-7",[28,38.519]],["name/45-7",[]],["text/45-7",[]],["component/45-7",[]],["title/45-8",[473,30.372]],["name/45-8",[]],["text/45-8",[]],["component/45-8",[]],["title/45-9",[2435,49.047]],["name/45-9",[]],["text/45-9",[]],["component/45-9",[]],["title/45-10",[185,26.74,559,31.714,2436,33.928]],["name/45-10",[]],["text/45-10",[]],["component/45-10",[]],["title/45-11",[19,25.262,473,25.32]],["name/45-11",[]],["text/45-11",[]],["component/45-11",[]],["title/45-12",[635,40.211,2433,54.524]],["name/45-12",[]],["text/45-12",[]],["component/45-12",[]],["title/45-13",[635,40.211,2434,53.065]],["name/45-13",[]],["text/45-13",[]],["component/45-13",[]],["title/45",[65,29.85,1496,19.545,2430,47.712,2431,49.128]],["name/45",[1496,0.285,2433,0.596,2434,0.58]],["text/45",[0,0.628,3,2.057,4,2.467,5,0.727,8,1.665,13,1.981,14,2.203,19,2.465,24,1.884,31,1.84,34,0.982,40,2.736,49,2.529,53,1.815,64,0.747,65,2.59,75,1.563,76,1.649,80,0.986,119,2.134,134,2.908,155,1.111,160,2.02,188,5.457,189,3.706,196,1.129,201,4.345,213,2.421,220,0.9,258,1.047,276,1.052,287,2.097,308,1.047,385,2.367,387,1.413,400,1.429,417,2.097,420,5.195,465,2.643,468,1.665,473,0.707,474,1.332,485,0.99,492,1.691,510,1.129,535,2.803,543,1.223,561,3.784,564,1.678,582,2.524,606,1.997,635,1.123,650,3.397,656,1.753,667,4.259,683,1.299,696,2.397,703,1.37,733,1.866,738,1.704,786,1.975,817,1.099,818,0.994,951,1.398,965,1.894,966,2.253,970,1.162,1090,1.892,1121,2.291,1154,1.321,1221,3.107,1226,1.849,1496,1.272,1741,4.539,1824,1.828,1942,4.534,2153,3.455,2178,1.624,2181,1.148,2182,6.011,2235,1.047,2327,5.258,2329,2.009,2352,0.897,2356,1.413,2358,1.892,2406,5.584,2430,1.776,2431,5.114,2432,8.14,2433,8.504,2434,7.245,2437,3.633,2438,2.472,2439,1.913,2440,1.624,2441,1.776,2442,1.691,2443,2.077,2444,2.077,2445,2.077,2446,3.091,2447,1.997,2448,5.809,2449,3.091,2450,4.367,2451,3.397,2452,1.892,2453,1.569,2454,2.154,2455,3.633,2456,1.892,2457,1.624,2458,2.077,2459,2.077,2460,2.077,2461,2.077,2462,2.077,2463,2.077,2464,3.633,2465,6.6,2466,3.633,2467,3.633,2468,3.447,2469,3.633,2470,3.447,2471,2.077,2472,1.776,2473,2.077,2474,2.077,2475,2.077,2476,2.077,2477,2.077,2478,2.077,2479,2.077,2480,2.077,2481,3.633,2482,5.809,2483,5.499,2484,3.309,2485,3.633,2486,2.472,2487,2.077,2488,2.077,2489,3.633,2490,2.077,2491,1.357,2492,5.809,2493,2.077,2494,1.73,2495,2.077,2496,4.595,2497,1.776,2498,1.776,2499,1.446,2500,2.077,2501,1.215,2502,1.776,2503,2.077,2504,5.809,2505,2.077,2506,2.077,2507,1.398,2508,2.077,2509,3.633,2510,2.077,2511,2.077,2512,1.776,2513,2.077,2514,2.077,2515,2.077,2516,2.077,2517,2.077,2518,2.077,2519,2.077,2520,2.077,2521,2.077,2522,2.077,2523,2.077,2524,2.077,2525,2.077,2526,2.077,2527,2.077,2528,2.077]],["component/45",[68,0.364]],["title/46-1",[0,19.276,21,24.758,1496,22.333]],["name/46-1",[]],["text/46-1",[]],["component/46-1",[]],["title/46-2",[73,41.861,355,43.207]],["name/46-2",[]],["text/46-2",[]],["component/46-2",[]],["title/46-3",[77,43.496,159,42.117]],["name/46-3",[]],["text/46-3",[]],["component/46-3",[]],["title/46-4",[21,21.668,76,15.84,83,33.568,1644,36.129]],["name/46-4",[]],["text/46-4",[]],["component/46-4",[]],["title/46-5",[826,42.934,2529,40.551,2530,43.395]],["name/46-5",[]],["text/46-5",[]],["component/46-5",[]],["title/46-6",[21,15.765,828,28.265,2531,30.682,2532,30.682,2533,30.682,2534,30.682,2535,29.767]],["name/46-6",[]],["text/46-6",[]],["component/46-6",[]],["title/46-7",[21,21.668,829,49.128,2536,37.979,2537,39.818]],["name/46-7",[]],["text/46-7",[]],["component/46-7",[]],["title/46-8",[749,32.736,831,45.188,1657,30.293,2379,32.12,2538,40.397]],["name/46-8",[]],["text/46-8",[]],["component/46-8",[]],["title/46-9",[230,33.09,348,32.421,2529,35.49,2539,52.958]],["name/46-9",[]],["text/46-9",[]],["component/46-9",[]],["title/46-10",[88,22.016,557,28.651,2342,21.826,2540,42.379,2541,22.833,2542,33.747]],["name/46-10",[]],["text/46-10",[]],["component/46-10",[]],["title/46-11",[151,23.776,2439,33.579,2543,51.919]],["name/46-11",[]],["text/46-11",[]],["component/46-11",[]],["title/46-12",[537,48.185,2439,33.579,2544,58.078]],["name/46-12",[]],["text/46-12",[]],["component/46-12",[]],["title/46-13",[538,48.185,2439,33.579,2545,58.078]],["name/46-13",[]],["text/46-13",[]],["component/46-13",[]],["title/46-14",[12,28.197,152,25.623,1006,37.293]],["name/46-14",[]],["text/46-14",[]],["component/46-14",[]],["title/46-15",[12,28.197,1635,39.236,2357,42.073]],["name/46-15",[]],["text/46-15",[]],["component/46-15",[]],["title/46-16",[24,33.078,1006,37.293,1636,40.551]],["name/46-16",[]],["text/46-16",[]],["component/46-16",[]],["title/46-17",[1006,43.496,1637,50.614]],["name/46-17",[]],["text/46-17",[]],["component/46-17",[]],["title/46-18",[12,28.197,1638,60.511,2357,42.073]],["name/46-18",[]],["text/46-18",[]],["component/46-18",[]],["title/46-19",[24,33.078,1006,37.293,1640,60.511]],["name/46-19",[]],["text/46-19",[]],["component/46-19",[]],["title/46-20",[5,26.047,1641,70.576]],["name/46-20",[]],["text/46-20",[]],["component/46-20",[]],["title/46-21",[1642,70.576,2235,37.495]],["name/46-21",[]],["text/46-21",[]],["component/46-21",[]],["title/46-22",[2546,74.376,2547,59.3]],["name/46-22",[]],["text/46-22",[]],["component/46-22",[]],["title/46-23",[1019,50.614,2548,74.376]],["name/46-23",[]],["text/46-23",[]],["component/46-23",[]],["title/46-24",[2549,74.376,2550,60.556]],["name/46-24",[]],["text/46-24",[]],["component/46-24",[]],["title/46-25",[1020,56.2,2551,74.376]],["name/46-25",[]],["text/46-25",[]],["component/46-25",[]],["title/46-26",[1026,46.127,2552,74.376]],["name/46-26",[]],["text/46-26",[]],["component/46-26",[]],["title/46-27",[1014,46.893,1262,50.614]],["name/46-27",[]],["text/46-27",[]],["component/46-27",[]],["title/46-28",[435,39.548,1012,42.934,2553,63.769]],["name/46-28",[]],["text/46-28",[]],["component/46-28",[]],["title/46-29",[1026,46.127,2554,58.169]],["name/46-29",[]],["text/46-29",[]],["component/46-29",[]],["title/46-30",[980,28.4,1012,30.069,1025,35.608,1026,27.698,2555,44.661,2556,31.088]],["name/46-30",[]],["text/46-30",[]],["component/46-30",[]],["title/46-31",[2557,60.556,2558,43.496]],["name/46-31",[]],["text/46-31",[]],["component/46-31",[]],["title/46-32",[12,28.197,2559,58.078,2560,40.91]],["name/46-32",[]],["text/46-32",[]],["component/46-32",[]],["title/46-33",[75,21.351,2531,37.492,2561,45.188,2562,31.831,2563,42.418]],["name/46-33",[]],["text/46-33",[]],["component/46-33",[]],["title/46-34",[21,24.758,50,26.007,76,18.099]],["name/46-34",[]],["text/46-34",[]],["component/46-34",[]],["title/46-35",[21,24.758,179,31.574,2564,43.395]],["name/46-35",[]],["text/46-35",[]],["component/46-35",[]],["title/46-36",[2565,65.403]],["name/46-36",[]],["text/46-36",[]],["component/46-36",[]],["title/46-37",[2381,38.966,2566,61.969]],["name/46-37",[]],["text/46-37",[]],["component/46-37",[]],["title/46-38",[2567,67.738,2568,74.376]],["name/46-38",[]],["text/46-38",[]],["component/46-38",[]],["title/46-39",[19,21.659,123,31.856,748,35.465]],["name/46-39",[]],["text/46-39",[]],["component/46-39",[]],["title/46-40",[2569,49.128,2570,50.829,2571,42.171,2572,32.638]],["name/46-40",[]],["text/46-40",[]],["component/46-40",[]],["title/46-41",[2252,41.861,2573,65.472]],["name/46-41",[]],["text/46-41",[]],["component/46-41",[]],["title/46-42",[181,30.173,1338,36.468,2281,32.209,2574,55.81]],["name/46-42",[]],["text/46-42",[]],["component/46-42",[]],["title/46-43",[181,34.476,1338,41.669,2575,63.769]],["name/46-43",[]],["text/46-43",[]],["component/46-43",[]],["title/46-44",[3,31.604,179,27.633,818,26.71,2576,55.81]],["name/46-44",[]],["text/46-44",[]],["component/46-44",[]],["title/46-45",[12,28.197,21,24.758,2577,63.769]],["name/46-45",[]],["text/46-45",[]],["component/46-45",[]],["title/46-46",[2381,38.966,2578,74.376]],["name/46-46",[]],["text/46-46",[]],["component/46-46",[]],["title/46-47",[179,36.826,2579,74.376]],["name/46-47",[]],["text/46-47",[]],["component/46-47",[]],["title/46-48",[2580,89.216]],["name/46-48",[]],["text/46-48",[]],["component/46-48",[]],["title/46-49",[12,28.197,986,37.045,2581,63.769]],["name/46-49",[]],["text/46-49",[]],["component/46-49",[]],["title/46-50",[2381,38.966,2582,74.376]],["name/46-50",[]],["text/46-50",[]],["component/46-50",[]],["title/46-51",[4,23.704,12,24.678,676,26.601,2583,50.829]],["name/46-51",[]],["text/46-51",[]],["component/46-51",[]],["title/46-52",[676,30.395,2558,37.293,2584,58.078]],["name/46-52",[]],["text/46-52",[]],["component/46-52",[]],["title/46-53",[676,26.601,1026,34.612,2585,50.829,2586,47.712]],["name/46-53",[]],["text/46-53",[]],["component/46-53",[]],["title/46-54",[153,31.435,996,40.91,2587,44.389]],["name/46-54",[]],["text/46-54",[]],["component/46-54",[]],["title/46",[21,28.877,1496,26.047]],["name/46",[21,0.457,1496,0.412]],["text/46",[0,0.429,1,0.749,2,0.371,3,2.887,4,1.989,5,1.308,6,2.467,7,0.226,8,1.086,9,3.169,10,1.566,11,0.449,12,3.201,13,3.469,14,1.451,15,0.86,17,0.41,18,0.175,19,3.064,20,0.78,21,3.52,23,1.697,24,0.16,25,2.814,27,0.157,29,1.623,31,0.156,32,0.469,33,0.847,34,0.547,40,0.417,42,0.173,50,0.78,53,2.675,55,0.589,57,0.586,58,0.363,59,1.402,60,2.359,61,1.166,62,0.688,63,0.207,64,0.771,65,0.322,66,0.311,67,0.437,69,0.518,71,0.144,72,0.516,75,0.611,76,1.716,80,0.793,82,0.447,88,2.513,92,0.398,93,0.398,95,0.442,99,0.233,100,0.603,113,0.14,114,0.233,116,0.442,118,0.406,119,2.711,123,0.443,126,1.586,127,1.761,128,1.007,129,0.27,134,0.39,137,1.029,146,0.161,147,0.457,151,0.713,152,0.356,153,0.437,155,0.165,156,1.934,158,0.191,159,0.656,160,0.335,163,2.293,167,0.175,174,0.598,177,0.412,178,1.11,179,1.934,180,0.848,181,0.326,182,0.196,183,0.387,184,0.147,185,0.129,186,1.262,188,3.739,189,1.669,190,0.55,191,0.283,192,0.816,193,0.719,194,0.181,196,0.629,197,0.257,198,0.472,200,0.174,201,2.623,203,0.873,206,0.85,209,0.22,211,0.938,213,2.178,218,0.21,219,0.308,220,0.615,226,0.183,228,0.549,230,0.183,248,0.311,251,0.167,254,1.141,255,0.203,258,0.584,260,1.429,271,1.235,273,0.226,276,1.892,280,0.205,289,0.191,290,0.38,291,0.155,298,0.144,306,0.212,307,0.156,308,1.303,309,0.449,313,0.525,320,0.652,323,0.188,324,0.233,325,2.222,326,0.43,327,0.598,328,0.491,336,0.496,339,0.522,347,0.559,348,0.515,349,0.39,351,0.138,352,0.203,356,2.003,361,0.314,363,0.632,364,1.102,365,0.854,368,0.619,370,0.579,373,1.066,374,0.456,376,0.157,385,3.499,387,1.136,388,0.335,393,0.693,395,0.163,398,0.702,414,0.929,420,0.139,432,0.469,435,0.374,437,0.43,449,0.251,450,0.603,452,0.191,458,0.181,459,0.4,464,1.113,465,0.274,466,1.089,468,1.548,473,1.15,474,0.198,478,0.189,479,0.518,485,0.796,493,0.456,501,0.162,503,0.406,524,0.17,531,0.212,542,0.808,543,0.181,544,0.398,547,0.471,549,0.529,551,0.233,557,0.743,563,0.194,564,0.535,577,1.478,578,1.014,579,0.21,582,0.462,583,0.233,584,1.833,590,0.456,598,0.344,599,0.977,604,0.194,606,1.302,608,0.669,619,0.226,624,0.456,635,0.767,649,0.201,657,1.751,659,0.205,661,0.205,670,1.004,676,1.78,679,0.357,683,0.724,686,0.849,689,0.205,702,2.396,703,0.398,705,0.214,707,0.212,710,0.436,714,0.212,728,0.472,732,0.449,735,0.826,738,0.416,739,1.135,741,0.491,748,1.317,749,0.585,751,0.61,761,1.273,762,0.469,770,0.163,774,1.752,777,0.22,778,0.371,780,1.347,781,0.233,782,0.929,786,0.167,789,1.53,790,0.192,799,0.201,801,0.387,802,1.828,804,0.518,811,0.214,812,0.543,817,1.012,818,3.805,822,0.41,823,3.661,830,0.387,845,0.214,848,0.585,853,0.251,859,0.41,871,1.04,882,0.764,888,0.241,898,1.195,899,0.617,901,1.012,903,1.012,915,1.213,940,1.02,943,0.43,944,0.757,950,1.133,952,1.091,955,0.233,958,0.251,963,2.338,965,0.462,966,0.191,968,2.751,970,0.172,973,1.788,974,0.41,976,0.223,980,1.506,982,0.624,986,0.673,990,0.241,993,0.436,996,0.387,997,1.993,999,0.456,1002,1.29,1003,0.251,1006,1.865,1009,0.43,1012,2.953,1013,0.442,1014,0.895,1015,0.65,1016,1.195,1017,1.806,1018,0.603,1019,2.542,1020,1.262,1021,0.251,1024,1.364,1026,1.978,1027,2.57,1028,1.012,1052,0.263,1073,1.224,1094,3.088,1096,1.388,1100,0.263,1101,0.263,1102,0.263,1103,0.263,1104,0.263,1105,0.263,1106,0.449,1107,0.449,1113,0.43,1118,1.616,1131,0.263,1143,0.368,1144,0.515,1148,0.585,1149,1.207,1153,0.191,1159,0.241,1161,0.394,1164,0.339,1170,0.207,1173,0.491,1177,0.233,1181,1.044,1192,1.719,1196,0.541,1197,0.481,1198,0.738,1201,0.263,1209,0.955,1226,0.157,1232,0.387,1234,2.379,1251,0.198,1252,0.41,1254,0.374,1269,0.203,1283,0.28,1291,0.43,1293,0.226,1298,0.579,1299,0.491,1301,0.233,1306,1.762,1310,1.09,1316,0.394,1318,0.617,1320,0.207,1322,0.456,1326,0.237,1327,1.401,1335,0.212,1336,0.43,1337,0.38,1339,0.377,1352,0.806,1353,0.905,1355,0.233,1366,0.472,1373,0.196,1374,0.263,1375,0.263,1376,0.233,1379,0.233,1408,0.632,1443,0.472,1493,0.664,1495,0.43,1496,1.049,1644,2.065,1657,1.167,1663,0.205,1666,0.21,1667,1.287,1685,0.579,1704,0.83,1710,0.241,1718,0.263,1732,0.43,1741,0.314,1744,0.353,1745,0.181,1749,0.997,1764,0.198,1801,0.233,1809,0.251,1852,0.263,1868,0.214,1879,1.939,1883,0.788,1887,0.241,1917,0.201,1953,1.124,1958,0.251,1961,0.257,1967,0.826,1968,0.18,1969,0.194,2030,0.251,2035,0.233,2038,0.263,2044,1.072,2051,0.217,2084,0.205,2136,0.233,2138,0.42,2139,0.764,2163,0.229,2181,0.333,2187,0.174,2188,0.185,2191,0.189,2203,0.387,2204,0.712,2207,0.59,2231,0.826,2235,0.447,2236,0.476,2240,0.241,2241,0.41,2242,0.241,2252,4.545,2281,4.085,2282,0.46,2306,0.237,2318,0.251,2327,0.328,2328,0.518,2329,1.186,2342,1.651,2344,0.456,2345,0.205,2351,1.801,2352,0.383,2354,1.364,2356,1.136,2357,0.398,2361,0.537,2369,0.251,2370,0.214,2376,0.223,2379,0.749,2380,0.212,2381,3.278,2383,1.113,2386,0.515,2418,0.374,2425,0.241,2434,0.632,2438,0.21,2439,3.449,2440,0.241,2441,0.263,2446,0.164,2447,0.169,2450,0.467,2486,1.136,2491,0.201,2499,0.806,2507,1.124,2529,1.215,2530,1.459,2531,0.875,2532,0.456,2533,0.456,2534,0.456,2535,0.442,2536,0.41,2537,0.43,2538,0.251,2541,0.854,2542,0.233,2547,0.706,2550,0.943,2556,0.806,2558,4.533,2560,3.666,2562,5.606,2563,0.263,2571,0.456,2572,3.99,2587,0.42,2588,0.214,2589,0.28,2590,0.271,2591,0.515,2592,0.549,2593,0.233,2594,1.292,2595,0.251,2596,0.229,2597,0.515,2598,0.263,2599,0.28,2600,0.233,2601,0.233,2602,1.521,2603,1.262,2604,1.778,2605,1,2606,0.456,2607,0.241,2608,1.36,2609,1.705,2610,0.233,2611,0.233,2612,0.28,2613,0.226,2614,0.263,2615,0.456,2616,0.226,2617,0.515,2618,1.306,2619,0.65,2620,1.495,2621,0.251,2622,0.251,2623,0.241,2624,0.28,2625,0.263,2626,0.263,2627,1.331,2628,0.241,2629,0.251,2630,0.263,2631,0.251,2632,0.251,2633,0.251,2634,0.263,2635,0.263,2636,0.263,2637,0.263,2638,0.263,2639,0.263,2640,0.263,2641,0.28,2642,0.263,2643,0.456,2644,0.807,2645,0.233,2646,0.99,2647,1.928,2648,0.28,2649,0.28,2650,0.308,2651,0.603,2652,0.28,2653,1.158,2654,0.807,2655,1.158,2656,0.99,2657,0.603,2658,4.247,2659,0.603,2660,1.213,2661,0.905,2662,1.054,2663,0.603,2664,2.388,2665,0.603,2666,1.054,2667,0.99,2668,2.025,2669,0.603,2670,0.603,2671,0.28,2672,0.28,2673,0.251,2674,0.28,2675,0.308,2676,0.28,2677,0.515,2678,0.515,2679,0.308,2680,0.308,2681,0.251,2682,0.308,2683,0.28,2684,0.905,2685,0.491,2686,2.678,2687,0.757,2688,0.456,2689,0.205,2690,0.28,2691,0.442,2692,1.054,2693,0.233,2694,0.875,2695,0.442,2696,0.456,2697,0.251,2698,2.597,2699,0.251,2700,0.251,2701,0.988,2702,0.28,2703,0.271,2704,0.308,2705,0.28,2706,0.28,2707,0.549,2708,0.481,2709,0.233,2710,0.308,2711,0.251,2712,0.28,2713,2.995,2714,0.603,2715,1.054,2716,2.726,2717,0.603,2718,1.292,2719,0.603,2720,1.158,2721,2.144,2722,0.263,2723,0.28,2724,0.263,2725,0.28,2726,0.251,2727,0.28,2728,0.502,2729,0.549,2730,0.308,2731,0.28,2732,0.28,2733,0.549,2734,0.549,2735,0.28,2736,0.28,2737,0.251,2738,0.491,2739,0.807,2740,0.425,2741,0.28,2742,0.214,2743,0.308,2744,0.237,2745,0.28,2746,0.861,2747,0.263,2748,0.28,2749,0.233,2750,0.549,2751,0.308,2752,0.491,2753,0.549,2754,2.21,2755,2.388,2756,0.28,2757,0.28,2758,0.308,2759,0.308,2760,0.472,2761,0.875,2762,0.28,2763,0.491,2764,0.43,2765,2.784,2766,3.309,2767,0.875,2768,2.104,2769,0.491,2770,0.251,2771,0.603,2772,0.22,2773,0.374,2774,0.531,2775,0.807,2776,0.308,2777,0.308,2778,0.308,2779,0.233,2780,0.28,2781,1.155,2782,0.308,2783,0.241,2784,0.28,2785,0.449,2786,0.531,2787,0.476,2788,0.943,2789,0.442,2790,1.262,2791,0.491,2792,0.226,2793,0.233,2794,0.28,2795,0.28,2796,0.28,2797,0.28,2798,0.28,2799,0.28,2800,0.251,2801,2.905,2802,0.263,2803,1.072,2804,0.491,2805,0.43,2806,1.113,2807,0.41,2808,0.28,2809,0.251,2810,0.771,2811,0.807,2812,1.054,2813,0.549,2814,0.807,2815,0.28,2816,0.28,2817,0.251,2818,0.549,2819,0.205,2820,0.28,2821,0.28,2822,0.394,2823,0.28,2824,0.549,2825,0.28,2826,0.28,2827,0.28,2828,0.28,2829,0.28,2830,0.28,2831,0.28,2832,0.28,2833,0.28,2834,0.263,2835,0.28,2836,0.28,2837,0.28,2838,0.549,2839,0.214,2840,2.823,2841,1.36,2842,0.241,2843,0.28,2844,0.241,2845,0.233,2846,1.054,2847,0.28,2848,0.28,2849,1.746,2850,0.28,2851,0.28,2852,0.28,2853,0.757,2854,0.28,2855,1.054,2856,0.28,2857,0.28,2858,0.28,2859,1.292,2860,0.515,2861,0.549,2862,0.549,2863,0.721,2864,0.28,2865,1.634,2866,0.214,2867,0.251,2868,0.263,2869,0.28,2870,0.28,2871,0.28,2872,1.012,2873,0.28,2874,0.28,2875,0.28,2876,0.28,2877,0.442,2878,0.263,2879,0.263,2880,0.251,2881,0.251,2882,0.263,2883,0.757,2884,0.28,2885,0.28,2886,0.28,2887,0.263,2888,0.757,2889,0.549,2890,0.28,2891,0.263,2892,0.263,2893,0.757,2894,0.263,2895,0.515,2896,0.308,2897,0.308,2898,0.308,2899,0.308,2900,0.308,2901,0.308,2902,0.308,2903,0.308,2904,0.28,2905,0.263,2906,0.807,2907,0.757,2908,0.757,2909,0.263,2910,0.549,2911,0.515,2912,0.515,2913,0.263,2914,1.213,2915,0.549,2916,0.28,2917,0.263,2918,2.21,2919,0.263,2920,0.28,2921,1.521,2922,1.155,2923,0.28,2924,0.549,2925,0.226,2926,0.28,2927,0.263,2928,0.456,2929,0.263,2930,0.757,2931,0.757,2932,0.263,2933,0.515,2934,0.28,2935,0.263,2936,0.515,2937,0.472,2938,0.28,2939,0.263,2940,0.28,2941,0.28,2942,0.549,2943,0.549,2944,0.28,2945,0.807,2946,0.99,2947,0.28,2948,1.428,2949,0.251,2950,0.308,2951,0.28,2952,0.549,2953,0.263,2954,0.515,2955,0.515,2956,0.263,2957,0.263,2958,0.263,2959,0.28,2960,0.28,2961,1.953,2962,0.549,2963,0.308,2964,0.263,2965,0.263,2966,1.428,2967,0.263,2968,0.308,2969,0.308,2970,0.603,2971,0.308,2972,0.263,2973,0.263,2974,0.28,2975,1.521,2976,0.603,2977,0.28,2978,0.807,2979,0.28,2980,0.603,2981,0.28,2982,0.807,2983,0.28,2984,0.308,2985,0.28,2986,0.549,2987,0.549,2988,1.054,2989,0.28,2990,0.603,2991,0.28,2992,1.054,2993,0.807,2994,0.28,2995,0.603,2996,0.28,2997,0.807,2998,0.28,2999,0.308,3000,0.308,3001,0.308,3002,0.308,3003,0.308,3004,0.28,3005,0.308,3006,0.28,3007,0.28,3008,0.251,3009,0.251,3010,0.251,3011,0.28,3012,0.491,3013,0.28,3014,0.515,3015,0.28,3016,0.491,3017,1.746,3018,0.721,3019,0.99,3020,0.237,3021,0.28,3022,0.28,3023,0.28,3024,0.65,3025,0.28,3026,0.28,3027,0.28,3028,0.28,3029,0.28,3030,0.28,3031,0.549,3032,0.807,3033,0.28,3034,0.28,3035,0.308,3036,0.886,3037,0.659,3038,0.263,3039,0.212,3040,0.28,3041,0.632,3042,0.28,3043,0.263,3044,0.99,3045,0.28,3046,0.28,3047,1.634,3048,1.634,3049,1.741,3050,1.741,3051,1.741,3052,1.741,3053,1.741,3054,0.28,3055,0.28,3056,0.28,3057,0.28,3058,0.28,3059,0.28,3060,0.28,3061,0.28,3062,0.28,3063,0.28,3064,0.28,3065,0.28,3066,0.28,3067,0.28,3068,0.28,3069,0.28,3070,0.28,3071,0.28,3072,0.28,3073,0.28,3074,0.28,3075,0.28,3076,0.28,3077,0.28,3078,0.28,3079,0.28,3080,0.28,3081,0.28,3082,0.28,3083,0.28,3084,0.28,3085,0.28,3086,0.28,3087,0.28,3088,0.28,3089,0.28,3090,0.28,3091,0.28,3092,0.28,3093,0.28,3094,0.28,3095,0.28,3096,0.28,3097,0.28,3098,0.28,3099,0.28,3100,0.28,3101,0.28,3102,0.251,3103,0.721,3104,0.28,3105,0.28,3106,1.054,3107,0.271,3108,0.28,3109,0.28,3110,0.251,3111,0.28,3112,0.28,3113,0.241,3114,0.241,3115,0.449,3116,0.263,3117,0.515,3118,0.472,3119,0.28,3120,0.28,3121,0.28,3122,0.241,3123,0.241,3124,0.515,3125,0.807,3126,0.549,3127,0.603,3128,0.263,3129,0.549,3130,0.549,3131,0.263,3132,0.263,3133,0.28,3134,0.263,3135,0.263,3136,0.886,3137,0.28,3138,0.28,3139,0.257,3140,0.491,3141,0.28,3142,0.28,3143,0.425,3144,0.251,3145,0.28,3146,0.28,3147,0.28,3148,0.28,3149,0.28,3150,0.28,3151,0.28,3152,0.226,3153,0.549,3154,0.308,3155,0.515,3156,0.308,3157,0.308,3158,0.308,3159,0.308,3160,0.549,3161,0.308,3162,0.308,3163,0.308,3164,0.308,3165,0.549,3166,0.308,3167,0.308,3168,0.308,3169,0.308,3170,0.549,3171,0.837,3172,0.251,3173,0.308,3174,0.28,3175,0.257,3176,0.28,3177,0.28,3178,0.21,3179,0.251,3180,0.251,3181,0.251,3182,0.251,3183,0.241,3184,0.456,3185,0.28,3186,0.263,3187,0.251,3188,0.28,3189,0.28,3190,0.178,3191,0.251,3192,0.442,3193,0.251,3194,0.241,3195,0.251,3196,1.131,3197,0.549,3198,0.472,3199,0.217,3200,0.233,3201,0.241,3202,0.251,3203,0.263,3204,0.28,3205,0.28,3206,0.241,3207,0.22]],["component/46",[68,0.364]],["title/47-1",[1496,26.047,3208,44.735]],["name/47-1",[]],["text/47-1",[]],["component/47-1",[]],["title/47-2",[733,38.207,2352,32.112]],["name/47-2",[]],["text/47-2",[]],["component/47-2",[]],["title/47-3",[5,26.047,76,21.109]],["name/47-3",[]],["text/47-3",[]],["component/47-3",[]],["title/47-4",[76,21.109,2311,38.966]],["name/47-4",[]],["text/47-4",[]],["component/47-4",[]],["title/47-5",[28,38.519]],["name/47-5",[]],["text/47-5",[]],["component/47-5",[]],["title/47-6",[473,30.372]],["name/47-6",[]],["text/47-6",[]],["component/47-6",[]],["title/47",[1496,26.047,3208,44.735]],["name/47",[1496,0.412,3208,0.708]],["text/47",[0,1.879,5,1.016,8,2.217,13,1.978,14,2.201,19,1.643,22,1.934,27,2.472,28,3.478,34,1.372,50,1.184,64,1.044,66,1.498,71,1.356,76,2.619,82,4.386,88,5.105,94,4.784,123,1.45,126,2.405,134,1.279,137,2.102,155,2.587,163,3.721,174,1.498,180,2.758,188,5.391,189,1.297,190,1.378,192,1.418,201,3.869,213,2.59,220,1.257,252,3.102,259,3.195,291,1.463,298,2.916,320,2.722,351,1.302,365,4.119,368,1.552,420,1.311,435,1.8,465,3.3,473,2.116,485,2.305,535,2.334,561,4.535,582,3.241,629,2.128,655,2.953,668,1.83,748,1.614,762,1.536,774,2.916,812,2.916,818,3.47,901,1.759,904,3.654,931,2.999,1226,4.427,1229,1.83,1372,2.193,1496,2.177,1704,4.711,1741,1.513,1941,2.27,1942,3.398,2158,4.862,2181,4.454,2235,2.438,2342,4.252,2352,1.253,2446,3.307,2447,1.596,2449,3.858,2450,3.818,2541,4.717,2643,2.193,2787,2.6,3123,3.782,3190,1.675,3207,2.071,3208,7.592,3209,2.363,3210,2.481,3211,4.996,3212,2.481,3213,2.481,3214,2.193,3215,2.481,3216,2.363,3217,3.937,3218,5.904,3219,5.061,3220,5.061,3221,2.643,3222,2.363,3223,4.404,3224,3.45,3225,3.45,3226,3.45,3227,5.174,3228,5.174,3229,3.782,3230,5.685,3231,1.934,3232,2.363,3233,6.199,3234,4.134,3235,2.902,3236,2.902,3237,2.643,3238,2.999,3239,2.643,3240,3.45,3241,2.791,3242,2.643]],["component/47",[68,0.364]],["title/48-1",[1496,26.047,2280,53.065]],["name/48-1",[]],["text/48-1",[]],["component/48-1",[]],["title/48-2",[733,38.207,2352,32.112]],["name/48-2",[]],["text/48-2",[]],["component/48-2",[]],["title/48-3",[5,26.047,76,21.109]],["name/48-3",[]],["text/48-3",[]],["component/48-3",[]],["title/48-4",[76,21.109,2311,38.966]],["name/48-4",[]],["text/48-4",[]],["component/48-4",[]],["title/48-5",[28,38.519]],["name/48-5",[]],["text/48-5",[]],["component/48-5",[]],["title/48-6",[473,30.372]],["name/48-6",[]],["text/48-6",[]],["component/48-6",[]],["title/48-7",[2435,49.047]],["name/48-7",[]],["text/48-7",[]],["component/48-7",[]],["title/48-8",[185,26.74,559,31.714,2436,33.928]],["name/48-8",[]],["text/48-8",[]],["component/48-8",[]],["title/48-9",[19,25.262,473,25.32]],["name/48-9",[]],["text/48-9",[]],["component/48-9",[]],["title/48-10",[635,40.211,3243,67.738]],["name/48-10",[]],["text/48-10",[]],["component/48-10",[]],["title/48-11",[368,34.107,635,34.476,2270,41.282]],["name/48-11",[]],["text/48-11",[]],["component/48-11",[]],["title/48",[1496,26.047,2280,53.065]],["name/48",[1496,0.412,2280,0.84]],["text/48",[0,0.869,5,0.387,8,0.506,9,1.116,13,0.84,14,0.503,19,1.63,23,1.092,31,0.559,40,1.354,50,0.837,57,0.559,64,0.738,75,4.56,76,0.313,82,1.035,88,4.064,119,0.487,121,0.588,123,0.552,128,3.449,133,2.565,134,1.267,137,0.892,147,0.57,151,0.765,152,1.928,153,0.544,155,0.591,156,1.78,167,5.235,179,0.547,180,2.354,185,0.463,188,5.09,189,2.371,201,3.457,203,0.504,205,0.752,206,3.668,213,1.498,215,0.788,216,0.769,217,0.788,220,2.496,221,2.458,222,5.739,223,1.551,224,4.888,225,1.869,226,4.888,227,1.605,228,5.113,229,6.712,230,3.884,231,1.869,232,2.812,233,5.123,234,3.625,236,3.906,238,3.752,242,1.869,243,1.869,244,5.894,245,4.594,246,1.869,247,2.812,248,2.738,256,1.141,258,1.449,259,0.904,260,0.736,263,0.899,269,0.899,287,0.637,291,2.133,298,0.963,303,1.397,346,1.341,351,0.495,368,0.591,376,0.562,385,1.757,389,2.618,395,1.086,405,3.73,420,0.927,441,0.864,443,0.736,445,1.879,465,1.308,468,0.506,473,0.699,485,0.526,535,1.387,559,0.549,561,1.874,564,0.51,628,2.526,638,10.245,650,4.821,654,2.396,656,0.533,659,2.396,663,2.209,696,5.439,697,1.551,738,0.518,770,1.086,786,0.6,812,0.518,818,0.982,855,5.333,965,0.576,1074,0.685,1226,0.562,1372,0.835,1445,0.864,1486,0.899,1496,0.719,1741,1.874,1942,2.623,1969,2.668,2031,3.618,2142,3.854,2143,2.341,2235,1.449,2270,2.328,2280,3.423,2327,2.884,2352,0.477,2361,2.179,2446,1.092,2447,0.607,2449,1.913,2450,2.228,2451,0.646,2454,0.655,2501,2.806,2541,1.049,2742,0.769,2819,0.736,3152,4.223,3190,0.637,3238,0.685,3241,0.637,3243,2.618,3244,1.104,3245,0.944,3246,1.671,3247,1.006,3248,1.006,3249,1.869,3250,1.006,3251,2.618,3252,0.835,3253,1.869,3254,2.341,3255,2.618,3256,1.869,3257,1.104,3258,1.104,3259,1.104,3260,1.104,3261,0.944,3262,0.864,3263,0.899,3264,1.006,3265,0.864,3266,1.104,3267,0.899,3268,1.869,3269,1.869,3270,1.755,3271,1.869,3272,1.869,3273,1.869,3274,2.052,3275,1.618,3276,1.869,3277,10.346,3278,1.006,3279,1.2,3280,1.104,3281,1.104,3282,3.595,3283,4.798,3284,4.232,3285,1.104,3286,4.798,3287,2.052,3288,0.899,3289,1.104,3290,5.761,3291,7.766,3292,8.244,3293,8.244,3294,8.244,3295,5.761,3296,5.761,3297,5.761,3298,2.875,3299,7.766,3300,7.766,3301,4.232,3302,4.798,3303,4.232,3304,4.232,3305,4.232,3306,1.104,3307,1.104,3308,1.104,3309,1.104,3310,1.104,3311,1.104,3312,1.104,3313,1.104,3314,1.104,3315,4.798,3316,1.104,3317,2.875,3318,2.458,3319,2.875,3320,2.052,3321,2.717,3322,3.074,3323,2.717,3324,2.812,3325,3.595,3326,1.104,3327,1.104,3328,1.104,3329,2.875,3330,1.104,3331,1.104,3332,1.104,3333,1.104,3334,1.104,3335,1.104,3336,1.104,3337,2.052,3338,2.052,3339,1.869,3340,1.104,3341,1.104]],["component/48",[68,0.364]],["title/49-1",[1496,26.047,2279,48.601]],["name/49-1",[]],["text/49-1",[]],["component/49-1",[]],["title/49-2",[733,38.207,2352,32.112]],["name/49-2",[]],["text/49-2",[]],["component/49-2",[]],["title/49-3",[5,26.047,76,21.109]],["name/49-3",[]],["text/49-3",[]],["component/49-3",[]],["title/49-4",[76,21.109,2311,38.966]],["name/49-4",[]],["text/49-4",[]],["component/49-4",[]],["title/49-5",[28,38.519]],["name/49-5",[]],["text/49-5",[]],["component/49-5",[]],["title/49-6",[473,30.372]],["name/49-6",[]],["text/49-6",[]],["component/49-6",[]],["title/49-7",[2435,49.047]],["name/49-7",[]],["text/49-7",[]],["component/49-7",[]],["title/49-8",[185,26.74,559,31.714,2436,33.928]],["name/49-8",[]],["text/49-8",[]],["component/49-8",[]],["title/49-9",[19,25.262,473,25.32]],["name/49-9",[]],["text/49-9",[]],["component/49-9",[]],["title/49",[1496,26.047,2279,48.601]],["name/49",[1496,0.412,2279,0.769]],["text/49",[5,0.556,8,1.311,9,0.863,13,2.257,14,0.722,19,2.277,20,2.147,22,1.057,27,1.462,31,1.978,40,1.347,64,1.029,65,0.849,66,0.819,67,0.782,74,0.883,75,0.683,76,1.566,82,0.8,88,1.925,106,0.893,123,0.793,126,1.423,134,1.26,137,3.123,147,0.819,151,1.067,152,0.638,163,1.321,174,0.819,180,2.73,185,1.199,188,5.236,189,0.709,190,0.753,191,0.744,201,2.003,213,1.991,219,0.811,220,1.239,223,1.199,252,1.835,258,0.8,259,1.721,276,0.804,287,3.869,291,0.8,298,0.744,313,0.941,351,0.712,354,2.056,376,0.807,388,0.883,417,0.916,419,1.132,420,2.492,452,0.984,453,0.934,459,0.717,465,2.174,468,0.728,473,1.33,485,1.363,493,1.199,524,2.642,535,2.306,561,2.036,564,0.733,582,2.036,599,0.811,629,1.163,635,0.858,651,1.105,656,1.38,680,0.962,681,1.057,738,0.744,762,0.84,774,1.342,786,0.863,790,0.992,794,1.292,812,1.342,817,0.84,855,2.462,857,4.974,931,0.984,965,0.827,1037,1.292,1094,3.251,1121,2.462,1128,3.152,1164,1.61,1172,1.047,1181,0.992,1184,4.812,1221,1.018,1226,0.807,1274,1.092,1278,7.406,1356,4.738,1372,1.199,1388,4.783,1393,6.238,1484,1.105,1496,1.002,1497,1.147,1633,1.219,1741,2.876,1842,1.163,1922,1.132,1941,1.241,1942,2.612,1968,3.598,2084,1.057,2153,4.39,2172,1.819,2181,0.877,2195,1.163,2235,2.782,2279,6.913,2327,3.644,2328,0.928,2352,0.685,2361,0.962,2406,1.926,2436,0.844,2446,2.078,2447,0.872,2449,2.078,2450,2.516,2451,2.284,2454,0.941,2491,1.037,2494,1.322,2541,2.443,2572,2.284,2688,1.199,2787,1.538,3199,2.015,3207,1.132,3208,4.579,3209,1.292,3210,1.357,3212,1.357,3213,1.357,3214,1.199,3215,1.357,3216,1.292,3217,1.292,3222,1.292,3225,3.937,3226,3.937,3227,3.937,3228,3.937,3229,4.315,3230,1.869,3240,1.132,3241,2.254,3275,0.893,3279,2.284,3342,1.445,3343,5.731,3344,1.445,3345,1.445,3346,2.605,3347,2.951,3348,2.951,3349,1.357,3350,1.357,3351,1.357,3352,1.357,3353,1.357,3354,1.357,3355,1.357,3356,1.357,3357,1.357,3358,1.357,3359,1.357,3360,1.357,3361,1.357,3362,1.357,3363,1.357,3364,1.357,3365,1.357,3366,1.357,3367,1.357,3368,1.357,3369,1.357,3370,1.357,3371,1.357,3372,1.357,3373,1.357,3374,1.163,3375,1.357,3376,1.163,3377,1.357,3378,1.357,3379,1.357,3380,1.357,3381,1.357,3382,1.292,3383,1.357,3384,1.292,3385,1.357,3386,1.357,3387,1.357,3388,1.357,3389,1.357,3390,1.357,3391,1.357,3392,1.357,3393,1.357,3394,1.292,3395,1.357,3396,1.292,3397,1.357,3398,1.357,3399,1.357,3400,1.357,3401,1.357,3402,1.199,3403,1.357,3404,1.199,3405,1.445,3406,1.057,3407,2.329,3408,1.241,3409,1.241,3410,1.199,3411,1.357,3412,1.357,3413,1.163,3414,1.132,3415,1.199,3416,1.199,3417,1.292,3418,1.587,3419,1.357,3420,1.357,3421,1.357,3422,1.199,3423,1.587,3424,1.587,3425,1.587,3426,1.587,3427,1.587,3428,4.778,3429,5.517,3430,1.587,3431,1.587,3432,1.292,3433,1.587,3434,1.587,3435,1.445,3436,1.587,3437,1.587,3438,1.587,3439,1.587,3440,1.587,3441,1.357,3442,1.587,3443,1.445,3444,1.587,3445,1.445,3446,1.587,3447,1.445,3448,1.587,3449,2.861,3450,2.861,3451,1.445,3452,1.445,3453,2.861,3454,1.587,3455,1.292,3456,2.823,3457,1.587,3458,1.587,3459,1.587,3460,1.587,3461,1.587,3462,1.587,3463,13.4,3464,1.587,3465,1.587,3466,1.587,3467,1.587,3468,1.587,3469,1.587,3470,1.587,3471,1.587,3472,1.587,3473,1.587,3474,1.587,3475,1.587,3476,1.587,3477,1.587,3478,1.587,3479,1.587,3480,1.587,3481,1.587]],["component/49",[68,0.364]],["title/50-1",[1496,26.047,3482,58.169]],["name/50-1",[]],["text/50-1",[]],["component/50-1",[]],["title/50-2",[733,38.207,2352,32.112]],["name/50-2",[]],["text/50-2",[]],["component/50-2",[]],["title/50-3",[5,26.047,76,21.109]],["name/50-3",[]],["text/50-3",[]],["component/50-3",[]],["title/50-4",[76,21.109,2311,38.966]],["name/50-4",[]],["text/50-4",[]],["component/50-4",[]],["title/50-5",[28,38.519]],["name/50-5",[]],["text/50-5",[]],["component/50-5",[]],["title/50-6",[473,30.372]],["name/50-6",[]],["text/50-6",[]],["component/50-6",[]],["title/50-7",[2435,49.047]],["name/50-7",[]],["text/50-7",[]],["component/50-7",[]],["title/50-8",[185,26.74,559,31.714,2436,33.928]],["name/50-8",[]],["text/50-8",[]],["component/50-8",[]],["title/50-9",[19,25.262,473,25.32]],["name/50-9",[]],["text/50-9",[]],["component/50-9",[]],["title/50",[1496,26.047,3482,58.169]],["name/50",[1496,0.412,2281,0.679]],["text/50",[0,3.3,4,0.647,5,0.282,6,1.18,8,0.698,10,1.671,13,2.193,14,0.366,19,2.221,21,1.799,24,0.417,29,0.386,31,0.407,32,0.806,34,0.38,40,0.717,50,2.768,55,0.775,57,0.407,60,0.819,64,0.548,65,0.43,67,0.396,75,2.814,76,0.616,80,1.562,88,1.622,106,0.453,113,0.366,119,2.881,123,0.402,126,2.304,134,0.671,136,0.495,137,2.842,147,0.415,148,0.435,151,2.339,152,1.108,153,1.862,155,0.43,156,3.687,163,1.003,178,1.602,180,2.224,185,1.156,186,0.897,188,5.205,189,1.232,190,0.382,193,2.138,201,2.385,203,1.725,211,0.395,213,0.905,219,0.779,220,0.348,228,0.499,248,1.698,253,0.477,254,1.75,256,1.533,258,0.768,259,0.957,276,2.346,287,0.464,298,1.771,307,1.396,308,1.39,311,1.191,325,1.396,339,0.897,349,0.52,350,1.151,351,1.475,365,1.41,373,0.758,385,0.745,395,0.806,397,0.891,417,2.179,420,1.486,432,1.149,459,0.688,465,1.255,466,3.414,468,0.369,472,0.874,473,0.274,485,0.726,510,0.828,524,1.2,535,1.33,543,0.473,561,1.132,564,2.315,573,1.06,582,0.419,597,1.149,599,0.779,604,2.381,606,1.194,619,1.117,635,1.491,650,0.891,655,0.491,656,1.33,657,1.612,680,0.923,712,2.853,734,1.087,738,0.715,740,1.151,762,1.149,774,1.293,782,0.847,786,0.437,812,0.715,817,0.806,818,1.574,819,2.021,823,1.499,850,0.629,855,0.961,925,0.598,931,0.499,940,0.491,950,0.903,965,0.419,970,1.542,980,0.511,1002,0.484,1016,0.503,1017,4.369,1027,1.897,1037,0.655,1074,0.499,1094,4.077,1096,0.52,1110,1.17,1112,1.683,1121,1.369,1127,1.698,1128,4.139,1143,0.491,1148,1.819,1154,0.511,1164,0.453,1181,0.503,1182,1.037,1221,0.977,1226,0.409,1232,3.44,1262,1.037,1274,2.598,1278,2.486,1298,0.525,1330,1.302,1337,0.507,1348,2.198,1376,1.151,1393,3.152,1496,0.534,1637,1.037,1666,1.037,1673,2.573,1704,0.891,1741,1.132,1745,0.473,1753,1.073,1805,1.117,1864,1.191,1911,1.387,1917,0.525,1942,3.71,1947,1.302,1968,2.208,2084,1.837,2153,1.967,2172,0.969,2179,1.768,2181,0.445,2192,1.698,2221,0.56,2235,2.129,2281,3.283,2315,2.573,2327,2.295,2328,0.47,2361,2.558,2380,3.448,2381,2.427,2385,4.274,2396,1.151,2418,1.346,2425,1.191,2432,0.56,2436,0.428,2442,1.24,2446,0.811,2447,0.442,2449,0.811,2450,1.732,2451,1.27,2454,0.477,2456,0.732,2499,1.06,2501,4.106,2507,3.374,2536,0.547,2541,2.908,2560,0.977,2562,6,2681,1.24,2696,1.64,2726,2.678,2738,1.24,2773,0.499,2792,2.768,2793,0.608,2805,1.087,2807,0.547,2809,1.24,2810,1.015,2822,0.995,2844,2.156,2849,6.373,3018,0.655,3140,3.075,3143,2.66,3144,4.08,3171,1.101,3172,2.245,3224,1.087,3238,0.499,3241,0.879,3252,0.608,3279,2.709,3323,0.608,3408,1.191,3443,0.732,3445,0.732,3456,1.101,3482,2.953,3483,0.732,3484,0.732,3485,0.732,3486,0.732,3487,0.732,3488,0.732,3489,0.732,3490,1.302,3491,1.191,3492,1.302,3493,1.191,3494,1.24,3495,1.302,3496,1.302,3497,1.302,3498,1.977,3499,1.387,3500,1.856,3501,1.302,3502,1.302,3503,1.302,3504,1.302,3505,0.629,3506,0.804,3507,0.804,3508,0.804,3509,0.804,3510,0.804,3511,0.804,3512,0.804,3513,1.387,3514,1.523,3515,1.523,3516,1.523,3517,1.523,3518,0.574,3519,2.357,3520,1.387,3521,1.24,3522,0.608,3523,1.387,3524,1.387,3525,0.732,3526,2.901,3527,1.856,3528,0.732,3529,0.589,3530,2.357,3531,0.732,3532,0.732,3533,1.302,3534,0.732,3535,0.732,3536,0.732,3537,0.732,3538,1.24,3539,0.732,3540,0.732,3541,0.732,3542,0.732,3543,1.387,3544,0.804,3545,1.387,3546,0.732,3547,1.856,3548,1.977,3549,4.564,3550,4.564,3551,4.181,3552,3.302,3553,0.732,3554,0.732,3555,0.629,3556,0.732,3557,0.732,3558,0.804,3559,2.678,3560,2.357,3561,1.24,3562,0.804,3563,0.804,3564,3.075,3565,2.245,3566,2.357,3567,0.687,3568,0.804,3569,0.655,3570,1.24,3571,0.804,3572,0.655,3573,0.804,3574,0.655,3575,0.655,3576,0.655,3577,0.804,3578,2.511,3579,2.511,3580,1.387,3581,1.302,3582,1.151,3583,1.302,3584,1.24,3585,0.687,3586,1.302,3587,1.387,3588,1.387,3589,1.24,3590,2.245,3591,2.083,3592,1.387,3593,1.387,3594,1.387,3595,2.511,3596,1.24,3597,1.387,3598,1.387,3599,3.439,3600,1.977,3601,1.24,3602,1.387,3603,1.387,3604,1.387,3605,1.387,3606,1.387,3607,1.387,3608,1.387,3609,2.511,3610,2.511,3611,2.511,3612,2.511,3613,2.511,3614,2.511,3615,0.629,3616,3.439,3617,2.511,3618,1.387,3619,2.511,3620,4.883,3621,2.511,3622,1.387,3623,3.439,3624,1.387,3625,1.24,3626,1.387,3627,5.18,3628,1.387,3629,1.387,3630,1.387,3631,0.732,3632,4.883,3633,1.387,3634,1.387,3635,0.732,3636,1.302,3637,0.732,3638,0.732,3639,1.24,3640,1.387,3641,1.387,3642,1.387,3643,1.24,3644,1.387,3645,1.302,3646,0.804,3647,0.804,3648,0.804,3649,1.523,3650,0.804,3651,0.804,3652,0.804,3653,0.804,3654,0.804,3655,0.804,3656,0.804,3657,0.804,3658,0.804,3659,0.589,3660,2.171,3661,1.523,3662,1.523,3663,1.523,3664,3.776,3665,0.804,3666,1.977,3667,0.804,3668,0.708,3669,0.804,3670,0.804,3671,0.804,3672,0.804,3673,0.804,3674,0.804,3675,0.804,3676,0.804,3677,0.67,3678,0.804,3679,0.763,3680,0.804,3681,0.804,3682,0.804,3683,0.804,3684,0.804,3685,1.523,3686,0.732,3687,0.804,3688,0.804,3689,0.804,3690,0.804,3691,0.804,3692,0.732,3693,0.732,3694,0.804,3695,0.732,3696,1.387,3697,1.523,3698,1.523,3699,0.732,3700,0.732]],["component/50",[68,0.364]],["title/51-1",[1496,26.047,2282,38.58]],["name/51-1",[]],["text/51-1",[]],["component/51-1",[]],["title/51-2",[733,38.207,2352,32.112]],["name/51-2",[]],["text/51-2",[]],["component/51-2",[]],["title/51-3",[5,26.047,76,21.109]],["name/51-3",[]],["text/51-3",[]],["component/51-3",[]],["title/51-4",[76,21.109,2311,38.966]],["name/51-4",[]],["text/51-4",[]],["component/51-4",[]],["title/51-5",[473,30.372]],["name/51-5",[]],["text/51-5",[]],["component/51-5",[]],["title/51-6",[28,38.519]],["name/51-6",[]],["text/51-6",[]],["component/51-6",[]],["title/51-7",[2435,49.047]],["name/51-7",[]],["text/51-7",[]],["component/51-7",[]],["title/51-8",[19,25.262,473,25.32]],["name/51-8",[]],["text/51-8",[]],["component/51-8",[]],["title/51",[1496,26.047,2282,38.58]],["name/51",[1496,0.412,2282,0.61]],["text/51",[0,1.027,2,0.634,4,0.438,5,0.674,6,0.56,8,0.882,9,2.479,13,2.068,14,0.469,19,2.709,21,0.747,23,1.807,27,0.527,29,1.3,31,2.31,32,3.128,42,0.58,50,0.785,53,0.961,55,0.979,57,0.974,58,1.157,60,0.554,62,0.499,64,0.692,67,0.508,72,0.459,75,0.828,76,0.768,80,3.986,84,6.157,106,0.58,113,1.231,115,1.505,118,3.403,119,2.425,123,0.515,127,0.65,134,1.767,137,1.982,147,0.532,151,0.717,152,1.087,153,0.508,156,0.51,157,2.378,163,2.542,164,0.62,185,1.135,186,1.593,188,4.631,189,2.459,190,0.489,191,0.902,192,0.503,193,0.974,194,0.607,196,1.471,198,0.806,201,4.314,204,1.309,207,1.372,211,0.506,213,2.76,220,1.975,251,1.046,258,1.364,260,3.039,276,1.72,288,0.673,298,3.742,300,1.234,301,2.311,307,0.522,308,0.97,314,0.755,320,2.257,322,0.717,323,0.629,327,1.397,336,0.576,339,4.413,344,0.806,351,0.462,365,0.527,373,2.737,376,2.8,385,0.503,398,6.838,414,1.07,420,0.869,458,1.133,459,0.869,465,1.825,466,1.935,468,0.882,473,0.655,480,0.62,485,2.174,501,1.788,508,1.282,510,1.046,535,1.306,542,1.096,543,0.607,544,4.577,548,1.645,549,1.616,563,0.65,564,2.542,566,0.839,577,0.545,578,1.279,597,0.545,599,3.022,604,0.65,606,0.566,628,0.542,635,0.557,640,1.603,642,1.295,656,1.935,669,0.881,670,1.157,681,0.687,683,0.644,703,3.631,710,0.745,738,0.483,739,1.432,762,0.545,774,0.483,778,1.184,782,1.889,799,1.257,808,0.687,817,3.128,818,1.919,822,1.841,823,3.771,851,4.705,873,2.672,898,0.644,901,1.64,916,1.878,925,0.766,931,6.127,951,0.694,968,0.529,970,0.576,974,0.701,986,2.33,1016,1.203,1018,0.701,1024,0.735,1071,0.778,1096,0.667,1118,0.644,1143,0.629,1148,0.68,1154,1.721,1170,0.694,1179,0.778,1191,2.508,1192,0.634,1196,0.629,1229,0.65,1254,3.135,1317,0.639,1320,1.295,1323,0.792,1335,1.862,1338,0.673,1339,0.644,1357,0.881,1368,0.778,1373,0.655,1388,2.861,1442,2.311,1450,0.881,1496,1.189,1633,0.792,1657,1.174,1667,1.822,1704,2.667,1725,0.792,1745,1.133,1785,4.275,1807,0.68,1879,5.783,1887,1.505,1915,0.881,1916,0.881,1919,0.701,1923,0.717,1953,1.295,1967,1.372,1969,0.65,2044,1.454,2051,0.726,2136,0.778,2138,0.717,2139,1.269,2187,0.583,2188,0.62,2193,2.313,2208,1.118,2212,1.166,2221,0.717,2231,0.735,2235,0.519,2241,1.309,2248,3.198,2252,0.58,2282,6.334,2329,1.064,2333,3.081,2344,0.778,2345,0.687,2349,0.755,2352,1.168,2356,0.701,2383,2.263,2410,0.745,2435,1.488,2436,2.134,2438,0.701,2439,1.013,2446,1.023,2447,1.488,2449,1.023,2450,0.542,2499,2.364,2501,1.582,2502,2.904,2512,0.881,2530,0.701,2600,0.778,2603,0.778,2610,0.778,2611,0.778,2623,0.806,2627,0.717,2645,4.466,2673,0.839,2686,0.629,2688,0.778,2701,0.717,2744,0.792,2764,0.735,2771,1.309,2773,1.678,2787,1.455,2803,0.778,2806,0.687,2819,1.803,2845,2.045,3008,0.839,3039,1.324,3113,0.806,3178,0.701,3184,0.778,3224,1.372,3231,5.161,3232,1.566,3288,0.839,3591,2.566,3615,2.656,3701,0.938,3702,0.938,3703,0.938,3704,2.203,3705,0.938,3706,0.717,3707,0.938,3708,1.03,3709,0.938,3710,4.011,3711,3.653,3712,0.938,3713,3.265,3714,3.093,3715,3.093,3716,3.093,3717,2.116,3718,4.812,3719,6.318,3720,4.153,3721,1.566,3722,1.03,3723,0.938,3724,1.03,3725,1.752,3726,0.938,3727,0.881,3728,0.938,3729,0.938,3730,0.821,3731,1.372,3732,0.839,3733,0.839,3734,0.938,3735,0.938,3736,1.693,3737,0.938,3738,0.938,3739,0.938,3740,0.938,3741,0.938,3742,1.752,3743,1.752,3744,0.938,3745,0.938,3746,0.938,3747,0.938,3748,0.938,3749,3.093,3750,0.938,3751,0.938,3752,0.938,3753,0.938,3754,1.752,3755,0.938,3756,0.938,3757,0.858,3758,1.566,3759,0.938,3760,0.938,3761,1.566,3762,1.566,3763,1.645,3764,3.093,3765,2.203,3766,1.924,3767,1.03,3768,1.03,3769,1.03,3770,0.806,3771,0.881,3772,1.03,3773,1.03,3774,1.03,3775,1.03,3776,1.752,3777,0.938,3778,0.938,3779,0.881,3780,0.839,3781,0.839,3782,0.938,3783,0.839,3784,0.839,3785,0.839,3786,0.839,3787,0.839,3788,0.839,3789,0.839,3790,0.938,3791,0.839,3792,0.839,3793,0.839,3794,0.778,3795,0.839,3796,0.839,3797,0.839,3798,0.839,3799,0.839,3800,0.839,3801,0.839,3802,0.839,3803,0.839,3804,0.839,3805,0.839,3806,0.839,3807,0.839,3808,0.839,3809,0.839,3810,0.839,3811,0.839,3812,0.839,3813,0.839,3814,0.839,3815,0.778,3816,0.839,3817,0.839]],["component/51",[68,0.364]],["title/52-1",[1496,26.047,3275,41.861]],["name/52-1",[]],["text/52-1",[]],["component/52-1",[]],["title/52-2",[733,38.207,2352,32.112]],["name/52-2",[]],["text/52-2",[]],["component/52-2",[]],["title/52-3",[5,26.047,76,21.109]],["name/52-3",[]],["text/52-3",[]],["component/52-3",[]],["title/52-4",[76,21.109,2311,38.966]],["name/52-4",[]],["text/52-4",[]],["component/52-4",[]],["title/52-5",[28,38.519]],["name/52-5",[]],["text/52-5",[]],["component/52-5",[]],["title/52-6",[473,30.372]],["name/52-6",[]],["text/52-6",[]],["component/52-6",[]],["title/52-7",[2435,49.047]],["name/52-7",[]],["text/52-7",[]],["component/52-7",[]],["title/52-8",[185,26.74,559,31.714,2436,33.928]],["name/52-8",[]],["text/52-8",[]],["component/52-8",[]],["title/52-9",[19,25.262,473,25.32]],["name/52-9",[]],["text/52-9",[]],["component/52-9",[]],["title/52-10",[19,15.169,76,12.676,180,19.817,2541,22.833,3275,25.136,3706,31.088]],["name/52-10",[]],["text/52-10",[]],["component/52-10",[]],["title/52",[1496,26.047,3275,41.861]],["name/52",[1496,0.412,3279,0.688]],["text/52",[0,1.391,4,0.524,5,0.432,8,0.566,13,0.505,14,0.562,19,2.373,28,0.533,31,2.331,32,0.653,40,1.071,42,0.695,50,0.503,53,0.617,62,1.102,64,0.818,65,0.66,67,0.608,71,2.89,75,0.979,76,0.898,80,2.936,88,1.938,94,2.087,96,0.695,98,3.461,119,1.733,123,0.617,126,0.614,133,0.881,134,1.394,136,0.759,137,2.871,146,1.192,147,0.637,151,1.466,152,0.914,153,0.608,156,1.126,163,0.57,180,0.548,185,0.954,188,5.145,189,1.757,193,0.625,201,2.929,203,1.039,206,0.628,213,1.918,220,0.535,248,2.03,254,1.21,258,1.595,259,0.544,271,0.643,307,0.625,312,0.859,316,1.055,325,1.152,351,2.963,364,0.814,365,0.631,397,0.722,405,0.799,415,0.584,417,3.299,420,2.346,432,1.204,465,1.035,468,0.566,473,1.339,485,0.588,510,1.72,535,1.098,561,1.649,564,2.126,572,0.905,573,1.583,582,0.643,597,0.653,599,1.617,606,0.678,628,0.65,633,1.548,649,0.806,650,0.722,654,0.822,655,0.753,656,1.098,659,0.822,680,0.748,734,0.881,738,0.579,782,1.265,786,0.671,792,0.859,812,0.579,817,1.674,818,2.203,819,0.905,823,1.236,848,0.814,855,0.778,940,0.753,965,0.643,1002,1.368,1017,1.217,1091,2.474,1112,1.931,1121,1.434,1154,0.785,1164,0.695,1181,0.772,1182,0.84,1192,0.759,1221,2.522,1226,0.628,1229,0.778,1232,2.953,1262,0.84,1274,2.177,1338,0.806,1393,0.84,1399,0.965,1442,0.84,1448,0.933,1473,0.965,1484,1.583,1496,1.108,1568,0.905,1637,0.84,1658,0.849,1704,1.85,1741,2.98,1753,0.869,1874,0.849,1922,0.881,1923,0.859,1942,1.243,2084,1.516,2087,1.667,2092,1.055,2094,0.933,2096,1.055,2098,1.055,2102,0.905,2104,0.881,2106,0.881,2172,1.446,2179,1.005,2181,1.749,2235,1.982,2281,2.656,2327,3.362,2328,0.722,2361,1.917,2380,0.849,2381,3.66,2385,3.284,2418,1.411,2446,1.21,2447,0.678,2449,1.21,2450,2.735,2451,1.33,2453,0.933,2454,0.732,2457,0.965,2501,0.722,2507,0.831,2536,0.84,2541,5.406,2627,0.859,2681,1.005,2689,0.822,2696,0.933,2773,1.411,2792,0.905,2805,0.881,2807,0.84,2810,1.516,2822,0.806,2844,1.779,3152,0.905,3190,1.826,3224,1.623,3230,2.067,3238,0.765,3241,0.712,3254,1.005,3262,0.965,3263,1.005,3265,0.965,3267,1.005,3275,6.197,3279,4.287,3321,0.933,3322,1.055,3323,0.933,3324,2.474,3406,0.822,3409,3.075,3410,0.933,3441,1.055,3490,1.055,3491,0.965,3492,1.055,3493,0.965,3494,1.005,3495,1.055,3496,1.055,3497,1.055,3500,1.055,3501,1.055,3502,1.055,3503,1.055,3504,1.055,3519,1.055,3526,1.747,3527,1.055,3530,1.055,3533,1.055,3545,2.072,3546,1.124,3547,1.945,3559,1.852,3560,1.945,3561,1.005,3564,1.852,3565,3.201,3566,3.361,3567,1.055,3569,1.005,3570,1.852,3572,1.005,3574,1.005,3575,1.005,3576,1.005,3580,2.072,3581,1.055,3582,0.933,3583,1.055,3584,4.228,3585,1.055,3659,0.905,3706,2.202,3818,0.933,3819,1.124,3820,1.055,3821,1.055,3822,2.072,3823,1.124,3824,1.124,3825,1.124,3826,1.124,3827,2.072,3828,3.163,3829,2.275,3830,1.124,3831,3.163,3832,1.124,3833,0.965,3834,3.163,3835,6.185,3836,8.199,3837,5.717,3838,6.185,3839,3.163,3840,0.918,3841,3.163,3842,3.163,3843,2.275,3844,1.234,3845,4.73,3846,1.234,3847,2.072,3848,0.905,3849,2.275,3850,3.163,3851,2.072,3852,2.275,3853,2.275,3854,3.361,3855,3.163,3856,3.163,3857,2.275,3858,1.124,3859,2.072,3860,0.933,3861,1.124,3862,1.005,3863,1.234,3864,1.124,3865,3.932,3866,1.005,3867,1.124,3868,0.965,3869,1.124,3870,1.234,3871,1.124,3872,0.933,3873,1.234,3874,1.124,3875,1.234,3876,1.124,3877,3.163,3878,8.199,3879,6.185,3880,6.185,3881,2.275,3882,5.717,3883,0.965,3884,3.163,3885,1.234,3886,1.234,3887,1.234,3888,1.234,3889,7.934,3890,1.234,3891,3.163,3892,6.185,3893,6.185,3894,6.185,3895,1.234,3896,1.234,3897,1.234,3898,0.933,3899,3.163,3900,1.234,3901,1.234,3902,1.055,3903,1.234,3904,1.124,3905,4.228,3906,2.275,3907,3.163,3908,0.918,3909,1.005,3910,3.932,3911,3.163,3912,0.965,3913,1.234,3914,1.005,3915,1.234,3916,3.163,3917,1.234,3918,0.965,3919,2.275,3920,1.234,3921,0.965,3922,5.647,3923,4.44,3924,1.005,3925,0.933,3926,1.124,3927,1.234,3928,1.234,3929,1.055,3930,1.234,3931,1.234,3932,1.124,3933,1.124,3934,1.234,3935,1.234,3936,1.234,3937,1.234,3938,1.234,3939,1.234,3940,1.234,3941,1.234,3942,1.234,3943,1.234,3944,1.234,3945,1.234,3946,1.813,3947,1.234,3948,1.234,3949,1.234,3950,2.881,3951,1.945,3952,2.072,3953,1.234,3954,1.234,3955,1.234,3956,1.234,3957,1.234,3958,1.234,3959,1.234,3960,1.234,3961,1.124,3962,2.881,3963,3.581,3964,2.072,3965,1.124,3966,1.124,3967,2.881,3968,1.124,3969,1.124,3970,1.124,3971,1.055,3972,2.072,3973,2.072,3974,1.813,3975,1.055,3976,1.124]],["component/52",[68,0.364]],["title/53-1",[1496,26.047,2839,51.773]],["name/53-1",[]],["text/53-1",[]],["component/53-1",[]],["title/53-2",[733,38.207,2352,32.112]],["name/53-2",[]],["text/53-2",[]],["component/53-2",[]],["title/53-3",[5,26.047,76,21.109]],["name/53-3",[]],["text/53-3",[]],["component/53-3",[]],["title/53-4",[76,21.109,2311,38.966]],["name/53-4",[]],["text/53-4",[]],["component/53-4",[]],["title/53-5",[28,38.519]],["name/53-5",[]],["text/53-5",[]],["component/53-5",[]],["title/53-6",[473,30.372]],["name/53-6",[]],["text/53-6",[]],["component/53-6",[]],["title/53-7",[2435,49.047]],["name/53-7",[]],["text/53-7",[]],["component/53-7",[]],["title/53-8",[185,26.74,559,31.714,2436,33.928]],["name/53-8",[]],["text/53-8",[]],["component/53-8",[]],["title/53-9",[19,25.262,473,25.32]],["name/53-9",[]],["text/53-9",[]],["component/53-9",[]],["title/53",[1496,26.047,2839,51.773]],["name/53",[1496,0.412,2839,0.819]],["text/53",[0,1.057,5,0.486,6,0.755,8,0.637,13,1.43,14,0.632,19,1.705,24,0.72,28,0.599,31,1.283,32,1.341,34,1.198,40,1.193,42,2.428,64,0.5,75,0.597,76,0.992,119,0.612,126,0.691,134,0.612,137,3.24,151,1.303,155,0.743,163,3.602,180,1.551,185,1.063,188,5.434,189,2.971,201,3.401,211,0.681,213,1.457,220,0.601,248,0.717,256,2.399,258,1.278,259,1.117,276,3.125,287,2.896,298,2.024,304,2.558,325,1.283,347,3.891,356,0.781,373,1.738,385,0.679,395,1.341,397,0.812,419,3.078,420,0.627,453,1.492,465,1.591,468,0.637,473,0.863,480,1.524,485,1.208,535,1.223,561,1.822,563,0.875,564,0.641,577,0.735,582,1.321,599,0.71,606,0.763,629,1.018,635,1.37,649,1.656,650,3.294,655,5.565,656,1.223,696,3.716,737,1.049,738,1.64,774,2.354,782,0.772,786,0.755,812,0.651,817,2.656,818,1.213,823,1.378,857,1.656,931,0.861,965,2.936,1017,1.355,1073,3.162,1074,0.861,1112,0.848,1121,0.875,1164,0.781,1172,0.916,1181,0.868,1221,1.626,1226,0.707,1327,2.284,1399,3.374,1448,1.049,1473,1.086,1486,4.086,1496,1.511,1741,2.249,1874,0.955,1942,4.075,1968,1.482,2084,1.689,2087,1.018,2102,1.018,2104,0.991,2106,1.808,2139,1.672,2172,0.883,2181,1.401,2235,1.762,2294,2.063,2327,3.355,2328,0.812,2342,3.643,2361,1.536,2364,0.955,2398,4.296,2406,4.476,2436,0.739,2446,1.86,2447,0.763,2449,2.67,2450,2.643,2451,2.044,2453,1.915,2454,0.823,2457,1.086,2491,3.279,2497,4.291,2501,2.523,2541,1.296,2572,5.062,2616,1.018,2619,2.562,2628,1.086,2787,1.363,2800,7.242,2806,2.329,2807,0.945,2810,0.925,2839,6.344,2872,0.991,3114,1.086,3118,1.086,3155,1.187,3190,2.49,3224,1.808,3230,2.819,3231,0.925,3238,0.861,3241,0.801,3262,3.925,3263,4.586,3265,4.826,3267,1.13,3275,0.781,3279,2.044,3321,1.049,3323,1.049,3324,1.982,3414,0.991,3518,0.991,3521,2.063,3522,1.915,3551,0.925,3625,1.13,3659,1.018,3770,9.698,3818,1.049,3840,1.033,3848,1.018,3860,1.915,3868,1.086,3872,1.049,3883,1.086,3898,1.049,3905,2.846,3909,4.586,3912,1.086,3914,1.13,3918,5.2,3921,1.086,3923,4.291,3924,4.086,3925,1.915,3929,1.187,3946,1.107,3977,1.265,3978,1.13,3979,1.13,3980,1.13,3981,2.063,3982,2.308,3983,2.308,3984,1.086,3985,1.265,3986,1.265,3987,1.265,3988,1.265,3989,1.265,3990,1.265,3991,1.388,3992,2.166,3993,2.308,3994,1.388,3995,1.13,3996,2.063,3997,1.388,3998,1.187,3999,6.047,4000,1.265,4001,1.388,4002,1.388,4003,1.388,4004,1.187,4005,1.187,4006,1.388,4007,2.308,4008,1.388,4009,1.388,4010,1.947,4011,1.265,4012,7.799,4013,1.187,4014,1.388,4015,1.187,4016,1.388,4017,1.187,4018,1.388,4019,1.187,4020,1.388,4021,1.187,4022,1.388,4023,1.187,4024,1.187,4025,3.184,4026,5.13,4027,3.184,4028,3.184,4029,5.62,4030,5.62,4031,4.291,4032,3.929,4033,3.184,4034,4.571,4035,2.308,4036,2.308,4037,2.308,4038,2.308,4039,1.265,4040,1.265,4041,4.571,4042,0.907,4043,1.265,4044,3.184,4045,1.187,4046,1.265,4047,1.265,4048,1.265,4049,3.184,4050,5.13,4051,1.265,4052,1.265,4053,1.982,4054,1.265,4055,1.265,4056,1.265,4057,1.265,4058,1.265,4059,1.265,4060,1.265,4061,1.265,4062,1.265,4063,1.265]],["component/53",[68,0.364]],["title/54-1",[0,16.87,12,24.678,661,37.19,2779,42.171]],["name/54-1",[]],["text/54-1",[]],["component/54-1",[]],["title/54-2",[28,27.532,73,35.891,219,32.602]],["name/54-2",[]],["text/54-2",[]],["component/54-2",[]],["title/54-3",[12,28.197,77,37.293,661,42.494]],["name/54-3",[]],["text/54-3",[]],["component/54-3",[]],["title/54-4",[83,29.843,134,21.863,348,28.823,2439,26.127,2618,38.805]],["name/54-4",[]],["text/54-4",[]],["component/54-4",[]],["title/54-5",[826,42.934,986,37.045,2558,37.293]],["name/54-5",[]],["text/54-5",[]],["component/54-5",[]],["title/54-6",[12,21.939,828,34.538,986,28.823,2381,25.995,2560,31.831]],["name/54-6",[]],["text/54-6",[]],["component/54-6",[]],["title/54-7",[829,49.128,2381,29.239,2558,32.638,2771,37.979]],["name/54-7",[]],["text/54-7",[]],["component/54-7",[]],["title/54",[]],["name/54",[661,0.542,1496,0.285,2779,0.614]],["text/54",[0,1.803,2,1.95,3,1.795,4,1.346,6,0.967,8,1.964,9,0.967,10,2.597,12,4.135,13,4.015,15,1.078,16,1.224,19,3.577,21,2.316,25,1.103,28,2.576,29,3.882,34,3.127,39,1.112,53,1.583,55,0.905,59,2.61,61,3.243,62,3.205,72,3.193,80,2.034,88,4.33,100,1.211,119,1.397,126,0.885,129,0.798,134,1.397,151,1.939,152,2.881,159,1.008,160,1.763,163,1.979,178,1.034,179,1.569,180,0.789,181,2.317,185,0.746,188,0.723,189,1.416,191,1.487,192,0.87,200,1.008,201,2.502,203,2.375,204,2.916,213,3.896,218,3.539,219,2.659,254,2.28,258,3.008,271,3.11,276,0.901,280,1.186,307,0.901,308,1.598,336,1.773,347,1.998,348,4.91,356,1.784,361,1.652,385,0.87,388,2.892,398,2.597,468,0.816,472,2.982,478,1.095,501,2.256,549,1.062,577,0.942,578,3.619,661,1.186,676,2.479,738,1.487,748,0.99,761,0.957,780,3.019,782,0.99,789,3.711,804,2.506,818,5.174,823,5.083,898,1.982,940,2.616,952,1.163,974,1.211,977,1.239,986,1.841,997,1.269,1006,1.041,1016,1.112,1031,1.521,1091,1.392,1096,1.152,1109,4.446,1152,3.93,1161,3.399,1168,2.774,1178,2.395,1191,1.112,1192,1.095,1234,4.203,1252,2.157,1254,1.103,1269,2.091,1293,4.373,1298,2.8,1317,1.103,1318,2.206,1323,1.367,1324,1.304,1327,2.8,1408,1.269,1496,2.089,1663,1.186,1732,1.269,1744,1.853,1749,1.892,1879,2.052,1883,2.157,1953,1.198,2139,1.174,2196,0.942,2252,2.412,2281,1.829,2306,1.367,2342,0.87,2351,2.577,2352,1.85,2357,1.174,2381,4.758,2383,2.856,2408,3.351,2439,2.739,2529,2.015,2541,2.659,2558,5.74,2560,5.635,2562,3.337,2571,3.238,2572,3.489,2604,5.267,2609,1.174,2620,2.479,2621,2.58,2622,1.449,2643,2.395,2685,3.489,2686,2.616,2698,1.449,2701,2.983,2709,3.93,2711,1.449,2740,3.664,2746,2.358,2755,4.446,2761,3.238,2767,1.344,2768,6.881,2771,3.539,2773,1.966,2785,2.358,2788,1.449,2789,1.304,2866,1.239,2877,5.922,3037,1.324,3039,1.224,3178,1.211,3214,1.344,3639,2.58,4064,1.62,4065,1.779,4066,1.521,4067,1.392,4068,1.62,4069,1.521,4070,4.446,4071,5.201,4072,3.903,4073,9.123,4074,7.357,4075,5.839,4076,4.737,4077,1.62,4078,3.351,4079,1.392,4080,1.62,4081,3.903,4082,3.903,4083,3.489,4084,3.903,4085,3.903,4086,4.285,4087,1.521,4088,1.521,4089,2.886]],["component/54",[68,0.364]],["title/55-1",[21,24.758,1496,22.333,2329,35.259]],["name/55-1",[]],["text/55-1",[]],["component/55-1",[]],["title/55-2",[355,51.827]],["name/55-2",[]],["text/55-2",[]],["component/55-2",[]],["title/55-3",[1316,48.601,2439,39.164]],["name/55-3",[]],["text/55-3",[]],["component/55-3",[]],["title/55-4",[1,41.282,2439,33.579,4090,58.078]],["name/55-4",[]],["text/55-4",[]],["component/55-4",[]],["title/55-5",[12,24.678,966,34.612,2351,33.568,2558,32.638]],["name/55-5",[]],["text/55-5",[]],["component/55-5",[]],["title/55-6",[12,28.197,298,29.913,2558,37.293]],["name/55-6",[]],["text/55-6",[]],["component/55-6",[]],["title/55-7",[468,25.585,995,39.818,1496,19.545,2439,29.388]],["name/55-7",[]],["text/55-7",[]],["component/55-7",[]],["title/55-8",[60,39.994,973,44.412]],["name/55-8",[]],["text/55-8",[]],["component/55-8",[]],["title/55-9",[479,37.293,802,32.758,995,45.497]],["name/55-9",[]],["text/55-9",[]],["component/55-9",[]],["title/55-10",[60,47.973]],["name/55-10",[]],["text/55-10",[]],["component/55-10",[]],["title/55-11",[365,38.024,670,44.735]],["name/55-11",[]],["text/55-11",[]],["component/55-11",[]],["title/55-12",[339,43.793,2609,49.071]],["name/55-12",[]],["text/55-12",[]],["component/55-12",[]],["title/55-13",[3,36.111,2609,42.073,4091,58.078]],["name/55-13",[]],["text/55-13",[]],["component/55-13",[]],["title/55-14",[76,21.109,365,38.024]],["name/55-14",[]],["text/55-14",[]],["component/55-14",[]],["title/55-15",[13,26.086,14,29.017,1227,49.873]],["name/55-15",[]],["text/55-15",[]],["component/55-15",[]],["title/55-16",[739,39.366,2695,54.524]],["name/55-16",[]],["text/55-16",[]],["component/55-16",[]],["title/55-17",[544,36.822,916,30.858,3731,39.818,4092,45.439]],["name/55-17",[]],["text/55-17",[]],["component/55-17",[]],["title/55-18",[12,32.887,2486,50.614]],["name/55-18",[]],["text/55-18",[]],["component/55-18",[]],["title/55-19",[12,32.887,113,33.844]],["name/55-19",[]],["text/55-19",[]],["component/55-19",[]],["title/55-20",[738,34.889,2439,39.164]],["name/55-20",[]],["text/55-20",[]],["component/55-20",[]],["title/55-21",[2615,56.2,4093,60.556]],["name/55-21",[]],["text/55-21",[]],["component/55-21",[]],["title/55-22",[544,42.073,3731,45.497,4094,51.919]],["name/55-22",[]],["text/55-22",[]],["component/55-22",[]],["title/55-23",[12,28.197,738,29.913,2613,46.748]],["name/55-23",[]],["text/55-23",[]],["component/55-23",[]],["title/55-24",[127,35.187,779,43.649,872,32.638,3178,37.979]],["name/55-24",[]],["text/55-24",[]],["component/55-24",[]],["title/55-25",[127,35.187,779,43.649,872,32.638,2356,37.979]],["name/55-25",[]],["text/55-25",[]],["component/55-25",[]],["title/55-26",[2351,44.735,2486,50.614]],["name/55-26",[]],["text/55-26",[]],["component/55-26",[]],["title/55-27",[64,20.078,670,33.568,1496,19.545,2439,29.388]],["name/55-27",[]],["text/55-27",[]],["component/55-27",[]],["title/55-28",[88,36.664,2604,51.178]],["name/55-28",[]],["text/55-28",[]],["component/55-28",[]],["title/55-29",[21,17.34,2281,25.775,2532,33.747,2533,33.747,2534,33.747,2535,32.74]],["name/55-29",[]],["text/55-29",[]],["component/55-29",[]],["title/55-30",[21,24.758,2536,43.395,2537,45.497]],["name/55-30",[]],["text/55-30",[]],["component/55-30",[]],["title/55-31",[749,36.822,1657,34.074,2379,36.129,2535,40.913]],["name/55-31",[]],["text/55-31",[]],["component/55-31",[]],["title/55-32",[230,37.809,348,37.045,2439,33.579]],["name/55-32",[]],["text/55-32",[]],["component/55-32",[]],["title/55-33",[557,40.91,2342,31.165,2542,48.185]],["name/55-33",[]],["text/55-33",[]],["component/55-33",[]],["title/55-34",[2282,46.278]],["name/55-34",[]],["text/55-34",[]],["component/55-34",[]],["title/55-35",[2282,38.58,3231,49.562]],["name/55-35",[]],["text/55-35",[]],["component/55-35",[]],["title/55-36",[679,44.099,2282,38.58]],["name/55-36",[]],["text/55-36",[]],["component/55-36",[]],["title/55-37",[679,37.809,2282,33.078,3815,48.185]],["name/55-37",[]],["text/55-37",[]],["component/55-37",[]],["title/55-38",[679,37.809,2282,33.078,3798,51.919]],["name/55-38",[]],["text/55-38",[]],["component/55-38",[]],["title/55-39",[679,37.809,2282,33.078,3800,51.919]],["name/55-39",[]],["text/55-39",[]],["component/55-39",[]],["title/55-40",[679,37.809,2282,33.078,3802,51.919]],["name/55-40",[]],["text/55-40",[]],["component/55-40",[]],["title/55-41",[679,37.809,2282,33.078,3804,51.919]],["name/55-41",[]],["text/55-41",[]],["component/55-41",[]],["title/55-42",[679,37.809,2282,33.078,3794,48.185]],["name/55-42",[]],["text/55-42",[]],["component/55-42",[]],["title/55-43",[535,30.772,2351,38.355,4095,51.919]],["name/55-43",[]],["text/55-43",[]],["component/55-43",[]],["title/55-44",[2282,38.58,4096,54.524]],["name/55-44",[]],["text/55-44",[]],["component/55-44",[]],["title/55-45",[3,42.117,4097,60.556]],["name/55-45",[]],["text/55-45",[]],["component/55-45",[]],["title/55-46",[2329,41.124,3024,54.524]],["name/55-46",[]],["text/55-46",[]],["component/55-46",[]],["title/55-47",[2329,41.124,3192,54.524]],["name/55-47",[]],["text/55-47",[]],["component/55-47",[]],["title/55-48",[26,40.348,1006,32.638,2329,30.858,4098,42.171]],["name/55-48",[]],["text/55-48",[]],["component/55-48",[]],["title/55-49",[2329,35.259,2764,45.497,4098,48.185]],["name/55-49",[]],["text/55-49",[]],["component/55-49",[]],["title/55-50",[996,47.714,2587,51.773]],["name/55-50",[]],["text/55-50",[]],["component/55-50",[]],["title/55-51",[4099,72.638]],["name/55-51",[]],["text/55-51",[]],["component/55-51",[]],["title/55",[21,24.758,1496,22.333,2329,35.259]],["name/55",[1496,0.412,2357,0.776]],["text/55",[0,0.811,1,0.716,2,1.264,3,3.139,4,1.668,5,1.319,6,2.61,8,0.263,9,2.135,11,1.362,12,3.933,13,2.122,14,1.31,15,1.625,17,0.575,18,0.482,19,3.271,20,1.249,21,2.858,22,0.195,23,0.85,25,0.356,26,0.981,27,1.05,28,0.127,29,1.562,31,1.736,32,2.396,33,1.718,34,1.074,39,0.359,40,1.07,42,0.165,50,1.727,53,2.652,55,0.931,56,0.944,57,0.687,58,0.961,59,0.147,60,2.434,61,1.117,62,0.536,63,0.913,64,0.575,65,1.099,66,0.297,67,0.788,68,0.29,69,0.494,71,0.269,72,1.366,75,1.62,76,1.159,80,1.938,82,0.148,84,0.159,88,2.232,90,0.212,92,0.895,93,1.054,94,0.193,96,0.476,98,0.737,99,0.222,100,0.2,101,0.171,106,0.763,113,1.995,115,0.163,118,1.232,119,1.093,123,0.798,126,1.431,127,3.896,129,1.203,134,1.51,135,0.491,136,0.18,137,1.49,146,0.959,147,0.436,148,0.864,151,1.143,152,1.078,153,0.417,155,0.854,156,1.125,157,0.174,158,0.182,159,0.325,160,0.615,163,1.739,167,0.167,168,0.434,174,0.151,177,0.268,178,2.711,180,1.101,181,0.311,182,0.186,184,0.274,185,1.04,186,0.651,188,4.008,189,0.714,190,0.975,191,0.749,192,1.406,193,1.15,194,1.078,196,0.737,200,0.166,201,2.672,203,0.619,204,0.2,206,0.292,208,0.665,209,0.41,210,0.2,213,2.001,218,0.575,219,0.936,220,0.366,226,0.501,227,0.229,228,0.182,230,0.341,244,0.251,245,0.383,248,1.485,251,0.995,252,0.188,253,0.501,254,0.306,255,0.193,257,0.956,258,0.557,265,0.225,276,1.553,287,0.783,291,0.148,292,0.222,298,0.749,300,0.188,301,0.923,304,0.174,305,0.379,306,0.396,307,1.458,308,0.426,310,1.249,311,0.229,313,1.085,314,0.421,320,0.165,321,0.944,322,0.204,323,0.975,324,0.222,325,1.041,326,0.41,327,0.7,333,0.218,334,0.468,339,2.119,344,0.45,347,0.185,348,0.642,349,0.878,350,0.222,351,0.821,361,0.153,363,0.41,364,0.193,365,0.294,368,0.452,373,2.921,376,0.69,381,0.225,385,2.142,388,0.163,397,0.171,398,1.744,399,0.239,400,0.396,404,0.215,405,0.19,414,1.379,415,0.272,420,0.132,432,0.155,439,0.882,453,0.173,458,0.173,459,1.3,464,0.563,465,1.31,466,0.328,468,0.507,473,0.376,474,0.369,478,0.983,479,2.004,480,0.816,485,0.646,488,0.251,489,0.218,494,1.207,501,1.615,503,0.744,510,0.601,511,0.251,524,0.611,531,0.202,535,0.654,541,0.239,542,1.528,543,0.651,544,1.77,547,1.32,549,0.175,550,0.251,552,0.185,553,0.9,557,0.709,558,0.348,561,0.441,562,0.639,564,0.949,565,0.195,577,0.304,578,1.361,579,0.575,582,1.184,583,0.222,591,0.229,597,0.718,598,1.171,599,0.817,604,0.185,608,0.222,612,0.688,624,0.434,628,0.445,633,0.2,635,0.989,649,0.376,650,0.336,654,0.195,656,0.141,657,0.934,659,0.195,667,0.215,668,0.362,670,2.362,676,1.182,678,0.945,679,1.59,681,0.563,683,0.183,691,0.222,696,0.193,707,0.202,708,0.506,710,0.212,712,0.222,713,0.179,728,0.229,729,0.239,732,0.428,735,0.789,738,0.859,739,5.325,740,0.222,747,0.458,748,0.615,749,0.895,750,0.251,751,0.933,760,0.222,761,0.729,762,1.087,774,1.916,777,0.209,778,0.52,781,0.222,782,0.163,786,0.312,789,0.41,790,0.183,799,0.192,801,0.188,802,0.568,804,1.328,811,1.112,812,1.35,816,0.661,817,1.905,818,1.879,823,1.117,845,0.944,846,0.405,848,0.193,857,0.376,859,0.752,872,0.647,873,0.195,882,0.558,888,0.229,897,0.41,898,0.359,899,0.588,901,1.109,903,0.209,916,1.99,940,0.179,943,0.209,948,0.239,950,0.174,951,0.744,952,0.552,958,0.239,963,0.811,966,0.686,968,0.434,969,0.215,970,0.322,971,0.251,972,0.588,973,0.505,974,0.2,976,0.611,977,0.204,979,0.639,980,1.307,982,0.405,986,2.281,987,0.458,993,0.611,996,0.188,997,0.209,1001,1.776,1002,0.508,1004,0.239,1006,1.328,1007,3.137,1008,0.9,1009,0.789,1012,0.197,1013,2.638,1014,3.028,1015,0.62,1016,0.529,1017,1.327,1018,0.2,1022,0.229,1024,1.306,1028,0.968,1043,0.239,1056,0.244,1074,0.524,1091,0.229,1096,1.034,1112,0.179,1113,0.209,1118,2.553,1119,0.251,1128,0.895,1137,1.104,1139,0.239,1140,0.491,1141,0.251,1142,0.468,1143,0.351,1148,1.498,1149,1.155,1152,0.639,1153,0.182,1154,2.879,1155,0.945,1156,0.823,1159,0.45,1164,0.899,1168,0.372,1170,0.387,1177,0.434,1179,0.639,1191,2.25,1192,1.526,1196,0.179,1204,0.225,1209,0.744,1217,0.458,1226,0.563,1227,0.229,1229,0.697,1230,0.251,1231,0.479,1234,0.207,1236,0.239,1251,0.542,1254,0.524,1255,0.207,1284,2.293,1285,0.251,1286,0.244,1291,1.466,1293,0.215,1298,0.192,1300,1.249,1301,0.222,1302,0.239,1303,0.244,1304,0.251,1310,2.497,1317,0.182,1318,0.4,1327,0.723,1337,0.362,1338,0.376,1339,0.848,1355,0.434,1356,0.656,1366,1.607,1368,0.222,1369,0.229,1373,0.366,1376,0.222,1377,0.222,1388,0.209,1408,0.209,1495,0.209,1496,1.483,1644,0.19,1657,0.828,1658,0.202,1659,0.661,1663,0.383,1666,1.087,1667,1.076,1685,0.192,1704,0.647,1706,0.209,1714,0.239,1725,0.65,1741,0.833,1745,0.941,1753,0.405,1764,0.87,1785,0.575,1807,0.379,1809,0.239,1868,0.204,1874,0.202,1879,1.737,1883,0.575,1893,0.434,1901,0.239,1919,0.752,1923,0.204,1930,0.239,1933,0.239,1967,0.968,1968,0.171,1969,0.185,2033,0.491,2035,0.222,2044,0.222,2051,0.405,2094,0.222,2136,0.222,2138,0.204,2139,1.498,2153,0.41,2154,0.251,2163,0.823,2178,0.865,2181,1.012,2184,0.62,2203,0.369,2207,1.787,2208,0.642,2212,0.822,2215,0.239,2225,0.239,2231,0.603,2235,0.684,2236,0.729,2238,0.239,2241,0.391,2242,0.229,2247,0.197,2264,0.234,2267,0.45,2281,0.169,2282,3.78,2284,0.723,2292,0.434,2315,0.45,2327,0.159,2328,0.171,2329,4.736,2342,0.663,2344,0.222,2345,0.563,2346,1.274,2349,0.994,2351,3.657,2352,0.79,2353,0.723,2354,2.802,2355,0.865,2356,2.779,2361,0.67,2379,1.185,2380,0.582,2381,1.076,2383,0.904,2385,0.41,2388,0.239,2397,0.239,2410,0.212,2411,0.251,2418,0.182,2433,0.62,2434,1.306,2436,0.156,2438,0.923,2439,2.919,2440,0.229,2449,0.306,2450,0.154,2472,0.251,2483,0.479,2486,3.772,2491,0.192,2498,0.491,2501,0.647,2507,0.387,2529,1.164,2530,1.546,2532,0.434,2533,0.434,2534,0.434,2535,0.421,2536,0.2,2537,0.209,2538,0.239,2541,0.565,2542,0.222,2543,0.239,2556,0.204,2558,3.614,2560,0.87,2562,1.846,2572,1.683,2587,0.4,2588,0.204,2593,0.222,2596,1.009,2597,0.251,2603,2.027,2604,1.563,2605,1.126,2606,1.716,2607,0.229,2608,2.646,2609,2.694,2610,0.639,2611,0.434,2613,1.966,2615,4.012,2618,1.431,2619,0.421,2620,0.45,2621,0.239,2622,0.239,2623,0.229,2624,0.267,2625,0.251,2626,0.251,2627,2.262,2628,0.229,2629,0.239,2630,0.251,2631,0.239,2632,0.239,2633,0.239,2634,0.251,2635,0.251,2636,0.251,2637,0.251,2638,0.251,2639,0.251,2640,0.251,2642,0.251,2643,0.222,2645,1.207,2647,0.468,2684,0.229,2686,0.351,2687,0.251,2688,0.222,2689,0.383,2691,0.421,2693,1.025,2694,0.222,2695,3.319,2697,0.239,2699,0.468,2700,0.239,2701,0.204,2709,1.383,2712,0.267,2716,0.945,2722,0.251,2724,0.251,2737,0.239,2740,0.207,2749,0.222,2752,0.468,2760,0.45,2761,0.222,2763,0.468,2764,0.968,2767,0.639,2769,0.239,2771,0.575,2772,0.41,2773,0.991,2783,0.229,2787,0.309,2802,0.491,2817,0.239,2819,0.563,2822,0.192,2863,0.9,2866,0.4,2867,0.239,2872,0.209,2925,0.62,2928,0.222,2937,0.45,2949,0.239,3009,0.239,3010,0.239,3016,0.239,3020,0.225,3024,0.811,3039,0.202,3115,0.218,3143,0.207,3178,1.825,3179,0.239,3180,0.688,3181,0.239,3182,0.239,3183,1.94,3184,2.027,3187,0.239,3190,2.173,3191,2.93,3192,2.512,3193,0.239,3194,0.45,3195,0.239,3196,1.081,3198,2.251,3199,0.405,3200,0.222,3201,2.399,3202,0.239,3206,0.229,3207,0.209,3230,0.192,3231,2.398,3406,0.195,3422,1.716,3455,0.239,3491,0.229,3526,0.225,3529,0.215,3538,0.239,3596,0.239,3704,0.9,3717,0.865,3718,0.239,3730,0.234,3731,0.209,3732,0.468,3733,0.239,3758,0.468,3761,0.468,3762,0.468,3765,0.239,3780,0.239,3781,0.468,3783,0.468,3784,0.239,3785,0.239,3786,0.468,3787,0.239,3788,0.9,3789,0.239,3791,0.239,3792,0.239,3793,0.239,3794,1.207,3795,0.239,3796,0.468,3797,0.468,3798,0.239,3799,0.468,3800,0.239,3801,0.239,3802,0.239,3803,0.239,3804,0.239,3805,0.239,3806,0.688,3807,0.468,3808,0.239,3809,0.239,3810,0.239,3811,0.688,3812,0.239,3813,0.9,3814,0.468,3815,0.434,3816,0.239,3817,0.239,3833,0.229,3974,0.234,4042,0.723,4069,1.159,4078,1.249,4079,0.229,4083,0.468,4092,1.104,4093,1.104,4094,0.468,4095,0.468,4096,2.11,4097,0.688,4098,0.222,4099,1.49,4100,0.267,4101,1.565,4102,0.267,4103,0.523,4104,0.77,4105,0.523,4106,0.523,4107,1.194,4108,0.267,4109,1.611,4110,2.793,4111,0.77,4112,0.77,4113,0.267,4114,0.267,4115,0.251,4116,0.267,4117,0.267,4118,0.267,4119,0.267,4120,0.491,4121,0.723,4122,0.267,4123,0.239,4124,0.267,4125,0.267,4126,0.267,4127,0.251,4128,0.267,4129,0.523,4130,0.523,4131,0.523,4132,0.77,4133,1.565,4134,0.523,4135,0.523,4136,0.639,4137,0.267,4138,0.267,4139,1.455,4140,0.267,4141,2.068,4142,0.267,4143,0.77,4144,0.267,4145,0.267,4146,0.267,4147,0.267,4148,0.267,4149,0.523,4150,0.575,4151,0.77,4152,0.523,4153,0.77,4154,0.267,4155,1.455,4156,0.267,4157,0.267,4158,0.267,4159,0.267,4160,0.267,4161,0.468,4162,0.267,4163,0.251,4164,0.267,4165,0.267,4166,0.251,4167,0.267,4168,1.235,4169,0.77,4170,0.267,4171,0.267,4172,0.77,4173,0.523,4174,0.523,4175,0.523,4176,0.267,4177,0.523,4178,1.455,4179,0.77,4180,0.523,4181,0.267,4182,0.523,4183,0.267,4184,0.523,4185,0.523,4186,0.267,4187,1.007,4188,0.239,4189,0.523,4190,0.267,4191,0.251,4192,0.267,4193,0.575,4194,0.575,4195,0.523,4196,0.258,4197,0.293,4198,0.973,4199,0.77,4200,0.293,4201,0.506,4202,0.845,4203,0.293,4204,0.267,4205,0.77,4206,0.293,4207,0.293,4208,0.267,4209,0.293,4210,0.293,4211,0.293,4212,0.293,4213,0.239,4214,0.77,4215,1.235,4216,1.007,4217,0.267,4218,0.77,4219,0.267,4220,0.267,4221,0.9,4222,0.267,4223,0.267,4224,0.267,4225,0.267,4226,0.267,4227,0.267,4228,0.267,4229,0.267,4230,0.267,4231,0.267,4232,0.267,4233,0.267,4234,0.267,4235,0.77,4236,0.267,4237,0.267,4238,0.267,4239,0.267,4240,0.267,4241,0.267,4242,0.267,4243,0.267,4244,0.267,4245,0.267,4246,0.267,4247,0.258,4248,0.267,4249,1.235,4250,0.267,4251,0.267,4252,0.267,4253,0.267,4254,0.267,4255,0.267,4256,0.267,4257,0.267,4258,0.267,4259,0.267,4260,0.267,4261,0.267,4262,0.267,4263,0.267,4264,0.267,4265,0.491,4266,0.267,4267,0.267,4268,0.267,4269,0.523,4270,0.267,4271,0.267,4272,0.267,4273,0.267,4274,0.251,4275,0.688,4276,0.267,4277,0.267,4278,0.267,4279,0.267,4280,0.491,4281,0.267,4282,0.267,4283,1.406,4284,0.258,4285,0.267,4286,1.13,4287,0.491,4288,1.007,4289,1.007,4290,0.523,4291,0.267,4292,0.523,4293,0.523,4294,0.267,4295,0.267,4296,0.251,4297,0.523,4298,0.267,4299,0.267,4300,0.523,4301,0.267,4302,0.479,4303,0.267,4304,0.267,4305,0.267,4306,0.267,4307,0.251,4308,0.293,4309,0.258,4310,0.267,4311,0.267,4312,0.267,4313,0.293,4314,0.293,4315,0.293,4316,0.293,4317,0.293,4318,0.267,4319,0.267,4320,1.007,4321,0.267,4322,0.523,4323,0.523,4324,0.267,4325,0.258,4326,0.267,4327,0.523,4328,0.523,4329,0.267,4330,0.267,4331,0.239,4332,0.267,4333,0.267,4334,0.491,4335,0.267,4336,0.77,4337,0.267,4338,0.267,4339,0.267,4340,0.267,4341,0.267,4342,0.267,4343,0.267,4344,0.267,4345,0.267,4346,0.267,4347,0.267,4348,0.267,4349,0.267,4350,0.267,4351,0.267,4352,0.267,4353,0.267,4354,0.267,4355,0.267,4356,0.267,4357,0.267,4358,0.267,4359,0.267,4360,0.523,4361,0.267,4362,0.845,4363,0.293,4364,0.293,4365,0.523,4366,0.575,4367,0.575,4368,0.575,4369,0.575,4370,0.575,4371,0.575,4372,0.267,4373,0.267,4374,0.267,4375,0.267,4376,0.267,4377,0.267,4378,0.267,4379,0.267,4380,0.267,4381,0.267,4382,0.267,4383,0.267,4384,0.267,4385,0.267,4386,0.267,4387,0.267,4388,0.267,4389,0.267,4390,0.267,4391,0.267,4392,0.267,4393,0.267,4394,0.267,4395,0.293,4396,0.267,4397,0.293,4398,0.267,4399,0.293,4400,0.293,4401,0.267,4402,0.293,4403,0.267,4404,0.267,4405,0.267,4406,0.251,4407,0.267,4408,0.267,4409,0.239,4410,0.258,4411,0.267,4412,0.251,4413,0.267,4414,0.267,4415,0.267,4416,0.267,4417,0.267,4418,0.523,4419,0.491,4420,1.235,4421,0.267,4422,0.267,4423,0.267,4424,0.267,4425,0.267,4426,0.267,4427,0.267,4428,0.267,4429,0.523,4430,0.491,4431,0.267,4432,0.267,4433,0.267,4434,0.251,4435,0.267,4436,0.267,4437,0.267,4438,0.267,4439,0.523,4440,0.267,4441,0.267,4442,0.267,4443,0.222,4444,0.267,4445,0.267,4446,0.468,4447,0.267,4448,0.267,4449,0.267,4450,0.77,4451,0.251,4452,0.267,4453,0.267,4454,0.468,4455,0.251,4456,0.77,4457,0.267,4458,0.267,4459,0.258,4460,0.523,4461,0.244,4462,0.267,4463,0.267,4464,0.267,4465,0.267,4466,0.523,4467,0.267,4468,0.267,4469,0.267,4470,0.267,4471,0.267,4472,0.523,4473,0.267,4474,0.267,4475,0.267,4476,0.267,4477,0.267]],["component/55",[68,0.364]],["title/56-1",[1496,26.047,4478,59.3]],["name/56-1",[]],["text/56-1",[]],["component/56-1",[]],["title/56-2",[733,38.207,2352,32.112]],["name/56-2",[]],["text/56-2",[]],["component/56-2",[]],["title/56-3",[5,26.047,76,21.109]],["name/56-3",[]],["text/56-3",[]],["component/56-3",[]],["title/56-4",[76,21.109,2311,38.966]],["name/56-4",[]],["text/56-4",[]],["component/56-4",[]],["title/56-5",[19,21.659,420,28.806,4478,50.843]],["name/56-5",[]],["text/56-5",[]],["component/56-5",[]],["title/56-6",[351,33.356,3200,56.2]],["name/56-6",[]],["text/56-6",[]],["component/56-6",[]],["title/56-7",[1764,47.714,2351,44.735]],["name/56-7",[]],["text/56-7",[]],["component/56-7",[]],["title/56",[1496,26.047,4478,59.3]],["name/56",[1496,0.412,4478,0.938]],["text/56",[0,3.413,4,1.445,5,2.203,6,1.048,8,1.56,9,3.775,12,3.879,13,1.392,14,0.877,19,2.359,21,1.321,28,0.832,31,2.313,53,0.963,59,0.967,62,0.934,75,1.464,80,3.297,88,0.95,119,0.849,134,2.428,137,3.019,151,0.719,158,1.195,178,1.12,180,2.027,188,5.009,190,0.915,203,1.554,211,0.946,213,1.418,218,1.312,219,0.985,248,0.995,257,1.358,258,0.972,271,2.381,276,1.723,306,1.326,308,0.972,333,1.434,350,1.456,351,0.864,363,5.697,365,0.985,368,1.031,373,1.692,420,2.841,453,1.135,464,1.284,465,2.862,468,0.884,503,1.298,510,3.775,524,1.881,531,1.326,535,1.642,543,3.704,547,1.025,562,1.456,578,1.609,582,1.774,599,0.985,608,1.456,619,1.413,656,0.93,657,1.99,733,0.99,738,0.904,739,4.448,751,1.326,774,0.904,804,1.127,812,0.904,817,1.02,818,3.324,820,1.648,822,1.312,823,4.079,857,5.732,859,1.312,864,2.909,968,0.99,1017,5.689,1071,1.456,1110,2.614,1112,1.177,1118,2.127,1121,2.145,1148,1.272,1168,2.202,1171,1.456,1182,1.312,1204,1.481,1209,1.298,1221,3.535,1244,1.755,1298,2.223,1300,1.507,1338,1.259,1393,2.315,1442,3.108,1644,1.248,1749,1.151,1751,2.531,1753,1.358,1764,5.122,1917,1.259,1968,1.127,2163,3.398,2172,2.904,2181,1.881,2195,1.413,2281,1.112,2282,1.765,2329,1.066,2346,1.537,2351,5.276,2357,1.272,2366,1.648,2383,1.284,2442,2.77,2446,1.025,2486,5.433,2558,4.388,2691,1.413,2701,1.342,2708,1.537,2740,1.358,2772,1.375,2773,1.195,2822,1.259,3037,1.434,3171,5.772,3183,5.868,3190,1.112,3192,2.494,3194,4.31,3200,4.753,3201,4.919,3451,3.099,3452,3.099,3456,3.302,3551,5.6,3586,1.648,3589,1.569,3590,2.77,3591,7.095,3666,7.653,3706,3.836,3717,1.507,4031,2.909,4042,2.223,4087,2.909,4096,1.413,4101,5.377,4133,3.904,4166,2.909,4221,1.569,4275,3.718,4455,1.648,4478,5.537,4479,1.927,4480,1.927,4481,3.402,4482,1.927,4483,1.927,4484,1.927,4485,1.927,4486,1.927,4487,1.927,4488,1.927,4489,1.927,4490,3.402,4491,3.402,4492,1.755,4493,1.755,4494,3.402,4495,3.402,4496,3.402,4497,1.927,4498,1.927,4499,1.927,4500,1.927,4501,1.927,4502,3.402,4503,1.927,4504,3.402,4505,1.927,4506,1.927,4507,1.927,4508,3.402,4509,1.927,4510,1.927,4511,1.927,4512,1.927,4513,3.402,4514,1.927,4515,1.927,4516,1.927,4517,1.927,4518,1.927,4519,1.927,4520,1.927,4521,1.927,4522,5.51,4523,3.402,4524,4.567,4525,5.51,4526,4.567,4527,3.402,4528,3.402,4529,3.402,4530,1.927,4531,5.51,4532,1.927,4533,1.927,4534,1.927,4535,1.755,4536,1.927,4537,1.927,4538,3.402,4539,1.927,4540,1.927,4541,1.927,4542,1.927,4543,1.537,4544,1.927,4545,1.927,4546,1.927,4547,1.927,4548,1.927,4549,1.927,4550,1.927,4551,1.927,4552,1.927,4553,1.927,4554,1.927,4555,1.927,4556,1.927,4557,1.927,4558,1.927,4559,1.927,4560,1.927,4561,3.402,4562,1.927,4563,3.402]],["component/56",[68,0.364]],["title/57-1",[1496,26.047,4564,61.969]],["name/57-1",[]],["text/57-1",[]],["component/57-1",[]],["title/57-2",[733,38.207,2352,32.112]],["name/57-2",[]],["text/57-2",[]],["component/57-2",[]],["title/57-3",[5,26.047,76,21.109]],["name/57-3",[]],["text/57-3",[]],["component/57-3",[]],["title/57-4",[56,44.389,1744,37.293,4565,49.873]],["name/57-4",[]],["text/57-4",[]],["component/57-4",[]],["title/57-5",[1744,37.293,4565,49.873,4566,54.517]],["name/57-5",[]],["text/57-5",[]],["component/57-5",[]],["title/57-6",[5,17.376,1744,29.017,2686,30.293,2787,26.68,4565,38.805]],["name/57-6",[]],["text/57-6",[]],["component/57-6",[]],["title/57-7",[76,21.109,2311,38.966]],["name/57-7",[]],["text/57-7",[]],["component/57-7",[]],["title/57-8",[28,38.519]],["name/57-8",[]],["text/57-8",[]],["component/57-8",[]],["title/57-9",[473,30.372]],["name/57-9",[]],["text/57-9",[]],["component/57-9",[]],["title/57-10",[2435,49.047]],["name/57-10",[]],["text/57-10",[]],["component/57-10",[]],["title/57-11",[4565,58.169,4566,63.585]],["name/57-11",[]],["text/57-11",[]],["component/57-11",[]],["title/57-12",[28,38.519]],["name/57-12",[]],["text/57-12",[]],["component/57-12",[]],["title/57-13",[13,20.297,1189,40.397,1744,29.017,1749,29.628,2787,26.68]],["name/57-13",[]],["text/57-13",[]],["component/57-13",[]],["title/57",[1496,26.047,4564,61.969]],["name/57",[1496,0.412,4564,0.98]],["text/57",[3,1.145,4,0.859,5,3.011,8,0.927,13,3.915,14,0.92,15,1.225,18,2.022,19,3.487,21,0.785,25,2.2,42,1.138,49,1.407,53,1.772,56,3.968,64,0.727,68,0.531,71,2.663,75,1.527,76,2.44,80,0.96,119,1.563,124,1.361,128,1.064,129,0.907,134,3.394,137,1.542,152,3.095,155,1.898,167,1.152,180,0.897,183,1.297,185,1.988,188,5.297,189,2.119,192,2.317,194,2.792,201,4.013,203,0.923,213,2.375,220,1.537,254,2.523,259,1.563,298,0.948,300,1.297,303,1.376,307,2.401,313,1.199,325,1.024,326,1.442,327,2.942,351,2.126,373,1.765,387,1.376,415,0.956,420,0.913,432,2.51,453,2.792,464,1.347,465,3.723,473,1.208,480,3.429,481,1.482,485,0.964,535,3.717,542,1.152,559,2.835,564,1.639,577,1.878,578,0.956,597,1.07,599,1.034,635,1.093,657,1.182,668,1.275,679,1.199,700,1.841,703,1.334,714,1.391,812,0.948,816,1.581,818,1.698,845,3.301,855,1.275,950,2.104,968,3.67,1110,1.553,1112,1.234,1127,5.588,1128,1.334,1142,1.646,1178,1.528,1189,2.889,1221,5.249,1226,1.029,1232,2.276,1320,1.361,1356,1.199,1393,1.376,1496,2.698,1744,7.139,1749,1.207,1942,3.116,1968,1.182,1969,2.989,2172,1.286,2235,2.39,2327,1.929,2345,2.364,2352,0.873,2415,1.581,2418,2.941,2432,1.407,2446,1.888,2447,2.607,2449,1.888,2450,2.497,2484,1.841,2541,1.814,2646,1.728,2686,3.48,2760,1.581,2770,1.646,2787,5.146,2789,1.482,2845,2.681,3238,1.254,3241,1.167,3270,3.033,3275,1.997,3279,2.075,3779,1.728,3830,1.841,3992,3.033,4066,3.033,4067,1.581,4079,1.581,4365,1.841,4446,1.646,4564,4.749,4565,9.015,4566,7.35,4567,2.022,4568,2.022,4569,2.022,4570,2.022,4571,2.022,4572,2.022,4573,2.022,4574,3.548,4575,4.054,4576,2.022,4577,3.548,4578,2.022,4579,2.022,4580,3.548,4581,8.182,4582,3.548,4583,2.022,4584,2.022,4585,2.022,4586,2.022,4587,1.728,4588,2.022,4589,2.022,4590,3.548,4591,1.841,4592,3.033,4593,3.548,4594,3.548,4595,3.548,4596,2.022,4597,2.022,4598,2.022,4599,2.022,4600,2.022,4601,3.548,4602,2.022,4603,2.022,4604,2.022,4605,3.548,4606,2.022,4607,2.022,4608,2.022,4609,2.022,4610,3.548,4611,2.022,4612,2.022,4613,2.022,4614,2.022,4615,7.145,4616,1.728,4617,2.022,4618,2.022,4619,2.022,4620,1.646,4621,2.022,4622,2.022,4623,1.646,4624,1.646,4625,1.646,4626,2.022,4627,2.022,4628,2.022,4629,1.646,4630,2.022,4631,1.728,4632,2.022,4633,1.841,4634,2.022,4635,2.022,4636,2.022,4637,2.022,4638,2.022]],["component/57",[68,0.364]],["title/58-1",[1496,26.047,2342,36.348]],["name/58-1",[]],["text/58-1",[]],["component/58-1",[]],["title/58-2",[733,38.207,2352,32.112]],["name/58-2",[]],["text/58-2",[]],["component/58-2",[]],["title/58-3",[5,26.047,76,21.109]],["name/58-3",[]],["text/58-3",[]],["component/58-3",[]],["title/58-4",[76,21.109,2311,38.966]],["name/58-4",[]],["text/58-4",[]],["component/58-4",[]],["title/58-5",[28,38.519]],["name/58-5",[]],["text/58-5",[]],["component/58-5",[]],["title/58-6",[473,30.372]],["name/58-6",[]],["text/58-6",[]],["component/58-6",[]],["title/58-7",[2435,49.047]],["name/58-7",[]],["text/58-7",[]],["component/58-7",[]],["title/58-8",[185,26.74,559,31.714,2436,33.928]],["name/58-8",[]],["text/58-8",[]],["component/58-8",[]],["title/58-9",[19,25.262,473,25.32]],["name/58-9",[]],["text/58-9",[]],["component/58-9",[]],["title/58",[1496,26.047,2342,36.348]],["name/58",[1496,0.412,2342,0.575]],["text/58",[0,1.205,4,0.691,5,1.024,8,0.746,9,0.884,13,2.296,14,0.74,19,2.62,24,0.844,27,0.832,31,1.481,34,0.769,40,1.377,66,0.84,67,0.802,74,0.905,75,1.259,76,1.774,82,0.82,88,2.399,119,1.289,123,0.813,126,1.455,134,1.289,137,3.517,163,3.143,180,2.16,184,0.775,185,2.041,188,5.506,189,3.256,190,0.772,201,2.621,211,1.956,213,2.028,223,5.506,252,1.044,258,2.009,259,2.145,276,2.465,298,0.763,347,2.513,351,0.729,373,0.809,376,0.828,385,0.795,388,0.905,417,0.939,420,1.321,453,2.346,465,1.331,468,0.746,473,0.996,485,1.394,510,0.884,524,3.103,535,1.411,561,2.077,563,1.844,564,0.751,582,1.525,599,1.495,606,0.894,635,1.581,650,3.282,651,1.132,656,1.411,696,3.703,738,1.372,774,2.633,782,0.905,786,0.884,790,1.829,794,1.324,812,1.372,817,3.857,823,0.884,904,2.21,931,1.009,965,0.848,968,0.836,1017,1.564,1073,2.921,1074,1.009,1112,0.993,1121,1.026,1164,0.916,1181,1.829,1226,0.828,1484,1.132,1496,1.024,1497,1.176,1741,2.537,1751,1.21,1842,1.192,1922,1.161,1942,3.983,1968,0.951,2139,1.93,2172,1.034,2181,0.899,2235,3.151,2327,3.961,2328,0.951,2342,5.144,2352,0.702,2364,2.013,2406,5.193,2435,0.894,2436,1.556,2446,2.986,2447,0.894,2449,2.986,2450,2.563,2451,2.331,2454,0.964,2541,3.725,2572,4.732,2787,0.875,2806,1.949,2842,1.272,2872,1.161,3118,1.272,3171,1.176,3208,4.867,3209,1.324,3218,1.324,3219,1.324,3225,4.004,3226,4.004,3227,3.473,3228,4.854,3229,4.39,3230,3.18,3231,1.084,3233,4.161,3234,2.501,3240,2.087,3241,2.809,3275,0.916,3279,3.282,3347,3.011,3348,3.011,3349,1.391,3350,1.391,3351,1.391,3352,1.391,3353,1.391,3354,1.391,3355,1.391,3356,1.391,3357,1.391,3358,1.391,3359,1.391,3360,1.391,3361,1.391,3362,1.391,3363,1.391,3364,1.391,3365,1.391,3366,1.391,3367,1.391,3368,1.391,3369,1.391,3370,1.391,3371,1.391,3372,1.391,3373,1.391,3374,1.192,3375,1.391,3376,1.192,3377,1.391,3378,1.391,3379,1.391,3380,1.391,3381,1.391,3382,1.324,3383,1.391,3384,1.324,3385,1.391,3386,1.391,3387,1.391,3388,1.391,3389,1.391,3390,1.391,3391,1.391,3392,1.391,3393,1.391,3394,1.324,3395,1.391,3396,1.324,3397,1.391,3398,1.391,3399,1.391,3400,1.391,3401,1.391,3402,1.229,3403,1.391,3404,1.229,3406,1.084,3407,1.324,3408,1.272,3409,1.272,3410,1.229,3411,1.391,3412,1.391,3413,1.192,3414,1.161,3415,1.229,3416,1.229,3417,1.324,3420,2.501,3432,1.324,3518,1.161,3551,1.084,3552,1.272,3555,1.272,3589,1.324,3590,2.381,3591,2.21,3677,1.355,3971,1.391,3978,1.324,3979,1.324,3980,1.324,3981,2.381,3984,3.117,3998,1.391,3999,5.344,4004,1.391,4005,1.391,4010,1.25,4013,1.391,4015,1.391,4017,1.391,4019,1.391,4021,1.391,4023,1.391,4024,1.391,4639,1.481,4640,1.481,4641,3.629,4642,1.627,4643,1.627,4644,1.627,4645,1.481,4646,1.627,4647,1.627,4648,1.627,4649,1.627,4650,1.627,4651,1.627,4652,1.627,4653,1.627,4654,1.627,4655,1.391,4656,1.627,4657,1.627,4658,1.627,4659,1.481,4660,1.627,4661,1.627,4662,1.627,4663,1.627,4664,1.481,4665,1.627,4666,1.324,4667,1.627,4668,1.481,4669,3.629,4670,2.925,4671,2.501,4672,4.867,4673,1.481,4674,4.433,4675,1.627,4676,1.391,4677,5.693,4678,2.925,4679,1.627,4680,1.627,4681,1.627,4682,2.664,4683,2.925,4684,1.627,4685,1.627,4686,2.664,4687,1.391,4688,1.481,4689,1.481,4690,1.481,4691,1.481,4692,3.807,4693,1.627,4694,1.627,4695,1.627,4696,4.867,4697,1.627,4698,2.925,4699,1.627,4700,1.627,4701,1.627,4702,1.627,4703,1.627]],["component/58",[68,0.364]],["title/59-1",[1496,26.047,3211,46.127]],["name/59-1",[]],["text/59-1",[]],["component/59-1",[]],["title/59-2",[733,38.207,2352,32.112]],["name/59-2",[]],["text/59-2",[]],["component/59-2",[]],["title/59-3",[5,26.047,76,21.109]],["name/59-3",[]],["text/59-3",[]],["component/59-3",[]],["title/59-4",[76,21.109,2311,38.966]],["name/59-4",[]],["text/59-4",[]],["component/59-4",[]],["title/59-5",[473,30.372]],["name/59-5",[]],["text/59-5",[]],["component/59-5",[]],["title/59-6",[2435,49.047]],["name/59-6",[]],["text/59-6",[]],["component/59-6",[]],["title/59-7",[185,26.74,559,31.714,2436,33.928]],["name/59-7",[]],["text/59-7",[]],["component/59-7",[]],["title/59-8",[19,25.262,473,25.32]],["name/59-8",[]],["text/59-8",[]],["component/59-8",[]],["title/59-9",[2686,38.933,3208,38.355,3211,39.548]],["name/59-9",[]],["text/59-9",[]],["component/59-9",[]],["title/59-10",[13,20.297,2204,30.528,2529,31.551,3208,29.843,3211,30.771]],["name/59-10",[]],["text/59-10",[]],["component/59-10",[]],["title/59-11",[180,16.518,254,19.805,817,19.702,823,20.236,903,26.559,1663,24.806,3211,23.086,4704,29.113]],["name/59-11",[]],["text/59-11",[]],["component/59-11",[]],["title/59-12",[180,18.018,254,21.604,817,21.492,823,22.074,903,28.971,3211,25.183,4704,31.757]],["name/59-12",[]],["text/59-12",[]],["component/59-12",[]],["title/59",[1496,26.047,3211,46.127]],["name/59",[1496,0.412,3211,0.73]],["text/59",[0,1.973,3,2.447,4,1.321,5,1.436,6,1.038,8,0.196,9,2.103,11,1.661,12,1.252,13,2.775,14,1.016,15,0.259,18,0.243,19,2.636,20,0.235,21,0.609,22,0.806,23,0.227,24,0.43,27,0.424,29,0.581,31,0.967,32,0.226,33,0.937,34,0.202,40,2.135,42,0.467,49,1.554,50,0.779,56,0.297,64,1.969,66,2.117,67,0.21,72,0.539,73,0.467,74,0.461,75,0.675,76,1.03,80,0.394,82,1.28,88,1.101,94,0.547,109,0.75,111,0.23,113,0.55,115,0.237,119,1.37,121,0.441,123,0.784,126,2.356,128,0.437,129,0.542,134,0.984,137,1.971,146,0.224,147,0.428,148,0.231,151,1.258,152,1.903,153,0.21,155,0.444,156,0.777,158,2.68,163,1.436,164,0.728,167,0.473,174,1.462,177,0.563,179,0.411,180,2.352,184,0.395,185,0.179,186,0.251,188,5.383,189,0.998,190,0.203,194,0.712,201,1.187,205,0.291,206,0.972,211,0.407,213,0.654,220,0.185,223,0.627,228,0.265,230,0.253,233,0.334,235,0.348,245,0.285,252,0.274,254,3.001,256,0.461,258,0.215,259,0.691,260,0.285,271,0.223,276,2.593,280,0.285,287,0.246,298,0.2,307,3.237,308,0.215,323,0.261,326,0.305,327,0.22,351,1.735,356,0.681,361,0.223,363,0.305,364,1.26,376,0.422,381,3.483,382,0.627,385,1.241,387,0.291,388,1.412,393,0.334,397,0.25,399,0.348,400,0.294,414,0.237,417,0.906,419,0.305,420,3.173,424,1.429,428,0.985,432,0.64,433,0.365,434,0.348,435,0.514,443,0.553,445,0.79,452,0.973,453,0.488,459,1.009,465,0.377,468,1.663,473,0.412,474,0.776,478,0.263,479,0.707,485,0.395,499,0.291,508,0.285,510,0.232,524,1.719,535,0.584,542,0.473,549,0.255,554,0.334,557,0.274,561,0.818,564,1.308,570,0.269,572,0.313,577,1.499,578,0.202,581,0.323,582,0.818,590,0.627,594,0.313,596,0.649,599,0.218,606,0.235,614,0.675,623,0.389,628,0.225,633,0.291,635,0.448,651,0.297,654,0.285,656,0.4,657,0.918,659,0.285,670,0.728,676,0.203,680,0.951,701,0.675,702,0.287,705,0.297,713,0.261,720,0.376,738,0.2,749,0.798,770,1.011,774,1.459,784,0.356,786,0.658,789,0.305,794,0.348,804,0.25,817,0.83,819,0.313,823,1.381,830,0.274,843,0.389,845,0.297,848,0.798,854,0.887,871,0.313,874,1.927,903,0.592,925,0.318,931,0.265,945,0.709,948,0.348,949,0.334,950,0.253,965,0.223,968,0.426,970,0.239,973,0.722,980,0.271,996,1.007,1013,0.313,1014,0.763,1015,0.313,1017,1.021,1019,0.291,1020,0.323,1021,0.348,1058,0.348,1094,0.823,1112,0.261,1113,0.305,1121,0.523,1134,0.282,1137,0.348,1148,0.547,1149,1.134,1153,0.265,1164,0.24,1171,0.914,1172,0.798,1178,0.627,1181,0.519,1192,0.965,1206,0.365,1217,0.34,1221,1.007,1226,0.615,1229,0.269,1232,0.274,1293,0.608,1306,0.318,1316,1.025,1320,0.558,1322,0.323,1338,0.542,1352,0.297,1356,0.492,1377,0.323,1484,0.297,1496,0.424,1497,0.874,1568,0.313,1657,0.261,1663,1.488,1667,0.558,1674,0.365,1706,0.305,1708,0.348,1709,0.265,1721,0.389,1741,0.818,1744,5.624,1749,0.255,1764,0.532,1784,0.323,1785,1.519,1829,0.755,1842,0.313,1846,0.755,1856,1.919,1868,0.297,1877,0.276,1880,0.334,1917,0.79,1919,0.564,1922,0.305,1942,1.983,1950,1.429,1953,0.558,1958,0.348,1968,0.25,2030,1.818,2102,0.313,2158,0.334,2172,1.214,2181,4.669,2187,0.242,2192,0.334,2196,0.226,2204,0.263,2222,0.323,2235,0.791,2240,0.946,2249,1.102,2252,0.24,2253,0.313,2270,1.644,2279,0.279,2281,0.479,2327,1.539,2328,0.25,2329,0.236,2341,0.348,2342,1.52,2344,0.323,2345,0.806,2352,0.184,2361,0.951,2364,0.571,2380,0.294,2406,1.056,2410,0.309,2418,0.514,2432,1.554,2433,0.313,2446,0.644,2447,1.05,2449,0.644,2450,0.826,2451,0.707,2454,0.253,2491,0.279,2499,0.297,2501,0.918,2507,1.286,2529,0.527,2530,0.291,2536,0.291,2541,1.448,2572,0.25,2588,1.554,2600,0.323,2607,0.649,2616,0.313,2627,0.577,2643,0.914,2686,1.898,2689,0.806,2691,0.313,2693,0.627,2738,0.348,2752,0.348,2765,0.649,2766,0.334,2767,0.627,2781,0.348,2785,0.617,2787,3.204,2789,0.608,2792,1.637,2793,0.323,2805,0.592,2806,0.285,2807,1.068,2810,1.488,2819,0.285,2822,0.279,2840,0.323,2842,0.649,2845,1.443,2865,0.709,2866,0.297,2868,0.365,2872,0.863,2878,0.365,2879,0.365,2880,0.348,2881,0.348,2922,0.348,2925,1.4,2928,0.323,2939,1.034,3012,0.675,3014,0.365,3017,0.985,3039,0.294,3041,2.926,3103,0.348,3110,0.985,3139,1.008,3171,0.309,3186,0.365,3190,0.246,3199,0.301,3203,0.709,3208,2.182,3209,0.348,3211,3.499,3220,0.348,3225,1.593,3226,1.362,3227,1.119,3228,1.593,3229,1.494,3240,0.592,3241,0.906,3246,0.348,3252,1.443,3275,1.899,3279,1.656,3288,1.278,3318,0.365,3321,0.914,3347,1.186,3348,1.186,3349,0.365,3350,0.365,3351,0.365,3352,0.365,3353,0.365,3354,0.365,3355,0.365,3356,0.365,3357,0.365,3358,0.365,3359,0.365,3360,0.365,3361,0.365,3362,0.365,3363,0.365,3364,0.365,3365,0.365,3366,0.365,3367,0.365,3368,0.365,3369,0.365,3370,0.365,3371,0.365,3372,0.365,3373,0.365,3374,0.313,3375,0.365,3376,0.313,3377,0.365,3378,0.365,3379,0.365,3380,0.365,3381,0.365,3382,0.348,3383,0.365,3384,0.348,3385,0.365,3386,0.365,3387,0.365,3388,0.365,3389,0.365,3390,0.365,3391,0.365,3392,0.365,3393,0.365,3394,0.348,3395,0.365,3396,0.348,3397,0.365,3398,0.365,3399,0.365,3400,0.365,3401,0.365,3402,0.323,3403,0.365,3404,0.323,3406,0.285,3407,0.348,3408,0.334,3409,0.334,3410,0.323,3411,0.365,3412,0.365,3413,0.313,3414,0.305,3415,0.323,3416,0.323,3417,0.348,3420,0.709,3422,0.627,3432,1.278,3518,0.305,3551,0.553,3552,0.649,3555,0.649,3559,0.675,3560,0.709,3561,0.348,3564,0.675,3565,1.278,3566,1.341,3567,0.365,3569,0.348,3570,0.675,3572,0.348,3574,0.348,3575,0.348,3576,0.348,3582,0.323,3601,0.348,3615,0.334,3625,0.675,3643,0.348,3659,0.887,3686,0.755,3693,1.429,3848,0.313,3872,0.323,3883,0.334,3898,0.323,3918,0.334,3951,0.365,3952,0.389,4004,0.365,4005,0.365,4010,0.929,4067,0.649,4096,0.608,4123,0.675,4163,2.171,4188,0.348,4199,0.389,4205,1.102,4208,1.102,4213,5.813,4275,0.348,4461,0.691,4575,0.365,4592,0.709,4616,0.709,4620,0.985,4623,0.348,4624,0.985,4625,0.348,4629,0.985,4631,0.365,4633,0.389,4674,2.313,4686,0.389,4687,0.365,4704,1.227,4705,0.389,4706,0.389,4707,1.102,4708,1.21,4709,0.389,4710,0.427,4711,0.755,4712,0.389,4713,1.429,4714,0.427,4715,0.829,4716,0.755,4717,1.102,4718,0.73,4719,1.21,4720,0.389,4721,0.427,4722,0.755,4723,0.427,4724,0.427,4725,0.427,4726,0.427,4727,0.427,4728,0.427,4729,0.427,4730,0.427,4731,0.427,4732,0.427,4733,0.427,4734,0.427,4735,1.569,4736,0.829,4737,1.569,4738,0.427,4739,0.427,4740,0.389,4741,0.389,4742,0.427,4743,0.427,4744,0.427,4745,0.427,4746,0.389,4747,0.389,4748,0.389,4749,1.102,4750,0.348,4751,0.427,4752,0.348,4753,0.675,4754,0.985,4755,0.427,4756,0.829,4757,1.21,4758,0.829,4759,0.427,4760,0.427,4761,0.427,4762,0.427,4763,0.427,4764,0.427,4765,0.427,4766,1.21,4767,1.034,4768,0.427,4769,0.427,4770,0.427,4771,0.427,4772,0.427,4773,0.427,4774,0.427,4775,0.427,4776,0.427,4777,0.427,4778,0.427,4779,0.427,4780,1.102,4781,0.389,4782,0.427,4783,0.405,4784,0.829,4785,0.829,4786,0.427,4787,0.427,4788,0.829,4789,0.427,4790,0.829,4791,0.427,4792,0.427,4793,0.427,4794,0.427,4795,1.21,4796,1.21,4797,0.427,4798,1.91,4799,0.427,4800,0.427,4801,0.427,4802,0.427,4803,0.427,4804,0.427,4805,0.427,4806,0.427,4807,0.427,4808,0.427,4809,0.829,4810,0.427,4811,0.427,4812,0.427,4813,0.427,4814,2.832,4815,1.21,4816,0.427,4817,0.427,4818,0.427,4819,1.21,4820,0.427,4821,0.356,4822,0.829,4823,0.427,4824,0.427,4825,0.427,4826,0.427,4827,0.427,4828,0.427,4829,0.427,4830,0.427,4831,0.427,4832,0.427,4833,0.427,4834,3.628,4835,0.427,4836,0.427,4837,0.829,4838,0.427,4839,0.427,4840,0.427,4841,0.427,4842,0.427,4843,0.427,4844,0.427,4845,0.427,4846,0.829,4847,0.427,4848,0.427,4849,0.427,4850,3.375,4851,0.787,4852,0.427,4853,0.829,4854,0.427,4855,0.427,4856,0.427,4857,0.829,4858,0.829,4859,2.885,4860,0.427,4861,0.427,4862,0.427,4863,0.427,4864,0.427,4865,0.427,4866,0.427,4867,0.427,4868,1.569,4869,0.829,4870,0.427,4871,0.829,4872,0.427,4873,0.829,4874,0.427,4875,0.427,4876,0.427,4877,0.427,4878,0.829,4879,0.427,4880,0.427,4881,0.427,4882,0.427,4883,0.427,4884,0.389,4885,0.427,4886,0.427,4887,0.427,4888,0.829,4889,0.829,4890,0.427,4891,0.427,4892,0.427,4893,0.427,4894,0.427,4895,0.427,4896,0.427,4897,0.427,4898,0.829,4899,0.427,4900,0.829,4901,0.427,4902,0.427,4903,0.427,4904,0.829,4905,0.427,4906,0.427,4907,0.427,4908,0.675,4909,0.427,4910,0.427,4911,0.427,4912,0.427,4913,0.427,4914,1.21,4915,0.405,4916,0.427,4917,0.427,4918,0.427,4919,0.427,4920,0.427,4921,0.427,4922,0.427,4923,0.427,4924,0.427,4925,0.427,4926,0.427,4927,0.427,4928,0.427,4929,0.427,4930,0.427,4931,0.427,4932,0.427,4933,0.427,4934,0.427,4935,0.427,4936,0.427,4937,0.427,4938,0.829,4939,0.427,4940,0.427,4941,0.427,4942,0.427,4943,0.427,4944,0.427,4945,0.427,4946,0.427,4947,0.427,4948,0.427,4949,0.427,4950,0.427,4951,0.427,4952,0.427,4953,0.829,4954,0.389,4955,0.427,4956,0.427,4957,0.427,4958,0.755,4959,0.427,4960,3.375,4961,0.427,4962,0.427,4963,2.832,4964,0.427,4965,0.427,4966,0.829,4967,0.427,4968,0.829,4969,0.427,4970,0.389,4971,0.427,4972,0.427,4973,0.427,4974,0.427,4975,0.427,4976,0.427,4977,0.427,4978,0.427,4979,0.427,4980,0.427,4981,0.427,4982,0.427,4983,0.427,4984,1.443,4985,0.427,4986,0.427,4987,0.427,4988,0.914,4989,0.427,4990,0.427,4991,0.427,4992,0.427,4993,0.427,4994,1.569,4995,0.427,4996,0.427,4997,0.427,4998,0.427,4999,0.427,5000,0.427,5001,0.427,5002,0.427,5003,0.427,5004,0.427,5005,0.427,5006,0.427,5007,0.427,5008,0.427,5009,0.427,5010,0.427,5011,0.427,5012,0.427,5013,0.427,5014,0.427,5015,0.427,5016,0.427,5017,0.427,5018,0.427,5019,0.427,5020,0.427,5021,0.427,5022,0.427,5023,0.427,5024,0.427,5025,0.427,5026,0.427,5027,0.427,5028,0.427,5029,0.427,5030,3.869,5031,2.832,5032,0.427,5033,2.233,5034,2.233,5035,1.21,5036,2.233,5037,2.233,5038,2.233,5039,0.427,5040,3.11,5041,0.427,5042,1.91,5043,1.21,5044,0.427,5045,0.427,5046,0.427,5047,0.427,5048,0.829,5049,0.427,5050,2.233,5051,0.427,5052,0.427,5053,0.365,5054,0.427,5055,0.427,5056,0.427,5057,0.427,5058,0.427,5059,0.427,5060,0.427,5061,0.427,5062,0.427,5063,0.427,5064,0.427,5065,0.427,5066,0.427,5067,2.119,5068,0.427,5069,0.427,5070,0.427,5071,0.427,5072,0.427,5073,0.427,5074,0.427,5075,0.427,5076,0.427,5077,2.233,5078,1.21,5079,0.427,5080,0.427,5081,0.427,5082,0.427,5083,0.427,5084,1.21,5085,0.427,5086,0.427,5087,0.334,5088,0.427,5089,0.427,5090,0.389,5091,0.427,5092,0.427,5093,0.389,5094,0.427,5095,0.427,5096,1.21,5097,0.427,5098,0.427,5099,0.427,5100,1.91,5101,0.427,5102,0.427,5103,0.427,5104,5.284,5105,2.832,5106,3.11,5107,0.427,5108,0.427,5109,0.427,5110,0.427,5111,0.427,5112,0.427,5113,0.427,5114,0.427,5115,0.427,5116,0.427,5117,0.427,5118,0.427,5119,2.54,5120,0.829,5121,0.427,5122,0.829,5123,0.427,5124,0.829,5125,0.829,5126,0.427,5127,0.427,5128,0.427,5129,0.427,5130,1.569,5131,0.427,5132,0.427,5133,0.427,5134,0.427,5135,0.427,5136,0.389,5137,0.427,5138,1.909,5139,0.829,5140,0.427,5141,0.427,5142,0.427,5143,0.427,5144,0.427,5145,0.427,5146,0.427,5147,0.427,5148,0.427,5149,0.427,5150,0.427,5151,0.427,5152,0.427,5153,0.427,5154,0.427,5155,4.534,5156,0.427,5157,0.829,5158,0.427,5159,1.569,5160,0.427,5161,0.427,5162,0.427,5163,0.427,5164,0.427,5165,0.427,5166,0.427,5167,0.427,5168,0.427,5169,0.427,5170,0.427,5171,0.427,5172,0.427,5173,0.427,5174,0.427,5175,0.427,5176,0.427,5177,0.427,5178,0.427,5179,0.427,5180,0.427,5181,0.427,5182,0.427,5183,0.427,5184,0.427,5185,0.427,5186,0.427,5187,0.427,5188,0.427,5189,0.427,5190,0.427,5191,0.427,5192,0.427,5193,0.427,5194,0.427,5195,0.427,5196,0.427,5197,0.427,5198,0.427,5199,0.427,5200,0.829,5201,0.829,5202,0.427,5203,0.427,5204,0.427,5205,0.427,5206,1.21,5207,1.21,5208,0.427,5209,0.427,5210,0.427,5211,0.427,5212,0.427,5213,0.427,5214,1.102,5215,0.427,5216,0.427,5217,0.427,5218,0.829,5219,0.427,5220,0.427,5221,0.427,5222,0.427,5223,0.427,5224,0.427,5225,0.427,5226,0.427,5227,0.389,5228,0.427,5229,0.427,5230,0.427,5231,0.427,5232,0.427,5233,0.389,5234,0.427,5235,0.427,5236,0.427,5237,0.427,5238,0.427,5239,0.427,5240,0.427,5241,0.427,5242,0.427,5243,0.427,5244,0.427,5245,0.427,5246,0.427,5247,0.427,5248,0.427,5249,0.427,5250,0.427,5251,0.427,5252,0.427,5253,0.427,5254,0.389,5255,0.427,5256,0.829,5257,0.427,5258,0.427,5259,0.427,5260,0.427,5261,0.427,5262,0.427,5263,0.427,5264,0.427,5265,0.427,5266,0.389,5267,0.389,5268,0.389,5269,0.389,5270,0.427,5271,0.427,5272,0.427,5273,0.427,5274,0.356,5275,0.829,5276,0.829,5277,1.21,5278,0.427,5279,1.569,5280,1.569,5281,1.569,5282,0.427,5283,0.427,5284,0.427,5285,0.427,5286,0.427,5287,0.427,5288,0.427,5289,0.427,5290,0.427,5291,0.427,5292,0.427,5293,0.389,5294,0.427,5295,0.427,5296,0.427,5297,0.427,5298,0.427,5299,0.427,5300,0.427,5301,0.427,5302,0.427,5303,0.427,5304,1.429,5305,1.569,5306,0.427,5307,0.427,5308,0.427,5309,0.829,5310,0.427,5311,0.427,5312,0.427,5313,0.427,5314,0.427,5315,0.829,5316,0.427,5317,0.427,5318,2.233,5319,0.427,5320,1.569,5321,1.21,5322,0.427,5323,1.91]],["component/59",[68,0.364]],["title/60-1",[1496,26.047,5324,48.601]],["name/60-1",[]],["text/60-1",[]],["component/60-1",[]],["title/60-2",[733,38.207,2352,32.112]],["name/60-2",[]],["text/60-2",[]],["component/60-2",[]],["title/60-3",[5,26.047,76,21.109]],["name/60-3",[]],["text/60-3",[]],["component/60-3",[]],["title/60-4",[76,21.109,2311,38.966]],["name/60-4",[]],["text/60-4",[]],["component/60-4",[]],["title/60-5",[28,38.519]],["name/60-5",[]],["text/60-5",[]],["component/60-5",[]],["title/60-6",[473,30.372]],["name/60-6",[]],["text/60-6",[]],["component/60-6",[]],["title/60-7",[2435,49.047]],["name/60-7",[]],["text/60-7",[]],["component/60-7",[]],["title/60-8",[185,26.74,559,31.714,2436,33.928]],["name/60-8",[]],["text/60-8",[]],["component/60-8",[]],["title/60-9",[19,25.262,473,25.32]],["name/60-9",[]],["text/60-9",[]],["component/60-9",[]],["title/60-10",[19,16.852,473,16.891,1074,30.771,2415,38.805,5324,32.422]],["name/60-10",[]],["text/60-10",[]],["component/60-10",[]],["title/60-11",[325,22.619,385,21.826,556,31.465,770,23.638,1336,31.864,5324,29.183]],["name/60-11",[]],["text/60-11",[]],["component/60-11",[]],["title/60-12",[325,22.619,385,21.826,770,23.638,1336,31.864,5324,29.183,5325,36.362]],["name/60-12",[]],["text/60-12",[]],["component/60-12",[]],["title/60",[1496,26.047,5324,48.601]],["name/60",[1496,0.412,5326,0.958]],["text/60",[0,3.044,3,3.36,4,0.555,5,1.163,6,0.71,8,0.599,13,2.21,14,0.594,19,1.128,20,1.825,21,1.597,24,3.919,31,0.662,40,3.017,50,1.677,62,0.633,64,0.47,75,0.562,76,1.362,80,0.62,102,1.289,119,1.463,121,1.766,133,2.369,134,1.463,137,3.765,151,1.238,155,0.699,160,1.846,180,1.825,184,1.142,188,5.331,191,1.557,192,0.638,193,1.214,196,0.71,201,2.265,203,2.467,205,2.259,206,1.689,213,1.383,220,0.566,234,0.987,258,3.635,259,1.056,271,1.249,272,0.987,276,1.681,287,3.424,298,0.613,320,0.735,325,1.681,336,3.584,356,1.868,361,0.681,373,0.65,385,2.64,397,0.764,417,2.373,420,1.5,452,2.059,453,0.769,459,0.59,465,2.458,466,1.365,468,1.099,473,0.445,474,2.13,481,0.958,485,0.623,508,0.87,510,2.609,535,2.316,556,0.92,559,0.65,561,1.731,564,1.107,590,2.509,628,2.527,635,1.296,654,2.212,655,2.511,656,0.63,680,2.012,702,0.879,731,2.311,738,0.613,739,1.757,748,0.726,758,1.117,770,0.691,774,2.534,781,1.811,786,0.71,801,3.807,804,1.942,812,0.613,818,4.529,854,1.757,855,0.823,857,1.566,882,0.862,901,0.791,940,0.797,949,1.022,965,0.681,973,1.982,1017,4.041,1027,0.899,1034,0.932,1074,0.81,1085,1.117,1094,2.259,1112,1.463,1118,2.571,1121,3.741,1168,1.551,1171,0.987,1172,3.915,1226,0.665,1251,1.537,1269,0.862,1274,0.899,1302,1.951,1336,2.369,1356,0.774,1416,2.049,1442,2.259,1494,1.117,1496,0.839,1663,0.87,1741,2.144,1856,2.509,1917,2.169,1942,3.502,1968,1.401,1969,0.823,2094,2.509,2177,2.838,2192,2.596,2208,0.759,2235,1.674,2247,0.879,2253,2.434,2281,1.916,2327,2.937,2342,1.622,2352,0.564,2364,2.284,2415,3.216,2446,1.275,2447,0.718,2449,1.275,2450,1.748,2451,1.401,2454,0.774,2572,1.942,2749,0.987,2787,3.673,2790,2.509,2791,3.348,2792,2.434,2793,2.509,2805,2.369,2806,2.212,2807,2.259,2810,2.212,2840,2.509,2842,2.596,2877,0.958,3041,2.369,3122,2.596,3190,0.754,3238,0.81,3241,0.754,3456,0.944,3551,5.035,3552,1.022,3555,1.022,3582,0.987,3721,1.951,3840,0.972,3866,1.063,3908,1.783,3925,0.987,4042,0.853,4740,3.024,4741,3.024,4746,3.024,4747,3.024,4748,3.024,4749,6.22,4750,2.703,4752,2.703,4753,2.703,4754,2.703,4908,1.951,5324,8.331,5325,1.951,5326,3.348,5327,3.516,5328,1.19,5329,1.19,5330,2.182,5331,1.19,5332,4.372,5333,2.182,5334,1.19,5335,1.19,5336,3.024,5337,3.024,5338,3.32,5339,7.428,5340,1.19,5341,1.19,5342,1.19,5343,1.19,5344,1.19,5345,1.19,5346,1.19,5347,2.182,5348,1.19,5349,1.19,5350,1.117,5351,1.19,5352,1.19,5353,1.19,5354,1.911,5355,1.19,5356,2.182,5357,2.182,5358,2.182,5359,4.92,5360,2.182,5361,3.024,5362,3.024,5363,1.306,5364,2.396,5365,1.306,5366,3.024,5367,1.306,5368,3.024,5369,3.32,5370,2.396,5371,2.396,5372,2.396,5373,6.83,5374,6.22,5375,6.83,5376,2.182,5377,2.182,5378,3.745,5379,2.182,5380,2.182,5381,2.182,5382,2.182,5383,2.182,5384,2.182,5385,2.049,5386,1.19,5387,1.306,5388,1.117,5389,1.19,5390,1.19,5391,1.306,5392,1.306,5393,1.306,5394,1.306,5395,1.19,5396,1.306,5397,1.19,5398,1.19,5399,1.19,5400,1.306,5401,1.19,5402,1.306]],["component/60",[68,0.364]],["title/61-1",[0,16.87,159,31.604,1496,19.545,2588,38.849]],["name/61-1",[]],["text/61-1",[]],["component/61-1",[]],["title/61-2",[6,34.666,82,32.148,151,23.776]],["name/61-2",[]],["text/61-2",[]],["component/61-2",[]],["title/61-3",[152,25.623,159,36.111,2196,33.752]],["name/61-3",[]],["text/61-3",[]],["component/61-3",[]],["title/61-4",[1635,39.236,2188,38.355,2196,33.752]],["name/61-4",[]],["text/61-4",[]],["component/61-4",[]],["title/61-5",[1636,40.551,2187,36.111,2196,33.752]],["name/61-5",[]],["text/61-5",[]],["component/61-5",[]],["title/61-6",[1445,43.649,1637,37.979,2187,31.604,2196,29.539]],["name/61-6",[]],["text/61-6",[]],["component/61-6",[]],["title/61-7",[1262,37.979,2188,33.568,2196,29.539,5403,50.829]],["name/61-7",[]],["text/61-7",[]],["component/61-7",[]],["title/61-8",[29,26.82,50,22.761,159,31.604,189,24.94]],["name/61-8",[]],["text/61-8",[]],["component/61-8",[]],["title/61",[1496,31.244]],["name/61",[1496,0.746]],["text/61",[4,1.23,5,1.014,6,1.574,7,2.123,13,3.95,14,1.318,19,3.406,21,2.41,28,1.25,29,5.105,39,1.811,40,1.364,46,2.066,47,2.016,48,2.309,49,4.321,50,1.181,53,1.447,55,4.095,57,1.467,59,1.453,64,1.737,66,1.495,71,1.353,82,1.46,106,1.63,116,2.123,126,2.401,129,4.873,131,1.993,151,2.314,160,1.611,163,1.338,177,3.745,180,1.285,181,1.566,183,3.097,185,1.214,188,3.272,189,3.884,191,1.359,192,1.415,194,1.705,196,1.574,206,1.474,213,3.018,220,1.255,248,3.204,251,1.574,253,1.717,254,1.541,258,1.46,273,2.123,325,1.467,465,3.295,468,1.328,473,0.986,499,4.224,524,1.601,547,3.302,563,1.826,564,1.338,577,1.533,582,2.516,633,1.971,656,1.398,668,3.044,697,2.188,702,1.95,733,1.488,760,2.188,761,3.338,762,1.533,774,2.264,970,1.62,972,2.016,974,1.971,1071,4.69,1153,1.796,1156,2.155,1161,1.892,1232,1.858,1251,3.097,1252,4.224,1291,2.066,1320,1.95,1339,1.811,1373,5.117,1393,4.224,1445,3.775,1493,4.984,1496,1.691,1657,1.768,1704,2.823,1744,5.391,2186,1.93,2187,5.469,2188,5.227,2196,4.259,2197,2.066,2198,2.066,2264,2.309,2285,2.358,2307,2.549,2333,4.769,2342,3.033,2348,2.638,2349,2.123,2352,2.084,2354,3.444,2355,2.265,2381,3.252,2398,4.321,2410,2.094,2427,2.476,2438,1.971,2572,5.391,2588,2.016,2589,2.638,2590,2.549,2591,4.127,2592,4.397,2605,2.04,2606,2.188,2619,2.123,2661,2.265,2667,5.306,2694,2.188,2765,2.265,2766,2.265,2819,3.217,2822,4.056,2842,4.854,3024,4.55,3246,5.054,4136,2.188,4411,4.397,4692,2.265,4821,2.413,5087,2.265,5403,2.638,5404,2.896,5405,2.896,5406,2.638,5407,4.397,5408,4.397,5409,4.827,5410,2.638,5411,2.476,5412,2.476,5413,2.638,5414,2.358,5415,4.397,5416,4.397,5417,5.653,5418,6.207,5419,6.207,5420,6.207,5421,6.207,5422,6.207,5423,6.207,5424,2.896,5425,5.653,5426,4.827,5427,4.827,5428,4.827,5429,2.896,5430,2.896,5431,2.896,5432,2.896,5433,2.896,5434,2.896,5435,2.896,5436,2.896,5437,2.896]],["component/61",[68,0.364]],["title/62-1",[0,19.276,21,24.758,1705,25.109]],["name/62-1",[]],["text/62-1",[]],["component/62-1",[]],["title/62-2",[73,41.861,355,43.207]],["name/62-2",[]],["text/62-2",[]],["component/62-2",[]],["title/62-3",[77,43.496,159,42.117]],["name/62-3",[]],["text/62-3",[]],["component/62-3",[]],["title/62-4",[21,21.668,76,15.84,83,33.568,1644,36.129]],["name/62-4",[]],["text/62-4",[]],["component/62-4",[]],["title/62-5",[826,42.934,2529,40.551,2530,43.395]],["name/62-5",[]],["text/62-5",[]],["component/62-5",[]],["title/62-6",[21,15.765,828,28.265,2531,30.682,2532,30.682,2533,30.682,2534,30.682,2535,29.767]],["name/62-6",[]],["text/62-6",[]],["component/62-6",[]],["title/62-7",[21,21.668,829,49.128,2536,37.979,2537,39.818]],["name/62-7",[]],["text/62-7",[]],["component/62-7",[]],["title/62-8",[348,32.421,831,50.829,2529,35.49,2631,45.439]],["name/62-8",[]],["text/62-8",[]],["component/62-8",[]],["title/62-9",[348,25.944,432,23.638,2418,27.698,2529,28.4,2539,42.379,2633,36.362]],["name/62-9",[]],["text/62-9",[]],["component/62-9",[]],["title/62-10",[88,22.016,557,28.651,2342,21.826,2540,42.379,2541,22.833,2542,33.747]],["name/62-10",[]],["text/62-10",[]],["component/62-10",[]],["title/62-11",[151,23.776,2439,33.579,2543,51.919]],["name/62-11",[]],["text/62-11",[]],["component/62-11",[]],["title/62-12",[537,48.185,2439,33.579,2544,58.078]],["name/62-12",[]],["text/62-12",[]],["component/62-12",[]],["title/62-13",[538,48.185,2439,33.579,2545,58.078]],["name/62-13",[]],["text/62-13",[]],["component/62-13",[]],["title/62-14",[12,28.197,152,25.623,1006,37.293]],["name/62-14",[]],["text/62-14",[]],["component/62-14",[]],["title/62-15",[12,28.197,1635,39.236,2357,42.073]],["name/62-15",[]],["text/62-15",[]],["component/62-15",[]],["title/62-16",[24,33.078,1006,37.293,1636,40.551]],["name/62-16",[]],["text/62-16",[]],["component/62-16",[]],["title/62-17",[1006,43.496,1637,50.614]],["name/62-17",[]],["text/62-17",[]],["component/62-17",[]],["title/62-18",[12,28.197,1638,60.511,2357,42.073]],["name/62-18",[]],["text/62-18",[]],["component/62-18",[]],["title/62-19",[24,33.078,1006,37.293,1640,60.511]],["name/62-19",[]],["text/62-19",[]],["component/62-19",[]],["title/62-20",[5,26.047,1641,70.576]],["name/62-20",[]],["text/62-20",[]],["component/62-20",[]],["title/62-21",[1642,70.576,2235,37.495]],["name/62-21",[]],["text/62-21",[]],["component/62-21",[]],["title/62-22",[2546,74.376,2547,59.3]],["name/62-22",[]],["text/62-22",[]],["component/62-22",[]],["title/62-23",[1019,50.614,2548,74.376]],["name/62-23",[]],["text/62-23",[]],["component/62-23",[]],["title/62-24",[2549,74.376,2550,60.556]],["name/62-24",[]],["text/62-24",[]],["component/62-24",[]],["title/62-25",[1020,56.2,2551,74.376]],["name/62-25",[]],["text/62-25",[]],["component/62-25",[]],["title/62-26",[1026,46.127,2552,74.376]],["name/62-26",[]],["text/62-26",[]],["component/62-26",[]],["title/62-27",[1014,46.893,1262,50.614]],["name/62-27",[]],["text/62-27",[]],["component/62-27",[]],["title/62-28",[435,39.548,1012,42.934,2553,63.769]],["name/62-28",[]],["text/62-28",[]],["component/62-28",[]],["title/62-29",[1026,46.127,2554,58.169]],["name/62-29",[]],["text/62-29",[]],["component/62-29",[]],["title/62-30",[980,28.4,1012,30.069,1025,35.608,1026,27.698,2555,44.661,2556,31.088]],["name/62-30",[]],["text/62-30",[]],["component/62-30",[]],["title/62-31",[2557,60.556,2558,43.496]],["name/62-31",[]],["text/62-31",[]],["component/62-31",[]],["title/62-32",[12,28.197,2559,58.078,2560,40.91]],["name/62-32",[]],["text/62-32",[]],["component/62-32",[]],["title/62-33",[75,21.351,2531,37.492,2561,45.188,2562,31.831,2563,42.418]],["name/62-33",[]],["text/62-33",[]],["component/62-33",[]],["title/62-34",[21,24.758,50,26.007,76,18.099]],["name/62-34",[]],["text/62-34",[]],["component/62-34",[]],["title/62-35",[21,24.758,179,31.574,2564,43.395]],["name/62-35",[]],["text/62-35",[]],["component/62-35",[]],["title/62-36",[2565,65.403]],["name/62-36",[]],["text/62-36",[]],["component/62-36",[]],["title/62-37",[2381,38.966,2566,61.969]],["name/62-37",[]],["text/62-37",[]],["component/62-37",[]],["title/62-38",[19,21.659,123,31.856,748,35.465]],["name/62-38",[]],["text/62-38",[]],["component/62-38",[]],["title/62-39",[2569,49.128,2570,50.829,2571,42.171,2572,32.638]],["name/62-39",[]],["text/62-39",[]],["component/62-39",[]],["title/62-40",[2252,41.861,2573,65.472]],["name/62-40",[]],["text/62-40",[]],["component/62-40",[]],["title/62-41",[181,30.173,1338,36.468,2281,32.209,2574,55.81]],["name/62-41",[]],["text/62-41",[]],["component/62-41",[]],["title/62-42",[181,34.476,1338,41.669,2575,63.769]],["name/62-42",[]],["text/62-42",[]],["component/62-42",[]],["title/62-43",[3,31.604,179,27.633,818,26.71,2576,55.81]],["name/62-43",[]],["text/62-43",[]],["component/62-43",[]],["title/62-44",[12,28.197,21,24.758,2577,63.769]],["name/62-44",[]],["text/62-44",[]],["component/62-44",[]],["title/62-45",[2381,38.966,2578,74.376]],["name/62-45",[]],["text/62-45",[]],["component/62-45",[]],["title/62-46",[179,36.826,2579,74.376]],["name/62-46",[]],["text/62-46",[]],["component/62-46",[]],["title/62-47",[2580,89.216]],["name/62-47",[]],["text/62-47",[]],["component/62-47",[]],["title/62-48",[12,28.197,986,37.045,2581,63.769]],["name/62-48",[]],["text/62-48",[]],["component/62-48",[]],["title/62-49",[2381,38.966,2582,74.376]],["name/62-49",[]],["text/62-49",[]],["component/62-49",[]],["title/62-50",[4,23.704,12,24.678,676,26.601,2583,50.829]],["name/62-50",[]],["text/62-50",[]],["component/62-50",[]],["title/62-51",[676,30.395,2558,37.293,2584,58.078]],["name/62-51",[]],["text/62-51",[]],["component/62-51",[]],["title/62-52",[676,26.601,1026,34.612,2585,50.829,2586,47.712]],["name/62-52",[]],["text/62-52",[]],["component/62-52",[]],["title/62-53",[153,31.435,996,40.91,2587,44.389]],["name/62-53",[]],["text/62-53",[]],["component/62-53",[]],["title/62",[21,28.877,1705,29.286]],["name/62",[21,0.457,1705,0.463]],["text/62",[0,0.626,1,0.552,2,0.357,3,2.812,4,2.269,5,1.385,6,2.399,7,0.217,8,0.95,9,3.093,10,1.515,11,0.432,12,3.364,13,3.671,14,2.485,15,0.829,17,0.395,18,0.169,19,3.048,20,0.752,21,3.414,23,1.331,24,0.154,25,2.737,27,0.151,29,1.659,31,0.15,32,0.452,33,0.51,34,0.528,40,0.273,44,0.563,50,0.845,53,2.415,55,0.568,57,0.693,58,0.349,59,1.255,60,2.294,61,1.126,62,0.663,63,0.199,64,0.745,65,0.31,66,0.3,67,0.286,69,0.499,71,0.138,72,0.497,75,0.589,76,1.583,80,0.765,82,0.43,88,2.512,92,0.383,93,0.383,95,0.425,99,0.224,100,0.581,113,0.135,114,0.224,116,0.425,118,0.199,119,2.649,123,0.557,126,1.717,127,1.705,128,0.972,134,0.376,137,1.649,146,0.447,147,0.44,151,0.688,152,0.448,153,0.421,155,0.31,156,1.878,158,0.36,159,0.632,160,0.323,163,1.9,167,0.169,174,0.576,177,0.138,178,1.204,179,1.878,180,0.919,181,0.314,182,0.188,184,0.141,185,0.124,186,1.087,188,3.798,189,1.695,190,0.53,191,0.272,192,0.788,193,0.565,194,0.174,196,0.744,197,0.247,198,0.232,200,0.168,201,2.647,203,0.843,206,0.696,209,0.211,211,0.906,213,2.069,218,0.201,219,0.297,220,0.593,226,0.176,228,0.529,230,0.176,248,0.153,251,0.315,254,1.102,255,0.195,258,0.563,260,1.526,271,1.194,273,0.217,276,1.921,280,0.387,289,0.184,290,0.366,291,0.149,298,0.4,306,0.204,307,0.15,308,1.261,309,0.432,313,0.956,320,0.628,323,0.181,324,0.224,325,2.083,326,0.414,327,0.576,328,0.472,336,0.477,339,0.502,347,0.538,348,0.648,349,0.552,351,0.133,352,0.195,356,0.628,361,0.302,363,0.609,364,1.063,365,0.824,368,0.597,370,0.558,373,1.031,374,0.438,376,0.295,385,3.429,387,1.256,388,0.323,393,0.454,395,0.157,398,0.676,414,0.896,420,0.134,432,0.452,435,0.184,437,0.414,449,0.241,450,0.581,452,0.184,458,0.174,459,0.385,464,1.074,465,0.135,466,1.052,468,1.501,472,0.17,473,1.052,474,0.19,478,0.182,479,0.943,485,0.768,488,0.253,492,0.241,493,0.438,501,0.306,503,0.391,531,0.204,542,0.78,543,0.174,544,0.383,547,0.309,549,0.51,551,0.224,557,0.716,564,0.515,577,1.431,578,0.762,579,0.201,582,0.445,583,0.224,584,1.771,590,0.438,598,0.331,599,1.059,604,0.187,606,1.259,608,0.843,624,0.438,635,1.568,649,0.193,650,0.173,657,1.696,659,0.197,661,0.197,670,1.11,676,1.96,679,0.344,683,0.698,686,0.818,689,0.197,696,0.195,702,2.325,703,0.383,705,0.206,707,0.204,710,0.42,714,0.204,728,0.454,732,0.432,735,0.796,738,0.4,739,1.097,741,0.472,748,1.274,749,0.195,751,0.587,761,1.231,762,0.452,770,0.157,774,1.779,777,0.211,778,0.357,780,1.301,781,0.224,782,0.896,786,0.161,789,0.976,790,0.185,799,0.193,801,0.372,802,1.774,804,0.499,811,0.206,812,0.4,817,0.977,818,3.736,822,0.395,823,3.583,830,0.372,845,0.206,848,0.383,853,0.241,855,0.187,859,0.395,871,1.003,882,0.736,888,0.232,898,1.154,899,0.404,901,0.977,903,1.15,915,1.17,940,0.984,943,0.414,944,1.771,950,1.095,952,1.053,958,0.241,963,2.266,965,0.445,966,0.184,968,2.617,970,0.166,973,1.846,974,0.395,976,0.214,980,1.72,982,0.601,986,0.648,990,0.232,993,0.42,996,0.372,997,2.07,999,0.438,1002,1.246,1003,0.241,1006,1.808,1009,0.414,1012,3.254,1013,2.9,1014,1.016,1015,0.626,1016,1.154,1017,1.752,1018,0.581,1019,2.581,1020,1.218,1021,0.241,1024,1.317,1026,1.917,1027,2.495,1028,0.976,1052,0.253,1073,1.182,1094,3.004,1096,1.195,1100,0.253,1101,0.253,1102,0.253,1103,0.253,1104,0.253,1105,0.253,1106,1.018,1107,0.432,1113,0.414,1118,2.159,1124,0.27,1143,0.354,1144,0.496,1148,0.563,1149,2.368,1152,0.224,1153,0.184,1159,0.232,1161,0.379,1164,0.327,1170,0.199,1173,0.472,1177,0.224,1181,1.008,1192,1.539,1196,0.521,1197,0.463,1198,0.711,1200,0.27,1201,0.253,1203,0.954,1209,0.751,1226,0.151,1234,2.307,1251,0.19,1252,0.395,1254,0.184,1269,0.195,1291,0.414,1293,0.217,1298,0.558,1299,0.472,1301,0.224,1306,1.704,1310,1.051,1316,0.379,1318,0.594,1320,0.199,1322,0.438,1326,0.227,1327,1.354,1335,0.204,1336,0.414,1337,0.187,1339,0.363,1352,0.777,1353,0.873,1355,0.224,1366,0.454,1374,0.253,1375,0.253,1379,0.224,1408,0.609,1443,0.232,1493,0.64,1495,0.414,1631,0.147,1644,1.751,1657,0.521,1659,0.232,1663,0.569,1666,0.201,1667,1.243,1685,0.379,1704,0.8,1705,1.142,1710,0.232,1718,0.253,1732,0.414,1741,0.302,1744,0.339,1745,0.174,1749,0.962,1753,0.409,1764,0.19,1801,0.224,1805,0.217,1809,0.241,1852,0.253,1868,0.206,1879,1.483,1883,0.759,1887,0.232,1917,0.193,1953,1.085,1958,0.241,1961,0.247,1967,0.796,1968,0.173,1969,0.187,2030,0.241,2035,0.224,2038,0.253,2044,1.034,2051,0.209,2084,0.197,2136,0.224,2138,0.404,2139,0.736,2163,0.22,2181,0.321,2191,0.182,2203,0.372,2204,2.015,2207,0.569,2228,0.363,2231,0.796,2235,0.43,2236,0.459,2237,1.114,2240,0.454,2241,0.395,2242,0.232,2252,4.394,2256,1.07,2257,0.909,2281,4.269,2282,0.301,2306,0.446,2318,0.241,2327,0.315,2328,0.499,2329,1.146,2342,1.601,2345,0.197,2351,2.077,2352,0.251,2354,0.976,2356,1.097,2357,0.383,2361,0.517,2369,0.241,2370,0.206,2376,0.214,2379,0.192,2380,0.204,2381,3.405,2383,1.074,2386,0.73,2418,0.36,2425,0.232,2434,0.609,2438,0.581,2439,3.47,2440,0.232,2441,0.253,2446,0.158,2450,0.449,2486,1.558,2491,0.193,2499,0.777,2507,1.085,2529,1.174,2530,1.702,2531,0.645,2532,0.645,2533,0.438,2534,0.645,2535,0.626,2536,0.395,2537,0.414,2538,0.241,2541,1.059,2542,0.224,2547,0.68,2550,0.909,2556,0.404,2558,4.639,2560,3.857,2562,5.517,2571,0.438,2572,3.801,2586,0.73,2587,0.404,2593,0.224,2594,1.246,2595,0.241,2596,0.22,2598,0.253,2599,0.27,2600,0.224,2601,0.224,2602,1.468,2603,1.218,2604,1.996,2605,0.786,2606,0.645,2607,0.232,2608,0.241,2609,1.511,2610,0.224,2611,0.224,2612,0.27,2613,0.217,2614,0.253,2615,0.438,2616,0.217,2617,0.496,2619,0.818,2620,1.444,2621,0.241,2622,0.241,2623,0.232,2625,0.253,2626,0.253,2627,0.953,2628,0.232,2629,0.241,2630,0.253,2631,0.472,2632,0.241,2633,0.472,2634,0.253,2635,0.253,2636,0.253,2637,0.253,2638,0.253,2639,0.253,2640,0.253,2641,0.27,2642,0.496,2644,0.777,2645,0.224,2646,0.954,2647,1.687,2648,0.27,2649,0.27,2652,0.528,2654,0.528,2656,0.496,2658,3.914,2660,0.253,2661,0.454,2662,1.016,2664,2.312,2667,0.496,2668,1.958,2671,0.27,2672,0.27,2673,0.241,2677,0.253,2678,0.253,2683,0.27,2684,0.667,2685,0.472,2686,2.604,2687,0.954,2688,0.438,2689,0.197,2690,0.27,2691,0.425,2692,1.016,2693,0.224,2694,0.645,2695,0.425,2696,0.438,2697,0.241,2698,2.517,2699,0.241,2700,0.241,2701,0.953,2702,0.27,2703,0.261,2705,0.27,2706,0.27,2707,0.528,2708,0.463,2709,0.224,2711,0.472,2715,1.246,2718,0.528,2723,0.27,2724,0.253,2725,0.27,2726,0.241,2727,0.27,2728,0.483,2729,0.528,2731,0.27,2732,0.528,2733,0.528,2734,0.528,2735,0.27,2736,0.27,2737,0.241,2738,0.472,2739,0.777,2740,0.409,2741,0.27,2742,0.206,2744,0.227,2745,0.27,2746,0.635,2747,0.253,2748,0.27,2749,0.224,2750,0.27,2752,0.472,2753,0.27,2754,2.138,2755,2.138,2756,0.27,2757,0.27,2760,0.454,2761,0.843,2762,0.27,2763,0.472,2764,0.414,2765,2.701,2766,3.216,2767,0.843,2768,2.036,2769,0.241,2770,0.241,2771,0.581,2772,0.211,2773,0.36,2774,0.261,2775,0.777,2779,0.224,2780,0.27,2781,0.909,2783,0.232,2784,0.27,2785,0.432,2786,0.511,2787,0.459,2788,0.909,2789,0.425,2790,1.218,2791,0.472,2792,0.217,2793,0.224,2794,0.27,2795,0.27,2796,0.27,2797,0.27,2798,0.27,2799,0.27,2800,0.241,2801,2.815,2802,0.253,2803,1.034,2804,0.472,2805,0.414,2806,1.074,2807,0.395,2808,0.27,2809,0.241,2810,0.744,2811,0.777,2812,1.016,2813,0.528,2814,0.777,2815,0.27,2816,0.27,2817,0.241,2818,0.528,2819,0.197,2820,0.27,2821,0.27,2822,0.379,2823,0.27,2824,0.528,2825,0.27,2826,0.27,2827,0.27,2828,0.27,2829,0.27,2830,0.27,2831,0.27,2832,0.27,2833,0.27,2834,0.253,2835,0.27,2836,0.27,2837,0.27,2838,0.528,2839,0.206,2840,2.74,2841,1.312,2843,0.27,2844,0.232,2845,0.224,2846,1.016,2847,0.27,2848,0.27,2849,1.687,2850,0.27,2851,0.27,2852,0.27,2853,0.73,2854,0.27,2855,1.016,2856,0.27,2857,0.27,2858,0.27,2859,1.246,2860,0.496,2861,0.528,2862,0.528,2863,0.695,2864,0.27,2865,1.578,2866,0.206,2867,0.241,2868,0.253,2869,0.27,2870,0.27,2871,0.27,2872,0.976,2873,0.27,2874,0.27,2875,0.27,2876,0.27,2877,0.425,2878,0.253,2879,0.253,2880,0.241,2881,0.241,2882,0.253,2883,0.73,2884,0.27,2885,0.27,2886,0.27,2887,0.253,2888,0.496,2889,0.528,2890,0.27,2891,0.253,2892,0.253,2893,0.73,2894,0.253,2895,0.496,2904,0.27,2905,0.253,2906,0.777,2907,0.73,2908,0.73,2909,0.253,2910,0.528,2911,1.378,2912,0.496,2913,0.253,2914,1.17,2915,1.468,2916,0.27,2917,0.253,2918,2.312,2919,0.253,2920,0.27,2921,1.468,2922,1.114,2923,0.27,2924,0.528,2925,0.626,2926,0.27,2927,0.253,2928,0.438,2929,0.253,2930,0.73,2931,0.73,2932,0.253,2933,0.496,2934,0.27,2935,0.253,2936,0.253,2937,0.454,2938,0.27,2939,0.496,2940,0.27,2941,0.27,2942,0.528,2943,0.528,2944,0.27,2945,0.777,2946,0.954,2947,0.27,2948,1.378,2949,0.241,2951,0.27,2952,0.528,2953,0.253,2954,0.496,2955,0.496,2956,0.253,2957,0.253,2958,0.253,2959,0.27,2960,0.27,2961,1.887,2962,0.528,2964,0.253,2965,0.253,2966,1.378,2967,0.253,2972,0.253,2973,0.253,2974,0.27,2975,1.468,2977,0.27,2978,0.777,2979,0.27,2981,0.27,2982,0.777,2983,0.27,2985,0.27,2986,0.528,2987,0.528,2988,1.016,2989,0.27,2991,0.27,2992,1.016,2993,0.777,2994,0.27,2996,0.27,2997,0.777,2998,0.27,3006,0.27,3007,0.27,3008,0.241,3009,0.241,3010,0.241,3011,0.27,3012,0.472,3013,0.27,3014,0.496,3015,0.27,3016,0.472,3017,1.687,3018,0.695,3019,0.954,3020,0.227,3021,0.27,3022,0.27,3023,0.27,3024,0.626,3025,0.27,3026,0.27,3027,0.27,3028,0.27,3029,0.27,3030,0.27,3031,0.528,3032,0.777,3033,0.27,3034,0.27,3037,0.635,3038,0.253,3039,0.204,3040,0.27,3041,0.609,3042,0.27,3043,0.253,3044,0.954,3045,0.27,3046,0.27,3047,1.578,3048,1.578,3049,1.681,3050,1.681,3051,1.681,3052,1.681,3053,1.681,3054,0.27,3055,0.27,3056,0.27,3057,0.27,3058,0.27,3059,0.27,3060,0.27,3061,0.27,3062,0.27,3063,0.27,3064,0.27,3065,0.27,3066,0.27,3067,0.27,3068,0.27,3069,0.27,3070,0.27,3071,0.27,3072,0.27,3073,0.27,3074,0.27,3075,0.27,3076,0.27,3077,0.27,3078,0.27,3079,0.27,3080,0.27,3081,0.27,3082,0.27,3083,0.27,3084,0.27,3085,0.27,3086,0.27,3087,0.27,3088,0.27,3089,0.27,3090,0.27,3091,0.27,3092,0.27,3093,0.27,3094,0.27,3095,0.27,3096,0.27,3097,0.27,3098,0.27,3099,0.27,3100,0.27,3101,0.27,3102,0.241,3103,0.695,3104,0.27,3105,0.27,3106,1.016,3107,0.261,3108,0.27,3109,0.27,3110,0.241,3111,0.27,3112,0.27,3113,0.232,3114,0.232,3115,0.432,3116,0.253,3117,0.496,3118,0.454,3119,0.27,3120,0.27,3121,0.27,3122,0.232,3123,0.232,3124,0.496,3125,0.777,3128,0.253,3129,0.528,3130,0.528,3131,0.253,3132,0.253,3133,0.27,3134,0.253,3135,0.253,3137,0.27,3138,0.27,3139,0.247,3140,0.472,3141,0.27,3142,0.27,3143,0.409,3144,0.241,3145,0.27,3146,0.27,3147,0.27,3148,0.27,3149,0.27,3150,0.27,3151,0.27,3152,0.217,3153,0.27,3155,0.496,3160,0.528,3165,0.528,3170,0.528,3171,0.807,3172,0.241,3174,0.27,3175,0.247,3176,0.27,3177,0.27,3178,0.201,3179,0.241,3180,1.312,3181,0.241,3182,0.241,3183,0.232,3184,0.438,3185,0.27,3186,0.253,3187,0.241,3188,0.27,3189,0.27,3190,0.171,3191,0.241,3192,0.425,3193,0.241,3194,0.232,3195,0.241,3196,1.091,3197,0.528,3198,0.454,3199,0.209,3200,0.224,3201,1.621,3202,0.241,3203,0.253,3204,0.27,3205,0.27,3206,0.232,3207,0.211,3447,0.27,3696,0.777,4010,0.227,4042,0.193,4310,0.27,4311,0.27,4312,0.27,4692,0.667,4704,0.667,4767,0.253,4908,0.241,5087,0.454,5438,1.116,5439,2.278,5440,0.296,5441,0.58,5442,1.016,5443,0.58,5444,0.58,5445,1.016,5446,0.58,5447,0.58,5448,1.116,5449,0.58,5450,0.58,5451,0.58,5452,0.296,5453,0.58,5454,0.296,5455,0.296,5456,0.296,5457,0.296,5458,0.296,5459,0.296,5460,0.296,5461,0.296,5462,0.58,5463,0.58,5464,0.296,5465,0.296,5466,0.296,5467,0.296,5468,0.296,5469,0.261,5470,0.296,5471,3.302,5472,0.296,5473,0.296,5474,0.296,5475,1.116,5476,0.58,5477,0.58,5478,0.58,5479,0.58,5480,0.296,5481,2.072,5482,0.296,5483,0.296,5484,0.296,5485,0.296,5486,0.463,5487,0.296,5488,0.296,5489,0.296,5490,0.58,5491,0.296,5492,0.296,5493,0.296,5494,0.296,5495,0.296,5496,0.296,5497,0.296,5498,0.296,5499,0.253,5500,0.296,5501,0.296,5502,0.296,5503,0.296,5504,0.296,5505,0.296,5506,0.296,5507,0.296,5508,0.296,5509,0.296,5510,0.296,5511,0.296,5512,0.296,5513,0.296,5514,0.296,5515,0.27,5516,0.296,5517,0.296,5518,0.27,5519,0.296,5520,0.58,5521,0.296,5522,0.296,5523,1.116,5524,0.296,5525,0.296,5526,0.296,5527,0.296,5528,0.296,5529,0.296,5530,0.27,5531,0.296,5532,0.296,5533,0.853,5534,0.58,5535,0.58,5536,0.853,5537,0.296,5538,0.296,5539,0.296,5540,0.296,5541,0.296,5542,0.296,5543,0.296,5544,0.296,5545,0.296,5546,0.296,5547,0.296,5548,0.296,5549,0.296,5550,0.296,5551,0.296]],["component/62",[68,0.364]],["title/63-1",[0,19.276,1705,25.109,3208,38.355]],["name/63-1",[]],["text/63-1",[]],["component/63-1",[]],["title/63-2",[73,35.891,733,32.758,2352,27.532]],["name/63-2",[]],["text/63-2",[]],["component/63-2",[]],["title/63-3",[5,22.333,76,18.099,77,37.293]],["name/63-3",[]],["text/63-3",[]],["component/63-3",[]],["title/63-4",[76,18.099,83,38.355,2311,33.409]],["name/63-4",[]],["text/63-4",[]],["component/63-4",[]],["title/63-5",[28,32.112,826,50.076]],["name/63-5",[]],["text/63-5",[]],["component/63-5",[]],["title/63-6",[473,25.32,828,51.773]],["name/63-6",[]],["text/63-6",[]],["component/63-6",[]],["title/63",[1705,29.286,3208,44.735]],["name/63",[1705,0.463,3208,0.708]],["text/63",[0,1.868,5,1.008,8,2.201,13,1.964,14,2.185,19,1.631,22,1.918,27,2.455,28,2.073,34,1.361,50,1.958,62,2.994,64,1.035,66,1.485,71,1.345,76,2.609,82,4.367,88,5.089,94,4.759,126,2.388,134,1.268,137,2.087,155,2.568,163,3.704,174,1.485,180,2.742,188,5.386,189,1.286,190,1.366,192,1.406,201,3.854,213,2.575,220,1.247,252,3.081,259,3.178,291,1.451,298,2.898,320,2.703,351,1.291,365,4.099,368,2.568,420,1.3,435,1.785,465,3.282,473,2.104,485,2.289,535,2.317,561,4.516,582,3.221,629,2.11,655,2.932,668,1.814,748,1.6,762,1.523,774,2.898,812,3.384,818,3.452,901,1.744,904,3.628,931,2.978,1226,4.408,1229,1.814,1372,2.175,1704,4.689,1705,2.433,1741,1.5,1941,2.251,1942,3.378,2158,4.833,2181,4.434,2235,2.421,2279,1.88,2342,4.492,2352,1.243,2446,3.287,2447,1.582,2449,3.838,2450,3.798,2541,4.699,2643,2.175,2742,2.003,2787,3.323,3123,3.756,3190,1.661,3206,2.251,3207,2.053,3208,7.65,3211,5.373,3214,2.175,3216,2.343,3217,5.031,3218,5.873,3219,5.031,3220,5.031,3221,2.621,3222,2.343,3223,4.373,3225,3.426,3226,3.426,3227,5.146,3228,5.146,3229,2.251,3230,5.661,3231,1.918,3232,2.343,3233,6.167,3234,4.105,3237,2.621,3238,2.978,3239,2.621,3240,3.426,3241,2.771,3242,2.621,5552,2.878,5553,4.105]],["component/63",[68,0.364]],["title/64-1",[0,19.276,1705,25.109,2280,45.497]],["name/64-1",[]],["text/64-1",[]],["component/64-1",[]],["title/64-2",[73,35.891,733,32.758,2352,27.532]],["name/64-2",[]],["text/64-2",[]],["component/64-2",[]],["title/64-3",[5,22.333,76,18.099,77,37.293]],["name/64-3",[]],["text/64-3",[]],["component/64-3",[]],["title/64-4",[76,18.099,83,38.355,2311,33.409]],["name/64-4",[]],["text/64-4",[]],["component/64-4",[]],["title/64-5",[28,32.112,826,50.076]],["name/64-5",[]],["text/64-5",[]],["component/64-5",[]],["title/64-6",[473,25.32,828,51.773]],["name/64-6",[]],["text/64-6",[]],["component/64-6",[]],["title/64",[1705,29.286,2280,53.065]],["name/64",[1705,0.463,2280,0.84]],["text/64",[0,1.085,5,1.257,8,1.645,9,1.951,13,2.945,14,1.633,19,1.954,23,3.061,28,1.549,29,1.725,31,1.818,40,3.391,64,2.07,75,1.544,76,1.019,82,1.809,126,1.785,134,2.535,137,2.5,146,1.88,155,1.919,157,2.128,179,1.777,180,1.592,188,5.381,189,4.515,191,1.683,201,4.404,203,1.639,213,3,220,2.492,256,3.199,259,2.535,291,1.809,298,2.698,351,2.58,356,2.02,368,1.919,376,1.826,395,3.045,420,2.599,465,3.747,468,1.645,473,1.958,485,2.742,535,3.474,559,1.785,561,4.293,564,1.658,598,2.045,606,1.973,656,1.732,738,2.698,777,2.56,786,1.951,812,1.683,818,2.753,855,2.263,965,1.871,1153,2.226,1158,3.268,1161,2.345,1182,2.442,1226,3.663,1496,1.257,1705,2.265,1741,4.293,1942,5.258,2196,3.045,2235,3.63,2280,7.209,2327,5.889,2352,1.549,2393,2.498,2394,2.498,2418,2.226,2446,3.061,2447,1.973,2449,4.382,2450,4.746,2451,4.21,2454,2.128,2742,2.498,2819,2.391,3190,2.071,3238,2.226,3241,2.071,3245,3.068,3246,4.684,3247,3.268,3248,3.268,3249,5.239,3250,3.268,3251,6.557,3252,2.712,3253,5.239,3254,5.862,3255,5.239,3256,5.239,3261,3.068,3262,2.807,3264,3.268,3265,2.807,3268,7.5,3269,7.5,3270,4.918,3271,5.239,3272,5.239,3273,5.239,3275,4.635,3276,6.557,3277,5.239,3278,3.268,3279,3.364,3925,2.712,3926,3.268,5554,3.405,5555,3.589,5556,3.589,5557,3.589]],["component/64",[68,0.364]],["title/65-1",[0,19.276,1705,25.109,2279,41.669]],["name/65-1",[]],["text/65-1",[]],["component/65-1",[]],["title/65-2",[73,35.891,733,32.758,2352,27.532]],["name/65-2",[]],["text/65-2",[]],["component/65-2",[]],["title/65-3",[5,22.333,76,18.099,77,37.293]],["name/65-3",[]],["text/65-3",[]],["component/65-3",[]],["title/65-4",[76,18.099,83,38.355,2311,33.409]],["name/65-4",[]],["text/65-4",[]],["component/65-4",[]],["title/65-5",[28,32.112,826,50.076]],["name/65-5",[]],["text/65-5",[]],["component/65-5",[]],["title/65-6",[473,25.32,828,51.773]],["name/65-6",[]],["text/65-6",[]],["component/65-6",[]],["title/65-7",[86,49.562,2435,40.888]],["name/65-7",[]],["text/65-7",[]],["component/65-7",[]],["title/65-8",[185,23.402,559,27.756,832,42.878,2436,29.693]],["name/65-8",[]],["text/65-8",[]],["component/65-8",[]],["title/65-9",[220,24.177,834,45.439,2309,40.913,3343,47.712]],["name/65-9",[]],["text/65-9",[]],["component/65-9",[]],["title/65",[1705,29.286,2279,48.601]],["name/65",[1705,0.463,2279,0.769]],["text/65",[0,2.018,5,0.552,8,1.303,13,2.731,14,0.717,19,2.08,22,1.05,27,1.985,29,1.366,31,2.781,40,1.339,50,1.938,54,5.578,62,0.764,64,0.567,66,0.813,67,0.777,71,0.736,74,0.876,75,0.678,76,1.738,82,0.794,88,2.343,115,0.876,123,1.42,126,1.414,134,1.253,137,3.973,147,1.467,151,2.284,152,1.91,153,0.777,163,0.728,174,0.813,180,2.718,188,4.846,189,1.27,190,0.748,192,0.77,193,0.798,201,2.302,213,1.618,220,0.683,248,0.813,252,1.824,256,0.876,259,1.253,287,0.91,291,0.794,298,1.333,339,0.928,351,1.741,354,2.045,376,0.802,388,0.876,397,4.186,417,0.91,419,1.124,420,2.147,465,2.163,468,0.722,473,0.968,485,1.355,501,0.83,524,0.871,531,1.084,535,2.294,561,2.478,564,0.728,573,1.097,582,2.024,599,1.453,628,0.83,629,1.155,638,9.05,639,1.283,642,1.914,649,4.677,651,1.979,655,7.128,656,1.372,659,1.894,680,0.955,681,1.05,738,0.739,746,1.211,761,0.847,762,0.834,770,0.834,786,0.857,790,0.985,812,1.333,855,0.994,931,0.977,965,0.822,986,0.916,1037,1.283,1153,0.977,1164,1.6,1172,1.04,1191,0.985,1226,0.802,1278,1.191,1322,1.191,1372,1.191,1388,1.124,1448,1.191,1484,1.097,1495,1.124,1705,1.119,1741,2.862,1842,1.155,1922,3.391,1923,1.979,1941,1.233,1942,3.002,1968,0.922,2084,1.05,2102,2.084,2104,3.391,2106,1.124,2138,1.097,2181,0.871,2196,0.834,2235,1.958,2248,2.266,2279,7.981,2309,2.847,2327,3.33,2328,0.922,2341,1.283,2352,0.68,2361,0.955,2393,1.097,2394,1.097,2446,0.838,2447,0.866,2449,0.838,2450,2.503,2451,2.271,2453,2.148,2454,0.934,2541,3.413,2556,1.097,2572,0.922,2597,1.347,2598,1.347,2618,1.233,2742,1.097,2787,1.529,3152,1.155,3199,2.003,3207,1.124,3208,4.994,3210,1.347,3211,0.977,3212,1.347,3213,1.347,3214,1.191,3215,1.347,3216,1.283,3222,1.283,3225,2.77,3226,2.77,3227,3.391,3228,3.391,3240,1.124,3241,1.641,3275,2.186,3279,2.271,3324,1.233,3342,1.435,3343,2.43,3344,1.435,3345,1.435,3346,1.435,3347,2.148,3348,2.148,3374,1.155,3376,1.155,3402,1.191,3404,1.191,3405,1.435,3406,1.05,3410,1.191,3413,1.155,3414,1.124,3415,2.148,3416,1.191,3419,1.347,3421,1.347,3422,2.148,3435,1.435,3455,1.283,3456,1.139,3493,1.233,3505,4.79,3529,1.155,3659,1.155,3770,10.709,3818,1.191,3860,1.191,3862,1.283,3866,1.283,3868,3.037,3872,1.191,3883,1.233,3898,1.191,3908,1.172,3921,1.233,3925,1.191,4045,3.32,4053,1.233,4666,1.283,5558,1.347,5559,1.347,5560,1.347,5561,1.347,5562,1.347,5563,1.347,5564,1.347,5565,6.519,5566,1.435,5567,1.347,5568,1.435,5569,1.347,5570,1.347,5571,1.283,5572,1.576,5573,1.576,5574,1.576,5575,1.576,5576,6.125,5577,2.843,5578,2.843,5579,1.576,5580,1.576,5581,1.576,5582,1.576,5583,1.576,5584,1.576,5585,1.576,5586,1.576,5587,1.576,5588,1.576,5589,1.576,5590,1.576,5591,1.576]],["component/65",[68,0.364]],["title/66-1",[0,19.276,1705,25.109,3482,49.873]],["name/66-1",[]],["text/66-1",[]],["component/66-1",[]],["title/66-2",[73,35.891,733,32.758,2352,27.532]],["name/66-2",[]],["text/66-2",[]],["component/66-2",[]],["title/66-3",[5,22.333,76,18.099,77,37.293]],["name/66-3",[]],["text/66-3",[]],["component/66-3",[]],["title/66-4",[76,18.099,83,38.355,2311,33.409]],["name/66-4",[]],["text/66-4",[]],["component/66-4",[]],["title/66-5",[28,32.112,826,50.076]],["name/66-5",[]],["text/66-5",[]],["component/66-5",[]],["title/66-6",[473,25.32,828,51.773]],["name/66-6",[]],["text/66-6",[]],["component/66-6",[]],["title/66-7",[86,49.562,2435,40.888]],["name/66-7",[]],["text/66-7",[]],["component/66-7",[]],["title/66-8",[185,23.402,559,27.756,832,42.878,2436,29.693]],["name/66-8",[]],["text/66-8",[]],["component/66-8",[]],["title/66-9",[19,21.659,473,21.709,834,51.919]],["name/66-9",[]],["text/66-9",[]],["component/66-9",[]],["title/66",[1705,29.286,3482,58.169]],["name/66",[1705,0.463,2281,0.679]],["text/66",[0,3.346,4,0.461,5,0.707,6,1.098,8,0.926,9,0.59,10,1.223,13,2.144,14,0.494,19,2.425,21,1.376,24,0.563,28,0.468,29,0.521,31,0.55,32,1.069,34,0.513,40,0.951,42,0.611,50,2.644,55,1.027,57,1.023,60,0.583,64,0.726,66,0.56,67,0.535,71,0.507,75,2.255,76,1.006,80,1.344,82,0.547,88,3.01,113,0.494,119,2.691,123,0.542,126,1.763,134,0.89,136,0.668,137,2.654,147,0.56,148,1.531,151,1.557,152,0.811,153,1.747,155,1.896,156,3.209,163,0.933,178,1.173,180,2.527,185,1.187,186,0.639,188,5.077,189,1.265,190,0.958,193,2.399,201,2.718,203,1.293,211,0.533,213,1.18,219,0.555,220,0.47,248,1.829,253,0.643,254,1.506,256,1.971,258,1.018,259,0.89,276,1.795,287,0.626,298,1.958,307,1.023,308,1.018,311,0.849,325,1.023,339,0.639,349,0.702,350,0.82,351,2.554,365,1.032,368,0.58,373,1.004,385,0.53,395,1.069,417,1.634,420,1.279,432,1.069,459,0.49,465,1.613,466,2.699,468,0.497,472,0.622,473,0.369,485,0.962,493,0.82,510,0.59,524,1.565,535,1.71,543,1.667,559,0.54,561,1.476,563,0.684,564,2.188,573,0.755,582,1.052,597,1.069,599,0.555,604,1.785,619,0.795,635,0.587,650,0.635,656,1.71,712,2.139,734,0.774,738,0.947,740,0.82,762,1.498,774,0.947,780,0.764,782,0.603,786,0.59,812,0.947,816,0.849,817,0.574,818,1.355,819,2.076,823,0.59,855,0.684,931,0.673,950,0.643,965,0.566,970,1.13,980,0.69,1002,0.653,1016,0.678,1017,5.042,1026,1.756,1027,1.389,1074,0.673,1094,3.223,1110,1.551,1112,0.662,1121,0.684,1127,0.849,1128,3.458,1143,0.662,1148,1.332,1154,0.69,1164,0.611,1181,0.678,1182,0.738,1221,0.696,1226,1.027,1232,3.654,1262,0.738,1274,1.948,1278,2.139,1298,0.709,1327,0.709,1330,0.928,1337,0.684,1348,1.61,1376,0.82,1393,2.841,1637,0.738,1666,0.738,1673,2.214,1704,0.635,1705,1.115,1741,1.476,1745,0.639,1753,0.764,1805,0.795,1864,0.849,1922,0.774,1942,4.061,1947,0.928,1968,1.181,2068,0.988,2084,1.345,2137,1.644,2153,1.44,2172,0.69,2179,1.644,2181,1.116,2221,0.755,2235,2.388,2240,0.849,2281,3.025,2315,2.214,2327,2.849,2328,0.635,2361,2.87,2364,0.747,2380,2.439,2381,4.033,2385,4.063,2396,1.526,2418,1.252,2425,0.849,2432,0.755,2436,0.577,2442,1.644,2446,1.074,2447,0.597,2449,1.074,2450,2.198,2451,1.656,2454,0.643,2499,0.755,2501,3.331,2507,2.811,2536,0.738,2541,3.935,2556,1.971,2560,0.696,2562,5.245,2681,0.883,2696,1.526,2726,1.644,2773,0.673,2792,3.472,2793,0.82,2805,0.774,2807,0.738,2809,2.305,2810,1.345,2822,0.709,2844,1.579,2849,5.277,2937,0.849,3140,2.305,3143,1.995,3144,2.886,3171,0.784,3172,1.644,3175,1.682,3208,1.214,3224,1.44,3238,0.673,3241,0.626,3252,0.82,3275,0.611,3279,2.77,3339,1.839,3374,0.795,3376,0.795,3382,0.883,3384,0.883,3394,1.644,3396,1.644,3407,0.883,3408,0.849,3456,0.784,3482,4.454,3483,0.988,3484,0.988,3485,0.988,3486,0.988,3487,0.988,3488,0.988,3489,0.988,3490,2.42,3491,2.214,3492,2.42,3493,2.214,3494,2.305,3495,2.42,3496,2.42,3497,2.42,3498,2.579,3499,1.839,3500,2.42,3501,2.42,3502,2.42,3503,2.42,3504,2.42,3505,0.849,3513,1.839,3518,0.774,3519,3.03,3521,1.644,3522,0.82,3523,1.839,3524,1.839,3525,0.988,3526,2.723,3527,1.726,3528,0.988,3529,0.795,3530,2.42,3531,0.988,3532,0.988,3533,0.928,3534,0.988,3535,0.988,3536,0.988,3537,0.988,3538,1.644,3539,0.988,3540,0.988,3541,0.988,3542,0.988,3543,0.988,3547,1.726,3548,0.988,3549,5.903,3550,5.903,3551,4.951,3552,5.338,3553,0.988,3554,0.988,3555,0.849,3556,0.988,3557,0.988,3559,1.644,3561,0.883,3564,2.305,3565,2.886,3569,0.883,3572,0.883,3574,0.883,3575,0.883,3576,0.883,3578,1.839,3579,1.839,3581,0.928,3582,0.82,3583,0.928,3584,0.883,3585,0.928,3586,0.928,3587,0.988,3588,0.988,3589,0.883,3590,1.644,3591,1.526,3592,0.988,3593,0.988,3594,0.988,3595,1.839,3596,0.883,3597,0.988,3598,0.988,3599,2.579,3600,2.579,3601,0.883,3602,0.988,3603,0.988,3604,0.988,3605,1.839,3606,1.839,3607,1.839,3608,1.839,3609,1.839,3610,1.839,3611,1.839,3612,1.839,3613,1.839,3614,1.839,3615,0.849,3616,4.314,3617,1.839,3618,0.988,3619,1.839,3620,3.802,3621,1.839,3622,0.988,3623,2.579,3624,0.988,3625,0.883,3626,0.988,3627,3.802,3628,0.988,3629,0.988,3630,0.988,3631,0.988,3632,3.228,3633,0.988,3634,0.988,3635,0.988,3636,0.928,3637,0.988,3638,0.988,3639,0.883,3640,0.988,3641,0.988,3642,1.839,3643,1.644,3644,1.839,3645,0.928,3699,0.988,3700,0.988,3922,1.726,4042,0.709,4213,0.883,4645,0.988,4655,0.928,4659,0.988,4664,1.839,4767,0.928,5592,2.019,5593,2.019,5594,0.988,5595,2.019,5596,2.019,5597,0.988,5598,0.988,5599,0.988,5600,0.988,5601,0.988,5602,0.988,5603,0.988,5604,0.988,5605,0.988,5606,0.988,5607,0.988,5608,1.085,5609,1.085,5610,1.03,5611,1.085,5612,0.988,5613,0.988,5614,1.085,5615,1.085,5616,1.085,5617,1.839,5618,1.085,5619,1.085,5620,1.085,5621,1.085,5622,1.085,5623,1.085,5624,1.085,5625,1.085,5626,1.085,5627,1.085,5628,1.085,5629,1.085,5630,1.085,5631,1.085,5632,2.831,5633,1.085,5634,1.839,5635,1.085,5636,2.019]],["component/66",[68,0.364]],["title/67-1",[0,19.276,1705,25.109,2282,33.078]],["name/67-1",[]],["text/67-1",[]],["component/67-1",[]],["title/67-2",[73,35.891,733,32.758,2352,27.532]],["name/67-2",[]],["text/67-2",[]],["component/67-2",[]],["title/67-3",[5,22.333,76,18.099,77,37.293]],["name/67-3",[]],["text/67-3",[]],["component/67-3",[]],["title/67-4",[76,18.099,83,38.355,2311,33.409]],["name/67-4",[]],["text/67-4",[]],["component/67-4",[]],["title/67-5",[473,25.32,826,50.076]],["name/67-5",[]],["text/67-5",[]],["component/67-5",[]],["title/67-6",[28,32.112,828,51.773]],["name/67-6",[]],["text/67-6",[]],["component/67-6",[]],["title/67-7",[86,49.562,2435,40.888]],["name/67-7",[]],["text/67-7",[]],["component/67-7",[]],["title/67-8",[19,21.659,473,21.709,832,48.993]],["name/67-8",[]],["text/67-8",[]],["component/67-8",[]],["title/67",[1705,29.286,2282,38.58]],["name/67",[1705,0.463,2282,0.61]],["text/67",[0,1.385,2,0.638,4,0.44,5,0.678,6,0.563,8,0.887,9,2.49,13,2.26,14,0.472,19,2.717,21,0.751,23,1.447,27,0.53,29,1.307,31,2.32,32,3.14,42,0.583,50,0.789,53,0.966,55,0.984,57,0.98,58,1.164,60,0.557,62,0.502,64,0.696,67,0.511,72,0.462,75,0.446,76,0.772,80,3.798,84,6.166,106,0.583,113,1.238,115,1.076,118,3.418,119,2.614,123,0.518,127,0.653,134,1.776,137,1.991,147,0.535,151,0.721,152,0.777,153,0.511,156,0.513,157,2.024,163,2.552,164,0.623,185,1.141,186,1.602,188,4.658,189,2.469,190,0.492,191,0.907,192,0.507,193,0.98,194,0.61,196,1.479,198,0.811,201,4.283,204,0.705,207,1.38,211,0.95,213,2.77,220,1.984,251,1.052,258,0.975,260,3.052,276,1.729,288,0.677,298,4.201,300,1.241,301,2.323,307,0.525,308,0.523,314,0.76,320,2.268,322,0.721,323,0.633,327,1.404,336,0.58,339,4.427,344,0.811,351,0.465,373,2.951,376,2.811,385,0.507,398,6.814,414,1.076,420,0.874,458,1.139,459,0.874,465,1.834,466,1.945,468,0.887,473,0.659,480,0.623,485,2.183,501,2.122,508,1.289,510,1.052,535,1.313,542,1.102,543,0.61,544,4.592,548,1.654,549,1.624,563,0.653,564,2.345,566,0.844,577,0.549,578,1.286,597,0.549,599,3.224,604,0.653,606,0.57,628,0.546,635,0.56,640,1.612,642,1.303,656,1.944,669,0.886,670,1.164,681,0.691,683,0.648,703,3.645,710,0.749,738,0.486,739,1.44,762,0.549,774,0.486,778,1.19,782,1.898,799,1.264,808,0.691,817,2.924,818,1.928,822,1.851,823,3.784,851,4.724,857,1.264,873,2.275,898,0.648,901,1.648,916,1.887,925,0.771,931,6.14,951,0.698,968,0.532,970,0.58,986,2.341,1016,0.648,1017,1.035,1018,0.705,1024,0.74,1071,0.783,1096,0.671,1118,0.648,1143,0.633,1148,0.684,1154,2.171,1170,0.698,1179,0.783,1191,2.519,1192,0.638,1196,0.633,1226,0.527,1229,0.653,1254,3.148,1317,0.643,1320,1.303,1323,0.796,1335,1.872,1338,0.677,1339,0.648,1357,0.886,1373,0.659,1388,2.875,1442,1.851,1450,0.886,1496,0.363,1633,0.796,1657,1.181,1667,1.831,1704,3.47,1705,1.344,1725,0.796,1745,1.139,1785,4.291,1807,0.684,1879,5.797,1887,1.513,1915,0.886,1919,0.705,1923,0.721,1953,1.303,1967,1.38,1969,0.653,2044,1.462,2051,0.73,2136,0.783,2138,0.721,2139,1.276,2187,0.587,2188,0.623,2193,2.326,2208,1.124,2212,1.172,2221,0.721,2231,0.74,2235,0.523,2241,1.317,2248,3.213,2252,0.583,2282,6.326,2329,1.504,2333,3.519,2344,0.783,2345,0.691,2349,0.76,2352,1.174,2356,0.705,2383,2.275,2410,0.749,2435,1.495,2436,2.144,2438,0.705,2439,1.019,2446,1.029,2447,1.495,2449,1.029,2450,0.546,2499,2.376,2501,1.591,2502,2.326,2512,0.886,2530,0.705,2600,0.783,2603,0.783,2610,0.783,2611,0.783,2623,0.811,2627,0.721,2645,4.175,2673,0.844,2686,0.633,2688,0.783,2701,0.721,2744,0.796,2764,0.74,2771,1.317,2773,0.643,2787,0.557,2803,0.783,2806,0.691,2819,1.813,2845,2.056,3008,0.844,3039,1.331,3113,0.811,3178,0.705,3184,0.783,3231,5.331,3232,1.575,3288,0.844,3551,0.691,3591,2.579,3615,2.67,3701,0.944,3702,0.944,3703,0.944,3704,2.215,3705,0.944,3706,0.721,3707,0.944,3709,0.944,3711,4.623,3712,0.944,3713,2.215,3714,3.109,3715,3.109,3716,3.109,3717,2.128,3718,2.779,3719,6.339,3720,4.172,3721,1.575,3723,0.944,3725,0.944,3726,0.944,3727,0.886,3728,0.944,3729,0.944,3730,0.826,3731,1.38,3732,0.844,3733,0.844,3734,0.944,3735,0.944,3736,1.703,3737,0.944,3738,0.944,3739,0.944,3740,0.944,3741,0.944,3742,1.762,3743,1.762,3744,0.944,3745,0.944,3746,0.944,3747,0.944,3748,0.944,3749,2.477,3750,0.944,3751,0.944,3752,0.944,3753,0.944,3754,1.762,3755,0.944,3756,0.944,3757,0.864,3758,1.575,3759,0.944,3760,0.944,3761,1.575,3762,1.575,3763,0.886,3764,2.477,3765,1.575,3770,0.811,3771,0.886,3776,1.762,3777,0.944,3778,0.944,3779,0.886,3780,0.844,3781,0.844,3782,0.944,3783,0.844,3784,0.844,3785,0.844,3786,0.844,3787,0.844,3788,0.844,3789,0.844,3790,0.944,3791,0.844,3792,0.844,3793,0.844,3794,0.783,3795,0.844,3796,0.844,3797,0.844,3798,0.844,3799,0.844,3800,0.844,3801,0.844,3802,0.844,3803,0.844,3804,0.844,3805,0.844,3806,0.844,3807,0.844,3808,0.844,3809,0.844,3810,0.844,3811,0.844,3812,0.844,3813,0.844,3814,0.844,3815,0.783,3816,0.844,3817,0.844,4042,0.677,5553,1.654,5637,1.036,5638,5.076,5639,1.036,5640,0.944,5641,1.036,5642,0.944,5643,1.935,5644,1.935,5645,1.935]],["component/67",[68,0.364]],["title/68-1",[0,19.276,1705,25.109,3275,35.891]],["name/68-1",[]],["text/68-1",[]],["component/68-1",[]],["title/68-2",[73,35.891,733,32.758,2352,27.532]],["name/68-2",[]],["text/68-2",[]],["component/68-2",[]],["title/68-3",[5,22.333,76,18.099,77,37.293]],["name/68-3",[]],["text/68-3",[]],["component/68-3",[]],["title/68-4",[76,18.099,83,38.355,2311,33.409]],["name/68-4",[]],["text/68-4",[]],["component/68-4",[]],["title/68-5",[28,32.112,826,50.076]],["name/68-5",[]],["text/68-5",[]],["component/68-5",[]],["title/68-6",[473,25.32,828,51.773]],["name/68-6",[]],["text/68-6",[]],["component/68-6",[]],["title/68-7",[86,49.562,2435,40.888]],["name/68-7",[]],["text/68-7",[]],["component/68-7",[]],["title/68-8",[185,23.402,559,27.756,832,42.878,2436,29.693]],["name/68-8",[]],["text/68-8",[]],["component/68-8",[]],["title/68-9",[76,14.082,351,22.252,834,40.397,2051,34.957,2541,25.366]],["name/68-9",[]],["text/68-9",[]],["component/68-9",[]],["title/68-10",[19,13.792,76,11.524,180,18.018,836,38.531,2541,20.759,3275,22.854,3706,28.265]],["name/68-10",[]],["text/68-10",[]],["component/68-10",[]],["title/68",[1705,29.286,3275,41.861]],["name/68",[1705,0.463,3279,0.688]],["text/68",[0,0.807,4,0.329,5,0.271,8,0.355,13,2.718,14,0.352,19,1.885,28,0.334,31,1.857,40,0.692,42,0.827,50,0.6,53,0.387,59,0.738,62,0.712,64,0.529,67,0.382,71,5.074,75,3.382,76,0.596,80,2.14,82,0.39,88,0.725,94,0.97,96,0.827,98,2.443,119,1.176,123,1.334,126,0.385,133,1.049,134,0.925,137,1.387,146,0.406,147,0.759,151,0.548,152,0.591,153,2.407,156,5.115,163,0.358,185,0.325,188,4.702,189,1.638,201,2.192,203,0.671,213,1.329,220,0.335,226,4.556,228,6.448,248,1.083,254,0.412,258,0.741,259,0.341,271,0.404,309,2.811,312,0.539,316,0.662,325,1.063,351,4.915,356,0.436,364,0.511,397,0.86,405,0.952,415,0.695,417,2.369,420,0.948,465,0.669,468,0.355,473,0.714,485,0.701,510,1.141,535,0.709,561,1.094,564,1.473,572,1.078,573,1.023,578,0.695,582,0.404,597,7.105,599,1.631,606,0.426,628,0.774,633,1,649,0.961,654,0.98,655,0.898,656,0.709,659,0.98,680,0.891,738,0.363,782,0.818,786,0.421,792,0.539,799,0.506,812,0.363,817,1.111,818,1.527,823,0.799,848,0.511,940,0.473,965,0.404,1002,0.884,1017,0.786,1091,1.641,1112,1.281,1121,0.488,1143,0.898,1164,0.436,1181,0.484,1192,0.476,1221,1.713,1226,0.394,1229,0.488,1232,1.713,1251,2.352,1338,0.506,1442,0.527,1448,0.585,1473,0.606,1484,0.539,1568,0.568,1658,0.533,1704,0.86,1705,4.19,1741,2.14,1874,1.444,1922,0.552,1923,1.023,2087,1.078,2092,1.257,2094,1.111,2096,1.257,2098,1.257,2102,1.078,2104,0.552,2106,1.049,2172,0.492,2181,0.813,2235,1.058,2327,2.654,2328,1.227,2361,0.469,2385,3.483,2446,0.782,2447,0.426,2449,0.782,2450,2.161,2451,0.86,2452,0.705,2453,0.585,2454,0.459,2457,0.606,2491,0.506,2501,0.86,2541,4.714,2627,0.539,2689,0.516,2773,0.912,2787,0.416,3152,1.078,3190,1.211,3217,4.257,3230,1.744,3238,0.48,3241,0.447,3254,0.63,3261,2.282,3275,6.917,3279,6.542,3321,0.585,3322,1.257,3323,1.111,3406,0.516,3409,2.088,3410,0.585,3413,1.078,3441,0.662,3584,2.597,3659,0.568,3706,1.461,3819,0.705,3820,1.257,3821,1.257,3822,1.339,3823,0.705,3824,0.705,3825,0.705,3826,0.705,3827,1.339,3832,1.339,3833,1.15,3840,1.094,3845,5.826,3847,1.339,3848,0.568,3851,2.431,3854,3.854,3858,1.339,3859,1.339,3860,1.111,3861,1.339,3862,1.197,3864,1.339,3866,1.197,3867,1.339,3868,1.15,3869,1.911,3871,1.911,3872,1.111,3874,1.339,3876,0.705,3883,0.606,3898,1.111,3902,1.257,3904,1.339,3905,4.765,3908,0.576,3909,0.63,3912,0.606,3914,1.709,3918,1.15,3921,0.606,3922,6.862,3924,0.63,3932,1.339,3933,0.705,3946,0.617,3950,1.339,3951,0.662,3961,0.705,3962,1.911,3963,2.431,3964,1.339,3965,0.705,3966,0.705,3967,1.911,3968,0.705,3969,0.705,3970,0.705,3971,0.662,3972,1.339,3973,1.339,3974,1.172,3975,0.662,3976,0.705,4587,0.662,4859,0.662,5254,0.705,5354,2.923,5390,5.33,5553,1.257,5569,0.662,5570,0.662,5571,6.535,5597,0.705,5598,0.705,5599,0.705,5600,0.705,5601,0.705,5602,0.705,5603,0.705,5604,0.705,5605,0.705,5606,0.705,5607,0.705,5617,0.705,5646,0.774,5647,0.774,5648,8.481,5649,1.47,5650,0.774,5651,1.911,5652,4.104,5653,5.056,5654,2.099,5655,3.666,5656,0.774,5657,1.911,5658,0.774,5659,1.911,5660,4.882,5661,1.47,5662,7.593,5663,2.099,5664,0.774,5665,0.774,5666,1.47,5667,1.47,5668,0.774,5669,1.47,5670,1.47,5671,0.774,5672,1.47,5673,0.774,5674,0.774,5675,0.774,5676,0.774,5677,0.774,5678,0.774,5679,1.339,5680,1.339,5681,0.705,5682,3.738,5683,0.774,5684,10.331,5685,0.705,5686,0.705,5687,0.774,5688,0.705,5689,0.662,5690,0.662,5691,0.662,5692,0.774,5693,0.774,5694,0.774,5695,0.774,5696,0.774,5697,0.774,5698,0.705,5699,0.705,5700,0.705,5701,0.705,5702,0.705,5703,0.705,5704,0.705,5705,0.705,5706,0.705,5707,0.705,5708,0.705,5709,0.705,5710,0.774,5711,0.705,5712,0.774,5713,0.774,5714,5.551,5715,0.705,5716,0.705,5717,0.705]],["component/68",[68,0.364]],["title/69-1",[0,19.276,1705,25.109,2839,44.389]],["name/69-1",[]],["text/69-1",[]],["component/69-1",[]],["title/69-2",[73,35.891,733,32.758,2352,27.532]],["name/69-2",[]],["text/69-2",[]],["component/69-2",[]],["title/69-3",[5,22.333,76,18.099,77,37.293]],["name/69-3",[]],["text/69-3",[]],["component/69-3",[]],["title/69-4",[76,18.099,83,38.355,2311,33.409]],["name/69-4",[]],["text/69-4",[]],["component/69-4",[]],["title/69-5",[28,32.112,826,50.076]],["name/69-5",[]],["text/69-5",[]],["component/69-5",[]],["title/69-6",[473,25.32,828,51.773]],["name/69-6",[]],["text/69-6",[]],["component/69-6",[]],["title/69-7",[86,49.562,2435,40.888]],["name/69-7",[]],["text/69-7",[]],["component/69-7",[]],["title/69-8",[185,23.402,559,27.756,832,42.878,2436,29.693]],["name/69-8",[]],["text/69-8",[]],["component/69-8",[]],["title/69-9",[19,21.659,473,21.709,834,51.919]],["name/69-9",[]],["text/69-9",[]],["component/69-9",[]],["title/69",[1705,29.286,2839,51.773]],["name/69",[1705,0.463,2839,0.819]],["text/69",[0,1.315,5,0.492,6,0.763,8,0.644,9,0.763,13,1.443,14,0.639,19,1.928,24,0.728,28,0.606,31,1.787,32,1.355,34,1.211,40,1.206,42,1.441,64,0.505,76,1.001,119,0.619,126,0.698,134,0.619,137,3.26,151,1.316,155,0.751,163,3.623,180,1.566,185,1.074,188,5.423,189,2.536,201,3.539,206,0.714,211,0.689,213,1.47,220,0.608,248,0.725,256,2.42,258,1.291,259,1.128,276,3.148,287,2.92,298,2.041,304,2.092,325,1.297,347,3.919,351,1.148,368,0.751,373,1.755,385,0.686,395,1.355,397,0.821,419,3.105,420,0.634,453,1.507,459,0.634,465,1.606,468,0.644,473,0.872,480,1.54,485,1.22,535,1.235,561,1.839,563,2.225,564,0.649,572,1.029,582,1.335,599,0.718,635,1.384,649,1.673,650,2.545,655,5.59,656,1.235,696,2.871,737,1.061,738,1.655,774,1.201,782,0.781,786,0.763,812,0.659,817,3.004,818,1.225,823,1.392,857,1.673,931,0.871,965,2.958,1017,1.369,1073,3.19,1074,0.871,1112,0.857,1121,0.885,1164,0.79,1172,0.926,1181,0.878,1221,1.642,1226,0.714,1327,2.306,1399,2.76,1448,1.061,1473,1.098,1486,4.119,1705,1.713,1741,2.268,1751,1.045,1874,0.966,1942,4.1,1968,1.497,2084,1.706,2087,1.029,2102,1.029,2104,1.002,2106,1.827,2139,1.689,2172,0.893,2181,1.416,2235,1.779,2294,2.085,2327,3.379,2328,0.821,2342,3.833,2361,1.551,2363,2.332,2364,2.428,2398,2.456,2406,3.406,2432,1.782,2436,0.747,2446,1.877,2447,0.772,2449,2.692,2450,2.664,2451,2.064,2453,1.935,2454,0.833,2457,1.098,2491,2.306,2497,4.325,2501,2.545,2541,1.309,2572,5.087,2616,1.029,2619,3.709,2628,1.098,2787,1.377,2800,7.276,2806,2.351,2839,6.374,3114,1.098,3118,1.098,3190,2.511,3224,1.827,3230,2.843,3231,0.936,3238,0.871,3241,0.81,3262,3.957,3263,4.621,3265,4.861,3267,2.085,3275,0.79,3279,0.821,3321,1.061,3323,1.935,3324,1.098,3414,1.002,3432,1.143,3518,1.002,3520,1.279,3521,2.085,3522,1.935,3551,0.936,3659,1.877,3677,1.17,3770,9.715,3818,1.061,3840,1.045,3848,1.029,3860,1.935,3868,1.098,3872,1.061,3898,1.061,3905,1.143,3909,4.621,3912,1.098,3914,1.143,3918,4.861,3921,1.098,3923,3.017,3924,4.119,3925,1.935,3929,1.2,3946,1.12,3977,1.279,3978,1.143,3979,1.143,3980,1.143,3981,2.085,3982,2.332,3983,2.332,3984,1.098,3985,1.279,3986,1.279,3987,1.279,3988,1.279,3989,1.279,3990,1.279,3992,2.189,3993,2.332,3995,1.143,3996,2.085,3998,1.2,3999,6.086,4000,1.279,4007,1.279,4010,1.079,4013,1.2,4015,1.2,4017,1.2,4019,1.2,4021,1.2,4023,1.2,4024,1.2,4025,3.214,4026,5.169,4027,3.214,4028,3.214,4029,5.661,4030,5.661,4031,4.325,4032,3.963,4033,3.214,4034,4.608,4035,2.332,4036,2.332,4037,2.332,4038,2.332,4039,1.279,4040,1.279,4041,4.608,4042,0.918,4043,1.279,4044,3.214,4045,1.2,4046,1.279,4047,1.279,4048,1.279,4049,3.214,4050,5.169,4051,1.279,4052,1.279,4053,2.002,4054,1.279,4055,1.279,4056,1.279,4057,1.279,4058,1.279,4059,1.279,4060,1.279,4061,1.279,4062,1.279,4063,1.279,4673,1.279,4677,7.144,4682,3.214,4687,1.2,4688,1.279,4689,1.279,4690,1.279,4691,1.279,4859,1.2,5688,3.214,5718,1.404,5719,1.404,5720,1.404,5721,1.404,5722,1.404,5723,1.404,5724,1.404,5725,1.404,5726,1.404,5727,1.404]],["component/69",[68,0.364]],["title/70-1",[0,19.276,1705,25.109,5728,53.131]],["name/70-1",[]],["text/70-1",[]],["component/70-1",[]],["title/70-2",[73,35.891,733,32.758,2352,27.532]],["name/70-2",[]],["text/70-2",[]],["component/70-2",[]],["title/70-3",[5,22.333,76,18.099,77,37.293]],["name/70-3",[]],["text/70-3",[]],["component/70-3",[]],["title/70-4",[76,18.099,83,38.355,2311,33.409]],["name/70-4",[]],["text/70-4",[]],["component/70-4",[]],["title/70-5",[28,32.112,826,50.076]],["name/70-5",[]],["text/70-5",[]],["component/70-5",[]],["title/70-6",[473,25.32,828,51.773]],["name/70-6",[]],["text/70-6",[]],["component/70-6",[]],["title/70-7",[86,49.562,2435,40.888]],["name/70-7",[]],["text/70-7",[]],["component/70-7",[]],["title/70-8",[185,23.402,559,27.756,832,42.878,2436,29.693]],["name/70-8",[]],["text/70-8",[]],["component/70-8",[]],["title/70-9",[201,23.402,834,45.439,2309,40.913,2396,42.171]],["name/70-9",[]],["text/70-9",[]],["component/70-9",[]],["title/70",[1705,29.286,5728,61.969]],["name/70",[1705,0.463,5728,0.98]],["text/70",[0,1.525,5,0.767,10,1.327,13,2.792,14,1.731,16,1.507,19,2.318,27,1.945,28,2.178,31,1.109,40,1.792,59,1.099,64,0.788,67,1.08,71,1.023,75,2.171,76,1.08,94,1.445,98,4.548,129,0.982,134,1.677,137,2.62,152,2.027,153,1.08,155,2.035,163,2.784,177,2.348,188,5.608,189,2.693,191,1.027,201,4.421,203,1,213,3.119,220,0.949,221,1.872,226,2.256,258,1.104,259,1.677,271,1.142,312,1.525,351,4.81,356,1.233,368,1.171,373,1.892,417,1.264,420,0.989,465,1.731,468,1.004,473,0.746,485,1.044,510,2.069,524,2.79,535,1.836,557,1.405,561,2.63,564,1.012,568,1.713,578,1.036,650,2.225,656,1.057,761,1.178,774,1.785,786,1.191,812,1.027,818,1.821,882,1.445,940,4.569,965,1.142,968,1.125,1143,3.08,1221,2.441,1226,1.114,1229,1.381,1251,4.801,1317,1.358,1705,2.373,1741,3.557,1753,1.543,1942,2.758,2052,1.995,2181,1.211,2196,2.014,2235,2.543,2279,1.431,2292,2.875,2309,3.699,2327,4.85,2328,2.95,2361,1.327,2393,1.525,2394,1.525,2396,6.433,2446,4.747,2449,3.982,2450,2.657,2451,2.225,2454,1.299,2491,2.486,2501,1.281,2541,3.489,2596,1.629,2689,1.459,2787,3.241,3230,6.612,3238,1.358,3241,1.264,3275,6.554,3279,3.525,3406,1.459,3493,1.713,3494,1.783,3706,1.525,3854,1.872,3984,1.713,4296,3.253,4587,1.872,5565,6.215,5679,1.995,5680,1.995,5681,1.995,5682,5.489,5715,1.995,5716,1.995,5717,1.995,5728,9.201,5729,2.19,5730,7.484,5731,2.19,5732,1.872,5733,6.027,5734,2.19,5735,2.19,5736,3.805,5737,2.19,5738,3.805,5739,2.19,5740,2.19,5741,2.19,5742,3.805,5743,3.805,5744,2.19,5745,2.19,5746,2.19,5747,3.805,5748,3.805,5749,2.19,5750,2.19,5751,2.19,5752,3.805,5753,2.19,5754,2.19,5755,2.19,5756,2.19,5757,2.19,5758,2.19,5759,2.19,5760,2.19,5761,2.19,5762,2.19,5763,3.805]],["component/70",[68,0.364]],["title/71-1",[0,19.276,1705,25.109,2342,31.165]],["name/71-1",[]],["text/71-1",[]],["component/71-1",[]],["title/71-2",[73,35.891,733,32.758,2352,27.532]],["name/71-2",[]],["text/71-2",[]],["component/71-2",[]],["title/71-3",[5,22.333,76,18.099,77,37.293]],["name/71-3",[]],["text/71-3",[]],["component/71-3",[]],["title/71-4",[76,18.099,83,38.355,2311,33.409]],["name/71-4",[]],["text/71-4",[]],["component/71-4",[]],["title/71-5",[28,32.112,826,50.076]],["name/71-5",[]],["text/71-5",[]],["component/71-5",[]],["title/71-6",[473,25.32,828,51.773]],["name/71-6",[]],["text/71-6",[]],["component/71-6",[]],["title/71-7",[86,49.562,2435,40.888]],["name/71-7",[]],["text/71-7",[]],["component/71-7",[]],["title/71",[1705,29.286,2342,36.348]],["name/71",[1705,0.463,2342,0.575]],["text/71",[0,0.924,5,1.071,8,1.402,13,2.639,14,1.392,19,3.032,27,1.564,31,1.549,34,1.446,40,2.379,50,1.247,66,1.579,67,1.508,71,1.429,74,1.701,75,1.316,76,2.353,82,1.542,88,3.692,126,2.512,134,1.348,137,2.195,146,1.602,147,1.579,151,3.091,152,2.592,153,1.508,163,1.413,180,3.324,184,1.458,188,5.175,189,2.257,190,1.452,201,3.744,213,2.688,248,1.579,252,1.962,259,2.225,298,3.514,351,1.372,376,1.556,388,1.701,417,1.765,419,3.603,420,2.281,453,2.974,465,2.298,468,1.402,473,1.041,485,2.407,524,1.691,535,2.437,561,3.363,563,1.928,564,1.413,582,3.363,598,1.743,599,3.298,650,1.789,651,2.129,656,2.437,680,1.853,696,2.018,738,1.435,786,1.663,790,1.912,812,2.369,904,2.311,931,1.897,965,1.594,1164,1.721,1226,1.556,1484,2.129,1705,1.989,1741,4.322,1842,2.242,1942,4.532,2104,2.182,2106,2.182,2181,1.691,2235,3.252,2327,4.853,2328,1.789,2342,5.5,2352,1.32,2364,2.104,2406,2.059,2446,2.687,2447,1.681,2449,2.687,2450,3.944,2451,3.773,2454,1.813,2541,5.049,2572,1.789,2742,2.129,2787,1.645,3208,6.645,3218,2.49,3219,2.49,3225,5.344,3226,5.344,3227,6.37,3228,5.344,3240,2.182,3241,2.915,3275,3.631,3279,3.773,3347,3.816,3348,3.816,3374,2.242,3376,2.242,3402,2.311,3404,2.311,3406,2.038,3413,2.242,3414,2.182,3415,3.816,3416,2.311,3417,2.49,3505,6.982,3518,2.182,3522,2.311,3706,2.129,3818,2.311,3978,2.49,3979,2.49,3980,2.49,3981,2.49,3984,3.95,3995,2.49,3996,4.112,4053,2.392,4639,2.785,4640,2.785,4641,2.785,4655,2.615,4666,2.49,4668,2.785,4669,2.785,4671,2.615,4676,2.615,5053,2.615,5558,2.615,5559,2.615,5560,2.615,5561,2.615,5562,2.615,5563,2.615,5564,2.615,5571,2.49,5689,2.615,5690,2.615,5691,2.615,5764,3.058,5765,3.058,5766,3.058,5767,4.446,5768,2.785,5769,2.785,5770,2.785,5771,3.058,5772,3.058]],["component/71",[68,0.364]],["title/72-1",[0,16.87,21,21.668,1705,21.975,2329,30.858]],["name/72-1",[]],["text/72-1",[]],["component/72-1",[]],["title/72-2",[73,41.861,355,43.207]],["name/72-2",[]],["text/72-2",[]],["component/72-2",[]],["title/72-3",[1316,41.669,1926,60.511,2439,33.579]],["name/72-3",[]],["text/72-3",[]],["component/72-3",[]],["title/72-4",[1,36.129,1929,52.958,2439,29.388,4090,50.829]],["name/72-4",[]],["text/72-4",[]],["component/72-4",[]],["title/72-5",[12,21.939,966,30.771,1932,47.082,2351,29.843,2558,29.017]],["name/72-5",[]],["text/72-5",[]],["component/72-5",[]],["title/72-6",[12,24.678,298,26.18,2558,32.638,5773,60.138]],["name/72-6",[]],["text/72-6",[]],["component/72-6",[]],["title/72-7",[77,29.017,468,22.746,995,35.4,1705,19.537,2439,26.127]],["name/72-7",[]],["text/72-7",[]],["component/72-7",[]],["title/72-8",[60,34.29,517,54.517,973,38.078]],["name/72-8",[]],["text/72-8",[]],["component/72-8",[]],["title/72-9",[479,32.638,518,47.712,802,28.669,995,39.818]],["name/72-9",[]],["text/72-9",[]],["component/72-9",[]],["title/72-10",[60,39.994,519,67.738]],["name/72-10",[]],["text/72-10",[]],["component/72-10",[]],["title/72-11",[365,32.602,670,38.355,5774,68.715]],["name/72-11",[]],["text/72-11",[]],["component/72-11",[]],["title/72-12",[339,37.548,2609,42.073,5775,68.715]],["name/72-12",[]],["text/72-12",[]],["component/72-12",[]],["title/72-13",[3,31.604,2609,36.822,4091,50.829,5776,60.138]],["name/72-13",[]],["text/72-13",[]],["component/72-13",[]],["title/72-14",[76,21.109,365,38.024]],["name/72-14",[]],["text/72-14",[]],["component/72-14",[]],["title/72-15",[13,26.086,14,29.017,1227,49.873]],["name/72-15",[]],["text/72-15",[]],["component/72-15",[]],["title/72-16",[739,33.752,2695,46.748,5777,68.715]],["name/72-16",[]],["text/72-16",[]],["component/72-16",[]],["title/72-17",[544,32.736,916,27.434,3731,35.4,4092,40.397,5778,53.465]],["name/72-17",[]],["text/72-17",[]],["component/72-17",[]],["title/72-18",[12,28.197,2486,43.395,5779,68.715]],["name/72-18",[]],["text/72-18",[]],["component/72-18",[]],["title/72-19",[12,28.197,113,29.017,5780,68.715]],["name/72-19",[]],["text/72-19",[]],["component/72-19",[]],["title/72-20",[83,38.355,738,29.913,2439,33.579]],["name/72-20",[]],["text/72-20",[]],["component/72-20",[]],["title/72-21",[826,42.934,2615,48.185,4093,51.919]],["name/72-21",[]],["text/72-21",[]],["component/72-21",[]],["title/72-22",[544,36.822,828,38.849,3731,39.818,4094,45.439]],["name/72-22",[]],["text/72-22",[]],["component/72-22",[]],["title/72-23",[12,24.678,738,26.18,829,49.128,2613,40.913]],["name/72-23",[]],["text/72-23",[]],["component/72-23",[]],["title/72-24",[127,31.282,779,38.805,831,45.188,872,29.017,3178,33.765]],["name/72-24",[]],["text/72-24",[]],["component/72-24",[]],["title/72-25",[127,31.282,779,38.805,872,29.017,2356,33.765,2539,47.082]],["name/72-25",[]],["text/72-25",[]],["component/72-25",[]],["title/72-26",[2351,38.355,2486,43.395,2540,60.511]],["name/72-26",[]],["text/72-26",[]],["component/72-26",[]],["title/72-27",[64,17.85,86,33.063,670,29.843,1705,19.537,2439,26.127]],["name/72-27",[]],["text/72-27",[]],["component/72-27",[]],["title/72-28",[88,31.435,832,48.993,2604,43.88]],["name/72-28",[]],["text/72-28",[]],["component/72-28",[]],["title/72-29",[21,28.877,834,60.556]],["name/72-29",[]],["text/72-29",[]],["component/72-29",[]],["title/72-30",[836,70.576,2282,38.58]],["name/72-30",[]],["text/72-30",[]],["component/72-30",[]],["title/72-31",[2282,33.078,3231,42.494,5781,68.715]],["name/72-31",[]],["text/72-31",[]],["component/72-31",[]],["title/72-32",[679,37.809,2282,33.078,5782,68.715]],["name/72-32",[]],["text/72-32",[]],["component/72-32",[]],["title/72-33",[679,33.09,2282,28.949,3815,42.171,5783,60.138]],["name/72-33",[]],["text/72-33",[]],["component/72-33",[]],["title/72-34",[679,33.09,2282,28.949,3794,42.171,5784,60.138]],["name/72-34",[]],["text/72-34",[]],["component/72-34",[]],["title/72-35",[535,26.931,2351,33.568,4095,45.439,5785,60.138]],["name/72-35",[]],["text/72-35",[]],["component/72-35",[]],["title/72-36",[2282,33.078,4096,46.748,5786,68.715]],["name/72-36",[]],["text/72-36",[]],["component/72-36",[]],["title/72-37",[3,36.111,4097,51.919,5787,68.715]],["name/72-37",[]],["text/72-37",[]],["component/72-37",[]],["title/72-38",[2329,35.259,3024,46.748,5788,68.715]],["name/72-38",[]],["text/72-38",[]],["component/72-38",[]],["title/72-39",[2329,35.259,3192,46.748,5789,68.715]],["name/72-39",[]],["text/72-39",[]],["component/72-39",[]],["title/72-40",[26,35.871,166,39.559,1006,29.017,2329,27.434,4098,37.492]],["name/72-40",[]],["text/72-40",[]],["component/72-40",[]],["title/72-41",[169,44.497,2329,30.858,2764,39.818,4098,42.171]],["name/72-41",[]],["text/72-41",[]],["component/72-41",[]],["title/72-42",[172,51.919,996,40.91,2587,44.389]],["name/72-42",[]],["text/72-42",[]],["component/72-42",[]],["title/72-43",[665,61.969,4099,60.556]],["name/72-43",[]],["text/72-43",[]],["component/72-43",[]],["title/72",[21,24.758,1705,25.109,2329,35.259]],["name/72",[1705,0.463,2357,0.776]],["text/72",[0,0.68,1,0.789,2,1.383,3,3.067,4,1.497,5,1.424,6,2.722,8,0.149,9,2.303,11,1.492,12,4.092,13,1.592,14,1.329,15,1.639,17,0.635,18,0.532,19,3.292,20,1.236,21,2.761,22,0.217,23,0.933,25,0.394,26,0.881,27,1.026,28,0.14,29,1.6,31,1.48,32,1.546,33,1.342,34,0.949,39,0.398,40,0.945,42,0.525,50,1.659,53,2.893,55,1.021,56,1.221,57,0.617,58,1.055,59,0.163,60,2.768,61,1.349,62,0.723,63,1.005,64,0.631,65,1.202,66,0.328,67,0.865,68,0.461,69,0.372,71,0.152,72,1.394,75,1.597,76,1.053,80,1.931,82,0.164,84,0.176,88,1.543,90,0.235,92,0.984,93,1.157,94,0.215,96,0.525,98,0.424,99,0.246,100,0.221,101,0.19,106,0.84,113,2.145,115,0.181,118,1.351,119,1.192,123,0.876,126,1.345,127,4.134,129,1.31,134,1.379,135,0.544,136,0.2,137,1.27,146,1.051,147,0.482,148,0.807,151,1.167,152,1.257,153,0.46,155,0.652,156,1.113,157,0.377,158,0.579,159,0.36,160,0.678,163,1.146,168,0.481,177,0.151,178,2.825,180,0.541,181,0.344,182,0.207,184,0.445,185,1.04,186,0.55,188,3.926,189,0.784,190,1.067,191,0.823,192,1.529,193,1.257,194,1.181,196,0.662,200,0.184,201,2.619,203,1.027,204,0.221,206,0.324,208,0.733,209,0.232,210,0.221,213,2.145,218,0.635,219,0.763,220,0.404,226,0.554,227,0.254,228,0.202,245,0.424,248,1.396,251,0.954,252,0.209,253,0.554,254,0.173,255,0.215,257,1.051,258,0.614,265,0.25,276,1.48,287,0.861,291,0.164,292,0.246,300,0.209,301,1.015,304,0.193,305,0.42,306,0.438,307,1.585,308,0.471,309,0.165,310,1.372,311,0.254,313,1.189,314,0.466,320,0.183,321,0.443,322,0.226,323,0.911,324,0.246,325,1.139,326,0.454,327,0.77,333,0.242,334,0.518,339,2.185,344,0.497,347,0.205,348,0.37,349,0.789,350,0.246,351,0.9,361,0.17,363,0.232,364,0.215,365,0.325,368,0.499,373,3.106,376,0.62,381,0.25,385,2.228,388,0.181,397,0.19,398,1.503,399,0.265,400,0.438,404,0.238,405,0.211,414,1.505,415,0.154,420,0.147,439,0.972,453,0.191,458,0.191,459,1.414,464,0.622,465,1.231,466,0.362,468,0.428,473,0.415,474,0.408,478,1.079,479,2.171,480,0.897,485,0.711,489,0.242,494,1.326,501,1.425,503,0.629,510,0.662,511,0.278,524,0.825,535,0.451,542,1.665,543,0.718,544,1.927,547,1.067,549,0.194,550,0.278,552,0.205,553,0.992,557,0.209,558,0.385,561,0.487,562,0.705,564,1.038,577,0.337,578,1.279,579,0.635,582,1.293,583,0.246,591,0.254,597,0.494,598,1.281,599,0.897,604,0.205,612,0.76,624,0.481,628,0.335,633,0.221,635,1.085,649,0.416,650,0.19,654,0.217,656,0.157,657,0.873,659,0.217,667,0.238,668,0.205,670,2.548,676,1.289,678,1.042,679,1.189,681,0.622,691,0.246,707,0.224,708,0.56,710,0.235,712,0.246,713,0.199,728,0.254,729,0.265,732,0.473,735,0.232,738,0.823,739,5.479,747,0.507,748,0.519,749,0.804,750,0.278,751,1.027,761,0.655,762,1.19,774,1.269,777,0.232,778,0.574,782,0.181,786,0.346,790,0.203,799,0.212,801,0.209,802,0.626,804,1.315,811,1.221,812,1.468,816,0.73,817,1.964,818,2.106,823,1.222,845,0.848,846,0.448,848,0.215,857,0.416,859,0.829,872,0.713,873,0.217,882,0.42,888,0.254,897,0.454,898,0.398,899,0.65,901,1.216,903,0.232,916,2.152,940,0.199,943,0.232,948,0.265,950,0.193,951,0.821,952,0.61,963,0.466,966,0.756,968,0.48,969,0.238,970,0.356,971,0.278,972,0.65,973,0.558,976,0.675,977,0.226,979,0.705,980,1.276,982,0.448,986,2.261,987,0.507,993,0.675,996,0.209,1001,1.94,1002,0.562,1004,0.265,1006,1.451,1007,3.255,1008,0.992,1009,0.869,1012,0.219,1013,2.584,1014,2.775,1015,0.466,1016,0.584,1017,1.447,1018,0.221,1022,0.254,1024,1.431,1028,1.252,1033,0.229,1043,0.265,1056,0.271,1058,0.265,1074,0.579,1096,1.136,1112,0.199,1113,0.232,1118,2.751,1119,0.278,1128,0.984,1137,1.215,1139,0.265,1140,0.544,1141,0.278,1142,0.518,1143,0.57,1148,0.984,1149,1.079,1152,0.481,1153,0.202,1154,2.899,1155,1.042,1156,0.695,1159,0.497,1164,0.987,1168,0.412,1170,0.428,1177,0.481,1179,0.705,1191,2.204,1192,1.234,1196,0.199,1204,0.25,1209,0.821,1217,0.259,1226,0.62,1227,0.254,1229,0.768,1230,0.278,1231,0.53,1234,0.229,1236,0.265,1251,0.599,1254,0.579,1255,0.229,1284,2.497,1285,0.278,1286,0.271,1291,1.604,1300,1.372,1301,0.246,1303,0.271,1304,0.278,1310,2.708,1317,0.202,1318,0.443,1327,0.796,1337,0.401,1339,0.933,1355,0.481,1356,0.723,1366,1.758,1368,0.246,1369,0.254,1373,0.404,1377,0.246,1388,0.232,1495,0.232,1631,0.161,1644,0.211,1657,0.57,1658,0.224,1659,0.73,1666,0.829,1667,1.005,1685,0.212,1704,0.713,1705,1.915,1706,0.232,1714,0.265,1725,0.717,1741,0.914,1745,0.878,1764,0.957,1785,0.635,1807,0.42,1868,0.226,1874,0.224,1879,0.412,1883,0.635,1901,0.265,1919,0.829,1923,0.226,1930,0.265,1933,0.265,1967,1.064,1969,0.205,2033,0.544,2035,0.246,2051,0.448,2138,0.226,2139,0.42,2153,0.232,2154,0.278,2163,0.907,2178,0.953,2181,0.825,2184,0.684,2203,0.408,2207,1.169,2208,0.708,2212,0.904,2215,0.265,2225,0.265,2228,0.584,2231,0.454,2235,0.614,2236,0.802,2238,0.265,2241,0.433,2242,0.254,2247,0.219,2256,0.497,2264,0.259,2267,0.497,2282,3.901,2284,0.798,2292,0.481,2315,0.254,2327,0.177,2328,0.19,2329,4.938,2342,0.311,2343,0.221,2345,0.622,2346,1.399,2349,0.684,2351,3.883,2352,0.971,2354,3.023,2355,0.953,2356,2.883,2361,0.738,2379,0.211,2380,0.642,2381,0.919,2383,0.994,2385,0.454,2388,0.265,2397,0.265,2410,0.235,2411,0.278,2418,0.202,2433,0.684,2434,1.431,2436,0.173,2438,0.635,2439,3.049,2440,0.254,2449,0.338,2450,0.171,2472,0.278,2483,0.53,2486,4.021,2491,0.212,2498,0.278,2501,0.19,2507,0.428,2529,0.775,2530,0.829,2541,0.166,2543,0.265,2556,0.226,2558,3.523,2560,1.125,2562,1.287,2572,1.708,2587,0.443,2588,0.226,2593,0.246,2596,1.11,2603,1.875,2604,1.027,2605,1.236,2606,1.699,2607,0.254,2608,1.428,2609,2.449,2610,0.705,2611,0.481,2613,2.142,2615,4.284,2627,2.034,2645,1.326,2647,0.265,2661,0.254,2666,0.296,2684,0.254,2686,0.199,2689,0.217,2691,0.466,2693,1.127,2694,0.246,2695,3.455,2697,0.265,2699,0.518,2700,0.265,2701,0.226,2709,1.127,2716,0.278,2722,0.278,2737,0.265,2740,0.229,2749,0.246,2754,0.278,2761,0.246,2763,0.518,2764,1.064,2767,0.705,2769,0.265,2771,0.635,2772,0.454,2773,0.394,2783,0.254,2787,0.342,2817,0.265,2819,0.622,2822,0.212,2863,0.992,2866,0.443,2867,0.265,2872,0.232,2925,0.466,2937,0.254,2949,0.265,3009,0.265,3010,0.265,3016,0.265,3020,0.25,3024,0.893,3039,0.224,3115,0.242,3143,0.229,3178,2.13,3179,0.265,3180,2.869,3181,0.265,3182,0.265,3183,2.116,3184,2.044,3187,0.265,3190,2.142,3191,3.169,3192,2.721,3193,0.265,3194,0.497,3195,0.265,3196,1.19,3198,2.448,3199,0.448,3200,0.246,3201,2.605,3202,0.265,3206,0.254,3207,0.232,3230,0.212,3231,2.594,3422,1.699,3455,0.265,3491,0.254,3526,0.25,3529,0.238,3538,0.265,3596,0.265,3704,0.992,3713,0.265,3717,0.953,3718,0.265,3730,0.259,3731,0.232,3732,0.518,3733,0.265,3758,0.518,3761,0.518,3762,0.518,3765,0.265,3780,0.265,3781,0.518,3783,0.518,3784,0.265,3785,0.265,3786,0.518,3787,0.265,3788,0.992,3789,0.265,3791,0.265,3792,0.265,3793,0.265,3794,1.326,3795,0.265,3796,0.518,3797,0.518,3799,0.518,3801,0.265,3803,0.265,3805,0.265,3806,0.76,3807,0.518,3808,0.265,3809,0.265,3810,0.265,3811,0.76,3812,0.265,3813,0.992,3814,0.518,3815,0.481,3816,0.265,3817,0.265,3833,0.254,3974,0.259,4042,0.61,4078,0.953,4079,0.254,4083,0.518,4088,0.278,4092,1.215,4093,1.215,4094,0.518,4095,0.518,4096,2.294,4097,0.76,4098,0.246,4099,1.633,4100,0.296,4101,1.5,4102,0.296,4103,0.579,4104,0.85,4105,0.579,4106,0.296,4107,1.313,4108,0.296,4109,1.766,4110,3.033,4111,0.85,4112,0.85,4113,0.296,4114,0.296,4115,0.278,4116,0.296,4117,0.296,4118,0.296,4119,0.296,4120,0.544,4121,0.798,4122,0.296,4123,0.265,4124,0.296,4125,0.296,4126,0.296,4127,0.278,4128,0.296,4129,0.579,4130,0.579,4131,0.579,4132,0.85,4133,1.715,4134,0.579,4135,0.579,4136,0.705,4137,0.296,4138,0.296,4139,1.598,4140,0.296,4141,2.26,4142,0.296,4143,0.85,4144,0.296,4145,0.296,4146,0.296,4147,0.296,4148,0.296,4149,0.579,4151,0.85,4152,0.579,4153,0.85,4154,0.296,4155,1.598,4156,0.296,4157,0.296,4158,0.296,4159,0.296,4160,0.296,4161,0.518,4162,0.296,4163,0.278,4164,0.296,4165,0.296,4166,0.278,4167,0.296,4168,1.359,4169,0.85,4170,0.296,4171,0.296,4172,0.85,4173,0.579,4174,0.579,4175,0.579,4176,0.296,4177,0.579,4178,1.598,4179,0.85,4180,0.296,4181,0.296,4182,0.579,4183,0.296,4184,0.579,4185,0.579,4186,0.296,4187,0.579,4188,0.265,4189,0.296,4190,0.296,4191,0.278,4192,0.296,4195,0.296,4196,0.286,4198,0.822,4201,0.286,4204,0.296,4213,0.265,4214,0.85,4215,1.359,4216,1.11,4217,0.296,4218,0.85,4219,0.296,4220,0.296,4221,0.992,4222,0.296,4223,0.296,4224,0.296,4225,0.296,4226,0.296,4227,0.296,4228,0.296,4229,0.296,4230,0.296,4231,0.296,4232,0.296,4233,0.296,4234,0.296,4235,0.85,4236,0.296,4237,0.296,4238,0.296,4239,0.296,4240,0.296,4241,0.296,4242,0.296,4243,0.296,4244,0.296,4245,0.296,4246,0.296,4247,0.286,4248,0.296,4249,1.359,4250,0.296,4251,0.296,4252,0.296,4253,0.296,4254,0.296,4255,0.296,4256,0.296,4257,0.296,4258,0.296,4259,0.296,4260,0.296,4261,0.296,4262,0.296,4263,0.296,4264,0.296,4265,0.544,4266,0.296,4267,0.296,4268,0.296,4269,0.296,4270,0.296,4271,0.296,4272,0.296,4273,0.296,4274,0.278,4275,0.76,4276,0.296,4277,0.296,4278,0.296,4279,0.296,4280,0.544,4281,0.296,4282,0.296,4283,1.544,4284,0.286,4285,0.296,4286,1.243,4287,0.544,4288,1.11,4289,1.11,4290,0.296,4291,0.296,4292,0.579,4293,0.579,4294,0.296,4295,0.296,4296,0.278,4297,0.579,4298,0.296,4299,0.296,4300,0.579,4301,0.296,4302,0.53,4303,0.296,4304,0.296,4305,0.296,4306,0.296,4307,0.278,4318,0.296,4319,0.296,4320,1.11,4321,0.296,4322,0.579,4323,0.579,4324,0.296,4325,0.286,4326,0.296,4327,0.579,4328,0.579,4329,0.296,4330,0.296,4331,0.265,4332,0.296,4333,0.296,4334,0.544,4335,0.296,4336,0.85,4337,0.296,4338,0.296,4339,0.296,4340,0.296,4341,0.296,4342,0.296,4343,0.296,4344,0.296,4345,0.296,4346,0.296,4347,0.296,4348,0.296,4349,0.296,4350,0.296,4351,0.296,4352,0.296,4353,0.296,4354,0.296,4355,0.296,4356,0.296,4357,0.296,4358,0.296,4359,0.296,4360,0.579,4361,0.296,4372,0.296,4373,0.296,4374,0.296,4375,0.296,4376,0.296,4377,0.296,4378,0.296,4379,0.296,4380,0.296,4381,0.296,4382,0.296,4383,0.296,4384,0.296,4385,0.296,4386,0.296,4387,0.296,4388,0.296,4389,0.296,4390,0.296,4391,0.296,4392,0.296,4393,0.296,4394,0.296,4396,0.296,4398,0.296,4401,0.296,4403,0.296,4404,0.296,4405,0.296,4406,0.278,4407,0.296,4408,0.296,4409,0.265,4410,0.286,4412,0.278,4413,0.296,4414,0.296,4415,0.296,4416,0.296,4417,0.296,4418,0.579,4419,0.544,4420,1.359,4421,0.296,4422,0.296,4423,0.296,4424,0.296,4425,0.296,4426,0.296,4427,0.296,4428,0.296,4429,0.579,4430,0.544,4431,0.296,4432,0.296,4433,0.296,4434,0.278,4435,0.296,4436,0.296,4437,0.296,4438,0.296,4439,0.579,4440,0.296,4441,0.296,4442,0.296,4443,0.246,4444,0.296,4445,0.296,4446,0.518,4447,0.296,4448,0.296,4449,0.296,4450,0.85,4451,0.278,4452,0.296,4453,0.296,4454,1.428,4455,0.278,4456,0.85,4457,0.296,4458,0.296,4459,0.286,4460,0.579,4461,0.271,4462,0.296,4463,0.296,4464,0.296,4465,0.296,4466,0.579,4467,0.296,4468,0.296,4469,0.296,4470,0.296,4471,0.296,4472,0.579,4473,0.296,4474,0.296,4475,0.296,4476,0.296,4477,0.296,4543,0.507,5414,0.518,5471,1.359,5499,0.278,5612,0.296,5613,0.296,5790,0.636,5791,0.325,5792,0.325,5793,0.325,5794,0.325,5795,0.325,5796,0.325,5797,0.325,5798,0.296,5799,0.325,5800,0.309,5801,0.325,5802,0.934,5803,0.325,5804,0.286,5805,0.56,5806,0.325,5807,0.325,5808,0.325,5809,0.325,5810,0.325,5811,0.325,5812,0.325,5813,0.325,5814,0.325,5815,0.325,5816,0.325,5817,0.325,5818,0.325,5819,0.325]],["component/72",[68,0.364]],["title/73-1",[0,19.276,1705,25.109,3211,39.548]],["name/73-1",[]],["text/73-1",[]],["component/73-1",[]],["title/73-2",[73,35.891,733,32.758,2352,27.532]],["name/73-2",[]],["text/73-2",[]],["component/73-2",[]],["title/73-3",[5,22.333,76,18.099,77,37.293]],["name/73-3",[]],["text/73-3",[]],["component/73-3",[]],["title/73-4",[76,18.099,83,38.355,2311,33.409]],["name/73-4",[]],["text/73-4",[]],["component/73-4",[]],["title/73-5",[28,32.112,826,50.076]],["name/73-5",[]],["text/73-5",[]],["component/73-5",[]],["title/73-6",[473,25.32,828,51.773]],["name/73-6",[]],["text/73-6",[]],["component/73-6",[]],["title/73-7",[86,49.562,2435,40.888]],["name/73-7",[]],["text/73-7",[]],["component/73-7",[]],["title/73-8",[185,23.402,559,27.756,832,42.878,2436,29.693]],["name/73-8",[]],["text/73-8",[]],["component/73-8",[]],["title/73-9",[19,21.659,473,21.709,834,51.919]],["name/73-9",[]],["text/73-9",[]],["component/73-9",[]],["title/73-10",[2686,34.074,3208,33.568,3211,34.612,5820,60.138]],["name/73-10",[]],["text/73-10",[]],["component/73-10",[]],["title/73",[1705,29.286,3211,46.127]],["name/73",[1705,0.463,3211,0.73]],["text/73",[0,2.275,3,3.227,4,1.094,5,2.502,8,0.648,9,2.377,12,1.933,13,3.568,14,2.313,15,0.856,18,1.467,19,2.963,20,0.777,21,1.377,22,1.716,27,0.722,29,1.705,31,0.716,32,1.363,33,0.844,40,1.67,50,1.05,66,1.329,67,0.696,71,1.657,72,1.147,74,0.786,75,1.526,76,1.907,82,0.712,88,2.809,113,0.643,115,0.786,121,0.752,126,1.28,129,1.591,134,0.623,137,2.477,146,0.74,147,0.729,151,2.125,152,1.425,153,0.696,156,1.275,158,0.876,163,1.189,179,0.7,180,1.94,181,2.364,184,1.227,185,0.592,188,5.325,189,1.954,190,0.671,193,0.716,194,0.832,201,3.155,206,0.719,211,0.693,213,1.822,220,0.612,248,0.729,252,0.906,254,1.37,258,0.712,259,2.511,276,2.214,280,0.942,298,2.051,307,1.796,308,0.712,327,0.729,351,0.634,354,1.868,356,0.795,364,1.699,381,1.978,385,0.69,388,2.432,419,1.837,420,0.638,432,1.363,435,0.876,452,0.876,453,0.832,465,1.172,468,3.275,473,0.877,474,2.275,485,1.227,510,0.768,524,0.781,531,0.972,535,1.242,549,0.844,561,2.279,563,0.891,564,2.347,577,0.748,578,1.217,581,1.946,582,1.849,599,1.316,650,0.826,651,0.984,656,1.242,680,0.856,696,0.932,705,0.984,713,0.863,731,0.984,738,0.663,739,0.748,749,0.932,770,1.877,774,2.051,786,0.768,801,0.906,812,1.208,817,0.748,848,0.932,871,1.036,904,1.068,931,0.876,940,0.863,965,0.737,973,1.537,1013,1.036,1014,2.236,1015,1.036,1017,0.756,1058,1.15,1139,2.096,1149,2.564,1153,0.876,1164,0.795,1171,1.946,1178,1.068,1181,0.883,1196,0.863,1226,0.719,1306,1.051,1316,1.682,1356,1.527,1484,0.984,1568,1.887,1657,1.572,1663,0.942,1667,0.951,1705,1.722,1730,1.068,1741,2.649,1744,5.596,1842,1.036,1856,1.068,1917,0.923,1942,2.778,2032,2.096,2084,0.942,2104,1.008,2106,1.008,2158,1.105,2172,1.637,2181,0.781,2196,1.363,2221,0.984,2235,1.298,2252,0.795,2279,2.857,2281,0.815,2311,0.74,2327,3.098,2328,0.826,2342,0.69,2343,0.961,2345,0.942,2352,0.61,2364,0.972,2374,1.051,2393,1.792,2394,1.792,2406,0.951,2418,0.876,2446,1.37,2447,1.415,2449,1.37,2450,2.302,2451,2.074,2454,0.838,2501,0.826,2537,1.008,2541,4.327,2564,0.961,2618,1.105,2686,3.103,2689,0.942,2693,1.068,2742,0.984,2787,3.064,2789,1.036,2790,1.068,2806,0.942,2807,1.752,2810,2.914,2822,0.923,2840,1.068,2866,0.984,2925,4.574,2928,1.068,3017,2.096,3041,5.614,3103,1.15,3110,2.888,3190,0.815,3199,1.814,3208,5.246,3211,5.073,3220,1.15,3225,3.626,3226,3.12,3227,4.066,3228,3.626,3240,2.531,3241,3.289,3275,2.461,3279,3.649,3318,1.208,3347,2.68,3348,2.68,3374,1.036,3376,1.036,3402,1.068,3404,1.068,3406,0.942,3413,1.036,3414,1.008,3415,1.946,3416,1.068,3419,1.208,3421,1.208,3422,1.946,3505,4.457,3518,1.008,3522,1.068,3643,1.15,3818,1.068,3995,1.15,3996,2.096,4053,1.105,4067,1.105,4096,1.887,4188,1.15,4280,2.201,4575,1.208,4616,2.201,4620,1.15,4623,1.15,4624,1.15,4625,1.15,4629,1.15,4631,1.208,4666,1.15,4671,1.208,4676,1.208,4704,2.014,4705,1.287,4706,1.287,4707,1.287,4709,1.287,4711,1.287,4712,1.287,4713,2.345,4716,1.287,4717,3.23,4718,1.244,4720,1.287,4722,1.287,4750,1.15,4752,1.15,4753,1.15,4754,1.15,4780,2.345,4781,1.287,5053,1.208,5214,2.345,5266,1.287,5267,1.287,5268,1.287,5269,2.345,5274,1.177,5414,2.096,5439,1.287,5486,2.053,5515,1.287,5518,1.287,5558,1.208,5559,1.208,5560,1.208,5561,1.208,5562,1.208,5563,1.208,5564,1.208,5566,1.287,5567,1.208,5568,1.287,5569,1.208,5570,1.208,5571,2.888,5685,1.287,5686,1.287,5689,1.208,5690,1.208,5691,1.208,5768,1.287,5769,1.287,5770,1.287,5804,2.266,5805,1.244,5821,1.413,5822,1.413,5823,2.345,5824,1.413,5825,1.413,5826,1.413,5827,6.24,5828,1.413,5829,1.413,5830,1.413,5831,1.413,5832,1.413,5833,1.413,5834,1.413,5835,1.413,5836,2.575,5837,1.413,5838,1.413,5839,1.413,5840,1.413,5841,1.413,5842,1.413,5843,1.413,5844,1.413,5845,1.413,5846,1.413,5847,1.413,5848,1.413,5849,1.413,5850,1.413,5851,1.413,5852,1.287,5853,1.287,5854,1.287,5855,1.287,5856,1.287,5857,1.287,5858,1.287,5859,1.413,5860,1.413,5861,1.413,5862,1.413,5863,1.413,5864,1.413,5865,2.575,5866,2.575,5867,1.413,5868,1.413,5869,1.413,5870,1.413,5871,1.413,5872,1.413,5873,1.413,5874,1.413,5875,1.413,5876,1.413,5877,1.413,5878,1.413,5879,1.208]],["component/73",[68,0.364]],["title/74-1",[0,19.276,1705,25.109,1744,37.293]],["name/74-1",[]],["text/74-1",[]],["component/74-1",[]],["title/74-2",[73,35.891,733,32.758,2352,27.532]],["name/74-2",[]],["text/74-2",[]],["component/74-2",[]],["title/74-3",[5,22.333,76,18.099,77,37.293]],["name/74-3",[]],["text/74-3",[]],["component/74-3",[]],["title/74-4",[76,18.099,83,38.355,2311,33.409]],["name/74-4",[]],["text/74-4",[]],["component/74-4",[]],["title/74-5",[28,32.112,826,50.076]],["name/74-5",[]],["text/74-5",[]],["component/74-5",[]],["title/74-6",[473,25.32,828,51.773]],["name/74-6",[]],["text/74-6",[]],["component/74-6",[]],["title/74-7",[86,49.562,2435,40.888]],["name/74-7",[]],["text/74-7",[]],["component/74-7",[]],["title/74-8",[6,26.973,832,38.12,1232,31.831,1744,29.017,5880,45.188]],["name/74-8",[]],["text/74-8",[]],["component/74-8",[]],["title/74",[1705,29.286,1744,43.496]],["name/74",[1705,0.463,1744,0.688]],["text/74",[0,3.003,4,1.257,5,1.411,6,2.672,8,0.756,9,0.896,13,3.47,14,0.75,19,2.329,23,0.877,26,1.192,40,0.776,53,0.823,64,1.449,66,0.851,67,0.813,71,2.297,75,0.709,76,0.468,88,2.792,94,1.953,98,1.098,126,0.82,129,0.739,131,1.134,134,1.304,136,1.821,137,2.137,151,1.104,152,0.662,155,1.583,156,0.816,163,1.861,184,0.786,185,1.241,188,5.422,189,2.531,192,1.446,194,0.97,201,3.999,203,1.84,211,0.809,213,2.048,219,2.059,220,0.714,254,3.648,256,2.734,258,1.492,259,1.775,271,2.1,276,0.835,307,3.193,308,1.492,309,0.835,320,0.928,325,1.499,327,0.851,347,1.039,351,3.075,376,0.839,385,0.806,395,1.567,405,2.608,414,0.917,417,1.708,420,0.745,426,1.501,432,3.337,435,1.836,449,1.342,452,1.836,453,0.97,465,0.75,473,0.561,480,0.991,481,1.208,485,0.786,524,1.637,535,0.795,542,0.939,559,0.82,561,0.859,564,0.761,565,1.972,572,1.208,577,0.872,578,0.779,589,2.53,599,0.843,606,2.215,645,1.342,651,1.147,681,1.098,710,1.192,770,0.872,774,1.388,778,1.014,801,1.057,804,0.964,812,0.773,817,0.872,818,2.711,823,0.896,845,1.147,857,1.934,943,1.176,968,1.52,977,1.147,980,1.048,1016,1.031,1017,3.372,1026,3.048,1027,2.772,1028,4.041,1082,2.696,1096,1.916,1112,1.807,1161,1.077,1168,1.916,1191,1.851,1204,2.274,1206,1.409,1232,4.044,1298,1.077,1335,1.134,1492,1.501,1493,3.932,1644,1.067,1666,1.122,1673,1.289,1705,1.935,1741,1.543,1744,6.629,1749,0.984,1763,2.202,1917,1.934,1942,4.452,1968,0.964,2196,0.872,2235,2.031,2292,1.245,2327,2.19,2343,3.345,2345,1.098,2352,0.712,2385,2.874,2393,1.147,2394,1.147,2418,1.836,2432,1.147,2446,2.615,2447,2.215,2449,1.575,2450,4.466,2451,0.964,2507,1.11,2541,3.753,2556,2.06,2562,5.636,2616,2.953,2629,2.41,2696,1.245,2803,1.245,2805,1.176,2822,1.077,2834,1.409,2841,1.342,3143,1.161,3190,1.708,3224,2.112,3230,3.212,3238,1.022,3241,1.708,3275,0.928,3279,1.731,3570,1.342,3645,1.409,3692,1.501,3695,1.501,3713,3.28,3763,1.409,3820,1.409,3821,1.409,3848,1.208,4042,1.077,4492,2.696,4493,2.696,4591,2.696,4620,1.342,4623,1.342,4624,1.342,4625,1.342,4629,1.342,4954,1.501,4958,3.669,5090,5.741,5093,2.696,5104,1.501,5105,1.501,5136,1.501,5138,2.53,5293,2.696,5327,1.409,5337,1.501,5354,3.212,5385,2.53,5567,6.64,5634,1.501,5640,1.501,5651,1.501,5657,1.501,5659,1.501,5662,1.501,5698,1.501,5699,1.501,5700,1.501,5701,1.501,5702,1.501,5703,1.501,5704,1.501,5705,1.501,5706,1.501,5707,1.501,5708,1.501,5709,1.501,5711,1.501,5732,1.409,5880,4.477,5881,2.96,5882,4.028,5883,1.648,5884,1.648,5885,2.96,5886,2.96,5887,2.96,5888,1.648,5889,1.648,5890,1.648,5891,1.648,5892,1.648,5893,1.648,5894,1.648,5895,1.648,5896,1.648,5897,2.96,5898,1.648,5899,1.648,5900,1.648,5901,4.028,5902,1.648,5903,1.648,5904,1.648,5905,1.648,5906,1.648,5907,1.648,5908,1.648,5909,1.648,5910,2.96,5911,1.648,5912,1.648,5913,2.96,5914,1.648,5915,1.648,5916,1.648,5917,1.648,5918,1.648,5919,1.648,5920,1.648,5921,4.915,5922,1.648,5923,1.648,5924,1.648,5925,1.648,5926,1.648,5927,4.028,5928,1.648,5929,1.648,5930,2.96,5931,1.648,5932,2.96,5933,1.648,5934,1.648,5935,1.648,5936,1.648,5937,6.304,5938,1.648,5939,1.648,5940,1.648,5941,1.648,5942,3.822,5943,1.648,5944,1.648,5945,2.96,5946,1.648,5947,1.648,5948,1.648,5949,1.648,5950,1.648,5951,1.648,5952,1.648]],["component/74",[68,0.364]],["title/75-1",[0,19.276,1705,25.109,5324,41.669]],["name/75-1",[]],["text/75-1",[]],["component/75-1",[]],["title/75-2",[73,35.891,733,32.758,2352,27.532]],["name/75-2",[]],["text/75-2",[]],["component/75-2",[]],["title/75-3",[5,22.333,76,18.099,77,37.293]],["name/75-3",[]],["text/75-3",[]],["component/75-3",[]],["title/75-4",[76,18.099,83,38.355,2311,33.409]],["name/75-4",[]],["text/75-4",[]],["component/75-4",[]],["title/75-5",[28,32.112,826,50.076]],["name/75-5",[]],["text/75-5",[]],["component/75-5",[]],["title/75-6",[86,49.562,473,25.32]],["name/75-6",[]],["text/75-6",[]],["component/75-6",[]],["title/75-7",[832,57.142,2435,40.888]],["name/75-7",[]],["text/75-7",[]],["component/75-7",[]],["title/75-8",[185,23.402,559,27.756,2436,29.693,5953,60.138]],["name/75-8",[]],["text/75-8",[]],["component/75-8",[]],["title/75-9",[98,37.19,387,37.979,5324,36.468,5954,60.138]],["name/75-9",[]],["text/75-9",[]],["component/75-9",[]],["title/75-10",[19,18.956,1074,34.612,5324,36.468,5955,60.138]],["name/75-10",[]],["text/75-10",[]],["component/75-10",[]],["title/75-11",[385,27.275,556,39.32,5324,36.468,5956,60.138]],["name/75-11",[]],["text/75-11",[]],["component/75-11",[]],["title/75-12",[385,27.275,5324,36.468,5325,45.439,5957,60.138]],["name/75-12",[]],["text/75-12",[]],["component/75-12",[]],["title/75",[1705,29.286,5324,48.601]],["name/75",[1705,0.463,5326,0.958]],["text/75",[0,2.845,3,3.135,4,0.677,5,1.373,6,0.867,8,0.731,12,0.705,13,2.947,14,0.725,19,1.332,20,2.155,21,2.61,24,0.827,31,0.807,33,2.341,40,2.607,62,0.773,64,0.574,75,0.686,76,1.571,80,0.757,98,1.062,102,0.857,119,1.266,121,2.086,127,1.811,134,1.727,137,2.682,160,2.18,180,2.127,184,1.369,188,5.136,191,1.348,192,0.779,193,1.455,196,0.867,201,2.588,203,0.728,206,0.811,213,1.634,220,0.691,234,1.205,258,4.038,271,1.497,272,1.205,287,3.561,298,0.748,320,0.897,325,1.455,336,3.097,361,0.831,373,0.793,385,3.016,397,0.932,417,2.262,420,1.771,453,0.939,459,0.72,465,2.808,466,1.637,468,1.317,473,0.543,481,1.169,485,0.76,508,1.062,510,3.009,535,2.671,556,1.123,559,0.793,561,2.044,564,1.327,581,2.962,590,2.962,635,1.553,655,2.393,656,0.769,680,0.966,702,1.073,731,2.729,738,0.748,739,2.075,748,0.887,758,1.363,770,0.844,781,2.171,786,0.867,801,4.312,804,2.804,812,0.748,818,4.395,854,2.106,855,1.005,857,1.877,882,1.052,901,0.966,940,0.973,949,1.247,965,0.831,973,2.341,1014,2.472,1017,2.961,1027,1.097,1034,1.138,1074,0.989,1085,1.363,1112,0.973,1118,3.461,1121,2.472,1168,1.032,1171,1.205,1172,4.071,1226,0.811,1251,1.023,1269,1.052,1274,1.097,1302,2.339,1336,2.797,1356,0.945,1399,1.247,1416,3.352,1442,2.668,1494,1.363,1568,2.874,1663,1.062,1705,2.18,1741,2.499,1856,2.962,1942,1.57,1968,0.932,1969,1.005,2177,1.363,2208,0.926,2221,2.729,2235,1.448,2247,1.073,2281,3.561,2311,2.054,2327,3.355,2343,2.668,2351,1.728,2352,0.688,2374,2.916,2415,3.066,2446,1.528,2447,0.877,2449,1.528,2450,2.064,2451,1.68,2454,0.945,2501,2.293,2530,1.955,2537,2.797,2609,1.052,2689,2.612,2749,1.205,2787,4.103,2790,2.962,2791,3.192,2810,4.112,2877,1.169,3041,2.797,3122,1.247,3190,0.92,3238,0.989,3406,1.062,3456,1.153,3551,5.338,3582,1.205,3721,2.339,3840,1.186,3848,1.169,3860,1.205,3908,2.137,4042,1.042,4454,3.192,4750,3.192,4752,3.192,4753,3.192,4754,3.192,4908,2.339,5324,8.391,5325,3.192,5326,3.904,5327,4.099,5328,1.452,5329,1.452,5330,2.616,5331,1.452,5332,2.616,5333,2.616,5334,1.452,5335,1.452,5336,3.57,5339,7.605,5340,1.452,5341,1.452,5342,1.452,5343,1.452,5344,1.452,5345,1.452,5346,1.452,5347,2.616,5348,1.452,5349,1.452,5350,1.363,5351,1.452,5352,1.452,5353,1.452,5354,2.29,5355,1.452,5356,2.616,5357,1.452,5358,1.452,5359,2.616,5360,1.452,5361,1.452,5362,1.452,5366,1.452,5368,1.452,5374,6.95,5376,2.616,5377,2.616,5378,4.367,5379,2.616,5380,2.616,5381,2.616,5382,2.616,5383,2.616,5384,2.616,5385,2.456,5386,1.452,5388,1.363,5389,1.452,5395,1.452,5397,1.452,5398,1.452,5399,1.452,5401,1.452,5486,3.126,5823,3.57,5852,3.57,5853,3.57,5854,3.57,5855,3.57,5856,3.57,5857,3.57,5858,3.57,5879,6.848,5958,2.873,5959,1.594,5960,2.873,5961,2.873,5962,7.631,5963,7.631,5964,1.594,5965,1.594]],["component/75",[68,0.364]],["title/76-1",[0,26.968]],["name/76-1",[]],["text/76-1",[]],["component/76-1",[]],["title/76-2",[25,25.183,29,19.513,32,21.492,33,24.247,42,22.854,73,22.854,5966,30.682]],["name/76-2",[]],["text/76-2",[]],["component/76-2",[]],["title/76-3",[25,25.183,29,19.513,31,20.565,32,21.492,33,24.247,77,23.747,5966,30.682]],["name/76-3",[]],["text/76-3",[]],["component/76-3",[]],["title/76-4",[25,25.183,29,19.513,31,20.565,32,21.492,52,33.06,83,24.423,5966,30.682]],["name/76-4",[]],["text/76-4",[]],["component/76-4",[]],["title/76",[]],["name/76",[]],["text/76",[25,5.625,28,1.845,29,4.358,30,3.892,33,2.552,34,3.813,35,3.892,41,3.892,43,3.892,45,3.892,51,3.892,52,3.48,59,2.145,61,2.323,68,2.381,188,5.778,253,2.534,352,5.32,782,4.485,1162,3.892,2228,2.672,2382,3.762,5967,4.274,5968,8.064,5969,4.274,5970,4.274,5971,4.274,5972,4.274,5973,4.055,5974,4.274,5975,4.274,5976,4.274,5977,4.274,5978,4.274,5979,4.274,5980,4.274,5981,4.274,5982,4.274,5983,4.274,5984,4.274,5985,4.274,5986,4.274,5987,4.274,5988,4.274,5989,4.274,5990,4.274,5991,4.274,5992,4.274,5993,4.274,5994,4.274,5995,4.274,5996,4.274,5997,4.274,5998,4.274,5999,4.274,6000,4.274,6001,4.274,6002,4.274,6003,4.274]],["component/76",[68,0.364]],["title/77-1",[0,16.87,159,31.604,1705,21.975,2588,38.849]],["name/77-1",[]],["text/77-1",[]],["component/77-1",[]],["title/77-2",[6,34.666,82,32.148,151,23.776]],["name/77-2",[]],["text/77-2",[]],["component/77-2",[]],["title/77-3",[152,25.623,159,36.111,2196,33.752]],["name/77-3",[]],["text/77-3",[]],["component/77-3",[]],["title/77-4",[1635,34.339,2196,29.539,2393,38.849,2394,38.849]],["name/77-4",[]],["text/77-4",[]],["component/77-4",[]],["title/77-5",[29,26.82,50,22.761,159,31.604,189,24.94]],["name/77-5",[]],["text/77-5",[]],["component/77-5",[]],["title/77",[1705,35.129]],["name/77",[1705,0.838]],["text/77",[0,1.096,4,1.54,5,1.27,6,3.154,13,2.373,14,1.65,19,3.283,28,1.566,29,5.066,39,2.268,40,2.732,49,2.525,50,3.379,55,2.952,59,1.82,64,1.305,66,2.995,69,2.121,116,2.659,126,2.885,129,4.334,146,1.9,153,1.788,156,2.872,177,4.218,179,1.796,182,2.306,184,1.729,185,1.521,188,4.287,189,3.703,193,1.837,194,3.416,220,1.571,251,1.972,253,2.15,254,1.93,258,1.828,304,2.15,321,2.525,365,1.854,374,2.741,385,1.772,388,2.017,415,3.428,465,2.64,468,1.663,486,3.722,499,3.948,547,4.408,563,2.287,577,1.92,582,3.024,599,2.966,633,2.468,656,1.75,668,2.287,676,1.729,733,1.863,739,1.92,761,3.899,774,2.721,970,2.029,1071,2.741,1153,2.249,1156,2.698,1161,2.37,1209,2.442,1251,3.722,1252,2.468,1291,2.588,1339,2.268,1373,2.306,1393,3.948,1493,3.327,1704,3.393,1705,3.996,1709,2.249,1744,2.121,1923,2.525,2041,6.199,2094,4.384,2186,2.417,2196,3.071,2203,2.327,2297,2.953,2309,4.253,2325,3.101,2342,1.772,2349,2.659,2354,4.139,2355,2.837,2379,2.348,2393,5.047,2394,4.038,2572,2.121,2588,6.308,2591,3.101,2605,2.555,2606,2.741,2619,2.659,2661,5.671,2694,2.741,2785,2.698,2787,1.95,2803,5.479,2819,2.417,3190,5.23,3245,3.101,3908,2.698,4070,3.101,4434,3.101,4535,5.284,4692,2.837,4821,3.022,5087,2.837,5138,3.101,5350,3.101,5406,3.303,5407,5.284,5408,5.284,5410,3.303,5411,3.101,5412,3.101,5413,3.303,5414,2.953,5415,5.284,5416,5.284,5425,5.284,5445,5.284,5486,2.892,6004,9.061,6005,3.627,6006,3.627,6007,5.801,6008,5.801,6009,5.801,6010,6.88,6011,3.627,6012,3.627,6013,3.627,6014,3.627,6015,3.627,6016,3.627,6017,3.627,6018,3.627,6019,3.627,6020,3.627,6021,3.627,6022,3.627,6023,3.627,6024,3.627]],["component/77",[68,0.364]],["title/78-1",[0,22.482,1493,42.649]],["name/78-1",[]],["text/78-1",[]],["component/78-1",[]],["title/78",[]],["name/78",[1493,1.221]],["text/78",[4,2.176,5,3.153,18,2.92,20,2.817,21,1.989,59,2.571,64,2.723,126,2.548,180,2.274,189,2.29,213,2.135,298,2.403,459,2.314,535,2.472,1251,8.778,1373,3.258,1493,4.341,1496,1.794,1733,4.007,2186,3.414,2205,5.921,2297,4.172,2325,4.38,2326,4.666,2427,4.38,6025,5.124,6026,5.124,6027,13.003,6028,7.57,6029,5.124,6030,9.945,6031,5.124,6032,5.124,6033,7.57,6034,5.124,6035,5.124,6036,5.124,6037,5.124,6038,9.003,6039,5.124,6040,5.124,6041,5.124,6042,5.124,6043,9.945,6044,5.124,6045,7.57,6046,5.124,6047,5.124,6048,7.57,6049,5.124,6050,4.666,6051,5.124,6052,5.124,6053,5.124,6054,5.124,6055,9.945,6056,5.124,6057,11.794,6058,5.124,6059,5.124,6060,5.124,6061,5.124,6062,10.61,6063,5.124,6064,5.124,6065,5.124,6066,5.124,6067,5.124]],["component/78",[68,0.364]],["title/79-1",[0,16.87,12,24.678,661,37.19,2779,42.171]],["name/79-1",[]],["text/79-1",[]],["component/79-1",[]],["title/79-2",[28,27.532,73,35.891,219,32.602]],["name/79-2",[]],["text/79-2",[]],["component/79-2",[]],["title/79-3",[12,28.197,77,37.293,661,42.494]],["name/79-3",[]],["text/79-3",[]],["component/79-3",[]],["title/79-4",[75,19.218,134,19.68,348,25.944,517,38.181,2439,23.517,2686,27.267]],["name/79-4",[]],["text/79-4",[]],["component/79-4",[]],["title/79-5",[518,54.517,997,45.497,4078,49.873]],["name/79-5",[]],["text/79-5",[]],["component/79-5",[]],["title/79-6",[519,58.078,986,37.045,2558,37.293]],["name/79-6",[]],["text/79-6",[]],["component/79-6",[]],["title/79-7",[12,21.939,520,49.617,986,28.823,2381,25.995,2560,31.831]],["name/79-7",[]],["text/79-7",[]],["component/79-7",[]],["title/79-8",[522,55.81,986,32.421,2381,29.239,2558,32.638]],["name/79-8",[]],["text/79-8",[]],["component/79-8",[]],["title/79",[]],["name/79",[661,0.784,2779,0.889]],["text/79",[0,2.32,2,1.959,3,1.803,4,1.352,6,0.972,8,1.973,10,2.607,12,4.664,13,3.833,15,1.084,16,1.231,19,3.34,21,2.324,25,1.109,28,2.585,29,3.189,34,2.831,39,1.118,59,1.598,61,3.254,62,3.216,72,3.203,80,2.043,88,4.34,100,1.217,119,1.403,126,0.889,129,0.802,134,1.403,151,2.682,152,2.666,159,1.013,160,1.771,163,1.988,178,1.039,179,1.577,180,0.794,181,2.327,185,0.75,189,1.423,191,0.839,192,0.874,200,1.013,201,1.804,203,3.031,204,2.928,213,4.182,218,2.167,219,3.392,251,0.972,254,2.29,271,2.243,276,0.906,280,1.192,307,0.906,308,1.605,323,2.627,336,1.781,347,2.007,348,4.705,356,2.422,361,0.932,385,1.556,388,2.904,398,2.607,468,1.46,472,3.805,478,1.1,501,2.266,543,4.235,549,1.068,577,0.947,578,2.468,595,1.629,598,1.814,619,2.334,661,1.192,676,2.853,738,1.494,748,0.995,761,0.962,780,3.032,782,0.995,789,2.272,804,2.517,818,5.182,823,5.455,898,1.991,940,2.627,952,1.169,974,1.217,977,1.245,980,1.137,986,1.039,997,3.07,1006,1.046,1016,1.118,1031,1.529,1096,1.158,1109,4.463,1152,1.351,1161,3.411,1168,2.786,1178,2.406,1192,1.1,1234,2.243,1252,2.167,1254,1.109,1269,2.101,1293,4.389,1298,2.812,1317,1.109,1318,2.216,1323,1.374,1324,1.311,1327,2.812,1663,1.192,1705,2.056,1732,1.276,1744,1.046,1749,1.901,1879,2.061,1883,1.217,1953,1.204,2196,0.947,2241,1.217,2252,2.422,2281,1.838,2306,1.374,2342,0.874,2351,3.14,2352,1.858,2381,4.439,2383,2.868,2408,3.366,2436,1.694,2439,2.749,2529,2.025,2541,2.669,2558,5.622,2560,5.435,2562,3.349,2571,3.252,2572,3.501,2604,5.282,2609,1.18,2685,3.504,2686,1.944,2698,1.456,2701,2.995,2709,4.524,2711,1.456,2740,3.032,2746,2.369,2761,3.252,2768,6.594,2771,2.928,2773,1.975,2785,1.331,2788,1.456,2789,1.311,2866,1.245,2877,7.047,3037,1.331,3039,1.231,3041,2.272,3178,1.217,3639,2.592,4064,1.629,4066,1.529,4067,1.399,4068,1.629,4069,1.529,4070,4.463,4072,4.755,4073,10.277,4074,8.019,4075,5.856,4076,4.755,4077,1.629,4078,4.682,4079,1.399,4080,1.629,4081,3.919,4082,1.629,4083,3.504,4084,3.919,4085,3.919,4087,1.529,4088,1.529,4089,2.9,4115,3.679,4454,1.456,5642,1.629,6068,4.303]],["component/79",[68,0.364]],["title/80-1",[0,22.482,1631,36.826]],["name/80-1",[]],["text/80-1",[]],["component/80-1",[]],["title/80-2",[21,24.758,73,35.891,1631,31.574]],["name/80-2",[]],["text/80-2",[]],["component/80-2",[]],["title/80-3",[159,42.117,1926,70.576]],["name/80-3",[]],["text/80-3",[]],["component/80-3",[]],["title/80-4",[65,34.107,1929,60.511,2593,48.185]],["name/80-4",[]],["text/80-4",[]],["component/80-4",[]],["title/80-5",[21,21.668,1631,27.633,1644,36.129,1932,52.958]],["name/80-5",[]],["text/80-5",[]],["component/80-5",[]],["title/80-6",[77,43.496,2342,36.348]],["name/80-6",[]],["text/80-6",[]],["component/80-6",[]],["title/80-7",[83,38.355,2342,31.165,2398,44.389]],["name/80-7",[]],["text/80-7",[]],["component/80-7",[]],["title/80-8",[86,49.562,2381,38.966]],["name/80-8",[]],["text/80-8",[]],["component/80-8",[]],["title/80-9",[28,24.096,29,26.82,166,44.497,1631,27.633]],["name/80-9",[]],["text/80-9",[]],["component/80-9",[]],["title/80-10",[29,21.462,169,35.608,2203,28.651,2342,21.826,2398,31.088,2408,34.929]],["name/80-10",[]],["text/80-10",[]],["component/80-10",[]],["title/80-11",[21,17.34,973,26.669,2252,25.136,2342,21.826,2398,31.088,6069,44.661]],["name/80-11",[]],["text/80-11",[]],["component/80-11",[]],["title/80-12",[21,21.668,179,27.633,761,30.01,6070,55.81]],["name/80-12",[]],["text/80-12",[]],["component/80-12",[]],["title/80-13",[21,17.34,201,18.727,206,22.725,2342,21.826,2398,31.088,6071,44.661]],["name/80-13",[]],["text/80-13",[]],["component/80-13",[]],["title/80-14",[29,23.844,172,40.397,2203,31.831,2381,25.995,2408,38.805]],["name/80-14",[]],["text/80-14",[]],["component/80-14",[]],["title/80-15",[21,19.264,973,29.628,2252,27.925,2381,25.995,6072,49.617]],["name/80-15",[]],["text/80-15",[]],["component/80-15",[]],["title/80-16",[21,21.668,179,27.633,761,30.01,6073,55.81]],["name/80-16",[]],["text/80-16",[]],["component/80-16",[]],["title/80-17",[21,19.264,201,20.805,206,25.247,2381,25.995,6074,49.617]],["name/80-17",[]],["text/80-17",[]],["component/80-17",[]],["title/80-18",[21,19.264,201,20.805,206,25.247,665,41.34,2342,24.248]],["name/80-18",[]],["text/80-18",[]],["component/80-18",[]],["title/80-19",[21,19.264,973,29.628,2252,27.925,2342,24.248,6075,49.617]],["name/80-19",[]],["text/80-19",[]],["component/80-19",[]],["title/80-20",[21,19.264,201,20.805,206,25.247,2342,24.248,6076,49.617]],["name/80-20",[]],["text/80-20",[]],["component/80-20",[]],["title/80",[]],["name/80",[1631,1.054]],["text/80",[0,0.636,1,0.734,2,0.363,3,3.555,4,3.287,5,1.616,6,1.997,9,0.89,12,4.173,13,3.765,14,2.345,15,0.992,16,0.781,17,0.772,18,0.336,19,2.942,20,1.157,21,3.721,23,1.119,28,1.096,29,2.596,34,0.279,39,0.709,40,2.173,42,1.428,50,1.035,53,1.836,55,0.833,57,0.299,59,1.274,61,1.144,62,0.55,64,1.195,65,0.316,66,0.586,67,0.291,68,0.43,71,0.276,75,1.724,76,1.043,80,0.28,82,0.825,88,2.411,95,0.433,113,0.957,116,0.433,119,3.01,123,1.659,126,1.463,129,0.944,134,0.5,137,2.24,146,1.102,147,0.305,148,0.885,151,0.946,152,1.476,153,0.291,156,2.675,163,0.972,165,0.809,177,1.545,178,2.68,179,0.292,180,0.503,181,1.372,182,0.721,183,0.379,185,1.064,186,0.348,188,4.769,189,2.062,190,0.28,191,0.532,192,0.554,193,0.299,196,0.617,201,2.864,203,1.344,206,1.497,208,0.355,211,0.29,213,1.057,214,0.538,220,0.491,245,0.393,251,0.89,255,0.389,260,0.393,271,2.089,273,0.433,276,2.969,307,1.49,308,1.674,309,0.299,321,0.411,323,0.36,324,1.59,325,2.337,328,0.481,339,0.964,351,0.734,356,0.638,365,0.58,368,1.357,371,0.481,373,1.046,385,3.846,387,2.002,393,0.887,395,0.312,414,0.911,415,0.995,420,0.74,432,0.6,437,0.421,452,0.703,459,0.267,465,0.269,468,1.163,473,0.201,474,0.728,479,0.345,485,0.541,492,0.481,501,0.597,503,1.102,542,0.933,551,0.446,577,0.867,578,0.774,582,0.308,598,0.933,599,1.504,606,1.825,613,0.481,631,0.809,634,0.462,655,0.36,656,1.602,657,1.23,663,0.453,676,1.21,679,0.35,681,0.393,682,0.505,683,2.7,686,0.433,702,2.474,703,0.748,731,1.14,735,0.421,739,1.343,740,0.857,748,1.636,761,0.317,762,0.312,774,2.85,780,0.416,782,0.328,790,0.709,801,2.13,802,0.303,804,1.484,812,0.768,817,1.114,818,3.5,823,2.348,846,0.416,857,1.07,859,1.114,871,2.937,897,0.421,940,2.817,950,0.673,955,0.446,963,2.694,968,1.511,969,0.433,972,0.411,973,4.7,974,0.402,979,0.446,986,0.659,1001,1.281,1002,0.355,1012,1.102,1014,3.406,1016,0.369,1017,2.31,1019,1.727,1022,0.462,1024,0.809,1025,0.904,1026,1.825,1027,3.546,1028,2.859,1043,0.481,1073,1.86,1074,0.366,1094,0.402,1096,1.362,1106,1.218,1107,0.439,1118,1.84,1153,0.366,1170,1.417,1172,1.08,1184,1.281,1189,0.924,1192,0.363,1196,1,1203,2.17,1207,1.916,1210,1.491,1226,0.3,1232,1.35,1253,2.311,1269,1.674,1299,0.924,1306,2.189,1317,1.015,1318,0.411,1320,0.764,1337,0.372,1339,1.024,1355,0.446,1356,0.971,1388,1.168,1393,1.114,1408,0.809,1456,1.033,1493,0.338,1631,3.108,1644,2.796,1657,0.36,1667,0.764,1704,0.663,1732,0.421,1746,1.985,1749,0.677,1868,0.411,1879,1.362,1917,0.741,1953,0.397,1962,0.505,1963,0.924,2041,2.17,2153,1.168,2203,2.13,2207,0.393,2222,0.857,2228,0.709,2231,1.811,2236,0.317,2247,0.764,2251,0.538,2252,4.501,2254,0.764,2256,2.301,2257,0.481,2281,1.214,2309,0.433,2318,0.481,2333,1.616,2342,5.154,2352,0.255,2354,1.168,2376,0.427,2379,0.734,2381,3.183,2383,1.091,2398,5.091,2406,0.397,2449,0.604,2491,1.658,2494,1.364,2499,0.411,2541,0.58,2560,1.05,2562,5.425,2572,3.784,2588,0.411,2590,0.52,2593,0.857,2595,0.481,2600,0.446,2604,0.406,2605,0.416,2616,0.832,2656,0.505,2658,4.698,2660,0.97,2664,3.944,2668,2.839,2674,0.538,2676,0.538,2677,0.97,2678,0.97,2689,1.691,2691,1.542,2728,0.945,2740,0.416,2744,1.258,2760,0.462,2765,1.281,2766,2.874,2771,0.772,2781,1.333,2790,1.918,2806,1.402,2807,0.772,2810,1.402,2840,2.223,2841,2.396,2853,1.4,2860,1.799,2872,0.809,2877,0.832,2880,0.924,2881,0.924,2882,0.97,2883,1.4,2887,0.505,2888,1.4,2891,0.505,2892,0.505,2893,1.4,2894,0.505,2895,0.505,2905,0.505,2907,0.505,2908,1.4,2909,0.505,2911,0.505,2912,2.17,2913,0.505,2914,2.839,2917,0.505,2918,1.4,2919,2.17,2922,0.924,2927,0.97,2928,0.857,2929,0.97,2930,1.799,2931,1.799,2932,0.97,2933,0.97,2935,0.505,2936,0.505,2946,2.17,2948,0.505,2953,0.97,2954,1.799,2955,2.17,2956,0.97,2957,0.97,2958,0.97,2964,0.97,2965,0.97,2966,2.17,2967,0.97,2972,0.97,2973,2.515,3004,1.033,3018,0.481,3019,0.97,3037,0.439,3041,0.809,3043,0.505,3044,0.97,3047,1.4,3048,1.4,3113,0.462,3114,0.462,3115,0.844,3116,0.505,3117,1.799,3122,1.281,3123,1.281,3124,2.515,3126,1.491,3128,1.4,3131,0.97,3132,2.515,3134,0.505,3135,0.97,3143,0.416,3152,0.433,3275,0.638,3529,0.832,3668,0.999,3912,0.462,4011,1.033,4042,0.741,4075,0.481,4121,0.505,4136,0.446,4265,0.505,4302,0.492,4309,0.52,4406,0.505,4409,2.703,4543,0.904,4692,0.887,5087,0.887,5274,0.492,5388,0.505,5411,1.799,5412,1.799,5417,1.916,5442,1.033,5469,0.999,5499,1.4,5530,1.033,5653,0.538,5879,0.505,6077,0.59,6078,2.538,6079,0.59,6080,0.59,6081,0.59,6082,0.59,6083,0.59,6084,0.59,6085,0.59,6086,0.59,6087,0.59,6088,0.59,6089,0.59,6090,2.538,6091,0.59,6092,0.59,6093,0.59,6094,0.59,6095,0.59,6096,0.59,6097,0.59,6098,0.59,6099,0.59,6100,0.59,6101,0.59,6102,0.59,6103,0.59,6104,0.59,6105,0.59,6106,1.134,6107,1.637,6108,1.134,6109,0.59,6110,0.59,6111,0.59,6112,1.637,6113,1.134,6114,1.637,6115,2.104,6116,2.104,6117,2.104,6118,1.134,6119,0.59,6120,0.59,6121,0.59,6122,0.59,6123,0.59,6124,1.134,6125,0.59,6126,0.59,6127,1.637,6128,1.637,6129,1.637,6130,1.637,6131,1.637,6132,0.59,6133,0.59,6134,0.59,6135,0.59,6136,0.59,6137,0.59,6138,0.59,6139,0.59,6140,0.59,6141,0.59,6142,0.59,6143,0.59,6144,0.59,6145,0.59,6146,0.59,6147,0.59,6148,0.59,6149,0.59,6150,0.59,6151,0.59,6152,0.59,6153,2.104,6154,1.134,6155,1.134,6156,1.134,6157,1.637,6158,0.59,6159,1.134,6160,0.59,6161,0.59,6162,0.59,6163,0.59,6164,0.59,6165,0.59,6166,1.134,6167,0.59,6168,0.59,6169,0.59,6170,0.59,6171,0.59,6172,0.59,6173,0.59,6174,0.59,6175,0.59,6176,0.59,6177,0.59,6178,0.59,6179,0.59,6180,0.59,6181,0.59,6182,0.59,6183,0.59,6184,1.134,6185,0.59,6186,0.59,6187,0.59,6188,0.59,6189,1.134,6190,1.134,6191,0.59,6192,1.134,6193,1.134,6194,1.134,6195,1.134,6196,1.134,6197,1.134,6198,1.134,6199,1.134,6200,0.59,6201,1.134,6202,0.59,6203,1.033,6204,1.134,6205,0.59,6206,0.59,6207,0.59,6208,1.134,6209,0.59,6210,1.637,6211,1.637,6212,1.134,6213,0.59,6214,1.134,6215,0.59,6216,1.134,6217,1.134,6218,1.134,6219,0.59,6220,0.471,6221,0.52,6222,1.637,6223,0.59,6224,0.59,6225,0.59,6226,0.59,6227,0.59,6228,0.59,6229,0.59,6230,0.59,6231,0.59,6232,0.59,6233,0.59,6234,0.59,6235,1.134,6236,0.59,6237,0.59,6238,0.59,6239,1.134,6240,0.59,6241,0.59,6242,0.59,6243,0.59,6244,0.59,6245,0.59,6246,0.59,6247,0.59,6248,0.59,6249,1.134,6250,1.134,6251,1.134,6252,0.59,6253,1.134,6254,0.59,6255,0.59,6256,1.134,6257,0.59,6258,0.59,6259,0.59,6260,1.134,6261,1.134,6262,0.59,6263,1.134,6264,0.59,6265,0.59,6266,1.134,6267,0.59,6268,0.59,6269,0.59,6270,0.59,6271,0.59]],["component/80",[68,0.364]],["title/81-1",[0,14.998,84,26.825,111,26.68,956,33.063,6272,42.418]],["name/81-1",[]],["text/81-1",[]],["component/81-1",[]],["title/81-2",[151,27.731,725,56.2]],["name/81-2",[]],["text/81-2",[]],["component/81-2",[]],["title/81-3",[152,29.885,302,49.562]],["name/81-3",[]],["text/81-3",[]],["component/81-3",[]],["title/81-4",[50,26.007,354,33.579,473,21.709]],["name/81-4",[]],["text/81-4",[]],["component/81-4",[]],["title/81-5",[361,33.242,956,42.494,2564,43.395]],["name/81-5",[]],["text/81-5",[]],["component/81-5",[]],["title/81-6",[123,31.856,259,28.099,956,42.494]],["name/81-6",[]],["text/81-6",[]],["component/81-6",[]],["title/81",[]],["name/81",[353,0.58,956,0.784]],["text/81",[0,3.186,5,0.656,8,0.858,15,1.134,19,2.318,27,1.695,32,0.991,57,0.948,62,1.607,64,1.941,66,1.711,67,3.042,72,1.987,75,1.427,76,0.531,78,2.054,80,2.118,84,3.689,92,1.235,96,3.037,97,2.799,101,3.991,102,3.969,104,2.187,107,4.75,111,5.751,119,2.378,121,3.63,122,2.863,126,0.931,129,1.487,137,4.821,151,2.012,152,1.793,156,0.927,157,5.501,160,3.432,174,5.048,177,1.543,184,3.949,188,4.984,192,2.181,193,0.948,196,1.018,203,0.855,211,3.623,213,1.382,217,1.336,219,0.957,220,1.933,224,2.646,251,1.802,276,3.983,288,4.032,290,1.18,298,3.463,302,5.521,303,5.023,304,4.377,308,0.944,309,0.948,320,1.054,327,0.966,330,1.464,351,0.839,353,4.429,354,5.463,358,3.037,360,3.672,361,5.841,414,1.041,415,0.885,437,1.336,465,1.509,473,1.519,564,2.492,570,5.223,578,2.11,597,0.991,598,3.075,628,2.35,631,2.365,656,0.903,713,2.725,725,2.505,734,3.85,739,3.266,760,1.414,762,0.991,792,3.106,802,0.962,808,4.112,846,1.319,872,5.72,874,3.672,877,6.016,879,6.586,880,5.578,881,5.765,916,1.833,926,4.826,956,5.24,965,1.728,970,1.855,1034,2.365,1356,2.646,1373,1.19,1496,1.161,1631,2.21,1685,1.223,1754,2.431,1755,1.6,1756,1.464,1762,2.593,1763,2.466,1764,2.127,1765,4.146,1767,6.15,1769,2.593,1770,4.22,1771,2.593,1772,2.593,1773,2.593,1774,2.431,1779,4.868,1781,1.524,1782,1.464,1784,1.414,1785,1.274,1786,1.464,1810,1.6,1818,1.6,2037,2.308,2058,4.403,2137,1.524,2212,1.134,4334,1.6,4443,2.505,6220,1.492,6273,1.872,6274,2.699,6275,2.699,6276,1.524,6277,6.824,6278,6.171,6279,4.463,6280,5.024,6281,1.872,6282,1.872]],["component/81",[68,0.364]],["title/82-1",[0,19.276,97,33.078,366,39.548]],["name/82-1",[]],["text/82-1",[]],["component/82-1",[]],["title/82-2",[78,20.551,151,16.652,366,27.698,367,26.48,867,31.088,1631,22.113]],["name/82-2",[]],["text/82-2",[]],["component/82-2",[]],["title/82-3",[152,25.623,1631,31.574,2058,45.497]],["name/82-3",[]],["text/82-3",[]],["component/82-3",[]],["title/82-4",[1635,45.762,2112,54.524]],["name/82-4",[]],["text/82-4",[]],["component/82-4",[]],["title/82-5",[1636,47.296,6283,58.169]],["name/82-5",[]],["text/82-5",[]],["component/82-5",[]],["title/82-6",[1637,50.614,6284,58.169]],["name/82-6",[]],["text/82-6",[]],["component/82-6",[]],["title/82-7",[1262,50.614,6285,60.556]],["name/82-7",[]],["text/82-7",[]],["component/82-7",[]],["title/82-8",[2554,58.169,6286,60.556]],["name/82-8",[]],["text/82-8",[]],["component/82-8",[]],["title/82-9",[361,33.242,2314,49.873,2557,51.919]],["name/82-9",[]],["text/82-9",[]],["component/82-9",[]],["title/82",[]],["name/82",[353,0.58,2314,0.92]],["text/82",[0,2.459,19,1.472,23,1.356,53,0.698,57,1.291,64,2.229,71,0.653,72,0.622,76,1.894,78,1.173,79,1.056,80,2.685,84,2.725,96,2.837,97,3.213,101,3.623,104,0.922,111,2.711,113,1.972,121,1.356,122,3.234,126,0.695,128,1.85,129,1.143,131,3.469,134,0.616,137,0.607,146,0.732,148,1.378,151,0.521,152,2.025,153,3.499,156,2.496,157,4.209,163,0.645,174,3.444,184,3.565,188,5.471,190,0.663,191,0.655,192,1.245,203,1.164,211,3.671,213,0.582,224,2.989,230,2.57,289,0.866,304,2.989,308,0.704,309,2.195,336,0.782,351,0.627,352,0.922,353,3.857,354,4.811,357,3.164,358,3.43,360,3.43,361,4.078,367,1.511,398,3.427,405,0.904,415,0.661,443,5.213,445,3.294,473,1.925,479,0.817,570,3.566,582,0.728,598,0.796,599,0.714,604,0.881,628,2.654,656,2.092,689,0.931,713,3.782,739,3.279,744,2.439,753,0.931,774,0.655,782,0.777,792,3.509,799,1.665,802,1.805,872,5.076,873,0.931,874,6.068,877,4.933,878,4.542,879,7.726,880,6.738,881,6.985,1191,0.873,1496,1.23,1631,3.067,1685,0.913,1776,4.845,1778,5.735,1779,1.818,1920,1.137,2027,1.194,2037,1.774,2058,6.007,2076,1.137,2087,3.177,2112,4.146,2164,5.912,2314,4.845,2601,1.056,4331,2.075,4443,1.056,4984,4.273,4988,3.275,5966,1.056,6274,4.104,6275,5.044,6276,4.104,6283,2.748,6284,3.39,6285,3.529,6286,2.861,6287,1.397,6288,1.272,6289,3.004,6290,1.272,6291,1.272,6292,2.179,6293,6.119,6294,4.31,6295,3.004,6296,3.947,6297,3.705,6298,3.947,6299,3.705,6300,3.2,6301,6.464,6302,3.705,6303,3.2,6304,6.624,6305,3.004,6306,3.004,6307,5.433,6308,3.004,6309,3.004,6310,2.075,6311,2.179,6312,7.146,6313,2.321,6314,2.321,6315,3.004,6316,2.075,6317,4.591,6318,1.272,6319,3.2,6320,5.433,6321,2.179,6322,5.433,6323,3.456,6324,1.272,6325,1.272,6326,1.272,6327,2.179,6328,2.179,6329,1.272,6330,1.194,6331,1.397,6332,1.194,6333,1.194,6334,1.194,6335,1.272,6336,2.548,6337,1.194,6338,1.272]],["component/82",[68,0.364]],["title/83-1",[0,14.998,69,29.017,84,26.825,97,25.737,111,26.68]],["name/83-1",[]],["text/83-1",[]],["component/83-1",[]],["title/83-2",[69,37.293,73,35.891,84,34.476]],["name/83-2",[]],["text/83-2",[]],["component/83-2",[]],["title/83",[]],["name/83",[353,0.58,6339,1.177]],["text/83",[0,3.261,19,3.664,34,2.014,55,2.168,58,2.563,61,2.316,62,2.065,69,2.492,70,7.176,71,1.991,74,2.369,75,4.922,76,2.57,80,5.806,82,4.935,84,6.184,87,3.416,97,2.21,101,4.707,102,4.869,103,7.082,107,8.513,108,9.958,111,5.801,119,1.877,121,6.216,123,3.289,124,2.868,126,4.503,129,4.061,137,1.852,139,3.642,140,3.642,146,4.217,153,3.246,188,4.387,190,3.126,201,3.375,248,2.199,256,5.036,321,2.966,356,2.398,415,3.113,485,2.031,591,3.332,676,2.031,734,3.04,744,2.398,745,2.839,761,2.291,786,2.316,790,2.664,808,4.388,926,3.332,956,4.388,965,4.72,1164,3.706,1495,3.04,1874,2.932,2501,2.492,3833,3.332,6272,5.629,6340,8.048,6341,4.26,6342,4.26,6343,4.26,6344,4.26]],["component/83",[68,0.364]],["title/84-1",[0,19.276,353,31.435,744,35.891]],["name/84-1",[]],["text/84-1",[]],["component/84-1",[]],["title/84-2",[73,41.861,355,43.207]],["name/84-2",[]],["text/84-2",[]],["component/84-2",[]],["title/84-3",[77,37.293,219,32.602,744,35.891]],["name/84-3",[]],["text/84-3",[]],["component/84-3",[]],["title/84-4",[517,47.712,744,31.411,1631,27.633,1705,21.975]],["name/84-4",[]],["text/84-4",[]],["component/84-4",[]],["title/84-5",[518,54.517,744,35.891,1496,22.333]],["name/84-5",[]],["text/84-5",[]],["component/84-5",[]],["title/84-6",[83,38.355,119,28.099,353,31.435]],["name/84-6",[]],["text/84-6",[]],["component/84-6",[]],["title/84-7",[86,37.19,353,27.512,950,33.09,1192,34.339]],["name/84-7",[]],["text/84-7",[]],["component/84-7",[]],["title/84-8",[166,35.608,167,25.448,253,26.48,353,22.016,354,23.517,744,25.136]],["name/84-8",[]],["text/84-8",[]],["component/84-8",[]],["title/84-9",[169,44.497,353,27.512,877,35.187,1157,45.439]],["name/84-9",[]],["text/84-9",[]],["component/84-9",[]],["title/84-10",[122,47.714,6069,74.376]],["name/84-10",[]],["text/84-10",[]],["component/84-10",[]],["title/84-11",[96,41.861,6070,74.376]],["name/84-11",[]],["text/84-11",[]],["component/84-11",[]],["title/84-12",[872,43.496,6071,74.376]],["name/84-12",[]],["text/84-12",[]],["component/84-12",[]],["title/84-13",[172,51.919,753,42.494,1496,22.333]],["name/84-13",[]],["text/84-13",[]],["component/84-13",[]],["title/84-14",[174,38.392,6072,74.376]],["name/84-14",[]],["text/84-14",[]],["component/84-14",[]],["title/84-15",[739,39.366,6073,74.376]],["name/84-15",[]],["text/84-15",[]],["component/84-15",[]],["title/84-16",[361,38.771,6074,74.376]],["name/84-16",[]],["text/84-16",[]],["component/84-16",[]],["title/84-17",[473,25.32,6345,80.145]],["name/84-17",[]],["text/84-17",[]],["component/84-17",[]],["title/84-18",[367,37.809,665,53.131,1496,22.333]],["name/84-18",[]],["text/84-18",[]],["component/84-18",[]],["title/84-19",[174,38.392,6075,74.376]],["name/84-19",[]],["text/84-19",[]],["component/84-19",[]],["title/84-20",[739,39.366,6076,74.376]],["name/84-20",[]],["text/84-20",[]],["component/84-20",[]],["title/84-21",[361,38.771,6346,80.145]],["name/84-21",[]],["text/84-21",[]],["component/84-21",[]],["title/84-22",[473,25.32,6347,80.145]],["name/84-22",[]],["text/84-22",[]],["component/84-22",[]],["title/84-23",[666,56.135,956,42.494,1496,22.333]],["name/84-23",[]],["text/84-23",[]],["component/84-23",[]],["title/84-24",[174,38.392,6348,80.145]],["name/84-24",[]],["text/84-24",[]],["component/84-24",[]],["title/84-25",[739,39.366,6349,80.145]],["name/84-25",[]],["text/84-25",[]],["component/84-25",[]],["title/84-26",[361,38.771,6350,80.145]],["name/84-26",[]],["text/84-26",[]],["component/84-26",[]],["title/84-27",[473,25.32,6351,80.145]],["name/84-27",[]],["text/84-27",[]],["component/84-27",[]],["title/84",[]],["name/84",[353,0.401,744,0.458,877,0.513]],["text/84",[0,2.153,6,0.305,8,0.716,10,0.34,15,0.34,18,0.32,19,2.068,23,0.298,25,1.976,27,1.242,28,0.868,31,1.23,32,3.005,34,0.511,39,0.675,40,0.264,42,0.316,50,0.44,53,1.004,55,1.621,57,2.522,61,1.093,62,1.177,63,0.378,64,2.043,65,0.578,66,1.254,67,1.74,71,0.262,72,0.481,75,2.348,76,0.689,78,1.118,80,3.152,84,2.249,87,3.915,92,0.37,96,3.921,97,2.307,101,2.065,102,3.476,104,2.329,105,0.923,107,2.458,111,4.662,112,0.511,113,0.711,114,0.424,115,0.312,118,0.378,119,0.476,121,3.789,122,4.663,126,0.279,128,1.678,129,0.484,134,0.247,137,3.848,146,0.566,148,1.087,151,1.437,152,0.434,153,1.571,157,6.046,158,0.67,159,0.612,163,1.472,164,0.65,165,1.114,167,0.615,174,4.964,177,1.13,178,0.907,180,0.479,184,3.465,185,1.616,188,4.915,189,0.698,190,0.741,191,0.507,192,2.033,196,1.093,200,0.318,201,2.553,203,0.713,206,0.285,211,3.568,213,1.328,217,0.771,220,0.243,224,1.44,228,0.67,230,0.64,248,0.558,249,0.735,251,0.305,253,0.64,255,0.37,256,1.568,271,0.292,276,0.547,287,0.324,289,4.508,290,0.354,298,2.762,300,1.002,302,1.041,304,2.637,305,1.326,307,0.284,308,1.422,309,1.23,310,0.439,315,0.511,320,1.587,322,1.963,327,0.29,335,0.457,336,1.783,339,0.92,346,0.367,348,0.627,351,0.7,352,1.03,353,3.848,354,5.098,356,1.131,358,1.063,359,0.816,361,5.711,362,0.845,365,0.798,366,0.348,367,4.7,368,1.299,370,1.021,371,0.457,373,0.279,382,0.816,385,0.763,395,1.064,398,0.654,404,0.792,405,0.699,406,1.78,407,0.923,414,0.601,415,0.511,420,0.488,443,0.374,445,1.021,453,0.33,465,0.711,466,0.615,467,0.511,468,0.257,473,2.005,474,0.36,479,1.649,485,0.515,505,0.984,543,0.636,559,0.279,561,0.292,562,0.424,564,1.921,570,3.839,573,0.39,578,2.47,594,0.411,598,0.32,599,0.287,604,0.985,606,0.594,614,0.457,628,2.622,629,1.474,631,1.733,656,0.271,657,1.863,668,0.354,670,0.337,680,0.34,683,0.351,686,0.411,689,1.34,713,0.954,719,1.45,722,3.015,725,0.816,729,0.457,730,0.424,732,0.417,734,1.434,736,0.447,737,1.519,738,0.263,739,4.258,744,4.462,745,3.146,748,0.601,751,0.386,752,2.296,753,4.307,760,0.424,774,0.263,778,0.665,790,0.351,799,0.706,801,1.558,804,1.649,807,1.422,808,2.123,812,0.943,822,0.735,859,0.382,863,0.984,867,1.399,872,6.718,873,0.374,874,6.904,877,5.144,878,3.261,879,2.826,880,1.519,881,3.65,896,0.48,897,0.771,899,0.39,908,1.422,916,1.952,926,1.572,943,0.4,951,0.378,952,1.314,956,2.569,965,0.292,968,0.288,972,1.087,1002,0.65,1157,0.457,1164,0.316,1182,0.382,1191,0.977,1196,0.342,1229,0.354,1254,0.348,1298,0.706,1324,0.792,1356,0.333,1383,0.879,1443,1.572,1496,0.704,1631,0.773,1657,0.659,1659,0.439,1685,1.021,1705,0.425,1745,0.636,1748,1.145,1749,0.335,1751,0.417,1754,0.411,1778,2.336,1779,6.764,1794,2.205,1805,0.411,1811,1.335,1815,0.923,1859,2.411,1861,0.511,1864,0.845,1865,0.511,1879,1.301,1880,0.439,1919,1.063,1948,0.511,1975,1.422,2027,0.48,2059,4.299,2076,4.054,2110,3.295,2112,1.474,2137,0.457,2143,2.594,2164,0.816,2169,0.923,2314,1.572,2438,0.382,2501,0.632,2587,0.39,2601,1.18,2614,0.48,2746,0.417,2770,0.457,2773,0.969,2783,0.439,2787,0.302,3012,0.879,3190,2.038,3601,0.457,3636,0.48,3975,0.48,4123,0.457,4221,0.457,4286,0.467,4409,0.879,4430,1.335,4592,0.48,4884,1.422,4984,0.424,4988,0.424,5594,0.511,6272,0.923,6280,2.594,6283,0.439,6284,0.439,6289,3.018,6292,0.48,6293,1.222,6299,0.48,6301,0.511,6302,0.48,6304,0.879,6307,0.879,6312,0.845,6316,0.879,6320,0.879,6322,0.879,6323,0.861,6330,5.819,6352,0.532,6353,0.561,6354,0.561,6355,0.561,6356,1.08,6357,3.186,6358,2.429,6359,2.568,6360,4.051,6361,1.08,6362,0.561,6363,0.561,6364,0.561,6365,0.561,6366,0.561,6367,1.08,6368,0.511,6369,0.511,6370,0.561,6371,1.08,6372,1.08,6373,1.08,6374,0.561,6375,0.561,6376,0.561,6377,0.532,6378,0.561,6379,0.561,6380,0.561,6381,0.561,6382,0.561,6383,0.561,6384,1.562,6385,1.08,6386,3.855,6387,3.531,6388,0.561,6389,0.561,6390,0.561,6391,1.129,6392,0.511,6393,1.08,6394,2.568,6395,1.562,6396,2.076,6397,2.429,6398,1.08,6399,0.561,6400,0.561,6401,0.561,6402,1.562,6403,0.984,6404,2.01,6405,1.562,6406,0.984,6407,1.08,6408,0.561,6409,1.08,6410,0.561,6411,0.561,6412,3.186,6413,3.531,6414,0.984,6415,1.562,6416,0.984,6417,0.984,6418,1.08,6419,0.561,6420,0.511,6421,1.562,6422,1.08,6423,1.08,6424,1.08,6425,0.511,6426,0.511,6427,0.511,6428,1.335,6429,0.561,6430,0.561,6431,0.48,6432,2.01,6433,1.08,6434,0.561,6435,1.562,6436,1.562]],["component/84",[68,0.364]],["title/85-1",[0,22.482,355,43.207]],["name/85-1",[]],["text/85-1",[]],["component/85-1",[]],["title/85-2",[151,20.809,353,27.512,1316,36.468,1710,43.649]],["name/85-2",[]],["text/85-2",[]],["component/85-2",[]],["title/85-3",[224,44.099,537,56.2]],["name/85-3",[]],["text/85-3",[]],["component/85-3",[]],["title/85-4",[224,29.418,1893,37.492,6437,49.617,6438,49.617,6439,45.188]],["name/85-4",[]],["text/85-4",[]],["component/85-4",[]],["title/85-5",[109,46.127,6440,74.376]],["name/85-5",[]],["text/85-5",[]],["component/85-5",[]],["title/85-6",[1863,67.414]],["name/85-6",[]],["text/85-6",[]],["component/85-6",[]],["title/85-7",[1898,69.775]],["name/85-7",[]],["text/85-7",[]],["component/85-7",[]],["title/85-8",[1881,67.414]],["name/85-8",[]],["text/85-8",[]],["component/85-8",[]],["title/85-9",[1862,56.2,6441,74.376]],["name/85-9",[]],["text/85-9",[]],["component/85-9",[]],["title/85-10",[2029,67.414]],["name/85-10",[]],["text/85-10",[]],["component/85-10",[]],["title/85-11",[1866,67.414]],["name/85-11",[]],["text/85-11",[]],["component/85-11",[]],["title/85-12",[538,56.2,1893,56.2]],["name/85-12",[]],["text/85-12",[]],["component/85-12",[]],["title/85-13",[354,39.164,539,60.556]],["name/85-13",[]],["text/85-13",[]],["component/85-13",[]],["title/85-14",[353,27.512,354,29.388,361,29.093,6442,50.829]],["name/85-14",[]],["text/85-14",[]],["component/85-14",[]],["title/85-15",[354,33.579,359,48.185,6443,58.078]],["name/85-15",[]],["text/85-15",[]],["component/85-15",[]],["title/85-16",[354,33.579,877,40.205,6444,58.078]],["name/85-16",[]],["text/85-16",[]],["component/85-16",[]],["title/85-17",[540,63.585,872,43.496]],["name/85-17",[]],["text/85-17",[]],["component/85-17",[]],["title/85-18",[354,29.388,541,45.439,561,29.093,606,30.682]],["name/85-18",[]],["text/85-18",[]],["component/85-18",[]],["title/85-19",[28,32.112,152,29.885]],["name/85-19",[]],["text/85-19",[]],["component/85-19",[]],["title/85",[353,43.98]],["name/85",[353,0.58,6445,1.177]],["text/85",[0,0.941,4,0.607,5,0.911,10,0.455,14,0.342,18,2.286,19,2.977,23,0.4,27,2.619,34,0.966,40,0.962,50,0.833,53,1.02,55,2.041,57,1.576,58,1.564,59,2.013,61,3.121,62,2.637,63,0.506,64,2.26,65,2.74,66,0.388,67,1.007,69,1.194,70,0.551,72,0.636,73,0.804,75,1.898,76,1.138,78,3.005,80,0.357,82,0.72,84,1.104,87,3.507,93,0.943,95,0.551,96,3.675,97,2.657,101,0.835,102,4.255,104,3.38,107,0.523,109,4.579,110,2.117,111,2.157,113,0.65,116,0.551,118,1.375,119,1.943,121,2.896,122,3.286,124,2.41,128,1.638,129,0.916,136,0.462,137,0.621,146,2.31,148,1.406,151,1.335,152,0.302,156,1.288,157,3.725,158,0.886,160,0.795,161,3.935,165,1.019,174,3.243,176,0.501,177,2.053,178,2.08,179,1.986,180,2.672,181,2.384,183,0.917,184,3.692,185,2.927,186,0.442,188,4.479,189,0.913,190,1.235,191,2.403,192,2.66,193,2.032,196,0.408,200,1.473,201,1.501,204,0.511,206,0.727,208,0.859,209,0.536,211,2.955,213,1.672,215,0.536,217,0.536,218,1.39,219,0.384,220,0.325,224,6.942,247,0.588,249,0.972,251,1.946,253,0.847,256,1.446,257,0.529,258,0.379,267,0.588,271,0.745,289,3.177,290,0.901,291,0.72,298,1.679,301,0.511,302,0.501,303,0.511,305,0.496,306,0.517,307,1.034,308,1.03,309,0.381,312,1.422,313,0.847,317,0.853,320,1.751,321,0.523,322,0.523,325,0.381,327,1.054,336,0.42,346,1.699,348,0.436,351,1.395,352,1.347,353,5.258,354,5.752,355,1.511,356,2.015,357,4.516,358,4.751,359,3.611,360,3.486,361,3.849,362,0.588,365,1.33,366,0.466,368,1.664,370,1.334,373,0.374,376,2.769,382,0.568,385,0.367,388,0.418,395,0.398,400,0.983,406,0.551,407,0.642,414,0.418,415,1.23,420,0.339,432,0.398,435,0.886,438,4.545,445,0.491,450,1.39,459,0.923,465,0.65,466,1.164,473,1.501,478,0.879,485,0.681,486,1.31,489,0.559,503,0.506,510,0.408,542,0.428,543,0.841,547,1.655,549,0.853,561,2.091,564,1.201,565,0.501,569,1.597,570,2.257,571,1.497,573,0.523,577,0.398,578,0.355,582,0.392,598,1.482,604,0.901,606,2.424,613,0.612,616,0.559,628,1.885,655,0.872,668,0.901,670,0.452,683,0.47,685,0.642,707,1.405,709,0.713,713,0.459,715,3.061,719,1.858,730,1.079,731,0.523,734,1.019,736,0.599,738,0.352,739,2.123,740,1.543,745,0.501,746,0.577,748,1.136,751,1.79,761,0.768,778,1.6,804,0.835,808,2.073,812,0.352,813,0.684,822,0.511,830,0.482,848,0.496,849,1.301,850,0.588,872,4.809,873,1.361,874,0.511,877,3.796,878,1.497,882,0.943,897,0.536,899,2.492,901,0.455,925,0.559,926,1.117,950,0.445,951,0.506,952,2.033,966,0.466,968,0.386,972,0.523,976,1.033,977,0.994,985,0.599,993,1.476,996,0.482,999,0.568,1017,2.359,1018,0.511,1060,0.588,1153,0.466,1156,1.519,1157,0.612,1179,0.568,1182,0.511,1196,0.872,1205,0.612,1209,0.506,1229,0.474,1234,1.007,1254,0.466,1335,0.517,1339,1.626,1377,1.079,1383,0.612,1442,0.511,1658,0.983,1666,0.511,1673,0.588,1674,0.642,1706,1.856,1707,0.612,1709,0.466,1714,0.612,1732,0.536,1745,1.832,1746,1.597,1747,0.612,1748,1.047,1749,2.854,1754,0.551,1776,0.588,1778,1.907,1779,2.862,1780,0.684,1783,2.862,1787,0.642,1801,0.568,1859,1.221,1860,0.612,1862,4.934,1863,3.871,1864,1.597,1866,2.705,1867,1.221,1868,1.81,1869,0.642,1877,0.486,1878,1.033,1880,2.034,1881,2.351,1885,3.891,1891,1.86,1893,7.928,1897,0.684,1898,1.597,1899,0.684,1900,0.684,1901,0.612,1916,1.221,1917,0.491,1919,0.972,1924,0.684,1967,0.536,2029,2.351,2031,1.221,2032,0.612,2034,0.684,2164,0.568,2178,1.597,2207,2.073,2208,0.83,2216,1.221,2236,1.399,2238,0.612,2241,0.511,2272,0.496,2298,0.612,2321,1.301,2322,1.301,2323,0.684,2353,0.642,2388,0.612,2409,0.684,2418,0.466,2438,0.972,2595,0.612,2596,0.559,2684,0.588,2708,0.599,2742,1.422,2746,1.063,2866,0.523,3020,0.577,3115,1.063,3214,0.568,3551,0.501,3757,1.19,3862,0.612,4075,0.612,4120,0.642,4136,0.568,4161,1.163,4274,0.642,4307,0.642,4412,1.221,4446,1.663,4543,0.599,4984,0.568,4988,1.079,5227,0.684,5304,0.684,5732,1.746,5798,0.684,6050,0.684,6203,0.684,6221,1.258,6280,1.163,6293,1.597,6310,0.612,6312,2.034,6394,0.684,6396,1.221,6420,1.301,6428,0.642,6439,4.957,6446,0.751,6447,0.751,6448,0.751,6449,0.751,6450,0.751,6451,0.751,6452,0.751,6453,0.751,6454,0.751,6455,0.751,6456,3.58,6457,0.751,6458,0.751,6459,0.751,6460,0.751,6461,0.751,6462,1.429,6463,0.751,6464,0.751,6465,0.751,6466,0.713,6467,0.713,6468,0.751,6469,0.713,6470,0.751,6471,0.751,6472,0.751,6473,0.751,6474,0.751,6475,0.751,6476,0.751,6477,0.751,6478,0.751,6479,0.751,6480,0.751,6481,0.751,6482,0.751,6483,0.751,6484,2.601,6485,0.751,6486,0.751,6487,0.751,6488,1.429,6489,0.751,6490,2.042,6491,0.751,6492,0.751,6493,0.751,6494,0.751,6495,0.751,6496,0.751,6497,0.751,6498,0.751,6499,0.751,6500,0.751,6501,0.751,6502,0.751,6503,0.751,6504,0.751]],["component/85",[68,0.364]],["title/86-1",[0,19.276,867,44.389,6391,46.102]],["name/86-1",[]],["text/86-1",[]],["component/86-1",[]],["title/86-2",[151,20.809,752,45.439,867,38.849,1631,27.633]],["name/86-2",[]],["text/86-2",[]],["component/86-2",[]],["title/86-3",[152,22.425,753,37.19,867,38.849,1496,19.545]],["name/86-3",[]],["text/86-3",[]],["component/86-3",[]],["title/86-4",[50,26.007,2058,45.497,6391,46.102]],["name/86-4",[]],["text/86-4",[]],["component/86-4",[]],["title/86-5",[2564,50.614,6505,67.738]],["name/86-5",[]],["text/86-5",[]],["component/86-5",[]],["title/86-6",[2565,54.524,6506,67.738]],["name/86-6",[]],["text/86-6",[]],["component/86-6",[]],["title/86-7",[2155,63.585,2566,61.969]],["name/86-7",[]],["text/86-7",[]],["component/86-7",[]],["title/86-8",[2567,67.738,6507,67.738]],["name/86-8",[]],["text/86-8",[]],["component/86-8",[]],["title/86-9",[6508,70.576,6509,67.738]],["name/86-9",[]],["text/86-9",[]],["component/86-9",[]],["title/86-10",[323,45.409,6510,70.576]],["name/86-10",[]],["text/86-10",[]],["component/86-10",[]],["title/86-11",[6511,74.376,6512,67.738]],["name/86-11",[]],["text/86-11",[]],["component/86-11",[]],["title/86-12",[6513,74.376,6514,67.738]],["name/86-12",[]],["text/86-12",[]],["component/86-12",[]],["title/86-13",[123,24.787,354,26.127,443,33.063,473,16.891,6391,35.871]],["name/86-13",[]],["text/86-13",[]],["component/86-13",[]],["title/86-14",[153,31.435,361,33.242,6391,46.102]],["name/86-14",[]],["text/86-14",[]],["component/86-14",[]],["title/86-15",[147,32.917,259,28.099,6391,46.102]],["name/86-15",[]],["text/86-15",[]],["component/86-15",[]],["title/86",[]],["name/86",[353,0.58,753,0.784]],["text/86",[0,1.524,5,0.139,8,1.456,16,0.272,19,2.367,23,0.778,27,0.748,32,0.209,34,0.364,50,0.597,57,1.48,59,0.199,61,0.215,62,0.864,64,1.23,66,1.228,67,0.879,72,0.343,75,0.629,76,0.506,78,1.976,79,1.105,80,2.132,84,1.717,87,3.241,90,0.286,96,2.635,97,0.4,101,2.266,102,3.687,104,1.177,107,0.275,109,0.245,111,2.517,113,0.512,119,0.496,121,4.125,122,2.881,123,3.054,128,1.1,129,0.8,131,2.352,137,3.166,146,1.094,148,1.129,151,1.275,152,1.881,153,1.173,156,2.126,157,5.176,158,0.698,160,0.992,163,3.167,164,2.459,165,0.803,174,3.652,184,3.777,188,5.575,190,0.366,191,0.528,192,1.021,193,0.903,201,0.323,203,0.181,211,4.008,213,0.61,216,0.536,219,0.394,220,0.334,222,0.783,224,2.663,226,0.457,230,1.576,232,1.634,247,1.634,248,0.204,256,0.22,276,1.48,280,0.513,288,1.165,289,2.264,291,0.199,298,0.361,301,0.269,302,0.264,303,1.619,304,2.546,308,1.953,309,0.39,313,0.867,320,0.434,322,0.275,323,0.47,327,0.204,330,0.309,336,2.043,346,0.259,347,0.249,352,1.177,353,4.396,354,4.817,357,2.043,358,3.056,360,4.251,361,4.551,362,0.88,365,1.068,367,0.235,368,1.117,370,0.259,395,0.596,398,0.886,405,0.256,427,0.592,435,0.478,437,0.282,443,5.046,445,5.574,458,0.454,465,0.351,473,1.529,478,0.9,479,2.511,542,0.225,563,0.486,564,0.965,565,0.264,570,3.584,577,0.209,578,0.532,582,0.402,591,0.88,597,0.209,598,0.833,605,0.627,606,0.804,621,0.338,628,2.365,631,1.698,656,1.65,689,2.724,713,1.089,719,0.873,722,0.309,739,2.272,744,1.004,745,0.264,748,0.22,752,2.164,753,4.569,762,0.209,774,0.686,782,0.428,792,3.126,808,0.513,811,0.275,846,0.279,850,0.309,867,0.275,872,6.163,873,2.993,874,5.215,876,0.36,877,4.832,878,4.675,879,6.097,880,5.094,881,5.986,955,0.299,965,0.402,970,0.431,1034,0.55,1113,0.282,1154,0.49,1170,0.266,1196,0.242,1229,0.249,1324,0.29,1356,0.457,1373,0.49,1383,1.701,1496,0.731,1631,1.034,1658,0.774,1685,0.259,1745,0.233,1748,0.565,1754,0.565,1756,0.309,1762,0.602,1763,0.573,1764,0.494,1765,1.124,1767,1.861,1769,0.602,1770,1.144,1771,0.602,1772,0.602,1773,0.602,1774,0.565,1776,2.484,1778,5.187,1779,3.596,1781,0.322,1782,0.309,1783,1.272,1784,0.299,1785,0.269,1786,0.309,1790,1.937,1793,0.962,1794,0.309,1795,0.36,1796,0.36,1798,0.36,1801,0.582,1805,0.29,1808,0.338,1810,0.338,1811,0.962,1812,0.36,1813,0.36,1814,0.702,1815,0.338,1816,1.025,1817,0.36,1818,0.338,1883,0.269,1919,0.524,1920,1.191,2037,0.275,2058,4.81,2112,0.565,2143,6.165,2155,1.525,2164,5.503,2366,0.338,2601,2.583,2772,0.282,2773,0.478,3529,0.29,3771,0.659,4127,0.338,4136,0.299,4161,0.322,4191,0.338,4443,0.582,4984,3.808,4988,2.008,5233,0.36,5966,0.582,6220,0.315,6274,3.328,6275,3.656,6276,3.328,6280,2.164,6293,4.886,6294,3.495,6295,1.525,6297,1.251,6302,0.338,6304,5.583,6305,2.923,6306,1.251,6307,4.504,6308,1.525,6309,1.525,6310,2.586,6311,1.251,6312,6.064,6314,0.36,6315,2.923,6316,2.164,6320,3.656,6321,0.962,6322,3.154,6323,1.897,6327,2.715,6328,1.525,6332,1.251,6333,1.251,6334,1.251,6337,0.962,6359,5.922,6391,1.058,6396,4.158,6406,0.702,6414,6.245,6416,4.745,6417,4.09,6431,0.338,6505,1.025,6506,1.332,6507,0.702,6509,0.702,6512,0.702,6514,0.702,6515,0.396,6516,0.36,6517,0.36,6518,0.396,6519,0.396,6520,0.375,6521,0.396,6522,0.396,6523,2.657,6524,2.089,6525,1.025,6526,0.396,6527,1.463,6528,0.396,6529,0.396,6530,0.396,6531,0.36,6532,0.396,6533,0.396,6534,0.396,6535,0.396,6536,1.125]],["component/86",[68,0.364]],["title/87-1",[0,19.276,366,39.548,367,37.809]],["name/87-1",[]],["text/87-1",[]],["component/87-1",[]],["title/87-2",[78,20.551,151,16.652,366,27.698,367,26.48,867,31.088,1631,22.113]],["name/87-2",[]],["text/87-2",[]],["component/87-2",[]],["title/87-3",[78,20.551,152,17.945,366,27.698,367,26.48,867,31.088,1496,15.641]],["name/87-3",[]],["text/87-3",[]],["component/87-3",[]],["title/87-4",[50,26.007,367,37.809,2058,45.497]],["name/87-4",[]],["text/87-4",[]],["component/87-4",[]],["title/87-5",[2564,50.614,6286,60.556]],["name/87-5",[]],["text/87-5",[]],["component/87-5",[]],["title/87-6",[2565,54.524,6537,67.738]],["name/87-6",[]],["text/87-6",[]],["component/87-6",[]],["title/87-7",[2566,61.969,6538,67.738]],["name/87-7",[]],["text/87-7",[]],["component/87-7",[]],["title/87-8",[2567,67.738,6284,58.169]],["name/87-8",[]],["text/87-8",[]],["component/87-8",[]],["title/87-9",[6283,58.169,6508,70.576]],["name/87-9",[]],["text/87-9",[]],["component/87-9",[]],["title/87-10",[2112,54.524,6510,70.576]],["name/87-10",[]],["text/87-10",[]],["component/87-10",[]],["title/87-11",[594,54.524,6511,74.376]],["name/87-11",[]],["text/87-11",[]],["component/87-11",[]],["title/87-12",[2111,63.585,6513,74.376]],["name/87-12",[]],["text/87-12",[]],["component/87-12",[]],["title/87-13",[6539,80.145,6540,67.738]],["name/87-13",[]],["text/87-13",[]],["component/87-13",[]],["title/87-14",[6285,60.556,6541,80.145]],["name/87-14",[]],["text/87-14",[]],["component/87-14",[]],["title/87-15",[361,33.242,367,37.809,6542,68.715]],["name/87-15",[]],["text/87-15",[]],["component/87-15",[]],["title/87-16",[259,28.099,367,37.809,6543,68.715]],["name/87-16",[]],["text/87-16",[]],["component/87-16",[]],["title/87",[]],["name/87",[353,0.58,367,0.698]],["text/87",[0,2.475,2,0.295,5,0.168,16,0.33,18,0.273,19,1.875,23,0.255,27,0.689,32,0.253,34,0.226,40,0.437,50,0.55,57,2.375,59,0.24,61,0.26,62,0.653,64,1.843,66,0.696,67,0.664,72,0.413,76,1.196,78,2.45,79,0.362,80,2.331,84,1.996,87,3.052,96,3.408,97,0.481,101,2.465,104,5.521,111,3.068,113,1.918,119,0.409,121,4.356,122,3.66,126,0.238,128,0.71,129,1.106,131,2.54,137,3.135,146,2.074,148,0.259,151,1.662,152,1.693,153,2.525,156,1.96,157,4.554,160,1.371,163,0.221,165,1.243,174,3.59,177,0.432,183,0.307,184,3.946,188,5.482,190,0.227,191,0.225,192,0.659,194,0.282,196,0.26,201,0.389,203,0.615,211,4.232,213,0.386,216,0.333,217,1.243,219,0.474,220,0.402,222,0.333,224,3.383,230,1.845,256,0.266,276,2.005,288,1.611,289,2.289,291,0.241,303,2.512,304,2.499,308,1.996,309,0.47,313,2.021,320,0.27,327,0.247,330,0.375,336,2.065,346,0.313,347,0.302,348,0.278,351,0.215,352,0.889,353,4.21,354,5.129,357,2.494,358,3.882,360,4.12,361,5.327,362,0.725,366,0.297,367,4.123,368,0.256,370,0.313,388,0.266,395,0.922,396,0.436,398,2.399,405,0.31,437,0.342,441,0.375,443,4.035,445,3.728,473,1.518,479,0.28,480,0.288,486,0.307,499,0.326,564,0.622,568,0.375,570,2.496,577,0.253,578,0.226,594,1.278,597,0.491,598,0.993,599,0.245,603,0.844,628,3.004,641,1.227,654,0.618,656,0.841,689,0.319,713,1.064,719,1.472,722,0.375,739,2.819,744,1.575,745,0.319,753,0.898,762,0.491,774,0.435,782,0.516,792,3.971,799,0.606,802,0.476,811,0.333,846,0.337,865,0.409,872,5.976,873,0.319,874,5.922,877,5.101,878,4.787,879,6.701,880,5.543,881,5.786,950,0.55,965,0.483,968,1.086,970,0.754,1009,0.342,1034,0.961,1113,0.661,1154,0.59,1191,0.299,1196,0.823,1278,0.362,1324,0.351,1356,0.55,1373,0.305,1401,0.844,1496,0.741,1631,1.96,1685,0.313,1748,0.988,1754,1.278,1755,0.409,1756,0.725,1757,0.409,1759,0.436,1760,0.409,1761,0.409,1762,1.363,1763,1.003,1764,0.865,1765,1.895,1767,2.887,1769,1.054,1770,1.929,1771,1.054,1772,1.054,1773,1.054,1774,0.988,1776,2.887,1778,4.675,1779,4.659,1782,0.725,1783,1.509,1784,0.701,1785,0.631,1786,0.725,1787,0.409,1883,0.326,1920,0.39,2035,0.362,2037,0.645,2058,4.32,2076,5.662,2087,2.051,2110,2.66,2111,0.409,2112,2.499,2164,4.819,2169,1.49,2272,0.612,2501,0.28,2601,2.789,2632,0.39,2772,1.759,3727,0.409,3902,0.409,4331,0.755,4443,0.701,4451,0.409,4984,3.185,4988,2.114,5966,0.701,6220,0.382,6274,3.005,6275,3.629,6276,3.005,6283,2.188,6284,1.654,6285,3.005,6286,2.008,6288,0.436,6289,2.66,6290,0.436,6291,0.436,6292,0.793,6293,5.641,6294,4.379,6295,2.108,6296,1.926,6297,1.49,6298,1.926,6299,1.808,6300,1.587,6303,2.246,6304,5.316,6305,1.808,6306,1.808,6307,3.005,6308,1.152,6309,1.152,6310,0.755,6311,0.793,6312,5.737,6313,1.227,6315,2.914,6316,1.419,6317,3.606,6318,0.844,6319,2.548,6320,3.818,6321,1.152,6322,3.818,6323,2.481,6324,0.436,6325,0.436,6326,1.587,6327,1.808,6328,1.808,6329,0.436,6330,6.166,6332,2.66,6333,0.409,6334,0.409,6335,0.844,6337,2.392,6338,2.548,6360,1.227,6368,0.844,6369,0.844,6392,0.436,6403,1.227,6425,1.587,6426,0.844,6427,0.844,6428,1.49,6431,0.409,6516,0.436,6517,2.834,6525,0.844,6531,0.436,6537,0.436,6538,0.436,6540,0.436,6544,0.927,6545,1.743,6546,1.743,6547,0.479,6548,0.927,6549,0.479,6550,0.927,6551,5.325,6552,0.927,6553,0.927,6554,1.348,6555,0.479,6556,0.479,6557,0.479,6558,0.927,6559,0.479,6560,0.479,6561,0.479,6562,0.479,6563,0.479,6564,1.743,6565,0.927,6566,0.479]],["component/87",[68,0.364]],["title/88-1",[0,14.998,13,20.297,74,27.594,75,21.351,76,14.082]],["name/88-1",[]],["text/88-1",[]],["component/88-1",[]],["title/88-2",[78,20.551,79,33.747,80,21.201,81,38.181,82,22.515,151,16.652]],["name/88-2",[]],["text/88-2",[]],["component/88-2",[]],["title/88-3",[81,42.418,82,25.013,84,26.825,85,45.188,152,19.936]],["name/88-3",[]],["text/88-3",[]],["component/88-3",[]],["title/88-4",[50,26.007,87,33.078,88,31.435]],["name/88-4",[]],["text/88-4",[]],["component/88-4",[]],["title/88",[69,32.638,70,40.913,71,26.078,72,24.852]],["name/88",[89,2.129]],["text/88",[0,3.375,13,3.439,50,0.974,59,1.199,61,1.299,70,6.504,74,2.998,75,4.269,76,2.386,78,5.32,79,8.316,80,5.757,81,5.466,82,6.032,84,5.753,85,4.909,87,4.361,88,2.657,95,1.752,96,2.309,97,1.239,99,3.1,100,6.038,101,6.436,102,4.771,103,8.608,104,3.556,105,4.608,106,3.034,107,8.048,108,9.589,109,1.482,110,1.626,111,1.285,112,2.176,113,1.087,114,1.805,115,3.556,116,1.752,117,1.869,118,4.305,119,4.238,120,2.389,121,5.421,122,6.826,123,3.596,124,4.847,125,3.208,126,4.611,127,4.954,128,2.16,129,1.072,130,2.176,131,2.823,132,4.102,133,5.606,134,3.172,135,2.043,136,3.317,137,4.972,138,3.736,139,2.043,140,2.043,141,4.102,142,6.394,143,4.102,144,4.102,145,2.389,146,3.771,147,4.34,148,2.218,149,2.389,150,2.389,151,2.01,152,2.166,153,2.657,154,4.909,155,2.883,156,1.183,157,1.417,158,1.482]],["component/88",[68,0.364]],["title/89",[1,57.756]],["name/89",[1,1.378]],["text/89",[1,6.758,2,3.493,3,3.215,4,2.411,5,2.857,6,3.086,7,4.162,8,2.603,9,3.086,10,3.44,11,4.224,12,2.51,13,2.323,14,2.584,15,3.44,16,3.907,17,3.864,18,3.235,19,4.122,20,3.121,21,3.167,22,3.783,23,3.021,24,2.945,25,6.474,26,4.105,27,2.903,28,4.774,29,5.939,30,5.171,31,4.836,32,6.093,33,6.602,34,5.443,35,5.171,36,5.678,37,5.678,38,5.678,39,5.97,40,4.497,41,5.171,42,5.374,43,5.171,44,3.746,45,5.171,46,4.051,47,3.952,48,4.527,49,3.952,50,2.315,51,5.171,52,4.623,53,2.836,54,5.171,55,2.889,56,3.952,57,2.875,58,3.415,59,2.849,60,3.053,61,4.435,62,3.953,63,3.823,64,2.043,65,3.037,66,2.931,67,2.799]],["component/89",[68,0.364]],["title/90-1",[0,19.276,128,33.579,163,29.455]],["name/90-1",[]],["text/90-1",[]],["component/90-1",[]],["title/90-2",[111,39.994,151,27.731]],["name/90-2",[]],["text/90-2",[]],["component/90-2",[]],["title/90-3",[126,31.714,152,25.623,164,38.355]],["name/90-3",[]],["text/90-3",[]],["component/90-3",[]],["title/90-4",[50,30.333,165,53.065]],["name/90-4",[]],["text/90-4",[]],["component/90-4",[]],["title/90-5",[123,31.856,167,36.336,168,48.185]],["name/90-5",[]],["text/90-5",[]],["component/90-5",[]],["title/90-6",[153,31.435,170,54.517,171,54.517]],["name/90-6",[]],["text/90-6",[]],["component/90-6",[]],["title/90-7",[14,25.396,147,28.808,173,45.439,174,28.808]],["name/90-7",[]],["text/90-7",[]],["component/90-7",[]],["title/90",[74,41.364,76,21.109]],["name/90",[175,2.129]],["text/90",[0,2.993,3,0.618,4,0.241,5,0.199,9,0.593,10,0.344,13,0.232,14,2.165,18,0.622,19,1.942,23,0.84,31,1.442,32,1.298,34,0.268,40,0.514,42,1.143,50,1.711,53,0.788,55,0.803,57,0.799,58,0.341,59,0.285,62,1.726,63,0.382,64,1.157,65,0.844,67,0.28,74,6.03,75,3.207,76,1.273,78,0.726,80,0.518,82,0.286,84,0.853,87,1.272,88,2.594,96,1.143,97,3.866,102,1.53,111,5.529,113,0.258,115,1.129,117,5.829,119,1.713,121,4.822,122,1.303,123,0.545,125,1.234,126,1.22,128,5.584,129,3.574,134,1.976,136,0.971,137,2.287,146,1.685,147,0.293,148,0.853,151,1.449,152,1.144,153,0.778,155,1.086,156,3.758,158,1.994,161,1.141,163,1.315,164,2.697,165,2.774,167,6.26,168,1.192,170,3.323,171,2.096,173,3.874,174,2.315,176,0.378,177,1.325,178,0.917,179,1.409,180,3.179,181,0.59,182,0.361,183,0.7,184,3.68,185,1.63,186,1.196,187,7.98,188,4.832,189,1.272,190,1.526,191,1.15,192,2.191,193,1.628,194,0.643,195,1.437,196,0.308,197,0.473,198,0.854,199,0.567,200,0.894,201,4.224,202,1.349,203,1.12,204,0.743,205,5.654,206,3.72,207,3.579,208,1.712,209,1.126,210,0.386,211,5.047,212,0.567,213,0.846,214,0.517,215,5.599,216,3.98,217,4.23,218,0.743,219,0.558,220,2.173,221,0.485,222,3.663,223,0.429,224,2.975,225,1.437,226,3.12,227,0.444,228,2.411,229,2.9,230,2.659,231,0.517,232,0.854,233,2.786,234,3.595,235,1.653,236,2.317,237,2.096,238,2.226,239,2.03,240,2.03,241,1.578,242,0.517,243,0.517,244,0.485,245,2.143,246,0.517,247,0.854,248,1.469,249,2.645,250,2.592,251,0.308,252,0.364,253,0.936,254,1.08,255,0.374,256,2.162,257,1.112,258,1.236,259,1.713,260,1.634,261,0.485,262,0.517,263,0.462,264,0.485,265,0.839,266,0.933,267,1.588,268,0.933,269,0.462,270,0.567,271,0.569,272,1.534,273,0.416,274,3.045,275,0.485,276,1.242,277,0.485,278,1.736,279,0.567,280,2.591,281,0.485,282,0.567,283,0.485,284,0.567,285,0.485,286,0.567,287,0.327,288,0.713,289,0.979,290,1.546,291,1.024,292,0.429,293,0.567,294,0.485,295,0.485,296,0.567,297,0.462,298,1.335,299,7.009,300,0.7,301,1.074,302,4.452,303,0.386,304,3.635,305,1.041,306,0.39,307,0.287,308,0.55,309,1.028,310,0.444,311,0.444,312,0.395,313,0.336,314,3.075,315,0.517,316,0.485,317,0.339,318,1.736,319,0.567,320,0.319,321,0.395,322,0.395,323,0.667,324,4.777,325,0.287,326,2.541,327,0.564,328,1.285,329,0.485,330,0.444,331,1.578,332,1.578,333,1.174,334,0.462,335,0.462,336,1.372,337,0.994,338,0.567,339,0.334,340,0.567,341,1.092,342,2.452,343,0.567,344,0.444,345,0.567,346,0.371,347,0.358,348,1.424,349,0.367,350,0.429,351,0.49,352,1.34,353,2.473,354,1.499,355,0.634,356,0.614,357,1.592,358,1.382,359,1.534,360,0.743,361,0.569,362,0.854,363,0.405,364,0.374,365,0.807,366,0.352,367,0.336,368,0.844,369,0.517,370,0.371,371,0.462,372,0.567,373,0.543,374,0.429,375,0.567,376,0.803,377,6.849,378,2.452,379,4.194,380,0.567,381,1.212,382,1.192,383,1.578,384,0.567,385,0.534,386,1.092,387,0.386,388,0.878,389,5.925,390,0.462,391,1.092,392,1.092,393,0.854,394,0.485,395,0.3,396,0.517,397,0.332,398,0.344,399,0.889,400,0.39,401,1.092,402,2.03,403,0.567,404,1.798,405,0.707,406,0.8,407,0.933,408,1.092,409,1.092,410,1.092,411,0.567,412,0.517,413,0.567,414,0.315,415,0.746,416,0.567,417,0.911,418,0.567,419,0.405,420,0.256,421,0.567,422,0.567,423,0.567,424,0.517,425,2.233,426,0.517,427,0.436,428,1.285,429,0.395,430,0.485,431,2.505,432,0.835,433,1.349,434,1.285,435,0.979,436,1.437,437,1.126,438,1.099,439,0.452,440,0.961,441,2.786,442,1.918,443,0.378,444,2.452,445,0.371,446,0.517,447,0.567,448,2.452,449,0.462,450,0.386,451,0.567,452,0.979,453,0.334,454,0.567,455,1.437,456,1.437,457,0.567,458,0.334,459,1.286,460,0.567,461,0.567,462,1.092,463,1.092,464,0.727,465,0.924,466,0.622,467,0.517,468,0.5,469,0.567,470,0.517,471,1.092,472,0.325,473,0.193,474,0.364,475,1.092,476,0.567,477,0.567,478,0.349,479,0.332,480,0.341,481,0.416,482,2.03,483,0.567,484,2.846,485,0.52,486,0.7,487,0.567,488,0.485,489,0.422,490,2.452,491,0.567,492,0.462,493,0.429,494,0.429,495,0.485,496,0.538,497,0.567,498,1.092,499,0.386,500,0.567,501,0.575,502,4.484,503,0.735,504,1.092,505,0.994,506,1.092,507,1.092,508,0.378,509,0.567,510,0.308,511,0.485,512,0.567,513,0.567]],["component/90",[68,0.364]],["title/91",[74,31.038,159,31.604,160,31.038,161,40.348]],["name/91",[162,2.129]],["text/91",[]],["component/91",[68,0.364]],["title/92-1",[0,22.482,355,43.207]],["name/92-1",[]],["text/92-1",[]],["component/92-1",[]],["title/92-2",[151,20.809,185,23.402,208,33.568,575,37.19]],["name/92-2",[]],["text/92-2",[]],["component/92-2",[]],["title/92-3",[76,18.099,152,25.623,575,42.494]],["name/92-3",[]],["text/92-3",[]],["component/92-3",[]],["title/92-4",[50,20.235,136,30.528,184,23.649,429,34.538,575,33.063]],["name/92-4",[]],["text/92-4",[]],["component/92-4",[]],["title/92-5",[76,15.84,123,27.88,575,37.19,645,45.439]],["name/92-5",[]],["text/92-5",[]],["component/92-5",[]],["title/92-6",[153,27.512,450,37.979,575,37.19,576,47.712]],["name/92-6",[]],["text/92-6",[]],["component/92-6",[]],["title/92-7",[147,23.053,220,19.347,259,19.68,429,31.088,575,45.498]],["name/92-7",[]],["text/92-7",[]],["component/92-7",[]],["title/92-8",[76,12.676,220,19.347,248,23.053,429,31.088,575,45.498]],["name/92-8",[]],["text/92-8",[]],["component/92-8",[]],["title/92-9",[430,54.517,575,42.494,680,38.64]],["name/92-9",[]],["text/92-9",[]],["component/92-9",[]],["title/92",[71,29.797,72,28.396,567,49.873]],["name/92",[567,1.665]],["text/92",[0,2.951,13,2.018,18,0.944,27,0.847,55,0.843,59,1.492,61,0.9,64,1.775,65,0.886,66,0.855,71,2.655,74,6.311,76,1.795,78,4.661,80,3.494,87,2.098,90,2.149,94,1.093,96,3.559,97,1.542,98,2.695,99,2.246,106,4.382,111,0.891,113,0.754,115,1.653,117,1.295,119,2.504,121,2.625,123,2.839,128,2.13,129,4.183,131,3.91,134,3.746,136,2.488,137,3.548,148,0.895,155,0.886,156,0.82,163,0.765,164,2.432,167,2.304,177,0.771,180,1.319,184,1.417,185,3.692,186,1.75,187,8.435,188,1.644,189,3.289,190,0.786,192,1.453,196,0.9,201,1.696,203,0.756,205,2.023,208,1.788,211,1.459,213,0.69,215,2.121,220,2.462,226,1.763,227,2.325,245,2.695,248,3.264,258,1.499,259,3.03,290,1.874,291,4.116,298,2.314,304,1.763,308,0.835,309,0.839,310,1.295,312,1.153,333,6.754,336,2.262,348,1.727,351,0.743,354,1.565,388,0.921,397,1.738,406,1.214,415,2.332,427,4.858,429,6.319,430,1.416,450,3.867,459,1.827,464,1.981,468,0.759,470,1.508,499,1.127,510,1.616,535,2.381,559,5.447,564,4.067,567,7.635,568,1.295,570,1.044,575,8.055,576,9.775,581,2.246,582,2.572,594,4.636,596,6.089,602,5.759,607,1.348,617,4.493,624,1.251,628,5.642,631,2.121,638,7.594,639,2.42,642,2.001,644,4.493,645,7.168,647,2.707,648,2.707,650,0.969,651,2.069,652,2.707,653,2.42,655,1.011,667,1.214,668,1.044,669,1.416,670,1.788,671,1.656,672,1.656,673,6.263,674,4.044,675,1.656,676,0.789,677,7.36,678,1.416,679,0.982,680,2.989,681,1.981,682,2.541,683,1.036,684,4.493,685,1.416,686,2.965,687,2.973,688,2.973,689,1.104,690,8.501,691,1.251,692,1.656,693,1.508,694,4.044,695,6.323,696,1.961,697,3.056,698,2.707,699,1.656,700,1.508,701,1.348,702,1.115,703,1.093,704,1.656]],["component/92",[68,0.364]],["title/93",[473,25.32,514,74.376]],["name/93",[515,2.129]],["text/93",[]],["component/93",[68,0.364]],["title/94-1",[0,22.482,355,43.207]],["name/94-1",[]],["text/94-1",[]],["component/94-1",[]],["title/94-2",[119,28.099,151,23.776,516,37.809]],["name/94-2",[]],["text/94-2",[]],["component/94-2",[]],["title/94-3",[185,26.74,516,37.809,537,48.185]],["name/94-3",[]],["text/94-3",[]],["component/94-3",[]],["title/94-4",[208,38.355,516,37.809,538,48.185]],["name/94-4",[]],["text/94-4",[]],["component/94-4",[]],["title/94-5",[351,28.599,516,37.809,539,51.919]],["name/94-5",[]],["text/94-5",[]],["component/94-5",[]],["title/94-6",[516,37.809,521,58.078,540,54.517]],["name/94-6",[]],["text/94-6",[]],["component/94-6",[]],["title/94-7",[111,34.29,516,37.809,541,51.919]],["name/94-7",[]],["text/94-7",[]],["component/94-7",[]],["title/94-8",[298,26.18,516,33.09,524,30.858,6567,55.81]],["name/94-8",[]],["text/94-8",[]],["component/94-8",[]],["title/94-9",[298,26.18,516,33.09,526,39.818,6568,60.138]],["name/94-9",[]],["text/94-9",[]],["component/94-9",[]],["title/94-10",[119,28.099,516,37.809,6569,68.715]],["name/94-10",[]],["text/94-10",[]],["component/94-10",[]],["title/94-11",[516,37.809,529,58.078,3107,56.135]],["name/94-11",[]],["text/94-11",[]],["component/94-11",[]],["title/94-12",[516,37.809,531,43.88,6570,68.715]],["name/94-12",[]],["text/94-12",[]],["component/94-12",[]],["title/94-13",[516,37.809,533,54.517,6571,68.715]],["name/94-13",[]],["text/94-13",[]],["component/94-13",[]],["title/94-14",[220,24.177,516,33.09,535,26.931,6572,60.138]],["name/94-14",[]],["text/94-14",[]],["component/94-14",[]],["title/94-15",[220,24.177,259,24.592,516,33.09,6573,60.138]],["name/94-15",[]],["text/94-15",[]],["component/94-15",[]],["title/94-16",[76,15.84,152,22.425,516,33.09,526,39.818]],["name/94-16",[]],["text/94-16",[]],["component/94-16",[]],["title/94-17",[76,15.84,111,30.01,351,25.029,1635,34.339]],["name/94-17",[]],["text/94-17",[]],["component/94-17",[]],["title/94-18",[0,19.276,524,35.259,1636,40.551]],["name/94-18",[]],["text/94-18",[]],["component/94-18",[]],["title/94-19",[151,23.776,524,35.259,1637,43.395]],["name/94-19",[]],["text/94-19",[]],["component/94-19",[]],["title/94-20",[152,25.623,524,35.259,1262,43.395]],["name/94-20",[]],["text/94-20",[]],["component/94-20",[]],["title/94-21",[526,39.818,542,31.801,543,32.861,2554,43.649]],["name/94-21",[]],["text/94-21",[]],["component/94-21",[]],["title/94",[71,29.797,72,28.396,516,37.809]],["name/94",[516,1.262]],["text/94",[0,3.11,4,0.339,5,0.756,8,0.366,10,0.484,13,2.952,15,0.484,17,0.544,19,0.931,34,1.021,42,0.45,50,1.335,52,3.059,57,0.405,59,1.083,61,0.823,64,0.287,68,0.21,71,1.529,74,6.918,75,1.984,76,2.356,78,1.506,80,4.323,90,2.716,92,0.527,96,1.215,98,3.073,100,0.544,106,3.188,111,5.741,115,0.444,119,2.98,121,3.466,128,2.811,129,4.135,131,0.55,133,0.57,134,2.496,137,0.938,147,2.38,151,2.767,152,0.321,155,0.427,156,1.358,164,3.407,167,4.341,174,1.939,177,1.005,180,2.214,181,0.432,183,0.512,184,3.334,185,3.272,187,8.383,188,3.437,189,4.217,191,0.375,196,0.434,201,2.092,202,0.683,203,0.365,205,1.469,206,1.395,208,1.649,210,0.544,211,3.739,215,4.648,216,1.909,217,0.57,219,0.774,220,0.935,226,0.898,230,2.228,232,0.625,245,3.073,259,1.208,290,0.504,291,0.763,298,2.799,300,0.512,302,3.976,304,2.228,307,0.405,309,0.405,313,0.474,314,1.582,320,0.45,323,0.488,327,1.114,335,2.664,348,0.88,351,3.137,357,1.534,361,0.416,369,0.728,376,0.406,385,0.74,388,1.2,397,2.697,406,3.08,414,0.444,415,2.678,427,2.887,429,2.615,435,1.339,436,0.728,452,0.495,459,1.478,480,1.298,486,0.512,495,0.683,499,0.544,508,0.532,516,6.657,521,4.862,524,3.299,526,6.657,529,3.422,531,2.252,533,2.798,535,3.263,542,0.455,543,0.892,544,4.616,545,0.799,546,0.799,547,0.425,548,1.294,549,1.289,550,0.683,551,0.604,552,0.504,553,0.65,554,0.625,555,1.514,556,0.563,557,0.512,558,0.484,559,6.105,560,0.625,561,0.416,562,0.604,563,0.504,564,3.333,565,0.532,566,1.757,567,7.81,568,0.625,569,0.625,570,0.504,571,0.586,572,0.586,573,1.502,574,4.989,575,4.808,576,3.942,577,0.423,578,0.378,579,0.544,580,0.728,581,1.144,582,0.416,583,0.604,584,3.592,585,4.202,586,3.757,587,3.272,588,3.272,589,3.592,590,5.11,591,0.625,592,0.799,593,0.799,594,1.582,595,0.728,596,4.888,597,0.423,598,1.23,599,0.408,600,0.799,601,0.799,602,1.379,603,0.728,604,0.504,605,0.65,606,0.439,607,2.232,608,0.604,609,2.158,610,0.799,611,0.799,612,0.65,613,0.65,614,1.757,615,0.799,616,0.594,617,1.379,618,0.728,619,0.586,620,0.799,621,1.294,622,0.799,623,1.379,624,0.604,625,1.514,626,0.799,627,0.799,628,1.137,629,0.586,630,0.799,631,2.335,632,2.158,633,0.544,634,0.625,635,1.769,636,3.757,637,3.757,638,8.645,639,2.232,640,1.798,641,1.379,642,4.017,643,1.514,644,5.434,645,6.043,646,3.757,647,3.422,648,3.422,649,0.989,650,2.197,651,2.615,652,3.422,653,3.059,654,1.438,655,0.924,656,1.042,657,1.262,658,1.514,659,0.532,660,0.799,661,0.532,662,0.728,663,0.614,664,0.799]],["component/94",[68,0.364]],["title/95-1",[0,19.276,87,33.078,705,44.389]],["name/95-1",[]],["text/95-1",[]],["component/95-1",[]],["title/95-2",[151,23.776,325,32.297,438,44.389]],["name/95-2",[]],["text/95-2",[]],["component/95-2",[]],["title/95-3",[97,33.078,152,25.623,705,44.389]],["name/95-3",[]],["text/95-3",[]],["component/95-3",[]],["title/95",[78,29.344,159,36.111,249,43.395]],["name/95",[706,2.129]],["text/95",[27,4.047,34,3.743,59,5.138,69,4.629,71,3.699,72,3.525,76,2.246,78,4.711,87,5.31,97,5.31,101,4.629,102,5.505,115,5.694,119,3.488,129,3.55,178,4.598,192,3.868,213,4.266,249,6.967,298,3.713,325,4.009,365,4.047,438,8.352,606,6.596,657,4.629,686,7.505,705,7.899,712,5.981,713,6.251,714,7.045,715,6.767]],["component/95",[68,0.364]],["title/96-1",[0,19.276,101,37.293,302,42.494]],["name/96-1",[]],["text/96-1",[]],["component/96-1",[]],["title/96-2",[101,37.293,102,34.29,151,23.776]],["name/96-2",[]],["text/96-2",[]],["component/96-2",[]],["title/96-3",[101,37.293,103,49.873,152,25.623]],["name/96-3",[]],["text/96-3",[]],["component/96-3",[]],["title/96-4",[50,26.007,101,37.293,107,44.389]],["name/96-4",[]],["text/96-4",[]],["component/96-4",[]],["title/96-5",[101,37.293,108,51.919,123,31.856]],["name/96-5",[]],["text/96-5",[]],["component/96-5",[]],["title/96-6",[65,29.85,153,27.512,716,37.19,717,43.649]],["name/96-6",[]],["text/96-6",[]],["component/96-6",[]],["title/96-7",[65,29.85,147,28.808,717,43.649,718,37.19]],["name/96-7",[]],["text/96-7",[]],["component/96-7",[]],["title/96-8",[65,26.538,248,25.611,717,38.805,718,33.063,719,29.628]],["name/96-8",[]],["text/96-8",[]],["component/96-8",[]],["title/96-9",[65,26.538,366,30.771,680,30.065,717,38.805,719,29.628]],["name/96-9",[]],["text/96-9",[]],["component/96-9",[]],["title/96-10",[298,29.913,438,44.389,628,33.579]],["name/96-10",[]],["text/96-10",[]],["component/96-10",[]],["title/96-11",[228,30.771,300,31.831,382,37.492,654,33.063,722,38.805]],["name/96-11",[]],["text/96-11",[]],["component/96-11",[]],["title/96-12",[87,25.737,92,32.736,405,32.12,724,45.188,725,37.492]],["name/96-12",[]],["text/96-12",[]],["component/96-12",[]],["title/96",[72,28.396,78,29.344,114,48.185]],["name/96",[726,2.129]],["text/96",[2,1.486,13,2.963,19,3.896,28,2.346,34,1.957,55,1.229,64,1.955,65,5.71,71,1.128,74,4.395,75,3.637,76,2.531,78,5.812,80,3.439,82,3.984,84,6.327,87,1.253,92,1.593,96,3.624,97,4.831,101,7.44,102,5.356,103,7.285,104,2.731,105,2.064,106,1.359,107,6.484,108,7.864,109,1.498,110,2.817,111,1.298,114,5.474,117,1.889,128,2.18,130,2.199,157,2.454,158,1.498,167,2.359,177,1.124,185,1.736,200,1.367,201,1.736,203,2.941,209,1.723,213,1.006,228,1.498,249,1.643,251,2.25,256,6.566,298,2.549,300,1.549,302,6.437,309,1.223,320,1.359,325,2.752,353,3.896,354,5.385,366,3.994,367,1.432,368,2.214,382,1.825,438,6.206,559,3.202,599,1.235,711,2.291,716,3.621,717,7.285,718,6.207,719,6.248,722,3.238,724,2.199,725,3.128,727,4.14,728,1.889,729,1.966,730,6.737,731,6.724,732,1.796,733,1.24,734,5.638,735,1.723,736,1.925,737,1.825,738,1.133,739,1.278,740,4.105,741,3.37,742,2.415,743,4.14,744,3.058,745,3.621,746,1.855,747,1.925,748,1.343,749,1.593,750,3.539,751,2.848,752,1.966,753,1.609]],["component/96",[68,0.364]],["title/97",[71,26.078,72,24.852,78,25.681,754,43.649]],["name/97",[755,2.129]],["text/97",[0,3.307,4,1.18,10,3.65,13,3.216,19,2.046,42,2.624,64,3.253,68,0.729,75,2.592,76,0.789,78,5.402,80,1.319,94,3.076,102,4.227,113,1.264,119,1.224,121,5.423,124,4.75,134,4.491,137,4.553,146,1.456,151,1.036,155,3.773,167,1.583,178,2.709,180,1.233,181,1.502,182,1.767,183,1.782,184,1.324,186,1.636,188,3.858,189,1.242,193,2.361,211,4.843,213,1.943,219,1.42,220,3.056,251,1.51,252,1.782,253,1.647,259,4.348,290,1.752,291,3.037,305,1.833,309,4.31,327,1.434,357,2.608,373,1.382,376,1.414,387,5.35,390,2.262,414,1.545,438,4.194,459,1.255,465,1.264,466,4.48,468,2.137,473,0.946,481,3.418,485,1.324,486,2.991,501,2.455,531,3.208,556,1.957,558,2.825,564,2.783,565,3.107,605,3.796,619,4.416,628,2.455,635,1.502,650,2.727,683,1.737,697,2.099,707,5.856,754,9.274,756,2.778,757,4.663,758,2.375,759,2.778,760,2.099,761,1.494,762,2.468,763,2.262,764,2.53,765,7.491,766,7.055,767,2.778,768,7.055,769,7.055,770,2.468,771,6.024,772,6.024,773,2.778,774,2.826,775,2.778,776,2.778,777,3.327,778,3.707,779,5.518,780,1.957,781,3.523,782,2.593,783,2.778,784,2.315,785,6.024,786,1.51,787,2.778,788,2.778,789,1.982,790,1.737,791,4.663,792,1.934,793,4.663,794,2.262,795,4.663,796,4.663,797,4.663,798,4.246,799,3.937,800,4.663,801,1.782,802,1.427,803,2.778,804,1.625,805,2.778,806,5.487,807,2.53,808,1.851,809,6.425,810,6.425,811,3.246,812,1.303,813,2.53,814,2.778,815,2.778,816,3.647,817,2.468,818,2.231,819,2.037,820,2.375,821,4.663,822,1.891,823,1.51]],["component/97",[68,0.364]],["title/98-1",[0,19.276,159,36.111,716,42.494]],["name/98-1",[]],["text/98-1",[]],["component/98-1",[]],["title/98-2",[151,23.776,552,40.205,825,54.517]],["name/98-2",[]],["text/98-2",[]],["component/98-2",[]],["title/98-3",[152,25.623,501,33.579,716,42.494]],["name/98-3",[]],["text/98-3",[]],["component/98-3",[]],["title/98-4",[552,40.205,827,58.078,1635,39.236]],["name/98-4",[]],["text/98-4",[]],["component/98-4",[]],["title/98-5",[297,51.919,552,40.205,1636,40.551]],["name/98-5",[]],["text/98-5",[]],["component/98-5",[]],["title/98-6",[87,33.078,830,40.91,1637,43.395]],["name/98-6",[]],["text/98-6",[]],["component/98-6",[]],["title/98-7",[76,18.099,111,34.29,1262,43.395]],["name/98-7",[]],["text/98-7",[]],["component/98-7",[]],["title/98-8",[50,26.007,473,21.709,716,42.494]],["name/98-8",[]],["text/98-8",[]],["component/98-8",[]],["title/98-9",[177,29.682,833,58.078,2564,43.395]],["name/98-9",[]],["text/98-9",[]],["component/98-9",[]],["title/98-10",[177,29.682,835,58.078,2565,46.748]],["name/98-10",[]],["text/98-10",[]],["component/98-10",[]],["title/98-11",[177,29.682,837,58.078,2566,53.131]],["name/98-11",[]],["text/98-11",[]],["component/98-11",[]],["title/98",[71,29.797,72,28.396,716,42.494]],["name/98",[716,1.419]],["text/98",[0,3.417,2,0.311,4,0.416,7,0.371,8,0.232,13,0.4,14,0.23,19,1.875,23,1.731,27,1.322,32,1.175,34,0.239,50,2.408,53,1.924,55,0.498,57,1.125,58,0.588,59,0.491,60,0.272,61,0.532,62,1.076,63,1.741,64,0.352,66,0.505,67,0.25,71,1.038,74,1.81,75,0.218,76,1.508,78,3.415,82,0.924,84,4.68,87,2.528,90,0.366,96,1.455,97,2.276,101,2.082,102,1.39,111,4.12,113,2.32,115,0.282,117,1.11,118,0.659,119,1.291,121,2.937,124,1.972,128,1.875,129,2.952,131,0.348,134,3.214,136,0.873,137,4.806,146,1.164,148,0.991,151,2.857,152,3.125,155,1.567,156,0.907,157,3.994,163,1.353,164,1.762,167,2.029,173,0.412,174,0.946,177,3.721,178,2.397,179,0.251,182,0.622,184,3.211,185,1.365,186,0.836,187,1.954,188,4.774,189,0.226,190,0.24,191,0.459,192,1.085,195,0.461,200,0.287,201,1.84,202,0.433,203,0.447,205,1.247,206,1.13,207,0.361,208,0.304,210,0.345,211,2.276,213,0.925,215,5.548,216,6.084,218,0.966,219,0.5,220,2.302,224,1.317,230,1.087,232,1.433,238,3.432,249,1.247,251,0.532,253,0.58,254,2.593,255,0.334,256,0.544,271,0.264,280,2.924,287,3.067,289,1.137,290,0.895,291,1.64,292,0.383,297,8.12,298,1.936,300,3.904,302,4.587,305,1.465,306,0.348,307,0.256,309,0.256,313,0.842,318,0.433,321,0.988,326,0.698,327,0.261,329,1.899,336,1.82,346,0.331,351,0.439,352,0.334,353,2.034,355,0.294,356,0.799,357,0.283,358,1.511,360,1.247,361,1.348,368,1.188,370,0.639,373,0.252,388,1.98,390,2.385,398,0.593,400,2.45,406,1.628,440,0.446,465,1.481,466,2.906,473,0.997,479,0.296,480,0.304,485,0.466,486,0.628,493,3.683,501,0.747,508,0.337,543,0.576,552,7.583,560,0.765,564,2.027,565,0.337,570,1.156,578,0.239,582,0.955,598,0.288,606,0.278,607,1.492,616,0.377,628,5.048,656,0.244,668,0.319,683,0.317,686,4.047,689,0.337,705,0.352,716,6.033,725,5.511,731,0.352,739,2.323,744,3.323,745,1.723,746,0.389,748,0.282,753,4.387,761,0.763,764,0.461,777,0.361,790,0.317,822,1.994,825,4.543,827,5.996,830,1.176,833,5.699,835,4.223,837,2.964,838,0.836,839,0.412,840,0.412,841,1.214,842,0.891,843,0.461,844,0.506,845,0.352,846,0.357,847,1.42,848,3.772,849,4.223,850,2.022,851,2.505,852,1.899,853,0.412,854,0.371,855,2.245,856,0.506,857,4.402,858,4.127,859,0.666,860,0.978,861,0.836,862,0.461,863,0.461,864,0.433,865,0.836,866,0.978,867,2.265,868,0.506,869,5.099,870,0.461,871,0.371,872,2.712,873,0.946,874,4.259,875,2.023,876,0.461,877,1.156,878,1.344,879,1.344,880,1.385,881,1.344,882,0.334,883,5.099,884,4.388,885,4.388,886,4.388,887,3.254,888,3.432,889,4.388,890,4.388,891,3.997,892,1.42,893,1.42,894,4.388,895,4.388,896,1.214,897,1.584,898,0.612,899,0.352,900,4.127,901,0.307,902,0.506,903,2.09,904,2.459,905,3.254,906,4.388,907,0.978,908,2.023,909,2.586,910,0.978,911,5.717,912,0.978,913,1.833,914,0.978,915,1.567,916,1.799,917,2.221,918,3.561,919,3.254,920,2.221,921,1.42,922,6.258,923,3.254,924,2.586,925,2.865,926,2.785,927,1.42,928,1.42,929,0.506,930,1.833,931,1.137,932,0.978,933,0.978,934,0.978,935,0.978,936,0.978,937,0.978,938,0.978,939,0.978,940,0.597,941,0.506,942,0.506,943,0.698,944,0.433,945,0.433,946,0.506,947,0.506,948,0.412,949,0.396,950,1.929,951,1.741,952,1.198,953,1.833,954,4.874,955,0.383,956,0.946,957,0.978,958,0.797,959,0.978,960,0.978,6391,0.366]],["component/98",[68,0.364]],["title/99-1",[0,19.276,180,28.296,226,37.809]],["name/99-1",[]],["text/99-1",[]],["component/99-1",[]],["title/99-2",[128,33.579,151,23.776,163,29.455]],["name/99-2",[]],["text/99-2",[]],["component/99-2",[]],["title/99-3",[152,29.885,222,51.773]],["name/99-3",[]],["text/99-3",[]],["component/99-3",[]],["title/99-4",[50,26.007,163,29.455,164,38.355]],["name/99-4",[]],["text/99-4",[]],["component/99-4",[]],["title/99-5",[123,31.856,432,33.752,434,51.919]],["name/99-5",[]],["text/99-5",[]],["component/99-5",[]],["title/99-6",[153,31.435,351,28.599,830,40.91]],["name/99-6",[]],["text/99-6",[]],["component/99-6",[]],["title/99-7",[102,30.01,147,28.808,351,25.029,830,35.803]],["name/99-7",[]],["text/99-7",[]],["component/99-7",[]],["title/99-8",[76,15.84,220,24.177,248,28.808,259,24.592]],["name/99-8",[]],["text/99-8",[]],["component/99-8",[]],["title/99-9",[220,27.625,288,41.669,680,38.64]],["name/99-9",[]],["text/99-9",[]],["component/99-9",[]],["title/99-10",[28,32.112,628,39.164]],["name/99-10",[]],["text/99-10",[]],["component/99-10",[]],["title/99",[129,33.356,1333,63.585]],["name/99",[1334,2.129]],["text/99",[0,1.041,4,0.361,5,0.298,8,0.736,9,0.462,13,0.934,19,1.768,31,0.431,34,0.402,40,0.4,42,1.627,50,2.645,53,0.425,55,1.161,57,0.813,59,0.427,61,0.462,63,0.572,64,2.429,67,0.419,69,0.497,70,1.177,74,1.608,75,3.459,76,1.119,78,2.984,79,0.642,80,0.404,82,0.81,84,0.868,88,3.674,102,2.592,103,0.665,104,1.059,107,0.592,113,0.387,115,0.473,119,0.708,121,5.747,122,0.545,123,0.425,124,0.572,125,0.665,128,4.85,129,4.018,133,0.606,134,2.294,137,5.752,138,0.774,139,0.727,140,0.727,147,0.439,151,1.078,154,0.774,155,1.841,163,1.821,164,5.223,167,5.499,168,1.213,174,0.439,177,0.747,179,0.421,180,2.468,181,0.46,182,2.508,183,1.03,184,0.405,187,1.725,188,4.109,190,1.083,193,0.431,194,0.501,201,2.471,203,1.042,204,0.578,205,1.553,206,2.831,207,0.606,208,0.511,210,0.578,211,3.551,213,0.354,219,0.435,220,3.229,222,4.102,223,0.642,224,3.087,226,3.298,228,4.342,229,4.239,230,3.087,233,4.072,234,3.643,235,4.239,236,4.239,237,3.371,238,4.072,245,1.07,248,0.439,249,0.578,250,0.774,253,0.504,254,0.854,256,1.269,258,2.219,259,2.294,260,2.294,261,0.727,262,2.079,263,0.692,264,0.727,265,1.753,266,1.951,267,3.084,268,1.951,269,1.307,271,0.443,272,2.185,273,0.623,274,4.121,275,0.727,276,2.229,277,0.727,278,2.472,280,2.294,281,0.727,283,0.727,285,0.727,287,0.491,288,2.577,289,1.793,290,0.536,291,1.988,292,0.642,294,0.727,295,0.727,297,0.692,304,0.504,308,0.429,321,0.592,329,0.727,346,1.889,351,3.14,353,0.419,357,0.476,365,0.435,388,0.473,414,0.473,425,2.633,432,2.087,434,3.211,435,0.527,439,0.678,450,1.093,452,0.996,455,0.774,456,0.774,465,1.316,466,1.3,468,0.39,485,0.765,486,0.545,501,0.448,533,0.727,543,0.501,556,0.599,564,0.393,565,0.566,598,0.484,628,0.448,650,3.446,668,0.536,691,0.642,693,1.463,696,3.888,714,0.585,738,0.399,763,5.7,777,0.606,789,0.606,801,0.545,806,1.463,830,3.34,852,0.727,897,0.606,916,0.888,955,0.642,1060,1.256,1143,1.393,1172,0.561,1173,0.692,1182,0.578,1251,2.53,1274,0.585,1326,0.653,1333,2.472,1335,0.585,1336,0.606,1337,0.536,1338,0.555,1339,0.531,1340,0.85,1341,1.463,1342,0.774,1343,0.774,1344,0.774,1345,0.774,1346,0.774,1347,0.774,1348,0.678,1349,1.606,1350,1.606,1351,2.891,1352,4.102,1353,4.609,1354,3.442,1355,0.642,1356,1.714,1357,1.373,1358,0.85,1359,2.891,1360,2.891,1361,3.442,1362,2.891,1363,2.282,1364,2.891,1365,3.968,1366,1.785,1367,3.442,1368,2.601,1369,4.849,1370,0.85,1371,1.606,1372,1.213,1373,1.021,1374,0.727,1375,0.727,1376,0.642,1377,1.725,1378,2.282,1379,1.725,1380,1.606,1381,0.85,1382,1.606,1383,0.692,1384,0.774,1385,0.85,1386,0.85,1387,1.606,1388,1.628,1389,0.85,1390,1.606,1391,0.85,1392,1.506,1393,0.578,1394,0.85,1395,0.85,1396,2.282,1397,0.85,1398,0.85,1399,0.665,1400,0.85,1401,1.463,1402,0.85,1403,0.85,1404,0.85,1405,0.85,1406,0.85,1407,0.85,1408,0.606,1409,0.85,1410,0.85,1411,0.85,1412,0.85,1413,1.606,1414,0.85,1415,0.85,1416,1.951,1417,0.85,1418,0.85,1419,0.85,1420,0.85,1421,0.85,1422,0.85,1423,0.85,1424,0.85,1425,0.85,1426,0.85,1427,0.85,1428,0.85,1429,0.85,1430,0.85,1431,0.85,1432,0.85,1433,0.85,1434,0.85,1435,0.85,1436,0.85,1437,0.85,1438,0.85,1439,0.85,1440,0.85,1441,0.85,1442,1.093,1443,0.665,1444,0.85,1445,0.665,1446,0.85,1447,1.606,1448,0.642,1449,0.85,1450,7.545,1451,0.85,1452,0.85,1453,0.85,1454,0.85,1455,0.85,1456,0.774,1457,0.85,1458,0.85,1459,0.85,1460,0.85,1461,0.85,1462,0.85,1463,0.85,1464,0.85,1465,0.85,1466,0.85,1467,0.85,1468,0.85,1469,0.85,1470,0.85,1471,0.85,1472,0.85,1473,0.665,1474,0.85,1475,0.85,1476,0.85,1477,0.85,1478,7.855,1479,0.85,1480,0.85,1481,0.85,1482,0.85,1483,1.606,1484,0.592,1485,1.606,1486,0.692,1487,1.606,1488,1.606,1489,1.606,1490,1.606,1491,1.606,1492,0.774,1493,0.487,1494,0.727,1495,0.606,1496,0.298,1497,0.615,1498,0.85,1499,0.85,1500,0.85,1501,0.85,1502,0.85,1503,0.85,1504,0.85,1505,0.85,1506,0.85,1507,0.85,1508,0.85,1509,0.85,1510,0.85,1511,0.85,1512,0.85,1513,0.85,1514,0.85,1515,0.85,1516,0.85,1517,0.85,1518,0.85,1519,0.85,1520,0.85,1521,0.85,1522,0.85,1523,0.85,1524,0.85,1525,0.85,1526,0.85,1527,0.85,1528,0.85,1529,0.85,1530,0.85,1531,0.85,1532,0.85,1533,0.85,1534,0.85,1535,0.85,1536,0.85,1537,0.85,1538,0.85,1539,0.85,1540,0.85,1541,0.85,1542,0.85,1543,0.85,1544,0.85,1545,0.85,1546,0.85,1547,0.85,1548,0.85,1549,0.85,1550,0.85,1551,0.85,1552,0.85,1553,0.85,1554,0.85,1555,0.85,1556,0.85,1557,0.85,1558,0.85,1559,0.85,1560,0.85,1561,0.85,1562,0.85,1563,0.85,1564,0.85,1565,0.85,1566,0.85,1567,0.85,1568,1.177,1569,0.85,1570,0.85,1571,0.85,1572,0.85,1573,0.85,1574,0.85,1575,0.85,1576,0.85,1577,0.85,1578,0.85,1579,0.85,1580,0.85,1581,0.85,1582,0.85,1583,0.85,1584,0.85,1585,0.85,1586,0.85,1587,0.85,1588,0.85,1589,0.85,1590,0.85,1591,0.85,1592,0.85,1593,0.85,1594,0.85,1595,0.85,1596,0.85,1597,0.85,1598,0.85,1599,0.85,1600,0.85,1601,0.85,1602,0.85,1603,0.85,1604,0.85,1605,0.85,1606,0.85,1607,0.85,1608,0.85,1609,0.85,1610,0.85,1611,0.85,1612,0.85,1613,0.85,1614,0.85,1615,0.85,1616,0.85,1617,0.85,1618,0.85,1619,0.85,1620,0.85,1621,0.85,1622,0.85,1623,0.85,1624,0.85,1625,0.85,1626,0.85,1627,0.85,1628,0.85,1629,0.85,1630,0.85,1631,0.421,1632,0.85,1633,0.653]],["component/99",[68,0.364]],["title/100",[71,29.797,72,28.396,824,58.078]],["name/100",[824,1.939]],["text/100",[]],["component/100",[68,0.364]],["title/101-1",[0,22.482,996,47.714]],["name/101-1",[]],["text/101-1",[]],["component/101-1",[]],["title/101-2",[151,23.776,969,46.748,973,38.078]],["name/101-2",[]],["text/101-2",[]],["component/101-2",[]],["title/101-3",[152,29.885,997,53.065]],["name/101-3",[]],["text/101-3",[]],["component/101-3",[]],["title/101-4",[68,19.528,1635,45.762]],["name/101-4",[]],["text/101-4",[]],["component/101-4",[]],["title/101-5",[998,60.556,1636,47.296]],["name/101-5",[]],["text/101-5",[]],["component/101-5",[]],["title/101-6",[50,26.007,68,16.743,999,48.185]],["name/101-6",[]],["text/101-6",[]],["component/101-6",[]],["title/101-7",[60,39.994,123,37.155]],["name/101-7",[]],["text/101-7",[]],["component/101-7",[]],["title/101-8",[60,30.01,761,30.01,1001,43.649,2569,49.128]],["name/101-8",[]],["text/101-8",[]],["component/101-8",[]],["title/101-9",[60,43.33,1002,33.568,6574,60.138]],["name/101-9",[]],["text/101-9",[]],["component/101-9",[]],["title/101-10",[60,30.01,1002,33.568,1003,45.439,6575,60.138]],["name/101-10",[]],["text/101-10",[]],["component/101-10",[]],["title/101-11",[60,30.01,1002,33.568,1004,45.439,6576,60.138]],["name/101-11",[]],["text/101-11",[]],["component/101-11",[]],["title/101-12",[24,28.949,58,33.568,60,30.01,2573,49.128]],["name/101-12",[]],["text/101-12",[]],["component/101-12",[]],["title/101-13",[60,30.01,153,27.512,365,28.532,1006,32.638]],["name/101-13",[]],["text/101-13",[]],["component/101-13",[]],["title/101-14",[147,28.808,307,28.266,415,26.388,966,34.612]],["name/101-14",[]],["text/101-14",[]],["component/101-14",[]],["title/101-15",[248,32.917,808,42.494,966,39.548]],["name/101-15",[]],["text/101-15",[]],["component/101-15",[]],["title/101-16",[394,47.712,473,19,680,33.817,1007,42.878]],["name/101-16",[]],["text/101-16",[]],["component/101-16",[]],["title/101-17",[19,21.659,628,33.579,1008,51.919]],["name/101-17",[]],["text/101-17",[]],["component/101-17",[]],["title/101-18",[654,42.494,998,51.919,1009,45.497]],["name/101-18",[]],["text/101-18",[]],["component/101-18",[]],["title/101-19",[203,29.125,535,30.772,6577,68.715]],["name/101-19",[]],["text/101-19",[]],["component/101-19",[]],["title/101",[468,34.096,995,53.065]],["name/101",[468,0.539,995,0.84]],["text/101",[2,0.414,4,1.206,5,0.828,7,0.494,8,1.864,10,1.433,12,3.163,13,0.967,14,2.011,15,0.78,16,0.463,17,0.458,18,2.706,19,2.923,20,1.561,21,0.918,23,0.685,24,2.463,25,4.2,26,0.487,27,0.945,28,1.021,29,0.619,33,1.104,34,0.874,39,0.421,53,2.372,55,0.343,56,2.283,57,1.197,58,0.405,59,1.646,60,5.587,61,1.544,62,1.97,64,0.463,66,1.22,68,1.724,72,0.3,75,1.017,76,1.348,80,0.32,92,0.849,106,0.379,113,0.306,119,1.791,134,0.567,136,0.792,137,0.804,146,1.488,148,1.278,156,0.333,157,1.096,177,0.313,178,4.705,181,0.696,184,1.563,185,2.465,186,1.672,188,5.138,189,0.301,190,0.878,191,1.538,192,1.156,193,0.652,196,0.366,200,0.381,201,0.282,203,0.844,209,0.481,210,0.458,211,1.609,213,2.342,219,0.344,254,0.358,255,0.849,256,0.375,258,0.34,271,1.922,272,0.509,287,1.639,289,0.798,304,0.399,305,0.849,307,2.238,308,1.192,309,0.652,313,1.096,322,0.469,323,0.411,325,1.197,327,0.348,339,1.931,347,0.812,348,0.391,364,0.444,365,0.945,368,0.36,373,0.919,385,2.159,394,6.804,398,0.78,414,0.375,415,1.922,417,0.389,435,0.798,453,0.758,458,0.397,459,1.283,464,0.858,465,1.677,466,1.347,468,0.309,473,0.967,478,1.747,479,4.815,480,0.405,485,0.614,501,1.245,503,0.453,510,0.7,535,1.779,542,4.076,549,1.412,551,0.509,564,1.092,571,0.494,577,0.356,578,1.922,579,1.258,608,0.509,612,0.548,616,0.501,628,0.355,634,1.007,635,1.278,656,0.325,657,1.081,663,0.989,676,0.614,683,0.421,685,0.576,689,0.449,691,0.973,703,0.444,705,0.469,713,1.129,738,1.332,746,0.517,748,0.375,749,1.22,761,1.271,762,1.251,763,3.001,770,0.356,778,0.414,782,0.375,804,1.081,808,1.576,811,0.896,812,0.604,818,3.334,822,0.458,848,0.444,853,0.548,859,1.258,871,0.494,882,3.878,898,0.805,899,0.896,945,1.1,963,0.494,966,5.023,968,0.661,969,0.494,970,0.72,973,0.402,976,0.487,977,0.469,979,0.509,981,0.576,982,1.666,985,0.537,988,0.576,989,1.58,990,1.007,996,0.432,997,3.153,998,8.103,999,1.397,1001,5.864,1002,3.819,1003,3.598,1004,2.67,1006,2.958,1007,5.045,1008,5.824,1009,2.339,1011,0.674,1012,5.359,1013,0.944,1014,0.812,1015,0.494,1016,0.805,1017,2.174,1018,0.876,1019,1.932,1020,0.973,1021,2.67,1022,0.527,1023,0.674,1024,0.481,1025,3.523,1026,3.486,1027,1.954,1028,6.518,1029,0.674,1030,0.674,1031,2.021,1032,2.364,1033,0.907,1034,4.01,1035,3.858,1036,0.674,1037,0.548,1038,0.674,1039,0.674,1040,0.674,1041,0.613,1042,0.674,1043,0.548,1044,0.674,1045,2.84,1046,0.674,1047,0.674,1048,0.674,1049,0.674,1050,0.674,1051,0.674,1052,0.576,1053,0.674,1054,0.674,1055,0.674,1056,0.561,1057,0.674,1058,0.548,1059,0.674,1060,0.527,1061,0.674,1062,0.674,1063,0.674,1064,0.674,1065,0.674,1066,0.674,1067,1.287,1068,0.674,1069,0.674,1070,0.674,1071,1.787,1072,0.674,1073,0.494,1074,1.466,1075,0.674,1076,1.849,1077,1.287,1078,0.674,1079,2.364,1080,0.674,1081,0.674,1082,0.613,1083,0.674,1084,0.674,1085,2.803,1086,0.674,1087,0.674,1088,0.674,1089,0.674,1090,2.153,1091,1.007,1092,0.674,1093,0.674,1094,0.458,1095,0.674,1096,1.531,1097,1.287,1098,1.287,1099,1.172,1100,2.428,1101,2.428,1102,2.428,1103,2.428,1104,2.428,1105,0.576,1106,5.038,1107,3.533,1108,2.84,1109,1.1,1110,4.109,1111,0.674,1112,2.002,1113,1.319,1114,2.364,1115,2.364,1116,1.375,1117,0.674,1118,2.05,1119,3.152,1120,0.674,1121,0.425,1122,5.621,1123,1.849,1124,3.357,1125,4.065,1126,1.287,1127,1.849,1128,0.849,1129,0.674,1130,0.674,1131,1.58,1132,0.674,1133,1.287,1134,0.444,1135,0.674,1136,0.674,1137,0.548,1138,0.674,1139,0.548,1140,0.576,1141,0.576,1142,0.548,1143,2.698,1144,1.1,1145,2.364,1146,1.287,1147,0.674,1148,1.22,1149,0.487,1150,1.287,1151,0.674,1152,0.973,1153,0.798,1154,0.819,1155,5.789,1156,0.501,1157,0.548,1158,0.613,1159,0.527,1160,0.639,1161,0.841,1162,2.986,1163,2.364,1164,1.041,1165,3.279,1166,0.674,1167,0.674,1168,1.531,1169,1.287,1170,0.453,1171,0.509,1172,0.444,1173,1.048,1174,1.849,1175,0.674,1176,1.849,1177,0.973,1178,0.509,1179,0.509,1180,0.674,1181,1.775,1182,0.458,1183,4.065,1184,0.527,1185,0.674,1186,0.674,1187,0.674,1188,0.674,1189,0.548,1190,0.674,1191,1.156,1192,0.414,1193,1.287,1194,1.287,1195,0.674,1196,0.411,1197,0.537,1198,0.561,1199,0.674,1200,1.172,1201,1.1,1202,0.674,1203,1.1,1204,0.517,1205,0.548,1206,1.1,1207,0.613,1208,0.674,1209,0.453,1210,0.613,1211,0.674,1212,0.674,1213,1.287,1214,1.754,1215,0.674,1216,1.287,1217,0.537,1218,0.674,1219,1.849,1220,1.287,1221,0.432,1222,0.674,1223,1.287,1224,1.287,1225,1.849,1226,0.343,1227,1.007,1228,0.674,1229,0.425,1230,2.021,1231,1.97,1232,1.517,1233,0.674,1234,2.864,1235,0.674,1236,0.548,1237,2.364,1238,1.287,1239,0.674,1240,0.674,1241,1.287,1242,1.287,1243,0.674,1244,0.613,1245,0.674,1246,0.674,1247,0.674,1248,0.674,1249,0.674,1250,0.674,1251,0.432,1252,0.458,1253,0.613,1254,0.798,1255,1.302,1256,0.639,1257,0.674,1258,0.674,1259,2.84,1260,0.674,1261,0.674,1262,0.458,1263,0.674,1264,0.674,1265,1.287,1266,0.674,1267,0.674,1268,0.674,1269,0.444,1270,0.674,1271,0.674,1272,1.287,1273,2.84,1274,2.256,1275,2.364,1276,2.364,1277,2.364,1278,3.072,1279,2.364,1280,2.364,1281,2.364,1282,0.674,1283,0.613,1284,4.572,1285,1.58,1286,0.561,1287,0.674,1288,0.674,1289,0.674,1290,0.674,1291,1.319,1292,0.674,1293,0.494,1294,0.639,1295,0.674,1296,1.287,1297,0.674,1298,0.44,1299,0.548,1300,0.527,1301,0.973,1302,0.548,1303,0.561,1304,0.576,1305,0.674,1306,0.501,1307,0.674,1308,0.674,1309,0.674,1310,0.517,1311,0.517,1312,0.674,1313,1.287,1314,0.674,1315,0.674,1316,0.841,1317,0.418,1318,0.469,1319,0.674,1320,0.453,1321,0.674,1322,0.973,1323,0.517,1324,0.494,1325,0.674,1326,0.517,1327,0.44,1328,0.674,1329,0.674,1330,0.576,1331,0.674,1332,0.674,1745,0.397,2747,0.576,3115,0.501,3757,0.561,3946,0.537,6578,0.726]],["component/101",[68,0.364]],["title/102-1",[961,89.216]],["name/102-1",[]],["text/102-1",[]],["component/102-1",[]],["title/102-2",[962,70.576,963,54.524]],["name/102-2",[]],["text/102-2",[]],["component/102-2",[]],["title/102",[964,84.658]],["name/102",[965,1.11]],["text/102",[4,4.555,18,6.112,19,2.892,22,4.017,24,5.564,25,3.739,29,2.897,34,4.026,56,4.196,59,3.025,60,4.578,64,2.169,68,2.236,76,2.417,95,4.419,113,3.874,177,3.963,181,4.603,184,2.873,188,2.451,194,3.55,210,4.102,251,3.277,300,3.867,323,3.681,325,4.999,327,4.395,339,5.013,365,3.082,373,2.998,414,3.353,415,2.85,466,3.435,501,3.174,535,2.909,549,3.6,554,4.715,667,4.419,714,4.148,762,4.506,804,3.526,812,2.828,817,3.191,818,4.075,950,3.574,966,5.28,967,6.028,968,3.097,969,7.236,970,4.763,971,5.154,972,4.196,973,3.6,974,4.102,975,6.028,976,4.358,977,4.196,978,5.49,979,7.459,980,3.834,981,5.154,982,4.247,983,7.754,984,5.49,985,4.806,986,3.502,987,4.806,988,5.154,989,5.154,990,4.715,991,5.49,992,5.49,993,4.358,994,5.49]],["component/102",[68,0.364]],["title/103-1",[1710,69.775]],["name/103-1",[]],["text/103-1",[]],["component/103-1",[]],["title/103-2",[355,51.827]],["name/103-2",[]],["text/103-2",[]],["component/103-2",[]],["title/103-3",[1255,62.856]],["name/103-3",[]],["text/103-3",[]],["component/103-3",[]],["title/103",[68,19.528,355,43.207]],["name/103",[355,1.237]],["text/103",[4,3.346,5,1.443,7,3.02,8,1.888,18,5.816,19,3.619,23,2.192,24,4.613,34,3.033,56,2.867,60,4.236,64,1.482,68,2.894,71,1.925,74,2.291,76,2.236,95,3.02,113,2.919,128,2.169,156,2.039,176,4.275,177,2.986,181,3.468,182,2.619,184,1.963,188,4.15,189,2.867,190,1.955,192,2.013,194,4.639,200,2.333,203,2.93,210,2.803,251,2.239,255,2.718,313,2.442,325,4.504,327,4.067,339,3.777,353,2.031,365,2.106,373,2.049,415,1.948,420,1.861,466,2.347,473,1.402,479,4.607,480,3.858,501,4.148,535,1.988,542,2.347,549,2.46,554,3.222,557,2.643,577,3.395,578,3.725,616,3.064,714,2.834,762,3.395,802,4.95,804,2.409,812,3.696,818,4.612,859,4.365,950,2.442,966,4.886,968,2.116,969,3.02,970,3.589,977,4.465,978,3.752,979,5.953,980,2.619,981,3.522,982,2.902,983,5.842,984,3.752,985,3.284,986,2.393,987,3.284,988,3.522,989,3.522,990,3.222,991,3.752,992,3.752,993,2.978,994,3.752,998,5.223,1060,3.222,1099,5.842,1106,6.615,1107,6.615,1168,4.153,1269,2.718,1316,2.692,1317,2.555,1339,4.011,1379,3.113,1704,2.409,1710,3.222,1711,4.119,1712,4.119,1713,4.119,1714,3.354,1715,4.119,1716,4.119,1717,4.119,1718,3.522,1719,4.119,1720,4.119,1721,3.752,1722,4.119,1723,4.119,1724,4.119,1725,3.165,1726,3.752,1727,4.119,1728,3.222,1729,3.064,1730,3.113,1731,3.222,1732,2.939,1733,3.222,1734,2.643,1735,4.119]],["component/103",[68,0.364]],["title/104-1",[0,22.482,355,43.207]],["name/104-1",[]],["text/104-1",[]],["component/104-1",[]],["title/104-2",[151,27.731,901,45.067]],["name/104-2",[]],["text/104-2",[]],["component/104-2",[]],["title/104-3",[537,56.2,702,50.076]],["name/104-3",[]],["text/104-3",[]],["component/104-3",[]],["title/104-4",[74,41.364,538,56.2]],["name/104-4",[]],["text/104-4",[]],["component/104-4",[]],["title/104-5",[539,60.556,557,47.714]],["name/104-5",[]],["text/104-5",[]],["component/104-5",[]],["title/104-6",[184,30.395,1639,63.769,6442,58.078]],["name/104-6",[]],["text/104-6",[]],["component/104-6",[]],["title/104-7",[259,32.773,6443,67.738]],["name/104-7",[]],["text/104-7",[]],["component/104-7",[]],["title/104-8",[208,38.355,1634,45.497,6444,58.078]],["name/104-8",[]],["text/104-8",[]],["component/104-8",[]],["title/104-9",[184,30.395,1643,63.769,6579,63.769]],["name/104-9",[]],["text/104-9",[]],["component/104-9",[]],["title/104",[71,29.797,72,28.396,1634,45.497]],["name/104",[1634,1.519]],["text/104",[0,2.176,5,0.627,8,1.461,18,1.02,19,2.753,23,2.292,27,1.63,50,0.73,53,2.993,55,1.622,57,0.907,59,0.899,62,0.868,64,1.147,65,0.958,74,5.781,75,0.771,76,1.223,78,4.314,88,2.576,106,1.008,119,1.898,121,3.533,128,4.464,129,4.662,147,0.924,148,0.968,151,1.948,152,2.1,156,0.887,163,0.827,164,1.077,167,5.02,174,0.924,177,0.834,179,1.578,180,0.795,184,0.854,185,3.018,187,7.084,188,0.728,189,1.425,190,2.844,191,0.84,192,2.554,196,0.974,201,4.033,203,1.456,205,3.556,206,3.663,208,1.077,211,3.978,213,1.795,215,4.738,216,3.638,217,4.738,219,0.916,226,4.268,245,1.193,249,4.078,251,0.974,253,2.554,256,0.996,257,1.262,259,0.789,271,0.934,291,2.172,298,3.603,308,0.903,309,0.907,318,1.531,327,1.645,336,1.002,346,3.415,357,1.783,368,0.958,370,1.17,374,5.018,376,0.911,385,0.875,412,6.556,414,0.996,429,1.247,446,1.631,452,3.716,468,0.821,473,0.61,478,1.961,480,1.077,494,3.949,495,2.725,524,4.688,526,7.163,543,2.536,549,2.572,556,1.262,557,1.149,559,5.248,560,3.369,562,2.409,567,4.087,575,3.482,577,0.948,578,0.847,579,2.169,580,1.631,581,1.353,583,7.268,589,6.567,596,1.401,606,0.985,607,1.458,667,1.313,673,1.631,683,1.12,684,1.631,701,1.458,702,2.9,712,1.353,713,1.093,714,1.232,748,2.396,761,0.963,801,1.149,852,1.531,854,3.831,861,1.531,898,1.12,952,1.17,1154,1.139,1254,2.672,1333,1.531,1335,7.453,1352,1.247,1634,8.596,1644,4.299,1645,1.791,1646,1.791,1647,1.791,1648,1.791,1649,1.791,1650,1.791,1651,1.791,1652,7.198,1653,5.226,1654,7.198,1655,4.308,1656,5.992,1657,1.093,1658,2.194,1659,1.401,1660,1.791,1661,5.992,1662,1.791,1663,2.124,1664,4.308,1665,1.791,1666,1.219,1667,1.206,1668,5.226,1669,8.478,1670,8.104,1671,6.254,1672,1.791,1673,1.401,1674,1.531,1675,1.791,1676,1.791,1677,1.791,1678,4.308,1679,3.188,1680,3.188,1681,1.791,1682,3.188,1683,1.791,1684,3.188,1685,1.17,1686,3.188,1687,4.308,1688,3.188,1689,4.308,1690,1.791,1691,1.791,1692,3.188,1693,3.188,1694,3.188,1695,3.188,1696,3.188,1697,3.188,1698,3.188,1699,1.791,1700,3.188,1701,1.791,1702,1.791]],["component/104",[68,0.364]],["title/105-1",[0,19.276,88,31.435,180,28.296]],["name/105-1",[]],["text/105-1",[]],["component/105-1",[]],["title/105-2",[128,33.579,151,23.776,163,29.455]],["name/105-2",[]],["text/105-2",[]],["component/105-2",[]],["title/105",[71,23.184,72,22.094,88,24.459,179,24.567,254,26.398]],["name/105",[1736,2.129]],["text/105",[9,1.926,19,1.934,40,1.668,42,4.6,50,3.9,53,1.77,57,1.794,74,1.97,75,4.325,78,1.63,88,2.806,121,6.315,125,2.77,128,6.067,134,2.508,137,1.54,155,3.045,163,3.297,167,5.727,179,1.754,180,4.638,182,3.62,183,2.272,188,4.685,190,2.702,193,1.794,201,3.427,206,4.556,207,2.527,208,2.131,211,5.294,220,3.541,222,5.69,224,4.846,226,4.846,228,5.069,229,6.655,230,4.846,233,6.393,234,6.176,235,6.655,236,6.655,237,6.988,238,6.393,245,3.793,254,1.885,256,3.166,258,4.121,259,3.602,260,5.447,261,3.028,263,2.884,264,4.867,265,5.483,266,6.101,267,7.479,268,6.101,269,4.635,271,1.846,272,6.176,273,2.597,274,8.935,275,3.028,276,4.535,277,3.028,278,6.988,280,5.967,281,3.028,283,3.028,285,3.028,287,2.044,288,2.315,289,3.53,290,2.233,291,2.87,292,2.677,294,3.028,295,3.028,346,2.315,414,1.97,714,2.437,955,2.677,1336,2.527,1337,2.233,1341,5.185,1342,3.226,1343,3.226,1344,3.226,1345,3.226,1346,3.226,1347,3.226]],["component/105",[68,0.364]],["title/106",[159,42.117,179,36.826]],["name/106",[1703,2.129]],["text/106",[14,2.264,55,4.502,64,3.183,69,4.331,70,3.647,78,3.408,84,4.004,87,2.58,97,2.58,102,3.982,109,4.593,110,5.04,111,3.982,115,2.766,129,3.321,159,2.817,160,2.766,165,3.549,167,2.834,168,3.759,170,4.253,171,4.253,173,4.05,174,4.567,177,3.447,188,5.725,193,3.751,200,2.817,351,2.231,354,3.9,366,3.085,373,3.683,374,3.759,376,2.531,388,2.766,499,3.385,547,4.707,552,3.136,561,2.593,568,3.89,578,2.352,606,2.735,670,2.992,716,3.315,718,4.935,719,5.853,754,3.89,830,3.191,838,4.253,839,4.05,840,4.05,970,2.783,1205,4.05,1496,1.742,1631,2.463,1634,3.549,1644,3.22,1704,2.909,1705,1.959,1706,3.549,1707,4.05,1708,4.05,1709,3.085]],["component/106",[68,0.364]],["title/107",[71,23.184,72,22.094,1737,49.617,1738,49.617,1739,49.617]],["name/107",[1740,2.129]],["text/107",[]],["component/107",[68,0.364]],["title/108-1",[0,22.482,1742,74.376]],["name/108-1",[]],["text/108-1",[]],["component/108-1",[]],["title/108-2",[151,27.731,1743,74.376]],["name/108-2",[]],["text/108-2",[]],["component/108-2",[]],["title/108-3",[152,29.885,1744,43.496]],["name/108-3",[]],["text/108-3",[]],["component/108-3",[]],["title/108-4",[254,39.571,1635,45.762]],["name/108-4",[]],["text/108-4",[]],["component/108-4",[]],["title/108-5",[13,30.425,1636,47.296]],["name/108-5",[]],["text/108-5",[]],["component/108-5",[]],["title/108",[71,29.797,72,28.396,1741,33.242]],["name/108",[1741,1.11]],["text/108",[]],["component/108",[68,0.364]],["title/109-1",[0,19.276,129,28.599,719,38.078]],["name/109-1",[]],["text/109-1",[]],["component/109-1",[]],["title/109-2",[151,23.776,366,39.548,719,38.078]],["name/109-2",[]],["text/109-2",[]],["component/109-2",[]],["title/109-3",[152,25.623,718,42.494,719,38.078]],["name/109-3",[]],["text/109-3",[]],["component/109-3",[]],["title/109",[719,53.274]],["name/109",[719,1.271]],["text/109",[0,2.553,8,1.72,19,2.708,32,1.141,57,1.092,58,1.297,62,1.819,64,0.775,66,2.573,67,1.063,76,1.414,78,0.992,87,4.382,96,4.174,104,4.893,113,0.981,115,2.772,119,1.654,121,4.242,122,3.824,124,1.451,128,3.558,129,3.03,137,5.197,146,1.966,151,1.858,156,1.067,160,4.125,161,3.603,163,0.996,174,3.828,177,1.003,178,2.18,181,1.165,184,2.375,185,2.09,188,3.875,190,1.023,191,1.011,207,2.678,208,2.257,211,3.913,219,1.102,220,2.583,222,2.612,224,2.225,230,2.955,248,3.077,251,1.172,276,4.969,288,4.415,289,3.091,301,2.554,303,6.028,304,5.464,308,1.087,336,2.788,353,5.17,354,5.523,355,2.18,356,2.805,357,4.149,358,2.554,359,5.106,360,5.047,361,5.245,366,4.944,367,1.278,376,2.536,395,4.688,437,1.538,443,1.436,510,1.172,542,1.228,552,1.359,565,2.501,578,1.774,597,1.141,598,2.138,631,4.253,689,1.436,713,1.316,718,2.501,719,6.799,731,2.612,738,1.011,741,3.055,744,2.805,745,1.436,761,1.159,790,1.348,872,4.94,877,4.26,950,2.225,965,1.124,970,2.788,1034,3.556,1356,2.225,1408,2.678,1745,2.935,1746,4.662,1747,1.755,1748,6.493,1749,1.287,1750,3.418,1751,4.435,1752,3.304,1753,2.644,1754,4.37,1755,3.208,1756,2.935,1757,3.208,1758,3.753,1759,3.418,1760,3.208,1761,3.208,1762,5.285,1763,3.708,1764,3.197,1765,5.698,1766,3.753,1767,6.928,1768,3.753,1769,3.898,1770,5.8,1771,3.898,1772,3.898,1773,3.898,1774,3.654,1775,2.156,1776,3.898,1777,5.962,1778,2.751,1779,2.678,1780,3.418,1781,1.755,1782,1.686,1783,4.821,1784,1.629,1785,1.467,1786,1.686,1787,1.843]],["component/109",[68,0.364]],["title/110-1",[0,16.87,64,20.078,1128,36.822,1856,42.171]],["name/110-1",[]],["text/110-1",[]],["component/110-1",[]],["title/110",[71,29.797,72,28.396,1855,54.517]],["name/110",[1855,1.82]],["text/110",[]],["component/110",[68,0.364]],["title/111",[115,27.594,354,26.127,552,31.282,718,33.063,719,29.628]],["name/111",[718,1.419]],["text/111",[0,2.906,19,2.369,23,0.801,27,0.77,32,0.797,34,1.769,50,0.614,57,0.763,62,2.226,64,1.652,66,2.371,67,0.743,71,1.748,76,0.428,78,1.256,80,3.311,87,2.759,96,2.585,100,1.025,102,1.467,104,3.03,109,1.693,111,1.467,113,0.685,115,1.518,119,2.344,121,2.83,122,2.4,128,0.793,136,0.927,137,4.855,146,0.789,147,0.778,151,2.601,152,2.39,156,0.746,157,2.218,158,3.299,160,3.307,161,1.089,163,0.696,164,1.641,174,2.746,181,0.814,184,2.835,185,1.926,188,4.542,190,1.296,191,0.707,193,3.941,206,1.904,211,2.611,219,0.77,220,1.182,222,2.604,224,1.618,226,1.618,248,1.409,251,0.819,256,0.838,271,0.785,276,4.542,288,3.001,289,0.934,298,1.755,301,1.025,302,1.004,303,5.037,304,3.154,305,1.801,309,0.763,313,0.893,317,0.9,327,1.409,333,1.121,336,0.843,349,0.975,353,4.421,354,5.159,355,1.585,356,1.536,358,1.857,360,3.126,361,5.355,366,0.934,368,0.806,376,1.389,395,3.148,406,1.104,417,0.869,427,2.097,432,0.797,433,1.288,473,0.513,474,0.966,478,3.659,479,0.881,485,1.783,489,1.121,552,6.384,563,2.359,564,1.728,565,1.819,570,3.749,571,1.104,578,1.29,597,0.797,598,1.555,604,0.95,605,2.222,614,2.222,616,2.03,631,1.075,655,2.804,659,1.004,676,0.718,680,0.913,682,1.288,689,1.004,713,2.284,718,4.932,719,4.647,744,2.585,747,1.201,753,1.819,761,0.81,762,0.797,774,0.707,782,2.081,792,3.703,825,3.927,830,3.413,841,2.333,842,3.407,850,1.178,862,1.372,872,4.328,875,4.183,877,3.749,878,3.367,879,3.367,881,3.367,916,2.069,950,0.893,965,4.057,970,2.093,1034,2.669,1164,0.848,1170,1.014,1196,1.666,1226,1.389,1301,1.138,1348,2.176,1356,0.893,1373,0.958,1384,1.372,1392,1.801,1658,3.661,1709,0.934,1745,0.887,1747,1.226,1748,3.9,1751,2.03,1752,2.402,1754,2.001,1756,1.178,1757,1.288,1760,1.288,1761,1.288,1762,3.592,1763,2.783,1764,2.4,1765,4.989,1767,6.086,1769,2.926,1770,4.651,1771,2.926,1772,2.926,1773,2.926,1774,2.743,1779,3.277,1781,1.226,1782,1.178,1783,6.216,1784,1.138,1785,1.025,1786,1.178,1788,1.506,1789,1.506,1790,7.828,1791,4.548,1792,3.407,1793,3.927,1794,2.134,1795,2.486,1796,2.486,1797,3.741,1798,3.407,1799,2.729,1800,2.729,1801,2.827,1802,1.506,1803,2.729,1804,1.506,1805,1.104,1806,1.506,1807,0.994,1808,2.333,1809,1.226,1810,1.288,1811,3.198,1812,1.372,1813,1.372,1814,2.486,1815,1.288,1816,2.486,1817,1.372,1818,1.288,1819,4.593,1820,1.506,1821,1.506,1822,1.506,1823,2.729,1824,1.326,1825,2.333,1826,2.729,1827,2.729,1828,1.506,1829,3.407,1830,3.741,1831,2.729,1832,2.729,1833,2.729,1834,1.506,1835,2.729,1836,2.729,1837,2.729,1838,1.506,1839,2.729,1840,1.506,1841,2.729,1842,1.104,1843,1.506,1844,1.506,1845,1.506,1846,1.372,1847,1.506,1848,1.506,1849,1.429,1850,1.372,1851,1.372,1852,2.333,1853,2.729,1854,1.506]],["component/111",[68,0.364]],["title/112-1",[0,22.482,1925,63.585]],["name/112-1",[]],["text/112-1",[]],["component/112-1",[]],["title/112-2",[73,35.891,1927,58.078,1928,63.769]],["name/112-2",[]],["text/112-2",[]],["component/112-2",[]],["title/112-3",[77,37.293,1930,51.919,1931,63.769]],["name/112-3",[]],["text/112-3",[]],["component/112-3",[]],["title/112-4",[83,38.355,1933,51.919,1934,63.769]],["name/112-4",[]],["text/112-4",[]],["component/112-4",[]],["title/112-5",[86,49.562,1936,74.376]],["name/112-5",[]],["text/112-5",[]],["component/112-5",[]],["title/112-6",[166,44.497,559,27.756,560,43.649,1709,34.612]],["name/112-6",[]],["text/112-6",[]],["component/112-6",[]],["title/112-7",[169,59.3,5767,65.472]],["name/112-7",[]],["text/112-7",[]],["component/112-7",[]],["title/112-8",[151,27.731,1938,67.738]],["name/112-8",[]],["text/112-8",[]],["component/112-8",[]],["title/112-9",[152,29.885,1939,67.738]],["name/112-9",[]],["text/112-9",[]],["component/112-9",[]],["title/112-10",[50,30.333,1964,70.576]],["name/112-10",[]],["text/112-10",[]],["component/112-10",[]],["title/112-11",[123,37.155,6580,74.376]],["name/112-11",[]],["text/112-11",[]],["component/112-11",[]],["title/112-12",[75,27.441,76,18.099,153,31.435]],["name/112-12",[]],["text/112-12",[]],["component/112-12",[]],["title/112",[71,29.797,72,28.396,1709,39.548]],["name/112",[1709,1.32]],["text/112",[0,3.025,2,0.659,8,2.948,13,2.477,15,0.649,17,1.357,19,3.025,20,0.589,23,1.061,27,0.547,29,0.514,34,0.943,39,0.669,47,0.745,50,1.913,53,2.343,55,2.102,57,1.01,59,1.001,62,0.966,64,1.868,65,1.875,68,0.281,71,0.5,74,1.109,75,0.461,76,2.367,78,1.288,80,1.328,90,0.774,106,0.603,113,1.273,119,1.545,121,3.925,125,6.354,128,0.564,137,4.137,147,1.029,151,2.75,152,2.964,160,4.638,167,0.61,174,0.553,177,0.498,179,1.386,180,2.081,181,0.579,182,1.268,183,1.795,184,0.51,188,3,190,2.68,191,2.648,192,0.974,193,2.376,197,1.661,201,1.173,203,0.489,205,3.192,206,1.015,211,0.525,213,1.955,215,3.705,216,1.388,219,0.547,249,0.729,251,1.906,253,0.635,257,0.754,259,0.879,287,1.615,291,1.005,305,0.706,308,1.005,309,0.542,313,0.635,320,0.603,325,1.417,336,1.961,346,0.7,351,0.894,368,0.573,373,0.532,376,1.015,385,3.605,414,1.109,415,0.506,417,2.385,427,0.823,431,3.637,443,1.329,445,1.303,452,0.664,465,1.88,466,0.61,468,3.105,473,1.597,478,0.659,479,0.626,481,3.806,486,0.687,494,0.809,496,1.016,499,0.729,503,0.721,508,0.713,524,1.102,542,1.136,547,1.865,549,2.467,554,2.189,556,0.754,559,0.992,560,3.232,564,0.495,577,0.567,578,0.506,596,1.559,633,0.729,634,1.559,635,0.579,655,1.217,670,0.644,676,0.51,679,0.635,683,0.669,698,0.975,703,0.706,713,0.654,735,1.423,738,1.938,749,0.706,751,0.737,778,1.227,780,0.754,799,0.7,817,1.055,818,1.678,845,3.614,854,0.785,855,0.675,861,0.915,898,1.247,950,0.635,970,1.566,972,0.745,986,1.158,1002,2.108,1041,4.272,1094,1.357,1096,0.693,1128,3.426,1143,0.654,1168,1.291,1172,3.995,1184,2.189,1191,0.669,1197,0.854,1209,0.721,1226,0.545,1254,0.664,1269,1.316,1291,2.501,1320,1.342,1326,0.823,1335,4.167,1339,0.669,1348,3.74,1352,0.745,1356,1.659,1376,0.809,1408,0.764,1493,0.614,1633,0.823,1657,0.654,1667,1.342,1708,0.872,1709,3.756,1726,0.975,1733,2.189,1752,0.942,1753,1.405,1763,0.796,1765,0.823,1807,0.706,1849,1.016,1879,1.812,1885,2.854,1896,0.975,1917,0.7,1925,9.051,1927,3.763,1930,4.227,1933,2.278,1938,3.763,1939,4.272,1940,1.994,1941,5.543,1942,5.74,1943,1.994,1944,0.942,1945,5.192,1946,1.071,1947,0.915,1948,0.975,1949,5.297,1950,0.975,1951,1.071,1952,1.071,1953,0.721,1954,1.071,1955,1.071,1956,1.071,1957,1.994,1958,1.623,1959,1.071,1960,1.071,1961,0.892,1962,0.915,1963,0.872,1964,4.451,1965,1.071,1966,4.439,1967,1.423,1968,2.416,1969,0.675,1970,4.729,1971,8.125,1972,4.691,1973,6.772,1974,8.125,1975,6.455,1976,2.798,1977,2.798,1978,7.087,1979,7.087,1980,3.505,1981,1.071,1982,1.994,1983,1.994,1984,1.071,1985,5.192,1986,7.087,1987,8.907,1988,7.087,1989,4.132,1990,5.192,1991,2.798,1992,1.071,1993,1.994,1994,2.798,1995,1.071,1996,3.505,1997,2.798,1998,2.798,1999,2.798,2000,2.798,2001,2.798,2002,2.798,2003,6.43,2004,7.087,2005,2.798,2006,1.071,2007,1.071,2008,1.071,2009,2.798,2010,2.798,2011,1.071,2012,3.505,2013,2.798,2014,1.071,2015,1.071,2016,1.071,2017,1.071,2018,1.071,2019,1.071,2020,1.071,2021,4.691,2022,4.691,2023,1.994,2024,1.994,2025,1.071,2026,1.071,2027,0.915,2028,1.071,2264,0.854,2306,1.532,2328,0.626,2364,0.737,2541,2.655,2596,0.796,2605,0.754,3038,1.705,3199,0.754,3456,0.774,3526,0.823,4247,0.942,4302,0.892,4419,0.915,4461,0.892,4821,0.892,5067,1.016,5354,4.14,5767,4.571,6220,0.854,6323,0.854,6580,4.132,6581,1.154,6582,1.154,6583,2.149,6584,1.154,6585,4.452,6586,2.149,6587,2.149,6588,3.015,6589,1.154,6590,1.154,6591,1.154,6592,2.149,6593,1.154,6594,1.154,6595,3.015,6596,1.154,6597,1.154,6598,1.154,6599,2.149,6600,1.154,6601,1.154,6602,1.154,6603,1.154,6604,1.154,6605,1.154,6606,1.154]],["component/112",[68,0.364]],["title/113",[71,29.797,72,28.396,1857,63.769]],["name/113",[1858,2.129]],["text/113",[]],["component/113",[68,0.364]],["title/114-1",[0,19.276,109,39.548,1706,45.497]],["name/114-1",[]],["text/114-1",[]],["component/114-1",[]],["title/114-2",[109,34.612,151,20.809,1706,39.818,1707,45.439]],["name/114-2",[]],["text/114-2",[]],["component/114-2",[]],["title/114-3",[109,34.612,152,22.425,193,28.266,200,31.604]],["name/114-3",[]],["text/114-3",[]],["component/114-3",[]],["title/114",[109,55.33]],["name/114",[109,1.32]],["text/114",[0,2.62,10,1.137,13,1.36,18,1.07,19,2.1,23,3.933,27,2.286,28,0.81,34,1.571,50,3.015,53,0.938,57,1.683,58,1.129,59,0.942,61,2.431,62,1.611,64,1.609,65,1.004,66,0.969,67,0.925,72,1.48,75,1.925,76,2.235,78,2.845,82,2.255,96,4.669,97,0.974,100,1.277,101,1.098,102,6.439,109,3.834,110,3.679,115,1.044,119,3.47,121,4.414,123,4.329,124,4.162,129,2.006,137,4.349,146,1.741,147,4.643,151,2.548,152,2.484,153,2.665,157,1.113,158,3.834,161,2.403,177,0.874,184,3.258,185,1.394,188,3.202,190,0.891,191,2.098,192,2.642,193,4.201,196,1.807,200,1.882,201,1.875,203,2.043,204,1.277,206,1.691,210,1.277,211,3.355,213,0.782,224,5.933,230,3.206,248,3.191,257,1.322,267,1.468,290,2.095,301,2.262,304,1.113,308,3.727,312,2.313,317,1.121,330,2.599,335,1.528,337,1.71,351,0.842,353,4.709,356,3.043,357,1.859,364,2.193,365,1.699,370,1.227,371,1.528,376,0.955,390,3.641,400,1.292,404,1.376,414,1.044,438,7.103,450,2.262,464,1.251,468,1.524,473,0.639,478,3.804,486,1.204,561,1.733,564,2.497,569,1.468,570,1.183,571,1.376,578,0.888,598,1.07,599,0.96,628,0.988,657,1.944,715,3.823,748,1.848,749,1.238,761,1.009,778,4.845,798,3.027,846,1.322,898,1.174,951,1.264,985,1.497,1017,2.892,1153,1.164,1164,1.056,1196,1.146,1236,1.528,1300,1.468,1356,2.652,1658,2.287,1706,5.919,1707,2.706,1709,2.061,1746,3.498,1749,1.985,1774,1.376,1783,1.339,1793,3.823,1794,1.468,1801,5.586,1850,1.71,1859,5.285,1860,4.402,1861,1.71,1862,5.586,1863,5.951,1864,1.468,1865,1.71,1866,3.379,1867,3.823,1868,2.313,1869,2.841,1870,1.71,1871,1.71,1872,1.71,1873,1.71,1874,1.292,1875,1.71,1876,1.71,1877,2.895,1878,4.469,1879,1.215,1880,1.468,1881,5.165,1882,10.977,1883,2.262,1884,3.324,1885,2.706,1886,1.877,1887,2.599,1888,1.877,1889,5.407,1890,6.182,1891,1.71,1892,4.472,1893,3.379,1894,4.472,1895,3.324,1896,3.027,1897,1.71,1898,4.835,1899,1.71,1900,1.71,1901,1.528,1902,1.877,1903,1.877,1904,1.877,1905,1.877,1906,1.877,1907,1.877,1908,1.877,1909,1.877,1910,1.877,1911,1.71,1912,1.877,1913,1.877,1914,1.877,1915,1.605,1916,1.605,1917,1.227,1918,1.877,1919,1.277,1920,1.528,1921,1.877,1922,1.339,1923,1.307,1924,1.71]],["component/114",[68,0.364]],["title/115-1",[0,19.276,110,43.395,129,28.599]],["name/115-1",[]],["text/115-1",[]],["component/115-1",[]],["title/115-2",[102,34.29,110,43.395,151,23.776]],["name/115-2",[]],["text/115-2",[]],["component/115-2",[]],["title/115-3",[537,56.2,2029,56.2]],["name/115-3",[]],["text/115-3",[]],["component/115-3",[]],["title/115-4",[538,56.2,1866,56.2]],["name/115-4",[]],["text/115-4",[]],["component/115-4",[]],["title/115",[110,60.712]],["name/115",[110,1.449]],["text/115",[0,1.994,8,1.447,9,3.586,19,1.761,32,2.744,34,1.493,50,2.115,55,1.607,57,1.599,58,1.899,59,1.584,61,2.819,62,1.53,64,1.136,65,1.689,67,1.556,76,1.472,78,1.453,96,4.298,97,3.422,102,4.535,110,2.149,115,3.669,119,1.391,121,3.51,124,5.679,129,3.783,134,1.391,146,3.456,161,5.521,180,1.401,184,1.505,185,2.766,188,3.686,190,1.499,192,3.224,196,3.586,201,1.324,211,3.238,213,2.16,224,7.093,251,1.716,253,1.872,256,2.883,276,3.868,290,1.991,307,2.626,309,1.599,312,2.198,320,1.777,325,1.599,334,4.221,336,3.691,346,2.063,353,4.158,357,4.719,368,1.689,376,4.613,385,1.543,395,5.294,400,2.173,404,2.315,415,1.493,438,4.592,450,3.528,473,2.246,486,3.326,565,2.104,569,4.055,570,3.269,571,3.801,618,2.875,621,4.433,628,1.663,653,2.571,662,2.875,681,2.104,774,3.095,778,1.943,780,2.224,784,2.631,786,1.716,802,1.622,951,3.491,1017,2.773,1161,2.063,1164,2.918,1269,2.083,1326,2.426,1377,3.918,1379,2.386,1631,1.563,1745,5.338,1746,5.973,1747,2.571,1748,7.332,1749,3.939,1750,2.875,1783,3.699,1794,4.055,1851,2.875,1862,7.827,1863,3.918,1866,6.373,1867,2.699,1868,6.311,1869,6.529,1870,4.722,1871,4.722,1872,2.875,1873,4.722,1874,2.173,1875,4.722,1876,2.875,1881,3.918,1883,2.149,1893,5.771,1898,4.055,1968,1.846,2029,7.827,2030,5.371,2031,2.699,2032,7.798,2033,2.699,2034,4.722,2035,2.386,2036,5.185,2037,2.198,2038,4.433,2039,3.157,2040,3.157,2041,2.699,2042,3.157]],["component/115",[68,0.364]],["title/116-1",[0,19.276,179,31.574,501,33.579]],["name/116-1",[]],["text/116-1",[]],["component/116-1",[]],["title/116-2",[151,23.776,349,41.282,501,33.579]],["name/116-2",[]],["text/116-2",[]],["component/116-2",[]],["title/116",[159,42.117,501,39.164]],["name/116",[2166,2.129]],["text/116",[4,4.771,5,1.675,18,6.4,19,2.935,64,1.721,70,5.272,72,3.202,74,2.66,76,2.453,78,3.977,80,2.27,87,2.481,91,3.558,92,5.702,97,2.481,106,2.692,128,2.518,174,2.469,177,4.023,179,5.361,180,4.573,189,3.862,213,2.997,219,2.445,220,2.072,226,2.836,252,7.206,288,3.125,289,5.36,291,2.411,303,3.255,306,3.291,325,2.422,349,5.595,351,4.311,353,2.358,373,2.379,417,2.76,420,2.16,466,2.725,473,2.448,489,5.35,499,3.255,501,5.915,543,2.816,547,3.826,578,2.261,613,3.894,697,3.614,716,4.792,744,4.864,745,3.187,754,3.741,763,5.855,765,6.331,809,4.356,810,4.356,819,3.506,823,2.6,839,3.894,840,3.894,854,3.506,1018,3.255,1060,3.741,1168,3.096,1191,4.497,1322,3.614,1442,3.255,1709,2.966,1925,6.148,1969,4.534,2138,6.691,2167,4.356,2168,4.783,2169,4.089,2170,4.783,2171,4.783,2172,3.041,2173,4.783,2174,4.783,2175,4.783,2176,4.538,2177,6.148,2178,3.741,2179,3.894,2180,4.783,2181,5.315,2182,4.356,2183,4.783,6607,5.154]],["component/116",[68,0.364]],["title/117-1",[0,16.87,349,36.129,501,29.388,744,31.411]],["name/117-1",[]],["text/117-1",[]],["component/117-1",[]],["title/117",[501,39.164,744,41.861]],["name/117",[2043,2.129]],["text/117",[0,3.2,9,0.744,10,0.83,17,1.702,19,2.513,27,1.279,31,1.267,32,4.552,42,0.77,50,2.275,53,0.684,55,0.697,57,0.693,61,0.744,62,2.703,64,0.493,66,0.707,67,1.703,75,0.589,76,1.41,78,1.589,80,1.64,82,1.261,87,0.71,96,0.77,102,3.545,106,1.944,113,1.941,115,1.391,119,1.88,121,1.838,122,0.878,123,1.25,128,0.721,129,2.228,133,0.977,137,3.366,146,1.81,151,1.288,152,2.241,153,0.675,156,4.769,157,0.812,160,0.761,163,2.577,174,1.291,177,0.637,180,0.607,184,3.345,185,0.574,186,0.806,188,4.305,189,1.544,190,2.358,191,0.642,192,1.688,193,0.693,201,1.448,203,1.949,206,0.697,207,1.785,208,2.078,211,0.672,213,0.57,216,0.953,219,4.633,220,1.848,226,2.048,228,0.849,247,1.957,255,0.903,260,0.912,298,0.642,305,0.903,307,0.693,308,1.741,309,0.693,312,0.953,317,0.817,320,0.77,336,0.766,352,1.65,353,2.75,355,0.795,356,0.77,360,0.932,361,3.658,365,1.279,367,4.16,398,0.83,405,1.619,415,1.633,417,2.462,443,4.393,445,4.308,453,0.806,459,1.13,465,1.138,466,0.78,473,0.466,474,0.878,485,1.192,486,0.878,501,2.247,559,0.681,564,0.632,566,1.115,572,1.004,573,0.953,577,2.629,578,0.647,594,3.128,598,0.78,599,2.181,604,0.863,628,1.317,649,1.635,654,0.912,656,0.661,668,2.178,670,3.355,680,1.516,691,1.034,697,1.89,703,0.903,716,0.912,731,2.97,735,0.977,736,1.091,737,1.034,738,1.173,739,5.764,744,6.44,745,7.317,748,1.391,753,5.891,760,1.034,761,0.736,774,2.33,792,1.741,808,2.302,817,0.725,819,1.004,820,2.139,838,1.17,839,1.115,840,1.115,841,1.17,864,2.139,865,1.17,870,2.278,872,3.577,873,2.302,874,4.486,877,0.863,882,3.277,891,3.146,896,1.17,899,0.953,901,1.516,916,3.084,940,3.033,956,2.302,965,0.714,968,0.703,995,0.977,1016,0.856,1128,1.65,1161,0.895,1182,0.932,1184,1.957,1226,1.758,1254,3.081,1274,1.721,1324,1.004,1339,0.856,1495,0.977,1496,1.954,1568,1.004,1631,1.239,1633,1.922,1778,1.004,1783,1.785,1792,1.247,1805,1.004,1808,1.17,1860,2.037,1919,0.932,1953,0.922,1962,1.17,1968,0.801,2044,1.034,2045,3.454,2046,1.369,2047,1.369,2048,1.369,2049,1.369,2050,4.968,2051,0.964,2052,3.146,2053,1.369,2054,1.369,2055,1.369,2056,1.369,2057,1.369,2058,5.279,2059,1.247,2060,3.454,2061,1.369,2062,1.369,2063,1.369,2064,1.369,2065,2.502,2066,2.502,2067,2.502,2068,2.278,2069,2.502,2070,2.502,2071,2.502,2072,2.502,2073,2.502,2074,2.502,2075,2.502,2076,1.115,2077,2.502,2078,1.369,2079,2.502,2080,2.502,2081,2.502,2082,1.369,2083,1.369,2084,5.891,2085,1.369,2086,4.267,2087,1.004,2088,1.369,2089,1.369,2090,1.369,2091,1.369,2092,1.17,2093,1.369,2094,1.034,2095,1.369,2096,1.17,2097,1.369,2098,1.17,2099,1.369,2100,1.369,2101,1.369,2102,1.004,2103,2.502,2104,0.977,2105,1.369,2106,0.977,2107,1.369,2108,1.369,2109,3.454,2110,2.139,2111,2.139,2112,3.128,2113,4.267,2114,4.267,2115,2.502,2116,2.502,2117,3.454,2118,3.454,2119,2.502,2120,2.502,2121,2.502,2122,1.369,2123,1.369,2124,1.369,2125,3.454,2126,1.369,2127,1.369,2128,1.369,2129,1.369,2130,1.369,2131,2.502,2132,1.369,2133,1.369,2134,2.502,2135,1.369,2136,1.034,2137,1.115,2138,0.953,2139,0.903,2140,1.369,2141,1.369,2142,1.247,2143,2.037,2144,1.369,2145,1.369,2146,1.369,2147,2.502,2148,1.369,2149,1.369,2150,1.369,2151,1.369,2152,1.369,2153,0.977,2154,1.17,2155,8.083,2156,2.502,2157,2.502,2158,4.363,2159,5.579,2160,2.502,2161,1.299,2162,1.369,2163,1.018,2164,1.034,2165,2.502]],["component/117",[68,0.364]],["title/118-1",[2184,65.403]],["name/118-1",[]],["text/118-1",[]],["component/118-1",[]],["title/118-2",[68,16.743,1734,40.91,2185,37.293]],["name/118-2",[]],["text/118-2",[]],["component/118-2",[]],["title/118-3",[2185,43.496,2187,42.117]],["name/118-3",[]],["text/118-3",[]],["component/118-3",[]],["title/118-4",[113,40.597]],["name/118-4",[]],["text/118-4",[]],["component/118-4",[]],["title/118-5",[4,23.704,5,19.545,676,26.601,2219,55.81]],["name/118-5",[]],["text/118-5",[]],["component/118-5",[]],["title/118-6",[203,22.661,802,25.488,999,37.492,1118,31.023,1181,31.023]],["name/118-6",[]],["text/118-6",[]],["component/118-6",[]],["title/118",[68,19.528,2190,59.3]],["name/118",[68,0.309,2190,0.938]],["text/118",[1,4.02,4,3.693,5,3.513,12,1.748,13,1.617,14,1.798,19,3.407,20,3.414,21,2.411,29,4.541,33,4.581,40,2.925,53,3.102,55,3.16,57,2.002,58,2.377,60,4.125,64,4.021,67,1.948,68,2.853,72,1.76,76,2.177,82,1.992,106,2.224,129,1.772,148,4.148,152,1.588,156,1.957,176,4.138,177,3.571,179,3.075,184,2.96,188,4.266,191,1.854,213,2.588,300,2.535,313,2.343,325,2.002,327,3.96,349,2.559,373,3.815,415,2.936,420,3.465,459,3.465,464,2.634,472,2.266,479,3.632,480,2.377,501,2.081,510,2.149,577,2.092,578,2.936,599,2.021,676,2.96,748,3.454,761,2.125,762,4.06,802,5.742,812,2.913,818,2.972,897,2.82,898,2.471,943,2.82,966,2.451,968,2.03,972,2.751,982,2.784,1006,2.311,1017,3.322,1019,2.69,1106,2.94,1107,2.94,1118,4.797,1131,3.379,1177,2.986,1316,4.058,1327,2.583,1379,2.986,1704,3.632,1728,4.857,1729,4.62,1730,4.693,1731,6.8,1732,2.82,1741,2.06,1944,3.479,2181,2.185,2187,4.344,2190,4.952,2191,2.432,2192,3.091,2194,2.513,2196,2.092,2198,2.82,2200,3.218,2203,2.535,2204,5.349,2207,2.634,2220,3.952,2221,2.751,2222,2.986,2223,3.952,2224,3.952,2225,3.218,2226,3.952,2227,3.952,2228,3.883,2229,4.181,2230,3.952,2231,2.82,2232,3.952,2233,3.952,2234,3.036,2235,1.992,2236,2.125,2237,3.218,2238,3.218,2239,3.952,2240,3.091,2241,2.69,2242,3.091]],["component/118",[68,0.364]],["title/119-1",[2184,65.403]],["name/119-1",[]],["text/119-1",[]],["component/119-1",[]],["title/119-2",[68,16.743,1734,40.91,2185,37.293]],["name/119-2",[]],["text/119-2",[]],["component/119-2",[]],["title/119-3",[1493,36.566,2185,37.293,2186,42.494]],["name/119-3",[]],["text/119-3",[]],["component/119-3",[]],["title/119-4",[177,25.977,2185,32.638,2187,31.604,2188,33.568]],["name/119-4",[]],["text/119-4",[]],["component/119-4",[]],["title/119-5",[113,40.597]],["name/119-5",[]],["text/119-5",[]],["component/119-5",[]],["title/119-6",[259,32.773,2189,48.149]],["name/119-6",[]],["text/119-6",[]],["component/119-6",[]],["title/119",[68,19.528,1116,55.331]],["name/119",[68,0.309,1116,0.875]],["text/119",[4,2.168,5,2.644,19,3.598,20,2.806,21,1.982,29,3.628,40,2.404,55,2.597,64,3.811,68,2.781,69,4.415,72,2.273,75,2.197,76,1.449,78,2.349,91,3.797,93,3.368,106,2.873,111,2.745,148,2.76,151,1.903,164,3.07,176,3.402,179,2.527,196,2.775,200,2.891,203,2.331,309,2.585,317,3.048,327,2.635,354,3.975,373,2.539,376,2.597,415,2.414,420,2.306,441,3.992,442,3.992,445,3.336,459,3.41,472,2.927,547,4.017,552,4.76,558,3.093,559,3.755,597,2.702,628,2.688,657,2.985,707,3.512,762,2.702,770,2.702,802,5.442,812,2.395,830,4.843,916,2.822,1116,3.797,1252,3.474,1337,4.76,1493,4.329,1685,3.336,1728,3.992,1729,3.797,1730,3.857,1731,3.992,1734,3.275,1749,3.048,1790,4.156,1791,6.454,1807,3.368,1825,4.364,1949,3.992,2037,3.553,2185,5.254,2186,5.031,2187,5.087,2188,5.971,2190,4.07,2191,3.141,2192,3.992,2193,4.364,2194,3.246,2195,3.742,2196,3.996,2197,3.642,2198,3.642,2199,4.364,2200,4.156,2201,4.364,2202,6.454,2203,3.275,2204,3.141,2205,3.992,2206,4.156,2207,3.402,2208,4.386,2209,5.816,2210,4.649,2211,4.649,2212,3.093,2213,4.649,2214,4.649,2215,4.156,2216,4.364,2217,4.156,2218,4.156]],["component/119",[68,0.364]],["title/120-1",[2184,65.403]],["name/120-1",[]],["text/120-1",[]],["component/120-1",[]],["title/120-2",[68,16.743,1734,40.91,2185,37.293]],["name/120-2",[]],["text/120-2",[]],["component/120-2",[]],["title/120-3",[1493,36.566,2185,37.293,2186,42.494]],["name/120-3",[]],["text/120-3",[]],["component/120-3",[]],["title/120-4",[177,25.977,2185,32.638,2187,31.604,2188,33.568]],["name/120-4",[]],["text/120-4",[]],["component/120-4",[]],["title/120-5",[113,40.597]],["name/120-5",[]],["text/120-5",[]],["component/120-5",[]],["title/120-6",[259,32.773,2189,48.149]],["name/120-6",[]],["text/120-6",[]],["component/120-6",[]],["title/120",[0,19.276,68,16.743,2246,44.389]],["name/120",[0,0.246,68,0.213,2246,0.566]],["text/120",[0,1.555,4,2.184,5,2.659,13,2.104,19,3.609,20,2.827,21,1.997,29,3.648,64,3.823,68,2.79,69,4.44,72,2.29,76,1.46,91,3.826,93,3.393,102,2.765,106,2.895,111,2.765,148,2.781,151,1.918,164,3.093,176,3.427,179,2.546,196,2.796,200,2.912,203,2.349,309,2.605,314,3.77,317,3.071,327,2.655,373,2.558,376,2.617,415,2.432,420,2.323,442,4.022,452,3.19,459,3.429,472,2.949,526,5.416,547,4.039,558,3.116,597,2.722,635,2.781,642,3.463,649,3.361,657,3.008,707,3.539,762,2.722,770,2.722,802,5.459,812,2.413,995,3.669,1252,3.5,1337,4.786,1493,4.353,1634,6.438,1671,4.187,1728,4.022,1729,3.826,1730,3.886,1731,4.022,1734,3.299,1807,3.393,1949,5.937,2037,3.58,2185,5.277,2186,5.059,2187,5.11,2188,5.992,2191,3.164,2194,3.27,2195,3.77,2196,4.018,2197,3.669,2198,3.669,2199,4.397,2200,4.187,2201,4.397,2202,6.49,2203,3.299,2204,3.164,2205,4.022,2206,4.187,2207,3.427,2208,4.41,2209,4.914,2217,4.187,2218,4.187,2246,5.284,2247,3.463,2265,4.397,2266,6.49,2267,4.022,2331,5.143,2332,5.143,2333,3.951,2334,5.143,2335,5.143,2336,5.143,2337,5.143,2338,5.143,2339,5.143]],["component/120",[68,0.364]],["title/121-1",[2184,65.403]],["name/121-1",[]],["text/121-1",[]],["component/121-1",[]],["title/121-2",[68,16.743,1734,40.91,2185,37.293]],["name/121-2",[]],["text/121-2",[]],["component/121-2",[]],["title/121-3",[1493,36.566,2185,37.293,2186,42.494]],["name/121-3",[]],["text/121-3",[]],["component/121-3",[]],["title/121-4",[177,25.977,2185,32.638,2187,31.604,2188,33.568]],["name/121-4",[]],["text/121-4",[]],["component/121-4",[]],["title/121-5",[113,40.597]],["name/121-5",[]],["text/121-5",[]],["component/121-5",[]],["title/121-6",[259,32.773,2189,48.149]],["name/121-6",[]],["text/121-6",[]],["component/121-6",[]],["title/121",[68,19.528,2246,51.773]],["name/121",[68,0.309,2246,0.819]],["text/121",[4,2.06,5,2.545,13,1.984,19,3.522,20,2.667,21,1.883,29,3.493,40,2.284,55,2.468,64,3.73,68,2.722,69,4.251,72,2.16,75,2.087,76,2.063,78,2.232,91,3.609,93,3.2,102,2.608,106,2.73,111,2.608,148,2.622,151,1.809,164,2.918,176,3.232,179,2.402,196,2.637,200,2.747,203,2.215,309,2.457,317,2.897,327,2.504,354,3.827,373,2.412,376,2.468,415,2.294,420,2.191,441,3.794,442,3.794,445,3.17,459,3.283,472,2.781,526,5.186,547,3.867,552,4.582,558,2.939,559,3.615,597,2.567,642,3.266,657,2.837,707,3.338,762,2.567,770,2.567,802,5.326,812,2.275,830,4.663,916,2.682,1116,3.609,1252,3.301,1337,4.582,1493,4.168,1634,6.219,1671,3.949,1685,3.17,1728,3.794,1729,3.609,1730,3.665,1731,3.794,1734,3.112,1749,2.897,1790,3.949,1791,6.214,1807,3.2,1825,4.147,1949,3.794,2037,3.377,2185,5.097,2186,4.843,2187,4.936,2188,5.822,2191,2.985,2194,3.085,2195,3.556,2196,3.847,2197,3.461,2198,3.461,2199,4.147,2200,3.949,2201,4.147,2202,6.214,2203,3.112,2204,2.985,2205,3.794,2206,3.949,2207,3.232,2208,4.222,2209,6.267,2210,4.418,2211,4.418,2212,2.939,2213,4.418,2214,4.418,2215,3.949,2216,4.147,2217,3.949,2218,3.949,2221,3.377,2246,3.377,2247,3.266,2265,4.147,2266,6.214,2267,3.794]],["component/121",[68,0.364]],["title/122-1",[459,28.806,1877,41.282,2236,34.29]],["name/122-1",[]],["text/122-1",[]],["component/122-1",[]],["title/122-2",[547,39.571,676,35.45]],["name/122-2",[]],["text/122-2",[]],["component/122-2",[]],["title/122-3",[68,16.743,1734,40.91,2185,37.293]],["name/122-3",[]],["text/122-3",[]],["component/122-3",[]],["title/122-4",[64,14.608,415,19.199,1493,23.284,2186,27.058,2205,31.757,2244,40.605,2245,40.605]],["name/122-4",[]],["text/122-4",[]],["component/122-4",[]],["title/122-5",[259,32.773,2189,48.149]],["name/122-5",[]],["text/122-5",[]],["component/122-5",[]],["title/122",[68,19.528,2243,57.142]],["name/122",[68,0.309,2243,0.904]],["text/122",[0,2.308,4,3.242,5,1.815,13,2.12,19,2.593,24,2.688,44,3.419,64,2.746,68,2.625,69,3.031,72,2.308,76,1.471,78,4.17,87,2.688,91,3.855,93,3.419,97,2.688,102,2.786,106,2.917,111,2.786,113,2.358,129,3.424,160,2.882,191,2.431,192,2.533,200,2.934,291,2.612,309,3.866,317,3.094,357,2.899,370,3.386,376,2.637,395,2.743,415,2.45,420,2.341,432,2.743,442,4.053,458,3.051,459,4.094,472,2.971,526,5.446,558,3.14,597,2.743,633,3.526,642,3.489,770,2.743,774,2.431,802,2.662,812,2.431,916,2.865,1002,3.117,1134,3.419,1337,3.267,1365,3.489,1392,5.037,1493,2.971,1496,1.815,1631,2.566,1634,6.466,1671,4.219,1709,3.214,1734,3.324,1807,3.419,1942,2.833,1949,4.053,1970,4.72,2185,3.031,2186,3.453,2187,2.934,2188,3.117,2191,3.188,2194,3.295,2195,3.799,2196,4.04,2197,3.697,2198,3.697,2208,4.435,2209,6.473,2212,3.14,2217,4.219,2218,4.219,2228,3.24,2229,3.489,2236,2.786,2243,3.981,2246,3.607,2247,3.489,2248,4.132,2249,4.72,2250,3.566,2251,4.72,2252,5.628,2253,3.799,2254,5.14,2255,3.566,2256,4.053,2257,4.219,2258,5.182,2259,5.182,2260,5.182,2261,5.182,2262,5.182,2263,5.182,2264,4.132,2265,4.43,2266,6.526,2267,4.053,2268,3.566,2269,3.566,2270,4.942,2271,3.566,2272,3.419,2273,3.566]],["component/122",[68,0.364]],["title/123-1",[459,28.806,1877,41.282,2236,34.29]],["name/123-1",[]],["text/123-1",[]],["component/123-1",[]],["title/123-2",[547,39.571,676,35.45]],["name/123-2",[]],["text/123-2",[]],["component/123-2",[]],["title/123-3",[68,16.743,1734,40.91,2185,37.293]],["name/123-3",[]],["text/123-3",[]],["component/123-3",[]],["title/123-4",[1128,42.073,1856,48.185,2275,63.769]],["name/123-4",[]],["text/123-4",[]],["component/123-4",[]],["title/123-5",[259,32.773,2189,48.149]],["name/123-5",[]],["text/123-5",[]],["component/123-5",[]],["title/123",[68,19.528,2274,57.142]],["name/123",[68,0.309,2274,0.904]],["text/123",[0,1.487,4,2.09,5,1.723,13,2.013,19,2.495,24,3.811,29,2.365,44,3.246,68,2.56,72,2.191,76,2.495,78,4.045,87,2.552,91,3.661,93,3.246,97,2.552,106,2.769,113,2.239,129,4.678,183,3.157,190,2.336,191,2.308,193,2.492,206,2.504,259,2.168,291,2.481,309,2.492,317,2.938,357,2.753,385,2.405,395,2.604,415,2.327,428,4.006,429,3.425,432,5.16,458,2.897,459,3.971,472,2.822,508,4.895,510,2.675,542,2.804,558,2.982,577,2.604,597,2.604,770,2.604,774,2.308,778,4.52,802,2.528,812,2.308,916,2.721,949,3.848,966,3.052,1018,3.349,1134,3.246,1337,3.102,1352,3.425,1353,3.848,1365,3.313,1368,3.718,1369,3.848,1392,4.847,1496,2.573,1631,2.436,1709,3.052,1734,3.157,1741,2.565,1807,3.246,1855,4.207,1963,4.006,1969,3.102,2185,2.878,2187,2.786,2188,2.96,2191,3.028,2194,3.129,2195,3.607,2196,3.888,2197,3.511,2198,3.511,2208,4.268,2209,6.311,2212,2.982,2221,3.425,2228,3.077,2229,3.313,2236,2.646,2243,3.78,2247,3.313,2250,3.386,2252,5.487,2253,3.607,2254,4.946,2255,3.386,2256,3.848,2257,4.006,2268,3.386,2269,3.386,2270,4.756,2271,3.386,2272,3.246,2273,3.386,2274,3.78,2276,4.207,2277,4.921,2278,4.921,2279,3.215,2280,3.511,2281,2.84,2282,2.552,2283,4.921,2284,4.207,2285,4.006,2286,4.481,2287,4.481,2288,4.481,2289,4.481,2290,4.481,2291,4.481,2292,3.718,2293,6.691,2294,4.006,2295,4.481]],["component/123",[68,0.364]],["title/124-1",[459,28.806,1877,41.282,2236,34.29]],["name/124-1",[]],["text/124-1",[]],["component/124-1",[]],["title/124-2",[547,39.571,676,35.45]],["name/124-2",[]],["text/124-2",[]],["component/124-2",[]],["title/124-3",[307,25.129,415,23.46,2187,28.097,2196,26.261,2285,40.397]],["name/124-3",[]],["text/124-3",[]],["component/124-3",[]],["title/124-4",[64,20.078,415,26.388,1496,19.545,2297,45.439]],["name/124-4",[]],["text/124-4",[]],["component/124-4",[]],["title/124-5",[64,22.941,730,48.185,1631,31.574]],["name/124-5",[]],["text/124-5",[]],["component/124-5",[]],["title/124-6",[1631,36.826,2298,60.556]],["name/124-6",[]],["text/124-6",[]],["component/124-6",[]],["title/124-7",[188,27.762,1631,22.113,1863,33.747,1881,33.747,2029,33.747]],["name/124-7",[]],["text/124-7",[]],["component/124-7",[]],["title/124-8",[1631,36.826,2299,67.738]],["name/124-8",[]],["text/124-8",[]],["component/124-8",[]],["title/124-9",[415,30.151,420,28.806,2300,63.769]],["name/124-9",[]],["text/124-9",[]],["component/124-9",[]],["title/124-10",[68,19.528,2301,74.376]],["name/124-10",[]],["text/124-10",[]],["component/124-10",[]],["title/124-11",[68,19.528,2302,74.376]],["name/124-11",[]],["text/124-11",[]],["component/124-11",[]],["title/124-12",[259,32.773,2189,48.149]],["name/124-12",[]],["text/124-12",[]],["component/124-12",[]],["title/124",[68,19.528,2296,57.142]],["name/124",[68,0.309,2296,0.904]],["text/124",[0,0.91,4,1.279,5,1.746,19,3.186,21,1.169,23,3.395,24,1.562,29,1.447,44,1.987,53,1.504,61,3.469,62,3.092,64,3.871,65,2.667,67,1.484,68,2.159,69,1.761,72,1.341,76,2.106,78,3.414,87,1.562,93,1.987,97,1.562,102,1.619,109,4.601,113,2.269,129,3.973,134,1.327,151,1.123,167,1.716,179,1.491,180,2.212,186,1.773,191,1.412,193,3.232,200,2.823,201,1.263,203,1.375,206,2.537,213,2.659,224,2.956,259,1.327,271,1.57,291,1.518,307,2.525,317,1.798,327,3.294,339,1.773,353,4.053,354,3.36,356,2.806,357,2.789,365,1.539,367,1.785,376,2.537,388,1.675,395,1.594,397,1.761,415,3.508,420,4.237,428,2.452,429,2.096,432,4.351,450,2.049,458,1.773,459,2.882,472,1.727,480,3.838,486,1.932,501,3.36,508,3.323,510,1.637,542,1.716,547,4.991,558,1.825,569,2.355,570,1.898,571,2.207,597,1.594,663,2.313,701,2.452,730,2.275,737,2.275,738,2.993,744,3.591,754,2.355,762,3.377,770,1.594,774,1.412,778,3.068,802,3.278,812,1.412,818,1.441,877,1.898,916,1.665,952,1.968,956,2.007,1022,2.355,1074,1.867,1134,1.987,1143,1.838,1205,2.452,1254,3.092,1327,1.968,1352,2.096,1353,2.355,1365,2.027,1368,2.275,1369,2.355,1392,3.29,1445,2.355,1493,1.727,1496,2.598,1631,4.071,1709,1.867,1733,3.9,1734,4.094,1764,1.932,1807,3.29,1862,3.768,1863,2.275,1880,2.355,1881,2.275,1885,2.452,1898,2.355,1963,2.452,1966,4.263,1969,1.898,2029,2.275,2185,1.761,2191,1.853,2194,1.915,2198,3.557,2206,2.452,2208,4.31,2209,4.803,2212,1.825,2222,2.275,2228,1.883,2229,2.027,2235,1.518,2236,1.619,2241,2.049,2247,2.027,2250,2.072,2252,4.176,2253,2.207,2254,3.357,2255,2.072,2268,2.072,2269,2.072,2270,3.228,2271,2.072,2272,1.987,2273,2.072,2274,2.313,2285,4.059,2286,2.742,2287,2.742,2288,2.742,2289,2.742,2291,2.742,2292,2.275,2293,4.541,2294,4.059,2295,2.742,2296,2.313,2297,4.059,2298,5.195,2299,2.742,2303,2.742,2304,2.742,2305,4.986,2306,2.313,2307,2.651,2308,3.011,2309,3.655,2310,3.011,2311,1.578,2312,3.011,2313,3.011,2314,2.355,2315,2.355,2316,3.011,2317,3.011,2318,2.452,2319,3.011,2320,3.011,2321,2.742,2322,2.742,2323,2.742,2324,3.011,2325,2.574,2326,2.742,2327,1.637,2328,1.761,2329,1.665,2330,3.011]],["component/124",[68,0.364]],["title/125-1",[459,28.806,1877,41.282,2236,34.29]],["name/125-1",[]],["text/125-1",[]],["component/125-1",[]],["title/125-2",[2184,65.403]],["name/125-2",[]],["text/125-2",[]],["component/125-2",[]],["title/125-3",[64,17.85,136,30.528,2187,28.097,2188,29.843,2341,40.397]],["name/125-3",[]],["text/125-3",[]],["component/125-3",[]],["title/125-4",[29,23.844,432,26.261,2188,29.843,2197,35.4,2342,24.248]],["name/125-4",[]],["text/125-4",[]],["component/125-4",[]],["title/125-5",[547,39.571,676,35.45]],["name/125-5",[]],["text/125-5",[]],["component/125-5",[]],["title/125-6",[64,20.078,415,26.388,718,37.19,1631,27.633]],["name/125-6",[]],["text/125-6",[]],["component/125-6",[]],["title/125-7",[259,32.773,2189,48.149]],["name/125-7",[]],["text/125-7",[]],["component/125-7",[]],["title/125",[68,19.528,2340,57.142]],["name/125",[68,0.309,2340,0.904]],["text/125",[0,1.202,4,2.65,5,2.185,13,2.552,14,2.839,19,2.615,21,1.543,23,3.319,24,2.062,29,4.191,33,2.374,44,2.623,53,1.986,55,3.175,62,1.926,64,2.244,68,2.29,72,1.77,75,1.711,76,1.128,78,3.543,87,2.062,97,2.062,113,1.809,115,3.47,119,1.752,127,2.506,129,2.798,148,2.149,191,1.865,194,2.341,201,1.667,203,2.849,208,2.391,253,2.357,271,2.072,291,2.004,307,2.013,309,2.013,317,2.374,353,1.96,354,3.285,357,2.224,395,2.104,404,2.914,415,2.95,420,1.796,432,4.076,458,2.341,459,4.75,472,2.279,551,3.004,552,4.855,558,2.409,597,3.302,634,3.109,642,2.676,676,3.67,681,4.157,718,2.649,719,3.725,738,1.865,770,2.104,774,1.865,802,3.956,855,6.63,916,2.198,1007,3.054,1009,2.836,1019,2.705,1118,2.486,1134,2.623,1153,2.465,1154,2.528,1161,2.598,1192,2.446,1269,2.623,1316,2.598,1365,2.676,1392,4.116,1496,1.392,1631,1.968,1666,2.705,1860,3.237,1878,2.874,1942,2.173,2037,4.343,2167,3.62,2187,2.251,2188,2.391,2191,2.446,2194,2.528,2197,4.451,2203,2.55,2207,4.157,2208,4.473,2209,4.039,2212,2.409,2225,3.237,2228,2.486,2229,2.676,2236,2.138,2250,2.735,2252,6.303,2253,2.914,2254,4.2,2255,2.735,2268,2.735,2269,2.735,2270,4.039,2271,2.735,2272,2.623,2273,2.735,2276,3.398,2296,5.916,2303,3.62,2304,3.62,2329,4.258,2340,3.054,2341,9.666,2342,1.943,2343,2.705,2344,3.004,2345,2.649,2346,3.169,2347,3.975,2348,3.62,2349,2.914,2350,3.975,2351,2.391,2352,1.716,2353,3.398,2354,2.836,2355,3.109,2356,2.705,2357,2.623,2358,3.62,2359,6.239,2360,3.975,2361,2.409,2362,3.975,2363,3.62,2364,2.735]],["component/125",[68,0.364]],["title/126-1",[459,28.806,1877,41.282,2236,34.29]],["name/126-1",[]],["text/126-1",[]],["component/126-1",[]],["title/126-2",[547,39.571,676,35.45]],["name/126-2",[]],["text/126-2",[]],["component/126-2",[]],["title/126-3",[4,17.246,5,14.22,64,14.608,307,20.565,996,26.049,1033,28.608,2366,34.714]],["name/126-3",[]],["text/126-3",[]],["component/126-3",[]],["title/126-4",[259,32.773,2189,48.149]],["name/126-4",[]],["text/126-4",[]],["component/126-4",[]],["title/126",[68,19.528,2365,57.142]],["name/126",[68,0.309,2365,0.904]],["text/126",[0,2.048,4,3.922,5,3.234,24,3.515,44,4.471,68,2.424,72,3.017,78,4.833,87,3.515,97,3.515,113,3.083,129,4.141,191,3.179,291,3.416,317,4.046,357,3.791,395,3.587,397,3.963,432,3.587,458,3.99,459,5.095,472,3.886,558,4.106,597,4.887,639,5.517,676,3.23,770,3.587,774,3.179,802,3.481,916,3.747,1033,4.774,1134,4.471,1365,4.562,1392,6.092,1496,2.373,2191,4.169,2194,4.309,2208,5.364,2209,5.978,2212,4.106,2228,4.237,2229,4.562,2236,3.644,2250,4.663,2252,6.348,2253,4.968,2254,6.217,2255,4.663,2268,4.663,2269,4.663,2270,5.978,2271,4.663,2272,4.471,2273,4.663,2340,5.206,2343,4.611,2365,5.206,2367,6.776,2368,6.776,2369,5.517,2370,4.717]],["component/126",[68,0.364]],["title/127-1",[459,28.806,1877,41.282,2236,34.29]],["name/127-1",[]],["text/127-1",[]],["component/127-1",[]],["title/127-2",[968,45.83]],["name/127-2",[]],["text/127-2",[]],["component/127-2",[]],["title/127-3",[547,39.571,676,35.45]],["name/127-3",[]],["text/127-3",[]],["component/127-3",[]],["title/127-4",[39,23.275,40,17.531,46,26.559,47,25.912,48,29.679,49,25.912,50,15.182,64,13.392]],["name/127-4",[]],["text/127-4",[]],["component/127-4",[]],["title/127-5",[20,27.277,21,19.264,33,29.628,676,23.649,2228,31.023]],["name/127-5",[]],["text/127-5",[]],["component/127-5",[]],["title/127-6",[259,32.773,2189,48.149]],["name/127-6",[]],["text/127-6",[]],["component/127-6",[]],["title/127",[68,19.528,2371,57.142]],["name/127",[68,0.309,2371,0.904]],["text/127",[0,1.515,4,3.774,5,2.608,12,3.929,13,2.05,19,1.702,20,2.755,21,1.945,24,2.599,33,2.992,34,2.369,39,3.133,40,2.36,44,3.306,50,2.044,62,2.428,64,1.803,68,2.76,72,2.231,78,4.089,84,2.709,87,2.599,97,2.599,113,3.388,129,3.34,191,3.493,219,2.562,271,2.612,291,2.526,307,2.538,317,2.992,357,2.803,373,2.492,395,2.652,397,2.93,415,2.369,432,2.652,458,2.95,459,4.749,472,2.873,558,3.036,578,2.369,579,3.41,597,3.941,676,3.549,770,2.652,774,2.351,802,3.825,818,2.398,916,2.771,968,4.565,1028,3.575,1033,3.53,1134,3.306,1143,3.059,1209,3.374,1255,3.53,1311,3.85,1316,3.274,1317,3.108,1365,3.374,1392,4.913,1496,3.112,1497,3.623,1631,2.481,1704,4.355,1774,3.673,1878,3.623,2191,3.083,2194,3.186,2208,4.326,2209,4.821,2212,3.036,2228,4.656,2229,3.374,2234,3.85,2236,2.694,2250,3.448,2252,5.537,2254,3.374,2255,3.448,2268,3.448,2269,3.448,2270,4.821,2271,3.448,2272,3.306,2273,3.448,2276,4.284,2343,5.067,2365,3.85,2370,5.183,2371,5.721,2372,5.011,2373,4.564,2374,5.54,2375,4.284,2376,3.623,2377,4.411,2378,6.063,2379,3.244,2380,5.124,2381,3.901,2382,4.411,2383,3.339,2384,5.011,2385,3.575,2386,4.284,2387,5.011,2388,4.08]],["component/127",[68,0.364]],["title/128-1",[459,28.806,1877,41.282,2236,34.29]],["name/128-1",[]],["text/128-1",[]],["component/128-1",[]],["title/128-2",[968,45.83]],["name/128-2",[]],["text/128-2",[]],["component/128-2",[]],["title/128-3",[547,39.571,676,35.45]],["name/128-3",[]],["text/128-3",[]],["component/128-3",[]],["title/128-4",[64,22.941,177,29.682,1705,25.109]],["name/128-4",[]],["text/128-4",[]],["component/128-4",[]],["title/128-5",[1745,43.793,2204,45.762]],["name/128-5",[]],["text/128-5",[]],["component/128-5",[]],["title/128-6",[259,32.773,2189,48.149]],["name/128-6",[]],["text/128-6",[]],["component/128-6",[]],["title/128",[0,19.276,68,16.743,2389,44.389]],["name/128",[0,0.246,68,0.213,2389,0.566]],["text/128",[0,2.795,4,3.928,5,2.742,19,1.822,24,2.783,44,3.54,64,1.93,68,2.839,72,2.389,76,2.885,78,4.255,84,2.901,87,2.783,97,2.783,113,2.441,129,4.147,148,2.901,176,3.575,177,3.645,191,2.517,271,2.797,291,2.705,309,2.717,317,3.204,357,3.002,363,3.828,395,2.84,397,3.138,415,2.537,432,2.84,458,3.159,459,4.177,472,3.077,558,3.251,578,2.537,579,3.651,597,2.84,676,2.557,770,2.84,774,2.517,802,4.75,817,2.84,901,3.251,916,2.967,968,4.75,1033,3.78,1134,3.54,1255,3.78,1311,4.122,1317,3.327,1365,3.612,1392,5.167,1496,1.879,1631,2.656,1705,2.113,1745,3.159,1878,3.879,2191,3.301,2194,3.412,2196,2.84,2204,4.818,2208,5.372,2209,5.069,2212,3.251,2222,4.054,2228,3.355,2229,3.612,2234,4.122,2236,2.885,2237,4.368,2250,3.692,2252,5.722,2254,3.612,2255,3.692,2268,3.692,2269,3.692,2270,5.069,2271,3.692,2272,3.54,2273,3.692,2343,5.329,2370,5.451,2374,5.826,2375,4.587,2376,3.879,2389,6.437,2390,4.886,2391,5.365,2392,4.886,2393,3.735,2394,3.735,2395,4.886,2396,4.054,2397,4.368,2398,3.735]],["component/128",[68,0.364]],["title/129-1",[459,28.806,1877,41.282,2236,34.29]],["name/129-1",[]],["text/129-1",[]],["component/129-1",[]],["title/129-2",[968,45.83]],["name/129-2",[]],["text/129-2",[]],["component/129-2",[]],["title/129-3",[547,39.571,676,35.45]],["name/129-3",[]],["text/129-3",[]],["component/129-3",[]],["title/129-4",[64,22.941,177,29.682,1705,25.109]],["name/129-4",[]],["text/129-4",[]],["component/129-4",[]],["title/129-5",[1745,43.793,2204,45.762]],["name/129-5",[]],["text/129-5",[]],["component/129-5",[]],["title/129-6",[259,32.773,2189,48.149]],["name/129-6",[]],["text/129-6",[]],["component/129-6",[]],["title/129",[68,19.528,2389,51.773]],["name/129",[68,0.309,2389,0.819]],["text/129",[0,1.654,4,3.972,5,2.782,19,1.859,24,2.839,44,3.611,64,1.969,68,2.861,72,2.437,76,2.913,78,4.304,84,2.959,87,2.839,97,2.839,113,2.49,129,4.194,148,2.959,176,3.647,177,3.698,191,2.567,271,2.853,291,2.759,309,2.772,317,3.268,357,3.062,395,2.897,397,3.201,415,2.588,432,2.897,458,3.222,459,4.225,472,3.138,558,3.316,578,2.588,579,3.724,597,4.205,676,2.609,770,2.897,774,2.567,802,4.805,901,3.316,916,3.026,968,4.805,1033,3.856,1134,3.611,1255,3.856,1311,4.205,1317,3.394,1365,3.685,1392,5.242,1496,1.917,1705,2.155,1745,3.222,1878,3.957,2191,3.367,2194,3.48,2196,2.897,2204,4.888,2208,5.433,2209,5.143,2212,3.316,2222,4.135,2228,3.422,2229,3.685,2234,4.205,2236,2.943,2237,4.456,2250,3.766,2252,5.776,2254,3.685,2255,3.766,2268,3.766,2269,3.766,2270,5.143,2271,3.766,2272,3.611,2273,3.766,2343,5.406,2370,5.53,2371,4.205,2373,4.984,2374,5.91,2375,4.679,2376,3.957,2389,5.53,2390,4.984,2392,4.984,2393,3.81,2394,3.81,2395,4.984,2396,4.135,2397,4.456]],["component/129",[68,0.364]],["title/130-1",[459,28.806,1877,41.282,2236,34.29]],["name/130-1",[]],["text/130-1",[]],["component/130-1",[]],["title/130-2",[968,45.83]],["name/130-2",[]],["text/130-2",[]],["component/130-2",[]],["title/130-3",[547,39.571,676,35.45]],["name/130-3",[]],["text/130-3",[]],["component/130-3",[]],["title/130-4",[64,26.757,1729,55.331]],["name/130-4",[]],["text/130-4",[]],["component/130-4",[]],["title/130-5",[64,20.078,177,25.977,1705,21.975,2204,34.339]],["name/130-5",[]],["text/130-5",[]],["component/130-5",[]],["title/130-6",[203,33.969,744,41.861]],["name/130-6",[]],["text/130-6",[]],["component/130-6",[]],["title/130-7",[39,25.388,40,19.123,46,28.971,47,28.265,48,32.374,49,28.265,50,16.56]],["name/130-7",[]],["text/130-7",[]],["component/130-7",[]],["title/130-8",[259,32.773,2189,48.149]],["name/130-8",[]],["text/130-8",[]],["component/130-8",[]],["title/130",[68,19.528,2399,58.169]],["name/130",[68,0.309,2399,0.92]],["text/130",[0,1.819,1,2.459,4,4.389,5,2.618,12,2.661,13,1.554,14,1.728,16,2.614,19,2.539,20,4.11,21,2.902,24,1.97,34,2.846,44,2.506,46,2.71,47,2.644,53,3.734,64,3.06,68,2.589,69,2.221,72,1.691,76,1.708,78,3.914,84,2.054,87,1.97,97,1.97,113,1.728,129,2.699,134,1.674,137,2.616,148,2.054,174,1.961,176,2.531,181,2.054,189,1.697,191,1.782,193,3.048,200,2.151,213,1.583,254,2.021,271,3.138,291,1.915,307,1.924,313,2.252,317,2.268,325,1.924,353,1.872,357,2.125,359,2.87,365,1.942,370,2.482,373,1.889,376,1.933,387,2.585,388,2.112,395,2.01,414,2.112,415,1.796,420,2.719,432,2.01,452,2.356,458,2.237,459,3.377,465,1.728,472,2.178,547,2.021,558,2.302,559,1.889,564,1.754,578,1.796,597,2.01,642,2.557,653,3.093,657,2.221,667,2.785,676,2.869,730,2.87,744,4.207,745,2.531,770,2.01,774,1.782,802,3.092,818,1.818,872,3.52,874,2.585,916,2.1,968,4.369,1014,2.395,1017,2.032,1033,2.676,1134,2.506,1255,2.676,1311,4.624,1317,2.356,1318,2.644,1352,2.644,1365,2.557,1392,3.971,1443,2.971,1493,2.178,1496,2.108,1631,2.98,1657,2.319,1705,2.944,1708,3.093,1709,4.636,1733,2.971,1862,4.548,1866,2.87,1878,2.746,1966,3.247,2032,3.093,2191,2.337,2194,2.415,2204,2.337,2208,3.496,2209,3.896,2212,2.302,2229,2.557,2234,2.918,2236,2.042,2250,2.614,2254,2.557,2255,2.614,2268,2.614,2269,2.614,2270,3.896,2271,2.614,2272,2.506,2273,2.614,2290,3.459,2298,3.093,2343,2.585,2352,1.64,2370,4.19,2374,5.561,2376,2.746,2377,3.344,2379,2.459,2381,1.99,2389,2.644,2399,4.707,2400,3.604,2401,3.604,2402,3.798,2403,3.798,2404,3.459,2405,3.604,2406,2.557,2407,3.798,2408,2.971,2409,3.459,2410,2.746,2411,3.247,2412,9.27,2413,3.798,2414,3.798,2415,2.971,2416,3.798,2417,3.798,2418,2.356,2419,3.798,2420,3.798,2421,3.798,2422,3.798,2423,3.798,2424,3.798,2425,2.971,2426,3.798,2427,3.247,2428,3.798]],["component/130",[68,0.364]],["title/131-1",[459,28.806,1877,41.282,2236,34.29]],["name/131-1",[]],["text/131-1",[]],["component/131-1",[]],["title/131-2",[968,45.83]],["name/131-2",[]],["text/131-2",[]],["component/131-2",[]],["title/131-3",[64,26.757,1729,55.331]],["name/131-3",[]],["text/131-3",[]],["component/131-3",[]],["title/131-4",[20,35.057,21,24.758,64,22.941]],["name/131-4",[]],["text/131-4",[]],["component/131-4",[]],["title/131-5",[64,20.078,177,25.977,1496,19.545,2204,34.339]],["name/131-5",[]],["text/131-5",[]],["component/131-5",[]],["title/131-6",[64,17.85,177,23.094,1496,17.376,1705,19.537,2204,30.528]],["name/131-6",[]],["text/131-6",[]],["component/131-6",[]],["title/131-7",[46,31.864,47,31.088,50,18.214,64,16.067,811,31.088,2378,36.362]],["name/131-7",[]],["text/131-7",[]],["component/131-7",[]],["title/131-8",[259,32.773,2189,48.149]],["name/131-8",[]],["text/131-8",[]],["component/131-8",[]],["title/131",[68,19.528,6608,67.738]],["name/131",[68,0.309,6608,1.072]],["text/131",[0,1.356,4,4.486,5,2.91,12,3.028,19,2.326,20,2.465,21,2.659,24,2.326,39,2.804,40,3.225,44,2.959,59,2.25,64,3.953,68,2.773,72,1.997,76,2.358,78,5.213,84,2.424,87,2.326,97,2.326,104,2.959,113,2.041,129,3.727,160,2.494,176,2.988,191,3.213,213,1.869,254,2.386,271,2.338,276,2.271,291,2.261,317,2.678,357,2.509,395,2.373,415,3.929,420,3.094,432,2.373,458,2.64,459,3.754,472,2.571,501,2.361,547,3.644,558,2.717,578,2.12,650,2.623,676,2.137,719,2.678,761,2.411,774,2.104,802,3.518,812,2.104,901,2.717,916,3.787,968,4.269,1014,2.827,1017,3.663,1027,4.713,1033,3.159,1134,2.959,1255,3.159,1298,2.93,1311,5.262,1317,2.781,1365,3.019,1373,2.852,1392,4.519,1496,1.57,1497,4.952,1631,3.391,1705,1.766,1878,3.242,1942,2.451,2176,4.255,2191,2.759,2194,2.852,2196,3.625,2204,2.759,2208,3.979,2209,4.434,2212,2.717,2229,3.019,2234,3.445,2236,2.411,2248,3.575,2250,3.086,2254,3.019,2255,3.086,2268,3.086,2269,3.086,2270,4.434,2271,3.086,2272,2.959,2273,3.086,2374,6.182,2376,3.242,2379,4.434,2399,3.507,2400,6.499,2401,4.255,2404,4.084,2405,4.255,2406,5.595,2695,5.021,3908,3.336,4287,3.834,4419,3.834,4915,4.255,5767,3.947,5800,4.255,6608,6.238,6609,4.832,6610,4.832,6611,7.38,6612,4.832,6613,4.832,6614,4.832,6615,4.832,6616,4.832,6617,4.832]],["component/131",[68,0.364]],["title/132",[656,35.89,802,38.207]],["name/132",[2429,2.129]],["text/132",[0,3.292,68,3.633,578,4.125,656,4.21,802,5.595,1116,6.49,2243,6.703,2246,7.581,2274,6.703,2296,6.703,2340,6.703,2365,6.703,2369,7.103,2371,6.703,2389,7.581,2399,6.823,6608,7.946]],["component/132",[68,0.364]],["title/133-1",[733,38.207,2352,32.112]],["name/133-1",[]],["text/133-1",[]],["component/133-1",[]],["title/133-2",[5,26.047,76,21.109]],["name/133-2",[]],["text/133-2",[]],["component/133-2",[]],["title/133-3",[76,21.109,2311,38.966]],["name/133-3",[]],["text/133-3",[]],["component/133-3",[]],["title/133-4",[2432,51.773,2433,54.524]],["name/133-4",[]],["text/133-4",[]],["component/133-4",[]],["title/133-5",[2432,51.773,2434,53.065]],["name/133-5",[]],["text/133-5",[]],["component/133-5",[]],["title/133-6",[28,38.519]],["name/133-6",[]],["text/133-6",[]],["component/133-6",[]],["title/133-7",[473,30.372]],["name/133-7",[]],["text/133-7",[]],["component/133-7",[]],["title/133-8",[2435,49.047]],["name/133-8",[]],["text/133-8",[]],["component/133-8",[]],["title/133-9",[185,26.74,559,31.714,2436,33.928]],["name/133-9",[]],["text/133-9",[]],["component/133-9",[]],["title/133-10",[19,25.262,473,25.32]],["name/133-10",[]],["text/133-10",[]],["component/133-10",[]],["title/133-11",[635,40.211,2433,54.524]],["name/133-11",[]],["text/133-11",[]],["component/133-11",[]],["title/133-12",[635,40.211,2434,53.065]],["name/133-12",[]],["text/133-12",[]],["component/133-12",[]],["title/133",[65,29.85,1496,19.545,2430,47.712,2431,49.128]],["name/133",[1496,0.285,2433,0.596,2434,0.58]],["text/133",[0,0.628,3,2.057,4,2.467,5,0.727,8,1.665,13,1.981,14,2.203,19,2.465,24,1.884,31,1.84,34,0.982,40,2.736,49,2.529,53,1.815,64,0.747,65,2.59,75,1.563,76,1.649,80,0.986,119,2.134,134,2.908,155,1.111,160,2.02,188,5.457,189,3.706,196,1.129,201,4.345,213,2.421,220,0.9,258,1.047,276,1.052,287,2.097,308,1.047,385,2.367,387,1.413,400,1.429,417,2.097,420,5.195,465,2.643,468,1.665,473,0.707,474,1.332,485,0.99,492,1.691,510,1.129,535,2.803,543,1.223,561,3.784,564,1.678,582,2.524,606,1.997,635,1.123,650,3.397,656,1.753,667,4.259,683,1.299,696,2.397,703,1.37,733,1.866,738,1.704,786,1.975,817,1.099,818,0.994,951,1.398,965,1.894,966,2.253,970,1.162,1090,1.892,1121,2.291,1154,1.321,1221,3.107,1226,1.849,1496,1.272,1741,4.539,1824,1.828,1942,4.534,2153,3.455,2178,1.624,2181,1.148,2182,6.011,2235,1.047,2327,5.258,2329,2.009,2352,0.897,2356,1.413,2358,1.892,2406,5.584,2430,1.776,2431,5.114,2432,8.14,2433,8.504,2434,7.245,2437,3.633,2438,2.472,2439,1.913,2440,1.624,2441,1.776,2442,1.691,2443,2.077,2444,2.077,2445,2.077,2446,3.091,2447,1.997,2448,5.809,2449,3.091,2450,4.367,2451,3.397,2452,1.892,2453,1.569,2454,2.154,2455,3.633,2456,1.892,2457,1.624,2458,2.077,2459,2.077,2460,2.077,2461,2.077,2462,2.077,2463,2.077,2464,3.633,2465,6.6,2466,3.633,2467,3.633,2468,3.447,2469,3.633,2470,3.447,2471,2.077,2472,1.776,2473,2.077,2474,2.077,2475,2.077,2476,2.077,2477,2.077,2478,2.077,2479,2.077,2480,2.077,2481,3.633,2482,5.809,2483,5.499,2484,3.309,2485,3.633,2486,2.472,2487,2.077,2488,2.077,2489,3.633,2490,2.077,2491,1.357,2492,5.809,2493,2.077,2494,1.73,2495,2.077,2496,4.595,2497,1.776,2498,1.776,2499,1.446,2500,2.077,2501,1.215,2502,1.776,2503,2.077,2504,5.809,2505,2.077,2506,2.077,2507,1.398,2508,2.077,2509,3.633,2510,2.077,2511,2.077,2512,1.776,2513,2.077,2514,2.077,2515,2.077,2516,2.077,2517,2.077,2518,2.077,2519,2.077,2520,2.077,2521,2.077,2522,2.077,2523,2.077,2524,2.077,2525,2.077,2526,2.077,2527,2.077,2528,2.077]],["component/133",[68,0.364]],["title/134-1",[0,22.482,355,43.207]],["name/134-1",[]],["text/134-1",[]],["component/134-1",[]],["title/134-2",[151,27.731,159,42.117]],["name/134-2",[]],["text/134-2",[]],["component/134-2",[]],["title/134-3",[21,21.668,76,15.84,152,22.425,1644,36.129]],["name/134-3",[]],["text/134-3",[]],["component/134-3",[]],["title/134-4",[1635,39.236,2529,40.551,2530,43.395]],["name/134-4",[]],["text/134-4",[]],["component/134-4",[]],["title/134-5",[21,15.765,1636,25.821,2531,30.682,2532,30.682,2533,30.682,2534,30.682,2535,29.767]],["name/134-5",[]],["text/134-5",[]],["component/134-5",[]],["title/134-6",[21,21.668,1637,37.979,2536,37.979,2537,39.818]],["name/134-6",[]],["text/134-6",[]],["component/134-6",[]],["title/134-7",[749,32.736,1262,33.765,1657,30.293,2379,32.12,2538,40.397]],["name/134-7",[]],["text/134-7",[]],["component/134-7",[]],["title/134-8",[230,33.09,348,32.421,2529,35.49,2554,43.649]],["name/134-8",[]],["text/134-8",[]],["component/134-8",[]],["title/134-9",[88,22.016,557,28.651,2342,21.826,2541,22.833,2542,33.747,2557,36.362]],["name/134-9",[]],["text/134-9",[]],["component/134-9",[]],["title/134-10",[50,26.007,2439,33.579,2543,51.919]],["name/134-10",[]],["text/134-10",[]],["component/134-10",[]],["title/134-11",[2439,33.579,2544,58.078,2564,43.395]],["name/134-11",[]],["text/134-11",[]],["component/134-11",[]],["title/134-12",[2439,33.579,2545,58.078,2565,46.748]],["name/134-12",[]],["text/134-12",[]],["component/134-12",[]],["title/134-13",[12,28.197,123,31.856,1006,37.293]],["name/134-13",[]],["text/134-13",[]],["component/134-13",[]],["title/134-14",[12,28.197,2357,42.073,2569,56.135]],["name/134-14",[]],["text/134-14",[]],["component/134-14",[]],["title/134-15",[24,33.078,1006,37.293,2573,56.135]],["name/134-15",[]],["text/134-15",[]],["component/134-15",[]],["title/134-16",[1006,43.496,2583,67.738]],["name/134-16",[]],["text/134-16",[]],["component/134-16",[]],["title/134-17",[12,28.197,2357,42.073,2584,58.078]],["name/134-17",[]],["text/134-17",[]],["component/134-17",[]],["title/134-18",[24,33.078,1006,37.293,2585,58.078]],["name/134-18",[]],["text/134-18",[]],["component/134-18",[]],["title/134-19",[5,26.047,6618,74.376]],["name/134-19",[]],["text/134-19",[]],["component/134-19",[]],["title/134-20",[2235,37.495,6619,74.376]],["name/134-20",[]],["text/134-20",[]],["component/134-20",[]],["title/134-21",[2547,59.3,6620,74.376]],["name/134-21",[]],["text/134-21",[]],["component/134-21",[]],["title/134-22",[1019,50.614,4970,67.738]],["name/134-22",[]],["text/134-22",[]],["component/134-22",[]],["title/134-23",[2550,60.556,6621,74.376]],["name/134-23",[]],["text/134-23",[]],["component/134-23",[]],["title/134-24",[1020,56.2,6622,74.376]],["name/134-24",[]],["text/134-24",[]],["component/134-24",[]],["title/134-25",[1026,46.127,6623,74.376]],["name/134-25",[]],["text/134-25",[]],["component/134-25",[]],["title/134-26",[1014,46.893,6624,74.376]],["name/134-26",[]],["text/134-26",[]],["component/134-26",[]],["title/134-27",[435,39.548,1012,42.934,6625,63.769]],["name/134-27",[]],["text/134-27",[]],["component/134-27",[]],["title/134-28",[1026,46.127,6626,74.376]],["name/134-28",[]],["text/134-28",[]],["component/134-28",[]],["title/134-29",[980,28.4,1012,30.069,1025,35.608,1026,27.698,2556,31.088,6627,44.661]],["name/134-29",[]],["text/134-29",[]],["component/134-29",[]],["title/134-30",[2558,43.496,6628,74.376]],["name/134-30",[]],["text/134-30",[]],["component/134-30",[]],["title/134-31",[12,28.197,2560,40.91,6629,63.769]],["name/134-31",[]],["text/134-31",[]],["component/134-31",[]],["title/134-32",[75,21.351,2531,37.492,2562,31.831,2563,42.418,6630,49.617]],["name/134-32",[]],["text/134-32",[]],["component/134-32",[]],["title/134-33",[21,24.758,76,18.099,153,31.435]],["name/134-33",[]],["text/134-33",[]],["component/134-33",[]],["title/134-34",[21,24.758,179,31.574,2370,44.389]],["name/134-34",[]],["text/134-34",[]],["component/134-34",[]],["title/134-35",[3102,72.638]],["name/134-35",[]],["text/134-35",[]],["component/134-35",[]],["title/134-36",[2381,38.966,6631,67.738]],["name/134-36",[]],["text/134-36",[]],["component/134-36",[]],["title/134-37",[2568,74.376,6632,80.145]],["name/134-37",[]],["text/134-37",[]],["component/134-37",[]],["title/134-38",[19,21.659,147,32.917,748,35.465]],["name/134-38",[]],["text/134-38",[]],["component/134-38",[]],["title/134-39",[2570,50.829,2571,42.171,2572,32.638,6633,50.829]],["name/134-39",[]],["text/134-39",[]],["component/134-39",[]],["title/134-40",[2252,41.861,6634,67.738]],["name/134-40",[]],["text/134-40",[]],["component/134-40",[]],["title/134-41",[181,30.173,1338,36.468,2281,32.209,6635,55.81]],["name/134-41",[]],["text/134-41",[]],["component/134-41",[]],["title/134-42",[181,34.476,1338,41.669,6636,63.769]],["name/134-42",[]],["text/134-42",[]],["component/134-42",[]],["title/134-43",[3,31.604,179,27.633,818,26.71,6637,55.81]],["name/134-43",[]],["text/134-43",[]],["component/134-43",[]],["title/134-44",[12,28.197,21,24.758,6638,63.769]],["name/134-44",[]],["text/134-44",[]],["component/134-44",[]],["title/134-45",[2381,38.966,6639,74.376]],["name/134-45",[]],["text/134-45",[]],["component/134-45",[]],["title/134-46",[179,36.826,6640,74.376]],["name/134-46",[]],["text/134-46",[]],["component/134-46",[]],["title/134-47",[6641,89.216]],["name/134-47",[]],["text/134-47",[]],["component/134-47",[]],["title/134-48",[12,28.197,986,37.045,6642,63.769]],["name/134-48",[]],["text/134-48",[]],["component/134-48",[]],["title/134-49",[2381,38.966,6643,74.376]],["name/134-49",[]],["text/134-49",[]],["component/134-49",[]],["title/134-50",[4,23.704,12,24.678,676,26.601,2804,45.439]],["name/134-50",[]],["text/134-50",[]],["component/134-50",[]],["title/134-51",[676,30.395,2558,37.293,6644,63.769]],["name/134-51",[]],["text/134-51",[]],["component/134-51",[]],["title/134-52",[676,26.601,1026,34.612,2586,47.712,6645,55.81]],["name/134-52",[]],["text/134-52",[]],["component/134-52",[]],["title/134-53",[248,32.917,996,40.91,2587,44.389]],["name/134-53",[]],["text/134-53",[]],["component/134-53",[]],["title/134",[21,28.877,1496,26.047]],["name/134",[21,0.457,1496,0.412]],["text/134",[0,0.429,1,0.749,2,0.371,3,2.887,4,1.989,5,1.308,6,2.467,7,0.226,8,1.086,9,3.169,10,1.566,11,0.449,12,3.201,13,3.469,14,1.451,15,0.86,17,0.41,18,0.175,19,3.064,20,0.78,21,3.52,23,1.697,24,0.16,25,2.814,27,0.157,29,1.623,31,0.156,32,0.469,33,0.847,34,0.547,40,0.417,42,0.173,50,0.78,53,2.675,55,0.589,57,0.586,58,0.363,59,1.402,60,2.359,61,1.166,62,0.688,63,0.207,64,0.771,65,0.322,66,0.311,67,0.437,69,0.518,71,0.144,72,0.516,75,0.611,76,1.716,80,0.793,82,0.447,88,2.513,92,0.398,93,0.398,95,0.442,99,0.233,100,0.603,113,0.14,114,0.233,116,0.442,118,0.406,119,2.711,123,0.443,126,1.586,127,1.761,128,1.007,129,0.27,134,0.39,137,1.029,146,0.161,147,0.457,151,0.713,152,0.356,153,0.437,155,0.165,156,1.934,158,0.191,159,0.656,160,0.335,163,2.293,167,0.175,174,0.598,177,0.412,178,1.11,179,1.934,180,0.848,181,0.326,182,0.196,183,0.387,184,0.147,185,0.129,186,1.262,188,3.739,189,1.669,190,0.55,191,0.283,192,0.816,193,0.719,194,0.181,196,0.629,197,0.257,198,0.472,200,0.174,201,2.623,203,0.873,206,0.85,209,0.22,211,0.938,213,2.178,218,0.21,219,0.308,220,0.615,226,0.183,228,0.549,230,0.183,248,0.311,251,0.167,254,1.141,255,0.203,258,0.584,260,1.429,271,1.235,273,0.226,276,1.892,280,0.205,289,0.191,290,0.38,291,0.155,298,0.144,306,0.212,307,0.156,308,1.303,309,0.449,313,0.525,320,0.652,323,0.188,324,0.233,325,2.222,326,0.43,327,0.598,328,0.491,336,0.496,339,0.522,347,0.559,348,0.515,349,0.39,351,0.138,352,0.203,356,2.003,361,0.314,363,0.632,364,1.102,365,0.854,368,0.619,370,0.579,373,1.066,374,0.456,376,0.157,385,3.499,387,1.136,388,0.335,393,0.693,395,0.163,398,0.702,414,0.929,420,0.139,432,0.469,435,0.374,437,0.43,449,0.251,450,0.603,452,0.191,458,0.181,459,0.4,464,1.113,465,0.274,466,1.089,468,1.548,473,1.15,474,0.198,478,0.189,479,0.518,485,0.796,493,0.456,501,0.162,503,0.406,524,0.17,531,0.212,542,0.808,543,0.181,544,0.398,547,0.471,549,0.529,551,0.233,557,0.743,563,0.194,564,0.535,577,1.478,578,1.014,579,0.21,582,0.462,583,0.233,584,1.833,590,0.456,598,0.344,599,0.977,604,0.194,606,1.302,608,0.669,619,0.226,624,0.456,635,0.767,649,0.201,657,1.751,659,0.205,661,0.205,670,1.004,676,1.78,679,0.357,683,0.724,686,0.849,689,0.205,702,2.396,703,0.398,705,0.214,707,0.212,710,0.436,714,0.212,728,0.472,732,0.449,735,0.826,738,0.416,739,1.135,741,0.491,748,1.317,749,0.585,751,0.61,761,1.273,762,0.469,770,0.163,774,1.752,777,0.22,778,0.371,780,1.347,781,0.233,782,0.929,786,0.167,789,1.53,790,0.192,799,0.201,801,0.387,802,1.828,804,0.518,811,0.214,812,0.543,817,1.012,818,3.805,822,0.41,823,3.661,830,0.387,845,0.214,848,0.585,853,0.251,859,0.41,871,1.04,882,0.764,888,0.241,898,1.195,899,0.617,901,1.012,903,1.012,915,1.213,940,1.02,943,0.43,944,0.757,950,1.133,952,1.091,955,0.233,958,0.251,963,2.338,965,0.462,966,0.191,968,2.751,970,0.172,973,1.788,974,0.41,976,0.223,980,1.506,982,0.624,986,0.673,990,0.241,993,0.436,996,0.387,997,1.993,999,0.456,1002,1.29,1003,0.251,1006,1.865,1009,0.43,1012,2.953,1013,0.442,1014,0.895,1015,0.65,1016,1.195,1017,1.806,1018,0.603,1019,2.542,1020,1.262,1021,0.251,1024,1.364,1026,1.978,1027,2.57,1028,1.012,1052,0.263,1073,1.224,1094,3.088,1096,1.388,1100,0.263,1101,0.263,1102,0.263,1103,0.263,1104,0.263,1105,0.263,1106,0.449,1107,0.449,1113,0.43,1118,1.616,1131,0.263,1143,0.368,1144,0.515,1148,0.585,1149,1.207,1153,0.191,1159,0.241,1161,0.394,1164,0.339,1170,0.207,1173,0.491,1177,0.233,1181,1.044,1192,1.719,1196,0.541,1197,0.481,1198,0.738,1201,0.263,1209,0.955,1226,0.157,1232,0.387,1234,2.379,1251,0.198,1252,0.41,1254,0.374,1269,0.203,1283,0.28,1291,0.43,1293,0.226,1298,0.579,1299,0.491,1301,0.233,1306,1.762,1310,1.09,1316,0.394,1318,0.617,1320,0.207,1322,0.456,1326,0.237,1327,1.401,1335,0.212,1336,0.43,1337,0.38,1339,0.377,1352,0.806,1353,0.905,1355,0.233,1366,0.472,1373,0.196,1374,0.263,1375,0.263,1376,0.233,1379,0.233,1408,0.632,1443,0.472,1493,0.664,1495,0.43,1496,1.049,1644,2.065,1657,1.167,1663,0.205,1666,0.21,1667,1.287,1685,0.579,1704,0.83,1710,0.241,1718,0.263,1732,0.43,1741,0.314,1744,0.353,1745,0.181,1749,0.997,1764,0.198,1801,0.233,1809,0.251,1852,0.263,1868,0.214,1879,1.939,1883,0.788,1887,0.241,1917,0.201,1953,1.124,1958,0.251,1961,0.257,1967,0.826,1968,0.18,1969,0.194,2030,0.251,2035,0.233,2038,0.263,2044,1.072,2051,0.217,2084,0.205,2136,0.233,2138,0.42,2139,0.764,2163,0.229,2181,0.333,2187,0.174,2188,0.185,2191,0.189,2203,0.387,2204,0.712,2207,0.59,2231,0.826,2235,0.447,2236,0.476,2240,0.241,2241,0.41,2242,0.241,2252,4.545,2281,4.085,2282,0.46,2306,0.237,2318,0.251,2327,0.328,2328,0.518,2329,1.186,2342,1.651,2344,0.456,2345,0.205,2351,1.801,2352,0.383,2354,1.364,2356,1.136,2357,0.398,2361,0.537,2369,0.251,2370,0.214,2376,0.223,2379,0.749,2380,0.212,2381,3.278,2383,1.113,2386,0.515,2418,0.374,2425,0.241,2434,0.632,2438,0.21,2439,3.449,2440,0.241,2441,0.263,2446,0.164,2447,0.169,2450,0.467,2486,1.136,2491,0.201,2499,0.806,2507,1.124,2529,1.215,2530,1.459,2531,0.875,2532,0.456,2533,0.456,2534,0.456,2535,0.442,2536,0.41,2537,0.43,2538,0.251,2541,0.854,2542,0.233,2547,0.706,2550,0.943,2556,0.806,2558,4.533,2560,3.666,2562,5.606,2563,0.263,2571,0.456,2572,3.99,2587,0.42,2588,0.214,2589,0.28,2590,0.271,2591,0.515,2592,0.549,2593,0.233,2594,1.292,2595,0.251,2596,0.229,2597,0.515,2598,0.263,2599,0.28,2600,0.233,2601,0.233,2602,1.521,2603,1.262,2604,1.778,2605,1,2606,0.456,2607,0.241,2608,1.36,2609,1.705,2610,0.233,2611,0.233,2612,0.28,2613,0.226,2614,0.263,2615,0.456,2616,0.226,2617,0.515,2618,1.306,2619,0.65,2620,1.495,2621,0.251,2622,0.251,2623,0.241,2624,0.28,2625,0.263,2626,0.263,2627,1.331,2628,0.241,2629,0.251,2630,0.263,2631,0.251,2632,0.251,2633,0.251,2634,0.263,2635,0.263,2636,0.263,2637,0.263,2638,0.263,2639,0.263,2640,0.263,2641,0.28,2642,0.263,2643,0.456,2644,0.807,2645,0.233,2646,0.99,2647,1.928,2648,0.28,2649,0.28,2650,0.308,2651,0.603,2652,0.28,2653,1.158,2654,0.807,2655,1.158,2656,0.99,2657,0.603,2658,4.247,2659,0.603,2660,1.213,2661,0.905,2662,1.054,2663,0.603,2664,2.388,2665,0.603,2666,1.054,2667,0.99,2668,2.025,2669,0.603,2670,0.603,2671,0.28,2672,0.28,2673,0.251,2674,0.28,2675,0.308,2676,0.28,2677,0.515,2678,0.515,2679,0.308,2680,0.308,2681,0.251,2682,0.308,2683,0.28,2684,0.905,2685,0.491,2686,2.678,2687,0.757,2688,0.456,2689,0.205,2690,0.28,2691,0.442,2692,1.054,2693,0.233,2694,0.875,2695,0.442,2696,0.456,2697,0.251,2698,2.597,2699,0.251,2700,0.251,2701,0.988,2702,0.28,2703,0.271,2704,0.308,2705,0.28,2706,0.28,2707,0.549,2708,0.481,2709,0.233,2710,0.308,2711,0.251,2712,0.28,2713,2.995,2714,0.603,2715,1.054,2716,2.726,2717,0.603,2718,1.292,2719,0.603,2720,1.158,2721,2.144,2722,0.263,2723,0.28,2724,0.263,2725,0.28,2726,0.251,2727,0.28,2728,0.502,2729,0.549,2730,0.308,2731,0.28,2732,0.28,2733,0.549,2734,0.549,2735,0.28,2736,0.28,2737,0.251,2738,0.491,2739,0.807,2740,0.425,2741,0.28,2742,0.214,2743,0.308,2744,0.237,2745,0.28,2746,0.861,2747,0.263,2748,0.28,2749,0.233,2750,0.549,2751,0.308,2752,0.491,2753,0.549,2754,2.21,2755,2.388,2756,0.28,2757,0.28,2758,0.308,2759,0.308,2760,0.472,2761,0.875,2762,0.28,2763,0.491,2764,0.43,2765,2.784,2766,3.309,2767,0.875,2768,2.104,2769,0.491,2770,0.251,2771,0.603,2772,0.22,2773,0.374,2774,0.531,2775,0.807,2776,0.308,2777,0.308,2778,0.308,2779,0.233,2780,0.28,2781,1.155,2782,0.308,2783,0.241,2784,0.28,2785,0.449,2786,0.531,2787,0.476,2788,0.943,2789,0.442,2790,1.262,2791,0.491,2792,0.226,2793,0.233,2794,0.28,2795,0.28,2796,0.28,2797,0.28,2798,0.28,2799,0.28,2800,0.251,2801,2.905,2802,0.263,2803,1.072,2804,0.491,2805,0.43,2806,1.113,2807,0.41,2808,0.28,2809,0.251,2810,0.771,2811,0.807,2812,1.054,2813,0.549,2814,0.807,2815,0.28,2816,0.28,2817,0.251,2818,0.549,2819,0.205,2820,0.28,2821,0.28,2822,0.394,2823,0.28,2824,0.549,2825,0.28,2826,0.28,2827,0.28,2828,0.28,2829,0.28,2830,0.28,2831,0.28,2832,0.28,2833,0.28,2834,0.263,2835,0.28,2836,0.28,2837,0.28,2838,0.549,2839,0.214,2840,2.823,2841,1.36,2842,0.241,2843,0.28,2844,0.241,2845,0.233,2846,1.054,2847,0.28,2848,0.28,2849,1.746,2850,0.28,2851,0.28,2852,0.28,2853,0.757,2854,0.28,2855,1.054,2856,0.28,2857,0.28,2858,0.28,2859,1.292,2860,0.515,2861,0.549,2862,0.549,2863,0.721,2864,0.28,2865,1.634,2866,0.214,2867,0.251,2868,0.263,2869,0.28,2870,0.28,2871,0.28,2872,1.012,2873,0.28,2874,0.28,2875,0.28,2876,0.28,2877,0.442,2878,0.263,2879,0.263,2880,0.251,2881,0.251,2882,0.263,2883,0.757,2884,0.28,2885,0.28,2886,0.28,2887,0.263,2888,0.757,2889,0.549,2890,0.28,2891,0.263,2892,0.263,2893,0.757,2894,0.263,2895,0.515,2896,0.308,2897,0.308,2898,0.308,2899,0.308,2900,0.308,2901,0.308,2902,0.308,2903,0.308,2904,0.28,2905,0.263,2906,0.807,2907,0.757,2908,0.757,2909,0.263,2910,0.549,2911,0.515,2912,0.515,2913,0.263,2914,1.213,2915,0.549,2916,0.28,2917,0.263,2918,2.21,2919,0.263,2920,0.28,2921,1.521,2922,1.155,2923,0.28,2924,0.549,2925,0.226,2926,0.28,2927,0.263,2928,0.456,2929,0.263,2930,0.757,2931,0.757,2932,0.263,2933,0.515,2934,0.28,2935,0.263,2936,0.515,2937,0.472,2938,0.28,2939,0.263,2940,0.28,2941,0.28,2942,0.549,2943,0.549,2944,0.28,2945,0.807,2946,0.99,2947,0.28,2948,1.428,2949,0.251,2950,0.308,2951,0.28,2952,0.549,2953,0.263,2954,0.515,2955,0.515,2956,0.263,2957,0.263,2958,0.263,2959,0.28,2960,0.28,2961,1.953,2962,0.549,2963,0.308,2964,0.263,2965,0.263,2966,1.428,2967,0.263,2968,0.308,2969,0.308,2970,0.603,2971,0.308,2972,0.263,2973,0.263,2974,0.28,2975,1.521,2976,0.603,2977,0.28,2978,0.807,2979,0.28,2980,0.603,2981,0.28,2982,0.807,2983,0.28,2984,0.308,2985,0.28,2986,0.549,2987,0.549,2988,1.054,2989,0.28,2990,0.603,2991,0.28,2992,1.054,2993,0.807,2994,0.28,2995,0.603,2996,0.28,2997,0.807,2998,0.28,2999,0.308,3000,0.308,3001,0.308,3002,0.308,3003,0.308,3004,0.28,3005,0.308,3006,0.28,3007,0.28,3008,0.251,3009,0.251,3010,0.251,3011,0.28,3012,0.491,3013,0.28,3014,0.515,3015,0.28,3016,0.491,3017,1.746,3018,0.721,3019,0.99,3020,0.237,3021,0.28,3022,0.28,3023,0.28,3024,0.65,3025,0.28,3026,0.28,3027,0.28,3028,0.28,3029,0.28,3030,0.28,3031,0.549,3032,0.807,3033,0.28,3034,0.28,3035,0.308,3036,0.886,3037,0.659,3038,0.263,3039,0.212,3040,0.28,3041,0.632,3042,0.28,3043,0.263,3044,0.99,3045,0.28,3046,0.28,3047,1.634,3048,1.634,3049,1.741,3050,1.741,3051,1.741,3052,1.741,3053,1.741,3054,0.28,3055,0.28,3056,0.28,3057,0.28,3058,0.28,3059,0.28,3060,0.28,3061,0.28,3062,0.28,3063,0.28,3064,0.28,3065,0.28,3066,0.28,3067,0.28,3068,0.28,3069,0.28,3070,0.28,3071,0.28,3072,0.28,3073,0.28,3074,0.28,3075,0.28,3076,0.28,3077,0.28,3078,0.28,3079,0.28,3080,0.28,3081,0.28,3082,0.28,3083,0.28,3084,0.28,3085,0.28,3086,0.28,3087,0.28,3088,0.28,3089,0.28,3090,0.28,3091,0.28,3092,0.28,3093,0.28,3094,0.28,3095,0.28,3096,0.28,3097,0.28,3098,0.28,3099,0.28,3100,0.28,3101,0.28,3102,0.251,3103,0.721,3104,0.28,3105,0.28,3106,1.054,3107,0.271,3108,0.28,3109,0.28,3110,0.251,3111,0.28,3112,0.28,3113,0.241,3114,0.241,3115,0.449,3116,0.263,3117,0.515,3118,0.472,3119,0.28,3120,0.28,3121,0.28,3122,0.241,3123,0.241,3124,0.515,3125,0.807,3126,0.549,3127,0.603,3128,0.263,3129,0.549,3130,0.549,3131,0.263,3132,0.263,3133,0.28,3134,0.263,3135,0.263,3136,0.886,3137,0.28,3138,0.28,3139,0.257,3140,0.491,3141,0.28,3142,0.28,3143,0.425,3144,0.251,3145,0.28,3146,0.28,3147,0.28,3148,0.28,3149,0.28,3150,0.28,3151,0.28,3152,0.226,3153,0.549,3154,0.308,3155,0.515,3156,0.308,3157,0.308,3158,0.308,3159,0.308,3160,0.549,3161,0.308,3162,0.308,3163,0.308,3164,0.308,3165,0.549,3166,0.308,3167,0.308,3168,0.308,3169,0.308,3170,0.549,3171,0.837,3172,0.251,3173,0.308,3174,0.28,3175,0.257,3176,0.28,3177,0.28,3178,0.21,3179,0.251,3180,0.251,3181,0.251,3182,0.251,3183,0.241,3184,0.456,3185,0.28,3186,0.263,3187,0.251,3188,0.28,3189,0.28,3190,0.178,3191,0.251,3192,0.442,3193,0.251,3194,0.241,3195,0.251,3196,1.131,3197,0.549,3198,0.472,3199,0.217,3200,0.233,3201,0.241,3202,0.251,3203,0.263,3204,0.28,3205,0.28,3206,0.241,3207,0.22]],["component/134",[68,0.364]],["title/135-1",[733,38.207,2352,32.112]],["name/135-1",[]],["text/135-1",[]],["component/135-1",[]],["title/135-2",[5,26.047,76,21.109]],["name/135-2",[]],["text/135-2",[]],["component/135-2",[]],["title/135-3",[76,21.109,2311,38.966]],["name/135-3",[]],["text/135-3",[]],["component/135-3",[]],["title/135-4",[28,38.519]],["name/135-4",[]],["text/135-4",[]],["component/135-4",[]],["title/135-5",[473,30.372]],["name/135-5",[]],["text/135-5",[]],["component/135-5",[]],["title/135",[1496,26.047,3208,44.735]],["name/135",[1496,0.412,3208,0.708]],["text/135",[0,1.879,5,1.016,8,2.217,13,1.978,14,2.201,19,1.643,22,1.934,27,2.472,28,3.478,34,1.372,50,1.184,64,1.044,66,1.498,71,1.356,76,2.619,82,4.386,88,5.105,94,4.784,123,1.45,126,2.405,134,1.279,137,2.102,155,2.587,163,3.721,174,1.498,180,2.758,188,5.391,189,1.297,190,1.378,192,1.418,201,3.869,213,2.59,220,1.257,252,3.102,259,3.195,291,1.463,298,2.916,320,2.722,351,1.302,365,4.119,368,1.552,420,1.311,435,1.8,465,3.3,473,2.116,485,2.305,535,2.334,561,4.535,582,3.241,629,2.128,655,2.953,668,1.83,748,1.614,762,1.536,774,2.916,812,2.916,818,3.47,901,1.759,904,3.654,931,2.999,1226,4.427,1229,1.83,1372,2.193,1496,2.177,1704,4.711,1741,1.513,1941,2.27,1942,3.398,2158,4.862,2181,4.454,2235,2.438,2342,4.252,2352,1.253,2446,3.307,2447,1.596,2449,3.858,2450,3.818,2541,4.717,2643,2.193,2787,2.6,3123,3.782,3190,1.675,3207,2.071,3208,7.592,3209,2.363,3210,2.481,3211,4.996,3212,2.481,3213,2.481,3214,2.193,3215,2.481,3216,2.363,3217,3.937,3218,5.904,3219,5.061,3220,5.061,3221,2.643,3222,2.363,3223,4.404,3224,3.45,3225,3.45,3226,3.45,3227,5.174,3228,5.174,3229,3.782,3230,5.685,3231,1.934,3232,2.363,3233,6.199,3234,4.134,3235,2.902,3236,2.902,3237,2.643,3238,2.999,3239,2.643,3240,3.45,3241,2.791,3242,2.643]],["component/135",[68,0.364]],["title/136-1",[733,38.207,2352,32.112]],["name/136-1",[]],["text/136-1",[]],["component/136-1",[]],["title/136-2",[5,26.047,76,21.109]],["name/136-2",[]],["text/136-2",[]],["component/136-2",[]],["title/136-3",[76,21.109,2311,38.966]],["name/136-3",[]],["text/136-3",[]],["component/136-3",[]],["title/136-4",[28,38.519]],["name/136-4",[]],["text/136-4",[]],["component/136-4",[]],["title/136-5",[473,30.372]],["name/136-5",[]],["text/136-5",[]],["component/136-5",[]],["title/136-6",[2435,49.047]],["name/136-6",[]],["text/136-6",[]],["component/136-6",[]],["title/136-7",[185,26.74,559,31.714,2436,33.928]],["name/136-7",[]],["text/136-7",[]],["component/136-7",[]],["title/136-8",[19,25.262,473,25.32]],["name/136-8",[]],["text/136-8",[]],["component/136-8",[]],["title/136",[1496,26.047,2279,48.601]],["name/136",[1496,0.412,2279,0.769]],["text/136",[5,0.556,8,1.311,9,0.863,13,2.257,14,0.722,19,2.277,20,2.147,22,1.057,27,1.462,31,1.978,40,1.347,64,1.029,65,0.849,66,0.819,67,0.782,74,0.883,75,0.683,76,1.566,82,0.8,88,1.925,106,0.893,123,0.793,126,1.423,134,1.26,137,3.123,147,0.819,151,1.067,152,0.638,163,1.321,174,0.819,180,2.73,185,1.199,188,5.236,189,0.709,190,0.753,191,0.744,201,2.003,213,1.991,219,0.811,220,1.239,223,1.199,252,1.835,258,0.8,259,1.721,276,0.804,287,3.869,291,0.8,298,0.744,313,0.941,351,0.712,354,2.056,376,0.807,388,0.883,417,0.916,419,1.132,420,2.492,452,0.984,453,0.934,459,0.717,465,2.174,468,0.728,473,1.33,485,1.363,493,1.199,524,2.642,535,2.306,561,2.036,564,0.733,582,2.036,599,0.811,629,1.163,635,0.858,651,1.105,656,1.38,680,0.962,681,1.057,738,0.744,762,0.84,774,1.342,786,0.863,790,0.992,794,1.292,812,1.342,817,0.84,855,2.462,857,4.974,931,0.984,965,0.827,1037,1.292,1094,3.251,1121,2.462,1128,3.152,1164,1.61,1172,1.047,1181,0.992,1184,4.812,1221,1.018,1226,0.807,1274,1.092,1278,7.406,1356,4.738,1372,1.199,1388,4.783,1393,6.238,1484,1.105,1496,1.002,1497,1.147,1633,1.219,1741,2.876,1842,1.163,1922,1.132,1941,1.241,1942,2.612,1968,3.598,2084,1.057,2153,4.39,2172,1.819,2181,0.877,2195,1.163,2235,2.782,2279,6.913,2327,3.644,2328,0.928,2352,0.685,2361,0.962,2406,1.926,2436,0.844,2446,2.078,2447,0.872,2449,2.078,2450,2.516,2451,2.284,2454,0.941,2491,1.037,2494,1.322,2541,2.443,2572,2.284,2688,1.199,2787,1.538,3199,2.015,3207,1.132,3208,4.579,3209,1.292,3210,1.357,3212,1.357,3213,1.357,3214,1.199,3215,1.357,3216,1.292,3217,1.292,3222,1.292,3225,3.937,3226,3.937,3227,3.937,3228,3.937,3229,4.315,3230,1.869,3240,1.132,3241,2.254,3275,0.893,3279,2.284,3342,1.445,3343,5.731,3344,1.445,3345,1.445,3346,2.605,3347,2.951,3348,2.951,3349,1.357,3350,1.357,3351,1.357,3352,1.357,3353,1.357,3354,1.357,3355,1.357,3356,1.357,3357,1.357,3358,1.357,3359,1.357,3360,1.357,3361,1.357,3362,1.357,3363,1.357,3364,1.357,3365,1.357,3366,1.357,3367,1.357,3368,1.357,3369,1.357,3370,1.357,3371,1.357,3372,1.357,3373,1.357,3374,1.163,3375,1.357,3376,1.163,3377,1.357,3378,1.357,3379,1.357,3380,1.357,3381,1.357,3382,1.292,3383,1.357,3384,1.292,3385,1.357,3386,1.357,3387,1.357,3388,1.357,3389,1.357,3390,1.357,3391,1.357,3392,1.357,3393,1.357,3394,1.292,3395,1.357,3396,1.292,3397,1.357,3398,1.357,3399,1.357,3400,1.357,3401,1.357,3402,1.199,3403,1.357,3404,1.199,3405,1.445,3406,1.057,3407,2.329,3408,1.241,3409,1.241,3410,1.199,3411,1.357,3412,1.357,3413,1.163,3414,1.132,3415,1.199,3416,1.199,3417,1.292,3418,1.587,3419,1.357,3420,1.357,3421,1.357,3422,1.199,3423,1.587,3424,1.587,3425,1.587,3426,1.587,3427,1.587,3428,4.778,3429,5.517,3430,1.587,3431,1.587,3432,1.292,3433,1.587,3434,1.587,3435,1.445,3436,1.587,3437,1.587,3438,1.587,3439,1.587,3440,1.587,3441,1.357,3442,1.587,3443,1.445,3444,1.587,3445,1.445,3446,1.587,3447,1.445,3448,1.587,3449,2.861,3450,2.861,3451,1.445,3452,1.445,3453,2.861,3454,1.587,3455,1.292,3456,2.823,3457,1.587,3458,1.587,3459,1.587,3460,1.587,3461,1.587,3462,1.587,3463,13.4,3464,1.587,3465,1.587,3466,1.587,3467,1.587,3468,1.587,3469,1.587,3470,1.587,3471,1.587,3472,1.587,3473,1.587,3474,1.587,3475,1.587,3476,1.587,3477,1.587,3478,1.587,3479,1.587,3480,1.587,3481,1.587]],["component/136",[68,0.364]],["title/137-1",[733,38.207,2352,32.112]],["name/137-1",[]],["text/137-1",[]],["component/137-1",[]],["title/137-2",[5,26.047,76,21.109]],["name/137-2",[]],["text/137-2",[]],["component/137-2",[]],["title/137-3",[76,21.109,2311,38.966]],["name/137-3",[]],["text/137-3",[]],["component/137-3",[]],["title/137-4",[28,38.519]],["name/137-4",[]],["text/137-4",[]],["component/137-4",[]],["title/137-5",[473,30.372]],["name/137-5",[]],["text/137-5",[]],["component/137-5",[]],["title/137-6",[2435,49.047]],["name/137-6",[]],["text/137-6",[]],["component/137-6",[]],["title/137-7",[185,26.74,559,31.714,2436,33.928]],["name/137-7",[]],["text/137-7",[]],["component/137-7",[]],["title/137-8",[19,25.262,473,25.32]],["name/137-8",[]],["text/137-8",[]],["component/137-8",[]],["title/137-9",[635,40.211,3243,67.738]],["name/137-9",[]],["text/137-9",[]],["component/137-9",[]],["title/137-10",[368,34.107,635,34.476,2270,41.282]],["name/137-10",[]],["text/137-10",[]],["component/137-10",[]],["title/137",[1496,26.047,2280,53.065]],["name/137",[1496,0.412,2280,0.84]],["text/137",[0,0.869,5,0.387,8,0.506,9,1.116,13,0.84,14,0.503,19,1.63,23,1.092,31,0.559,40,1.354,50,0.837,57,0.559,64,0.738,75,4.56,76,0.313,82,1.035,88,4.064,119,0.487,121,0.588,123,0.552,128,3.449,133,2.565,134,1.267,137,0.892,147,0.57,151,0.765,152,1.928,153,0.544,155,0.591,156,1.78,167,5.235,179,0.547,180,2.354,185,0.463,188,5.09,189,2.371,201,3.457,203,0.504,205,0.752,206,3.668,213,1.498,215,0.788,216,0.769,217,0.788,220,2.496,221,2.458,222,5.739,223,1.551,224,4.888,225,1.869,226,4.888,227,1.605,228,5.113,229,6.712,230,3.884,231,1.869,232,2.812,233,5.123,234,3.625,236,3.906,238,3.752,242,1.869,243,1.869,244,5.894,245,4.594,246,1.869,247,2.812,248,2.738,256,1.141,258,1.449,259,0.904,260,0.736,263,0.899,269,0.899,287,0.637,291,2.133,298,0.963,303,1.397,346,1.341,351,0.495,368,0.591,376,0.562,385,1.757,389,2.618,395,1.086,405,3.73,420,0.927,441,0.864,443,0.736,445,1.879,465,1.308,468,0.506,473,0.699,485,0.526,535,1.387,559,0.549,561,1.874,564,0.51,628,2.526,638,10.245,650,4.821,654,2.396,656,0.533,659,2.396,663,2.209,696,5.439,697,1.551,738,0.518,770,1.086,786,0.6,812,0.518,818,0.982,855,5.333,965,0.576,1074,0.685,1226,0.562,1372,0.835,1445,0.864,1486,0.899,1496,0.719,1741,1.874,1942,2.623,1969,2.668,2031,3.618,2142,3.854,2143,2.341,2235,1.449,2270,2.328,2280,3.423,2327,2.884,2352,0.477,2361,2.179,2446,1.092,2447,0.607,2449,1.913,2450,2.228,2451,0.646,2454,0.655,2501,2.806,2541,1.049,2742,0.769,2819,0.736,3152,4.223,3190,0.637,3238,0.685,3241,0.637,3243,2.618,3244,1.104,3245,0.944,3246,1.671,3247,1.006,3248,1.006,3249,1.869,3250,1.006,3251,2.618,3252,0.835,3253,1.869,3254,2.341,3255,2.618,3256,1.869,3257,1.104,3258,1.104,3259,1.104,3260,1.104,3261,0.944,3262,0.864,3263,0.899,3264,1.006,3265,0.864,3266,1.104,3267,0.899,3268,1.869,3269,1.869,3270,1.755,3271,1.869,3272,1.869,3273,1.869,3274,2.052,3275,1.618,3276,1.869,3277,10.346,3278,1.006,3279,1.2,3280,1.104,3281,1.104,3282,3.595,3283,4.798,3284,4.232,3285,1.104,3286,4.798,3287,2.052,3288,0.899,3289,1.104,3290,5.761,3291,7.766,3292,8.244,3293,8.244,3294,8.244,3295,5.761,3296,5.761,3297,5.761,3298,2.875,3299,7.766,3300,7.766,3301,4.232,3302,4.798,3303,4.232,3304,4.232,3305,4.232,3306,1.104,3307,1.104,3308,1.104,3309,1.104,3310,1.104,3311,1.104,3312,1.104,3313,1.104,3314,1.104,3315,4.798,3316,1.104,3317,2.875,3318,2.458,3319,2.875,3320,2.052,3321,2.717,3322,3.074,3323,2.717,3324,2.812,3325,3.595,3326,1.104,3327,1.104,3328,1.104,3329,2.875,3330,1.104,3331,1.104,3332,1.104,3333,1.104,3334,1.104,3335,1.104,3336,1.104,3337,2.052,3338,2.052,3339,1.869,3340,1.104,3341,1.104]],["component/137",[68,0.364]],["title/138-1",[733,38.207,2352,32.112]],["name/138-1",[]],["text/138-1",[]],["component/138-1",[]],["title/138-2",[5,26.047,76,21.109]],["name/138-2",[]],["text/138-2",[]],["component/138-2",[]],["title/138-3",[76,21.109,2311,38.966]],["name/138-3",[]],["text/138-3",[]],["component/138-3",[]],["title/138-4",[28,38.519]],["name/138-4",[]],["text/138-4",[]],["component/138-4",[]],["title/138-5",[473,30.372]],["name/138-5",[]],["text/138-5",[]],["component/138-5",[]],["title/138-6",[2435,49.047]],["name/138-6",[]],["text/138-6",[]],["component/138-6",[]],["title/138-7",[185,26.74,559,31.714,2436,33.928]],["name/138-7",[]],["text/138-7",[]],["component/138-7",[]],["title/138-8",[19,25.262,473,25.32]],["name/138-8",[]],["text/138-8",[]],["component/138-8",[]],["title/138",[1496,26.047,3482,58.169]],["name/138",[1496,0.412,2281,0.679]],["text/138",[0,3.3,4,0.647,5,0.282,6,1.18,8,0.698,10,1.671,13,2.193,14,0.366,19,2.221,21,1.799,24,0.417,29,0.386,31,0.407,32,0.806,34,0.38,40,0.717,50,2.768,55,0.775,57,0.407,60,0.819,64,0.548,65,0.43,67,0.396,75,2.814,76,0.616,80,1.562,88,1.622,106,0.453,113,0.366,119,2.881,123,0.402,126,2.304,134,0.671,136,0.495,137,2.842,147,0.415,148,0.435,151,2.339,152,1.108,153,1.862,155,0.43,156,3.687,163,1.003,178,1.602,180,2.224,185,1.156,186,0.897,188,5.205,189,1.232,190,0.382,193,2.138,201,2.385,203,1.725,211,0.395,213,0.905,219,0.779,220,0.348,228,0.499,248,1.698,253,0.477,254,1.75,256,1.533,258,0.768,259,0.957,276,2.346,287,0.464,298,1.771,307,1.396,308,1.39,311,1.191,325,1.396,339,0.897,349,0.52,350,1.151,351,1.475,365,1.41,373,0.758,385,0.745,395,0.806,397,0.891,417,2.179,420,1.486,432,1.149,459,0.688,465,1.255,466,3.414,468,0.369,472,0.874,473,0.274,485,0.726,510,0.828,524,1.2,535,1.33,543,0.473,561,1.132,564,2.315,573,1.06,582,0.419,597,1.149,599,0.779,604,2.381,606,1.194,619,1.117,635,1.491,650,0.891,655,0.491,656,1.33,657,1.612,680,0.923,712,2.853,734,1.087,738,0.715,740,1.151,762,1.149,774,1.293,782,0.847,786,0.437,812,0.715,817,0.806,818,1.574,819,2.021,823,1.499,850,0.629,855,0.961,925,0.598,931,0.499,940,0.491,950,0.903,965,0.419,970,1.542,980,0.511,1002,0.484,1016,0.503,1017,4.369,1027,1.897,1037,0.655,1074,0.499,1094,4.077,1096,0.52,1110,1.17,1112,1.683,1121,1.369,1127,1.698,1128,4.139,1143,0.491,1148,1.819,1154,0.511,1164,0.453,1181,0.503,1182,1.037,1221,0.977,1226,0.409,1232,3.44,1262,1.037,1274,2.598,1278,2.486,1298,0.525,1330,1.302,1337,0.507,1348,2.198,1376,1.151,1393,3.152,1496,0.534,1637,1.037,1666,1.037,1673,2.573,1704,0.891,1741,1.132,1745,0.473,1753,1.073,1805,1.117,1864,1.191,1911,1.387,1917,0.525,1942,3.71,1947,1.302,1968,2.208,2084,1.837,2153,1.967,2172,0.969,2179,1.768,2181,0.445,2192,1.698,2221,0.56,2235,2.129,2281,3.283,2315,2.573,2327,2.295,2328,0.47,2361,2.558,2380,3.448,2381,2.427,2385,4.274,2396,1.151,2418,1.346,2425,1.191,2432,0.56,2436,0.428,2442,1.24,2446,0.811,2447,0.442,2449,0.811,2450,1.732,2451,1.27,2454,0.477,2456,0.732,2499,1.06,2501,4.106,2507,3.374,2536,0.547,2541,2.908,2560,0.977,2562,6,2681,1.24,2696,1.64,2726,2.678,2738,1.24,2773,0.499,2792,2.768,2793,0.608,2805,1.087,2807,0.547,2809,1.24,2810,1.015,2822,0.995,2844,2.156,2849,6.373,3018,0.655,3140,3.075,3143,2.66,3144,4.08,3171,1.101,3172,2.245,3224,1.087,3238,0.499,3241,0.879,3252,0.608,3279,2.709,3323,0.608,3408,1.191,3443,0.732,3445,0.732,3456,1.101,3482,2.953,3483,0.732,3484,0.732,3485,0.732,3486,0.732,3487,0.732,3488,0.732,3489,0.732,3490,1.302,3491,1.191,3492,1.302,3493,1.191,3494,1.24,3495,1.302,3496,1.302,3497,1.302,3498,1.977,3499,1.387,3500,1.856,3501,1.302,3502,1.302,3503,1.302,3504,1.302,3505,0.629,3506,0.804,3507,0.804,3508,0.804,3509,0.804,3510,0.804,3511,0.804,3512,0.804,3513,1.387,3514,1.523,3515,1.523,3516,1.523,3517,1.523,3518,0.574,3519,2.357,3520,1.387,3521,1.24,3522,0.608,3523,1.387,3524,1.387,3525,0.732,3526,2.901,3527,1.856,3528,0.732,3529,0.589,3530,2.357,3531,0.732,3532,0.732,3533,1.302,3534,0.732,3535,0.732,3536,0.732,3537,0.732,3538,1.24,3539,0.732,3540,0.732,3541,0.732,3542,0.732,3543,1.387,3544,0.804,3545,1.387,3546,0.732,3547,1.856,3548,1.977,3549,4.564,3550,4.564,3551,4.181,3552,3.302,3553,0.732,3554,0.732,3555,0.629,3556,0.732,3557,0.732,3558,0.804,3559,2.678,3560,2.357,3561,1.24,3562,0.804,3563,0.804,3564,3.075,3565,2.245,3566,2.357,3567,0.687,3568,0.804,3569,0.655,3570,1.24,3571,0.804,3572,0.655,3573,0.804,3574,0.655,3575,0.655,3576,0.655,3577,0.804,3578,2.511,3579,2.511,3580,1.387,3581,1.302,3582,1.151,3583,1.302,3584,1.24,3585,0.687,3586,1.302,3587,1.387,3588,1.387,3589,1.24,3590,2.245,3591,2.083,3592,1.387,3593,1.387,3594,1.387,3595,2.511,3596,1.24,3597,1.387,3598,1.387,3599,3.439,3600,1.977,3601,1.24,3602,1.387,3603,1.387,3604,1.387,3605,1.387,3606,1.387,3607,1.387,3608,1.387,3609,2.511,3610,2.511,3611,2.511,3612,2.511,3613,2.511,3614,2.511,3615,0.629,3616,3.439,3617,2.511,3618,1.387,3619,2.511,3620,4.883,3621,2.511,3622,1.387,3623,3.439,3624,1.387,3625,1.24,3626,1.387,3627,5.18,3628,1.387,3629,1.387,3630,1.387,3631,0.732,3632,4.883,3633,1.387,3634,1.387,3635,0.732,3636,1.302,3637,0.732,3638,0.732,3639,1.24,3640,1.387,3641,1.387,3642,1.387,3643,1.24,3644,1.387,3645,1.302,3646,0.804,3647,0.804,3648,0.804,3649,1.523,3650,0.804,3651,0.804,3652,0.804,3653,0.804,3654,0.804,3655,0.804,3656,0.804,3657,0.804,3658,0.804,3659,0.589,3660,2.171,3661,1.523,3662,1.523,3663,1.523,3664,3.776,3665,0.804,3666,1.977,3667,0.804,3668,0.708,3669,0.804,3670,0.804,3671,0.804,3672,0.804,3673,0.804,3674,0.804,3675,0.804,3676,0.804,3677,0.67,3678,0.804,3679,0.763,3680,0.804,3681,0.804,3682,0.804,3683,0.804,3684,0.804,3685,1.523,3686,0.732,3687,0.804,3688,0.804,3689,0.804,3690,0.804,3691,0.804,3692,0.732,3693,0.732,3694,0.804,3695,0.732,3696,1.387,3697,1.523,3698,1.523,3699,0.732,3700,0.732]],["component/138",[68,0.364]],["title/139-1",[733,38.207,2352,32.112]],["name/139-1",[]],["text/139-1",[]],["component/139-1",[]],["title/139-2",[5,26.047,76,21.109]],["name/139-2",[]],["text/139-2",[]],["component/139-2",[]],["title/139-3",[76,21.109,2311,38.966]],["name/139-3",[]],["text/139-3",[]],["component/139-3",[]],["title/139-4",[473,30.372]],["name/139-4",[]],["text/139-4",[]],["component/139-4",[]],["title/139-5",[28,38.519]],["name/139-5",[]],["text/139-5",[]],["component/139-5",[]],["title/139-6",[2435,49.047]],["name/139-6",[]],["text/139-6",[]],["component/139-6",[]],["title/139-7",[19,25.262,473,25.32]],["name/139-7",[]],["text/139-7",[]],["component/139-7",[]],["title/139",[1496,26.047,2282,38.58]],["name/139",[1496,0.412,2282,0.61]],["text/139",[0,1.027,2,0.634,4,0.438,5,0.674,6,0.56,8,0.882,9,2.479,13,2.068,14,0.469,19,2.709,21,0.747,23,1.807,27,0.527,29,1.3,31,2.31,32,3.128,42,0.58,50,0.785,53,0.961,55,0.979,57,0.974,58,1.157,60,0.554,62,0.499,64,0.692,67,0.508,72,0.459,75,0.828,76,0.768,80,3.986,84,6.157,106,0.58,113,1.231,115,1.505,118,3.403,119,2.425,123,0.515,127,0.65,134,1.767,137,1.982,147,0.532,151,0.717,152,1.087,153,0.508,156,0.51,157,2.378,163,2.542,164,0.62,185,1.135,186,1.593,188,4.631,189,2.459,190,0.489,191,0.902,192,0.503,193,0.974,194,0.607,196,1.471,198,0.806,201,4.314,204,1.309,207,1.372,211,0.506,213,2.76,220,1.975,251,1.046,258,1.364,260,3.039,276,1.72,288,0.673,298,3.742,300,1.234,301,2.311,307,0.522,308,0.97,314,0.755,320,2.257,322,0.717,323,0.629,327,1.397,336,0.576,339,4.413,344,0.806,351,0.462,365,0.527,373,2.737,376,2.8,385,0.503,398,6.838,414,1.07,420,0.869,458,1.133,459,0.869,465,1.825,466,1.935,468,0.882,473,0.655,480,0.62,485,2.174,501,1.788,508,1.282,510,1.046,535,1.306,542,1.096,543,0.607,544,4.577,548,1.645,549,1.616,563,0.65,564,2.542,566,0.839,577,0.545,578,1.279,597,0.545,599,3.022,604,0.65,606,0.566,628,0.542,635,0.557,640,1.603,642,1.295,656,1.935,669,0.881,670,1.157,681,0.687,683,0.644,703,3.631,710,0.745,738,0.483,739,1.432,762,0.545,774,0.483,778,1.184,782,1.889,799,1.257,808,0.687,817,3.128,818,1.919,822,1.841,823,3.771,851,4.705,873,2.672,898,0.644,901,1.64,916,1.878,925,0.766,931,6.127,951,0.694,968,0.529,970,0.576,974,0.701,986,2.33,1016,1.203,1018,0.701,1024,0.735,1071,0.778,1096,0.667,1118,0.644,1143,0.629,1148,0.68,1154,1.721,1170,0.694,1179,0.778,1191,2.508,1192,0.634,1196,0.629,1229,0.65,1254,3.135,1317,0.639,1320,1.295,1323,0.792,1335,1.862,1338,0.673,1339,0.644,1357,0.881,1368,0.778,1373,0.655,1388,2.861,1442,2.311,1450,0.881,1496,1.189,1633,0.792,1657,1.174,1667,1.822,1704,2.667,1725,0.792,1745,1.133,1785,4.275,1807,0.68,1879,5.783,1887,1.505,1915,0.881,1916,0.881,1919,0.701,1923,0.717,1953,1.295,1967,1.372,1969,0.65,2044,1.454,2051,0.726,2136,0.778,2138,0.717,2139,1.269,2187,0.583,2188,0.62,2193,2.313,2208,1.118,2212,1.166,2221,0.717,2231,0.735,2235,0.519,2241,1.309,2248,3.198,2252,0.58,2282,6.334,2329,1.064,2333,3.081,2344,0.778,2345,0.687,2349,0.755,2352,1.168,2356,0.701,2383,2.263,2410,0.745,2435,1.488,2436,2.134,2438,0.701,2439,1.013,2446,1.023,2447,1.488,2449,1.023,2450,0.542,2499,2.364,2501,1.582,2502,2.904,2512,0.881,2530,0.701,2600,0.778,2603,0.778,2610,0.778,2611,0.778,2623,0.806,2627,0.717,2645,4.466,2673,0.839,2686,0.629,2688,0.778,2701,0.717,2744,0.792,2764,0.735,2771,1.309,2773,1.678,2787,1.455,2803,0.778,2806,0.687,2819,1.803,2845,2.045,3008,0.839,3039,1.324,3113,0.806,3178,0.701,3184,0.778,3224,1.372,3231,5.161,3232,1.566,3288,0.839,3591,2.566,3615,2.656,3701,0.938,3702,0.938,3703,0.938,3704,2.203,3705,0.938,3706,0.717,3707,0.938,3708,1.03,3709,0.938,3710,4.011,3711,3.653,3712,0.938,3713,3.265,3714,3.093,3715,3.093,3716,3.093,3717,2.116,3718,4.812,3719,6.318,3720,4.153,3721,1.566,3722,1.03,3723,0.938,3724,1.03,3725,1.752,3726,0.938,3727,0.881,3728,0.938,3729,0.938,3730,0.821,3731,1.372,3732,0.839,3733,0.839,3734,0.938,3735,0.938,3736,1.693,3737,0.938,3738,0.938,3739,0.938,3740,0.938,3741,0.938,3742,1.752,3743,1.752,3744,0.938,3745,0.938,3746,0.938,3747,0.938,3748,0.938,3749,3.093,3750,0.938,3751,0.938,3752,0.938,3753,0.938,3754,1.752,3755,0.938,3756,0.938,3757,0.858,3758,1.566,3759,0.938,3760,0.938,3761,1.566,3762,1.566,3763,1.645,3764,3.093,3765,2.203,3766,1.924,3767,1.03,3768,1.03,3769,1.03,3770,0.806,3771,0.881,3772,1.03,3773,1.03,3774,1.03,3775,1.03,3776,1.752,3777,0.938,3778,0.938,3779,0.881,3780,0.839,3781,0.839,3782,0.938,3783,0.839,3784,0.839,3785,0.839,3786,0.839,3787,0.839,3788,0.839,3789,0.839,3790,0.938,3791,0.839,3792,0.839,3793,0.839,3794,0.778,3795,0.839,3796,0.839,3797,0.839,3798,0.839,3799,0.839,3800,0.839,3801,0.839,3802,0.839,3803,0.839,3804,0.839,3805,0.839,3806,0.839,3807,0.839,3808,0.839,3809,0.839,3810,0.839,3811,0.839,3812,0.839,3813,0.839,3814,0.839,3815,0.778,3816,0.839,3817,0.839]],["component/139",[68,0.364]],["title/140-1",[0,22.482,355,43.207]],["name/140-1",[]],["text/140-1",[]],["component/140-1",[]],["title/140",[1496,26.047,6646,67.738]],["name/140",[1496,0.412,6646,1.072]],["text/140",[3,3.622,8,4.672,9,3.477,12,4.506,20,5.602,21,4.489,27,3.27,33,3.819,34,3.024,53,3.195,55,3.254,59,3.209,64,2.301,76,2.892,134,4.49,152,2.57,156,3.167,178,3.715,188,5.571,203,2.921,327,3.301,465,2.91,473,3.021,494,4.833,524,4.907,535,3.086,597,3.385,812,3,952,4.179,1014,5.595,1149,4.624,1306,4.758,2235,3.224,2333,4.914,2410,4.624,2658,5.329,2925,4.688,4196,5.63,4198,5.63,4201,5.63,6646,10.531,6647,6.892,6648,6.892,6649,6.892,6650,6.892,6651,6.892,6652,6.892,6653,6.892,6654,6.892]],["component/140",[68,0.364]],["title/141-1",[733,45.83]],["name/141-1",[]],["text/141-1",[]],["component/141-1",[]],["title/141-2",[5,26.047,76,21.109]],["name/141-2",[]],["text/141-2",[]],["component/141-2",[]],["title/141-3",[76,21.109,2311,38.966]],["name/141-3",[]],["text/141-3",[]],["component/141-3",[]],["title/141-4",[12,17.955,19,13.792,46,28.971,47,28.265,50,16.56,68,10.661,2378,33.06]],["name/141-4",[]],["text/141-4",[]],["component/141-4",[]],["title/141-5",[46,31.864,47,31.088,50,18.214,823,24.279,2378,36.362,2381,23.398]],["name/141-5",[]],["text/141-5",[]],["component/141-5",[]],["title/141-6",[2686,45.409,2787,39.994]],["name/141-6",[]],["text/141-6",[]],["component/141-6",[]],["title/141-7",[21,28.877,323,45.409]],["name/141-7",[]],["text/141-7",[]],["component/141-7",[]],["title/141-8",[46,31.864,47,31.088,50,18.214,823,24.279,2378,36.362,2620,34.929]],["name/141-8",[]],["text/141-8",[]],["component/141-8",[]],["title/141",[39,21.486,40,16.183,46,24.518,47,23.921,50,14.015,1497,24.844,2187,19.459,2378,27.979,2379,22.246]],["name/141",[1496,0.285,2379,0.526,2404,0.741]],["text/141",[0,0.674,1,1.443,4,2.591,5,0.781,10,3.099,12,3.588,13,4.064,14,2.327,19,3.533,21,3.15,29,4.492,40,1.05,46,7.265,47,7.088,48,4.078,49,4.247,50,3.502,53,3.777,59,1.939,60,1.199,61,1.212,62,1.08,64,0.802,68,1.015,71,1.042,76,1.958,82,1.124,88,1.099,123,1.114,129,2.294,131,1.534,134,3.041,136,1.372,146,1.168,153,1.099,155,1.192,156,1.104,160,1.24,176,1.486,178,1.295,179,1.913,180,0.989,182,1.418,184,1.063,185,0.935,192,1.09,201,0.935,248,1.151,251,1.212,254,2.056,271,2.014,305,1.471,307,2.59,308,1.948,325,3.829,336,1.247,339,1.313,348,1.295,351,1,352,1.471,368,2.067,385,1.09,415,1.054,420,1.746,431,3.402,459,1.007,468,1.772,472,1.278,501,1.174,503,1.501,510,1.212,524,2.137,542,1.27,553,1.815,577,1.18,578,1.054,628,1.174,640,3.22,642,2.602,650,1.304,657,2.26,668,1.406,696,1.471,702,1.501,736,1.778,738,1.046,761,2.75,784,1.858,790,1.394,802,2.627,804,1.304,811,1.552,812,1.046,818,4.109,823,3.317,882,1.471,898,1.394,950,2.291,962,2.116,964,2.116,974,1.517,1002,1.341,1017,2.067,1019,2.63,1025,1.778,1026,2.397,1035,7.174,1056,1.858,1106,3.805,1107,3.805,1110,1.713,1127,1.744,1128,1.471,1143,3.123,1156,1.659,1168,1.443,1191,1.394,1196,1.361,1204,1.713,1214,2.116,1217,1.778,1232,4.427,1286,3.22,1294,2.116,1317,3.172,1496,0.781,1497,5.867,1744,4.421,1749,2.308,1961,1.858,2051,1.571,2172,1.418,2181,1.233,2187,3.455,2196,2.045,2228,4.314,2307,1.963,2352,0.963,2361,2.342,2377,1.963,2378,4.164,2379,6.052,2380,1.534,2381,3.197,2382,6.074,2529,2.457,2541,1.976,2562,2.479,2604,2.659,2605,1.571,2617,1.906,2620,3.022,2686,4.616,2703,1.963,2772,1.591,2785,1.659,2786,1.963,2787,2.75,3139,1.858,3171,3.698,3252,6.488,3730,1.778,3736,1.963,5274,3.22,5469,3.402,5973,4.853,6221,1.963,6646,2.03,6655,2.402,6656,2.402,6657,2.402,6658,2.402,6659,5.511,6660,2.402,6661,5.511,6662,2.402,6663,2.402,6664,4.164,6665,5.511,6666,2.402,6667,2.402,6668,2.402,6669,4.164,6670,4.164,6671,2.402,6672,2.402,6673,2.402,6674,2.402,6675,2.402,6676,7.435,6677,5.511,6678,4.164,6679,4.164,6680,4.164,6681,4.164,6682,4.164,6683,4.164,6684,4.164,6685,4.164,6686,4.164,6687,4.164,6688,4.164,6689,6.575,6690,4.164,6691,4.164,6692,4.164,6693,4.164,6694,4.164,6695,4.164,6696,5.511,6697,2.402,6698,4.164,6699,4.164,6700,2.402,6701,2.402,6702,2.402,6703,2.402,6704,2.402,6705,2.402,6706,2.402,6707,2.402,6708,6.575,6709,2.402,6710,2.402]],["component/141",[68,0.364]],["title/142-1",[733,38.207,2352,32.112]],["name/142-1",[]],["text/142-1",[]],["component/142-1",[]],["title/142-2",[5,26.047,76,21.109]],["name/142-2",[]],["text/142-2",[]],["component/142-2",[]],["title/142-3",[76,21.109,2311,38.966]],["name/142-3",[]],["text/142-3",[]],["component/142-3",[]],["title/142-4",[28,38.519]],["name/142-4",[]],["text/142-4",[]],["component/142-4",[]],["title/142-5",[473,30.372]],["name/142-5",[]],["text/142-5",[]],["component/142-5",[]],["title/142-6",[2435,49.047]],["name/142-6",[]],["text/142-6",[]],["component/142-6",[]],["title/142-7",[185,26.74,559,31.714,2436,33.928]],["name/142-7",[]],["text/142-7",[]],["component/142-7",[]],["title/142-8",[19,25.262,473,25.32]],["name/142-8",[]],["text/142-8",[]],["component/142-8",[]],["title/142-9",[19,15.169,76,12.676,180,19.817,2541,22.833,3275,25.136,3706,31.088]],["name/142-9",[]],["text/142-9",[]],["component/142-9",[]],["title/142",[1496,26.047,3275,41.861]],["name/142",[1496,0.412,3279,0.688]],["text/142",[0,1.391,4,0.524,5,0.432,8,0.566,13,0.505,14,0.562,19,2.373,28,0.533,31,2.331,32,0.653,40,1.071,42,0.695,50,0.503,53,0.617,62,1.102,64,0.818,65,0.66,67,0.608,71,2.89,75,0.979,76,0.898,80,2.936,88,1.938,94,2.087,96,0.695,98,3.461,119,1.733,123,0.617,126,0.614,133,0.881,134,1.394,136,0.759,137,2.871,146,1.192,147,0.637,151,1.466,152,0.914,153,0.608,156,1.126,163,0.57,180,0.548,185,0.954,188,5.145,189,1.757,193,0.625,201,2.929,203,1.039,206,0.628,213,1.918,220,0.535,248,2.03,254,1.21,258,1.595,259,0.544,271,0.643,307,0.625,312,0.859,316,1.055,325,1.152,351,2.963,364,0.814,365,0.631,397,0.722,405,0.799,415,0.584,417,3.299,420,2.346,432,1.204,465,1.035,468,0.566,473,1.339,485,0.588,510,1.72,535,1.098,561,1.649,564,2.126,572,0.905,573,1.583,582,0.643,597,0.653,599,1.617,606,0.678,628,0.65,633,1.548,649,0.806,650,0.722,654,0.822,655,0.753,656,1.098,659,0.822,680,0.748,734,0.881,738,0.579,782,1.265,786,0.671,792,0.859,812,0.579,817,1.674,818,2.203,819,0.905,823,1.236,848,0.814,855,0.778,940,0.753,965,0.643,1002,1.368,1017,1.217,1091,2.474,1112,1.931,1121,1.434,1154,0.785,1164,0.695,1181,0.772,1182,0.84,1192,0.759,1221,2.522,1226,0.628,1229,0.778,1232,2.953,1262,0.84,1274,2.177,1338,0.806,1393,0.84,1399,0.965,1442,0.84,1448,0.933,1473,0.965,1484,1.583,1496,1.108,1568,0.905,1637,0.84,1658,0.849,1704,1.85,1741,2.98,1753,0.869,1874,0.849,1922,0.881,1923,0.859,1942,1.243,2084,1.516,2087,1.667,2092,1.055,2094,0.933,2096,1.055,2098,1.055,2102,0.905,2104,0.881,2106,0.881,2172,1.446,2179,1.005,2181,1.749,2235,1.982,2281,2.656,2327,3.362,2328,0.722,2361,1.917,2380,0.849,2381,3.66,2385,3.284,2418,1.411,2446,1.21,2447,0.678,2449,1.21,2450,2.735,2451,1.33,2453,0.933,2454,0.732,2457,0.965,2501,0.722,2507,0.831,2536,0.84,2541,5.406,2627,0.859,2681,1.005,2689,0.822,2696,0.933,2773,1.411,2792,0.905,2805,0.881,2807,0.84,2810,1.516,2822,0.806,2844,1.779,3152,0.905,3190,1.826,3224,1.623,3230,2.067,3238,0.765,3241,0.712,3254,1.005,3262,0.965,3263,1.005,3265,0.965,3267,1.005,3275,6.197,3279,4.287,3321,0.933,3322,1.055,3323,0.933,3324,2.474,3406,0.822,3409,3.075,3410,0.933,3441,1.055,3490,1.055,3491,0.965,3492,1.055,3493,0.965,3494,1.005,3495,1.055,3496,1.055,3497,1.055,3500,1.055,3501,1.055,3502,1.055,3503,1.055,3504,1.055,3519,1.055,3526,1.747,3527,1.055,3530,1.055,3533,1.055,3545,2.072,3546,1.124,3547,1.945,3559,1.852,3560,1.945,3561,1.005,3564,1.852,3565,3.201,3566,3.361,3567,1.055,3569,1.005,3570,1.852,3572,1.005,3574,1.005,3575,1.005,3576,1.005,3580,2.072,3581,1.055,3582,0.933,3583,1.055,3584,4.228,3585,1.055,3659,0.905,3706,2.202,3818,0.933,3819,1.124,3820,1.055,3821,1.055,3822,2.072,3823,1.124,3824,1.124,3825,1.124,3826,1.124,3827,2.072,3828,3.163,3829,2.275,3830,1.124,3831,3.163,3832,1.124,3833,0.965,3834,3.163,3835,6.185,3836,8.199,3837,5.717,3838,6.185,3839,3.163,3840,0.918,3841,3.163,3842,3.163,3843,2.275,3844,1.234,3845,4.73,3846,1.234,3847,2.072,3848,0.905,3849,2.275,3850,3.163,3851,2.072,3852,2.275,3853,2.275,3854,3.361,3855,3.163,3856,3.163,3857,2.275,3858,1.124,3859,2.072,3860,0.933,3861,1.124,3862,1.005,3863,1.234,3864,1.124,3865,3.932,3866,1.005,3867,1.124,3868,0.965,3869,1.124,3870,1.234,3871,1.124,3872,0.933,3873,1.234,3874,1.124,3875,1.234,3876,1.124,3877,3.163,3878,8.199,3879,6.185,3880,6.185,3881,2.275,3882,5.717,3883,0.965,3884,3.163,3885,1.234,3886,1.234,3887,1.234,3888,1.234,3889,7.934,3890,1.234,3891,3.163,3892,6.185,3893,6.185,3894,6.185,3895,1.234,3896,1.234,3897,1.234,3898,0.933,3899,3.163,3900,1.234,3901,1.234,3902,1.055,3903,1.234,3904,1.124,3905,4.228,3906,2.275,3907,3.163,3908,0.918,3909,1.005,3910,3.932,3911,3.163,3912,0.965,3913,1.234,3914,1.005,3915,1.234,3916,3.163,3917,1.234,3918,0.965,3919,2.275,3920,1.234,3921,0.965,3922,5.647,3923,4.44,3924,1.005,3925,0.933,3926,1.124,3927,1.234,3928,1.234,3929,1.055,3930,1.234,3931,1.234,3932,1.124,3933,1.124,3934,1.234,3935,1.234,3936,1.234,3937,1.234,3938,1.234,3939,1.234,3940,1.234,3941,1.234,3942,1.234,3943,1.234,3944,1.234,3945,1.234,3946,1.813,3947,1.234,3948,1.234,3949,1.234,3950,2.881,3951,1.945,3952,2.072,3953,1.234,3954,1.234,3955,1.234,3956,1.234,3957,1.234,3958,1.234,3959,1.234,3960,1.234,3961,1.124,3962,2.881,3963,3.581,3964,2.072,3965,1.124,3966,1.124,3967,2.881,3968,1.124,3969,1.124,3970,1.124,3971,1.055,3972,2.072,3973,2.072,3974,1.813,3975,1.055,3976,1.124]],["component/142",[68,0.364]],["title/143-1",[733,38.207,2352,32.112]],["name/143-1",[]],["text/143-1",[]],["component/143-1",[]],["title/143-2",[5,26.047,76,21.109]],["name/143-2",[]],["text/143-2",[]],["component/143-2",[]],["title/143-3",[76,21.109,2311,38.966]],["name/143-3",[]],["text/143-3",[]],["component/143-3",[]],["title/143-4",[28,38.519]],["name/143-4",[]],["text/143-4",[]],["component/143-4",[]],["title/143-5",[473,30.372]],["name/143-5",[]],["text/143-5",[]],["component/143-5",[]],["title/143-6",[2435,49.047]],["name/143-6",[]],["text/143-6",[]],["component/143-6",[]],["title/143-7",[185,26.74,559,31.714,2436,33.928]],["name/143-7",[]],["text/143-7",[]],["component/143-7",[]],["title/143-8",[19,25.262,473,25.32]],["name/143-8",[]],["text/143-8",[]],["component/143-8",[]],["title/143",[1496,26.047,2839,51.773]],["name/143",[1496,0.412,2839,0.819]],["text/143",[0,1.057,5,0.486,6,0.755,8,0.637,13,1.43,14,0.632,19,1.705,24,0.72,28,0.599,31,1.283,32,1.341,34,1.198,40,1.193,42,2.428,64,0.5,75,0.597,76,0.992,119,0.612,126,0.691,134,0.612,137,3.24,151,1.303,155,0.743,163,3.602,180,1.551,185,1.063,188,5.434,189,2.971,201,3.401,211,0.681,213,1.457,220,0.601,248,0.717,256,2.399,258,1.278,259,1.117,276,3.125,287,2.896,298,2.024,304,2.558,325,1.283,347,3.891,356,0.781,373,1.738,385,0.679,395,1.341,397,0.812,419,3.078,420,0.627,453,1.492,465,1.591,468,0.637,473,0.863,480,1.524,485,1.208,535,1.223,561,1.822,563,0.875,564,0.641,577,0.735,582,1.321,599,0.71,606,0.763,629,1.018,635,1.37,649,1.656,650,3.294,655,5.565,656,1.223,696,3.716,737,1.049,738,1.64,774,2.354,782,0.772,786,0.755,812,0.651,817,2.656,818,1.213,823,1.378,857,1.656,931,0.861,965,2.936,1017,1.355,1073,3.162,1074,0.861,1112,0.848,1121,0.875,1164,0.781,1172,0.916,1181,0.868,1221,1.626,1226,0.707,1327,2.284,1399,3.374,1448,1.049,1473,1.086,1486,4.086,1496,1.511,1741,2.249,1874,0.955,1942,4.075,1968,1.482,2084,1.689,2087,1.018,2102,1.018,2104,0.991,2106,1.808,2139,1.672,2172,0.883,2181,1.401,2235,1.762,2294,2.063,2327,3.355,2328,0.812,2342,3.643,2361,1.536,2364,0.955,2398,4.296,2406,4.476,2436,0.739,2446,1.86,2447,0.763,2449,2.67,2450,2.643,2451,2.044,2453,1.915,2454,0.823,2457,1.086,2491,3.279,2497,4.291,2501,2.523,2541,1.296,2572,5.062,2616,1.018,2619,2.562,2628,1.086,2787,1.363,2800,7.242,2806,2.329,2807,0.945,2810,0.925,2839,6.344,2872,0.991,3114,1.086,3118,1.086,3155,1.187,3190,2.49,3224,1.808,3230,2.819,3231,0.925,3238,0.861,3241,0.801,3262,3.925,3263,4.586,3265,4.826,3267,1.13,3275,0.781,3279,2.044,3321,1.049,3323,1.049,3324,1.982,3414,0.991,3518,0.991,3521,2.063,3522,1.915,3551,0.925,3625,1.13,3659,1.018,3770,9.698,3818,1.049,3840,1.033,3848,1.018,3860,1.915,3868,1.086,3872,1.049,3883,1.086,3898,1.049,3905,2.846,3909,4.586,3912,1.086,3914,1.13,3918,5.2,3921,1.086,3923,4.291,3924,4.086,3925,1.915,3929,1.187,3946,1.107,3977,1.265,3978,1.13,3979,1.13,3980,1.13,3981,2.063,3982,2.308,3983,2.308,3984,1.086,3985,1.265,3986,1.265,3987,1.265,3988,1.265,3989,1.265,3990,1.265,3991,1.388,3992,2.166,3993,2.308,3994,1.388,3995,1.13,3996,2.063,3997,1.388,3998,1.187,3999,6.047,4000,1.265,4001,1.388,4002,1.388,4003,1.388,4004,1.187,4005,1.187,4006,1.388,4007,2.308,4008,1.388,4009,1.388,4010,1.947,4011,1.265,4012,7.799,4013,1.187,4014,1.388,4015,1.187,4016,1.388,4017,1.187,4018,1.388,4019,1.187,4020,1.388,4021,1.187,4022,1.388,4023,1.187,4024,1.187,4025,3.184,4026,5.13,4027,3.184,4028,3.184,4029,5.62,4030,5.62,4031,4.291,4032,3.929,4033,3.184,4034,4.571,4035,2.308,4036,2.308,4037,2.308,4038,2.308,4039,1.265,4040,1.265,4041,4.571,4042,0.907,4043,1.265,4044,3.184,4045,1.187,4046,1.265,4047,1.265,4048,1.265,4049,3.184,4050,5.13,4051,1.265,4052,1.265,4053,1.982,4054,1.265,4055,1.265,4056,1.265,4057,1.265,4058,1.265,4059,1.265,4060,1.265,4061,1.265,4062,1.265,4063,1.265]],["component/143",[68,0.364]],["title/144-1",[0,19.276,28,27.532,219,32.602]],["name/144-1",[]],["text/144-1",[]],["component/144-1",[]],["title/144-2",[12,28.197,151,23.776,661,42.494]],["name/144-2",[]],["text/144-2",[]],["component/144-2",[]],["title/144-3",[134,21.863,152,19.936,348,28.823,2439,26.127,2618,38.805]],["name/144-3",[]],["text/144-3",[]],["component/144-3",[]],["title/144-4",[986,37.045,1635,39.236,2558,37.293]],["name/144-4",[]],["text/144-4",[]],["component/144-4",[]],["title/144-5",[12,21.939,986,28.823,1636,31.551,2381,25.995,2560,31.831]],["name/144-5",[]],["text/144-5",[]],["component/144-5",[]],["title/144-6",[1637,37.979,2381,29.239,2558,32.638,2771,37.979]],["name/144-6",[]],["text/144-6",[]],["component/144-6",[]],["title/144",[12,28.197,661,42.494,2779,48.185]],["name/144",[661,0.542,1496,0.285,2779,0.614]],["text/144",[0,1.803,2,1.95,3,1.795,4,1.346,6,0.967,8,1.964,9,0.967,10,2.597,12,4.135,13,4.015,15,1.078,16,1.224,19,3.577,21,2.316,25,1.103,28,2.576,29,3.882,34,3.127,39,1.112,53,1.583,55,0.905,59,2.61,61,3.243,62,3.205,72,3.193,80,2.034,88,4.33,100,1.211,119,1.397,126,0.885,129,0.798,134,1.397,151,1.939,152,2.881,159,1.008,160,1.763,163,1.979,178,1.034,179,1.569,180,0.789,181,2.317,185,0.746,188,0.723,189,1.416,191,1.487,192,0.87,200,1.008,201,2.502,203,2.375,204,2.916,213,3.896,218,3.539,219,2.659,254,2.28,258,3.008,271,3.11,276,0.901,280,1.186,307,0.901,308,1.598,336,1.773,347,1.998,348,4.91,356,1.784,361,1.652,385,0.87,388,2.892,398,2.597,468,0.816,472,2.982,478,1.095,501,2.256,549,1.062,577,0.942,578,3.619,661,1.186,676,2.479,738,1.487,748,0.99,761,0.957,780,3.019,782,0.99,789,3.711,804,2.506,818,5.174,823,5.083,898,1.982,940,2.616,952,1.163,974,1.211,977,1.239,986,1.841,997,1.269,1006,1.041,1016,1.112,1031,1.521,1091,1.392,1096,1.152,1109,4.446,1152,3.93,1161,3.399,1168,2.774,1178,2.395,1191,1.112,1192,1.095,1234,4.203,1252,2.157,1254,1.103,1269,2.091,1293,4.373,1298,2.8,1317,1.103,1318,2.206,1323,1.367,1324,1.304,1327,2.8,1408,1.269,1496,2.089,1663,1.186,1732,1.269,1744,1.853,1749,1.892,1879,2.052,1883,2.157,1953,1.198,2139,1.174,2196,0.942,2252,2.412,2281,1.829,2306,1.367,2342,0.87,2351,2.577,2352,1.85,2357,1.174,2381,4.758,2383,2.856,2408,3.351,2439,2.739,2529,2.015,2541,2.659,2558,5.74,2560,5.635,2562,3.337,2571,3.238,2572,3.489,2604,5.267,2609,1.174,2620,2.479,2621,2.58,2622,1.449,2643,2.395,2685,3.489,2686,2.616,2698,1.449,2701,2.983,2709,3.93,2711,1.449,2740,3.664,2746,2.358,2755,4.446,2761,3.238,2767,1.344,2768,6.881,2771,3.539,2773,1.966,2785,2.358,2788,1.449,2789,1.304,2866,1.239,2877,5.922,3037,1.324,3039,1.224,3178,1.211,3214,1.344,3639,2.58,4064,1.62,4065,1.779,4066,1.521,4067,1.392,4068,1.62,4069,1.521,4070,4.446,4071,5.201,4072,3.903,4073,9.123,4074,7.357,4075,5.839,4076,4.737,4077,1.62,4078,3.351,4079,1.392,4080,1.62,4081,3.903,4082,3.903,4083,3.489,4084,3.903,4085,3.903,4086,4.285,4087,1.521,4088,1.521,4089,2.886]],["component/144",[68,0.364]],["title/145-1",[733,38.207,2352,32.112]],["name/145-1",[]],["text/145-1",[]],["component/145-1",[]],["title/145-2",[5,26.047,76,21.109]],["name/145-2",[]],["text/145-2",[]],["component/145-2",[]],["title/145-3",[76,21.109,2311,38.966]],["name/145-3",[]],["text/145-3",[]],["component/145-3",[]],["title/145-4",[28,38.519]],["name/145-4",[]],["text/145-4",[]],["component/145-4",[]],["title/145-5",[473,30.372]],["name/145-5",[]],["text/145-5",[]],["component/145-5",[]],["title/145-6",[2435,49.047]],["name/145-6",[]],["text/145-6",[]],["component/145-6",[]],["title/145-7",[185,26.74,559,31.714,2436,33.928]],["name/145-7",[]],["text/145-7",[]],["component/145-7",[]],["title/145-8",[19,25.262,473,25.32]],["name/145-8",[]],["text/145-8",[]],["component/145-8",[]],["title/145",[1496,26.047,2342,36.348]],["name/145",[1496,0.412,2342,0.575]],["text/145",[0,1.205,4,0.691,5,1.024,8,0.746,9,0.884,13,2.296,14,0.74,19,2.62,24,0.844,27,0.832,31,1.481,34,0.769,40,1.377,66,0.84,67,0.802,74,0.905,75,1.259,76,1.774,82,0.82,88,2.399,119,1.289,123,0.813,126,1.455,134,1.289,137,3.517,163,3.143,180,2.16,184,0.775,185,2.041,188,5.506,189,3.256,190,0.772,201,2.621,211,1.956,213,2.028,223,5.506,252,1.044,258,2.009,259,2.145,276,2.465,298,0.763,347,2.513,351,0.729,373,0.809,376,0.828,385,0.795,388,0.905,417,0.939,420,1.321,453,2.346,465,1.331,468,0.746,473,0.996,485,1.394,510,0.884,524,3.103,535,1.411,561,2.077,563,1.844,564,0.751,582,1.525,599,1.495,606,0.894,635,1.581,650,3.282,651,1.132,656,1.411,696,3.703,738,1.372,774,2.633,782,0.905,786,0.884,790,1.829,794,1.324,812,1.372,817,3.857,823,0.884,904,2.21,931,1.009,965,0.848,968,0.836,1017,1.564,1073,2.921,1074,1.009,1112,0.993,1121,1.026,1164,0.916,1181,1.829,1226,0.828,1484,1.132,1496,1.024,1497,1.176,1741,2.537,1751,1.21,1842,1.192,1922,1.161,1942,3.983,1968,0.951,2139,1.93,2172,1.034,2181,0.899,2235,3.151,2327,3.961,2328,0.951,2342,5.144,2352,0.702,2364,2.013,2406,5.193,2435,0.894,2436,1.556,2446,2.986,2447,0.894,2449,2.986,2450,2.563,2451,2.331,2454,0.964,2541,3.725,2572,4.732,2787,0.875,2806,1.949,2842,1.272,2872,1.161,3118,1.272,3171,1.176,3208,4.867,3209,1.324,3218,1.324,3219,1.324,3225,4.004,3226,4.004,3227,3.473,3228,4.854,3229,4.39,3230,3.18,3231,1.084,3233,4.161,3234,2.501,3240,2.087,3241,2.809,3275,0.916,3279,3.282,3347,3.011,3348,3.011,3349,1.391,3350,1.391,3351,1.391,3352,1.391,3353,1.391,3354,1.391,3355,1.391,3356,1.391,3357,1.391,3358,1.391,3359,1.391,3360,1.391,3361,1.391,3362,1.391,3363,1.391,3364,1.391,3365,1.391,3366,1.391,3367,1.391,3368,1.391,3369,1.391,3370,1.391,3371,1.391,3372,1.391,3373,1.391,3374,1.192,3375,1.391,3376,1.192,3377,1.391,3378,1.391,3379,1.391,3380,1.391,3381,1.391,3382,1.324,3383,1.391,3384,1.324,3385,1.391,3386,1.391,3387,1.391,3388,1.391,3389,1.391,3390,1.391,3391,1.391,3392,1.391,3393,1.391,3394,1.324,3395,1.391,3396,1.324,3397,1.391,3398,1.391,3399,1.391,3400,1.391,3401,1.391,3402,1.229,3403,1.391,3404,1.229,3406,1.084,3407,1.324,3408,1.272,3409,1.272,3410,1.229,3411,1.391,3412,1.391,3413,1.192,3414,1.161,3415,1.229,3416,1.229,3417,1.324,3420,2.501,3432,1.324,3518,1.161,3551,1.084,3552,1.272,3555,1.272,3589,1.324,3590,2.381,3591,2.21,3677,1.355,3971,1.391,3978,1.324,3979,1.324,3980,1.324,3981,2.381,3984,3.117,3998,1.391,3999,5.344,4004,1.391,4005,1.391,4010,1.25,4013,1.391,4015,1.391,4017,1.391,4019,1.391,4021,1.391,4023,1.391,4024,1.391,4639,1.481,4640,1.481,4641,3.629,4642,1.627,4643,1.627,4644,1.627,4645,1.481,4646,1.627,4647,1.627,4648,1.627,4649,1.627,4650,1.627,4651,1.627,4652,1.627,4653,1.627,4654,1.627,4655,1.391,4656,1.627,4657,1.627,4658,1.627,4659,1.481,4660,1.627,4661,1.627,4662,1.627,4663,1.627,4664,1.481,4665,1.627,4666,1.324,4667,1.627,4668,1.481,4669,3.629,4670,2.925,4671,2.501,4672,4.867,4673,1.481,4674,4.433,4675,1.627,4676,1.391,4677,5.693,4678,2.925,4679,1.627,4680,1.627,4681,1.627,4682,2.664,4683,2.925,4684,1.627,4685,1.627,4686,2.664,4687,1.391,4688,1.481,4689,1.481,4690,1.481,4691,1.481,4692,3.807,4693,1.627,4694,1.627,4695,1.627,4696,4.867,4697,1.627,4698,2.925,4699,1.627,4700,1.627,4701,1.627,4702,1.627,4703,1.627]],["component/145",[68,0.364]],["title/146-1",[355,51.827]],["name/146-1",[]],["text/146-1",[]],["component/146-1",[]],["title/146-2",[1316,48.601,2439,39.164]],["name/146-2",[]],["text/146-2",[]],["component/146-2",[]],["title/146-3",[1,41.282,2439,33.579,4090,58.078]],["name/146-3",[]],["text/146-3",[]],["component/146-3",[]],["title/146-4",[12,24.678,966,34.612,2351,33.568,2558,32.638]],["name/146-4",[]],["text/146-4",[]],["component/146-4",[]],["title/146-5",[12,28.197,298,29.913,2558,37.293]],["name/146-5",[]],["text/146-5",[]],["component/146-5",[]],["title/146-6",[468,25.585,995,39.818,1496,19.545,2439,29.388]],["name/146-6",[]],["text/146-6",[]],["component/146-6",[]],["title/146-7",[60,39.994,973,44.412]],["name/146-7",[]],["text/146-7",[]],["component/146-7",[]],["title/146-8",[479,37.293,802,32.758,995,45.497]],["name/146-8",[]],["text/146-8",[]],["component/146-8",[]],["title/146-9",[60,47.973]],["name/146-9",[]],["text/146-9",[]],["component/146-9",[]],["title/146-10",[365,38.024,670,44.735]],["name/146-10",[]],["text/146-10",[]],["component/146-10",[]],["title/146-11",[339,43.793,2609,49.071]],["name/146-11",[]],["text/146-11",[]],["component/146-11",[]],["title/146-12",[3,36.111,2609,42.073,4091,58.078]],["name/146-12",[]],["text/146-12",[]],["component/146-12",[]],["title/146-13",[76,21.109,365,38.024]],["name/146-13",[]],["text/146-13",[]],["component/146-13",[]],["title/146-14",[13,26.086,14,29.017,1227,49.873]],["name/146-14",[]],["text/146-14",[]],["component/146-14",[]],["title/146-15",[739,39.366,2695,54.524]],["name/146-15",[]],["text/146-15",[]],["component/146-15",[]],["title/146-16",[544,36.822,916,30.858,3731,39.818,4092,45.439]],["name/146-16",[]],["text/146-16",[]],["component/146-16",[]],["title/146-17",[12,32.887,2486,50.614]],["name/146-17",[]],["text/146-17",[]],["component/146-17",[]],["title/146-18",[12,32.887,113,33.844]],["name/146-18",[]],["text/146-18",[]],["component/146-18",[]],["title/146-19",[738,34.889,2439,39.164]],["name/146-19",[]],["text/146-19",[]],["component/146-19",[]],["title/146-20",[2615,56.2,4093,60.556]],["name/146-20",[]],["text/146-20",[]],["component/146-20",[]],["title/146-21",[544,42.073,3731,45.497,4094,51.919]],["name/146-21",[]],["text/146-21",[]],["component/146-21",[]],["title/146-22",[12,28.197,738,29.913,2613,46.748]],["name/146-22",[]],["text/146-22",[]],["component/146-22",[]],["title/146-23",[127,35.187,779,43.649,872,32.638,3178,37.979]],["name/146-23",[]],["text/146-23",[]],["component/146-23",[]],["title/146-24",[127,35.187,779,43.649,872,32.638,2356,37.979]],["name/146-24",[]],["text/146-24",[]],["component/146-24",[]],["title/146-25",[2351,44.735,2486,50.614]],["name/146-25",[]],["text/146-25",[]],["component/146-25",[]],["title/146-26",[64,20.078,670,33.568,1496,19.545,2439,29.388]],["name/146-26",[]],["text/146-26",[]],["component/146-26",[]],["title/146-27",[88,36.664,2604,51.178]],["name/146-27",[]],["text/146-27",[]],["component/146-27",[]],["title/146-28",[21,17.34,2281,25.775,2532,33.747,2533,33.747,2534,33.747,2535,32.74]],["name/146-28",[]],["text/146-28",[]],["component/146-28",[]],["title/146-29",[21,24.758,2536,43.395,2537,45.497]],["name/146-29",[]],["text/146-29",[]],["component/146-29",[]],["title/146-30",[749,36.822,1657,34.074,2379,36.129,2535,40.913]],["name/146-30",[]],["text/146-30",[]],["component/146-30",[]],["title/146-31",[230,37.809,348,37.045,2439,33.579]],["name/146-31",[]],["text/146-31",[]],["component/146-31",[]],["title/146-32",[557,40.91,2342,31.165,2542,48.185]],["name/146-32",[]],["text/146-32",[]],["component/146-32",[]],["title/146-33",[2282,46.278]],["name/146-33",[]],["text/146-33",[]],["component/146-33",[]],["title/146-34",[2282,38.58,3231,49.562]],["name/146-34",[]],["text/146-34",[]],["component/146-34",[]],["title/146-35",[679,44.099,2282,38.58]],["name/146-35",[]],["text/146-35",[]],["component/146-35",[]],["title/146-36",[679,37.809,2282,33.078,3815,48.185]],["name/146-36",[]],["text/146-36",[]],["component/146-36",[]],["title/146-37",[679,37.809,2282,33.078,3798,51.919]],["name/146-37",[]],["text/146-37",[]],["component/146-37",[]],["title/146-38",[679,37.809,2282,33.078,3800,51.919]],["name/146-38",[]],["text/146-38",[]],["component/146-38",[]],["title/146-39",[679,37.809,2282,33.078,3802,51.919]],["name/146-39",[]],["text/146-39",[]],["component/146-39",[]],["title/146-40",[679,37.809,2282,33.078,3804,51.919]],["name/146-40",[]],["text/146-40",[]],["component/146-40",[]],["title/146-41",[679,37.809,2282,33.078,3794,48.185]],["name/146-41",[]],["text/146-41",[]],["component/146-41",[]],["title/146-42",[535,30.772,2351,38.355,4095,51.919]],["name/146-42",[]],["text/146-42",[]],["component/146-42",[]],["title/146-43",[2282,38.58,4096,54.524]],["name/146-43",[]],["text/146-43",[]],["component/146-43",[]],["title/146-44",[3,42.117,4097,60.556]],["name/146-44",[]],["text/146-44",[]],["component/146-44",[]],["title/146-45",[2329,41.124,3024,54.524]],["name/146-45",[]],["text/146-45",[]],["component/146-45",[]],["title/146-46",[2329,41.124,3192,54.524]],["name/146-46",[]],["text/146-46",[]],["component/146-46",[]],["title/146-47",[26,40.348,1006,32.638,2329,30.858,4098,42.171]],["name/146-47",[]],["text/146-47",[]],["component/146-47",[]],["title/146-48",[2329,35.259,2764,45.497,4098,48.185]],["name/146-48",[]],["text/146-48",[]],["component/146-48",[]],["title/146-49",[996,47.714,2587,51.773]],["name/146-49",[]],["text/146-49",[]],["component/146-49",[]],["title/146-50",[4099,72.638]],["name/146-50",[]],["text/146-50",[]],["component/146-50",[]],["title/146",[21,24.758,1496,22.333,2329,35.259]],["name/146",[1496,0.412,2357,0.776]],["text/146",[0,0.811,1,0.716,2,1.264,3,3.139,4,1.668,5,1.319,6,2.61,8,0.263,9,2.135,11,1.362,12,3.933,13,2.122,14,1.31,15,1.625,17,0.575,18,0.482,19,3.271,20,1.249,21,2.858,22,0.195,23,0.85,25,0.356,26,0.981,27,1.05,28,0.127,29,1.562,31,1.736,32,2.396,33,1.718,34,1.074,39,0.359,40,1.07,42,0.165,50,1.727,53,2.652,55,0.931,56,0.944,57,0.687,58,0.961,59,0.147,60,2.434,61,1.117,62,0.536,63,0.913,64,0.575,65,1.099,66,0.297,67,0.788,68,0.29,69,0.494,71,0.269,72,1.366,75,1.62,76,1.159,80,1.938,82,0.148,84,0.159,88,2.232,90,0.212,92,0.895,93,1.054,94,0.193,96,0.476,98,0.737,99,0.222,100,0.2,101,0.171,106,0.763,113,1.995,115,0.163,118,1.232,119,1.093,123,0.798,126,1.431,127,3.896,129,1.203,134,1.51,135,0.491,136,0.18,137,1.49,146,0.959,147,0.436,148,0.864,151,1.143,152,1.078,153,0.417,155,0.854,156,1.125,157,0.174,158,0.182,159,0.325,160,0.615,163,1.739,167,0.167,168,0.434,174,0.151,177,0.268,178,2.711,180,1.101,181,0.311,182,0.186,184,0.274,185,1.04,186,0.651,188,4.008,189,0.714,190,0.975,191,0.749,192,1.406,193,1.15,194,1.078,196,0.737,200,0.166,201,2.672,203,0.619,204,0.2,206,0.292,208,0.665,209,0.41,210,0.2,213,2.001,218,0.575,219,0.936,220,0.366,226,0.501,227,0.229,228,0.182,230,0.341,244,0.251,245,0.383,248,1.485,251,0.995,252,0.188,253,0.501,254,0.306,255,0.193,257,0.956,258,0.557,265,0.225,276,1.553,287,0.783,291,0.148,292,0.222,298,0.749,300,0.188,301,0.923,304,0.174,305,0.379,306,0.396,307,1.458,308,0.426,310,1.249,311,0.229,313,1.085,314,0.421,320,0.165,321,0.944,322,0.204,323,0.975,324,0.222,325,1.041,326,0.41,327,0.7,333,0.218,334,0.468,339,2.119,344,0.45,347,0.185,348,0.642,349,0.878,350,0.222,351,0.821,361,0.153,363,0.41,364,0.193,365,0.294,368,0.452,373,2.921,376,0.69,381,0.225,385,2.142,388,0.163,397,0.171,398,1.744,399,0.239,400,0.396,404,0.215,405,0.19,414,1.379,415,0.272,420,0.132,432,0.155,439,0.882,453,0.173,458,0.173,459,1.3,464,0.563,465,1.31,466,0.328,468,0.507,473,0.376,474,0.369,478,0.983,479,2.004,480,0.816,485,0.646,488,0.251,489,0.218,494,1.207,501,1.615,503,0.744,510,0.601,511,0.251,524,0.611,531,0.202,535,0.654,541,0.239,542,1.528,543,0.651,544,1.77,547,1.32,549,0.175,550,0.251,552,0.185,553,0.9,557,0.709,558,0.348,561,0.441,562,0.639,564,0.949,565,0.195,577,0.304,578,1.361,579,0.575,582,1.184,583,0.222,591,0.229,597,0.718,598,1.171,599,0.817,604,0.185,608,0.222,612,0.688,624,0.434,628,0.445,633,0.2,635,0.989,649,0.376,650,0.336,654,0.195,656,0.141,657,0.934,659,0.195,667,0.215,668,0.362,670,2.362,676,1.182,678,0.945,679,1.59,681,0.563,683,0.183,691,0.222,696,0.193,707,0.202,708,0.506,710,0.212,712,0.222,713,0.179,728,0.229,729,0.239,732,0.428,735,0.789,738,0.859,739,5.325,740,0.222,747,0.458,748,0.615,749,0.895,750,0.251,751,0.933,760,0.222,761,0.729,762,1.087,774,1.916,777,0.209,778,0.52,781,0.222,782,0.163,786,0.312,789,0.41,790,0.183,799,0.192,801,0.188,802,0.568,804,1.328,811,1.112,812,1.35,816,0.661,817,1.905,818,1.879,823,1.117,845,0.944,846,0.405,848,0.193,857,0.376,859,0.752,872,0.647,873,0.195,882,0.558,888,0.229,897,0.41,898,0.359,899,0.588,901,1.109,903,0.209,916,1.99,940,0.179,943,0.209,948,0.239,950,0.174,951,0.744,952,0.552,958,0.239,963,0.811,966,0.686,968,0.434,969,0.215,970,0.322,971,0.251,972,0.588,973,0.505,974,0.2,976,0.611,977,0.204,979,0.639,980,1.307,982,0.405,986,2.281,987,0.458,993,0.611,996,0.188,997,0.209,1001,1.776,1002,0.508,1004,0.239,1006,1.328,1007,3.137,1008,0.9,1009,0.789,1012,0.197,1013,2.638,1014,3.028,1015,0.62,1016,0.529,1017,1.327,1018,0.2,1022,0.229,1024,1.306,1028,0.968,1043,0.239,1056,0.244,1074,0.524,1091,0.229,1096,1.034,1112,0.179,1113,0.209,1118,2.553,1119,0.251,1128,0.895,1137,1.104,1139,0.239,1140,0.491,1141,0.251,1142,0.468,1143,0.351,1148,1.498,1149,1.155,1152,0.639,1153,0.182,1154,2.879,1155,0.945,1156,0.823,1159,0.45,1164,0.899,1168,0.372,1170,0.387,1177,0.434,1179,0.639,1191,2.25,1192,1.526,1196,0.179,1204,0.225,1209,0.744,1217,0.458,1226,0.563,1227,0.229,1229,0.697,1230,0.251,1231,0.479,1234,0.207,1236,0.239,1251,0.542,1254,0.524,1255,0.207,1284,2.293,1285,0.251,1286,0.244,1291,1.466,1293,0.215,1298,0.192,1300,1.249,1301,0.222,1302,0.239,1303,0.244,1304,0.251,1310,2.497,1317,0.182,1318,0.4,1327,0.723,1337,0.362,1338,0.376,1339,0.848,1355,0.434,1356,0.656,1366,1.607,1368,0.222,1369,0.229,1373,0.366,1376,0.222,1377,0.222,1388,0.209,1408,0.209,1495,0.209,1496,1.483,1644,0.19,1657,0.828,1658,0.202,1659,0.661,1663,0.383,1666,1.087,1667,1.076,1685,0.192,1704,0.647,1706,0.209,1714,0.239,1725,0.65,1741,0.833,1745,0.941,1753,0.405,1764,0.87,1785,0.575,1807,0.379,1809,0.239,1868,0.204,1874,0.202,1879,1.737,1883,0.575,1893,0.434,1901,0.239,1919,0.752,1923,0.204,1930,0.239,1933,0.239,1967,0.968,1968,0.171,1969,0.185,2033,0.491,2035,0.222,2044,0.222,2051,0.405,2094,0.222,2136,0.222,2138,0.204,2139,1.498,2153,0.41,2154,0.251,2163,0.823,2178,0.865,2181,1.012,2184,0.62,2203,0.369,2207,1.787,2208,0.642,2212,0.822,2215,0.239,2225,0.239,2231,0.603,2235,0.684,2236,0.729,2238,0.239,2241,0.391,2242,0.229,2247,0.197,2264,0.234,2267,0.45,2281,0.169,2282,3.78,2284,0.723,2292,0.434,2315,0.45,2327,0.159,2328,0.171,2329,4.736,2342,0.663,2344,0.222,2345,0.563,2346,1.274,2349,0.994,2351,3.657,2352,0.79,2353,0.723,2354,2.802,2355,0.865,2356,2.779,2361,0.67,2379,1.185,2380,0.582,2381,1.076,2383,0.904,2385,0.41,2388,0.239,2397,0.239,2410,0.212,2411,0.251,2418,0.182,2433,0.62,2434,1.306,2436,0.156,2438,0.923,2439,2.919,2440,0.229,2449,0.306,2450,0.154,2472,0.251,2483,0.479,2486,3.772,2491,0.192,2498,0.491,2501,0.647,2507,0.387,2529,1.164,2530,1.546,2532,0.434,2533,0.434,2534,0.434,2535,0.421,2536,0.2,2537,0.209,2538,0.239,2541,0.565,2542,0.222,2543,0.239,2556,0.204,2558,3.614,2560,0.87,2562,1.846,2572,1.683,2587,0.4,2588,0.204,2593,0.222,2596,1.009,2597,0.251,2603,2.027,2604,1.563,2605,1.126,2606,1.716,2607,0.229,2608,2.646,2609,2.694,2610,0.639,2611,0.434,2613,1.966,2615,4.012,2618,1.431,2619,0.421,2620,0.45,2621,0.239,2622,0.239,2623,0.229,2624,0.267,2625,0.251,2626,0.251,2627,2.262,2628,0.229,2629,0.239,2630,0.251,2631,0.239,2632,0.239,2633,0.239,2634,0.251,2635,0.251,2636,0.251,2637,0.251,2638,0.251,2639,0.251,2640,0.251,2642,0.251,2643,0.222,2645,1.207,2647,0.468,2684,0.229,2686,0.351,2687,0.251,2688,0.222,2689,0.383,2691,0.421,2693,1.025,2694,0.222,2695,3.319,2697,0.239,2699,0.468,2700,0.239,2701,0.204,2709,1.383,2712,0.267,2716,0.945,2722,0.251,2724,0.251,2737,0.239,2740,0.207,2749,0.222,2752,0.468,2760,0.45,2761,0.222,2763,0.468,2764,0.968,2767,0.639,2769,0.239,2771,0.575,2772,0.41,2773,0.991,2783,0.229,2787,0.309,2802,0.491,2817,0.239,2819,0.563,2822,0.192,2863,0.9,2866,0.4,2867,0.239,2872,0.209,2925,0.62,2928,0.222,2937,0.45,2949,0.239,3009,0.239,3010,0.239,3016,0.239,3020,0.225,3024,0.811,3039,0.202,3115,0.218,3143,0.207,3178,1.825,3179,0.239,3180,0.688,3181,0.239,3182,0.239,3183,1.94,3184,2.027,3187,0.239,3190,2.173,3191,2.93,3192,2.512,3193,0.239,3194,0.45,3195,0.239,3196,1.081,3198,2.251,3199,0.405,3200,0.222,3201,2.399,3202,0.239,3206,0.229,3207,0.209,3230,0.192,3231,2.398,3406,0.195,3422,1.716,3455,0.239,3491,0.229,3526,0.225,3529,0.215,3538,0.239,3596,0.239,3704,0.9,3717,0.865,3718,0.239,3730,0.234,3731,0.209,3732,0.468,3733,0.239,3758,0.468,3761,0.468,3762,0.468,3765,0.239,3780,0.239,3781,0.468,3783,0.468,3784,0.239,3785,0.239,3786,0.468,3787,0.239,3788,0.9,3789,0.239,3791,0.239,3792,0.239,3793,0.239,3794,1.207,3795,0.239,3796,0.468,3797,0.468,3798,0.239,3799,0.468,3800,0.239,3801,0.239,3802,0.239,3803,0.239,3804,0.239,3805,0.239,3806,0.688,3807,0.468,3808,0.239,3809,0.239,3810,0.239,3811,0.688,3812,0.239,3813,0.9,3814,0.468,3815,0.434,3816,0.239,3817,0.239,3833,0.229,3974,0.234,4042,0.723,4069,1.159,4078,1.249,4079,0.229,4083,0.468,4092,1.104,4093,1.104,4094,0.468,4095,0.468,4096,2.11,4097,0.688,4098,0.222,4099,1.49,4100,0.267,4101,1.565,4102,0.267,4103,0.523,4104,0.77,4105,0.523,4106,0.523,4107,1.194,4108,0.267,4109,1.611,4110,2.793,4111,0.77,4112,0.77,4113,0.267,4114,0.267,4115,0.251,4116,0.267,4117,0.267,4118,0.267,4119,0.267,4120,0.491,4121,0.723,4122,0.267,4123,0.239,4124,0.267,4125,0.267,4126,0.267,4127,0.251,4128,0.267,4129,0.523,4130,0.523,4131,0.523,4132,0.77,4133,1.565,4134,0.523,4135,0.523,4136,0.639,4137,0.267,4138,0.267,4139,1.455,4140,0.267,4141,2.068,4142,0.267,4143,0.77,4144,0.267,4145,0.267,4146,0.267,4147,0.267,4148,0.267,4149,0.523,4150,0.575,4151,0.77,4152,0.523,4153,0.77,4154,0.267,4155,1.455,4156,0.267,4157,0.267,4158,0.267,4159,0.267,4160,0.267,4161,0.468,4162,0.267,4163,0.251,4164,0.267,4165,0.267,4166,0.251,4167,0.267,4168,1.235,4169,0.77,4170,0.267,4171,0.267,4172,0.77,4173,0.523,4174,0.523,4175,0.523,4176,0.267,4177,0.523,4178,1.455,4179,0.77,4180,0.523,4181,0.267,4182,0.523,4183,0.267,4184,0.523,4185,0.523,4186,0.267,4187,1.007,4188,0.239,4189,0.523,4190,0.267,4191,0.251,4192,0.267,4193,0.575,4194,0.575,4195,0.523,4196,0.258,4197,0.293,4198,0.973,4199,0.77,4200,0.293,4201,0.506,4202,0.845,4203,0.293,4204,0.267,4205,0.77,4206,0.293,4207,0.293,4208,0.267,4209,0.293,4210,0.293,4211,0.293,4212,0.293,4213,0.239,4214,0.77,4215,1.235,4216,1.007,4217,0.267,4218,0.77,4219,0.267,4220,0.267,4221,0.9,4222,0.267,4223,0.267,4224,0.267,4225,0.267,4226,0.267,4227,0.267,4228,0.267,4229,0.267,4230,0.267,4231,0.267,4232,0.267,4233,0.267,4234,0.267,4235,0.77,4236,0.267,4237,0.267,4238,0.267,4239,0.267,4240,0.267,4241,0.267,4242,0.267,4243,0.267,4244,0.267,4245,0.267,4246,0.267,4247,0.258,4248,0.267,4249,1.235,4250,0.267,4251,0.267,4252,0.267,4253,0.267,4254,0.267,4255,0.267,4256,0.267,4257,0.267,4258,0.267,4259,0.267,4260,0.267,4261,0.267,4262,0.267,4263,0.267,4264,0.267,4265,0.491,4266,0.267,4267,0.267,4268,0.267,4269,0.523,4270,0.267,4271,0.267,4272,0.267,4273,0.267,4274,0.251,4275,0.688,4276,0.267,4277,0.267,4278,0.267,4279,0.267,4280,0.491,4281,0.267,4282,0.267,4283,1.406,4284,0.258,4285,0.267,4286,1.13,4287,0.491,4288,1.007,4289,1.007,4290,0.523,4291,0.267,4292,0.523,4293,0.523,4294,0.267,4295,0.267,4296,0.251,4297,0.523,4298,0.267,4299,0.267,4300,0.523,4301,0.267,4302,0.479,4303,0.267,4304,0.267,4305,0.267,4306,0.267,4307,0.251,4308,0.293,4309,0.258,4310,0.267,4311,0.267,4312,0.267,4313,0.293,4314,0.293,4315,0.293,4316,0.293,4317,0.293,4318,0.267,4319,0.267,4320,1.007,4321,0.267,4322,0.523,4323,0.523,4324,0.267,4325,0.258,4326,0.267,4327,0.523,4328,0.523,4329,0.267,4330,0.267,4331,0.239,4332,0.267,4333,0.267,4334,0.491,4335,0.267,4336,0.77,4337,0.267,4338,0.267,4339,0.267,4340,0.267,4341,0.267,4342,0.267,4343,0.267,4344,0.267,4345,0.267,4346,0.267,4347,0.267,4348,0.267,4349,0.267,4350,0.267,4351,0.267,4352,0.267,4353,0.267,4354,0.267,4355,0.267,4356,0.267,4357,0.267,4358,0.267,4359,0.267,4360,0.523,4361,0.267,4362,0.845,4363,0.293,4364,0.293,4365,0.523,4366,0.575,4367,0.575,4368,0.575,4369,0.575,4370,0.575,4371,0.575,4372,0.267,4373,0.267,4374,0.267,4375,0.267,4376,0.267,4377,0.267,4378,0.267,4379,0.267,4380,0.267,4381,0.267,4382,0.267,4383,0.267,4384,0.267,4385,0.267,4386,0.267,4387,0.267,4388,0.267,4389,0.267,4390,0.267,4391,0.267,4392,0.267,4393,0.267,4394,0.267,4395,0.293,4396,0.267,4397,0.293,4398,0.267,4399,0.293,4400,0.293,4401,0.267,4402,0.293,4403,0.267,4404,0.267,4405,0.267,4406,0.251,4407,0.267,4408,0.267,4409,0.239,4410,0.258,4411,0.267,4412,0.251,4413,0.267,4414,0.267,4415,0.267,4416,0.267,4417,0.267,4418,0.523,4419,0.491,4420,1.235,4421,0.267,4422,0.267,4423,0.267,4424,0.267,4425,0.267,4426,0.267,4427,0.267,4428,0.267,4429,0.523,4430,0.491,4431,0.267,4432,0.267,4433,0.267,4434,0.251,4435,0.267,4436,0.267,4437,0.267,4438,0.267,4439,0.523,4440,0.267,4441,0.267,4442,0.267,4443,0.222,4444,0.267,4445,0.267,4446,0.468,4447,0.267,4448,0.267,4449,0.267,4450,0.77,4451,0.251,4452,0.267,4453,0.267,4454,0.468,4455,0.251,4456,0.77,4457,0.267,4458,0.267,4459,0.258,4460,0.523,4461,0.244,4462,0.267,4463,0.267,4464,0.267,4465,0.267,4466,0.523,4467,0.267,4468,0.267,4469,0.267,4470,0.267,4471,0.267,4472,0.523,4473,0.267,4474,0.267,4475,0.267,4476,0.267,4477,0.267]],["component/146",[68,0.364]],["title/147-1",[733,38.207,2352,32.112]],["name/147-1",[]],["text/147-1",[]],["component/147-1",[]],["title/147-2",[5,26.047,76,21.109]],["name/147-2",[]],["text/147-2",[]],["component/147-2",[]],["title/147-3",[76,21.109,2311,38.966]],["name/147-3",[]],["text/147-3",[]],["component/147-3",[]],["title/147-4",[19,21.659,420,28.806,4478,50.843]],["name/147-4",[]],["text/147-4",[]],["component/147-4",[]],["title/147-5",[351,33.356,3200,56.2]],["name/147-5",[]],["text/147-5",[]],["component/147-5",[]],["title/147-6",[1764,47.714,2351,44.735]],["name/147-6",[]],["text/147-6",[]],["component/147-6",[]],["title/147",[1496,26.047,4478,59.3]],["name/147",[1496,0.412,4478,0.938]],["text/147",[0,3.413,4,1.445,5,2.203,6,1.048,8,1.56,9,3.775,12,3.879,13,1.392,14,0.877,19,2.359,21,1.321,28,0.832,31,2.313,53,0.963,59,0.967,62,0.934,75,1.464,80,3.297,88,0.95,119,0.849,134,2.428,137,3.019,151,0.719,158,1.195,178,1.12,180,2.027,188,5.009,190,0.915,203,1.554,211,0.946,213,1.418,218,1.312,219,0.985,248,0.995,257,1.358,258,0.972,271,2.381,276,1.723,306,1.326,308,0.972,333,1.434,350,1.456,351,0.864,363,5.697,365,0.985,368,1.031,373,1.692,420,2.841,453,1.135,464,1.284,465,2.862,468,0.884,503,1.298,510,3.775,524,1.881,531,1.326,535,1.642,543,3.704,547,1.025,562,1.456,578,1.609,582,1.774,599,0.985,608,1.456,619,1.413,656,0.93,657,1.99,733,0.99,738,0.904,739,4.448,751,1.326,774,0.904,804,1.127,812,0.904,817,1.02,818,3.324,820,1.648,822,1.312,823,4.079,857,5.732,859,1.312,864,2.909,968,0.99,1017,5.689,1071,1.456,1110,2.614,1112,1.177,1118,2.127,1121,2.145,1148,1.272,1168,2.202,1171,1.456,1182,1.312,1204,1.481,1209,1.298,1221,3.535,1244,1.755,1298,2.223,1300,1.507,1338,1.259,1393,2.315,1442,3.108,1644,1.248,1749,1.151,1751,2.531,1753,1.358,1764,5.122,1917,1.259,1968,1.127,2163,3.398,2172,2.904,2181,1.881,2195,1.413,2281,1.112,2282,1.765,2329,1.066,2346,1.537,2351,5.276,2357,1.272,2366,1.648,2383,1.284,2442,2.77,2446,1.025,2486,5.433,2558,4.388,2691,1.413,2701,1.342,2708,1.537,2740,1.358,2772,1.375,2773,1.195,2822,1.259,3037,1.434,3171,5.772,3183,5.868,3190,1.112,3192,2.494,3194,4.31,3200,4.753,3201,4.919,3451,3.099,3452,3.099,3456,3.302,3551,5.6,3586,1.648,3589,1.569,3590,2.77,3591,7.095,3666,7.653,3706,3.836,3717,1.507,4031,2.909,4042,2.223,4087,2.909,4096,1.413,4101,5.377,4133,3.904,4166,2.909,4221,1.569,4275,3.718,4455,1.648,4478,5.537,4479,1.927,4480,1.927,4481,3.402,4482,1.927,4483,1.927,4484,1.927,4485,1.927,4486,1.927,4487,1.927,4488,1.927,4489,1.927,4490,3.402,4491,3.402,4492,1.755,4493,1.755,4494,3.402,4495,3.402,4496,3.402,4497,1.927,4498,1.927,4499,1.927,4500,1.927,4501,1.927,4502,3.402,4503,1.927,4504,3.402,4505,1.927,4506,1.927,4507,1.927,4508,3.402,4509,1.927,4510,1.927,4511,1.927,4512,1.927,4513,3.402,4514,1.927,4515,1.927,4516,1.927,4517,1.927,4518,1.927,4519,1.927,4520,1.927,4521,1.927,4522,5.51,4523,3.402,4524,4.567,4525,5.51,4526,4.567,4527,3.402,4528,3.402,4529,3.402,4530,1.927,4531,5.51,4532,1.927,4533,1.927,4534,1.927,4535,1.755,4536,1.927,4537,1.927,4538,3.402,4539,1.927,4540,1.927,4541,1.927,4542,1.927,4543,1.537,4544,1.927,4545,1.927,4546,1.927,4547,1.927,4548,1.927,4549,1.927,4550,1.927,4551,1.927,4552,1.927,4553,1.927,4554,1.927,4555,1.927,4556,1.927,4557,1.927,4558,1.927,4559,1.927,4560,1.927,4561,3.402,4562,1.927,4563,3.402]],["component/147",[68,0.364]],["title/148-1",[733,38.207,2352,32.112]],["name/148-1",[]],["text/148-1",[]],["component/148-1",[]],["title/148-2",[5,26.047,76,21.109]],["name/148-2",[]],["text/148-2",[]],["component/148-2",[]],["title/148-3",[56,44.389,1744,37.293,4565,49.873]],["name/148-3",[]],["text/148-3",[]],["component/148-3",[]],["title/148-4",[1744,37.293,4565,49.873,4566,54.517]],["name/148-4",[]],["text/148-4",[]],["component/148-4",[]],["title/148-5",[5,17.376,1744,29.017,2686,30.293,2787,26.68,4565,38.805]],["name/148-5",[]],["text/148-5",[]],["component/148-5",[]],["title/148-6",[76,21.109,2311,38.966]],["name/148-6",[]],["text/148-6",[]],["component/148-6",[]],["title/148-7",[28,38.519]],["name/148-7",[]],["text/148-7",[]],["component/148-7",[]],["title/148-8",[473,30.372]],["name/148-8",[]],["text/148-8",[]],["component/148-8",[]],["title/148-9",[2435,49.047]],["name/148-9",[]],["text/148-9",[]],["component/148-9",[]],["title/148-10",[4565,58.169,4566,63.585]],["name/148-10",[]],["text/148-10",[]],["component/148-10",[]],["title/148-11",[28,38.519]],["name/148-11",[]],["text/148-11",[]],["component/148-11",[]],["title/148-12",[13,20.297,1189,40.397,1744,29.017,1749,29.628,2787,26.68]],["name/148-12",[]],["text/148-12",[]],["component/148-12",[]],["title/148",[1496,26.047,4564,61.969]],["name/148",[1496,0.412,4564,0.98]],["text/148",[3,1.145,4,0.859,5,3.011,8,0.927,13,3.915,14,0.92,15,1.225,18,2.022,19,3.487,21,0.785,25,2.2,42,1.138,49,1.407,53,1.772,56,3.968,64,0.727,68,0.531,71,2.663,75,1.527,76,2.44,80,0.96,119,1.563,124,1.361,128,1.064,129,0.907,134,3.394,137,1.542,152,3.095,155,1.898,167,1.152,180,0.897,183,1.297,185,1.988,188,5.297,189,2.119,192,2.317,194,2.792,201,4.013,203,0.923,213,2.375,220,1.537,254,2.523,259,1.563,298,0.948,300,1.297,303,1.376,307,2.401,313,1.199,325,1.024,326,1.442,327,2.942,351,2.126,373,1.765,387,1.376,415,0.956,420,0.913,432,2.51,453,2.792,464,1.347,465,3.723,473,1.208,480,3.429,481,1.482,485,0.964,535,3.717,542,1.152,559,2.835,564,1.639,577,1.878,578,0.956,597,1.07,599,1.034,635,1.093,657,1.182,668,1.275,679,1.199,700,1.841,703,1.334,714,1.391,812,0.948,816,1.581,818,1.698,845,3.301,855,1.275,950,2.104,968,3.67,1110,1.553,1112,1.234,1127,5.588,1128,1.334,1142,1.646,1178,1.528,1189,2.889,1221,5.249,1226,1.029,1232,2.276,1320,1.361,1356,1.199,1393,1.376,1496,2.698,1744,7.139,1749,1.207,1942,3.116,1968,1.182,1969,2.989,2172,1.286,2235,2.39,2327,1.929,2345,2.364,2352,0.873,2415,1.581,2418,2.941,2432,1.407,2446,1.888,2447,2.607,2449,1.888,2450,2.497,2484,1.841,2541,1.814,2646,1.728,2686,3.48,2760,1.581,2770,1.646,2787,5.146,2789,1.482,2845,2.681,3238,1.254,3241,1.167,3270,3.033,3275,1.997,3279,2.075,3779,1.728,3830,1.841,3992,3.033,4066,3.033,4067,1.581,4079,1.581,4365,1.841,4446,1.646,4564,4.749,4565,9.015,4566,7.35,4567,2.022,4568,2.022,4569,2.022,4570,2.022,4571,2.022,4572,2.022,4573,2.022,4574,3.548,4575,4.054,4576,2.022,4577,3.548,4578,2.022,4579,2.022,4580,3.548,4581,8.182,4582,3.548,4583,2.022,4584,2.022,4585,2.022,4586,2.022,4587,1.728,4588,2.022,4589,2.022,4590,3.548,4591,1.841,4592,3.033,4593,3.548,4594,3.548,4595,3.548,4596,2.022,4597,2.022,4598,2.022,4599,2.022,4600,2.022,4601,3.548,4602,2.022,4603,2.022,4604,2.022,4605,3.548,4606,2.022,4607,2.022,4608,2.022,4609,2.022,4610,3.548,4611,2.022,4612,2.022,4613,2.022,4614,2.022,4615,7.145,4616,1.728,4617,2.022,4618,2.022,4619,2.022,4620,1.646,4621,2.022,4622,2.022,4623,1.646,4624,1.646,4625,1.646,4626,2.022,4627,2.022,4628,2.022,4629,1.646,4630,2.022,4631,1.728,4632,2.022,4633,1.841,4634,2.022,4635,2.022,4636,2.022,4637,2.022,4638,2.022]],["component/148",[68,0.364]],["title/149-1",[733,38.207,2352,32.112]],["name/149-1",[]],["text/149-1",[]],["component/149-1",[]],["title/149-2",[5,26.047,76,21.109]],["name/149-2",[]],["text/149-2",[]],["component/149-2",[]],["title/149-3",[76,21.109,2311,38.966]],["name/149-3",[]],["text/149-3",[]],["component/149-3",[]],["title/149-4",[473,30.372]],["name/149-4",[]],["text/149-4",[]],["component/149-4",[]],["title/149-5",[2435,49.047]],["name/149-5",[]],["text/149-5",[]],["component/149-5",[]],["title/149-6",[185,26.74,559,31.714,2436,33.928]],["name/149-6",[]],["text/149-6",[]],["component/149-6",[]],["title/149-7",[19,25.262,473,25.32]],["name/149-7",[]],["text/149-7",[]],["component/149-7",[]],["title/149-8",[2686,38.933,3208,38.355,3211,39.548]],["name/149-8",[]],["text/149-8",[]],["component/149-8",[]],["title/149-9",[13,20.297,2204,30.528,2529,31.551,3208,29.843,3211,30.771]],["name/149-9",[]],["text/149-9",[]],["component/149-9",[]],["title/149-10",[180,16.518,254,19.805,817,19.702,823,20.236,903,26.559,1663,24.806,3211,23.086,4704,29.113]],["name/149-10",[]],["text/149-10",[]],["component/149-10",[]],["title/149-11",[180,18.018,254,21.604,817,21.492,823,22.074,903,28.971,3211,25.183,4704,31.757]],["name/149-11",[]],["text/149-11",[]],["component/149-11",[]],["title/149",[1496,26.047,3211,46.127]],["name/149",[1496,0.412,3211,0.73]],["text/149",[0,1.973,3,2.447,4,1.321,5,1.436,6,1.038,8,0.196,9,2.103,11,1.661,12,1.252,13,2.775,14,1.016,15,0.259,18,0.243,19,2.636,20,0.235,21,0.609,22,0.806,23,0.227,24,0.43,27,0.424,29,0.581,31,0.967,32,0.226,33,0.937,34,0.202,40,2.135,42,0.467,49,1.554,50,0.779,56,0.297,64,1.969,66,2.117,67,0.21,72,0.539,73,0.467,74,0.461,75,0.675,76,1.03,80,0.394,82,1.28,88,1.101,94,0.547,109,0.75,111,0.23,113,0.55,115,0.237,119,1.37,121,0.441,123,0.784,126,2.356,128,0.437,129,0.542,134,0.984,137,1.971,146,0.224,147,0.428,148,0.231,151,1.258,152,1.903,153,0.21,155,0.444,156,0.777,158,2.68,163,1.436,164,0.728,167,0.473,174,1.462,177,0.563,179,0.411,180,2.352,184,0.395,185,0.179,186,0.251,188,5.383,189,0.998,190,0.203,194,0.712,201,1.187,205,0.291,206,0.972,211,0.407,213,0.654,220,0.185,223,0.627,228,0.265,230,0.253,233,0.334,235,0.348,245,0.285,252,0.274,254,3.001,256,0.461,258,0.215,259,0.691,260,0.285,271,0.223,276,2.593,280,0.285,287,0.246,298,0.2,307,3.237,308,0.215,323,0.261,326,0.305,327,0.22,351,1.735,356,0.681,361,0.223,363,0.305,364,1.26,376,0.422,381,3.483,382,0.627,385,1.241,387,0.291,388,1.412,393,0.334,397,0.25,399,0.348,400,0.294,414,0.237,417,0.906,419,0.305,420,3.173,424,1.429,428,0.985,432,0.64,433,0.365,434,0.348,435,0.514,443,0.553,445,0.79,452,0.973,453,0.488,459,1.009,465,0.377,468,1.663,473,0.412,474,0.776,478,0.263,479,0.707,485,0.395,499,0.291,508,0.285,510,0.232,524,1.719,535,0.584,542,0.473,549,0.255,554,0.334,557,0.274,561,0.818,564,1.308,570,0.269,572,0.313,577,1.499,578,0.202,581,0.323,582,0.818,590,0.627,594,0.313,596,0.649,599,0.218,606,0.235,614,0.675,623,0.389,628,0.225,633,0.291,635,0.448,651,0.297,654,0.285,656,0.4,657,0.918,659,0.285,670,0.728,676,0.203,680,0.951,701,0.675,702,0.287,705,0.297,713,0.261,720,0.376,738,0.2,749,0.798,770,1.011,774,1.459,784,0.356,786,0.658,789,0.305,794,0.348,804,0.25,817,0.83,819,0.313,823,1.381,830,0.274,843,0.389,845,0.297,848,0.798,854,0.887,871,0.313,874,1.927,903,0.592,925,0.318,931,0.265,945,0.709,948,0.348,949,0.334,950,0.253,965,0.223,968,0.426,970,0.239,973,0.722,980,0.271,996,1.007,1013,0.313,1014,0.763,1015,0.313,1017,1.021,1019,0.291,1020,0.323,1021,0.348,1058,0.348,1094,0.823,1112,0.261,1113,0.305,1121,0.523,1134,0.282,1137,0.348,1148,0.547,1149,1.134,1153,0.265,1164,0.24,1171,0.914,1172,0.798,1178,0.627,1181,0.519,1192,0.965,1206,0.365,1217,0.34,1221,1.007,1226,0.615,1229,0.269,1232,0.274,1293,0.608,1306,0.318,1316,1.025,1320,0.558,1322,0.323,1338,0.542,1352,0.297,1356,0.492,1377,0.323,1484,0.297,1496,0.424,1497,0.874,1568,0.313,1657,0.261,1663,1.488,1667,0.558,1674,0.365,1706,0.305,1708,0.348,1709,0.265,1721,0.389,1741,0.818,1744,5.624,1749,0.255,1764,0.532,1784,0.323,1785,1.519,1829,0.755,1842,0.313,1846,0.755,1856,1.919,1868,0.297,1877,0.276,1880,0.334,1917,0.79,1919,0.564,1922,0.305,1942,1.983,1950,1.429,1953,0.558,1958,0.348,1968,0.25,2030,1.818,2102,0.313,2158,0.334,2172,1.214,2181,4.669,2187,0.242,2192,0.334,2196,0.226,2204,0.263,2222,0.323,2235,0.791,2240,0.946,2249,1.102,2252,0.24,2253,0.313,2270,1.644,2279,0.279,2281,0.479,2327,1.539,2328,0.25,2329,0.236,2341,0.348,2342,1.52,2344,0.323,2345,0.806,2352,0.184,2361,0.951,2364,0.571,2380,0.294,2406,1.056,2410,0.309,2418,0.514,2432,1.554,2433,0.313,2446,0.644,2447,1.05,2449,0.644,2450,0.826,2451,0.707,2454,0.253,2491,0.279,2499,0.297,2501,0.918,2507,1.286,2529,0.527,2530,0.291,2536,0.291,2541,1.448,2572,0.25,2588,1.554,2600,0.323,2607,0.649,2616,0.313,2627,0.577,2643,0.914,2686,1.898,2689,0.806,2691,0.313,2693,0.627,2738,0.348,2752,0.348,2765,0.649,2766,0.334,2767,0.627,2781,0.348,2785,0.617,2787,3.204,2789,0.608,2792,1.637,2793,0.323,2805,0.592,2806,0.285,2807,1.068,2810,1.488,2819,0.285,2822,0.279,2840,0.323,2842,0.649,2845,1.443,2865,0.709,2866,0.297,2868,0.365,2872,0.863,2878,0.365,2879,0.365,2880,0.348,2881,0.348,2922,0.348,2925,1.4,2928,0.323,2939,1.034,3012,0.675,3014,0.365,3017,0.985,3039,0.294,3041,2.926,3103,0.348,3110,0.985,3139,1.008,3171,0.309,3186,0.365,3190,0.246,3199,0.301,3203,0.709,3208,2.182,3209,0.348,3211,3.499,3220,0.348,3225,1.593,3226,1.362,3227,1.119,3228,1.593,3229,1.494,3240,0.592,3241,0.906,3246,0.348,3252,1.443,3275,1.899,3279,1.656,3288,1.278,3318,0.365,3321,0.914,3347,1.186,3348,1.186,3349,0.365,3350,0.365,3351,0.365,3352,0.365,3353,0.365,3354,0.365,3355,0.365,3356,0.365,3357,0.365,3358,0.365,3359,0.365,3360,0.365,3361,0.365,3362,0.365,3363,0.365,3364,0.365,3365,0.365,3366,0.365,3367,0.365,3368,0.365,3369,0.365,3370,0.365,3371,0.365,3372,0.365,3373,0.365,3374,0.313,3375,0.365,3376,0.313,3377,0.365,3378,0.365,3379,0.365,3380,0.365,3381,0.365,3382,0.348,3383,0.365,3384,0.348,3385,0.365,3386,0.365,3387,0.365,3388,0.365,3389,0.365,3390,0.365,3391,0.365,3392,0.365,3393,0.365,3394,0.348,3395,0.365,3396,0.348,3397,0.365,3398,0.365,3399,0.365,3400,0.365,3401,0.365,3402,0.323,3403,0.365,3404,0.323,3406,0.285,3407,0.348,3408,0.334,3409,0.334,3410,0.323,3411,0.365,3412,0.365,3413,0.313,3414,0.305,3415,0.323,3416,0.323,3417,0.348,3420,0.709,3422,0.627,3432,1.278,3518,0.305,3551,0.553,3552,0.649,3555,0.649,3559,0.675,3560,0.709,3561,0.348,3564,0.675,3565,1.278,3566,1.341,3567,0.365,3569,0.348,3570,0.675,3572,0.348,3574,0.348,3575,0.348,3576,0.348,3582,0.323,3601,0.348,3615,0.334,3625,0.675,3643,0.348,3659,0.887,3686,0.755,3693,1.429,3848,0.313,3872,0.323,3883,0.334,3898,0.323,3918,0.334,3951,0.365,3952,0.389,4004,0.365,4005,0.365,4010,0.929,4067,0.649,4096,0.608,4123,0.675,4163,2.171,4188,0.348,4199,0.389,4205,1.102,4208,1.102,4213,5.813,4275,0.348,4461,0.691,4575,0.365,4592,0.709,4616,0.709,4620,0.985,4623,0.348,4624,0.985,4625,0.348,4629,0.985,4631,0.365,4633,0.389,4674,2.313,4686,0.389,4687,0.365,4704,1.227,4705,0.389,4706,0.389,4707,1.102,4708,1.21,4709,0.389,4710,0.427,4711,0.755,4712,0.389,4713,1.429,4714,0.427,4715,0.829,4716,0.755,4717,1.102,4718,0.73,4719,1.21,4720,0.389,4721,0.427,4722,0.755,4723,0.427,4724,0.427,4725,0.427,4726,0.427,4727,0.427,4728,0.427,4729,0.427,4730,0.427,4731,0.427,4732,0.427,4733,0.427,4734,0.427,4735,1.569,4736,0.829,4737,1.569,4738,0.427,4739,0.427,4740,0.389,4741,0.389,4742,0.427,4743,0.427,4744,0.427,4745,0.427,4746,0.389,4747,0.389,4748,0.389,4749,1.102,4750,0.348,4751,0.427,4752,0.348,4753,0.675,4754,0.985,4755,0.427,4756,0.829,4757,1.21,4758,0.829,4759,0.427,4760,0.427,4761,0.427,4762,0.427,4763,0.427,4764,0.427,4765,0.427,4766,1.21,4767,1.034,4768,0.427,4769,0.427,4770,0.427,4771,0.427,4772,0.427,4773,0.427,4774,0.427,4775,0.427,4776,0.427,4777,0.427,4778,0.427,4779,0.427,4780,1.102,4781,0.389,4782,0.427,4783,0.405,4784,0.829,4785,0.829,4786,0.427,4787,0.427,4788,0.829,4789,0.427,4790,0.829,4791,0.427,4792,0.427,4793,0.427,4794,0.427,4795,1.21,4796,1.21,4797,0.427,4798,1.91,4799,0.427,4800,0.427,4801,0.427,4802,0.427,4803,0.427,4804,0.427,4805,0.427,4806,0.427,4807,0.427,4808,0.427,4809,0.829,4810,0.427,4811,0.427,4812,0.427,4813,0.427,4814,2.832,4815,1.21,4816,0.427,4817,0.427,4818,0.427,4819,1.21,4820,0.427,4821,0.356,4822,0.829,4823,0.427,4824,0.427,4825,0.427,4826,0.427,4827,0.427,4828,0.427,4829,0.427,4830,0.427,4831,0.427,4832,0.427,4833,0.427,4834,3.628,4835,0.427,4836,0.427,4837,0.829,4838,0.427,4839,0.427,4840,0.427,4841,0.427,4842,0.427,4843,0.427,4844,0.427,4845,0.427,4846,0.829,4847,0.427,4848,0.427,4849,0.427,4850,3.375,4851,0.787,4852,0.427,4853,0.829,4854,0.427,4855,0.427,4856,0.427,4857,0.829,4858,0.829,4859,2.885,4860,0.427,4861,0.427,4862,0.427,4863,0.427,4864,0.427,4865,0.427,4866,0.427,4867,0.427,4868,1.569,4869,0.829,4870,0.427,4871,0.829,4872,0.427,4873,0.829,4874,0.427,4875,0.427,4876,0.427,4877,0.427,4878,0.829,4879,0.427,4880,0.427,4881,0.427,4882,0.427,4883,0.427,4884,0.389,4885,0.427,4886,0.427,4887,0.427,4888,0.829,4889,0.829,4890,0.427,4891,0.427,4892,0.427,4893,0.427,4894,0.427,4895,0.427,4896,0.427,4897,0.427,4898,0.829,4899,0.427,4900,0.829,4901,0.427,4902,0.427,4903,0.427,4904,0.829,4905,0.427,4906,0.427,4907,0.427,4908,0.675,4909,0.427,4910,0.427,4911,0.427,4912,0.427,4913,0.427,4914,1.21,4915,0.405,4916,0.427,4917,0.427,4918,0.427,4919,0.427,4920,0.427,4921,0.427,4922,0.427,4923,0.427,4924,0.427,4925,0.427,4926,0.427,4927,0.427,4928,0.427,4929,0.427,4930,0.427,4931,0.427,4932,0.427,4933,0.427,4934,0.427,4935,0.427,4936,0.427,4937,0.427,4938,0.829,4939,0.427,4940,0.427,4941,0.427,4942,0.427,4943,0.427,4944,0.427,4945,0.427,4946,0.427,4947,0.427,4948,0.427,4949,0.427,4950,0.427,4951,0.427,4952,0.427,4953,0.829,4954,0.389,4955,0.427,4956,0.427,4957,0.427,4958,0.755,4959,0.427,4960,3.375,4961,0.427,4962,0.427,4963,2.832,4964,0.427,4965,0.427,4966,0.829,4967,0.427,4968,0.829,4969,0.427,4970,0.389,4971,0.427,4972,0.427,4973,0.427,4974,0.427,4975,0.427,4976,0.427,4977,0.427,4978,0.427,4979,0.427,4980,0.427,4981,0.427,4982,0.427,4983,0.427,4984,1.443,4985,0.427,4986,0.427,4987,0.427,4988,0.914,4989,0.427,4990,0.427,4991,0.427,4992,0.427,4993,0.427,4994,1.569,4995,0.427,4996,0.427,4997,0.427,4998,0.427,4999,0.427,5000,0.427,5001,0.427,5002,0.427,5003,0.427,5004,0.427,5005,0.427,5006,0.427,5007,0.427,5008,0.427,5009,0.427,5010,0.427,5011,0.427,5012,0.427,5013,0.427,5014,0.427,5015,0.427,5016,0.427,5017,0.427,5018,0.427,5019,0.427,5020,0.427,5021,0.427,5022,0.427,5023,0.427,5024,0.427,5025,0.427,5026,0.427,5027,0.427,5028,0.427,5029,0.427,5030,3.869,5031,2.832,5032,0.427,5033,2.233,5034,2.233,5035,1.21,5036,2.233,5037,2.233,5038,2.233,5039,0.427,5040,3.11,5041,0.427,5042,1.91,5043,1.21,5044,0.427,5045,0.427,5046,0.427,5047,0.427,5048,0.829,5049,0.427,5050,2.233,5051,0.427,5052,0.427,5053,0.365,5054,0.427,5055,0.427,5056,0.427,5057,0.427,5058,0.427,5059,0.427,5060,0.427,5061,0.427,5062,0.427,5063,0.427,5064,0.427,5065,0.427,5066,0.427,5067,2.119,5068,0.427,5069,0.427,5070,0.427,5071,0.427,5072,0.427,5073,0.427,5074,0.427,5075,0.427,5076,0.427,5077,2.233,5078,1.21,5079,0.427,5080,0.427,5081,0.427,5082,0.427,5083,0.427,5084,1.21,5085,0.427,5086,0.427,5087,0.334,5088,0.427,5089,0.427,5090,0.389,5091,0.427,5092,0.427,5093,0.389,5094,0.427,5095,0.427,5096,1.21,5097,0.427,5098,0.427,5099,0.427,5100,1.91,5101,0.427,5102,0.427,5103,0.427,5104,5.284,5105,2.832,5106,3.11,5107,0.427,5108,0.427,5109,0.427,5110,0.427,5111,0.427,5112,0.427,5113,0.427,5114,0.427,5115,0.427,5116,0.427,5117,0.427,5118,0.427,5119,2.54,5120,0.829,5121,0.427,5122,0.829,5123,0.427,5124,0.829,5125,0.829,5126,0.427,5127,0.427,5128,0.427,5129,0.427,5130,1.569,5131,0.427,5132,0.427,5133,0.427,5134,0.427,5135,0.427,5136,0.389,5137,0.427,5138,1.909,5139,0.829,5140,0.427,5141,0.427,5142,0.427,5143,0.427,5144,0.427,5145,0.427,5146,0.427,5147,0.427,5148,0.427,5149,0.427,5150,0.427,5151,0.427,5152,0.427,5153,0.427,5154,0.427,5155,4.534,5156,0.427,5157,0.829,5158,0.427,5159,1.569,5160,0.427,5161,0.427,5162,0.427,5163,0.427,5164,0.427,5165,0.427,5166,0.427,5167,0.427,5168,0.427,5169,0.427,5170,0.427,5171,0.427,5172,0.427,5173,0.427,5174,0.427,5175,0.427,5176,0.427,5177,0.427,5178,0.427,5179,0.427,5180,0.427,5181,0.427,5182,0.427,5183,0.427,5184,0.427,5185,0.427,5186,0.427,5187,0.427,5188,0.427,5189,0.427,5190,0.427,5191,0.427,5192,0.427,5193,0.427,5194,0.427,5195,0.427,5196,0.427,5197,0.427,5198,0.427,5199,0.427,5200,0.829,5201,0.829,5202,0.427,5203,0.427,5204,0.427,5205,0.427,5206,1.21,5207,1.21,5208,0.427,5209,0.427,5210,0.427,5211,0.427,5212,0.427,5213,0.427,5214,1.102,5215,0.427,5216,0.427,5217,0.427,5218,0.829,5219,0.427,5220,0.427,5221,0.427,5222,0.427,5223,0.427,5224,0.427,5225,0.427,5226,0.427,5227,0.389,5228,0.427,5229,0.427,5230,0.427,5231,0.427,5232,0.427,5233,0.389,5234,0.427,5235,0.427,5236,0.427,5237,0.427,5238,0.427,5239,0.427,5240,0.427,5241,0.427,5242,0.427,5243,0.427,5244,0.427,5245,0.427,5246,0.427,5247,0.427,5248,0.427,5249,0.427,5250,0.427,5251,0.427,5252,0.427,5253,0.427,5254,0.389,5255,0.427,5256,0.829,5257,0.427,5258,0.427,5259,0.427,5260,0.427,5261,0.427,5262,0.427,5263,0.427,5264,0.427,5265,0.427,5266,0.389,5267,0.389,5268,0.389,5269,0.389,5270,0.427,5271,0.427,5272,0.427,5273,0.427,5274,0.356,5275,0.829,5276,0.829,5277,1.21,5278,0.427,5279,1.569,5280,1.569,5281,1.569,5282,0.427,5283,0.427,5284,0.427,5285,0.427,5286,0.427,5287,0.427,5288,0.427,5289,0.427,5290,0.427,5291,0.427,5292,0.427,5293,0.389,5294,0.427,5295,0.427,5296,0.427,5297,0.427,5298,0.427,5299,0.427,5300,0.427,5301,0.427,5302,0.427,5303,0.427,5304,1.429,5305,1.569,5306,0.427,5307,0.427,5308,0.427,5309,0.829,5310,0.427,5311,0.427,5312,0.427,5313,0.427,5314,0.427,5315,0.829,5316,0.427,5317,0.427,5318,2.233,5319,0.427,5320,1.569,5321,1.21,5322,0.427,5323,1.91]],["component/149",[68,0.364]],["title/150-1",[733,38.207,2352,32.112]],["name/150-1",[]],["text/150-1",[]],["component/150-1",[]],["title/150-2",[5,26.047,76,21.109]],["name/150-2",[]],["text/150-2",[]],["component/150-2",[]],["title/150-3",[76,21.109,2311,38.966]],["name/150-3",[]],["text/150-3",[]],["component/150-3",[]],["title/150-4",[28,38.519]],["name/150-4",[]],["text/150-4",[]],["component/150-4",[]],["title/150-5",[473,30.372]],["name/150-5",[]],["text/150-5",[]],["component/150-5",[]],["title/150-6",[2435,49.047]],["name/150-6",[]],["text/150-6",[]],["component/150-6",[]],["title/150-7",[185,26.74,559,31.714,2436,33.928]],["name/150-7",[]],["text/150-7",[]],["component/150-7",[]],["title/150-8",[19,25.262,473,25.32]],["name/150-8",[]],["text/150-8",[]],["component/150-8",[]],["title/150-9",[19,16.852,473,16.891,1074,30.771,2415,38.805,5324,32.422]],["name/150-9",[]],["text/150-9",[]],["component/150-9",[]],["title/150-10",[325,22.619,385,21.826,556,31.465,770,23.638,1336,31.864,5324,29.183]],["name/150-10",[]],["text/150-10",[]],["component/150-10",[]],["title/150-11",[325,22.619,385,21.826,770,23.638,1336,31.864,5324,29.183,5325,36.362]],["name/150-11",[]],["text/150-11",[]],["component/150-11",[]],["title/150",[1496,26.047,5324,48.601]],["name/150",[1496,0.412,5326,0.958]],["text/150",[0,3.044,3,3.36,4,0.555,5,1.163,6,0.71,8,0.599,13,2.21,14,0.594,19,1.128,20,1.825,21,1.597,24,3.919,31,0.662,40,3.017,50,1.677,62,0.633,64,0.47,75,0.562,76,1.362,80,0.62,102,1.289,119,1.463,121,1.766,133,2.369,134,1.463,137,3.765,151,1.238,155,0.699,160,1.846,180,1.825,184,1.142,188,5.331,191,1.557,192,0.638,193,1.214,196,0.71,201,2.265,203,2.467,205,2.259,206,1.689,213,1.383,220,0.566,234,0.987,258,3.635,259,1.056,271,1.249,272,0.987,276,1.681,287,3.424,298,0.613,320,0.735,325,1.681,336,3.584,356,1.868,361,0.681,373,0.65,385,2.64,397,0.764,417,2.373,420,1.5,452,2.059,453,0.769,459,0.59,465,2.458,466,1.365,468,1.099,473,0.445,474,2.13,481,0.958,485,0.623,508,0.87,510,2.609,535,2.316,556,0.92,559,0.65,561,1.731,564,1.107,590,2.509,628,2.527,635,1.296,654,2.212,655,2.511,656,0.63,680,2.012,702,0.879,731,2.311,738,0.613,739,1.757,748,0.726,758,1.117,770,0.691,774,2.534,781,1.811,786,0.71,801,3.807,804,1.942,812,0.613,818,4.529,854,1.757,855,0.823,857,1.566,882,0.862,901,0.791,940,0.797,949,1.022,965,0.681,973,1.982,1017,4.041,1027,0.899,1034,0.932,1074,0.81,1085,1.117,1094,2.259,1112,1.463,1118,2.571,1121,3.741,1168,1.551,1171,0.987,1172,3.915,1226,0.665,1251,1.537,1269,0.862,1274,0.899,1302,1.951,1336,2.369,1356,0.774,1416,2.049,1442,2.259,1494,1.117,1496,0.839,1663,0.87,1741,2.144,1856,2.509,1917,2.169,1942,3.502,1968,1.401,1969,0.823,2094,2.509,2177,2.838,2192,2.596,2208,0.759,2235,1.674,2247,0.879,2253,2.434,2281,1.916,2327,2.937,2342,1.622,2352,0.564,2364,2.284,2415,3.216,2446,1.275,2447,0.718,2449,1.275,2450,1.748,2451,1.401,2454,0.774,2572,1.942,2749,0.987,2787,3.673,2790,2.509,2791,3.348,2792,2.434,2793,2.509,2805,2.369,2806,2.212,2807,2.259,2810,2.212,2840,2.509,2842,2.596,2877,0.958,3041,2.369,3122,2.596,3190,0.754,3238,0.81,3241,0.754,3456,0.944,3551,5.035,3552,1.022,3555,1.022,3582,0.987,3721,1.951,3840,0.972,3866,1.063,3908,1.783,3925,0.987,4042,0.853,4740,3.024,4741,3.024,4746,3.024,4747,3.024,4748,3.024,4749,6.22,4750,2.703,4752,2.703,4753,2.703,4754,2.703,4908,1.951,5324,8.331,5325,1.951,5326,3.348,5327,3.516,5328,1.19,5329,1.19,5330,2.182,5331,1.19,5332,4.372,5333,2.182,5334,1.19,5335,1.19,5336,3.024,5337,3.024,5338,3.32,5339,7.428,5340,1.19,5341,1.19,5342,1.19,5343,1.19,5344,1.19,5345,1.19,5346,1.19,5347,2.182,5348,1.19,5349,1.19,5350,1.117,5351,1.19,5352,1.19,5353,1.19,5354,1.911,5355,1.19,5356,2.182,5357,2.182,5358,2.182,5359,4.92,5360,2.182,5361,3.024,5362,3.024,5363,1.306,5364,2.396,5365,1.306,5366,3.024,5367,1.306,5368,3.024,5369,3.32,5370,2.396,5371,2.396,5372,2.396,5373,6.83,5374,6.22,5375,6.83,5376,2.182,5377,2.182,5378,3.745,5379,2.182,5380,2.182,5381,2.182,5382,2.182,5383,2.182,5384,2.182,5385,2.049,5386,1.19,5387,1.306,5388,1.117,5389,1.19,5390,1.19,5391,1.306,5392,1.306,5393,1.306,5394,1.306,5395,1.19,5396,1.306,5397,1.19,5398,1.19,5399,1.19,5400,1.306,5401,1.19,5402,1.306]],["component/150",[68,0.364]],["title/151-1",[0,16.87,159,31.604,1496,19.545,2588,38.849]],["name/151-1",[]],["text/151-1",[]],["component/151-1",[]],["title/151-2",[6,34.666,82,32.148,151,23.776]],["name/151-2",[]],["text/151-2",[]],["component/151-2",[]],["title/151-3",[152,25.623,159,36.111,2196,33.752]],["name/151-3",[]],["text/151-3",[]],["component/151-3",[]],["title/151-4",[1635,39.236,2188,38.355,2196,33.752]],["name/151-4",[]],["text/151-4",[]],["component/151-4",[]],["title/151-5",[1636,40.551,2187,36.111,2196,33.752]],["name/151-5",[]],["text/151-5",[]],["component/151-5",[]],["title/151-6",[1497,40.348,1637,37.979,2187,31.604,2196,29.539]],["name/151-6",[]],["text/151-6",[]],["component/151-6",[]],["title/151-7",[1262,37.979,1445,43.649,2187,31.604,2196,29.539]],["name/151-7",[]],["text/151-7",[]],["component/151-7",[]],["title/151-8",[2188,33.568,2196,29.539,2554,43.649,5403,50.829]],["name/151-8",[]],["text/151-8",[]],["component/151-8",[]],["title/151-9",[29,26.82,50,22.761,159,31.604,189,24.94]],["name/151-9",[]],["text/151-9",[]],["component/151-9",[]],["title/151",[1496,31.244]],["name/151",[1496,0.746]],["text/151",[4,1.197,5,0.987,6,1.532,7,2.066,13,4.059,14,1.282,19,3.37,21,2.363,28,1.217,29,5.177,39,1.762,40,1.327,46,2.011,47,1.962,48,2.247,49,4.237,50,1.149,53,1.408,55,4.033,57,1.427,59,1.414,64,1.698,66,1.455,71,1.317,82,1.421,106,1.586,116,2.066,126,2.347,129,4.831,131,1.939,151,2.27,160,1.567,163,1.302,177,3.689,180,2.094,181,1.524,183,3.027,185,1.182,188,3.223,189,3.831,191,1.322,192,1.377,194,1.66,196,1.532,206,1.434,213,2.967,220,1.221,248,3.142,251,1.532,253,1.671,254,1.5,258,1.421,273,2.066,325,1.427,373,1.402,465,3.24,468,1.292,473,0.96,499,4.142,524,1.558,547,3.239,563,1.777,564,1.302,577,1.492,582,2.46,633,1.918,656,1.36,668,2.975,697,2.13,702,1.898,733,1.448,760,2.13,761,3.828,762,1.492,774,2.214,970,1.577,972,1.962,974,1.918,1071,4.6,1153,1.748,1156,2.097,1161,1.842,1191,1.762,1232,1.808,1251,3.027,1252,4.142,1291,2.011,1320,1.898,1339,1.762,1373,5.04,1393,4.142,1445,3.691,1493,4.916,1496,1.653,1497,2.038,1657,1.721,1704,2.76,1744,5.324,2186,1.878,2187,5.802,2188,5.156,2196,4.537,2197,2.011,2198,2.011,2264,2.247,2285,2.295,2307,2.481,2333,4.677,2342,2.975,2348,2.567,2349,2.066,2352,2.628,2354,3.367,2355,2.204,2379,1.825,2381,3.189,2398,4.237,2410,2.038,2427,2.41,2438,1.918,2572,5.324,2588,1.962,2589,2.567,2591,4.034,2592,4.298,2605,1.986,2606,2.13,2619,2.066,2661,2.204,2667,5.204,2694,2.13,2765,2.204,2766,2.204,2819,3.145,2822,3.978,2842,4.761,3024,4.462,3246,4.956,4136,2.13,4411,4.298,4692,2.204,4821,2.348,5087,2.204,5403,2.567,5404,2.818,5405,2.818,5406,2.567,5407,4.298,5408,4.298,5409,4.719,5410,2.567,5411,2.41,5412,2.41,5413,2.567,5414,2.295,5415,4.298,5416,4.298,5417,5.544,5418,6.087,5419,6.087,5420,6.087,5421,6.087,5422,6.087,5423,6.087,5424,2.818,5425,5.544,5426,4.719,5427,4.719,5428,4.719,5429,2.818,5430,2.818,5431,2.818,5432,2.818,5433,2.818,5434,2.818,5435,2.818,5436,2.818,5437,2.818,6711,3.037,6712,3.037]],["component/151",[68,0.364]],["title/152-1",[0,22.482,355,43.207]],["name/152-1",[]],["text/152-1",[]],["component/152-1",[]],["title/152-2",[151,27.731,159,42.117]],["name/152-2",[]],["text/152-2",[]],["component/152-2",[]],["title/152-3",[21,21.668,76,15.84,152,22.425,1644,36.129]],["name/152-3",[]],["text/152-3",[]],["component/152-3",[]],["title/152-4",[1635,39.236,2529,40.551,2530,43.395]],["name/152-4",[]],["text/152-4",[]],["component/152-4",[]],["title/152-5",[21,15.765,1636,25.821,2531,30.682,2532,30.682,2533,30.682,2534,30.682,2535,29.767]],["name/152-5",[]],["text/152-5",[]],["component/152-5",[]],["title/152-6",[21,21.668,1637,37.979,2536,37.979,2537,39.818]],["name/152-6",[]],["text/152-6",[]],["component/152-6",[]],["title/152-7",[348,32.421,1262,37.979,2529,35.49,2631,45.439]],["name/152-7",[]],["text/152-7",[]],["component/152-7",[]],["title/152-8",[348,25.944,432,23.638,2418,27.698,2529,28.4,2554,34.929,2633,36.362]],["name/152-8",[]],["text/152-8",[]],["component/152-8",[]],["title/152-9",[88,22.016,557,28.651,2342,21.826,2541,22.833,2542,33.747,2557,36.362]],["name/152-9",[]],["text/152-9",[]],["component/152-9",[]],["title/152-10",[50,26.007,2439,33.579,2543,51.919]],["name/152-10",[]],["text/152-10",[]],["component/152-10",[]],["title/152-11",[2439,33.579,2544,58.078,2564,43.395]],["name/152-11",[]],["text/152-11",[]],["component/152-11",[]],["title/152-12",[2439,33.579,2545,58.078,2565,46.748]],["name/152-12",[]],["text/152-12",[]],["component/152-12",[]],["title/152-13",[12,28.197,123,31.856,1006,37.293]],["name/152-13",[]],["text/152-13",[]],["component/152-13",[]],["title/152-14",[12,28.197,2357,42.073,2569,56.135]],["name/152-14",[]],["text/152-14",[]],["component/152-14",[]],["title/152-15",[24,33.078,1006,37.293,2573,56.135]],["name/152-15",[]],["text/152-15",[]],["component/152-15",[]],["title/152-16",[1006,43.496,2583,67.738]],["name/152-16",[]],["text/152-16",[]],["component/152-16",[]],["title/152-17",[12,28.197,2357,42.073,2584,58.078]],["name/152-17",[]],["text/152-17",[]],["component/152-17",[]],["title/152-18",[24,33.078,1006,37.293,2585,58.078]],["name/152-18",[]],["text/152-18",[]],["component/152-18",[]],["title/152-19",[5,26.047,6618,74.376]],["name/152-19",[]],["text/152-19",[]],["component/152-19",[]],["title/152-20",[2235,37.495,6619,74.376]],["name/152-20",[]],["text/152-20",[]],["component/152-20",[]],["title/152-21",[2547,59.3,6620,74.376]],["name/152-21",[]],["text/152-21",[]],["component/152-21",[]],["title/152-22",[1019,50.614,4970,67.738]],["name/152-22",[]],["text/152-22",[]],["component/152-22",[]],["title/152-23",[2550,60.556,6621,74.376]],["name/152-23",[]],["text/152-23",[]],["component/152-23",[]],["title/152-24",[1020,56.2,6622,74.376]],["name/152-24",[]],["text/152-24",[]],["component/152-24",[]],["title/152-25",[1026,46.127,6623,74.376]],["name/152-25",[]],["text/152-25",[]],["component/152-25",[]],["title/152-26",[1014,46.893,6624,74.376]],["name/152-26",[]],["text/152-26",[]],["component/152-26",[]],["title/152-27",[435,39.548,1012,42.934,6625,63.769]],["name/152-27",[]],["text/152-27",[]],["component/152-27",[]],["title/152-28",[1026,46.127,6626,74.376]],["name/152-28",[]],["text/152-28",[]],["component/152-28",[]],["title/152-29",[980,28.4,1012,30.069,1025,35.608,1026,27.698,2556,31.088,6627,44.661]],["name/152-29",[]],["text/152-29",[]],["component/152-29",[]],["title/152-30",[2558,43.496,6628,74.376]],["name/152-30",[]],["text/152-30",[]],["component/152-30",[]],["title/152-31",[12,28.197,2560,40.91,6629,63.769]],["name/152-31",[]],["text/152-31",[]],["component/152-31",[]],["title/152-32",[75,21.351,2531,37.492,2562,31.831,2563,42.418,6630,49.617]],["name/152-32",[]],["text/152-32",[]],["component/152-32",[]],["title/152-33",[21,24.758,76,18.099,153,31.435]],["name/152-33",[]],["text/152-33",[]],["component/152-33",[]],["title/152-34",[21,24.758,179,31.574,2370,44.389]],["name/152-34",[]],["text/152-34",[]],["component/152-34",[]],["title/152-35",[3102,72.638]],["name/152-35",[]],["text/152-35",[]],["component/152-35",[]],["title/152-36",[2381,38.966,6631,67.738]],["name/152-36",[]],["text/152-36",[]],["component/152-36",[]],["title/152-37",[19,21.659,147,32.917,748,35.465]],["name/152-37",[]],["text/152-37",[]],["component/152-37",[]],["title/152-38",[2570,50.829,2571,42.171,2572,32.638,6633,50.829]],["name/152-38",[]],["text/152-38",[]],["component/152-38",[]],["title/152-39",[2252,41.861,6634,67.738]],["name/152-39",[]],["text/152-39",[]],["component/152-39",[]],["title/152-40",[181,30.173,1338,36.468,2281,32.209,6635,55.81]],["name/152-40",[]],["text/152-40",[]],["component/152-40",[]],["title/152-41",[181,34.476,1338,41.669,6636,63.769]],["name/152-41",[]],["text/152-41",[]],["component/152-41",[]],["title/152-42",[3,31.604,179,27.633,818,26.71,6637,55.81]],["name/152-42",[]],["text/152-42",[]],["component/152-42",[]],["title/152-43",[12,28.197,21,24.758,6638,63.769]],["name/152-43",[]],["text/152-43",[]],["component/152-43",[]],["title/152-44",[2381,38.966,6639,74.376]],["name/152-44",[]],["text/152-44",[]],["component/152-44",[]],["title/152-45",[179,36.826,6640,74.376]],["name/152-45",[]],["text/152-45",[]],["component/152-45",[]],["title/152-46",[6641,89.216]],["name/152-46",[]],["text/152-46",[]],["component/152-46",[]],["title/152-47",[12,28.197,986,37.045,6642,63.769]],["name/152-47",[]],["text/152-47",[]],["component/152-47",[]],["title/152-48",[2381,38.966,6643,74.376]],["name/152-48",[]],["text/152-48",[]],["component/152-48",[]],["title/152-49",[4,23.704,12,24.678,676,26.601,2804,45.439]],["name/152-49",[]],["text/152-49",[]],["component/152-49",[]],["title/152-50",[676,30.395,2558,37.293,6644,63.769]],["name/152-50",[]],["text/152-50",[]],["component/152-50",[]],["title/152-51",[676,26.601,1026,34.612,2586,47.712,6645,55.81]],["name/152-51",[]],["text/152-51",[]],["component/152-51",[]],["title/152-52",[248,32.917,996,40.91,2587,44.389]],["name/152-52",[]],["text/152-52",[]],["component/152-52",[]],["title/152",[21,28.877,1705,29.286]],["name/152",[21,0.457,1705,0.463]],["text/152",[0,0.626,1,0.552,2,0.357,3,2.812,4,2.269,5,1.385,6,2.399,7,0.217,8,0.95,9,3.093,10,1.515,11,0.432,12,3.364,13,3.671,14,2.485,15,0.829,17,0.395,18,0.169,19,3.048,20,0.752,21,3.414,23,1.331,24,0.154,25,2.737,27,0.151,29,1.659,31,0.15,32,0.452,33,0.51,34,0.528,40,0.273,44,0.563,50,0.845,53,2.415,55,0.568,57,0.693,58,0.349,59,1.255,60,2.294,61,1.126,62,0.663,63,0.199,64,0.745,65,0.31,66,0.3,67,0.286,69,0.499,71,0.138,72,0.497,75,0.589,76,1.583,80,0.765,82,0.43,88,2.512,92,0.383,93,0.383,95,0.425,99,0.224,100,0.581,113,0.135,114,0.224,116,0.425,118,0.199,119,2.649,123,0.557,126,1.717,127,1.705,128,0.972,134,0.376,137,1.649,146,0.447,147,0.44,151,0.688,152,0.448,153,0.421,155,0.31,156,1.878,158,0.36,159,0.632,160,0.323,163,1.9,167,0.169,174,0.576,177,0.138,178,1.204,179,1.878,180,0.919,181,0.314,182,0.188,184,0.141,185,0.124,186,1.087,188,3.798,189,1.695,190,0.53,191,0.272,192,0.788,193,0.565,194,0.174,196,0.744,197,0.247,198,0.232,200,0.168,201,2.647,203,0.843,206,0.696,209,0.211,211,0.906,213,2.069,218,0.201,219,0.297,220,0.593,226,0.176,228,0.529,230,0.176,248,0.153,251,0.315,254,1.102,255,0.195,258,0.563,260,1.526,271,1.194,273,0.217,276,1.921,280,0.387,289,0.184,290,0.366,291,0.149,298,0.4,306,0.204,307,0.15,308,1.261,309,0.432,313,0.956,320,0.628,323,0.181,324,0.224,325,2.083,326,0.414,327,0.576,328,0.472,336,0.477,339,0.502,347,0.538,348,0.648,349,0.552,351,0.133,352,0.195,356,0.628,361,0.302,363,0.609,364,1.063,365,0.824,368,0.597,370,0.558,373,1.031,374,0.438,376,0.295,385,3.429,387,1.256,388,0.323,393,0.454,395,0.157,398,0.676,414,0.896,420,0.134,432,0.452,435,0.184,437,0.414,449,0.241,450,0.581,452,0.184,458,0.174,459,0.385,464,1.074,465,0.135,466,1.052,468,1.501,472,0.17,473,1.052,474,0.19,478,0.182,479,0.943,485,0.768,488,0.253,492,0.241,493,0.438,501,0.306,503,0.391,531,0.204,542,0.78,543,0.174,544,0.383,547,0.309,549,0.51,551,0.224,557,0.716,564,0.515,577,1.431,578,0.762,579,0.201,582,0.445,583,0.224,584,1.771,590,0.438,598,0.331,599,1.059,604,0.187,606,1.259,608,0.843,624,0.438,635,1.568,649,0.193,650,0.173,657,1.696,659,0.197,661,0.197,670,1.11,676,1.96,679,0.344,683,0.698,686,0.818,689,0.197,696,0.195,702,2.325,703,0.383,705,0.206,707,0.204,710,0.42,714,0.204,728,0.454,732,0.432,735,0.796,738,0.4,739,1.097,741,0.472,748,1.274,749,0.195,751,0.587,761,1.231,762,0.452,770,0.157,774,1.779,777,0.211,778,0.357,780,1.301,781,0.224,782,0.896,786,0.161,789,0.976,790,0.185,799,0.193,801,0.372,802,1.774,804,0.499,811,0.206,812,0.4,817,0.977,818,3.736,822,0.395,823,3.583,830,0.372,845,0.206,848,0.383,853,0.241,855,0.187,859,0.395,871,1.003,882,0.736,888,0.232,898,1.154,899,0.404,901,0.977,903,1.15,915,1.17,940,0.984,943,0.414,944,1.771,950,1.095,952,1.053,958,0.241,963,2.266,965,0.445,966,0.184,968,2.617,970,0.166,973,1.846,974,0.395,976,0.214,980,1.72,982,0.601,986,0.648,990,0.232,993,0.42,996,0.372,997,2.07,999,0.438,1002,1.246,1003,0.241,1006,1.808,1009,0.414,1012,3.254,1013,2.9,1014,1.016,1015,0.626,1016,1.154,1017,1.752,1018,0.581,1019,2.581,1020,1.218,1021,0.241,1024,1.317,1026,1.917,1027,2.495,1028,0.976,1052,0.253,1073,1.182,1094,3.004,1096,1.195,1100,0.253,1101,0.253,1102,0.253,1103,0.253,1104,0.253,1105,0.253,1106,1.018,1107,0.432,1113,0.414,1118,2.159,1124,0.27,1143,0.354,1144,0.496,1148,0.563,1149,2.368,1152,0.224,1153,0.184,1159,0.232,1161,0.379,1164,0.327,1170,0.199,1173,0.472,1177,0.224,1181,1.008,1192,1.539,1196,0.521,1197,0.463,1198,0.711,1200,0.27,1201,0.253,1203,0.954,1209,0.751,1226,0.151,1234,2.307,1251,0.19,1252,0.395,1254,0.184,1269,0.195,1291,0.414,1293,0.217,1298,0.558,1299,0.472,1301,0.224,1306,1.704,1310,1.051,1316,0.379,1318,0.594,1320,0.199,1322,0.438,1326,0.227,1327,1.354,1335,0.204,1336,0.414,1337,0.187,1339,0.363,1352,0.777,1353,0.873,1355,0.224,1366,0.454,1374,0.253,1375,0.253,1379,0.224,1408,0.609,1443,0.232,1493,0.64,1495,0.414,1631,0.147,1644,1.751,1657,0.521,1659,0.232,1663,0.569,1666,0.201,1667,1.243,1685,0.379,1704,0.8,1705,1.142,1710,0.232,1718,0.253,1732,0.414,1741,0.302,1744,0.339,1745,0.174,1749,0.962,1753,0.409,1764,0.19,1801,0.224,1805,0.217,1809,0.241,1852,0.253,1868,0.206,1879,1.483,1883,0.759,1887,0.232,1917,0.193,1953,1.085,1958,0.241,1961,0.247,1967,0.796,1968,0.173,1969,0.187,2030,0.241,2035,0.224,2038,0.253,2044,1.034,2051,0.209,2084,0.197,2136,0.224,2138,0.404,2139,0.736,2163,0.22,2181,0.321,2191,0.182,2203,0.372,2204,2.015,2207,0.569,2228,0.363,2231,0.796,2235,0.43,2236,0.459,2237,1.114,2240,0.454,2241,0.395,2242,0.232,2252,4.394,2256,1.07,2257,0.909,2281,4.269,2282,0.301,2306,0.446,2318,0.241,2327,0.315,2328,0.499,2329,1.146,2342,1.601,2345,0.197,2351,2.077,2352,0.251,2354,0.976,2356,1.097,2357,0.383,2361,0.517,2369,0.241,2370,0.206,2376,0.214,2379,0.192,2380,0.204,2381,3.405,2383,1.074,2386,0.73,2418,0.36,2425,0.232,2434,0.609,2438,0.581,2439,3.47,2440,0.232,2441,0.253,2446,0.158,2450,0.449,2486,1.558,2491,0.193,2499,0.777,2507,1.085,2529,1.174,2530,1.702,2531,0.645,2532,0.645,2533,0.438,2534,0.645,2535,0.626,2536,0.395,2537,0.414,2538,0.241,2541,1.059,2542,0.224,2547,0.68,2550,0.909,2556,0.404,2558,4.639,2560,3.857,2562,5.517,2571,0.438,2572,3.801,2586,0.73,2587,0.404,2593,0.224,2594,1.246,2595,0.241,2596,0.22,2598,0.253,2599,0.27,2600,0.224,2601,0.224,2602,1.468,2603,1.218,2604,1.996,2605,0.786,2606,0.645,2607,0.232,2608,0.241,2609,1.511,2610,0.224,2611,0.224,2612,0.27,2613,0.217,2614,0.253,2615,0.438,2616,0.217,2617,0.496,2619,0.818,2620,1.444,2621,0.241,2622,0.241,2623,0.232,2625,0.253,2626,0.253,2627,0.953,2628,0.232,2629,0.241,2630,0.253,2631,0.472,2632,0.241,2633,0.472,2634,0.253,2635,0.253,2636,0.253,2637,0.253,2638,0.253,2639,0.253,2640,0.253,2641,0.27,2642,0.496,2644,0.777,2645,0.224,2646,0.954,2647,1.687,2648,0.27,2649,0.27,2652,0.528,2654,0.528,2656,0.496,2658,3.914,2660,0.253,2661,0.454,2662,1.016,2664,2.312,2667,0.496,2668,1.958,2671,0.27,2672,0.27,2673,0.241,2677,0.253,2678,0.253,2683,0.27,2684,0.667,2685,0.472,2686,2.604,2687,0.954,2688,0.438,2689,0.197,2690,0.27,2691,0.425,2692,1.016,2693,0.224,2694,0.645,2695,0.425,2696,0.438,2697,0.241,2698,2.517,2699,0.241,2700,0.241,2701,0.953,2702,0.27,2703,0.261,2705,0.27,2706,0.27,2707,0.528,2708,0.463,2709,0.224,2711,0.472,2715,1.246,2718,0.528,2723,0.27,2724,0.253,2725,0.27,2726,0.241,2727,0.27,2728,0.483,2729,0.528,2731,0.27,2732,0.528,2733,0.528,2734,0.528,2735,0.27,2736,0.27,2737,0.241,2738,0.472,2739,0.777,2740,0.409,2741,0.27,2742,0.206,2744,0.227,2745,0.27,2746,0.635,2747,0.253,2748,0.27,2749,0.224,2750,0.27,2752,0.472,2753,0.27,2754,2.138,2755,2.138,2756,0.27,2757,0.27,2760,0.454,2761,0.843,2762,0.27,2763,0.472,2764,0.414,2765,2.701,2766,3.216,2767,0.843,2768,2.036,2769,0.241,2770,0.241,2771,0.581,2772,0.211,2773,0.36,2774,0.261,2775,0.777,2779,0.224,2780,0.27,2781,0.909,2783,0.232,2784,0.27,2785,0.432,2786,0.511,2787,0.459,2788,0.909,2789,0.425,2790,1.218,2791,0.472,2792,0.217,2793,0.224,2794,0.27,2795,0.27,2796,0.27,2797,0.27,2798,0.27,2799,0.27,2800,0.241,2801,2.815,2802,0.253,2803,1.034,2804,0.472,2805,0.414,2806,1.074,2807,0.395,2808,0.27,2809,0.241,2810,0.744,2811,0.777,2812,1.016,2813,0.528,2814,0.777,2815,0.27,2816,0.27,2817,0.241,2818,0.528,2819,0.197,2820,0.27,2821,0.27,2822,0.379,2823,0.27,2824,0.528,2825,0.27,2826,0.27,2827,0.27,2828,0.27,2829,0.27,2830,0.27,2831,0.27,2832,0.27,2833,0.27,2834,0.253,2835,0.27,2836,0.27,2837,0.27,2838,0.528,2839,0.206,2840,2.74,2841,1.312,2843,0.27,2844,0.232,2845,0.224,2846,1.016,2847,0.27,2848,0.27,2849,1.687,2850,0.27,2851,0.27,2852,0.27,2853,0.73,2854,0.27,2855,1.016,2856,0.27,2857,0.27,2858,0.27,2859,1.246,2860,0.496,2861,0.528,2862,0.528,2863,0.695,2864,0.27,2865,1.578,2866,0.206,2867,0.241,2868,0.253,2869,0.27,2870,0.27,2871,0.27,2872,0.976,2873,0.27,2874,0.27,2875,0.27,2876,0.27,2877,0.425,2878,0.253,2879,0.253,2880,0.241,2881,0.241,2882,0.253,2883,0.73,2884,0.27,2885,0.27,2886,0.27,2887,0.253,2888,0.496,2889,0.528,2890,0.27,2891,0.253,2892,0.253,2893,0.73,2894,0.253,2895,0.496,2904,0.27,2905,0.253,2906,0.777,2907,0.73,2908,0.73,2909,0.253,2910,0.528,2911,1.378,2912,0.496,2913,0.253,2914,1.17,2915,1.468,2916,0.27,2917,0.253,2918,2.312,2919,0.253,2920,0.27,2921,1.468,2922,1.114,2923,0.27,2924,0.528,2925,0.626,2926,0.27,2927,0.253,2928,0.438,2929,0.253,2930,0.73,2931,0.73,2932,0.253,2933,0.496,2934,0.27,2935,0.253,2936,0.253,2937,0.454,2938,0.27,2939,0.496,2940,0.27,2941,0.27,2942,0.528,2943,0.528,2944,0.27,2945,0.777,2946,0.954,2947,0.27,2948,1.378,2949,0.241,2951,0.27,2952,0.528,2953,0.253,2954,0.496,2955,0.496,2956,0.253,2957,0.253,2958,0.253,2959,0.27,2960,0.27,2961,1.887,2962,0.528,2964,0.253,2965,0.253,2966,1.378,2967,0.253,2972,0.253,2973,0.253,2974,0.27,2975,1.468,2977,0.27,2978,0.777,2979,0.27,2981,0.27,2982,0.777,2983,0.27,2985,0.27,2986,0.528,2987,0.528,2988,1.016,2989,0.27,2991,0.27,2992,1.016,2993,0.777,2994,0.27,2996,0.27,2997,0.777,2998,0.27,3006,0.27,3007,0.27,3008,0.241,3009,0.241,3010,0.241,3011,0.27,3012,0.472,3013,0.27,3014,0.496,3015,0.27,3016,0.472,3017,1.687,3018,0.695,3019,0.954,3020,0.227,3021,0.27,3022,0.27,3023,0.27,3024,0.626,3025,0.27,3026,0.27,3027,0.27,3028,0.27,3029,0.27,3030,0.27,3031,0.528,3032,0.777,3033,0.27,3034,0.27,3037,0.635,3038,0.253,3039,0.204,3040,0.27,3041,0.609,3042,0.27,3043,0.253,3044,0.954,3045,0.27,3046,0.27,3047,1.578,3048,1.578,3049,1.681,3050,1.681,3051,1.681,3052,1.681,3053,1.681,3054,0.27,3055,0.27,3056,0.27,3057,0.27,3058,0.27,3059,0.27,3060,0.27,3061,0.27,3062,0.27,3063,0.27,3064,0.27,3065,0.27,3066,0.27,3067,0.27,3068,0.27,3069,0.27,3070,0.27,3071,0.27,3072,0.27,3073,0.27,3074,0.27,3075,0.27,3076,0.27,3077,0.27,3078,0.27,3079,0.27,3080,0.27,3081,0.27,3082,0.27,3083,0.27,3084,0.27,3085,0.27,3086,0.27,3087,0.27,3088,0.27,3089,0.27,3090,0.27,3091,0.27,3092,0.27,3093,0.27,3094,0.27,3095,0.27,3096,0.27,3097,0.27,3098,0.27,3099,0.27,3100,0.27,3101,0.27,3102,0.241,3103,0.695,3104,0.27,3105,0.27,3106,1.016,3107,0.261,3108,0.27,3109,0.27,3110,0.241,3111,0.27,3112,0.27,3113,0.232,3114,0.232,3115,0.432,3116,0.253,3117,0.496,3118,0.454,3119,0.27,3120,0.27,3121,0.27,3122,0.232,3123,0.232,3124,0.496,3125,0.777,3128,0.253,3129,0.528,3130,0.528,3131,0.253,3132,0.253,3133,0.27,3134,0.253,3135,0.253,3137,0.27,3138,0.27,3139,0.247,3140,0.472,3141,0.27,3142,0.27,3143,0.409,3144,0.241,3145,0.27,3146,0.27,3147,0.27,3148,0.27,3149,0.27,3150,0.27,3151,0.27,3152,0.217,3153,0.27,3155,0.496,3160,0.528,3165,0.528,3170,0.528,3171,0.807,3172,0.241,3174,0.27,3175,0.247,3176,0.27,3177,0.27,3178,0.201,3179,0.241,3180,1.312,3181,0.241,3182,0.241,3183,0.232,3184,0.438,3185,0.27,3186,0.253,3187,0.241,3188,0.27,3189,0.27,3190,0.171,3191,0.241,3192,0.425,3193,0.241,3194,0.232,3195,0.241,3196,1.091,3197,0.528,3198,0.454,3199,0.209,3200,0.224,3201,1.621,3202,0.241,3203,0.253,3204,0.27,3205,0.27,3206,0.232,3207,0.211,3447,0.27,3696,0.777,4010,0.227,4042,0.193,4310,0.27,4311,0.27,4312,0.27,4692,0.667,4704,0.667,4767,0.253,4908,0.241,5087,0.454,5438,1.116,5439,2.278,5440,0.296,5441,0.58,5442,1.016,5443,0.58,5444,0.58,5445,1.016,5446,0.58,5447,0.58,5448,1.116,5449,0.58,5450,0.58,5451,0.58,5452,0.296,5453,0.58,5454,0.296,5455,0.296,5456,0.296,5457,0.296,5458,0.296,5459,0.296,5460,0.296,5461,0.296,5462,0.58,5463,0.58,5464,0.296,5465,0.296,5466,0.296,5467,0.296,5468,0.296,5469,0.261,5470,0.296,5471,3.302,5472,0.296,5473,0.296,5474,0.296,5475,1.116,5476,0.58,5477,0.58,5478,0.58,5479,0.58,5480,0.296,5481,2.072,5482,0.296,5483,0.296,5484,0.296,5485,0.296,5486,0.463,5487,0.296,5488,0.296,5489,0.296,5490,0.58,5491,0.296,5492,0.296,5493,0.296,5494,0.296,5495,0.296,5496,0.296,5497,0.296,5498,0.296,5499,0.253,5500,0.296,5501,0.296,5502,0.296,5503,0.296,5504,0.296,5505,0.296,5506,0.296,5507,0.296,5508,0.296,5509,0.296,5510,0.296,5511,0.296,5512,0.296,5513,0.296,5514,0.296,5515,0.27,5516,0.296,5517,0.296,5518,0.27,5519,0.296,5520,0.58,5521,0.296,5522,0.296,5523,1.116,5524,0.296,5525,0.296,5526,0.296,5527,0.296,5528,0.296,5529,0.296,5530,0.27,5531,0.296,5532,0.296,5533,0.853,5534,0.58,5535,0.58,5536,0.853,5537,0.296,5538,0.296,5539,0.296,5540,0.296,5541,0.296,5542,0.296,5543,0.296,5544,0.296,5545,0.296,5546,0.296,5547,0.296,5548,0.296,5549,0.296,5550,0.296,5551,0.296]],["component/152",[68,0.364]],["title/153-1",[0,19.276,733,32.758,2352,27.532]],["name/153-1",[]],["text/153-1",[]],["component/153-1",[]],["title/153-2",[5,22.333,76,18.099,151,23.776]],["name/153-2",[]],["text/153-2",[]],["component/153-2",[]],["title/153-3",[76,18.099,152,25.623,2311,33.409]],["name/153-3",[]],["text/153-3",[]],["component/153-3",[]],["title/153-4",[28,32.112,1635,45.762]],["name/153-4",[]],["text/153-4",[]],["component/153-4",[]],["title/153-5",[473,25.32,1636,47.296]],["name/153-5",[]],["text/153-5",[]],["component/153-5",[]],["title/153",[1705,29.286,3208,44.735]],["name/153",[1705,0.463,3208,0.708]],["text/153",[0,1.868,5,1.008,8,2.201,13,1.964,14,2.185,19,1.631,22,1.918,27,2.455,28,2.073,34,1.361,50,1.958,62,2.994,64,1.035,66,1.485,71,1.345,76,2.609,82,4.367,88,5.089,94,4.759,126,2.388,134,1.268,137,2.087,155,2.568,163,3.704,174,1.485,180,2.742,188,5.386,189,1.286,190,1.366,192,1.406,201,3.854,213,2.575,220,1.247,252,3.081,259,3.178,291,1.451,298,2.898,320,2.703,351,1.291,365,4.099,368,2.568,420,1.3,435,1.785,465,3.282,473,2.104,485,2.289,535,2.317,561,4.516,582,3.221,629,2.11,655,2.932,668,1.814,748,1.6,762,1.523,774,2.898,812,3.384,818,3.452,901,1.744,904,3.628,931,2.978,1226,4.408,1229,1.814,1372,2.175,1704,4.689,1705,2.433,1741,1.5,1941,2.251,1942,3.378,2158,4.833,2181,4.434,2235,2.421,2279,1.88,2342,4.492,2352,1.243,2446,3.287,2447,1.582,2449,3.838,2450,3.798,2541,4.699,2643,2.175,2742,2.003,2787,3.323,3123,3.756,3190,1.661,3206,2.251,3207,2.053,3208,7.65,3211,5.373,3214,2.175,3216,2.343,3217,5.031,3218,5.873,3219,5.031,3220,5.031,3221,2.621,3222,2.343,3223,4.373,3225,3.426,3226,3.426,3227,5.146,3228,5.146,3229,2.251,3230,5.661,3231,1.918,3232,2.343,3233,6.167,3234,4.105,3237,2.621,3238,2.978,3239,2.621,3240,3.426,3241,2.771,3242,2.621,5552,2.878,5553,4.105]],["component/153",[68,0.364]],["title/154-1",[0,19.276,733,32.758,2352,27.532]],["name/154-1",[]],["text/154-1",[]],["component/154-1",[]],["title/154-2",[5,22.333,76,18.099,151,23.776]],["name/154-2",[]],["text/154-2",[]],["component/154-2",[]],["title/154-3",[76,18.099,152,25.623,2311,33.409]],["name/154-3",[]],["text/154-3",[]],["component/154-3",[]],["title/154-4",[28,32.112,1635,45.762]],["name/154-4",[]],["text/154-4",[]],["component/154-4",[]],["title/154-5",[473,25.32,1636,47.296]],["name/154-5",[]],["text/154-5",[]],["component/154-5",[]],["title/154-6",[50,30.333,2435,40.888]],["name/154-6",[]],["text/154-6",[]],["component/154-6",[]],["title/154-7",[185,23.402,559,27.756,2436,29.693,2564,37.979]],["name/154-7",[]],["text/154-7",[]],["component/154-7",[]],["title/154-8",[220,24.177,2309,40.913,2565,40.913,3343,47.712]],["name/154-8",[]],["text/154-8",[]],["component/154-8",[]],["title/154",[1705,29.286,2279,48.601]],["name/154",[1705,0.463,2279,0.769]],["text/154",[0,2.018,5,0.552,8,1.303,13,2.731,14,0.717,19,2.08,22,1.05,27,1.985,29,1.366,31,2.781,40,1.339,50,1.938,54,5.578,62,0.764,64,0.567,66,0.813,67,0.777,71,0.736,74,0.876,75,0.678,76,1.738,82,0.794,88,2.343,115,0.876,123,1.42,126,1.414,134,1.253,137,3.973,147,1.467,151,2.284,152,1.91,153,0.777,163,0.728,174,0.813,180,2.718,188,4.846,189,1.27,190,0.748,192,0.77,193,0.798,201,2.302,213,1.618,220,0.683,248,0.813,252,1.824,256,0.876,259,1.253,287,0.91,291,0.794,298,1.333,339,0.928,351,1.741,354,2.045,376,0.802,388,0.876,397,4.186,417,0.91,419,1.124,420,2.147,465,2.163,468,0.722,473,0.968,485,1.355,501,0.83,524,0.871,531,1.084,535,2.294,561,2.478,564,0.728,573,1.097,582,2.024,599,1.453,628,0.83,629,1.155,638,9.05,639,1.283,642,1.914,649,4.677,651,1.979,655,7.128,656,1.372,659,1.894,680,0.955,681,1.05,738,0.739,746,1.211,761,0.847,762,0.834,770,0.834,786,0.857,790,0.985,812,1.333,855,0.994,931,0.977,965,0.822,986,0.916,1037,1.283,1153,0.977,1164,1.6,1172,1.04,1191,0.985,1226,0.802,1278,1.191,1322,1.191,1372,1.191,1388,1.124,1448,1.191,1484,1.097,1495,1.124,1705,1.119,1741,2.862,1842,1.155,1922,3.391,1923,1.979,1941,1.233,1942,3.002,1968,0.922,2084,1.05,2102,2.084,2104,3.391,2106,1.124,2138,1.097,2181,0.871,2196,0.834,2235,1.958,2248,2.266,2279,7.981,2309,2.847,2327,3.33,2328,0.922,2341,1.283,2352,0.68,2361,0.955,2393,1.097,2394,1.097,2446,0.838,2447,0.866,2449,0.838,2450,2.503,2451,2.271,2453,2.148,2454,0.934,2541,3.413,2556,1.097,2572,0.922,2597,1.347,2598,1.347,2618,1.233,2742,1.097,2787,1.529,3152,1.155,3199,2.003,3207,1.124,3208,4.994,3210,1.347,3211,0.977,3212,1.347,3213,1.347,3214,1.191,3215,1.347,3216,1.283,3222,1.283,3225,2.77,3226,2.77,3227,3.391,3228,3.391,3240,1.124,3241,1.641,3275,2.186,3279,2.271,3324,1.233,3342,1.435,3343,2.43,3344,1.435,3345,1.435,3346,1.435,3347,2.148,3348,2.148,3374,1.155,3376,1.155,3402,1.191,3404,1.191,3405,1.435,3406,1.05,3410,1.191,3413,1.155,3414,1.124,3415,2.148,3416,1.191,3419,1.347,3421,1.347,3422,2.148,3435,1.435,3455,1.283,3456,1.139,3493,1.233,3505,4.79,3529,1.155,3659,1.155,3770,10.709,3818,1.191,3860,1.191,3862,1.283,3866,1.283,3868,3.037,3872,1.191,3883,1.233,3898,1.191,3908,1.172,3921,1.233,3925,1.191,4045,3.32,4053,1.233,4666,1.283,5558,1.347,5559,1.347,5560,1.347,5561,1.347,5562,1.347,5563,1.347,5564,1.347,5565,6.519,5566,1.435,5567,1.347,5568,1.435,5569,1.347,5570,1.347,5571,1.283,5572,1.576,5573,1.576,5574,1.576,5575,1.576,5576,6.125,5577,2.843,5578,2.843,5579,1.576,5580,1.576,5581,1.576,5582,1.576,5583,1.576,5584,1.576,5585,1.576,5586,1.576,5587,1.576,5588,1.576,5589,1.576,5590,1.576,5591,1.576]],["component/154",[68,0.364]],["title/155-1",[0,19.276,733,32.758,2352,27.532]],["name/155-1",[]],["text/155-1",[]],["component/155-1",[]],["title/155-2",[5,22.333,76,18.099,151,23.776]],["name/155-2",[]],["text/155-2",[]],["component/155-2",[]],["title/155-3",[76,18.099,152,25.623,2311,33.409]],["name/155-3",[]],["text/155-3",[]],["component/155-3",[]],["title/155-4",[28,32.112,1635,45.762]],["name/155-4",[]],["text/155-4",[]],["component/155-4",[]],["title/155-5",[473,25.32,1636,47.296]],["name/155-5",[]],["text/155-5",[]],["component/155-5",[]],["title/155",[1705,29.286,2280,53.065]],["name/155",[1705,0.463,2280,0.84]],["text/155",[0,1.085,5,1.257,8,1.645,9,1.951,13,2.945,14,1.633,19,1.954,23,3.061,28,1.549,29,1.725,31,1.818,40,3.391,64,2.07,75,1.544,76,1.019,82,1.809,126,1.785,134,2.535,137,2.5,146,1.88,155,1.919,157,2.128,179,1.777,180,1.592,188,5.381,189,4.515,191,1.683,201,4.404,203,1.639,213,3,220,2.492,256,3.199,259,2.535,291,1.809,298,2.698,351,2.58,356,2.02,368,1.919,376,1.826,395,3.045,420,2.599,465,3.747,468,1.645,473,1.958,485,2.742,535,3.474,559,1.785,561,4.293,564,1.658,598,2.045,606,1.973,656,1.732,738,2.698,777,2.56,786,1.951,812,1.683,818,2.753,855,2.263,965,1.871,1153,2.226,1158,3.268,1161,2.345,1182,2.442,1226,3.663,1496,1.257,1705,2.265,1741,4.293,1942,5.258,2196,3.045,2235,3.63,2280,7.209,2327,5.889,2352,1.549,2393,2.498,2394,2.498,2418,2.226,2446,3.061,2447,1.973,2449,4.382,2450,4.746,2451,4.21,2454,2.128,2742,2.498,2819,2.391,3190,2.071,3238,2.226,3241,2.071,3245,3.068,3246,4.684,3247,3.268,3248,3.268,3249,5.239,3250,3.268,3251,6.557,3252,2.712,3253,5.239,3254,5.862,3255,5.239,3256,5.239,3261,3.068,3262,2.807,3264,3.268,3265,2.807,3268,7.5,3269,7.5,3270,4.918,3271,5.239,3272,5.239,3273,5.239,3275,4.635,3276,6.557,3277,5.239,3278,3.268,3279,3.364,3925,2.712,3926,3.268,5554,3.405,5555,3.589,5556,3.589,5557,3.589]],["component/155",[68,0.364]],["title/156-1",[0,19.276,733,32.758,2352,27.532]],["name/156-1",[]],["text/156-1",[]],["component/156-1",[]],["title/156-2",[5,22.333,76,18.099,151,23.776]],["name/156-2",[]],["text/156-2",[]],["component/156-2",[]],["title/156-3",[76,18.099,152,25.623,2311,33.409]],["name/156-3",[]],["text/156-3",[]],["component/156-3",[]],["title/156-4",[28,32.112,1635,45.762]],["name/156-4",[]],["text/156-4",[]],["component/156-4",[]],["title/156-5",[473,25.32,1636,47.296]],["name/156-5",[]],["text/156-5",[]],["component/156-5",[]],["title/156-6",[50,30.333,2435,40.888]],["name/156-6",[]],["text/156-6",[]],["component/156-6",[]],["title/156-7",[185,23.402,559,27.756,2436,29.693,2564,37.979]],["name/156-7",[]],["text/156-7",[]],["component/156-7",[]],["title/156-8",[19,21.659,473,21.709,2565,46.748]],["name/156-8",[]],["text/156-8",[]],["component/156-8",[]],["title/156",[1705,29.286,3482,58.169]],["name/156",[1705,0.463,2281,0.679]],["text/156",[0,3.346,4,0.461,5,0.707,6,1.098,8,0.926,9,0.59,10,1.223,13,2.144,14,0.494,19,2.425,21,1.376,24,0.563,28,0.468,29,0.521,31,0.55,32,1.069,34,0.513,40,0.951,42,0.611,50,2.644,55,1.027,57,1.023,60,0.583,64,0.726,66,0.56,67,0.535,71,0.507,75,2.255,76,1.006,80,1.344,82,0.547,88,3.01,113,0.494,119,2.691,123,0.542,126,1.763,134,0.89,136,0.668,137,2.654,147,0.56,148,1.531,151,1.557,152,0.811,153,1.747,155,1.896,156,3.209,163,0.933,178,1.173,180,2.527,185,1.187,186,0.639,188,5.077,189,1.265,190,0.958,193,2.399,201,2.718,203,1.293,211,0.533,213,1.18,219,0.555,220,0.47,248,1.829,253,0.643,254,1.506,256,1.971,258,1.018,259,0.89,276,1.795,287,0.626,298,1.958,307,1.023,308,1.018,311,0.849,325,1.023,339,0.639,349,0.702,350,0.82,351,2.554,365,1.032,368,0.58,373,1.004,385,0.53,395,1.069,417,1.634,420,1.279,432,1.069,459,0.49,465,1.613,466,2.699,468,0.497,472,0.622,473,0.369,485,0.962,493,0.82,510,0.59,524,1.565,535,1.71,543,1.667,559,0.54,561,1.476,563,0.684,564,2.188,573,0.755,582,1.052,597,1.069,599,0.555,604,1.785,619,0.795,635,0.587,650,0.635,656,1.71,712,2.139,734,0.774,738,0.947,740,0.82,762,1.498,774,0.947,780,0.764,782,0.603,786,0.59,812,0.947,816,0.849,817,0.574,818,1.355,819,2.076,823,0.59,855,0.684,931,0.673,950,0.643,965,0.566,970,1.13,980,0.69,1002,0.653,1016,0.678,1017,5.042,1026,1.756,1027,1.389,1074,0.673,1094,3.223,1110,1.551,1112,0.662,1121,0.684,1127,0.849,1128,3.458,1143,0.662,1148,1.332,1154,0.69,1164,0.611,1181,0.678,1182,0.738,1221,0.696,1226,1.027,1232,3.654,1262,0.738,1274,1.948,1278,2.139,1298,0.709,1327,0.709,1330,0.928,1337,0.684,1348,1.61,1376,0.82,1393,2.841,1637,0.738,1666,0.738,1673,2.214,1704,0.635,1705,1.115,1741,1.476,1745,0.639,1753,0.764,1805,0.795,1864,0.849,1922,0.774,1942,4.061,1947,0.928,1968,1.181,2068,0.988,2084,1.345,2137,1.644,2153,1.44,2172,0.69,2179,1.644,2181,1.116,2221,0.755,2235,2.388,2240,0.849,2281,3.025,2315,2.214,2327,2.849,2328,0.635,2361,2.87,2364,0.747,2380,2.439,2381,4.033,2385,4.063,2396,1.526,2418,1.252,2425,0.849,2432,0.755,2436,0.577,2442,1.644,2446,1.074,2447,0.597,2449,1.074,2450,2.198,2451,1.656,2454,0.643,2499,0.755,2501,3.331,2507,2.811,2536,0.738,2541,3.935,2556,1.971,2560,0.696,2562,5.245,2681,0.883,2696,1.526,2726,1.644,2773,0.673,2792,3.472,2793,0.82,2805,0.774,2807,0.738,2809,2.305,2810,1.345,2822,0.709,2844,1.579,2849,5.277,2937,0.849,3140,2.305,3143,1.995,3144,2.886,3171,0.784,3172,1.644,3175,1.682,3208,1.214,3224,1.44,3238,0.673,3241,0.626,3252,0.82,3275,0.611,3279,2.77,3339,1.839,3374,0.795,3376,0.795,3382,0.883,3384,0.883,3394,1.644,3396,1.644,3407,0.883,3408,0.849,3456,0.784,3482,4.454,3483,0.988,3484,0.988,3485,0.988,3486,0.988,3487,0.988,3488,0.988,3489,0.988,3490,2.42,3491,2.214,3492,2.42,3493,2.214,3494,2.305,3495,2.42,3496,2.42,3497,2.42,3498,2.579,3499,1.839,3500,2.42,3501,2.42,3502,2.42,3503,2.42,3504,2.42,3505,0.849,3513,1.839,3518,0.774,3519,3.03,3521,1.644,3522,0.82,3523,1.839,3524,1.839,3525,0.988,3526,2.723,3527,1.726,3528,0.988,3529,0.795,3530,2.42,3531,0.988,3532,0.988,3533,0.928,3534,0.988,3535,0.988,3536,0.988,3537,0.988,3538,1.644,3539,0.988,3540,0.988,3541,0.988,3542,0.988,3543,0.988,3547,1.726,3548,0.988,3549,5.903,3550,5.903,3551,4.951,3552,5.338,3553,0.988,3554,0.988,3555,0.849,3556,0.988,3557,0.988,3559,1.644,3561,0.883,3564,2.305,3565,2.886,3569,0.883,3572,0.883,3574,0.883,3575,0.883,3576,0.883,3578,1.839,3579,1.839,3581,0.928,3582,0.82,3583,0.928,3584,0.883,3585,0.928,3586,0.928,3587,0.988,3588,0.988,3589,0.883,3590,1.644,3591,1.526,3592,0.988,3593,0.988,3594,0.988,3595,1.839,3596,0.883,3597,0.988,3598,0.988,3599,2.579,3600,2.579,3601,0.883,3602,0.988,3603,0.988,3604,0.988,3605,1.839,3606,1.839,3607,1.839,3608,1.839,3609,1.839,3610,1.839,3611,1.839,3612,1.839,3613,1.839,3614,1.839,3615,0.849,3616,4.314,3617,1.839,3618,0.988,3619,1.839,3620,3.802,3621,1.839,3622,0.988,3623,2.579,3624,0.988,3625,0.883,3626,0.988,3627,3.802,3628,0.988,3629,0.988,3630,0.988,3631,0.988,3632,3.228,3633,0.988,3634,0.988,3635,0.988,3636,0.928,3637,0.988,3638,0.988,3639,0.883,3640,0.988,3641,0.988,3642,1.839,3643,1.644,3644,1.839,3645,0.928,3699,0.988,3700,0.988,3922,1.726,4042,0.709,4213,0.883,4645,0.988,4655,0.928,4659,0.988,4664,1.839,4767,0.928,5592,2.019,5593,2.019,5594,0.988,5595,2.019,5596,2.019,5597,0.988,5598,0.988,5599,0.988,5600,0.988,5601,0.988,5602,0.988,5603,0.988,5604,0.988,5605,0.988,5606,0.988,5607,0.988,5608,1.085,5609,1.085,5610,1.03,5611,1.085,5612,0.988,5613,0.988,5614,1.085,5615,1.085,5616,1.085,5617,1.839,5618,1.085,5619,1.085,5620,1.085,5621,1.085,5622,1.085,5623,1.085,5624,1.085,5625,1.085,5626,1.085,5627,1.085,5628,1.085,5629,1.085,5630,1.085,5631,1.085,5632,2.831,5633,1.085,5634,1.839,5635,1.085,5636,2.019]],["component/156",[68,0.364]],["title/157-1",[0,19.276,733,32.758,2352,27.532]],["name/157-1",[]],["text/157-1",[]],["component/157-1",[]],["title/157-2",[5,22.333,76,18.099,151,23.776]],["name/157-2",[]],["text/157-2",[]],["component/157-2",[]],["title/157-3",[76,18.099,152,25.623,2311,33.409]],["name/157-3",[]],["text/157-3",[]],["component/157-3",[]],["title/157-4",[473,25.32,1635,45.762]],["name/157-4",[]],["text/157-4",[]],["component/157-4",[]],["title/157-5",[28,32.112,1636,47.296]],["name/157-5",[]],["text/157-5",[]],["component/157-5",[]],["title/157-6",[50,30.333,2435,40.888]],["name/157-6",[]],["text/157-6",[]],["component/157-6",[]],["title/157-7",[19,21.659,473,21.709,2564,43.395]],["name/157-7",[]],["text/157-7",[]],["component/157-7",[]],["title/157",[1705,29.286,2282,38.58]],["name/157",[1705,0.463,2282,0.61]],["text/157",[0,1.385,2,0.638,4,0.44,5,0.678,6,0.563,8,0.887,9,2.49,13,2.26,14,0.472,19,2.717,21,0.751,23,1.447,27,0.53,29,1.307,31,2.32,32,3.14,42,0.583,50,0.789,53,0.966,55,0.984,57,0.98,58,1.164,60,0.557,62,0.502,64,0.696,67,0.511,72,0.462,75,0.446,76,0.772,80,3.798,84,6.166,106,0.583,113,1.238,115,1.076,118,3.418,119,2.614,123,0.518,127,0.653,134,1.776,137,1.991,147,0.535,151,0.721,152,0.777,153,0.511,156,0.513,157,2.024,163,2.552,164,0.623,185,1.141,186,1.602,188,4.658,189,2.469,190,0.492,191,0.907,192,0.507,193,0.98,194,0.61,196,1.479,198,0.811,201,4.283,204,0.705,207,1.38,211,0.95,213,2.77,220,1.984,251,1.052,258,0.975,260,3.052,276,1.729,288,0.677,298,4.201,300,1.241,301,2.323,307,0.525,308,0.523,314,0.76,320,2.268,322,0.721,323,0.633,327,1.404,336,0.58,339,4.427,344,0.811,351,0.465,373,2.951,376,2.811,385,0.507,398,6.814,414,1.076,420,0.874,458,1.139,459,0.874,465,1.834,466,1.945,468,0.887,473,0.659,480,0.623,485,2.183,501,2.122,508,1.289,510,1.052,535,1.313,542,1.102,543,0.61,544,4.592,548,1.654,549,1.624,563,0.653,564,2.345,566,0.844,577,0.549,578,1.286,597,0.549,599,3.224,604,0.653,606,0.57,628,0.546,635,0.56,640,1.612,642,1.303,656,1.944,669,0.886,670,1.164,681,0.691,683,0.648,703,3.645,710,0.749,738,0.486,739,1.44,762,0.549,774,0.486,778,1.19,782,1.898,799,1.264,808,0.691,817,2.924,818,1.928,822,1.851,823,3.784,851,4.724,857,1.264,873,2.275,898,0.648,901,1.648,916,1.887,925,0.771,931,6.14,951,0.698,968,0.532,970,0.58,986,2.341,1016,0.648,1017,1.035,1018,0.705,1024,0.74,1071,0.783,1096,0.671,1118,0.648,1143,0.633,1148,0.684,1154,2.171,1170,0.698,1179,0.783,1191,2.519,1192,0.638,1196,0.633,1226,0.527,1229,0.653,1254,3.148,1317,0.643,1320,1.303,1323,0.796,1335,1.872,1338,0.677,1339,0.648,1357,0.886,1373,0.659,1388,2.875,1442,1.851,1450,0.886,1496,0.363,1633,0.796,1657,1.181,1667,1.831,1704,3.47,1705,1.344,1725,0.796,1745,1.139,1785,4.291,1807,0.684,1879,5.797,1887,1.513,1915,0.886,1919,0.705,1923,0.721,1953,1.303,1967,1.38,1969,0.653,2044,1.462,2051,0.73,2136,0.783,2138,0.721,2139,1.276,2187,0.587,2188,0.623,2193,2.326,2208,1.124,2212,1.172,2221,0.721,2231,0.74,2235,0.523,2241,1.317,2248,3.213,2252,0.583,2282,6.326,2329,1.504,2333,3.519,2344,0.783,2345,0.691,2349,0.76,2352,1.174,2356,0.705,2383,2.275,2410,0.749,2435,1.495,2436,2.144,2438,0.705,2439,1.019,2446,1.029,2447,1.495,2449,1.029,2450,0.546,2499,2.376,2501,1.591,2502,2.326,2512,0.886,2530,0.705,2600,0.783,2603,0.783,2610,0.783,2611,0.783,2623,0.811,2627,0.721,2645,4.175,2673,0.844,2686,0.633,2688,0.783,2701,0.721,2744,0.796,2764,0.74,2771,1.317,2773,0.643,2787,0.557,2803,0.783,2806,0.691,2819,1.813,2845,2.056,3008,0.844,3039,1.331,3113,0.811,3178,0.705,3184,0.783,3231,5.331,3232,1.575,3288,0.844,3551,0.691,3591,2.579,3615,2.67,3701,0.944,3702,0.944,3703,0.944,3704,2.215,3705,0.944,3706,0.721,3707,0.944,3709,0.944,3711,4.623,3712,0.944,3713,2.215,3714,3.109,3715,3.109,3716,3.109,3717,2.128,3718,2.779,3719,6.339,3720,4.172,3721,1.575,3723,0.944,3725,0.944,3726,0.944,3727,0.886,3728,0.944,3729,0.944,3730,0.826,3731,1.38,3732,0.844,3733,0.844,3734,0.944,3735,0.944,3736,1.703,3737,0.944,3738,0.944,3739,0.944,3740,0.944,3741,0.944,3742,1.762,3743,1.762,3744,0.944,3745,0.944,3746,0.944,3747,0.944,3748,0.944,3749,2.477,3750,0.944,3751,0.944,3752,0.944,3753,0.944,3754,1.762,3755,0.944,3756,0.944,3757,0.864,3758,1.575,3759,0.944,3760,0.944,3761,1.575,3762,1.575,3763,0.886,3764,2.477,3765,1.575,3770,0.811,3771,0.886,3776,1.762,3777,0.944,3778,0.944,3779,0.886,3780,0.844,3781,0.844,3782,0.944,3783,0.844,3784,0.844,3785,0.844,3786,0.844,3787,0.844,3788,0.844,3789,0.844,3790,0.944,3791,0.844,3792,0.844,3793,0.844,3794,0.783,3795,0.844,3796,0.844,3797,0.844,3798,0.844,3799,0.844,3800,0.844,3801,0.844,3802,0.844,3803,0.844,3804,0.844,3805,0.844,3806,0.844,3807,0.844,3808,0.844,3809,0.844,3810,0.844,3811,0.844,3812,0.844,3813,0.844,3814,0.844,3815,0.783,3816,0.844,3817,0.844,4042,0.677,5553,1.654,5637,1.036,5638,5.076,5639,1.036,5640,0.944,5641,1.036,5642,0.944,5643,1.935,5644,1.935,5645,1.935]],["component/157",[68,0.364]],["title/158-1",[0,19.276,733,32.758,2352,27.532]],["name/158-1",[]],["text/158-1",[]],["component/158-1",[]],["title/158-2",[5,22.333,76,18.099,151,23.776]],["name/158-2",[]],["text/158-2",[]],["component/158-2",[]],["title/158-3",[76,18.099,152,25.623,2311,33.409]],["name/158-3",[]],["text/158-3",[]],["component/158-3",[]],["title/158-4",[28,32.112,1635,45.762]],["name/158-4",[]],["text/158-4",[]],["component/158-4",[]],["title/158-5",[473,25.32,1636,47.296]],["name/158-5",[]],["text/158-5",[]],["component/158-5",[]],["title/158-6",[50,30.333,2435,40.888]],["name/158-6",[]],["text/158-6",[]],["component/158-6",[]],["title/158-7",[185,23.402,559,27.756,2436,29.693,2564,37.979]],["name/158-7",[]],["text/158-7",[]],["component/158-7",[]],["title/158-8",[76,14.082,351,22.252,2051,34.957,2541,25.366,2565,36.373]],["name/158-8",[]],["text/158-8",[]],["component/158-8",[]],["title/158-9",[19,13.792,76,11.524,180,18.018,2541,20.759,2566,33.832,3275,22.854,3706,28.265]],["name/158-9",[]],["text/158-9",[]],["component/158-9",[]],["title/158",[1705,29.286,3275,41.861]],["name/158",[1705,0.463,3279,0.688]],["text/158",[0,0.807,4,0.329,5,0.271,8,0.355,13,2.718,14,0.352,19,1.885,28,0.334,31,1.857,40,0.692,42,0.827,50,0.6,53,0.387,59,0.738,62,0.712,64,0.529,67,0.382,71,5.074,75,3.382,76,0.596,80,2.14,82,0.39,88,0.725,94,0.97,96,0.827,98,2.443,119,1.176,123,1.334,126,0.385,133,1.049,134,0.925,137,1.387,146,0.406,147,0.759,151,0.548,152,0.591,153,2.407,156,5.115,163,0.358,185,0.325,188,4.702,189,1.638,201,2.192,203,0.671,213,1.329,220,0.335,226,4.556,228,6.448,248,1.083,254,0.412,258,0.741,259,0.341,271,0.404,309,2.811,312,0.539,316,0.662,325,1.063,351,4.915,356,0.436,364,0.511,397,0.86,405,0.952,415,0.695,417,2.369,420,0.948,465,0.669,468,0.355,473,0.714,485,0.701,510,1.141,535,0.709,561,1.094,564,1.473,572,1.078,573,1.023,578,0.695,582,0.404,597,7.105,599,1.631,606,0.426,628,0.774,633,1,649,0.961,654,0.98,655,0.898,656,0.709,659,0.98,680,0.891,738,0.363,782,0.818,786,0.421,792,0.539,799,0.506,812,0.363,817,1.111,818,1.527,823,0.799,848,0.511,940,0.473,965,0.404,1002,0.884,1017,0.786,1091,1.641,1112,1.281,1121,0.488,1143,0.898,1164,0.436,1181,0.484,1192,0.476,1221,1.713,1226,0.394,1229,0.488,1232,1.713,1251,2.352,1338,0.506,1442,0.527,1448,0.585,1473,0.606,1484,0.539,1568,0.568,1658,0.533,1704,0.86,1705,4.19,1741,2.14,1874,1.444,1922,0.552,1923,1.023,2087,1.078,2092,1.257,2094,1.111,2096,1.257,2098,1.257,2102,1.078,2104,0.552,2106,1.049,2172,0.492,2181,0.813,2235,1.058,2327,2.654,2328,1.227,2361,0.469,2385,3.483,2446,0.782,2447,0.426,2449,0.782,2450,2.161,2451,0.86,2452,0.705,2453,0.585,2454,0.459,2457,0.606,2491,0.506,2501,0.86,2541,4.714,2627,0.539,2689,0.516,2773,0.912,2787,0.416,3152,1.078,3190,1.211,3217,4.257,3230,1.744,3238,0.48,3241,0.447,3254,0.63,3261,2.282,3275,6.917,3279,6.542,3321,0.585,3322,1.257,3323,1.111,3406,0.516,3409,2.088,3410,0.585,3413,1.078,3441,0.662,3584,2.597,3659,0.568,3706,1.461,3819,0.705,3820,1.257,3821,1.257,3822,1.339,3823,0.705,3824,0.705,3825,0.705,3826,0.705,3827,1.339,3832,1.339,3833,1.15,3840,1.094,3845,5.826,3847,1.339,3848,0.568,3851,2.431,3854,3.854,3858,1.339,3859,1.339,3860,1.111,3861,1.339,3862,1.197,3864,1.339,3866,1.197,3867,1.339,3868,1.15,3869,1.911,3871,1.911,3872,1.111,3874,1.339,3876,0.705,3883,0.606,3898,1.111,3902,1.257,3904,1.339,3905,4.765,3908,0.576,3909,0.63,3912,0.606,3914,1.709,3918,1.15,3921,0.606,3922,6.862,3924,0.63,3932,1.339,3933,0.705,3946,0.617,3950,1.339,3951,0.662,3961,0.705,3962,1.911,3963,2.431,3964,1.339,3965,0.705,3966,0.705,3967,1.911,3968,0.705,3969,0.705,3970,0.705,3971,0.662,3972,1.339,3973,1.339,3974,1.172,3975,0.662,3976,0.705,4587,0.662,4859,0.662,5254,0.705,5354,2.923,5390,5.33,5553,1.257,5569,0.662,5570,0.662,5571,6.535,5597,0.705,5598,0.705,5599,0.705,5600,0.705,5601,0.705,5602,0.705,5603,0.705,5604,0.705,5605,0.705,5606,0.705,5607,0.705,5617,0.705,5646,0.774,5647,0.774,5648,8.481,5649,1.47,5650,0.774,5651,1.911,5652,4.104,5653,5.056,5654,2.099,5655,3.666,5656,0.774,5657,1.911,5658,0.774,5659,1.911,5660,4.882,5661,1.47,5662,7.593,5663,2.099,5664,0.774,5665,0.774,5666,1.47,5667,1.47,5668,0.774,5669,1.47,5670,1.47,5671,0.774,5672,1.47,5673,0.774,5674,0.774,5675,0.774,5676,0.774,5677,0.774,5678,0.774,5679,1.339,5680,1.339,5681,0.705,5682,3.738,5683,0.774,5684,10.331,5685,0.705,5686,0.705,5687,0.774,5688,0.705,5689,0.662,5690,0.662,5691,0.662,5692,0.774,5693,0.774,5694,0.774,5695,0.774,5696,0.774,5697,0.774,5698,0.705,5699,0.705,5700,0.705,5701,0.705,5702,0.705,5703,0.705,5704,0.705,5705,0.705,5706,0.705,5707,0.705,5708,0.705,5709,0.705,5710,0.774,5711,0.705,5712,0.774,5713,0.774,5714,5.551,5715,0.705,5716,0.705,5717,0.705]],["component/158",[68,0.364]],["title/159-1",[0,19.276,733,32.758,2352,27.532]],["name/159-1",[]],["text/159-1",[]],["component/159-1",[]],["title/159-2",[5,22.333,76,18.099,151,23.776]],["name/159-2",[]],["text/159-2",[]],["component/159-2",[]],["title/159-3",[76,18.099,152,25.623,2311,33.409]],["name/159-3",[]],["text/159-3",[]],["component/159-3",[]],["title/159-4",[28,32.112,1635,45.762]],["name/159-4",[]],["text/159-4",[]],["component/159-4",[]],["title/159-5",[473,25.32,1636,47.296]],["name/159-5",[]],["text/159-5",[]],["component/159-5",[]],["title/159-6",[50,30.333,2435,40.888]],["name/159-6",[]],["text/159-6",[]],["component/159-6",[]],["title/159-7",[185,23.402,559,27.756,2436,29.693,2564,37.979]],["name/159-7",[]],["text/159-7",[]],["component/159-7",[]],["title/159-8",[19,21.659,473,21.709,2565,46.748]],["name/159-8",[]],["text/159-8",[]],["component/159-8",[]],["title/159",[1705,29.286,2839,51.773]],["name/159",[1705,0.463,2839,0.819]],["text/159",[0,1.315,5,0.492,6,0.763,8,0.644,9,0.763,13,1.443,14,0.639,19,1.928,24,0.728,28,0.606,31,1.787,32,1.355,34,1.211,40,1.206,42,1.441,64,0.505,76,1.001,119,0.619,126,0.698,134,0.619,137,3.26,151,1.316,155,0.751,163,3.623,180,1.566,185,1.074,188,5.423,189,2.536,201,3.539,206,0.714,211,0.689,213,1.47,220,0.608,248,0.725,256,2.42,258,1.291,259,1.128,276,3.148,287,2.92,298,2.041,304,2.092,325,1.297,347,3.919,351,1.148,368,0.751,373,1.755,385,0.686,395,1.355,397,0.821,419,3.105,420,0.634,453,1.507,459,0.634,465,1.606,468,0.644,473,0.872,480,1.54,485,1.22,535,1.235,561,1.839,563,2.225,564,0.649,572,1.029,582,1.335,599,0.718,635,1.384,649,1.673,650,2.545,655,5.59,656,1.235,696,2.871,737,1.061,738,1.655,774,1.201,782,0.781,786,0.763,812,0.659,817,3.004,818,1.225,823,1.392,857,1.673,931,0.871,965,2.958,1017,1.369,1073,3.19,1074,0.871,1112,0.857,1121,0.885,1164,0.79,1172,0.926,1181,0.878,1221,1.642,1226,0.714,1327,2.306,1399,2.76,1448,1.061,1473,1.098,1486,4.119,1705,1.713,1741,2.268,1751,1.045,1874,0.966,1942,4.1,1968,1.497,2084,1.706,2087,1.029,2102,1.029,2104,1.002,2106,1.827,2139,1.689,2172,0.893,2181,1.416,2235,1.779,2294,2.085,2327,3.379,2328,0.821,2342,3.833,2361,1.551,2363,2.332,2364,2.428,2398,2.456,2406,3.406,2432,1.782,2436,0.747,2446,1.877,2447,0.772,2449,2.692,2450,2.664,2451,2.064,2453,1.935,2454,0.833,2457,1.098,2491,2.306,2497,4.325,2501,2.545,2541,1.309,2572,5.087,2616,1.029,2619,3.709,2628,1.098,2787,1.377,2800,7.276,2806,2.351,2839,6.374,3114,1.098,3118,1.098,3190,2.511,3224,1.827,3230,2.843,3231,0.936,3238,0.871,3241,0.81,3262,3.957,3263,4.621,3265,4.861,3267,2.085,3275,0.79,3279,0.821,3321,1.061,3323,1.935,3324,1.098,3414,1.002,3432,1.143,3518,1.002,3520,1.279,3521,2.085,3522,1.935,3551,0.936,3659,1.877,3677,1.17,3770,9.715,3818,1.061,3840,1.045,3848,1.029,3860,1.935,3868,1.098,3872,1.061,3898,1.061,3905,1.143,3909,4.621,3912,1.098,3914,1.143,3918,4.861,3921,1.098,3923,3.017,3924,4.119,3925,1.935,3929,1.2,3946,1.12,3977,1.279,3978,1.143,3979,1.143,3980,1.143,3981,2.085,3982,2.332,3983,2.332,3984,1.098,3985,1.279,3986,1.279,3987,1.279,3988,1.279,3989,1.279,3990,1.279,3992,2.189,3993,2.332,3995,1.143,3996,2.085,3998,1.2,3999,6.086,4000,1.279,4007,1.279,4010,1.079,4013,1.2,4015,1.2,4017,1.2,4019,1.2,4021,1.2,4023,1.2,4024,1.2,4025,3.214,4026,5.169,4027,3.214,4028,3.214,4029,5.661,4030,5.661,4031,4.325,4032,3.963,4033,3.214,4034,4.608,4035,2.332,4036,2.332,4037,2.332,4038,2.332,4039,1.279,4040,1.279,4041,4.608,4042,0.918,4043,1.279,4044,3.214,4045,1.2,4046,1.279,4047,1.279,4048,1.279,4049,3.214,4050,5.169,4051,1.279,4052,1.279,4053,2.002,4054,1.279,4055,1.279,4056,1.279,4057,1.279,4058,1.279,4059,1.279,4060,1.279,4061,1.279,4062,1.279,4063,1.279,4673,1.279,4677,7.144,4682,3.214,4687,1.2,4688,1.279,4689,1.279,4690,1.279,4691,1.279,4859,1.2,5688,3.214,5718,1.404,5719,1.404,5720,1.404,5721,1.404,5722,1.404,5723,1.404,5724,1.404,5725,1.404,5726,1.404,5727,1.404]],["component/159",[68,0.364]],["title/160-1",[0,19.276,733,32.758,2352,27.532]],["name/160-1",[]],["text/160-1",[]],["component/160-1",[]],["title/160-2",[5,22.333,76,18.099,151,23.776]],["name/160-2",[]],["text/160-2",[]],["component/160-2",[]],["title/160-3",[76,18.099,152,25.623,2311,33.409]],["name/160-3",[]],["text/160-3",[]],["component/160-3",[]],["title/160-4",[28,32.112,1635,45.762]],["name/160-4",[]],["text/160-4",[]],["component/160-4",[]],["title/160-5",[473,25.32,1636,47.296]],["name/160-5",[]],["text/160-5",[]],["component/160-5",[]],["title/160-6",[50,30.333,2435,40.888]],["name/160-6",[]],["text/160-6",[]],["component/160-6",[]],["title/160-7",[185,23.402,559,27.756,2436,29.693,2564,37.979]],["name/160-7",[]],["text/160-7",[]],["component/160-7",[]],["title/160-8",[201,23.402,2309,40.913,2396,42.171,2565,40.913]],["name/160-8",[]],["text/160-8",[]],["component/160-8",[]],["title/160",[1705,29.286,5728,61.969]],["name/160",[1705,0.463,5728,0.98]],["text/160",[0,1.525,5,0.767,10,1.327,13,2.792,14,1.731,16,1.507,19,2.318,27,1.945,28,2.178,31,1.109,40,1.792,59,1.099,64,0.788,67,1.08,71,1.023,75,2.171,76,1.08,94,1.445,98,4.548,129,0.982,134,1.677,137,2.62,152,2.027,153,1.08,155,2.035,163,2.784,177,2.348,188,5.608,189,2.693,191,1.027,201,4.421,203,1,213,3.119,220,0.949,221,1.872,226,2.256,258,1.104,259,1.677,271,1.142,312,1.525,351,4.81,356,1.233,368,1.171,373,1.892,417,1.264,420,0.989,465,1.731,468,1.004,473,0.746,485,1.044,510,2.069,524,2.79,535,1.836,557,1.405,561,2.63,564,1.012,568,1.713,578,1.036,650,2.225,656,1.057,761,1.178,774,1.785,786,1.191,812,1.027,818,1.821,882,1.445,940,4.569,965,1.142,968,1.125,1143,3.08,1221,2.441,1226,1.114,1229,1.381,1251,4.801,1317,1.358,1705,2.373,1741,3.557,1753,1.543,1942,2.758,2052,1.995,2181,1.211,2196,2.014,2235,2.543,2279,1.431,2292,2.875,2309,3.699,2327,4.85,2328,2.95,2361,1.327,2393,1.525,2394,1.525,2396,6.433,2446,4.747,2449,3.982,2450,2.657,2451,2.225,2454,1.299,2491,2.486,2501,1.281,2541,3.489,2596,1.629,2689,1.459,2787,3.241,3230,6.612,3238,1.358,3241,1.264,3275,6.554,3279,3.525,3406,1.459,3493,1.713,3494,1.783,3706,1.525,3854,1.872,3984,1.713,4296,3.253,4587,1.872,5565,6.215,5679,1.995,5680,1.995,5681,1.995,5682,5.489,5715,1.995,5716,1.995,5717,1.995,5728,9.201,5729,2.19,5730,7.484,5731,2.19,5732,1.872,5733,6.027,5734,2.19,5735,2.19,5736,3.805,5737,2.19,5738,3.805,5739,2.19,5740,2.19,5741,2.19,5742,3.805,5743,3.805,5744,2.19,5745,2.19,5746,2.19,5747,3.805,5748,3.805,5749,2.19,5750,2.19,5751,2.19,5752,3.805,5753,2.19,5754,2.19,5755,2.19,5756,2.19,5757,2.19,5758,2.19,5759,2.19,5760,2.19,5761,2.19,5762,2.19,5763,3.805]],["component/160",[68,0.364]],["title/161-1",[0,19.276,733,32.758,2352,27.532]],["name/161-1",[]],["text/161-1",[]],["component/161-1",[]],["title/161-2",[5,22.333,76,18.099,151,23.776]],["name/161-2",[]],["text/161-2",[]],["component/161-2",[]],["title/161-3",[76,18.099,152,25.623,2311,33.409]],["name/161-3",[]],["text/161-3",[]],["component/161-3",[]],["title/161-4",[28,32.112,1635,45.762]],["name/161-4",[]],["text/161-4",[]],["component/161-4",[]],["title/161-5",[473,25.32,1636,47.296]],["name/161-5",[]],["text/161-5",[]],["component/161-5",[]],["title/161-6",[50,30.333,2435,40.888]],["name/161-6",[]],["text/161-6",[]],["component/161-6",[]],["title/161",[1705,29.286,2342,36.348]],["name/161",[1705,0.463,2342,0.575]],["text/161",[0,0.924,5,1.071,8,1.402,13,2.639,14,1.392,19,3.032,27,1.564,31,1.549,34,1.446,40,2.379,50,1.247,66,1.579,67,1.508,71,1.429,74,1.701,75,1.316,76,2.353,82,1.542,88,3.692,126,2.512,134,1.348,137,2.195,146,1.602,147,1.579,151,3.091,152,2.592,153,1.508,163,1.413,180,3.324,184,1.458,188,5.175,189,2.257,190,1.452,201,3.744,213,2.688,248,1.579,252,1.962,259,2.225,298,3.514,351,1.372,376,1.556,388,1.701,417,1.765,419,3.603,420,2.281,453,2.974,465,2.298,468,1.402,473,1.041,485,2.407,524,1.691,535,2.437,561,3.363,563,1.928,564,1.413,582,3.363,598,1.743,599,3.298,650,1.789,651,2.129,656,2.437,680,1.853,696,2.018,738,1.435,786,1.663,790,1.912,812,2.369,904,2.311,931,1.897,965,1.594,1164,1.721,1226,1.556,1484,2.129,1705,1.989,1741,4.322,1842,2.242,1942,4.532,2104,2.182,2106,2.182,2181,1.691,2235,3.252,2327,4.853,2328,1.789,2342,5.5,2352,1.32,2364,2.104,2406,2.059,2446,2.687,2447,1.681,2449,2.687,2450,3.944,2451,3.773,2454,1.813,2541,5.049,2572,1.789,2742,2.129,2787,1.645,3208,6.645,3218,2.49,3219,2.49,3225,5.344,3226,5.344,3227,6.37,3228,5.344,3240,2.182,3241,2.915,3275,3.631,3279,3.773,3347,3.816,3348,3.816,3374,2.242,3376,2.242,3402,2.311,3404,2.311,3406,2.038,3413,2.242,3414,2.182,3415,3.816,3416,2.311,3417,2.49,3505,6.982,3518,2.182,3522,2.311,3706,2.129,3818,2.311,3978,2.49,3979,2.49,3980,2.49,3981,2.49,3984,3.95,3995,2.49,3996,4.112,4053,2.392,4639,2.785,4640,2.785,4641,2.785,4655,2.615,4666,2.49,4668,2.785,4669,2.785,4671,2.615,4676,2.615,5053,2.615,5558,2.615,5559,2.615,5560,2.615,5561,2.615,5562,2.615,5563,2.615,5564,2.615,5571,2.49,5689,2.615,5690,2.615,5691,2.615,5764,3.058,5765,3.058,5766,3.058,5767,4.446,5768,2.785,5769,2.785,5770,2.785,5771,3.058,5772,3.058]],["component/161",[68,0.364]],["title/162-1",[0,22.482,355,43.207]],["name/162-1",[]],["text/162-1",[]],["component/162-1",[]],["title/162-2",[73,35.891,1316,41.669,2439,33.579]],["name/162-2",[]],["text/162-2",[]],["component/162-2",[]],["title/162-3",[1,36.129,77,32.638,2439,29.388,4090,50.829]],["name/162-3",[]],["text/162-3",[]],["component/162-3",[]],["title/162-4",[12,21.939,83,29.843,966,30.771,2351,29.843,2558,29.017]],["name/162-4",[]],["text/162-4",[]],["component/162-4",[]],["title/162-5",[12,24.678,298,26.18,826,37.575,2558,32.638]],["name/162-5",[]],["text/162-5",[]],["component/162-5",[]],["title/162-6",[151,18.5,468,22.746,995,35.4,1705,19.537,2439,26.127]],["name/162-6",[]],["text/162-6",[]],["component/162-6",[]],["title/162-7",[60,34.29,537,48.185,973,38.078]],["name/162-7",[]],["text/162-7",[]],["component/162-7",[]],["title/162-8",[479,32.638,538,42.171,802,28.669,995,39.818]],["name/162-8",[]],["text/162-8",[]],["component/162-8",[]],["title/162-9",[60,39.994,539,60.556]],["name/162-9",[]],["text/162-9",[]],["component/162-9",[]],["title/162-10",[365,32.602,670,38.355,6442,58.078]],["name/162-10",[]],["text/162-10",[]],["component/162-10",[]],["title/162-11",[339,37.548,2609,42.073,6443,58.078]],["name/162-11",[]],["text/162-11",[]],["component/162-11",[]],["title/162-12",[3,31.604,2609,36.822,4091,50.829,6713,60.138]],["name/162-12",[]],["text/162-12",[]],["component/162-12",[]],["title/162-13",[76,21.109,365,38.024]],["name/162-13",[]],["text/162-13",[]],["component/162-13",[]],["title/162-14",[13,26.086,14,29.017,1227,49.873]],["name/162-14",[]],["text/162-14",[]],["component/162-14",[]],["title/162-15",[739,33.752,2695,46.748,6444,58.078]],["name/162-15",[]],["text/162-15",[]],["component/162-15",[]],["title/162-16",[544,32.736,916,27.434,3731,35.4,4092,40.397,6579,49.617]],["name/162-16",[]],["text/162-16",[]],["component/162-16",[]],["title/162-17",[12,28.197,2486,43.395,6714,68.715]],["name/162-17",[]],["text/162-17",[]],["component/162-17",[]],["title/162-18",[12,28.197,113,29.017,6715,68.715]],["name/162-18",[]],["text/162-18",[]],["component/162-18",[]],["title/162-19",[152,25.623,738,29.913,2439,33.579]],["name/162-19",[]],["text/162-19",[]],["component/162-19",[]],["title/162-20",[1635,39.236,2615,48.185,4093,51.919]],["name/162-20",[]],["text/162-20",[]],["component/162-20",[]],["title/162-21",[544,36.822,1636,35.49,3731,39.818,4094,45.439]],["name/162-21",[]],["text/162-21",[]],["component/162-21",[]],["title/162-22",[12,24.678,738,26.18,1637,37.979,2613,40.913]],["name/162-22",[]],["text/162-22",[]],["component/162-22",[]],["title/162-23",[127,31.282,779,38.805,872,29.017,1262,33.765,3178,33.765]],["name/162-23",[]],["text/162-23",[]],["component/162-23",[]],["title/162-24",[127,31.282,779,38.805,872,29.017,2356,33.765,2554,38.805]],["name/162-24",[]],["text/162-24",[]],["component/162-24",[]],["title/162-25",[2351,38.355,2486,43.395,2557,51.919]],["name/162-25",[]],["text/162-25",[]],["component/162-25",[]],["title/162-26",[50,20.235,64,17.85,670,29.843,1705,19.537,2439,26.127]],["name/162-26",[]],["text/162-26",[]],["component/162-26",[]],["title/162-27",[88,31.435,2564,43.395,2604,43.88]],["name/162-27",[]],["text/162-27",[]],["component/162-27",[]],["title/162-28",[21,28.877,2565,54.524]],["name/162-28",[]],["text/162-28",[]],["component/162-28",[]],["title/162-29",[2282,38.58,2566,61.969]],["name/162-29",[]],["text/162-29",[]],["component/162-29",[]],["title/162-30",[2282,33.078,3231,42.494,6716,68.715]],["name/162-30",[]],["text/162-30",[]],["component/162-30",[]],["title/162-31",[679,37.809,2282,33.078,6717,68.715]],["name/162-31",[]],["text/162-31",[]],["component/162-31",[]],["title/162-32",[679,33.09,2282,28.949,3815,42.171,6718,60.138]],["name/162-32",[]],["text/162-32",[]],["component/162-32",[]],["title/162-33",[679,33.09,2282,28.949,3794,42.171,6719,60.138]],["name/162-33",[]],["text/162-33",[]],["component/162-33",[]],["title/162-34",[535,26.931,2351,33.568,2567,50.829,4095,45.439]],["name/162-34",[]],["text/162-34",[]],["component/162-34",[]],["title/162-35",[2282,33.078,4096,46.748,6720,68.715]],["name/162-35",[]],["text/162-35",[]],["component/162-35",[]],["title/162-36",[3,36.111,4097,51.919,6721,68.715]],["name/162-36",[]],["text/162-36",[]],["component/162-36",[]],["title/162-37",[2329,35.259,3024,46.748,6508,60.511]],["name/162-37",[]],["text/162-37",[]],["component/162-37",[]],["title/162-38",[2329,35.259,3192,46.748,6510,60.511]],["name/162-38",[]],["text/162-38",[]],["component/162-38",[]],["title/162-39",[26,35.871,123,24.787,1006,29.017,2329,27.434,4098,37.492]],["name/162-39",[]],["text/162-39",[]],["component/162-39",[]],["title/162-40",[153,27.512,2329,30.858,2764,39.818,4098,42.171]],["name/162-40",[]],["text/162-40",[]],["component/162-40",[]],["title/162-41",[147,32.917,996,40.91,2587,44.389]],["name/162-41",[]],["text/162-41",[]],["component/162-41",[]],["title/162-42",[248,38.392,4099,60.556]],["name/162-42",[]],["text/162-42",[]],["component/162-42",[]],["title/162",[21,24.758,1705,25.109,2329,35.259]],["name/162",[1705,0.463,2357,0.776]],["text/162",[0,0.68,1,0.789,2,1.383,3,3.067,4,1.497,5,1.424,6,2.722,8,0.149,9,2.303,11,1.492,12,4.092,13,1.592,14,1.329,15,1.639,17,0.635,18,0.532,19,3.292,20,1.236,21,2.761,22,0.217,23,0.933,25,0.394,26,0.881,27,1.026,28,0.14,29,1.6,31,1.48,32,1.546,33,1.342,34,0.949,39,0.398,40,0.945,42,0.525,50,1.659,53,2.893,55,1.021,56,1.221,57,0.617,58,1.055,59,0.163,60,2.768,61,1.349,62,0.723,63,1.005,64,0.631,65,1.202,66,0.328,67,0.865,68,0.461,69,0.372,71,0.152,72,1.394,75,1.597,76,1.053,80,1.931,82,0.164,84,0.176,88,1.543,90,0.235,92,0.984,93,1.157,94,0.215,96,0.525,98,0.424,99,0.246,100,0.221,101,0.19,106,0.84,113,2.145,115,0.181,118,1.351,119,1.192,123,0.876,126,1.345,127,4.134,129,1.31,134,1.379,135,0.544,136,0.2,137,1.27,146,1.051,147,0.482,148,0.807,151,1.167,152,1.257,153,0.46,155,0.652,156,1.113,157,0.377,158,0.579,159,0.36,160,0.678,163,1.146,168,0.481,177,0.151,178,2.825,180,0.541,181,0.344,182,0.207,184,0.445,185,1.04,186,0.55,188,3.926,189,0.784,190,1.067,191,0.823,192,1.529,193,1.257,194,1.181,196,0.662,200,0.184,201,2.619,203,1.027,204,0.221,206,0.324,208,0.733,209,0.232,210,0.221,213,2.145,218,0.635,219,0.763,220,0.404,226,0.554,227,0.254,228,0.202,245,0.424,248,1.396,251,0.954,252,0.209,253,0.554,254,0.173,255,0.215,257,1.051,258,0.614,265,0.25,276,1.48,287,0.861,291,0.164,292,0.246,300,0.209,301,1.015,304,0.193,305,0.42,306,0.438,307,1.585,308,0.471,309,0.165,310,1.372,311,0.254,313,1.189,314,0.466,320,0.183,321,0.443,322,0.226,323,0.911,324,0.246,325,1.139,326,0.454,327,0.77,333,0.242,334,0.518,339,2.185,344,0.497,347,0.205,348,0.37,349,0.789,350,0.246,351,0.9,361,0.17,363,0.232,364,0.215,365,0.325,368,0.499,373,3.106,376,0.62,381,0.25,385,2.228,388,0.181,397,0.19,398,1.503,399,0.265,400,0.438,404,0.238,405,0.211,414,1.505,415,0.154,420,0.147,439,0.972,453,0.191,458,0.191,459,1.414,464,0.622,465,1.231,466,0.362,468,0.428,473,0.415,474,0.408,478,1.079,479,2.171,480,0.897,485,0.711,489,0.242,494,1.326,501,1.425,503,0.629,510,0.662,511,0.278,524,0.825,535,0.451,542,1.665,543,0.718,544,1.927,547,1.067,549,0.194,550,0.278,552,0.205,553,0.992,557,0.209,558,0.385,561,0.487,562,0.705,564,1.038,577,0.337,578,1.279,579,0.635,582,1.293,583,0.246,591,0.254,597,0.494,598,1.281,599,0.897,604,0.205,612,0.76,624,0.481,628,0.335,633,0.221,635,1.085,649,0.416,650,0.19,654,0.217,656,0.157,657,0.873,659,0.217,667,0.238,668,0.205,670,2.548,676,1.289,678,1.042,679,1.189,681,0.622,691,0.246,707,0.224,708,0.56,710,0.235,712,0.246,713,0.199,728,0.254,729,0.265,732,0.473,735,0.232,738,0.823,739,5.479,747,0.507,748,0.519,749,0.804,750,0.278,751,1.027,761,0.655,762,1.19,774,1.269,777,0.232,778,0.574,782,0.181,786,0.346,790,0.203,799,0.212,801,0.209,802,0.626,804,1.315,811,1.221,812,1.468,816,0.73,817,1.964,818,2.106,823,1.222,845,0.848,846,0.448,848,0.215,857,0.416,859,0.829,872,0.713,873,0.217,882,0.42,888,0.254,897,0.454,898,0.398,899,0.65,901,1.216,903,0.232,916,2.152,940,0.199,943,0.232,948,0.265,950,0.193,951,0.821,952,0.61,963,0.466,966,0.756,968,0.48,969,0.238,970,0.356,971,0.278,972,0.65,973,0.558,976,0.675,977,0.226,979,0.705,980,1.276,982,0.448,986,2.261,987,0.507,993,0.675,996,0.209,1001,1.94,1002,0.562,1004,0.265,1006,1.451,1007,3.255,1008,0.992,1009,0.869,1012,0.219,1013,2.584,1014,2.775,1015,0.466,1016,0.584,1017,1.447,1018,0.221,1022,0.254,1024,1.431,1028,1.252,1033,0.229,1043,0.265,1056,0.271,1058,0.265,1074,0.579,1096,1.136,1112,0.199,1113,0.232,1118,2.751,1119,0.278,1128,0.984,1137,1.215,1139,0.265,1140,0.544,1141,0.278,1142,0.518,1143,0.57,1148,0.984,1149,1.079,1152,0.481,1153,0.202,1154,2.899,1155,1.042,1156,0.695,1159,0.497,1164,0.987,1168,0.412,1170,0.428,1177,0.481,1179,0.705,1191,2.204,1192,1.234,1196,0.199,1204,0.25,1209,0.821,1217,0.259,1226,0.62,1227,0.254,1229,0.768,1230,0.278,1231,0.53,1234,0.229,1236,0.265,1251,0.599,1254,0.579,1255,0.229,1284,2.497,1285,0.278,1286,0.271,1291,1.604,1300,1.372,1301,0.246,1303,0.271,1304,0.278,1310,2.708,1317,0.202,1318,0.443,1327,0.796,1337,0.401,1339,0.933,1355,0.481,1356,0.723,1366,1.758,1368,0.246,1369,0.254,1373,0.404,1377,0.246,1388,0.232,1495,0.232,1631,0.161,1644,0.211,1657,0.57,1658,0.224,1659,0.73,1666,0.829,1667,1.005,1685,0.212,1704,0.713,1705,1.915,1706,0.232,1714,0.265,1725,0.717,1741,0.914,1745,0.878,1764,0.957,1785,0.635,1807,0.42,1868,0.226,1874,0.224,1879,0.412,1883,0.635,1901,0.265,1919,0.829,1923,0.226,1930,0.265,1933,0.265,1967,1.064,1969,0.205,2033,0.544,2035,0.246,2051,0.448,2138,0.226,2139,0.42,2153,0.232,2154,0.278,2163,0.907,2178,0.953,2181,0.825,2184,0.684,2203,0.408,2207,1.169,2208,0.708,2212,0.904,2215,0.265,2225,0.265,2228,0.584,2231,0.454,2235,0.614,2236,0.802,2238,0.265,2241,0.433,2242,0.254,2247,0.219,2256,0.497,2264,0.259,2267,0.497,2282,3.901,2284,0.798,2292,0.481,2315,0.254,2327,0.177,2328,0.19,2329,4.938,2342,0.311,2343,0.221,2345,0.622,2346,1.399,2349,0.684,2351,3.883,2352,0.971,2354,3.023,2355,0.953,2356,2.883,2361,0.738,2379,0.211,2380,0.642,2381,0.919,2383,0.994,2385,0.454,2388,0.265,2397,0.265,2410,0.235,2411,0.278,2418,0.202,2433,0.684,2434,1.431,2436,0.173,2438,0.635,2439,3.049,2440,0.254,2449,0.338,2450,0.171,2472,0.278,2483,0.53,2486,4.021,2491,0.212,2498,0.278,2501,0.19,2507,0.428,2529,0.775,2530,0.829,2541,0.166,2543,0.265,2556,0.226,2558,3.523,2560,1.125,2562,1.287,2572,1.708,2587,0.443,2588,0.226,2593,0.246,2596,1.11,2603,1.875,2604,1.027,2605,1.236,2606,1.699,2607,0.254,2608,1.428,2609,2.449,2610,0.705,2611,0.481,2613,2.142,2615,4.284,2627,2.034,2645,1.326,2647,0.265,2661,0.254,2666,0.296,2684,0.254,2686,0.199,2689,0.217,2691,0.466,2693,1.127,2694,0.246,2695,3.455,2697,0.265,2699,0.518,2700,0.265,2701,0.226,2709,1.127,2716,0.278,2722,0.278,2737,0.265,2740,0.229,2749,0.246,2754,0.278,2761,0.246,2763,0.518,2764,1.064,2767,0.705,2769,0.265,2771,0.635,2772,0.454,2773,0.394,2783,0.254,2787,0.342,2817,0.265,2819,0.622,2822,0.212,2863,0.992,2866,0.443,2867,0.265,2872,0.232,2925,0.466,2937,0.254,2949,0.265,3009,0.265,3010,0.265,3016,0.265,3020,0.25,3024,0.893,3039,0.224,3115,0.242,3143,0.229,3178,2.13,3179,0.265,3180,2.869,3181,0.265,3182,0.265,3183,2.116,3184,2.044,3187,0.265,3190,2.142,3191,3.169,3192,2.721,3193,0.265,3194,0.497,3195,0.265,3196,1.19,3198,2.448,3199,0.448,3200,0.246,3201,2.605,3202,0.265,3206,0.254,3207,0.232,3230,0.212,3231,2.594,3422,1.699,3455,0.265,3491,0.254,3526,0.25,3529,0.238,3538,0.265,3596,0.265,3704,0.992,3713,0.265,3717,0.953,3718,0.265,3730,0.259,3731,0.232,3732,0.518,3733,0.265,3758,0.518,3761,0.518,3762,0.518,3765,0.265,3780,0.265,3781,0.518,3783,0.518,3784,0.265,3785,0.265,3786,0.518,3787,0.265,3788,0.992,3789,0.265,3791,0.265,3792,0.265,3793,0.265,3794,1.326,3795,0.265,3796,0.518,3797,0.518,3799,0.518,3801,0.265,3803,0.265,3805,0.265,3806,0.76,3807,0.518,3808,0.265,3809,0.265,3810,0.265,3811,0.76,3812,0.265,3813,0.992,3814,0.518,3815,0.481,3816,0.265,3817,0.265,3833,0.254,3974,0.259,4042,0.61,4078,0.953,4079,0.254,4083,0.518,4088,0.278,4092,1.215,4093,1.215,4094,0.518,4095,0.518,4096,2.294,4097,0.76,4098,0.246,4099,1.633,4100,0.296,4101,1.5,4102,0.296,4103,0.579,4104,0.85,4105,0.579,4106,0.296,4107,1.313,4108,0.296,4109,1.766,4110,3.033,4111,0.85,4112,0.85,4113,0.296,4114,0.296,4115,0.278,4116,0.296,4117,0.296,4118,0.296,4119,0.296,4120,0.544,4121,0.798,4122,0.296,4123,0.265,4124,0.296,4125,0.296,4126,0.296,4127,0.278,4128,0.296,4129,0.579,4130,0.579,4131,0.579,4132,0.85,4133,1.715,4134,0.579,4135,0.579,4136,0.705,4137,0.296,4138,0.296,4139,1.598,4140,0.296,4141,2.26,4142,0.296,4143,0.85,4144,0.296,4145,0.296,4146,0.296,4147,0.296,4148,0.296,4149,0.579,4151,0.85,4152,0.579,4153,0.85,4154,0.296,4155,1.598,4156,0.296,4157,0.296,4158,0.296,4159,0.296,4160,0.296,4161,0.518,4162,0.296,4163,0.278,4164,0.296,4165,0.296,4166,0.278,4167,0.296,4168,1.359,4169,0.85,4170,0.296,4171,0.296,4172,0.85,4173,0.579,4174,0.579,4175,0.579,4176,0.296,4177,0.579,4178,1.598,4179,0.85,4180,0.296,4181,0.296,4182,0.579,4183,0.296,4184,0.579,4185,0.579,4186,0.296,4187,0.579,4188,0.265,4189,0.296,4190,0.296,4191,0.278,4192,0.296,4195,0.296,4196,0.286,4198,0.822,4201,0.286,4204,0.296,4213,0.265,4214,0.85,4215,1.359,4216,1.11,4217,0.296,4218,0.85,4219,0.296,4220,0.296,4221,0.992,4222,0.296,4223,0.296,4224,0.296,4225,0.296,4226,0.296,4227,0.296,4228,0.296,4229,0.296,4230,0.296,4231,0.296,4232,0.296,4233,0.296,4234,0.296,4235,0.85,4236,0.296,4237,0.296,4238,0.296,4239,0.296,4240,0.296,4241,0.296,4242,0.296,4243,0.296,4244,0.296,4245,0.296,4246,0.296,4247,0.286,4248,0.296,4249,1.359,4250,0.296,4251,0.296,4252,0.296,4253,0.296,4254,0.296,4255,0.296,4256,0.296,4257,0.296,4258,0.296,4259,0.296,4260,0.296,4261,0.296,4262,0.296,4263,0.296,4264,0.296,4265,0.544,4266,0.296,4267,0.296,4268,0.296,4269,0.296,4270,0.296,4271,0.296,4272,0.296,4273,0.296,4274,0.278,4275,0.76,4276,0.296,4277,0.296,4278,0.296,4279,0.296,4280,0.544,4281,0.296,4282,0.296,4283,1.544,4284,0.286,4285,0.296,4286,1.243,4287,0.544,4288,1.11,4289,1.11,4290,0.296,4291,0.296,4292,0.579,4293,0.579,4294,0.296,4295,0.296,4296,0.278,4297,0.579,4298,0.296,4299,0.296,4300,0.579,4301,0.296,4302,0.53,4303,0.296,4304,0.296,4305,0.296,4306,0.296,4307,0.278,4318,0.296,4319,0.296,4320,1.11,4321,0.296,4322,0.579,4323,0.579,4324,0.296,4325,0.286,4326,0.296,4327,0.579,4328,0.579,4329,0.296,4330,0.296,4331,0.265,4332,0.296,4333,0.296,4334,0.544,4335,0.296,4336,0.85,4337,0.296,4338,0.296,4339,0.296,4340,0.296,4341,0.296,4342,0.296,4343,0.296,4344,0.296,4345,0.296,4346,0.296,4347,0.296,4348,0.296,4349,0.296,4350,0.296,4351,0.296,4352,0.296,4353,0.296,4354,0.296,4355,0.296,4356,0.296,4357,0.296,4358,0.296,4359,0.296,4360,0.579,4361,0.296,4372,0.296,4373,0.296,4374,0.296,4375,0.296,4376,0.296,4377,0.296,4378,0.296,4379,0.296,4380,0.296,4381,0.296,4382,0.296,4383,0.296,4384,0.296,4385,0.296,4386,0.296,4387,0.296,4388,0.296,4389,0.296,4390,0.296,4391,0.296,4392,0.296,4393,0.296,4394,0.296,4396,0.296,4398,0.296,4401,0.296,4403,0.296,4404,0.296,4405,0.296,4406,0.278,4407,0.296,4408,0.296,4409,0.265,4410,0.286,4412,0.278,4413,0.296,4414,0.296,4415,0.296,4416,0.296,4417,0.296,4418,0.579,4419,0.544,4420,1.359,4421,0.296,4422,0.296,4423,0.296,4424,0.296,4425,0.296,4426,0.296,4427,0.296,4428,0.296,4429,0.579,4430,0.544,4431,0.296,4432,0.296,4433,0.296,4434,0.278,4435,0.296,4436,0.296,4437,0.296,4438,0.296,4439,0.579,4440,0.296,4441,0.296,4442,0.296,4443,0.246,4444,0.296,4445,0.296,4446,0.518,4447,0.296,4448,0.296,4449,0.296,4450,0.85,4451,0.278,4452,0.296,4453,0.296,4454,1.428,4455,0.278,4456,0.85,4457,0.296,4458,0.296,4459,0.286,4460,0.579,4461,0.271,4462,0.296,4463,0.296,4464,0.296,4465,0.296,4466,0.579,4467,0.296,4468,0.296,4469,0.296,4470,0.296,4471,0.296,4472,0.579,4473,0.296,4474,0.296,4475,0.296,4476,0.296,4477,0.296,4543,0.507,5414,0.518,5471,1.359,5499,0.278,5612,0.296,5613,0.296,5790,0.636,5791,0.325,5792,0.325,5793,0.325,5794,0.325,5795,0.325,5796,0.325,5797,0.325,5798,0.296,5799,0.325,5800,0.309,5801,0.325,5802,0.934,5803,0.325,5804,0.286,5805,0.56,5806,0.325,5807,0.325,5808,0.325,5809,0.325,5810,0.325,5811,0.325,5812,0.325,5813,0.325,5814,0.325,5815,0.325,5816,0.325,5817,0.325,5818,0.325,5819,0.325]],["component/162",[68,0.364]],["title/163-1",[0,19.276,733,32.758,2352,27.532]],["name/163-1",[]],["text/163-1",[]],["component/163-1",[]],["title/163-2",[5,22.333,76,18.099,151,23.776]],["name/163-2",[]],["text/163-2",[]],["component/163-2",[]],["title/163-3",[76,18.099,152,25.623,2311,33.409]],["name/163-3",[]],["text/163-3",[]],["component/163-3",[]],["title/163-4",[28,32.112,1635,45.762]],["name/163-4",[]],["text/163-4",[]],["component/163-4",[]],["title/163-5",[473,25.32,1636,47.296]],["name/163-5",[]],["text/163-5",[]],["component/163-5",[]],["title/163-6",[50,30.333,2435,40.888]],["name/163-6",[]],["text/163-6",[]],["component/163-6",[]],["title/163-7",[185,23.402,559,27.756,2436,29.693,2564,37.979]],["name/163-7",[]],["text/163-7",[]],["component/163-7",[]],["title/163-8",[19,21.659,473,21.709,2565,46.748]],["name/163-8",[]],["text/163-8",[]],["component/163-8",[]],["title/163-9",[2686,34.074,3208,33.568,3211,34.612,6722,60.138]],["name/163-9",[]],["text/163-9",[]],["component/163-9",[]],["title/163",[1705,29.286,3211,46.127]],["name/163",[1705,0.463,3211,0.73]],["text/163",[0,2.275,3,3.227,4,1.094,5,2.502,8,0.648,9,2.377,12,1.933,13,3.568,14,2.313,15,0.856,18,1.467,19,2.963,20,0.777,21,1.377,22,1.716,27,0.722,29,1.705,31,0.716,32,1.363,33,0.844,40,1.67,50,1.05,66,1.329,67,0.696,71,1.657,72,1.147,74,0.786,75,1.526,76,1.907,82,0.712,88,2.809,113,0.643,115,0.786,121,0.752,126,1.28,129,1.591,134,0.623,137,2.477,146,0.74,147,0.729,151,2.125,152,1.425,153,0.696,156,1.275,158,0.876,163,1.189,179,0.7,180,1.94,181,2.364,184,1.227,185,0.592,188,5.325,189,1.954,190,0.671,193,0.716,194,0.832,201,3.155,206,0.719,211,0.693,213,1.822,220,0.612,248,0.729,252,0.906,254,1.37,258,0.712,259,2.511,276,2.214,280,0.942,298,2.051,307,1.796,308,0.712,327,0.729,351,0.634,354,1.868,356,0.795,364,1.699,381,1.978,385,0.69,388,2.432,419,1.837,420,0.638,432,1.363,435,0.876,452,0.876,453,0.832,465,1.172,468,3.275,473,0.877,474,2.275,485,1.227,510,0.768,524,0.781,531,0.972,535,1.242,549,0.844,561,2.279,563,0.891,564,2.347,577,0.748,578,1.217,581,1.946,582,1.849,599,1.316,650,0.826,651,0.984,656,1.242,680,0.856,696,0.932,705,0.984,713,0.863,731,0.984,738,0.663,739,0.748,749,0.932,770,1.877,774,2.051,786,0.768,801,0.906,812,1.208,817,0.748,848,0.932,871,1.036,904,1.068,931,0.876,940,0.863,965,0.737,973,1.537,1013,1.036,1014,2.236,1015,1.036,1017,0.756,1058,1.15,1139,2.096,1149,2.564,1153,0.876,1164,0.795,1171,1.946,1178,1.068,1181,0.883,1196,0.863,1226,0.719,1306,1.051,1316,1.682,1356,1.527,1484,0.984,1568,1.887,1657,1.572,1663,0.942,1667,0.951,1705,1.722,1730,1.068,1741,2.649,1744,5.596,1842,1.036,1856,1.068,1917,0.923,1942,2.778,2032,2.096,2084,0.942,2104,1.008,2106,1.008,2158,1.105,2172,1.637,2181,0.781,2196,1.363,2221,0.984,2235,1.298,2252,0.795,2279,2.857,2281,0.815,2311,0.74,2327,3.098,2328,0.826,2342,0.69,2343,0.961,2345,0.942,2352,0.61,2364,0.972,2374,1.051,2393,1.792,2394,1.792,2406,0.951,2418,0.876,2446,1.37,2447,1.415,2449,1.37,2450,2.302,2451,2.074,2454,0.838,2501,0.826,2537,1.008,2541,4.327,2564,0.961,2618,1.105,2686,3.103,2689,0.942,2693,1.068,2742,0.984,2787,3.064,2789,1.036,2790,1.068,2806,0.942,2807,1.752,2810,2.914,2822,0.923,2840,1.068,2866,0.984,2925,4.574,2928,1.068,3017,2.096,3041,5.614,3103,1.15,3110,2.888,3190,0.815,3199,1.814,3208,5.246,3211,5.073,3220,1.15,3225,3.626,3226,3.12,3227,4.066,3228,3.626,3240,2.531,3241,3.289,3275,2.461,3279,3.649,3318,1.208,3347,2.68,3348,2.68,3374,1.036,3376,1.036,3402,1.068,3404,1.068,3406,0.942,3413,1.036,3414,1.008,3415,1.946,3416,1.068,3419,1.208,3421,1.208,3422,1.946,3505,4.457,3518,1.008,3522,1.068,3643,1.15,3818,1.068,3995,1.15,3996,2.096,4053,1.105,4067,1.105,4096,1.887,4188,1.15,4280,2.201,4575,1.208,4616,2.201,4620,1.15,4623,1.15,4624,1.15,4625,1.15,4629,1.15,4631,1.208,4666,1.15,4671,1.208,4676,1.208,4704,2.014,4705,1.287,4706,1.287,4707,1.287,4709,1.287,4711,1.287,4712,1.287,4713,2.345,4716,1.287,4717,3.23,4718,1.244,4720,1.287,4722,1.287,4750,1.15,4752,1.15,4753,1.15,4754,1.15,4780,2.345,4781,1.287,5053,1.208,5214,2.345,5266,1.287,5267,1.287,5268,1.287,5269,2.345,5274,1.177,5414,2.096,5439,1.287,5486,2.053,5515,1.287,5518,1.287,5558,1.208,5559,1.208,5560,1.208,5561,1.208,5562,1.208,5563,1.208,5564,1.208,5566,1.287,5567,1.208,5568,1.287,5569,1.208,5570,1.208,5571,2.888,5685,1.287,5686,1.287,5689,1.208,5690,1.208,5691,1.208,5768,1.287,5769,1.287,5770,1.287,5804,2.266,5805,1.244,5821,1.413,5822,1.413,5823,2.345,5824,1.413,5825,1.413,5826,1.413,5827,6.24,5828,1.413,5829,1.413,5830,1.413,5831,1.413,5832,1.413,5833,1.413,5834,1.413,5835,1.413,5836,2.575,5837,1.413,5838,1.413,5839,1.413,5840,1.413,5841,1.413,5842,1.413,5843,1.413,5844,1.413,5845,1.413,5846,1.413,5847,1.413,5848,1.413,5849,1.413,5850,1.413,5851,1.413,5852,1.287,5853,1.287,5854,1.287,5855,1.287,5856,1.287,5857,1.287,5858,1.287,5859,1.413,5860,1.413,5861,1.413,5862,1.413,5863,1.413,5864,1.413,5865,2.575,5866,2.575,5867,1.413,5868,1.413,5869,1.413,5870,1.413,5871,1.413,5872,1.413,5873,1.413,5874,1.413,5875,1.413,5876,1.413,5877,1.413,5878,1.413,5879,1.208]],["component/163",[68,0.364]],["title/164-1",[0,19.276,733,32.758,2352,27.532]],["name/164-1",[]],["text/164-1",[]],["component/164-1",[]],["title/164-2",[5,22.333,76,18.099,151,23.776]],["name/164-2",[]],["text/164-2",[]],["component/164-2",[]],["title/164-3",[76,18.099,152,25.623,2311,33.409]],["name/164-3",[]],["text/164-3",[]],["component/164-3",[]],["title/164-4",[28,32.112,1635,45.762]],["name/164-4",[]],["text/164-4",[]],["component/164-4",[]],["title/164-5",[473,25.32,1636,47.296]],["name/164-5",[]],["text/164-5",[]],["component/164-5",[]],["title/164-6",[50,30.333,2435,40.888]],["name/164-6",[]],["text/164-6",[]],["component/164-6",[]],["title/164-7",[6,26.973,1232,31.831,1744,29.017,2564,33.765,5880,45.188]],["name/164-7",[]],["text/164-7",[]],["component/164-7",[]],["title/164",[1705,29.286,1744,43.496]],["name/164",[1705,0.463,1744,0.688]],["text/164",[0,3.003,4,1.257,5,1.411,6,2.672,8,0.756,9,0.896,13,3.47,14,0.75,19,2.329,23,0.877,26,1.192,40,0.776,53,0.823,64,1.449,66,0.851,67,0.813,71,2.297,75,0.709,76,0.468,88,2.792,94,1.953,98,1.098,126,0.82,129,0.739,131,1.134,134,1.304,136,1.821,137,2.137,151,1.104,152,0.662,155,1.583,156,0.816,163,1.861,184,0.786,185,1.241,188,5.422,189,2.531,192,1.446,194,0.97,201,3.999,203,1.84,211,0.809,213,2.048,219,2.059,220,0.714,254,3.648,256,2.734,258,1.492,259,1.775,271,2.1,276,0.835,307,3.193,308,1.492,309,0.835,320,0.928,325,1.499,327,0.851,347,1.039,351,3.075,376,0.839,385,0.806,395,1.567,405,2.608,414,0.917,417,1.708,420,0.745,426,1.501,432,3.337,435,1.836,449,1.342,452,1.836,453,0.97,465,0.75,473,0.561,480,0.991,481,1.208,485,0.786,524,1.637,535,0.795,542,0.939,559,0.82,561,0.859,564,0.761,565,1.972,572,1.208,577,0.872,578,0.779,589,2.53,599,0.843,606,2.215,645,1.342,651,1.147,681,1.098,710,1.192,770,0.872,774,1.388,778,1.014,801,1.057,804,0.964,812,0.773,817,0.872,818,2.711,823,0.896,845,1.147,857,1.934,943,1.176,968,1.52,977,1.147,980,1.048,1016,1.031,1017,3.372,1026,3.048,1027,2.772,1028,4.041,1082,2.696,1096,1.916,1112,1.807,1161,1.077,1168,1.916,1191,1.851,1204,2.274,1206,1.409,1232,4.044,1298,1.077,1335,1.134,1492,1.501,1493,3.932,1644,1.067,1666,1.122,1673,1.289,1705,1.935,1741,1.543,1744,6.629,1749,0.984,1763,2.202,1917,1.934,1942,4.452,1968,0.964,2196,0.872,2235,2.031,2292,1.245,2327,2.19,2343,3.345,2345,1.098,2352,0.712,2385,2.874,2393,1.147,2394,1.147,2418,1.836,2432,1.147,2446,2.615,2447,2.215,2449,1.575,2450,4.466,2451,0.964,2507,1.11,2541,3.753,2556,2.06,2562,5.636,2616,2.953,2629,2.41,2696,1.245,2803,1.245,2805,1.176,2822,1.077,2834,1.409,2841,1.342,3143,1.161,3190,1.708,3224,2.112,3230,3.212,3238,1.022,3241,1.708,3275,0.928,3279,1.731,3570,1.342,3645,1.409,3692,1.501,3695,1.501,3713,3.28,3763,1.409,3820,1.409,3821,1.409,3848,1.208,4042,1.077,4492,2.696,4493,2.696,4591,2.696,4620,1.342,4623,1.342,4624,1.342,4625,1.342,4629,1.342,4954,1.501,4958,3.669,5090,5.741,5093,2.696,5104,1.501,5105,1.501,5136,1.501,5138,2.53,5293,2.696,5327,1.409,5337,1.501,5354,3.212,5385,2.53,5567,6.64,5634,1.501,5640,1.501,5651,1.501,5657,1.501,5659,1.501,5662,1.501,5698,1.501,5699,1.501,5700,1.501,5701,1.501,5702,1.501,5703,1.501,5704,1.501,5705,1.501,5706,1.501,5707,1.501,5708,1.501,5709,1.501,5711,1.501,5732,1.409,5880,4.477,5881,2.96,5882,4.028,5883,1.648,5884,1.648,5885,2.96,5886,2.96,5887,2.96,5888,1.648,5889,1.648,5890,1.648,5891,1.648,5892,1.648,5893,1.648,5894,1.648,5895,1.648,5896,1.648,5897,2.96,5898,1.648,5899,1.648,5900,1.648,5901,4.028,5902,1.648,5903,1.648,5904,1.648,5905,1.648,5906,1.648,5907,1.648,5908,1.648,5909,1.648,5910,2.96,5911,1.648,5912,1.648,5913,2.96,5914,1.648,5915,1.648,5916,1.648,5917,1.648,5918,1.648,5919,1.648,5920,1.648,5921,4.915,5922,1.648,5923,1.648,5924,1.648,5925,1.648,5926,1.648,5927,4.028,5928,1.648,5929,1.648,5930,2.96,5931,1.648,5932,2.96,5933,1.648,5934,1.648,5935,1.648,5936,1.648,5937,6.304,5938,1.648,5939,1.648,5940,1.648,5941,1.648,5942,3.822,5943,1.648,5944,1.648,5945,2.96,5946,1.648,5947,1.648,5948,1.648,5949,1.648,5950,1.648,5951,1.648,5952,1.648]],["component/164",[68,0.364]],["title/165-1",[0,22.482,355,43.207]],["name/165-1",[]],["text/165-1",[]],["component/165-1",[]],["title/165-2",[19,13.792,21,15.765,33,24.247,73,22.854,127,25.601,2329,22.451,2351,24.423]],["name/165-2",[]],["text/165-2",[]],["component/165-2",[]],["title/165-3",[20,27.277,21,28.699,77,29.017,770,26.261]],["name/165-3",[]],["text/165-3",[]],["component/165-3",[]],["title/165-4",[113,29.017,517,54.517,739,33.752]],["name/165-4",[]],["text/165-4",[]],["component/165-4",[]],["title/165-5",[20,30.682,21,21.668,76,15.84,518,47.712]],["name/165-5",[]],["text/165-5",[]],["component/165-5",[]],["title/165-6",[12,19.748,519,40.675,739,23.638,1014,28.158,2613,32.74,3198,34.929]],["name/165-6",[]],["text/165-6",[]],["component/165-6",[]],["title/165-7",[4,23.704,21,21.668,83,33.568,770,29.539]],["name/165-7",[]],["text/165-7",[]],["component/165-7",[]],["title/165-8",[22,37.19,325,28.266,818,26.71,826,37.575]],["name/165-8",[]],["text/165-8",[]],["component/165-8",[]],["title/165",[21,21.668,770,29.539,1705,21.975,2329,30.858]],["name/165",[21,0.316,770,0.43,1705,0.32]],["text/165",[0,1.682,2,0.729,4,3.616,5,2.258,8,3.564,9,4.505,11,2.273,12,3.765,13,3.18,14,0.997,15,1.851,16,0.815,19,3.307,20,4.797,21,4.055,22,2.036,26,0.857,27,0.606,28,0.512,32,1.617,33,0.708,34,1.799,49,0.825,53,1.901,59,2.24,60,0.637,61,2.069,62,0.574,63,0.798,64,1.606,68,0.311,72,0.528,76,1.08,80,0.562,88,0.584,98,1.46,106,1.719,113,2.031,118,1.475,119,2.452,124,0.798,127,1.381,134,1.677,137,0.515,148,1.184,151,0.442,156,1.513,160,0.659,178,1.775,181,0.641,184,0.565,185,1.596,186,1.799,188,5.197,189,1.701,190,1.04,191,1.028,192,0.579,194,1.29,201,0.919,206,0.603,211,1.499,213,1.586,219,1.12,251,2.069,255,0.782,257,0.835,258,0.597,265,0.91,276,1.109,306,0.815,307,0.6,308,1.104,323,0.723,325,4.858,327,0.612,333,0.881,349,1.418,351,1.707,355,0.688,364,1.445,368,0.634,376,1.115,381,7.774,385,1.86,398,0.718,400,1.507,439,0.945,440,1.043,452,0.735,453,1.29,459,0.99,465,0.997,468,1.745,472,1.256,473,0.403,478,1.88,489,0.881,494,0.895,501,1.154,510,1.191,524,1.211,531,1.507,542,1.248,544,2.511,547,0.63,549,1.824,553,1.784,578,1.444,606,2.774,616,0.881,656,0.572,657,1.281,663,0.91,668,0.747,670,1.318,676,0.565,703,0.782,732,0.881,738,1.028,739,4.115,746,1.683,747,0.945,751,0.815,762,1.617,765,1.043,770,1.617,774,2.61,802,1.125,804,0.693,812,0.556,817,2.363,818,5.046,823,0.644,846,0.835,848,1.445,854,0.869,925,0.881,951,0.798,952,0.774,968,0.609,970,1.709,973,0.708,974,0.806,976,1.584,980,0.753,982,2.152,987,0.945,993,0.857,999,0.895,1002,0.713,1007,2.347,1012,0.798,1014,3.508,1016,2.791,1017,3.835,1019,0.806,1026,0.735,1118,1.37,1127,0.927,1143,0.723,1148,0.782,1154,3.209,1160,1.124,1170,0.798,1172,0.782,1181,0.741,1191,0.741,1192,1.348,1196,0.723,1197,0.945,1198,0.987,1209,1.475,1226,0.603,1231,0.987,1232,3.237,1234,2.152,1254,0.735,1256,1.124,1274,1.507,1298,0.774,1303,0.987,1310,2.924,1320,0.798,1323,0.91,1335,0.815,1339,1.37,1644,1.418,1658,0.815,1705,1.499,1725,0.91,1751,2.273,1824,1.043,1874,0.815,1879,1.418,1917,1.431,1944,1.043,1953,0.798,2139,0.782,2161,1.124,2163,1.63,2247,0.798,2282,1.136,2328,0.693,2329,4.825,2346,0.945,2351,2.685,2357,3.329,2381,0.621,2430,1.013,2468,3.611,2470,2.079,2483,2.545,2494,3.171,2496,1.124,2507,0.798,2547,0.945,2562,2.442,2605,2.681,2609,4.253,2613,4.726,2617,1.013,2695,4.079,2708,1.747,2728,4.204,2740,3.555,2744,0.91,2746,0.881,2747,1.013,2772,1.563,2774,1.043,2925,1.606,3020,0.91,3037,0.881,3038,1.013,3039,0.815,3143,2.152,3175,1.825,3196,1.747,3198,2.389,3252,1.655,3668,1.043,3677,0.987,3679,1.124,3840,0.881,3974,0.945,4010,0.91,4107,1.043,4109,1.043,4283,1.043,4284,1.043,4286,0.987,4287,2.612,4309,1.043,4325,1.043,4410,1.043,4459,1.928,4543,0.945,4718,1.043,4851,1.124,5486,0.945,5554,1.124,5610,2.079,5804,1.043,5805,1.043,5942,2.079,6010,1.124,6352,1.124,6377,1.124,6466,1.124,6467,1.124,6469,1.124,6520,1.124,6723,1.277,6724,4.81,6725,2.361,6726,1.277,6727,2.361,6728,1.277,6729,1.277,6730,1.277,6731,1.277,6732,1.277,6733,1.277,6734,1.277,6735,1.277,6736,2.361,6737,1.277,6738,1.277,6739,1.277,6740,2.361,6741,1.277,6742,1.277,6743,1.277,6744,2.361,6745,1.277,6746,1.277,6747,3.292,6748,3.292,6749,3.292,6750,3.292,6751,3.292,6752,3.292,6753,3.292,6754,1.277,6755,1.277,6756,1.277,6757,1.277,6758,1.277,6759,1.277,6760,2.361,6761,4.101,6762,2.361,6763,1.277,6764,1.277,6765,3.292,6766,1.277,6767,1.277,6768,1.277,6769,1.277,6770,1.277,6771,1.277,6772,1.277,6773,1.277,6774,1.277,6775,1.277,6776,4.101,6777,5.996,6778,1.277,6779,1.277,6780,1.277,6781,1.277,6782,1.277,6783,3.292,6784,2.361,6785,4.101,6786,7.726,6787,2.361,6788,2.361,6789,2.361,6790,1.277,6791,2.361,6792,3.292,6793,2.361,6794,1.277,6795,1.277,6796,1.277,6797,1.277,6798,2.361,6799,1.277,6800,1.277,6801,1.277,6802,1.277,6803,1.277,6804,1.277,6805,1.277,6806,1.277,6807,1.277,6808,1.277,6809,2.361,6810,1.277,6811,1.277,6812,2.361,6813,1.277,6814,1.277,6815,1.277,6816,1.277,6817,1.277,6818,1.277,6819,1.277,6820,1.277]],["component/165",[68,0.364]],["title/166-1",[0,19.276,733,32.758,2352,27.532]],["name/166-1",[]],["text/166-1",[]],["component/166-1",[]],["title/166-2",[5,22.333,76,18.099,151,23.776]],["name/166-2",[]],["text/166-2",[]],["component/166-2",[]],["title/166-3",[76,18.099,152,25.623,2311,33.409]],["name/166-3",[]],["text/166-3",[]],["component/166-3",[]],["title/166-4",[28,32.112,1635,45.762]],["name/166-4",[]],["text/166-4",[]],["component/166-4",[]],["title/166-5",[50,30.333,473,25.32]],["name/166-5",[]],["text/166-5",[]],["component/166-5",[]],["title/166-6",[2435,40.888,2564,50.614]],["name/166-6",[]],["text/166-6",[]],["component/166-6",[]],["title/166-7",[185,23.402,559,27.756,2436,29.693,6821,60.138]],["name/166-7",[]],["text/166-7",[]],["component/166-7",[]],["title/166-8",[98,37.19,387,37.979,5324,36.468,6822,60.138]],["name/166-8",[]],["text/166-8",[]],["component/166-8",[]],["title/166-9",[19,18.956,1074,34.612,5324,36.468,6823,60.138]],["name/166-9",[]],["text/166-9",[]],["component/166-9",[]],["title/166-10",[385,27.275,556,39.32,5324,36.468,6824,60.138]],["name/166-10",[]],["text/166-10",[]],["component/166-10",[]],["title/166-11",[385,27.275,5324,36.468,5325,45.439,6825,60.138]],["name/166-11",[]],["text/166-11",[]],["component/166-11",[]],["title/166",[1705,29.286,5324,48.601]],["name/166",[1705,0.463,5326,0.958]],["text/166",[0,2.845,3,3.135,4,0.677,5,1.373,6,0.867,8,0.731,12,0.705,13,2.947,14,0.725,19,1.332,20,2.155,21,2.61,24,0.827,31,0.807,33,2.341,40,2.607,62,0.773,64,0.574,75,0.686,76,1.571,80,0.757,98,1.062,102,0.857,119,1.266,121,2.086,127,1.811,134,1.727,137,2.682,160,2.18,180,2.127,184,1.369,188,5.136,191,1.348,192,0.779,193,1.455,196,0.867,201,2.588,203,0.728,206,0.811,213,1.634,220,0.691,234,1.205,258,4.038,271,1.497,272,1.205,287,3.561,298,0.748,320,0.897,325,1.455,336,3.097,361,0.831,373,0.793,385,3.016,397,0.932,417,2.262,420,1.771,453,0.939,459,0.72,465,2.808,466,1.637,468,1.317,473,0.543,481,1.169,485,0.76,508,1.062,510,3.009,535,2.671,556,1.123,559,0.793,561,2.044,564,1.327,581,2.962,590,2.962,635,1.553,655,2.393,656,0.769,680,0.966,702,1.073,731,2.729,738,0.748,739,2.075,748,0.887,758,1.363,770,0.844,781,2.171,786,0.867,801,4.312,804,2.804,812,0.748,818,4.395,854,2.106,855,1.005,857,1.877,882,1.052,901,0.966,940,0.973,949,1.247,965,0.831,973,2.341,1014,2.472,1017,2.961,1027,1.097,1034,1.138,1074,0.989,1085,1.363,1112,0.973,1118,3.461,1121,2.472,1168,1.032,1171,1.205,1172,4.071,1226,0.811,1251,1.023,1269,1.052,1274,1.097,1302,2.339,1336,2.797,1356,0.945,1399,1.247,1416,3.352,1442,2.668,1494,1.363,1568,2.874,1663,1.062,1705,2.18,1741,2.499,1856,2.962,1942,1.57,1968,0.932,1969,1.005,2177,1.363,2208,0.926,2221,2.729,2235,1.448,2247,1.073,2281,3.561,2311,2.054,2327,3.355,2343,2.668,2351,1.728,2352,0.688,2374,2.916,2415,3.066,2446,1.528,2447,0.877,2449,1.528,2450,2.064,2451,1.68,2454,0.945,2501,2.293,2530,1.955,2537,2.797,2609,1.052,2689,2.612,2749,1.205,2787,4.103,2790,2.962,2791,3.192,2810,4.112,2877,1.169,3041,2.797,3122,1.247,3190,0.92,3238,0.989,3406,1.062,3456,1.153,3551,5.338,3582,1.205,3721,2.339,3840,1.186,3848,1.169,3860,1.205,3908,2.137,4042,1.042,4454,3.192,4750,3.192,4752,3.192,4753,3.192,4754,3.192,4908,2.339,5324,8.391,5325,3.192,5326,3.904,5327,4.099,5328,1.452,5329,1.452,5330,2.616,5331,1.452,5332,2.616,5333,2.616,5334,1.452,5335,1.452,5336,3.57,5339,7.605,5340,1.452,5341,1.452,5342,1.452,5343,1.452,5344,1.452,5345,1.452,5346,1.452,5347,2.616,5348,1.452,5349,1.452,5350,1.363,5351,1.452,5352,1.452,5353,1.452,5354,2.29,5355,1.452,5356,2.616,5357,1.452,5358,1.452,5359,2.616,5360,1.452,5361,1.452,5362,1.452,5366,1.452,5368,1.452,5374,6.95,5376,2.616,5377,2.616,5378,4.367,5379,2.616,5380,2.616,5381,2.616,5382,2.616,5383,2.616,5384,2.616,5385,2.456,5386,1.452,5388,1.363,5389,1.452,5395,1.452,5397,1.452,5398,1.452,5399,1.452,5401,1.452,5486,3.126,5823,3.57,5852,3.57,5853,3.57,5854,3.57,5855,3.57,5856,3.57,5857,3.57,5858,3.57,5879,6.848,5958,2.873,5959,1.594,5960,2.873,5961,2.873,5962,7.631,5963,7.631,5964,1.594,5965,1.594]],["component/166",[68,0.364]],["title/167-1",[0,16.87,159,31.604,1705,21.975,2588,38.849]],["name/167-1",[]],["text/167-1",[]],["component/167-1",[]],["title/167-2",[6,34.666,82,32.148,151,23.776]],["name/167-2",[]],["text/167-2",[]],["component/167-2",[]],["title/167-3",[152,25.623,159,36.111,2196,33.752]],["name/167-3",[]],["text/167-3",[]],["component/167-3",[]],["title/167-4",[1635,34.339,2196,29.539,2393,38.849,2394,38.849]],["name/167-4",[]],["text/167-4",[]],["component/167-4",[]],["title/167-5",[29,26.82,50,22.761,159,31.604,189,24.94]],["name/167-5",[]],["text/167-5",[]],["component/167-5",[]],["title/167",[1705,35.129]],["name/167",[1705,0.838]],["text/167",[0,1.096,4,1.54,5,1.27,6,3.154,13,2.373,14,1.65,19,3.283,28,1.566,29,5.066,39,2.268,40,2.732,49,2.525,50,3.379,55,2.952,59,1.82,64,1.305,66,2.995,69,2.121,116,2.659,126,2.885,129,4.334,146,1.9,153,1.788,156,2.872,177,4.218,179,1.796,182,2.306,184,1.729,185,1.521,188,4.287,189,3.703,193,1.837,194,3.416,220,1.571,251,1.972,253,2.15,254,1.93,258,1.828,304,2.15,321,2.525,365,1.854,374,2.741,385,1.772,388,2.017,415,3.428,465,2.64,468,1.663,486,3.722,499,3.948,547,4.408,563,2.287,577,1.92,582,3.024,599,2.966,633,2.468,656,1.75,668,2.287,676,1.729,733,1.863,739,1.92,761,3.899,774,2.721,970,2.029,1071,2.741,1153,2.249,1156,2.698,1161,2.37,1209,2.442,1251,3.722,1252,2.468,1291,2.588,1339,2.268,1373,2.306,1393,3.948,1493,3.327,1704,3.393,1705,3.996,1709,2.249,1744,2.121,1923,2.525,2041,6.199,2094,4.384,2186,2.417,2196,3.071,2203,2.327,2297,2.953,2309,4.253,2325,3.101,2342,1.772,2349,2.659,2354,4.139,2355,2.837,2379,2.348,2393,5.047,2394,4.038,2572,2.121,2588,6.308,2591,3.101,2605,2.555,2606,2.741,2619,2.659,2661,5.671,2694,2.741,2785,2.698,2787,1.95,2803,5.479,2819,2.417,3190,5.23,3245,3.101,3908,2.698,4070,3.101,4434,3.101,4535,5.284,4692,2.837,4821,3.022,5087,2.837,5138,3.101,5350,3.101,5406,3.303,5407,5.284,5408,5.284,5410,3.303,5411,3.101,5412,3.101,5413,3.303,5414,2.953,5415,5.284,5416,5.284,5425,5.284,5445,5.284,5486,2.892,6004,9.061,6005,3.627,6006,3.627,6007,5.801,6008,5.801,6009,5.801,6010,6.88,6011,3.627,6012,3.627,6013,3.627,6014,3.627,6015,3.627,6016,3.627,6017,3.627,6018,3.627,6019,3.627,6020,3.627,6021,3.627,6022,3.627,6023,3.627,6024,3.627]],["component/167",[68,0.364]],["title/168-1",[0,12.274,25,25.183,29,19.513,32,21.492,33,24.247,42,22.854,5966,30.682]],["name/168-1",[]],["text/168-1",[]],["component/168-1",[]],["title/168-2",[25,25.183,29,19.513,31,20.565,32,21.492,33,24.247,151,15.14,5966,30.682]],["name/168-2",[]],["text/168-2",[]],["component/168-2",[]],["title/168-3",[25,25.183,29,19.513,31,20.565,32,21.492,52,33.06,152,16.315,5966,30.682]],["name/168-3",[]],["text/168-3",[]],["component/168-3",[]],["title/168",[]],["name/168",[]],["text/168",[25,5.625,28,1.845,29,4.358,30,3.892,33,2.552,34,3.813,35,3.892,41,3.892,43,3.892,45,3.892,51,3.892,52,3.48,59,2.145,61,2.323,68,2.381,188,5.778,253,2.534,352,5.32,782,4.485,1162,3.892,2228,2.672,2382,3.762,5967,4.274,5968,8.064,5969,4.274,5970,4.274,5971,4.274,5972,4.274,5973,4.055,5974,4.274,5975,4.274,5976,4.274,5977,4.274,5978,4.274,5979,4.274,5980,4.274,5981,4.274,5982,4.274,5983,4.274,5984,4.274,5985,4.274,5986,4.274,5987,4.274,5988,4.274,5989,4.274,5990,4.274,5991,4.274,5992,4.274,5993,4.274,5994,4.274,5995,4.274,5996,4.274,5997,4.274,5998,4.274,5999,4.274,6000,4.274,6001,4.274,6002,4.274,6003,4.274]],["component/168",[68,0.364]],["title/169",[1493,51.158]],["name/169",[1493,1.221]],["text/169",[4,2.176,5,3.153,18,2.92,20,2.817,21,1.989,59,2.571,64,2.723,126,2.548,180,2.274,189,2.29,213,2.135,298,2.403,459,2.314,535,2.472,1251,8.778,1373,3.258,1493,4.341,1496,1.794,1733,4.007,2186,3.414,2205,5.921,2297,4.172,2325,4.38,2326,4.666,2427,4.38,6025,5.124,6026,5.124,6027,13.003,6028,7.57,6029,5.124,6030,9.945,6031,5.124,6032,5.124,6033,7.57,6034,5.124,6035,5.124,6036,5.124,6037,5.124,6038,9.003,6039,5.124,6040,5.124,6041,5.124,6042,5.124,6043,9.945,6044,5.124,6045,7.57,6046,5.124,6047,5.124,6048,7.57,6049,5.124,6050,4.666,6051,5.124,6052,5.124,6053,5.124,6054,5.124,6055,9.945,6056,5.124,6057,11.794,6058,5.124,6059,5.124,6060,5.124,6061,5.124,6062,10.61,6063,5.124,6064,5.124,6065,5.124,6066,5.124,6067,5.124]],["component/169",[68,0.364]],["title/170-1",[0,19.276,28,27.532,219,32.602]],["name/170-1",[]],["text/170-1",[]],["component/170-1",[]],["title/170-2",[12,28.197,151,23.776,661,42.494]],["name/170-2",[]],["text/170-2",[]],["component/170-2",[]],["title/170-3",[75,19.218,134,19.68,348,25.944,537,33.747,2439,23.517,2686,27.267]],["name/170-3",[]],["text/170-3",[]],["component/170-3",[]],["title/170-4",[538,48.185,997,45.497,4078,49.873]],["name/170-4",[]],["text/170-4",[]],["component/170-4",[]],["title/170-5",[539,51.919,986,37.045,2558,37.293]],["name/170-5",[]],["text/170-5",[]],["component/170-5",[]],["title/170-6",[12,21.939,540,42.418,986,28.823,2381,25.995,2560,31.831]],["name/170-6",[]],["text/170-6",[]],["component/170-6",[]],["title/170-7",[541,45.439,986,32.421,2381,29.239,2558,32.638]],["name/170-7",[]],["text/170-7",[]],["component/170-7",[]],["title/170",[12,28.197,661,42.494,2779,48.185]],["name/170",[661,0.784,2779,0.889]],["text/170",[0,2.32,2,1.959,3,1.803,4,1.352,6,0.972,8,1.973,10,2.607,12,4.664,13,3.833,15,1.084,16,1.231,19,3.34,21,2.324,25,1.109,28,2.585,29,3.189,34,2.831,39,1.118,59,1.598,61,3.254,62,3.216,72,3.203,80,2.043,88,4.34,100,1.217,119,1.403,126,0.889,129,0.802,134,1.403,151,2.682,152,2.666,159,1.013,160,1.771,163,1.988,178,1.039,179,1.577,180,0.794,181,2.327,185,0.75,189,1.423,191,0.839,192,0.874,200,1.013,201,1.804,203,3.031,204,2.928,213,4.182,218,2.167,219,3.392,251,0.972,254,2.29,271,2.243,276,0.906,280,1.192,307,0.906,308,1.605,323,2.627,336,1.781,347,2.007,348,4.705,356,2.422,361,0.932,385,1.556,388,2.904,398,2.607,468,1.46,472,3.805,478,1.1,501,2.266,543,4.235,549,1.068,577,0.947,578,2.468,595,1.629,598,1.814,619,2.334,661,1.192,676,2.853,738,1.494,748,0.995,761,0.962,780,3.032,782,0.995,789,2.272,804,2.517,818,5.182,823,5.455,898,1.991,940,2.627,952,1.169,974,1.217,977,1.245,980,1.137,986,1.039,997,3.07,1006,1.046,1016,1.118,1031,1.529,1096,1.158,1109,4.463,1152,1.351,1161,3.411,1168,2.786,1178,2.406,1192,1.1,1234,2.243,1252,2.167,1254,1.109,1269,2.101,1293,4.389,1298,2.812,1317,1.109,1318,2.216,1323,1.374,1324,1.311,1327,2.812,1663,1.192,1705,2.056,1732,1.276,1744,1.046,1749,1.901,1879,2.061,1883,1.217,1953,1.204,2196,0.947,2241,1.217,2252,2.422,2281,1.838,2306,1.374,2342,0.874,2351,3.14,2352,1.858,2381,4.439,2383,2.868,2408,3.366,2436,1.694,2439,2.749,2529,2.025,2541,2.669,2558,5.622,2560,5.435,2562,3.349,2571,3.252,2572,3.501,2604,5.282,2609,1.18,2685,3.504,2686,1.944,2698,1.456,2701,2.995,2709,4.524,2711,1.456,2740,3.032,2746,2.369,2761,3.252,2768,6.594,2771,2.928,2773,1.975,2785,1.331,2788,1.456,2789,1.311,2866,1.245,2877,7.047,3037,1.331,3039,1.231,3041,2.272,3178,1.217,3639,2.592,4064,1.629,4066,1.529,4067,1.399,4068,1.629,4069,1.529,4070,4.463,4072,4.755,4073,10.277,4074,8.019,4075,5.856,4076,4.755,4077,1.629,4078,4.682,4079,1.399,4080,1.629,4081,3.919,4082,1.629,4083,3.504,4084,3.919,4085,3.919,4087,1.529,4088,1.529,4089,2.9,4115,3.679,4454,1.456,5642,1.629,6068,4.303]],["component/170",[68,0.364]],["title/171-1",[0,19.276,21,24.758,1631,31.574]],["name/171-1",[]],["text/171-1",[]],["component/171-1",[]],["title/171-2",[73,41.861,159,42.117]],["name/171-2",[]],["text/171-2",[]],["component/171-2",[]],["title/171-3",[65,34.107,77,37.293,2593,48.185]],["name/171-3",[]],["text/171-3",[]],["component/171-3",[]],["title/171-4",[21,21.668,83,33.568,1631,27.633,1644,36.129]],["name/171-4",[]],["text/171-4",[]],["component/171-4",[]],["title/171-5",[151,27.731,2342,36.348]],["name/171-5",[]],["text/171-5",[]],["component/171-5",[]],["title/171-6",[152,25.623,2342,31.165,2398,44.389]],["name/171-6",[]],["text/171-6",[]],["component/171-6",[]],["title/171-7",[50,30.333,2381,38.966]],["name/171-7",[]],["text/171-7",[]],["component/171-7",[]],["title/171-8",[28,24.096,29,26.82,123,27.88,1631,27.633]],["name/171-8",[]],["text/171-8",[]],["component/171-8",[]],["title/171-9",[29,21.462,153,22.016,2203,28.651,2342,21.826,2398,31.088,2408,34.929]],["name/171-9",[]],["text/171-9",[]],["component/171-9",[]],["title/171-10",[21,17.34,973,26.669,2252,25.136,2342,21.826,2370,31.088,2398,31.088]],["name/171-10",[]],["text/171-10",[]],["component/171-10",[]],["title/171-11",[21,21.668,179,27.633,761,30.01,3102,45.439]],["name/171-11",[]],["text/171-11",[]],["component/171-11",[]],["title/171-12",[21,17.34,201,18.727,206,22.725,2342,21.826,2398,31.088,6631,40.675]],["name/171-12",[]],["text/171-12",[]],["component/171-12",[]],["title/171-13",[29,23.844,147,25.611,2203,31.831,2381,25.995,2408,38.805]],["name/171-13",[]],["text/171-13",[]],["component/171-13",[]],["title/171-14",[21,19.264,973,29.628,2252,27.925,2381,25.995,6633,45.188]],["name/171-14",[]],["text/171-14",[]],["component/171-14",[]],["title/171-15",[21,21.668,179,27.633,761,30.01,6634,50.829]],["name/171-15",[]],["text/171-15",[]],["component/171-15",[]],["title/171-16",[21,19.264,201,20.805,206,25.247,2381,25.995,2804,40.397]],["name/171-16",[]],["text/171-16",[]],["component/171-16",[]],["title/171-17",[21,19.264,201,20.805,206,25.247,248,25.611,2342,24.248]],["name/171-17",[]],["text/171-17",[]],["component/171-17",[]],["title/171-18",[21,19.264,973,29.628,2252,27.925,2342,24.248,6826,49.617]],["name/171-18",[]],["text/171-18",[]],["component/171-18",[]],["title/171-19",[21,19.264,201,20.805,206,25.247,2342,24.248,6827,49.617]],["name/171-19",[]],["text/171-19",[]],["component/171-19",[]],["title/171",[1631,44.173]],["name/171",[1631,1.054]],["text/171",[0,0.636,1,0.734,2,0.363,3,3.555,4,3.287,5,1.616,6,1.997,9,0.89,12,4.173,13,3.765,14,2.345,15,0.992,16,0.781,17,0.772,18,0.336,19,2.942,20,1.157,21,3.721,23,1.119,28,1.096,29,2.596,34,0.279,39,0.709,40,2.173,42,1.428,50,1.035,53,1.836,55,0.833,57,0.299,59,1.274,61,1.144,62,0.55,64,1.195,65,0.316,66,0.586,67,0.291,68,0.43,71,0.276,75,1.724,76,1.043,80,0.28,82,0.825,88,2.411,95,0.433,113,0.957,116,0.433,119,3.01,123,1.659,126,1.463,129,0.944,134,0.5,137,2.24,146,1.102,147,0.305,148,0.885,151,0.946,152,1.476,153,0.291,156,2.675,163,0.972,165,0.809,177,1.545,178,2.68,179,0.292,180,0.503,181,1.372,182,0.721,183,0.379,185,1.064,186,0.348,188,4.769,189,2.062,190,0.28,191,0.532,192,0.554,193,0.299,196,0.617,201,2.864,203,1.344,206,1.497,208,0.355,211,0.29,213,1.057,214,0.538,220,0.491,245,0.393,251,0.89,255,0.389,260,0.393,271,2.089,273,0.433,276,2.969,307,1.49,308,1.674,309,0.299,321,0.411,323,0.36,324,1.59,325,2.337,328,0.481,339,0.964,351,0.734,356,0.638,365,0.58,368,1.357,371,0.481,373,1.046,385,3.846,387,2.002,393,0.887,395,0.312,414,0.911,415,0.995,420,0.74,432,0.6,437,0.421,452,0.703,459,0.267,465,0.269,468,1.163,473,0.201,474,0.728,479,0.345,485,0.541,492,0.481,501,0.597,503,1.102,542,0.933,551,0.446,577,0.867,578,0.774,582,0.308,598,0.933,599,1.504,606,1.825,613,0.481,631,0.809,634,0.462,655,0.36,656,1.602,657,1.23,663,0.453,676,1.21,679,0.35,681,0.393,682,0.505,683,2.7,686,0.433,702,2.474,703,0.748,731,1.14,735,0.421,739,1.343,740,0.857,748,1.636,761,0.317,762,0.312,774,2.85,780,0.416,782,0.328,790,0.709,801,2.13,802,0.303,804,1.484,812,0.768,817,1.114,818,3.5,823,2.348,846,0.416,857,1.07,859,1.114,871,2.937,897,0.421,940,2.817,950,0.673,955,0.446,963,2.694,968,1.511,969,0.433,972,0.411,973,4.7,974,0.402,979,0.446,986,0.659,1001,1.281,1002,0.355,1012,1.102,1014,3.406,1016,0.369,1017,2.31,1019,1.727,1022,0.462,1024,0.809,1025,0.904,1026,1.825,1027,3.546,1028,2.859,1043,0.481,1073,1.86,1074,0.366,1094,0.402,1096,1.362,1106,1.218,1107,0.439,1118,1.84,1153,0.366,1170,1.417,1172,1.08,1184,1.281,1189,0.924,1192,0.363,1196,1,1203,2.17,1207,1.916,1210,1.491,1226,0.3,1232,1.35,1253,2.311,1269,1.674,1299,0.924,1306,2.189,1317,1.015,1318,0.411,1320,0.764,1337,0.372,1339,1.024,1355,0.446,1356,0.971,1388,1.168,1393,1.114,1408,0.809,1456,1.033,1493,0.338,1631,3.108,1644,2.796,1657,0.36,1667,0.764,1704,0.663,1732,0.421,1746,1.985,1749,0.677,1868,0.411,1879,1.362,1917,0.741,1953,0.397,1962,0.505,1963,0.924,2041,2.17,2153,1.168,2203,2.13,2207,0.393,2222,0.857,2228,0.709,2231,1.811,2236,0.317,2247,0.764,2251,0.538,2252,4.501,2254,0.764,2256,2.301,2257,0.481,2281,1.214,2309,0.433,2318,0.481,2333,1.616,2342,5.154,2352,0.255,2354,1.168,2376,0.427,2379,0.734,2381,3.183,2383,1.091,2398,5.091,2406,0.397,2449,0.604,2491,1.658,2494,1.364,2499,0.411,2541,0.58,2560,1.05,2562,5.425,2572,3.784,2588,0.411,2590,0.52,2593,0.857,2595,0.481,2600,0.446,2604,0.406,2605,0.416,2616,0.832,2656,0.505,2658,4.698,2660,0.97,2664,3.944,2668,2.839,2674,0.538,2676,0.538,2677,0.97,2678,0.97,2689,1.691,2691,1.542,2728,0.945,2740,0.416,2744,1.258,2760,0.462,2765,1.281,2766,2.874,2771,0.772,2781,1.333,2790,1.918,2806,1.402,2807,0.772,2810,1.402,2840,2.223,2841,2.396,2853,1.4,2860,1.799,2872,0.809,2877,0.832,2880,0.924,2881,0.924,2882,0.97,2883,1.4,2887,0.505,2888,1.4,2891,0.505,2892,0.505,2893,1.4,2894,0.505,2895,0.505,2905,0.505,2907,0.505,2908,1.4,2909,0.505,2911,0.505,2912,2.17,2913,0.505,2914,2.839,2917,0.505,2918,1.4,2919,2.17,2922,0.924,2927,0.97,2928,0.857,2929,0.97,2930,1.799,2931,1.799,2932,0.97,2933,0.97,2935,0.505,2936,0.505,2946,2.17,2948,0.505,2953,0.97,2954,1.799,2955,2.17,2956,0.97,2957,0.97,2958,0.97,2964,0.97,2965,0.97,2966,2.17,2967,0.97,2972,0.97,2973,2.515,3004,1.033,3018,0.481,3019,0.97,3037,0.439,3041,0.809,3043,0.505,3044,0.97,3047,1.4,3048,1.4,3113,0.462,3114,0.462,3115,0.844,3116,0.505,3117,1.799,3122,1.281,3123,1.281,3124,2.515,3126,1.491,3128,1.4,3131,0.97,3132,2.515,3134,0.505,3135,0.97,3143,0.416,3152,0.433,3275,0.638,3529,0.832,3668,0.999,3912,0.462,4011,1.033,4042,0.741,4075,0.481,4121,0.505,4136,0.446,4265,0.505,4302,0.492,4309,0.52,4406,0.505,4409,2.703,4543,0.904,4692,0.887,5087,0.887,5274,0.492,5388,0.505,5411,1.799,5412,1.799,5417,1.916,5442,1.033,5469,0.999,5499,1.4,5530,1.033,5653,0.538,5879,0.505,6077,0.59,6078,2.538,6079,0.59,6080,0.59,6081,0.59,6082,0.59,6083,0.59,6084,0.59,6085,0.59,6086,0.59,6087,0.59,6088,0.59,6089,0.59,6090,2.538,6091,0.59,6092,0.59,6093,0.59,6094,0.59,6095,0.59,6096,0.59,6097,0.59,6098,0.59,6099,0.59,6100,0.59,6101,0.59,6102,0.59,6103,0.59,6104,0.59,6105,0.59,6106,1.134,6107,1.637,6108,1.134,6109,0.59,6110,0.59,6111,0.59,6112,1.637,6113,1.134,6114,1.637,6115,2.104,6116,2.104,6117,2.104,6118,1.134,6119,0.59,6120,0.59,6121,0.59,6122,0.59,6123,0.59,6124,1.134,6125,0.59,6126,0.59,6127,1.637,6128,1.637,6129,1.637,6130,1.637,6131,1.637,6132,0.59,6133,0.59,6134,0.59,6135,0.59,6136,0.59,6137,0.59,6138,0.59,6139,0.59,6140,0.59,6141,0.59,6142,0.59,6143,0.59,6144,0.59,6145,0.59,6146,0.59,6147,0.59,6148,0.59,6149,0.59,6150,0.59,6151,0.59,6152,0.59,6153,2.104,6154,1.134,6155,1.134,6156,1.134,6157,1.637,6158,0.59,6159,1.134,6160,0.59,6161,0.59,6162,0.59,6163,0.59,6164,0.59,6165,0.59,6166,1.134,6167,0.59,6168,0.59,6169,0.59,6170,0.59,6171,0.59,6172,0.59,6173,0.59,6174,0.59,6175,0.59,6176,0.59,6177,0.59,6178,0.59,6179,0.59,6180,0.59,6181,0.59,6182,0.59,6183,0.59,6184,1.134,6185,0.59,6186,0.59,6187,0.59,6188,0.59,6189,1.134,6190,1.134,6191,0.59,6192,1.134,6193,1.134,6194,1.134,6195,1.134,6196,1.134,6197,1.134,6198,1.134,6199,1.134,6200,0.59,6201,1.134,6202,0.59,6203,1.033,6204,1.134,6205,0.59,6206,0.59,6207,0.59,6208,1.134,6209,0.59,6210,1.637,6211,1.637,6212,1.134,6213,0.59,6214,1.134,6215,0.59,6216,1.134,6217,1.134,6218,1.134,6219,0.59,6220,0.471,6221,0.52,6222,1.637,6223,0.59,6224,0.59,6225,0.59,6226,0.59,6227,0.59,6228,0.59,6229,0.59,6230,0.59,6231,0.59,6232,0.59,6233,0.59,6234,0.59,6235,1.134,6236,0.59,6237,0.59,6238,0.59,6239,1.134,6240,0.59,6241,0.59,6242,0.59,6243,0.59,6244,0.59,6245,0.59,6246,0.59,6247,0.59,6248,0.59,6249,1.134,6250,1.134,6251,1.134,6252,0.59,6253,1.134,6254,0.59,6255,0.59,6256,1.134,6257,0.59,6258,0.59,6259,0.59,6260,1.134,6261,1.134,6262,0.59,6263,1.134,6264,0.59,6265,0.59,6266,1.134,6267,0.59,6268,0.59,6269,0.59,6270,0.59,6271,0.59]],["component/171",[68,0.364]],["title/172-1",[0,22.482,725,56.2]],["name/172-1",[]],["text/172-1",[]],["component/172-1",[]],["title/172-2",[151,27.731,302,49.562]],["name/172-2",[]],["text/172-2",[]],["component/172-2",[]],["title/172-3",[152,25.623,354,33.579,473,21.709]],["name/172-3",[]],["text/172-3",[]],["component/172-3",[]],["title/172-4",[361,33.242,956,42.494,1635,39.236]],["name/172-4",[]],["text/172-4",[]],["component/172-4",[]],["title/172-5",[50,26.007,259,28.099,956,42.494]],["name/172-5",[]],["text/172-5",[]],["component/172-5",[]],["title/172",[84,30.173,111,30.01,956,37.19,6272,47.712]],["name/172",[353,0.58,956,0.784]],["text/172",[0,3.186,5,0.656,8,0.858,15,1.134,19,2.318,27,1.695,32,0.991,57,0.948,62,1.607,64,1.941,66,1.711,67,3.042,72,1.987,75,1.427,76,0.531,78,2.054,80,2.118,84,3.689,92,1.235,96,3.037,97,2.799,101,3.991,102,3.969,104,2.187,107,4.75,111,5.751,119,2.378,121,3.63,122,2.863,126,0.931,129,1.487,137,4.821,151,2.012,152,1.793,156,0.927,157,5.501,160,3.432,174,5.048,177,1.543,184,3.949,188,4.984,192,2.181,193,0.948,196,1.018,203,0.855,211,3.623,213,1.382,217,1.336,219,0.957,220,1.933,224,2.646,251,1.802,276,3.983,288,4.032,290,1.18,298,3.463,302,5.521,303,5.023,304,4.377,308,0.944,309,0.948,320,1.054,327,0.966,330,1.464,351,0.839,353,4.429,354,5.463,358,3.037,360,3.672,361,5.841,414,1.041,415,0.885,437,1.336,465,1.509,473,1.519,564,2.492,570,5.223,578,2.11,597,0.991,598,3.075,628,2.35,631,2.365,656,0.903,713,2.725,725,2.505,734,3.85,739,3.266,760,1.414,762,0.991,792,3.106,802,0.962,808,4.112,846,1.319,872,5.72,874,3.672,877,6.016,879,6.586,880,5.578,881,5.765,916,1.833,926,4.826,956,5.24,965,1.728,970,1.855,1034,2.365,1356,2.646,1373,1.19,1496,1.161,1631,2.21,1685,1.223,1754,2.431,1755,1.6,1756,1.464,1762,2.593,1763,2.466,1764,2.127,1765,4.146,1767,6.15,1769,2.593,1770,4.22,1771,2.593,1772,2.593,1773,2.593,1774,2.431,1779,4.868,1781,1.524,1782,1.464,1784,1.414,1785,1.274,1786,1.464,1810,1.6,1818,1.6,2037,2.308,2058,4.403,2137,1.524,2212,1.134,4334,1.6,4443,2.505,6220,1.492,6273,1.872,6274,2.699,6275,2.699,6276,1.524,6277,6.824,6278,6.171,6279,4.463,6280,5.024,6281,1.872,6282,1.872]],["component/172",[68,0.364]],["title/173-1",[0,13.5,78,20.551,366,27.698,367,26.48,867,31.088,1631,22.113]],["name/173-1",[]],["text/173-1",[]],["component/173-1",[]],["title/173-2",[151,23.776,1631,31.574,2058,45.497]],["name/173-2",[]],["text/173-2",[]],["component/173-2",[]],["title/173-3",[537,56.2,2112,54.524]],["name/173-3",[]],["text/173-3",[]],["component/173-3",[]],["title/173-4",[538,56.2,6283,58.169]],["name/173-4",[]],["text/173-4",[]],["component/173-4",[]],["title/173-5",[539,60.556,6284,58.169]],["name/173-5",[]],["text/173-5",[]],["component/173-5",[]],["title/173-6",[540,63.585,6285,60.556]],["name/173-6",[]],["text/173-6",[]],["component/173-6",[]],["title/173-7",[541,60.556,6286,60.556]],["name/173-7",[]],["text/173-7",[]],["component/173-7",[]],["title/173-8",[361,33.242,2314,49.873,6567,63.769]],["name/173-8",[]],["text/173-8",[]],["component/173-8",[]],["title/173",[97,38.58,366,46.127]],["name/173",[353,0.58,2314,0.92]],["text/173",[0,2.459,19,1.472,23,1.356,53,0.698,57,1.291,64,2.229,71,0.653,72,0.622,76,1.894,78,1.173,79,1.056,80,2.685,84,2.725,96,2.837,97,3.213,101,3.623,104,0.922,111,2.711,113,1.972,121,1.356,122,3.234,126,0.695,128,1.85,129,1.143,131,3.469,134,0.616,137,0.607,146,0.732,148,1.378,151,0.521,152,2.025,153,3.499,156,2.496,157,4.209,163,0.645,174,3.444,184,3.565,188,5.471,190,0.663,191,0.655,192,1.245,203,1.164,211,3.671,213,0.582,224,2.989,230,2.57,289,0.866,304,2.989,308,0.704,309,2.195,336,0.782,351,0.627,352,0.922,353,3.857,354,4.811,357,3.164,358,3.43,360,3.43,361,4.078,367,1.511,398,3.427,405,0.904,415,0.661,443,5.213,445,3.294,473,1.925,479,0.817,570,3.566,582,0.728,598,0.796,599,0.714,604,0.881,628,2.654,656,2.092,689,0.931,713,3.782,739,3.279,744,2.439,753,0.931,774,0.655,782,0.777,792,3.509,799,1.665,802,1.805,872,5.076,873,0.931,874,6.068,877,4.933,878,4.542,879,7.726,880,6.738,881,6.985,1191,0.873,1496,1.23,1631,3.067,1685,0.913,1776,4.845,1778,5.735,1779,1.818,1920,1.137,2027,1.194,2037,1.774,2058,6.007,2076,1.137,2087,3.177,2112,4.146,2164,5.912,2314,4.845,2601,1.056,4331,2.075,4443,1.056,4984,4.273,4988,3.275,5966,1.056,6274,4.104,6275,5.044,6276,4.104,6283,2.748,6284,3.39,6285,3.529,6286,2.861,6287,1.397,6288,1.272,6289,3.004,6290,1.272,6291,1.272,6292,2.179,6293,6.119,6294,4.31,6295,3.004,6296,3.947,6297,3.705,6298,3.947,6299,3.705,6300,3.2,6301,6.464,6302,3.705,6303,3.2,6304,6.624,6305,3.004,6306,3.004,6307,5.433,6308,3.004,6309,3.004,6310,2.075,6311,2.179,6312,7.146,6313,2.321,6314,2.321,6315,3.004,6316,2.075,6317,4.591,6318,1.272,6319,3.2,6320,5.433,6321,2.179,6322,5.433,6323,3.456,6324,1.272,6325,1.272,6326,1.272,6327,2.179,6328,2.179,6329,1.272,6330,1.194,6331,1.397,6332,1.194,6333,1.194,6334,1.194,6335,1.272,6336,2.548,6337,1.194,6338,1.272]],["component/173",[68,0.364]],["title/174-1",[0,19.276,69,37.293,84,34.476]],["name/174-1",[]],["text/174-1",[]],["component/174-1",[]],["title/174",[69,32.638,84,30.173,97,28.949,111,30.01]],["name/174",[353,0.58,6339,1.177]],["text/174",[0,3.258,19,3.66,34,2.008,55,2.161,58,2.555,61,2.309,62,2.058,69,2.484,70,7.166,71,1.985,74,2.362,75,4.917,76,2.566,80,5.802,82,4.928,84,6.178,87,3.407,97,2.203,101,4.698,102,4.861,103,7.07,107,8.508,108,9.951,111,5.795,119,1.872,121,6.211,123,3.282,124,2.86,126,4.496,129,4.054,137,1.846,139,3.631,140,3.631,146,4.208,153,3.238,188,4.382,190,3.118,201,3.368,248,2.192,256,5.027,321,2.956,356,2.39,415,3.106,485,2.024,591,3.322,676,2.024,734,3.03,744,2.39,745,2.83,761,2.284,786,2.309,790,2.656,808,4.377,926,3.322,956,5.353,965,4.712,1164,3.697,1495,3.03,1874,2.923,2501,2.484,3833,3.322,6272,5.616,6340,8.033,6341,4.247,6342,4.247,6343,4.247,6344,4.247]],["component/174",[68,0.364]],["title/175-1",[0,22.482,355,43.207]],["name/175-1",[]],["text/175-1",[]],["component/175-1",[]],["title/175-2",[151,23.776,219,32.602,744,35.891]],["name/175-2",[]],["text/175-2",[]],["component/175-2",[]],["title/175-3",[537,42.171,744,31.411,1631,27.633,1705,21.975]],["name/175-3",[]],["text/175-3",[]],["component/175-3",[]],["title/175-4",[538,48.185,744,35.891,1496,22.333]],["name/175-4",[]],["text/175-4",[]],["component/175-4",[]],["title/175-5",[119,28.099,152,25.623,353,31.435]],["name/175-5",[]],["text/175-5",[]],["component/175-5",[]],["title/175-6",[50,22.761,353,27.512,950,33.09,1192,34.339]],["name/175-6",[]],["text/175-6",[]],["component/175-6",[]],["title/175-7",[123,22.311,167,25.448,253,26.48,353,22.016,354,23.517,744,25.136]],["name/175-7",[]],["text/175-7",[]],["component/175-7",[]],["title/175-8",[153,27.512,353,27.512,877,35.187,1157,45.439]],["name/175-8",[]],["text/175-8",[]],["component/175-8",[]],["title/175-9",[122,47.714,2370,51.773]],["name/175-9",[]],["text/175-9",[]],["component/175-9",[]],["title/175-10",[96,41.861,3102,60.556]],["name/175-10",[]],["text/175-10",[]],["component/175-10",[]],["title/175-11",[872,43.496,6631,67.738]],["name/175-11",[]],["text/175-11",[]],["component/175-11",[]],["title/175-12",[147,32.917,753,42.494,1496,22.333]],["name/175-12",[]],["text/175-12",[]],["component/175-12",[]],["title/175-13",[174,38.392,6633,67.738]],["name/175-13",[]],["text/175-13",[]],["component/175-13",[]],["title/175-14",[739,39.366,6634,67.738]],["name/175-14",[]],["text/175-14",[]],["component/175-14",[]],["title/175-15",[361,38.771,2804,60.556]],["name/175-15",[]],["text/175-15",[]],["component/175-15",[]],["title/175-16",[473,25.32,6828,80.145]],["name/175-16",[]],["text/175-16",[]],["component/175-16",[]],["title/175-17",[248,32.917,367,37.809,1496,22.333]],["name/175-17",[]],["text/175-17",[]],["component/175-17",[]],["title/175-18",[174,38.392,6826,74.376]],["name/175-18",[]],["text/175-18",[]],["component/175-18",[]],["title/175-19",[739,39.366,6827,74.376]],["name/175-19",[]],["text/175-19",[]],["component/175-19",[]],["title/175-20",[361,38.771,6829,80.145]],["name/175-20",[]],["text/175-20",[]],["component/175-20",[]],["title/175-21",[473,25.32,6830,80.145]],["name/175-21",[]],["text/175-21",[]],["component/175-21",[]],["title/175-22",[680,38.64,956,42.494,1496,22.333]],["name/175-22",[]],["text/175-22",[]],["component/175-22",[]],["title/175-23",[174,38.392,6831,80.145]],["name/175-23",[]],["text/175-23",[]],["component/175-23",[]],["title/175-24",[739,39.366,6832,80.145]],["name/175-24",[]],["text/175-24",[]],["component/175-24",[]],["title/175-25",[361,38.771,6833,80.145]],["name/175-25",[]],["text/175-25",[]],["component/175-25",[]],["title/175-26",[473,25.32,6834,80.145]],["name/175-26",[]],["text/175-26",[]],["component/175-26",[]],["title/175",[353,36.664,744,41.861]],["name/175",[353,0.401,744,0.458,877,0.513]],["text/175",[0,2.152,6,0.305,8,0.715,10,0.34,15,0.34,18,0.319,19,2.067,23,0.298,25,1.975,27,1.241,28,0.867,31,1.229,32,3.004,34,0.51,39,0.675,40,0.264,42,0.315,50,0.44,53,1.004,55,1.62,57,2.52,61,1.092,62,1.176,63,0.377,64,2.042,65,0.577,66,1.253,67,1.739,71,0.262,72,0.481,75,2.347,76,0.689,78,1.117,80,3.15,84,2.248,87,3.914,92,0.37,96,3.92,97,2.306,101,2.063,102,3.474,104,2.328,105,0.923,107,2.456,111,4.661,112,0.51,113,0.71,114,0.424,115,0.312,118,0.377,119,0.476,121,3.787,122,4.661,126,0.279,128,1.677,129,0.484,134,0.247,137,3.847,146,0.565,148,1.086,151,1.436,152,0.434,153,1.57,157,6.045,158,0.669,159,0.611,163,1.471,164,0.649,165,1.113,167,0.615,174,4.962,177,1.13,178,0.907,180,0.479,184,3.463,185,1.615,188,4.914,189,0.697,190,0.741,191,0.506,192,2.032,196,1.092,200,0.317,201,2.552,203,0.713,206,0.285,211,3.566,213,1.327,217,0.77,220,0.243,224,1.439,228,0.669,230,0.64,248,0.557,249,0.734,251,0.305,253,0.64,255,0.37,256,1.567,271,0.292,276,0.547,287,0.323,289,4.506,290,0.353,298,2.761,300,1.001,302,1.04,304,2.636,305,1.325,307,0.284,308,1.421,309,1.229,310,0.438,315,0.51,320,1.586,322,1.961,327,0.289,335,0.456,336,1.781,339,0.919,346,0.366,348,0.627,351,0.7,352,1.03,353,3.846,354,5.096,356,1.131,358,1.062,359,0.815,361,5.71,362,0.844,365,0.798,366,0.348,367,4.699,368,1.298,370,1.02,371,0.456,373,0.279,382,0.815,385,0.763,395,1.063,398,0.654,404,0.791,405,0.699,406,1.779,407,0.923,414,0.6,415,0.51,420,0.487,443,0.373,445,1.02,453,0.33,465,0.71,466,0.615,467,0.51,468,0.257,473,2.004,474,0.36,479,1.648,485,0.514,505,0.983,543,0.635,559,0.279,561,0.292,562,0.424,564,1.92,570,3.837,573,0.39,578,2.469,594,0.411,598,0.319,599,0.287,604,0.984,606,0.593,614,0.456,628,2.62,629,1.473,631,1.731,656,0.27,657,1.862,668,0.353,670,0.337,680,0.34,683,0.35,686,0.411,689,1.339,713,0.953,719,1.449,722,3.013,725,0.815,729,0.456,730,0.424,732,0.417,734,1.433,736,0.447,737,1.518,738,0.263,739,4.257,744,4.46,745,3.144,748,0.6,751,0.386,752,2.294,753,4.056,760,0.424,774,0.263,778,0.664,790,0.35,799,0.705,801,1.557,804,1.648,807,1.421,808,2.122,812,0.942,822,0.734,859,0.381,863,0.983,867,1.398,872,6.716,873,0.373,874,6.902,877,5.142,878,3.259,879,2.824,880,1.518,881,3.648,896,0.479,897,0.77,899,0.39,908,1.421,916,1.951,926,1.571,943,0.4,951,0.377,952,1.313,956,2.77,965,0.292,968,0.288,972,1.086,1002,0.649,1157,0.456,1164,0.315,1182,0.381,1191,0.976,1196,0.342,1229,0.353,1254,0.348,1298,0.705,1324,0.791,1356,0.332,1383,0.879,1443,1.571,1496,0.703,1631,0.773,1657,0.659,1659,0.438,1685,1.02,1705,0.425,1745,0.635,1748,1.144,1749,0.335,1751,0.417,1754,0.411,1778,2.334,1779,6.762,1794,2.204,1805,0.411,1811,1.334,1815,0.923,1859,2.409,1861,0.51,1864,0.844,1865,0.51,1879,1.3,1880,0.438,1919,1.062,1948,0.51,1975,1.421,2027,0.479,2059,4.297,2076,4.052,2110,3.293,2112,1.473,2137,0.456,2143,2.593,2164,0.815,2169,0.923,2314,1.571,2438,0.381,2501,0.631,2587,0.39,2601,1.179,2614,0.479,2746,0.417,2770,0.456,2773,0.968,2783,0.438,2787,0.301,3012,0.879,3190,2.036,3601,0.456,3636,0.479,3975,0.479,4123,0.456,4221,0.456,4286,0.467,4409,0.879,4430,1.334,4592,0.479,4884,1.421,4984,0.424,4988,0.424,5594,0.51,6272,1.334,6280,2.593,6283,0.438,6284,0.438,6289,3.016,6292,0.479,6293,1.221,6299,0.479,6301,0.51,6302,0.479,6304,0.879,6307,0.879,6312,0.844,6316,0.879,6320,0.879,6322,0.879,6323,0.86,6330,5.816,6352,0.532,6353,0.56,6354,0.56,6355,0.56,6356,1.079,6357,3.184,6358,2.427,6359,2.566,6360,4.049,6361,1.079,6362,0.56,6363,0.56,6364,0.56,6365,0.56,6366,0.56,6367,1.079,6368,0.51,6369,0.51,6370,0.56,6371,1.079,6372,1.079,6373,1.079,6374,0.56,6375,0.56,6376,0.56,6377,0.532,6378,0.56,6379,0.56,6380,0.56,6381,0.56,6382,0.56,6383,0.56,6384,1.561,6385,1.079,6386,3.852,6387,3.528,6388,0.56,6389,0.56,6390,0.56,6391,1.755,6392,0.51,6393,1.079,6394,2.566,6395,1.561,6396,2.075,6397,2.427,6398,1.079,6399,0.56,6400,0.56,6401,0.56,6402,1.561,6403,0.983,6404,2.009,6405,1.561,6406,0.983,6407,1.079,6408,0.56,6409,1.079,6410,0.56,6411,0.56,6412,3.184,6413,3.528,6414,0.983,6415,1.561,6416,0.983,6417,0.983,6418,1.079,6419,0.56,6420,0.51,6421,1.561,6422,1.079,6423,1.079,6424,1.079,6425,0.51,6426,0.51,6427,0.51,6428,1.334,6429,0.56,6430,0.56,6431,0.479,6432,2.009,6433,1.079,6434,0.56,6435,1.561,6436,1.561]],["component/175",[68,0.364]],["title/176-1",[0,22.482,355,43.207]],["name/176-1",[]],["text/176-1",[]],["component/176-1",[]],["title/176-2",[151,20.809,353,27.512,1316,36.468,1710,43.649]],["name/176-2",[]],["text/176-2",[]],["component/176-2",[]],["title/176-3",[224,44.099,537,56.2]],["name/176-3",[]],["text/176-3",[]],["component/176-3",[]],["title/176-4",[224,29.418,1893,37.492,6437,49.617,6438,49.617,6439,45.188]],["name/176-4",[]],["text/176-4",[]],["component/176-4",[]],["title/176-5",[109,46.127,6440,74.376]],["name/176-5",[]],["text/176-5",[]],["component/176-5",[]],["title/176-6",[1863,67.414]],["name/176-6",[]],["text/176-6",[]],["component/176-6",[]],["title/176-7",[1898,69.775]],["name/176-7",[]],["text/176-7",[]],["component/176-7",[]],["title/176-8",[1881,67.414]],["name/176-8",[]],["text/176-8",[]],["component/176-8",[]],["title/176-9",[1862,56.2,6441,74.376]],["name/176-9",[]],["text/176-9",[]],["component/176-9",[]],["title/176-10",[2029,67.414]],["name/176-10",[]],["text/176-10",[]],["component/176-10",[]],["title/176-11",[1866,67.414]],["name/176-11",[]],["text/176-11",[]],["component/176-11",[]],["title/176-12",[538,56.2,1893,56.2]],["name/176-12",[]],["text/176-12",[]],["component/176-12",[]],["title/176-13",[354,39.164,539,60.556]],["name/176-13",[]],["text/176-13",[]],["component/176-13",[]],["title/176-14",[353,27.512,354,29.388,361,29.093,6442,50.829]],["name/176-14",[]],["text/176-14",[]],["component/176-14",[]],["title/176-15",[354,33.579,359,48.185,6443,58.078]],["name/176-15",[]],["text/176-15",[]],["component/176-15",[]],["title/176-16",[354,33.579,877,40.205,6444,58.078]],["name/176-16",[]],["text/176-16",[]],["component/176-16",[]],["title/176-17",[540,63.585,872,43.496]],["name/176-17",[]],["text/176-17",[]],["component/176-17",[]],["title/176-18",[354,29.388,541,45.439,561,29.093,606,30.682]],["name/176-18",[]],["text/176-18",[]],["component/176-18",[]],["title/176-19",[28,32.112,152,29.885]],["name/176-19",[]],["text/176-19",[]],["component/176-19",[]],["title/176",[353,43.98]],["name/176",[353,0.58,6445,1.177]],["text/176",[0,0.941,4,0.607,5,0.911,10,0.455,14,0.342,18,2.286,19,2.977,23,0.4,27,2.619,34,0.966,40,0.962,50,0.833,53,1.02,55,2.041,57,1.576,58,1.564,59,2.013,61,3.121,62,2.637,63,0.506,64,2.26,65,2.74,66,0.388,67,1.007,69,1.194,70,0.551,72,0.636,73,0.804,75,1.898,76,1.138,78,3.005,80,0.357,82,0.72,84,1.104,87,3.507,93,0.943,95,0.551,96,3.675,97,2.657,101,0.835,102,4.255,104,3.38,107,0.523,109,4.579,110,2.117,111,2.157,113,0.65,116,0.551,118,1.375,119,1.943,121,2.896,122,3.286,124,2.41,128,1.638,129,0.916,136,0.462,137,0.621,146,2.31,148,1.406,151,1.335,152,0.302,156,1.288,157,3.725,158,0.886,160,0.795,161,3.935,165,1.019,174,3.243,176,0.501,177,2.053,178,2.08,179,1.986,180,2.672,181,2.384,183,0.917,184,3.692,185,2.927,186,0.442,188,4.479,189,0.913,190,1.235,191,2.403,192,2.66,193,2.032,196,0.408,200,1.473,201,1.501,204,0.511,206,0.727,208,0.859,209,0.536,211,2.955,213,1.672,215,0.536,217,0.536,218,1.39,219,0.384,220,0.325,224,6.942,247,0.588,249,0.972,251,1.946,253,0.847,256,1.446,257,0.529,258,0.379,267,0.588,271,0.745,289,3.177,290,0.901,291,0.72,298,1.679,301,0.511,302,0.501,303,0.511,305,0.496,306,0.517,307,1.034,308,1.03,309,0.381,312,1.422,313,0.847,317,0.853,320,1.751,321,0.523,322,0.523,325,0.381,327,1.054,336,0.42,346,1.699,348,0.436,351,1.395,352,1.347,353,5.258,354,5.752,355,1.511,356,2.015,357,4.516,358,4.751,359,3.611,360,3.486,361,3.849,362,0.588,365,1.33,366,0.466,368,1.664,370,1.334,373,0.374,376,2.769,382,0.568,385,0.367,388,0.418,395,0.398,400,0.983,406,0.551,407,0.642,414,0.418,415,1.23,420,0.339,432,0.398,435,0.886,438,4.545,445,0.491,450,1.39,459,0.923,465,0.65,466,1.164,473,1.501,478,0.879,485,0.681,486,1.31,489,0.559,503,0.506,510,0.408,542,0.428,543,0.841,547,1.655,549,0.853,561,2.091,564,1.201,565,0.501,569,1.597,570,2.257,571,1.497,573,0.523,577,0.398,578,0.355,582,0.392,598,1.482,604,0.901,606,2.424,613,0.612,616,0.559,628,1.885,655,0.872,668,0.901,670,0.452,683,0.47,685,0.642,707,1.405,709,0.713,713,0.459,715,3.061,719,1.858,730,1.079,731,0.523,734,1.019,736,0.599,738,0.352,739,2.123,740,1.543,745,0.501,746,0.577,748,1.136,751,1.79,761,0.768,778,1.6,804,0.835,808,2.073,812,0.352,813,0.684,822,0.511,830,0.482,848,0.496,849,1.301,850,0.588,872,4.809,873,1.361,874,0.511,877,3.796,878,1.497,882,0.943,897,0.536,899,2.492,901,0.455,925,0.559,926,1.117,950,0.445,951,0.506,952,2.033,966,0.466,968,0.386,972,0.523,976,1.033,977,0.994,985,0.599,993,1.476,996,0.482,999,0.568,1017,2.359,1018,0.511,1060,0.588,1153,0.466,1156,1.519,1157,0.612,1179,0.568,1182,0.511,1196,0.872,1205,0.612,1209,0.506,1229,0.474,1234,1.007,1254,0.466,1335,0.517,1339,1.626,1377,1.079,1383,0.612,1442,0.511,1658,0.983,1666,0.511,1673,0.588,1674,0.642,1706,1.856,1707,0.612,1709,0.466,1714,0.612,1732,0.536,1745,1.832,1746,1.597,1747,0.612,1748,1.047,1749,2.854,1754,0.551,1776,0.588,1778,1.907,1779,2.862,1780,0.684,1783,2.862,1787,0.642,1801,0.568,1859,1.221,1860,0.612,1862,4.934,1863,3.871,1864,1.597,1866,2.705,1867,1.221,1868,1.81,1869,0.642,1877,0.486,1878,1.033,1880,2.034,1881,2.351,1885,3.891,1891,1.86,1893,7.928,1897,0.684,1898,1.597,1899,0.684,1900,0.684,1901,0.612,1916,1.221,1917,0.491,1919,0.972,1924,0.684,1967,0.536,2029,2.351,2031,1.221,2032,0.612,2034,0.684,2164,0.568,2178,1.597,2207,2.073,2208,0.83,2216,1.221,2236,1.399,2238,0.612,2241,0.511,2272,0.496,2298,0.612,2321,1.301,2322,1.301,2323,0.684,2353,0.642,2388,0.612,2409,0.684,2418,0.466,2438,0.972,2595,0.612,2596,0.559,2684,0.588,2708,0.599,2742,1.422,2746,1.063,2866,0.523,3020,0.577,3115,1.063,3214,0.568,3551,0.501,3757,1.19,3862,0.612,4075,0.612,4120,0.642,4136,0.568,4161,1.163,4274,0.642,4307,0.642,4412,1.221,4446,1.663,4543,0.599,4984,0.568,4988,1.079,5227,0.684,5304,0.684,5732,1.746,5798,0.684,6050,0.684,6203,0.684,6221,1.258,6280,1.163,6293,1.597,6310,0.612,6312,2.034,6394,0.684,6396,1.221,6420,1.301,6428,0.642,6439,4.957,6446,0.751,6447,0.751,6448,0.751,6449,0.751,6450,0.751,6451,0.751,6452,0.751,6453,0.751,6454,0.751,6455,0.751,6456,3.58,6457,0.751,6458,0.751,6459,0.751,6460,0.751,6461,0.751,6462,1.429,6463,0.751,6464,0.751,6465,0.751,6466,0.713,6467,0.713,6468,0.751,6469,0.713,6470,0.751,6471,0.751,6472,0.751,6473,0.751,6474,0.751,6475,0.751,6476,0.751,6477,0.751,6478,0.751,6479,0.751,6480,0.751,6481,0.751,6482,0.751,6483,0.751,6484,2.601,6485,0.751,6486,0.751,6487,0.751,6488,1.429,6489,0.751,6490,2.042,6491,0.751,6492,0.751,6493,0.751,6494,0.751,6495,0.751,6496,0.751,6497,0.751,6498,0.751,6499,0.751,6500,0.751,6501,0.751,6502,0.751,6503,0.751,6504,0.751]],["component/176",[68,0.364]],["title/177-1",[0,16.87,752,45.439,867,38.849,1631,27.633]],["name/177-1",[]],["text/177-1",[]],["component/177-1",[]],["title/177-2",[151,20.809,753,37.19,867,38.849,1496,19.545]],["name/177-2",[]],["text/177-2",[]],["component/177-2",[]],["title/177-3",[152,25.623,2058,45.497,6391,46.102]],["name/177-3",[]],["text/177-3",[]],["component/177-3",[]],["title/177-4",[1635,45.762,6505,67.738]],["name/177-4",[]],["text/177-4",[]],["component/177-4",[]],["title/177-5",[1636,47.296,6506,67.738]],["name/177-5",[]],["text/177-5",[]],["component/177-5",[]],["title/177-6",[1637,50.614,2155,63.585]],["name/177-6",[]],["text/177-6",[]],["component/177-6",[]],["title/177-7",[1262,50.614,6507,67.738]],["name/177-7",[]],["text/177-7",[]],["component/177-7",[]],["title/177-8",[2554,58.169,6509,67.738]],["name/177-8",[]],["text/177-8",[]],["component/177-8",[]],["title/177-9",[323,45.409,2557,60.556]],["name/177-9",[]],["text/177-9",[]],["component/177-9",[]],["title/177-10",[2559,67.738,6512,67.738]],["name/177-10",[]],["text/177-10",[]],["component/177-10",[]],["title/177-11",[2561,67.738,6514,67.738]],["name/177-11",[]],["text/177-11",[]],["component/177-11",[]],["title/177-12",[50,20.235,354,26.127,443,33.063,473,16.891,6391,35.871]],["name/177-12",[]],["text/177-12",[]],["component/177-12",[]],["title/177-13",[123,31.856,361,33.242,6391,46.102]],["name/177-13",[]],["text/177-13",[]],["component/177-13",[]],["title/177-14",[153,31.435,259,28.099,6391,46.102]],["name/177-14",[]],["text/177-14",[]],["component/177-14",[]],["title/177",[867,51.773,6391,53.771]],["name/177",[353,0.58,753,0.784]],["text/177",[0,1.524,5,0.139,8,1.456,16,0.272,19,2.367,23,0.778,27,0.748,32,0.209,34,0.364,50,0.597,57,1.48,59,0.199,61,0.215,62,0.864,64,1.23,66,1.228,67,0.879,72,0.343,75,0.629,76,0.506,78,1.976,79,1.105,80,2.132,84,1.717,87,3.241,90,0.286,96,2.635,97,0.4,101,2.266,102,3.687,104,1.177,107,0.275,109,0.245,111,2.517,113,0.512,119,0.496,121,4.125,122,2.881,123,3.054,128,1.1,129,0.8,131,2.352,137,3.166,146,1.094,148,1.129,151,1.275,152,1.881,153,1.173,156,2.126,157,5.176,158,0.698,160,0.992,163,3.167,164,2.459,165,0.803,174,3.652,184,3.777,188,5.575,190,0.366,191,0.528,192,1.021,193,0.903,201,0.323,203,0.181,211,4.008,213,0.61,216,0.536,219,0.394,220,0.334,222,0.783,224,2.663,226,0.457,230,1.576,232,1.634,247,1.634,248,0.204,256,0.22,276,1.48,280,0.513,288,1.165,289,2.264,291,0.199,298,0.361,301,0.269,302,0.264,303,1.619,304,2.546,308,1.953,309,0.39,313,0.867,320,0.434,322,0.275,323,0.47,327,0.204,330,0.309,336,2.043,346,0.259,347,0.249,352,1.177,353,4.396,354,4.817,357,2.043,358,3.056,360,4.251,361,4.551,362,0.88,365,1.068,367,0.235,368,1.117,370,0.259,395,0.596,398,0.886,405,0.256,427,0.592,435,0.478,437,0.282,443,5.046,445,5.574,458,0.454,465,0.351,473,1.529,478,0.9,479,2.511,542,0.225,563,0.486,564,0.965,565,0.264,570,3.584,577,0.209,578,0.532,582,0.402,591,0.88,597,0.209,598,0.833,605,0.627,606,0.804,621,0.338,628,2.365,631,1.698,656,1.65,689,2.724,713,1.089,719,0.873,722,0.309,739,2.272,744,1.004,745,0.264,748,0.22,752,2.164,753,4.569,762,0.209,774,0.686,782,0.428,792,3.126,808,0.513,811,0.275,846,0.279,850,0.309,867,0.275,872,6.163,873,2.993,874,5.215,876,0.36,877,4.832,878,4.675,879,6.097,880,5.094,881,5.986,955,0.299,965,0.402,970,0.431,1034,0.55,1113,0.282,1154,0.49,1170,0.266,1196,0.242,1229,0.249,1324,0.29,1356,0.457,1373,0.49,1383,1.701,1496,0.731,1631,1.034,1658,0.774,1685,0.259,1745,0.233,1748,0.565,1754,0.565,1756,0.309,1762,0.602,1763,0.573,1764,0.494,1765,1.124,1767,1.861,1769,0.602,1770,1.144,1771,0.602,1772,0.602,1773,0.602,1774,0.565,1776,2.484,1778,5.187,1779,3.596,1781,0.322,1782,0.309,1783,1.272,1784,0.299,1785,0.269,1786,0.309,1790,1.937,1793,0.962,1794,0.309,1795,0.36,1796,0.36,1798,0.36,1801,0.582,1805,0.29,1808,0.338,1810,0.338,1811,0.962,1812,0.36,1813,0.36,1814,0.702,1815,0.338,1816,1.025,1817,0.36,1818,0.338,1883,0.269,1919,0.524,1920,1.191,2037,0.275,2058,4.81,2112,0.565,2143,6.165,2155,1.525,2164,5.503,2366,0.338,2601,2.583,2772,0.282,2773,0.478,3529,0.29,3771,0.659,4127,0.338,4136,0.299,4161,0.322,4191,0.338,4443,0.582,4984,3.808,4988,2.008,5233,0.36,5966,0.582,6220,0.315,6274,3.328,6275,3.656,6276,3.328,6280,2.164,6293,4.886,6294,3.495,6295,1.525,6297,1.251,6302,0.338,6304,5.583,6305,2.923,6306,1.251,6307,4.504,6308,1.525,6309,1.525,6310,2.586,6311,1.251,6312,6.064,6314,0.36,6315,2.923,6316,2.164,6320,3.656,6321,0.962,6322,3.154,6323,1.897,6327,2.715,6328,1.525,6332,1.251,6333,1.251,6334,1.251,6337,0.962,6359,5.922,6391,1.058,6396,4.158,6406,0.702,6414,6.245,6416,4.745,6417,4.09,6431,0.338,6505,1.025,6506,1.332,6507,0.702,6509,0.702,6512,0.702,6514,0.702,6515,0.396,6516,0.36,6517,0.36,6518,0.396,6519,0.396,6520,0.375,6521,0.396,6522,0.396,6523,2.657,6524,2.089,6525,1.025,6526,0.396,6527,1.463,6528,0.396,6529,0.396,6530,0.396,6531,0.36,6532,0.396,6533,0.396,6534,0.396,6535,0.396,6536,1.125]],["component/177",[68,0.364]],["title/178-1",[0,13.5,78,20.551,366,27.698,367,26.48,867,31.088,1631,22.113]],["name/178-1",[]],["text/178-1",[]],["component/178-1",[]],["title/178-2",[78,20.551,151,16.652,366,27.698,367,26.48,867,31.088,1496,15.641]],["name/178-2",[]],["text/178-2",[]],["component/178-2",[]],["title/178-3",[152,25.623,367,37.809,2058,45.497]],["name/178-3",[]],["text/178-3",[]],["component/178-3",[]],["title/178-4",[1635,45.762,6286,60.556]],["name/178-4",[]],["text/178-4",[]],["component/178-4",[]],["title/178-5",[1636,47.296,6537,67.738]],["name/178-5",[]],["text/178-5",[]],["component/178-5",[]],["title/178-6",[1637,50.614,6538,67.738]],["name/178-6",[]],["text/178-6",[]],["component/178-6",[]],["title/178-7",[1262,50.614,6284,58.169]],["name/178-7",[]],["text/178-7",[]],["component/178-7",[]],["title/178-8",[2554,58.169,6283,58.169]],["name/178-8",[]],["text/178-8",[]],["component/178-8",[]],["title/178-9",[2112,54.524,2557,60.556]],["name/178-9",[]],["text/178-9",[]],["component/178-9",[]],["title/178-10",[594,54.524,2559,67.738]],["name/178-10",[]],["text/178-10",[]],["component/178-10",[]],["title/178-11",[2111,63.585,2561,67.738]],["name/178-11",[]],["text/178-11",[]],["component/178-11",[]],["title/178-12",[4783,70.576,6540,67.738]],["name/178-12",[]],["text/178-12",[]],["component/178-12",[]],["title/178-13",[6285,60.556,6835,80.145]],["name/178-13",[]],["text/178-13",[]],["component/178-13",[]],["title/178-14",[361,33.242,367,37.809,6836,68.715]],["name/178-14",[]],["text/178-14",[]],["component/178-14",[]],["title/178-15",[259,28.099,367,37.809,6837,68.715]],["name/178-15",[]],["text/178-15",[]],["component/178-15",[]],["title/178",[366,46.127,367,44.099]],["name/178",[353,0.58,367,0.698]],["text/178",[0,2.475,2,0.295,5,0.168,16,0.33,18,0.273,19,1.875,23,0.255,27,0.689,32,0.253,34,0.226,40,0.437,50,0.55,57,2.375,59,0.24,61,0.26,62,0.653,64,1.843,66,0.696,67,0.664,72,0.413,76,1.196,78,2.45,79,0.362,80,2.331,84,1.996,87,3.052,96,3.408,97,0.481,101,2.465,104,5.521,111,3.068,113,1.918,119,0.409,121,4.356,122,3.66,126,0.238,128,0.71,129,1.106,131,2.54,137,3.135,146,2.074,148,0.259,151,1.662,152,1.693,153,2.525,156,1.96,157,4.554,160,1.371,163,0.221,165,1.243,174,3.59,177,0.432,183,0.307,184,3.946,188,5.482,190,0.227,191,0.225,192,0.659,194,0.282,196,0.26,201,0.389,203,0.615,211,4.232,213,0.386,216,0.333,217,1.243,219,0.474,220,0.402,222,0.333,224,3.383,230,1.845,256,0.266,276,2.005,288,1.611,289,2.289,291,0.241,303,2.512,304,2.499,308,1.996,309,0.47,313,2.021,320,0.27,327,0.247,330,0.375,336,2.065,346,0.313,347,0.302,348,0.278,351,0.215,352,0.889,353,4.21,354,5.129,357,2.494,358,3.882,360,4.12,361,5.327,362,0.725,366,0.297,367,4.123,368,0.256,370,0.313,388,0.266,395,0.922,396,0.436,398,2.399,405,0.31,437,0.342,441,0.375,443,4.035,445,3.728,473,1.518,479,0.28,480,0.288,486,0.307,499,0.326,564,0.622,568,0.375,570,2.496,577,0.253,578,0.226,594,1.278,597,0.491,598,0.993,599,0.245,603,0.844,628,3.004,641,1.227,654,0.618,656,0.841,689,0.319,713,1.064,719,1.472,722,0.375,739,2.819,744,1.575,745,0.319,753,0.898,762,0.491,774,0.435,782,0.516,792,3.971,799,0.606,802,0.476,811,0.333,846,0.337,865,0.409,872,5.976,873,0.319,874,5.922,877,5.101,878,4.787,879,6.701,880,5.543,881,5.786,950,0.55,965,0.483,968,1.086,970,0.754,1009,0.342,1034,0.961,1113,0.661,1154,0.59,1191,0.299,1196,0.823,1278,0.362,1324,0.351,1356,0.55,1373,0.305,1401,0.844,1496,0.741,1631,1.96,1685,0.313,1748,0.988,1754,1.278,1755,0.409,1756,0.725,1757,0.409,1759,0.436,1760,0.409,1761,0.409,1762,1.363,1763,1.003,1764,0.865,1765,1.895,1767,2.887,1769,1.054,1770,1.929,1771,1.054,1772,1.054,1773,1.054,1774,0.988,1776,2.887,1778,4.675,1779,4.659,1782,0.725,1783,1.509,1784,0.701,1785,0.631,1786,0.725,1787,0.409,1883,0.326,1920,0.39,2035,0.362,2037,0.645,2058,4.32,2076,5.662,2087,2.051,2110,2.66,2111,0.409,2112,2.499,2164,4.819,2169,1.49,2272,0.612,2501,0.28,2601,2.789,2632,0.39,2772,1.759,3727,0.409,3902,0.409,4331,0.755,4443,0.701,4451,0.409,4984,3.185,4988,2.114,5966,0.701,6220,0.382,6274,3.005,6275,3.629,6276,3.005,6283,2.188,6284,1.654,6285,3.005,6286,2.008,6288,0.436,6289,2.66,6290,0.436,6291,0.436,6292,0.793,6293,5.641,6294,4.379,6295,2.108,6296,1.926,6297,1.49,6298,1.926,6299,1.808,6300,1.587,6303,2.246,6304,5.316,6305,1.808,6306,1.808,6307,3.005,6308,1.152,6309,1.152,6310,0.755,6311,0.793,6312,5.737,6313,1.227,6315,2.914,6316,1.419,6317,3.606,6318,0.844,6319,2.548,6320,3.818,6321,1.152,6322,3.818,6323,2.481,6324,0.436,6325,0.436,6326,1.587,6327,1.808,6328,1.808,6329,0.436,6330,6.166,6332,2.66,6333,0.409,6334,0.409,6335,0.844,6337,2.392,6338,2.548,6360,1.227,6368,0.844,6369,0.844,6392,0.436,6403,1.227,6425,1.587,6426,0.844,6427,0.844,6428,1.49,6431,0.409,6516,0.436,6517,2.834,6525,0.844,6531,0.436,6537,0.436,6538,0.436,6540,0.436,6544,0.927,6545,1.743,6546,1.743,6547,0.479,6548,0.927,6549,0.479,6550,0.927,6551,5.325,6552,0.927,6553,0.927,6554,1.348,6555,0.479,6556,0.479,6557,0.479,6558,0.927,6559,0.479,6560,0.479,6561,0.479,6562,0.479,6563,0.479,6564,1.743,6565,0.927,6566,0.479]],["component/178",[68,0.364]]],"invertedIndex":[["",{"_index":188,"title":{"36-8":{},"124-7":{}},"name":{},"text":{"4":{},"6":{},"7":{},"10":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"22":{},"23":{},"26":{},"27":{},"28":{},"29":{},"32":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"80":{},"81":{},"82":{},"83":{},"84":{},"85":{},"86":{},"87":{},"90":{},"92":{},"94":{},"97":{},"98":{},"99":{},"101":{},"102":{},"103":{},"104":{},"105":{},"106":{},"109":{},"111":{},"112":{},"114":{},"115":{},"117":{},"118":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"140":{},"142":{},"143":{},"144":{},"145":{},"146":{},"147":{},"148":{},"149":{},"150":{},"151":{},"152":{},"153":{},"154":{},"155":{},"156":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"168":{},"171":{},"172":{},"173":{},"174":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["0",{"_index":137,"title":{},"name":{},"text":{"2":{},"4":{},"6":{},"7":{},"10":{},"12":{},"14":{},"15":{},"19":{},"22":{},"23":{},"26":{},"27":{},"29":{},"43":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"80":{},"81":{},"82":{},"83":{},"84":{},"85":{},"86":{},"87":{},"88":{},"90":{},"92":{},"94":{},"97":{},"98":{},"99":{},"101":{},"105":{},"109":{},"111":{},"112":{},"114":{},"117":{},"130":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"142":{},"143":{},"145":{},"146":{},"147":{},"148":{},"149":{},"150":{},"152":{},"153":{},"154":{},"155":{},"156":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"171":{},"172":{},"173":{},"174":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["0+0",{"_index":4563,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["0+1",{"_index":4513,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["0,1,1",{"_index":3622,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["0..3",{"_index":788,"title":{},"name":{},"text":{"10":{},"97":{}},"component":{}}],["0.0",{"_index":3300,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["0.0.0.0",{"_index":247,"title":{},"name":{},"text":{"4":{},"29":{},"48":{},"85":{},"86":{},"90":{},"117":{},"137":{},"176":{},"177":{}},"component":{}}],["0.00",{"_index":1416,"title":{},"name":{},"text":{"15":{},"60":{},"75":{},"99":{},"150":{},"166":{}},"component":{}}],["0.000000",{"_index":4213,"title":{},"name":{},"text":{"55":{},"59":{},"66":{},"72":{},"146":{},"149":{},"156":{},"162":{}},"component":{}}],["0.000000001",{"_index":6583,"title":{},"name":{},"text":{"112":{}},"component":{}}],["0.0000001",{"_index":6592,"title":{},"name":{},"text":{"112":{}},"component":{}}],["0.000001",{"_index":1987,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["0.000002",{"_index":4875,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.000030",{"_index":4881,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.001238",{"_index":4882,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.001319",{"_index":4886,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.001351",{"_index":4891,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.001578",{"_index":4894,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.001613",{"_index":4895,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.002610",{"_index":4897,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.002979",{"_index":4899,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.003007",{"_index":4902,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.003788",{"_index":4907,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.003978",{"_index":4911,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.005018",{"_index":4913,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.005048",{"_index":4916,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.005068",{"_index":4918,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.005085",{"_index":4919,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.005721",{"_index":4922,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.009597",{"_index":5676,"title":{},"name":{},"text":{"68":{},"158":{}},"component":{}}],["0.011129",{"_index":4924,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.011480",{"_index":4928,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.011523",{"_index":4930,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.014851",{"_index":3948,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["0.018739",{"_index":4932,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.02",{"_index":5372,"title":{},"name":{},"text":{"60":{},"150":{}},"component":{}}],["0.020545",{"_index":4933,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.03",{"_index":5369,"title":{},"name":{},"text":{"60":{},"150":{}},"component":{}}],["0.038201",{"_index":4935,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.039214",{"_index":4937,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.056097",{"_index":4940,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.06",{"_index":5393,"title":{},"name":{},"text":{"60":{},"150":{}},"component":{}}],["0.068134",{"_index":4942,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.071785",{"_index":4948,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.073849",{"_index":4952,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.073876",{"_index":4955,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.074680",{"_index":4957,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.074984",{"_index":4959,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.075068",{"_index":4962,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.075146",{"_index":4964,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.075686",{"_index":4965,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.075706",{"_index":4969,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.075745",{"_index":4975,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.077565",{"_index":4976,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.089125",{"_index":4977,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.089426",{"_index":4979,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.091357",{"_index":4980,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.091434",{"_index":4983,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.091574",{"_index":4985,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.091773",{"_index":4986,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.091925",{"_index":4987,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.092011",{"_index":4989,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.092282",{"_index":4991,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.093295",{"_index":4993,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.093332",{"_index":4996,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.093346",{"_index":4997,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.093357",{"_index":4998,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.093736",{"_index":5001,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.093905",{"_index":5677,"title":{},"name":{},"text":{"68":{},"158":{}},"component":{}}],["0.094901",{"_index":5005,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.095596",{"_index":5010,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.096286",{"_index":5015,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.109411",{"_index":5016,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.109541",{"_index":5018,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.109563",{"_index":5022,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.109579",{"_index":5024,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.109830",{"_index":3949,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["0.11",{"_index":5392,"title":{},"name":{},"text":{"60":{},"150":{}},"component":{}}],["0.111131",{"_index":3953,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["0.116059",{"_index":5026,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.131516",{"_index":5027,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.148936",{"_index":4487,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["0.149642",{"_index":5028,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.151731",{"_index":5029,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.151931",{"_index":5299,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.151989",{"_index":5300,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.152007",{"_index":5306,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.152052",{"_index":5032,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.152152",{"_index":5307,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.152169",{"_index":5308,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.152257",{"_index":5309,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.160318",{"_index":5039,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.160529",{"_index":5310,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.160591",{"_index":5311,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.160608",{"_index":5312,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.160646",{"_index":5041,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.160755",{"_index":5313,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.160771",{"_index":5314,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.160858",{"_index":5315,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.257/0.373/0.700/0.188",{"_index":296,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["0.325/0.406/0.629/0.128",{"_index":1347,"title":{},"name":{},"text":{"15":{},"19":{},"99":{},"105":{}},"component":{}}],["0.4",{"_index":5020,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0.722586",{"_index":3954,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["0.954840",{"_index":5720,"title":{},"name":{},"text":{"69":{},"159":{}},"component":{}}],["0.961449",{"_index":5722,"title":{},"name":{},"text":{"69":{},"159":{}},"component":{}}],["0.967421",{"_index":5723,"title":{},"name":{},"text":{"69":{},"159":{}},"component":{}}],["0.976848",{"_index":5726,"title":{},"name":{},"text":{"69":{},"159":{}},"component":{}}],["0.988484",{"_index":5044,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0/i2c",{"_index":5574,"title":{},"name":{},"text":{"65":{},"154":{}},"component":{}}],["00",{"_index":638,"title":{},"name":{},"text":{"6":{},"7":{},"48":{},"65":{},"92":{},"94":{},"137":{},"154":{}},"component":{}}],["0000",{"_index":2532,"title":{"46-6":{},"55-29":{},"62-6":{},"134-5":{},"146-28":{},"152-5":{}},"name":{},"text":{"46":{},"55":{},"62":{},"134":{},"146":{},"152":{}},"component":{}}],["0000000",{"_index":3452,"title":{},"name":{},"text":{"49":{},"56":{},"136":{},"147":{}},"component":{}}],["00000000",{"_index":4031,"title":{},"name":{},"text":{"53":{},"56":{},"69":{},"143":{},"147":{},"159":{}},"component":{}}],["0000000011111111",{"_index":140,"title":{},"name":{},"text":{"2":{},"15":{},"83":{},"88":{},"99":{},"174":{}},"component":{}}],["0000000096b15000",{"_index":5873,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["0000000096b21a79",{"_index":5874,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["0000000096b22000",{"_index":5870,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["0000000096b2ba79",{"_index":5871,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["00000010",{"_index":4032,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["00000020",{"_index":4047,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["00000030",{"_index":4052,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["00000040",{"_index":4056,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["00000050",{"_index":4058,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["00000060",{"_index":4059,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["0000006a",{"_index":4060,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["0000010",{"_index":4504,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["00000100",{"_index":4063,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["0000020",{"_index":3454,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["0000024d",{"_index":4503,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["0000040",{"_index":3457,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["0000060",{"_index":3458,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["00000847",{"_index":4515,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["0000100",{"_index":3459,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["00001000",{"_index":4703,"title":{},"name":{},"text":{"58":{},"145":{}},"component":{}}],["0000120",{"_index":3460,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["0000140",{"_index":3461,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["0000160",{"_index":3462,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["0000200",{"_index":3464,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["0000:00:14.0",{"_index":5847,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["0000:01:00.0",{"_index":4736,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0001",{"_index":2536,"title":{"46-7":{},"55-30":{},"62-7":{},"134-6":{},"146-29":{},"152-6":{}},"name":{},"text":{"46":{},"50":{},"52":{},"55":{},"59":{},"62":{},"66":{},"134":{},"138":{},"142":{},"146":{},"149":{},"152":{},"156":{}},"component":{}}],["0002",{"_index":5440,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["0003",{"_index":1810,"title":{},"name":{},"text":{"23":{},"81":{},"86":{},"111":{},"172":{},"177":{}},"component":{}}],["0003:04d8:00df.0012",{"_index":5844,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["00042021",{"_index":3054,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["0010",{"_index":2533,"title":{"46-6":{},"55-29":{},"62-6":{},"134-5":{},"146-28":{},"152-5":{}},"name":{},"text":{"46":{},"55":{},"62":{},"134":{},"146":{},"152":{}},"component":{}}],["0010400",{"_index":3465,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["0010420",{"_index":3466,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["0011",{"_index":2534,"title":{"46-6":{},"55-29":{},"62-6":{},"134-5":{},"146-28":{},"152-5":{}},"name":{},"text":{"46":{},"55":{},"62":{},"134":{},"146":{},"152":{}},"component":{}}],["0011000",{"_index":3467,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["0011020",{"_index":3468,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["0011040",{"_index":3469,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["0011060",{"_index":3470,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["0011400",{"_index":3471,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["0011420",{"_index":3480,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["0013263668",{"_index":5839,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["00200000",{"_index":4702,"title":{},"name":{},"text":{"58":{},"145":{}},"component":{}}],["00228",{"_index":4742,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0040420498e0",{"_index":1440,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["0050",{"_index":3439,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["0050/eeprom",{"_index":3450,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["00:00",{"_index":3552,"title":{},"name":{},"text":{"50":{},"58":{},"59":{},"60":{},"66":{},"138":{},"145":{},"149":{},"150":{},"156":{}},"component":{}}],["00:00:00:00:00:00",{"_index":232,"title":{},"name":{},"text":{"4":{},"6":{},"12":{},"48":{},"86":{},"90":{},"94":{},"98":{},"137":{},"177":{}},"component":{}}],["00:00:00:00:00:02",{"_index":1699,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["00:00:00:00:00:11",{"_index":1792,"title":{},"name":{},"text":{"23":{},"29":{},"111":{},"117":{}},"component":{}}],["00:00:00:00:00:22",{"_index":1808,"title":{},"name":{},"text":{"23":{},"29":{},"86":{},"111":{},"117":{},"177":{}},"component":{}}],["00:00:00:01:00:00",{"_index":262,"title":{},"name":{},"text":{"4":{},"15":{},"90":{},"99":{}},"component":{}}],["00:00:00:22:22:22",{"_index":1350,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["00:00:00:dd:dd:dd",{"_index":883,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["00:01",{"_index":3666,"title":{},"name":{},"text":{"50":{},"56":{},"138":{},"147":{}},"component":{}}],["00:01:01:00:00:00/ff:ff:ff:00:00:00",{"_index":6486,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["00:02",{"_index":3694,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["00:02:02:02:02:02",{"_index":6487,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["00:02:16",{"_index":3637,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["00:04:29",{"_index":5391,"title":{},"name":{},"text":{"60":{},"150":{}},"component":{}}],["00:08:36",{"_index":5373,"title":{},"name":{},"text":{"60":{},"150":{}},"component":{}}],["00:09:09",{"_index":5367,"title":{},"name":{},"text":{"60":{},"150":{}},"component":{}}],["00:09:40",{"_index":5371,"title":{},"name":{},"text":{"60":{},"150":{}},"component":{}}],["00:11:11:11:11:11",{"_index":332,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["00:11:22:33:44:55",{"_index":6394,"title":{},"name":{},"text":{"84":{},"85":{},"175":{},"176":{}},"component":{}}],["00:17",{"_index":4043,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["00:22:22:22:22:22",{"_index":340,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["00:22:33:44:55:66",{"_index":6479,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["00:33:33:00:00:00/ff:ff:ff:00:00:00",{"_index":6295,"title":{},"name":{},"text":{"82":{},"86":{},"87":{},"173":{},"177":{},"178":{}},"component":{}}],["00:33:33:33:33:33",{"_index":6294,"title":{},"name":{},"text":{"82":{},"86":{},"87":{},"173":{},"177":{},"178":{}},"component":{}}],["00:33:33:33:33:33/24",{"_index":6563,"title":{},"name":{},"text":{"87":{},"178":{}},"component":{}}],["00:40:42:04:98:9b",{"_index":237,"title":{},"name":{},"text":{"4":{},"15":{},"19":{},"90":{},"99":{},"105":{}},"component":{}}],["00:40:42:04:98:9c",{"_index":239,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["00:40:42:04:98:9d",{"_index":240,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["00:40:42:04:98:9e",{"_index":241,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["00:40:42:04:98:e1",{"_index":1396,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["00:41",{"_index":5641,"title":{},"name":{},"text":{"67":{},"157":{}},"component":{}}],["00:44:44:00:00:00/ff:ff:ff:00:00:00",{"_index":6328,"title":{},"name":{},"text":{"82":{},"86":{},"87":{},"173":{},"177":{},"178":{}},"component":{}}],["00:44:44:44:00:00/ff:ff:ff:ff:00:00",{"_index":6332,"title":{},"name":{},"text":{"82":{},"86":{},"87":{},"173":{},"177":{},"178":{}},"component":{}}],["00:44:44:44:44:44",{"_index":6327,"title":{},"name":{},"text":{"82":{},"86":{},"87":{},"173":{},"177":{},"178":{}},"component":{}}],["00:44:44:44:44:44/24",{"_index":6562,"title":{},"name":{},"text":{"87":{},"178":{}},"component":{}}],["00:44:55:00:00:00/ff:ff:ff:0:0:0",{"_index":6421,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["00:44:55:66:77:88",{"_index":6432,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["00:44:55:xx:xx:xx",{"_index":6433,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["00:48:38",{"_index":5962,"title":{},"name":{},"text":{"75":{},"166":{}},"component":{}}],["00:48:53",{"_index":5961,"title":{},"name":{},"text":{"75":{},"166":{}},"component":{}}],["01",{"_index":642,"title":{},"name":{},"text":{"6":{},"7":{},"33":{},"34":{},"37":{},"38":{},"43":{},"51":{},"65":{},"67":{},"92":{},"94":{},"120":{},"121":{},"122":{},"125":{},"130":{},"139":{},"141":{},"154":{},"157":{}},"component":{}}],["0100",{"_index":2537,"title":{"46-7":{},"55-30":{},"62-7":{},"134-6":{},"146-29":{},"152-6":{}},"name":{},"text":{"46":{},"55":{},"62":{},"73":{},"75":{},"134":{},"146":{},"152":{},"163":{},"166":{}},"component":{}}],["0100)fireant",{"_index":6201,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["0101",{"_index":2535,"title":{"46-6":{},"55-29":{},"55-31":{},"62-6":{},"134-5":{},"146-28":{},"146-30":{},"152-5":{}},"name":{},"text":{"46":{},"55":{},"62":{},"134":{},"146":{},"152":{}},"component":{}}],["0110",{"_index":2538,"title":{"46-8":{},"134-7":{}},"name":{},"text":{"46":{},"55":{},"62":{},"134":{},"146":{},"152":{}},"component":{}}],["0111",{"_index":2625,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"134":{},"146":{},"152":{}},"component":{}}],["01203",{"_index":422,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["0123456701234567",{"_index":139,"title":{},"name":{},"text":{"2":{},"15":{},"83":{},"88":{},"99":{},"174":{}},"component":{}}],["0123456789abcdef",{"_index":5582,"title":{},"name":{},"text":{"65":{},"154":{}},"component":{}}],["01:00:5e:00:00:01",{"_index":342,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["01:00:5e:00:00:6a",{"_index":343,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["01:80:c2:00:00:0e",{"_index":2001,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["02",{"_index":640,"title":{},"name":{},"text":{"6":{},"51":{},"67":{},"94":{},"139":{},"141":{},"157":{}},"component":{}}],["0200",{"_index":4746,"title":{},"name":{},"text":{"59":{},"60":{},"149":{},"150":{}},"component":{}}],["0200000",{"_index":3481,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["021",{"_index":3472,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["02_09",{"_index":3446,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["02a90af2",{"_index":3096,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["02cb591c9737",{"_index":3072,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["03",{"_index":639,"title":{},"name":{},"text":{"6":{},"7":{},"39":{},"65":{},"92":{},"94":{},"126":{},"154":{}},"component":{}}],["031852",{"_index":5588,"title":{},"name":{},"text":{"65":{},"154":{}},"component":{}}],["04",{"_index":2248,"title":{},"name":{},"text":{"33":{},"51":{},"65":{},"67":{},"122":{},"131":{},"139":{},"154":{},"157":{}},"component":{}}],["0408",{"_index":3055,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["04:02:a6:68:7e:f2:fe:c9:07:1a:2c:a9:c2:33:b4",{"_index":4255,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["04e3",{"_index":3076,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["04fc915b9b87",{"_index":6150,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["05",{"_index":2401,"title":{},"name":{},"text":{"43":{},"130":{},"131":{}},"component":{}}],["06",{"_index":2276,"title":{},"name":{},"text":{"35":{},"38":{},"40":{},"123":{},"125":{},"127":{}},"component":{}}],["07",{"_index":2221,"title":{},"name":{},"text":{"32":{},"34":{},"35":{},"50":{},"51":{},"66":{},"67":{},"73":{},"75":{},"118":{},"121":{},"123":{},"138":{},"139":{},"156":{},"157":{},"163":{},"166":{}},"component":{}}],["07a876e5a6bf",{"_index":3684,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["08",{"_index":2193,"title":{},"name":{},"text":{"31":{},"51":{},"67":{},"119":{},"139":{},"157":{}},"component":{}}],["08:28:52",{"_index":4745,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["09",{"_index":2222,"title":{},"name":{},"text":{"32":{},"36":{},"41":{},"42":{},"59":{},"80":{},"118":{},"124":{},"128":{},"129":{},"149":{},"171":{}},"component":{}}],["090",{"_index":1123,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["090.tar.gz",{"_index":1125,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["090/arm",{"_index":1130,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["09:49:43",{"_index":5338,"title":{},"name":{},"text":{"60":{},"150":{}},"component":{}}],["0:0:0:0",{"_index":5921,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["0:0:0:0:0:22/ff:ff:ff:ff:ff:ff",{"_index":2129,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["0:1.0",{"_index":5130,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0::0",{"_index":6524,"title":{},"name":{},"text":{"86":{},"177":{}},"component":{}}],["0=none",{"_index":2049,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["0a",{"_index":4036,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["0b",{"_index":1762,"title":{},"name":{},"text":{"22":{},"23":{},"81":{},"86":{},"87":{},"109":{},"111":{},"172":{},"177":{},"178":{}},"component":{}}],["0b111",{"_index":3742,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["0cc3",{"_index":6133,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["0e036503",{"_index":6132,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["0fc63daf",{"_index":6127,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["0n",{"_index":1814,"title":{},"name":{},"text":{"23":{},"86":{},"111":{},"177":{}},"component":{}}],["0p",{"_index":1772,"title":{},"name":{},"text":{"22":{},"23":{},"81":{},"86":{},"87":{},"109":{},"111":{},"172":{},"177":{},"178":{}},"component":{}}],["0x(ptrval",{"_index":4951,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0x0",{"_index":789,"title":{},"name":{},"text":{"10":{},"15":{},"46":{},"54":{},"55":{},"59":{},"62":{},"79":{},"97":{},"99":{},"134":{},"144":{},"146":{},"149":{},"152":{},"170":{}},"component":{}}],["0x0/0x1",{"_index":6276,"title":{},"name":{},"text":{"81":{},"82":{},"86":{},"87":{},"172":{},"173":{},"177":{},"178":{}},"component":{}}],["0x0/0x3",{"_index":2132,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["0x00/0x3f",{"_index":6523,"title":{},"name":{},"text":{"86":{},"177":{}},"component":{}}],["0x000",{"_index":4390,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["0x000/0x1fe",{"_index":2127,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["0x0000",{"_index":3781,"title":{},"name":{},"text":{"51":{},"55":{},"67":{},"72":{},"139":{},"146":{},"157":{},"162":{}},"component":{}}],["0x00000000",{"_index":4692,"title":{},"name":{},"text":{"58":{},"61":{},"62":{},"77":{},"80":{},"145":{},"151":{},"152":{},"167":{},"171":{}},"component":{}}],["0x000000000",{"_index":6089,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["0x0000000000",{"_index":5813,"title":{},"name":{},"text":{"72":{},"162":{}},"component":{}}],["0x000000000000",{"_index":3124,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["0x0000000000000000",{"_index":3048,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["0x0000000000010010",{"_index":5115,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0x0000000060000000",{"_index":4815,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0x000000008fffffff",{"_index":4816,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0x0000000090000000",{"_index":4818,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0x000000009fffffff",{"_index":4819,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0x000000100000",{"_index":6116,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["0x000000140000",{"_index":6117,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["0x000000180000",{"_index":3126,"title":{},"name":{},"text":{"46":{},"80":{},"134":{},"171":{}},"component":{}}],["0x0000001c0000",{"_index":3127,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["0x0000001e0000",{"_index":5534,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["0x0000001f0000",{"_index":5535,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["0x000000200000",{"_index":3125,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["0x00000022",{"_index":6125,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["0x00000040",{"_index":3045,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["0x000001580000",{"_index":6260,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["0x000001a00000",{"_index":3129,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["0x000002980000",{"_index":6261,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["0x000003400000",{"_index":3130,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["0x000004000000",{"_index":3131,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["0x000004980000",{"_index":6262,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["0x000008000000",{"_index":6115,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["0x00001000",{"_index":5453,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["0x000010000000",{"_index":6124,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["0x00002000",{"_index":5459,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["0x00008000",{"_index":5441,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["0x00014000",{"_index":5407,"title":{},"name":{},"text":{"61":{},"77":{},"151":{},"167":{}},"component":{}}],["0x0001e000",{"_index":5455,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["0x0001f000",{"_index":5458,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["0x00020000",{"_index":5409,"title":{},"name":{},"text":{"61":{},"151":{}},"component":{}}],["0x00021000",{"_index":5461,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["0x0003",{"_index":4337,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["0x0004",{"_index":3783,"title":{},"name":{},"text":{"51":{},"55":{},"67":{},"72":{},"139":{},"146":{},"157":{},"162":{}},"component":{}}],["0x00040000",{"_index":2677,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["0x0004003f",{"_index":3046,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["0x00040040",{"_index":3059,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["0x0005",{"_index":3784,"title":{},"name":{},"text":{"51":{},"55":{},"67":{},"72":{},"139":{},"146":{},"157":{},"162":{}},"component":{}}],["0x0006",{"_index":4339,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["0x0007",{"_index":3786,"title":{},"name":{},"text":{"51":{},"55":{},"67":{},"72":{},"139":{},"146":{},"157":{},"162":{}},"component":{}}],["0x0008",{"_index":3787,"title":{},"name":{},"text":{"51":{},"55":{},"67":{},"72":{},"139":{},"146":{},"157":{},"162":{}},"component":{}}],["0x0008003f",{"_index":3060,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["0x00080040",{"_index":3066,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["0x0008103f",{"_index":3067,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["0x00081040",{"_index":3073,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["0x0008203f",{"_index":3074,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["0x00082040",{"_index":3080,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["0x000cf800",{"_index":5462,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["0x000f",{"_index":4340,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["0x000f0800",{"_index":5464,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["0x001",{"_index":887,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["0x0010",{"_index":3789,"title":{},"name":{},"text":{"51":{},"55":{},"67":{},"72":{},"139":{},"146":{},"157":{},"162":{}},"component":{}}],["0x00100000",{"_index":5087,"title":{},"name":{},"text":{"59":{},"61":{},"62":{},"77":{},"80":{},"149":{},"151":{},"152":{},"167":{},"171":{}},"component":{}}],["0x0011ffff",{"_index":5088,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0x0013",{"_index":4341,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["0x0014",{"_index":3791,"title":{},"name":{},"text":{"51":{},"55":{},"67":{},"72":{},"139":{},"146":{},"157":{},"162":{}},"component":{}}],["0x00140000",{"_index":6105,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["0x00180000",{"_index":2674,"title":{},"name":{},"text":{"46":{},"80":{},"134":{},"171":{}},"component":{}}],["0x001a",{"_index":4342,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["0x001c0000",{"_index":5466,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["0x001e0000",{"_index":4030,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["0x002",{"_index":953,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["0x0020",{"_index":3793,"title":{},"name":{},"text":{"51":{},"55":{},"67":{},"72":{},"139":{},"146":{},"157":{},"162":{}},"component":{}}],["0x00200000",{"_index":5445,"title":{},"name":{},"text":{"62":{},"77":{},"152":{},"167":{}},"component":{}}],["0x00200021",{"_index":6126,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["0x00200022",{"_index":6137,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["0x0028203f",{"_index":3081,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["0x00282040",{"_index":3087,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["0x0029",{"_index":4344,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["0x0030",{"_index":3795,"title":{},"name":{},"text":{"51":{},"55":{},"67":{},"72":{},"139":{},"146":{},"157":{},"162":{}},"component":{}}],["0x00300000",{"_index":5117,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0x0037",{"_index":4345,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["0x003f",{"_index":4321,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["0x0040",{"_index":3796,"title":{},"name":{},"text":{"51":{},"55":{},"67":{},"72":{},"139":{},"146":{},"157":{},"162":{}},"component":{}}],["0x00400021",{"_index":6138,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["0x00400022",{"_index":6144,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["0x0043",{"_index":4322,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["0x0044",{"_index":3797,"title":{},"name":{},"text":{"51":{},"55":{},"67":{},"72":{},"139":{},"146":{},"157":{},"162":{}},"component":{}}],["0x0048203f",{"_index":3088,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["0x00482040",{"_index":3094,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["0x0063",{"_index":4323,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["0x0064",{"_index":3799,"title":{},"name":{},"text":{"51":{},"55":{},"67":{},"72":{},"139":{},"146":{},"157":{},"162":{}},"component":{}}],["0x0067",{"_index":4346,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["0x0068",{"_index":3801,"title":{},"name":{},"text":{"51":{},"55":{},"67":{},"72":{},"139":{},"146":{},"157":{},"162":{}},"component":{}}],["0x006b",{"_index":4347,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["0x006c",{"_index":3803,"title":{},"name":{},"text":{"51":{},"55":{},"67":{},"72":{},"139":{},"146":{},"157":{},"162":{}},"component":{}}],["0x00700021",{"_index":6145,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["0x0073",{"_index":4348,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["0x0074",{"_index":3805,"title":{},"name":{},"text":{"51":{},"55":{},"67":{},"72":{},"139":{},"146":{},"157":{},"162":{}},"component":{}}],["0x0080",{"_index":4393,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["0x009b",{"_index":4349,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["0x00e8ffd",{"_index":3095,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["0x00ff",{"_index":4324,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["0x01",{"_index":884,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["0x0100",{"_index":3807,"title":{},"name":{},"text":{"51":{},"55":{},"67":{},"72":{},"139":{},"146":{},"157":{},"162":{}},"component":{}}],["0x011f",{"_index":4350,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["0x0120",{"_index":3808,"title":{},"name":{},"text":{"51":{},"55":{},"67":{},"72":{},"139":{},"146":{},"157":{},"162":{}},"component":{}}],["0x013f",{"_index":4351,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["0x0140",{"_index":3810,"title":{},"name":{},"text":{"51":{},"55":{},"67":{},"72":{},"139":{},"146":{},"157":{},"162":{}},"component":{}}],["0x01400000",{"_index":6106,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["0x01580000",{"_index":6108,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["0x015f",{"_index":4352,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["0x0160",{"_index":3812,"title":{},"name":{},"text":{"51":{},"55":{},"67":{},"72":{},"139":{},"146":{},"157":{},"162":{}},"component":{}}],["0x017f",{"_index":4353,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["0x0180",{"_index":3814,"title":{},"name":{},"text":{"51":{},"55":{},"67":{},"72":{},"139":{},"146":{},"157":{},"162":{}},"component":{}}],["0x019f",{"_index":4354,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["0x01a4",{"_index":3816,"title":{},"name":{},"text":{"51":{},"55":{},"67":{},"72":{},"139":{},"146":{},"157":{},"162":{}},"component":{}}],["0x01a5",{"_index":4355,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["0x01ff",{"_index":4326,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["0x02",{"_index":776,"title":{},"name":{},"text":{"10":{},"97":{}},"component":{}}],["0x0200",{"_index":4327,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["0x02000000",{"_index":6109,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["0x021f",{"_index":4356,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["0x0220",{"_index":4358,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["0x0220fe6c",{"_index":5111,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0x023f",{"_index":4328,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["0x0240",{"_index":4329,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["0x04000000",{"_index":6112,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["0x0600",{"_index":6408,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["0x07",{"_index":805,"title":{},"name":{},"text":{"10":{},"97":{}},"component":{}}],["0x07ff",{"_index":4330,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["0x0800",{"_index":4331,"title":{},"name":{},"text":{"55":{},"72":{},"82":{},"87":{},"146":{},"162":{},"173":{},"178":{}},"component":{}}],["0x08000000",{"_index":5442,"title":{},"name":{},"text":{"62":{},"80":{},"152":{},"171":{}},"component":{}}],["0x0806",{"_index":6290,"title":{},"name":{},"text":{"82":{},"87":{},"173":{},"178":{}},"component":{}}],["0x08100000",{"_index":5443,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["0x0f/0x3f",{"_index":6424,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["0x1",{"_index":1408,"title":{},"name":{},"text":{"15":{},"22":{},"27":{},"46":{},"54":{},"55":{},"62":{},"80":{},"99":{},"109":{},"112":{},"134":{},"144":{},"146":{},"152":{},"171":{}},"component":{}}],["0x1/0x3",{"_index":2133,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["0x10",{"_index":4026,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["0x10/0x3f",{"_index":6319,"title":{},"name":{},"text":{"82":{},"87":{},"173":{},"178":{}},"component":{}}],["0x100/0xff0",{"_index":6275,"title":{},"name":{},"text":{"81":{},"82":{},"86":{},"87":{},"172":{},"173":{},"177":{},"178":{}},"component":{}}],["0x1000",{"_index":2660,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["0x10000000",{"_index":5411,"title":{},"name":{},"text":{"61":{},"77":{},"80":{},"151":{},"167":{},"171":{}},"component":{}}],["0x100000000",{"_index":6090,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["0x10100000",{"_index":5444,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["0x10300000",{"_index":5446,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["0x10500000",{"_index":5447,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["0x106",{"_index":4061,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["0x110",{"_index":5113,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0x11fc663",{"_index":6267,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["0x12",{"_index":6305,"title":{},"name":{},"text":{"82":{},"86":{},"87":{},"173":{},"177":{},"178":{}},"component":{}}],["0x1234",{"_index":4598,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["0x14",{"_index":1820,"title":{},"name":{},"text":{"23":{},"111":{}},"component":{}}],["0x17f",{"_index":4391,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["0x180",{"_index":4392,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["0x180000",{"_index":2676,"title":{},"name":{},"text":{"46":{},"80":{},"134":{},"171":{}},"component":{}}],["0x1a",{"_index":6318,"title":{},"name":{},"text":{"82":{},"87":{},"173":{},"178":{}},"component":{}}],["0x1c0000",{"_index":2680,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["0x1e0000",{"_index":4029,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["0x1ff",{"_index":888,"title":{},"name":{},"text":{"12":{},"46":{},"55":{},"62":{},"72":{},"98":{},"134":{},"146":{},"152":{},"162":{}},"component":{}}],["0x2",{"_index":1809,"title":{},"name":{},"text":{"23":{},"46":{},"55":{},"62":{},"111":{},"134":{},"146":{},"152":{}},"component":{}}],["0x200",{"_index":2949,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"72":{},"134":{},"146":{},"152":{},"162":{}},"component":{}}],["0x200/0xff0",{"_index":6321,"title":{},"name":{},"text":{"82":{},"86":{},"87":{},"173":{},"177":{},"178":{}},"component":{}}],["0x200/512",{"_index":2649,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["0x2000",{"_index":4332,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["0x20000",{"_index":6122,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["0x200000",{"_index":2666,"title":{},"name":{},"text":{"46":{},"72":{},"134":{},"162":{}},"component":{}}],["0x2000000",{"_index":5413,"title":{},"name":{},"text":{"61":{},"77":{},"151":{},"167":{}},"component":{}}],["0x20000000",{"_index":5410,"title":{},"name":{},"text":{"61":{},"77":{},"151":{},"167":{}},"component":{}}],["0x200000000",{"_index":6101,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["0x24d",{"_index":4505,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["0x282040",{"_index":2669,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["0x2a",{"_index":6561,"title":{},"name":{},"text":{"87":{},"178":{}},"component":{}}],["0x3",{"_index":2621,"title":{},"name":{},"text":{"46":{},"54":{},"55":{},"62":{},"134":{},"144":{},"146":{},"152":{}},"component":{}}],["0x300000",{"_index":2758,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["0x363e99a9",{"_index":2516,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["0x3cd",{"_index":5807,"title":{},"name":{},"text":{"72":{},"162":{}},"component":{}}],["0x3e8",{"_index":6532,"title":{},"name":{},"text":{"86":{},"177":{}},"component":{}}],["0x4",{"_index":2622,"title":{},"name":{},"text":{"46":{},"54":{},"55":{},"62":{},"134":{},"144":{},"146":{},"152":{}},"component":{}}],["0x4/0x3f",{"_index":6306,"title":{},"name":{},"text":{"82":{},"86":{},"87":{},"173":{},"177":{},"178":{}},"component":{}}],["0x40",{"_index":2653,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["0x40000",{"_index":2655,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["0x40000000",{"_index":5448,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["0x400000000",{"_index":6091,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["0x40040",{"_index":2657,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["0x401",{"_index":5724,"title":{},"name":{},"text":{"69":{},"159":{}},"component":{}}],["0x410fd034",{"_index":5814,"title":{},"name":{},"text":{"72":{},"162":{}},"component":{}}],["0x482040",{"_index":2670,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["0x5",{"_index":2136,"title":{},"name":{},"text":{"29":{},"46":{},"51":{},"55":{},"62":{},"67":{},"117":{},"134":{},"139":{},"146":{},"152":{},"157":{}},"component":{}}],["0x50",{"_index":5579,"title":{},"name":{},"text":{"65":{},"154":{}},"component":{}}],["0x500000000",{"_index":6092,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["0x50500000",{"_index":5449,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["0x6",{"_index":2623,"title":{},"name":{},"text":{"46":{},"51":{},"55":{},"62":{},"67":{},"134":{},"139":{},"146":{},"152":{},"157":{}},"component":{}}],["0x600",{"_index":6558,"title":{},"name":{},"text":{"87":{},"178":{}},"component":{}}],["0x60000000",{"_index":5414,"title":{},"name":{},"text":{"61":{},"72":{},"73":{},"77":{},"151":{},"162":{},"163":{},"167":{}},"component":{}}],["0x60100000",{"_index":4909,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0x60100078",{"_index":4910,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0x60200000",{"_index":4187,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["0x602000c8",{"_index":4210,"title":{},"name":{},"text":{"55":{},"146":{}},"component":{}}],["0x60208000",{"_index":4784,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0x6063c340",{"_index":4207,"title":{},"name":{},"text":{"55":{},"146":{}},"component":{}}],["0x610000000",{"_index":6094,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["0x620000000",{"_index":6096,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["0x630000000",{"_index":6098,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["0x64000000",{"_index":2865,"title":{},"name":{},"text":{"46":{},"59":{},"62":{},"134":{},"149":{},"152":{}},"component":{}}],["0x64000000#lan9662_ung8291_0_at_lan966x",{"_index":4779,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0x640000000",{"_index":6099,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["0x640000c8",{"_index":4781,"title":{},"name":{},"text":{"59":{},"73":{},"149":{},"163":{}},"component":{}}],["0x643ec7f4",{"_index":4790,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0x64404c74",{"_index":4785,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0x646cb5fc",{"_index":5866,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["0x67e00000",{"_index":4208,"title":{},"name":{},"text":{"55":{},"59":{},"146":{},"149":{}},"component":{}}],["0x68000000",{"_index":4788,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0x6a810647",{"_index":2519,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["0x6cc25078",{"_index":2525,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["0x6fa00000",{"_index":5451,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["0x7",{"_index":2626,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"134":{},"146":{},"152":{}},"component":{}}],["0x700",{"_index":5208,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0x702",{"_index":5202,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0x71253eba",{"_index":2522,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["0x740000000",{"_index":6222,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["0x7f",{"_index":1913,"title":{},"name":{},"text":{"26":{},"114":{}},"component":{}}],["0x8",{"_index":2628,"title":{},"name":{},"text":{"46":{},"53":{},"55":{},"62":{},"69":{},"134":{},"143":{},"146":{},"152":{},"159":{}},"component":{}}],["0x80",{"_index":1912,"title":{},"name":{},"text":{"26":{},"114":{}},"component":{}}],["0x800",{"_index":6123,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["0x80000000",{"_index":5415,"title":{},"name":{},"text":{"61":{},"77":{},"151":{},"167":{}},"component":{}}],["0x800000000",{"_index":6100,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["0x8001",{"_index":1406,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["0x80040",{"_index":2659,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["0x8035",{"_index":6291,"title":{},"name":{},"text":{"82":{},"87":{},"173":{},"178":{}},"component":{}}],["0x81040",{"_index":2663,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["0x820",{"_index":3436,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["0x82040",{"_index":2665,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["0x847",{"_index":4516,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["0x86dd",{"_index":6552,"title":{},"name":{},"text":{"87":{},"178":{}},"component":{}}],["0x8809",{"_index":6425,"title":{},"name":{},"text":{"84":{},"87":{},"175":{},"178":{}},"component":{}}],["0x88a64",{"_index":6533,"title":{},"name":{},"text":{"86":{},"177":{}},"component":{}}],["0x88ee",{"_index":6426,"title":{},"name":{},"text":{"84":{},"87":{},"175":{},"178":{}},"component":{}}],["0x8902",{"_index":6427,"title":{},"name":{},"text":{"84":{},"87":{},"175":{},"178":{}},"component":{}}],["0x892f",{"_index":6325,"title":{},"name":{},"text":{"82":{},"87":{},"173":{},"178":{}},"component":{}}],["0x8a60dd6a9",{"_index":4872,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0x9",{"_index":2630,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"134":{},"146":{},"152":{}},"component":{}}],["0x90500000",{"_index":5450,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["0x98000000",{"_index":4813,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0x9dd8d09c",{"_index":2528,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["0xa",{"_index":2632,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"87":{},"134":{},"146":{},"152":{},"178":{}},"component":{}}],["0xaaaa03",{"_index":6559,"title":{},"name":{},"text":{"87":{},"178":{}},"component":{}}],["0xabcd",{"_index":4596,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["0xb",{"_index":2634,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"134":{},"146":{},"152":{}},"component":{}}],["0xc",{"_index":2636,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"134":{},"146":{},"152":{}},"component":{}}],["0xc8",{"_index":1755,"title":{},"name":{},"text":{"22":{},"81":{},"87":{},"109":{},"172":{},"178":{}},"component":{}}],["0xd",{"_index":2638,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"134":{},"146":{},"152":{}},"component":{}}],["0xdeed",{"_index":6331,"title":{},"name":{},"text":{"82":{},"173":{}},"component":{}}],["0xe",{"_index":2640,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"134":{},"146":{},"152":{}},"component":{}}],["0xe0000000",{"_index":5081,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0xe0040200",{"_index":5035,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0xe0060400",{"_index":5725,"title":{},"name":{},"text":{"69":{},"159":{}},"component":{}}],["0xe0064200",{"_index":5043,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0xe3ffffff",{"_index":5082,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["0xf",{"_index":958,"title":{},"name":{},"text":{"12":{},"46":{},"55":{},"62":{},"98":{},"134":{},"146":{},"152":{}},"component":{}}],["0xf/0x3f",{"_index":6315,"title":{},"name":{},"text":{"82":{},"86":{},"87":{},"173":{},"177":{},"178":{}},"component":{}}],["0xf1c1",{"_index":6406,"title":{},"name":{},"text":{"84":{},"86":{},"175":{},"177":{}},"component":{}}],["0xff",{"_index":885,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["0xfff",{"_index":900,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["0xffff",{"_index":6386,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["0xffffffe8",{"_index":4559,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["0xffffffe9",{"_index":4557,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["0xffffffea",{"_index":4555,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["0xffffffeb",{"_index":4553,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["0xffffffec",{"_index":4538,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["0xffffffed",{"_index":4549,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["0xffffffee",{"_index":4545,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["0xffffffef",{"_index":4541,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["0xfffffff0",{"_index":4539,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["0xffffffff",{"_index":3012,"title":{},"name":{},"text":{"46":{},"59":{},"62":{},"84":{},"134":{},"149":{},"152":{},"175":{}},"component":{}}],["0xffffffffffffff",{"_index":4870,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1",{"_index":0,"title":{"37":{},"41":{},"120":{},"128":{},"1-1":{},"2-1":{},"3-1":{},"4-1":{},"5-1":{},"6-1":{},"6-19":{},"7-1":{},"8-1":{},"9-1":{},"10-1":{},"11-1":{},"12-1":{},"14-1":{},"15-1":{},"16-1":{},"17-1":{},"19-1":{},"20-1":{},"21-1":{},"22-1":{},"23-1":{},"24-1":{},"25-1":{},"26-1":{},"27-1":{},"28-1":{},"29-1":{},"30-1":{},"37-1":{},"41-1":{},"46-1":{},"54-1":{},"61-1":{},"62-1":{},"63-1":{},"64-1":{},"65-1":{},"66-1":{},"67-1":{},"68-1":{},"69-1":{},"70-1":{},"71-1":{},"72-1":{},"73-1":{},"74-1":{},"75-1":{},"76-1":{},"77-1":{},"78-1":{},"79-1":{},"80-1":{},"81-1":{},"82-1":{},"83-1":{},"84-1":{},"85-1":{},"86-1":{},"87-1":{},"88-1":{},"90-1":{},"92-1":{},"94-1":{},"94-18":{},"95-1":{},"96-1":{},"98-1":{},"99-1":{},"101-1":{},"104-1":{},"105-1":{},"108-1":{},"109-1":{},"110-1":{},"112-1":{},"114-1":{},"115-1":{},"116-1":{},"117-1":{},"134-1":{},"140-1":{},"144-1":{},"151-1":{},"152-1":{},"153-1":{},"154-1":{},"155-1":{},"156-1":{},"157-1":{},"158-1":{},"159-1":{},"160-1":{},"161-1":{},"162-1":{},"163-1":{},"164-1":{},"165-1":{},"166-1":{},"167-1":{},"168-1":{},"170-1":{},"171-1":{},"172-1":{},"173-1":{},"174-1":{},"175-1":{},"176-1":{},"177-1":{},"178-1":{}},"name":{"37":{},"41":{},"120":{},"128":{}},"text":{"2":{},"4":{},"6":{},"7":{},"10":{},"12":{},"15":{},"16":{},"22":{},"23":{},"26":{},"27":{},"28":{},"29":{},"33":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"58":{},"59":{},"60":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"77":{},"79":{},"80":{},"81":{},"82":{},"83":{},"84":{},"85":{},"86":{},"87":{},"88":{},"90":{},"92":{},"94":{},"97":{},"98":{},"99":{},"104":{},"109":{},"111":{},"112":{},"114":{},"115":{},"117":{},"120":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"132":{},"133":{},"134":{},"135":{},"137":{},"138":{},"139":{},"141":{},"142":{},"143":{},"144":{},"145":{},"146":{},"147":{},"149":{},"150":{},"152":{},"153":{},"154":{},"155":{},"156":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"170":{},"171":{},"172":{},"173":{},"174":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["1#lan9668_ung8385_sa_lan8840_0_at_lan966x#conf",{"_index":6653,"title":{},"name":{},"text":{"140":{}},"component":{}}],["1+0",{"_index":3590,"title":{},"name":{},"text":{"50":{},"56":{},"58":{},"66":{},"138":{},"145":{},"147":{},"156":{}},"component":{}}],["1,5,7",{"_index":1395,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["1..128",{"_index":783,"title":{},"name":{},"text":{"10":{},"97":{}},"component":{}}],["1.0",{"_index":1244,"title":{},"name":{},"text":{"14":{},"56":{},"101":{},"147":{}},"component":{}}],["1.0.2",{"_index":6493,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["1.01",{"_index":5833,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["1.1",{"_index":73,"title":{"2-2":{},"4-2":{},"6-2":{},"7-2":{},"9-2":{},"12-2":{},"14-2":{},"15-2":{},"19-2":{},"21-2":{},"22-2":{},"24-2":{},"26-2":{},"27-2":{},"28-2":{},"46-2":{},"54-2":{},"62-2":{},"63-2":{},"64-2":{},"65-2":{},"66-2":{},"67-2":{},"68-2":{},"69-2":{},"70-2":{},"71-2":{},"72-2":{},"73-2":{},"74-2":{},"75-2":{},"76-2":{},"79-2":{},"80-2":{},"83-2":{},"84-2":{},"112-2":{},"162-2":{},"165-2":{},"171-2":{}},"name":{},"text":{"59":{},"85":{},"149":{},"176":{}},"component":{}}],["1.1.1",{"_index":1926,"title":{"27-3":{},"72-3":{},"80-3":{}},"name":{},"text":{},"component":{}}],["1.1.2",{"_index":1929,"title":{"27-4":{},"72-4":{},"80-4":{}},"name":{},"text":{},"component":{}}],["1.1.3",{"_index":1932,"title":{"27-5":{},"72-5":{},"80-5":{}},"name":{},"text":{},"component":{}}],["1.1.3.1",{"_index":5773,"title":{"72-6":{}},"name":{},"text":{},"component":{}}],["1.1.4",{"_index":1935,"title":{"27-6":{}},"name":{},"text":{},"component":{}}],["1.1.5",{"_index":1937,"title":{"27-7":{}},"name":{},"text":{},"component":{}}],["1.10",{"_index":720,"title":{"9-11":{},"14-18":{},"15-11":{}},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.11",{"_index":721,"title":{"9-12":{},"14-19":{}},"name":{},"text":{},"component":{}}],["1.11.1",{"_index":1010,"title":{"14-20":{}},"name":{},"text":{},"component":{}}],["1.12",{"_index":723,"title":{"9-13":{}},"name":{},"text":{},"component":{}}],["1.196259",{"_index":5047,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.196296",{"_index":5316,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.2",{"_index":77,"title":{"2-3":{},"4-3":{},"6-3":{},"7-3":{},"9-3":{},"12-3":{},"14-3":{},"15-3":{},"19-3":{},"21-3":{},"22-3":{},"26-3":{},"27-8":{},"28-3":{},"46-3":{},"54-3":{},"62-3":{},"63-3":{},"64-3":{},"65-3":{},"66-3":{},"67-3":{},"68-3":{},"69-3":{},"70-3":{},"71-3":{},"72-7":{},"73-3":{},"74-3":{},"75-3":{},"76-3":{},"79-3":{},"80-6":{},"84-3":{},"112-3":{},"162-3":{},"165-3":{},"171-3":{}},"name":{},"text":{},"component":{}}],["1.2.1",{"_index":517,"title":{"6-4":{},"28-4":{},"72-8":{},"79-4":{},"84-4":{},"165-4":{}},"name":{},"text":{},"component":{}}],["1.2.10",{"_index":530,"title":{"6-13":{}},"name":{},"text":{},"component":{}}],["1.2.11",{"_index":532,"title":{"6-14":{}},"name":{},"text":{},"component":{}}],["1.2.12",{"_index":534,"title":{"6-15":{}},"name":{},"text":{},"component":{}}],["1.2.13",{"_index":536,"title":{"6-16":{}},"name":{},"text":{},"component":{}}],["1.2.2",{"_index":518,"title":{"6-5":{},"28-5":{},"72-9":{},"79-5":{},"84-5":{},"165-5":{}},"name":{},"text":{},"component":{}}],["1.2.3",{"_index":519,"title":{"6-6":{},"72-10":{},"79-6":{},"165-6":{}},"name":{},"text":{},"component":{}}],["1.2.3.1",{"_index":5774,"title":{"72-11":{}},"name":{},"text":{},"component":{}}],["1.2.3.2",{"_index":5775,"title":{"72-12":{}},"name":{},"text":{},"component":{}}],["1.2.3.2.1",{"_index":5776,"title":{"72-13":{}},"name":{},"text":{},"component":{}}],["1.2.3.3",{"_index":5777,"title":{"72-16":{}},"name":{},"text":{},"component":{}}],["1.2.3.4",{"_index":5778,"title":{"72-17":{}},"name":{},"text":{},"component":{}}],["1.2.3.5",{"_index":5779,"title":{"72-18":{}},"name":{},"text":{},"component":{}}],["1.2.3.6",{"_index":5780,"title":{"72-19":{}},"name":{},"text":{},"component":{}}],["1.2.4",{"_index":520,"title":{"6-7":{},"79-7":{}},"name":{},"text":{},"component":{}}],["1.2.5",{"_index":522,"title":{"6-8":{},"79-8":{}},"name":{},"text":{},"component":{}}],["1.2.6",{"_index":523,"title":{"6-9":{}},"name":{},"text":{},"component":{}}],["1.2.7",{"_index":525,"title":{"6-10":{}},"name":{},"text":{},"component":{}}],["1.2.8",{"_index":527,"title":{"6-11":{}},"name":{},"text":{},"component":{}}],["1.2.9",{"_index":528,"title":{"6-12":{}},"name":{},"text":{},"component":{}}],["1.202400",{"_index":5049,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.209227",{"_index":5052,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.215711",{"_index":5054,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.221749",{"_index":5056,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.228197",{"_index":5058,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.234372",{"_index":5060,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.245566",{"_index":5061,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.258369",{"_index":4001,"title":{},"name":{},"text":{"53":{},"143":{}},"component":{}}],["1.270532",{"_index":5062,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.275507",{"_index":5063,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.281833",{"_index":5065,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.284563",{"_index":4006,"title":{},"name":{},"text":{"53":{},"143":{}},"component":{}}],["1.289435",{"_index":4009,"title":{},"name":{},"text":{"53":{},"143":{}},"component":{}}],["1.298073",{"_index":5066,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.3",{"_index":83,"title":{"2-4":{},"4-4":{},"7-4":{},"9-4":{},"12-4":{},"14-4":{},"15-4":{},"21-4":{},"22-4":{},"26-4":{},"27-9":{},"46-4":{},"54-4":{},"62-4":{},"63-4":{},"64-4":{},"65-4":{},"66-4":{},"67-4":{},"68-4":{},"69-4":{},"70-4":{},"71-4":{},"72-20":{},"73-4":{},"74-4":{},"75-4":{},"76-4":{},"80-7":{},"84-6":{},"112-4":{},"162-4":{},"165-7":{},"171-4":{}},"name":{},"text":{},"component":{}}],["1.3.1",{"_index":826,"title":{"12-5":{},"14-5":{},"21-5":{},"46-5":{},"54-5":{},"62-5":{},"63-5":{},"64-5":{},"65-5":{},"66-5":{},"67-5":{},"68-5":{},"69-5":{},"70-5":{},"71-5":{},"72-21":{},"73-5":{},"74-5":{},"75-5":{},"162-5":{},"165-8":{}},"name":{},"text":{},"component":{}}],["1.3.2",{"_index":828,"title":{"12-6":{},"14-6":{},"21-6":{},"46-6":{},"54-6":{},"62-6":{},"63-6":{},"64-6":{},"65-6":{},"66-6":{},"67-6":{},"68-6":{},"69-6":{},"70-6":{},"71-6":{},"72-22":{},"73-6":{},"74-6":{}},"name":{},"text":{},"component":{}}],["1.3.3",{"_index":829,"title":{"12-7":{},"46-7":{},"54-7":{},"62-7":{},"72-23":{}},"name":{},"text":{},"component":{}}],["1.3.4",{"_index":831,"title":{"12-8":{},"46-8":{},"62-8":{},"72-24":{}},"name":{},"text":{},"component":{}}],["1.3.5",{"_index":2539,"title":{"46-9":{},"62-9":{},"72-25":{}},"name":{},"text":{},"component":{}}],["1.3.6",{"_index":2540,"title":{"46-10":{},"62-10":{},"72-26":{}},"name":{},"text":{},"component":{}}],["1.302487",{"_index":5070,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.305841",{"_index":3646,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["1.306830",{"_index":5073,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.321451",{"_index":5076,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.327624",{"_index":5079,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.335771",{"_index":5080,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.344024",{"_index":5083,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.349790",{"_index":5085,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.355788",{"_index":5086,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.365823",{"_index":5089,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.374036",{"_index":5094,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.380611",{"_index":5097,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.384741",{"_index":5098,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.390928",{"_index":5101,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.396271",{"_index":5102,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.4",{"_index":86,"title":{"2-5":{},"4-5":{},"7-5":{},"9-5":{},"12-9":{},"14-7":{},"15-5":{},"27-10":{},"65-7":{},"66-7":{},"67-7":{},"68-7":{},"69-7":{},"70-7":{},"71-7":{},"72-27":{},"73-7":{},"74-7":{},"75-6":{},"80-8":{},"84-7":{},"112-5":{}},"name":{},"text":{},"component":{}}],["1.4.1",{"_index":832,"title":{"12-10":{},"65-8":{},"66-8":{},"67-8":{},"68-8":{},"69-8":{},"70-8":{},"72-28":{},"73-8":{},"74-8":{},"75-7":{}},"name":{},"text":{},"component":{}}],["1.4.1.1",{"_index":5953,"title":{"75-8":{}},"name":{},"text":{},"component":{}}],["1.4.1.2",{"_index":5954,"title":{"75-9":{}},"name":{},"text":{},"component":{}}],["1.4.1.3",{"_index":5955,"title":{"75-10":{}},"name":{},"text":{},"component":{}}],["1.4.1.4",{"_index":5956,"title":{"75-11":{}},"name":{},"text":{},"component":{}}],["1.4.1.5",{"_index":5957,"title":{"75-12":{}},"name":{},"text":{},"component":{}}],["1.4.2",{"_index":834,"title":{"12-11":{},"65-9":{},"66-9":{},"68-9":{},"69-9":{},"70-9":{},"72-29":{},"73-9":{}},"name":{},"text":{},"component":{}}],["1.4.2.1",{"_index":5820,"title":{"73-10":{}},"name":{},"text":{},"component":{}}],["1.4.3",{"_index":836,"title":{"12-12":{},"68-10":{},"72-30":{}},"name":{},"text":{},"component":{}}],["1.4.3.1",{"_index":5781,"title":{"72-31":{}},"name":{},"text":{},"component":{}}],["1.4.3.2",{"_index":5782,"title":{"72-32":{}},"name":{},"text":{},"component":{}}],["1.4.3.3",{"_index":5783,"title":{"72-33":{}},"name":{},"text":{},"component":{}}],["1.4.3.4",{"_index":5784,"title":{"72-34":{}},"name":{},"text":{},"component":{}}],["1.4.4",{"_index":5785,"title":{"72-35":{}},"name":{},"text":{},"component":{}}],["1.4.4.1",{"_index":5786,"title":{"72-36":{}},"name":{},"text":{},"component":{}}],["1.4.4.2",{"_index":5787,"title":{"72-37":{}},"name":{},"text":{},"component":{}}],["1.4.5",{"_index":5788,"title":{"72-38":{}},"name":{},"text":{},"component":{}}],["1.4.6",{"_index":5789,"title":{"72-39":{}},"name":{},"text":{},"component":{}}],["1.400953",{"_index":5103,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.406430",{"_index":5107,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.414869",{"_index":5108,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.424392",{"_index":5116,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.430830",{"_index":5118,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.439110",{"_index":5123,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.446313",{"_index":5126,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.45.5",{"_index":3635,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["1.45.6",{"_index":3667,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["1.451216",{"_index":5127,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.458973",{"_index":5128,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.459624",{"_index":3647,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["1.464744",{"_index":5129,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.468595",{"_index":5131,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.473078",{"_index":5132,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.478607",{"_index":5133,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.486250",{"_index":5134,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.492940",{"_index":5137,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.4k",{"_index":5946,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["1.5",{"_index":166,"title":{"4-6":{},"7-6":{},"9-6":{},"14-8":{},"15-6":{},"72-40":{},"80-9":{},"84-8":{},"112-6":{}},"name":{},"text":{},"component":{}}],["1.5.1",{"_index":1000,"title":{"14-9":{}},"name":{},"text":{},"component":{}}],["1.5.2",{"_index":1005,"title":{"14-13":{}},"name":{},"text":{},"component":{}}],["1.501392",{"_index":5140,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.509668",{"_index":5142,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.516876",{"_index":5143,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.521776",{"_index":5144,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.529545",{"_index":5145,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.535227",{"_index":5146,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.539058",{"_index":5147,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.546594",{"_index":5149,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.552306",{"_index":5151,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.558447",{"_index":5152,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.564974",{"_index":5154,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.571042",{"_index":5156,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.576779",{"_index":5158,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.584252",{"_index":5160,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.590802",{"_index":5162,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.596882",{"_index":5164,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.5gb",{"_index":2759,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["1.6",{"_index":169,"title":{"4-7":{},"7-7":{},"9-7":{},"14-14":{},"15-7":{},"72-41":{},"80-10":{},"84-9":{},"112-7":{}},"name":{},"text":{},"component":{}}],["1.6.1",{"_index":6069,"title":{"80-11":{},"84-10":{}},"name":{},"text":{},"component":{}}],["1.6.2",{"_index":6070,"title":{"80-12":{},"84-11":{}},"name":{},"text":{},"component":{}}],["1.6.3",{"_index":6071,"title":{"80-13":{},"84-12":{}},"name":{},"text":{},"component":{}}],["1.602596",{"_index":5166,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.608608",{"_index":5168,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.610121",{"_index":3652,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["1.614951",{"_index":5170,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.620901",{"_index":5172,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.627421",{"_index":5174,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.633458",{"_index":5176,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.639750",{"_index":5178,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.646351",{"_index":5180,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.652739",{"_index":5182,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.658492",{"_index":5184,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.664411",{"_index":5186,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.670937",{"_index":5188,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.676707",{"_index":5190,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.682931",{"_index":5192,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.683630",{"_index":3656,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["1.689159",{"_index":5193,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.693462",{"_index":5197,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.7",{"_index":172,"title":{"4-8":{},"7-8":{},"9-8":{},"14-15":{},"15-8":{},"72-42":{},"80-14":{},"84-13":{}},"name":{},"text":{},"component":{}}],["1.7.1",{"_index":6072,"title":{"80-15":{},"84-14":{}},"name":{},"text":{},"component":{}}],["1.7.2",{"_index":6073,"title":{"80-16":{},"84-15":{}},"name":{},"text":{},"component":{}}],["1.7.3",{"_index":6074,"title":{"80-17":{},"84-16":{}},"name":{},"text":{},"component":{}}],["1.7.4",{"_index":6345,"title":{"84-17":{}},"name":{},"text":{},"component":{}}],["1.700925",{"_index":5199,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.743909",{"_index":5203,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.74gb",{"_index":5452,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["1.755492",{"_index":5204,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.764722",{"_index":5205,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.770160",{"_index":5209,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.8",{"_index":665,"title":{"7-9":{},"9-9":{},"14-16":{},"15-9":{},"72-43":{},"80-18":{},"84-18":{}},"name":{},"text":{},"component":{}}],["1.8.1",{"_index":6075,"title":{"80-19":{},"84-19":{}},"name":{},"text":{},"component":{}}],["1.8.2",{"_index":6076,"title":{"80-20":{},"84-20":{}},"name":{},"text":{},"component":{}}],["1.8.3",{"_index":6346,"title":{"84-21":{}},"name":{},"text":{},"component":{}}],["1.8.4",{"_index":6347,"title":{"84-22":{}},"name":{},"text":{},"component":{}}],["1.80",{"_index":3658,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["1.812938",{"_index":5211,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.820576",{"_index":5213,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.825872",{"_index":5217,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.831462",{"_index":5219,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.836710",{"_index":5220,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.840241",{"_index":5221,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.844374",{"_index":5223,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.851579",{"_index":5225,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.855245",{"_index":5228,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.859386",{"_index":5231,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.866229",{"_index":5235,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.871416",{"_index":5237,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.875396",{"_index":5239,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.879842",{"_index":5240,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.884589",{"_index":5242,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.887586",{"_index":5243,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.891749",{"_index":5244,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.896163",{"_index":5247,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.9",{"_index":666,"title":{"7-10":{},"9-10":{},"14-17":{},"15-10":{},"84-23":{}},"name":{},"text":{},"component":{}}],["1.9.1",{"_index":6348,"title":{"84-24":{}},"name":{},"text":{},"component":{}}],["1.9.2",{"_index":6349,"title":{"84-25":{}},"name":{},"text":{},"component":{}}],["1.9.3",{"_index":6350,"title":{"84-26":{}},"name":{},"text":{},"component":{}}],["1.9.4",{"_index":6351,"title":{"84-27":{}},"name":{},"text":{},"component":{}}],["1.900630",{"_index":5250,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.904863",{"_index":5252,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.913635",{"_index":5255,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.916173",{"_index":5257,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.921314",{"_index":5258,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.937894",{"_index":5259,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.939755",{"_index":5260,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.948336",{"_index":5261,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.958150",{"_index":5262,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.958863",{"_index":5263,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.970417",{"_index":5264,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.979285",{"_index":5265,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1.amazonaws.com/?prefix=public_root/bsp",{"_index":1105,"title":{},"name":{},"text":{"14":{},"46":{},"62":{},"101":{},"134":{},"152":{}},"component":{}}],["1.amazonaws.com/?prefix=public_root/toolchain",{"_index":1117,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["1.amazonaws.com/public_root/bsp/mscc",{"_index":1111,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["1.amazonaws.com/public_root/toolchain/mscc",{"_index":1126,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["1/128",{"_index":3309,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["1/3",{"_index":1850,"title":{},"name":{},"text":{"23":{},"26":{},"111":{},"114":{}},"component":{}}],["1/name",{"_index":5575,"title":{},"name":{},"text":{"65":{},"154":{}},"component":{}}],["10",{"_index":628,"title":{"96-10":{},"99-10":{},"101-17":{}},"name":{},"text":{"6":{},"7":{},"10":{},"12":{},"14":{},"15":{},"26":{},"28":{},"29":{},"31":{},"48":{},"51":{},"52":{},"55":{},"59":{},"60":{},"65":{},"67":{},"68":{},"72":{},"81":{},"82":{},"84":{},"85":{},"86":{},"87":{},"92":{},"94":{},"97":{},"98":{},"99":{},"101":{},"114":{},"115":{},"117":{},"119":{},"137":{},"139":{},"141":{},"142":{},"146":{},"149":{},"150":{},"154":{},"157":{},"158":{},"162":{},"172":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["10,123",{"_index":600,"title":{},"name":{},"text":{"6":{},"94":{}},"component":{}}],["10.0",{"_index":2017,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["10.10.0.0/255.255.0.0",{"_index":6297,"title":{},"name":{},"text":{"82":{},"86":{},"87":{},"173":{},"177":{},"178":{}},"component":{}}],["10.10.0.42",{"_index":6395,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["10.10.0.84",{"_index":6398,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["10.10.10.10",{"_index":1776,"title":{},"name":{},"text":{"22":{},"82":{},"85":{},"86":{},"87":{},"109":{},"173":{},"176":{},"177":{},"178":{}},"component":{}}],["10.10.20.42",{"_index":6422,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["10.10.30.00/255.255.255.0",{"_index":6423,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["10.3.0",{"_index":2250,"title":{},"name":{},"text":{"33":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{}},"component":{}}],["10.99.10.1",{"_index":4760,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["10.99.10.174",{"_index":4758,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["100",{"_index":304,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"14":{},"15":{},"22":{},"23":{},"26":{},"53":{},"55":{},"69":{},"72":{},"77":{},"81":{},"82":{},"84":{},"86":{},"87":{},"90":{},"92":{},"94":{},"99":{},"101":{},"109":{},"111":{},"114":{},"143":{},"146":{},"159":{},"162":{},"167":{},"172":{},"173":{},"175":{},"177":{},"178":{}},"component":{}}],["100,200,300",{"_index":664,"title":{},"name":{},"text":{"6":{},"94":{}},"component":{}}],["1000",{"_index":230,"title":{"46-9":{},"55-32":{},"134-8":{},"146-31":{}},"name":{},"text":{"4":{},"6":{},"12":{},"15":{},"19":{},"22":{},"26":{},"46":{},"48":{},"55":{},"59":{},"62":{},"82":{},"84":{},"86":{},"87":{},"90":{},"94":{},"98":{},"99":{},"105":{},"109":{},"114":{},"134":{},"137":{},"146":{},"149":{},"152":{},"173":{},"175":{},"177":{},"178":{}},"component":{}}],["10000",{"_index":1783,"title":{},"name":{},"text":{"22":{},"23":{},"26":{},"28":{},"29":{},"85":{},"86":{},"87":{},"109":{},"111":{},"114":{},"115":{},"117":{},"176":{},"177":{},"178":{}},"component":{}}],["100000",{"_index":1848,"title":{},"name":{},"text":{"23":{},"111":{}},"component":{}}],["100000.mscc_sram",{"_index":5084,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1000000",{"_index":2143,"title":{},"name":{},"text":{"29":{},"48":{},"84":{},"86":{},"117":{},"137":{},"175":{},"177":{}},"component":{}}],["10000000",{"_index":1794,"title":{},"name":{},"text":{"23":{},"26":{},"28":{},"84":{},"86":{},"111":{},"114":{},"115":{},"175":{},"177":{}},"component":{}}],["100000000",{"_index":1752,"title":{},"name":{},"text":{"22":{},"23":{},"109":{},"111":{},"112":{}},"component":{}}],["1000000000",{"_index":1849,"title":{},"name":{},"text":{"23":{},"111":{},"112":{}},"component":{}}],["10000001",{"_index":6435,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["1000base",{"_index":5425,"title":{},"name":{},"text":{"61":{},"77":{},"151":{},"167":{}},"component":{}}],["1000baset/ful",{"_index":1364,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["1000baset/half",{"_index":1363,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["1000mb/",{"_index":1441,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["1001",{"_index":2629,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"74":{},"134":{},"146":{},"152":{},"164":{}},"component":{}}],["10014",{"_index":6565,"title":{},"name":{},"text":{"87":{},"178":{}},"component":{}}],["1004000",{"_index":1766,"title":{},"name":{},"text":{"22":{},"109":{}},"component":{}}],["100baset/ful",{"_index":1362,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["100baset/half",{"_index":1361,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["100kbit",{"_index":6531,"title":{},"name":{},"text":{"86":{},"87":{},"177":{},"178":{}},"component":{}}],["100m",{"_index":1803,"title":{},"name":{},"text":{"23":{},"111":{}},"component":{}}],["100mb/",{"_index":1370,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["100mbit",{"_index":1757,"title":{},"name":{},"text":{"22":{},"23":{},"87":{},"109":{},"111":{},"178":{}},"component":{}}],["100mhz",{"_index":2363,"title":{},"name":{},"text":{"38":{},"69":{},"125":{},"159":{}},"component":{}}],["101",{"_index":2796,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["1010",{"_index":2631,"title":{"62-8":{},"152-7":{}},"name":{},"text":{"46":{},"55":{},"62":{},"134":{},"146":{},"152":{}},"component":{}}],["1011",{"_index":2633,"title":{"62-9":{},"152-8":{}},"name":{},"text":{"46":{},"55":{},"62":{},"134":{},"146":{},"152":{}},"component":{}}],["102",{"_index":5555,"title":{},"name":{},"text":{"64":{},"155":{}},"component":{}}],["1023,3,16",{"_index":3623,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["1024",{"_index":3601,"title":{},"name":{},"text":{"50":{},"59":{},"66":{},"84":{},"138":{},"149":{},"156":{},"175":{}},"component":{}}],["1024+0",{"_index":4531,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["1024k",{"_index":4846,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1024m",{"_index":3165,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["103",{"_index":5556,"title":{},"name":{},"text":{"64":{},"155":{}},"component":{}}],["104",{"_index":3261,"title":{},"name":{},"text":{"48":{},"64":{},"68":{},"137":{},"155":{},"158":{}},"component":{}}],["1043817.472935",{"_index":4721,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1043817.762295",{"_index":4723,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1043817.890248",{"_index":4724,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1043818.038704",{"_index":4725,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1043818.038707",{"_index":4728,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1043818.039989",{"_index":4732,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1043818.230372",{"_index":4734,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["1043822.614597",{"_index":4738,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["104890368",{"_index":3137,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["105",{"_index":3264,"title":{},"name":{},"text":{"48":{},"64":{},"137":{},"155":{}},"component":{}}],["106",{"_index":1486,"title":{},"name":{},"text":{"15":{},"48":{},"53":{},"69":{},"99":{},"137":{},"143":{},"159":{}},"component":{}}],["106.4",{"_index":2870,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["106115072",{"_index":3104,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["107",{"_index":3266,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["108d517",{"_index":4763,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["10baset/ful",{"_index":1360,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["10baset/half",{"_index":1359,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["10g",{"_index":6016,"title":{},"name":{},"text":{"77":{},"167":{}},"component":{}}],["10gbp",{"_index":6086,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["10ge",{"_index":6012,"title":{},"name":{},"text":{"77":{},"167":{}},"component":{}}],["10m",{"_index":1799,"title":{},"name":{},"text":{"23":{},"111":{}},"component":{}}],["10mhz",{"_index":2362,"title":{},"name":{},"text":{"38":{},"125":{}},"component":{}}],["11",{"_index":654,"title":{"96-11":{},"101-18":{}},"name":{},"text":{"6":{},"29":{},"48":{},"52":{},"55":{},"59":{},"60":{},"68":{},"72":{},"87":{},"94":{},"117":{},"137":{},"142":{},"146":{},"149":{},"150":{},"158":{},"162":{},"178":{}},"component":{}}],["11.1",{"_index":6577,"title":{"101-19":{}},"name":{},"text":{},"component":{}}],["1100",{"_index":2635,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"134":{},"146":{},"152":{}},"component":{}}],["11000",{"_index":875,"title":{},"name":{},"text":{"12":{},"23":{},"98":{},"111":{}},"component":{}}],["1100000",{"_index":6359,"title":{},"name":{},"text":{"84":{},"86":{},"175":{},"177":{}},"component":{}}],["1101",{"_index":2637,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"134":{},"146":{},"152":{}},"component":{}}],["1110",{"_index":2639,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"134":{},"146":{},"152":{}},"component":{}}],["1111",{"_index":2542,"title":{"46-10":{},"55-33":{},"62-10":{},"134-9":{},"146-32":{},"152-9":{}},"name":{},"text":{"46":{},"55":{},"62":{},"134":{},"146":{},"152":{}},"component":{}}],["1111111100000000",{"_index":150,"title":{},"name":{},"text":{"2":{},"88":{}},"component":{}}],["112",{"_index":1492,"title":{},"name":{},"text":{"15":{},"74":{},"99":{},"164":{}},"component":{}}],["1124607.685978",{"_index":5826,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["1124610.736013",{"_index":5828,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["1124610.852447",{"_index":5830,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["1124610.852451",{"_index":5834,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["1124610.852452",{"_index":5835,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["1124610.852453",{"_index":5837,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["1124610.852454",{"_index":5838,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["1124610.866007",{"_index":5840,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["1124610.867021",{"_index":5843,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["1124613.768165",{"_index":5849,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["11368",{"_index":1460,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["114",{"_index":1452,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["115200",{"_index":5320,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["115200/8/n/1",{"_index":2687,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"134":{},"146":{},"152":{}},"component":{}}],["118",{"_index":5850,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["119296",{"_index":3600,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["11:23:26",{"_index":3675,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["11:36:08",{"_index":5812,"title":{},"name":{},"text":{"72":{},"162":{}},"component":{}}],["11:fb",{"_index":4253,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["12",{"_index":405,"title":{"96-12":{}},"name":{},"text":{"4":{},"29":{},"48":{},"52":{},"55":{},"68":{},"72":{},"74":{},"82":{},"84":{},"86":{},"87":{},"90":{},"117":{},"137":{},"142":{},"146":{},"158":{},"162":{},"164":{},"173":{},"175":{},"177":{},"178":{}},"component":{}}],["12.5",{"_index":4787,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["120",{"_index":4608,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["1200",{"_index":1798,"title":{},"name":{},"text":{"23":{},"86":{},"111":{},"177":{}},"component":{}}],["12000",{"_index":6485,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["1200000",{"_index":6360,"title":{},"name":{},"text":{"84":{},"87":{},"175":{},"178":{}},"component":{}}],["1200b",{"_index":1822,"title":{},"name":{},"text":{"23":{},"111":{}},"component":{}}],["120kb",{"_index":5456,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["122",{"_index":5829,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["12288",{"_index":6367,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["123",{"_index":2142,"title":{},"name":{},"text":{"29":{},"48":{},"117":{},"137":{}},"component":{}}],["123#1122334455667788",{"_index":3320,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["123#1234123412341234",{"_index":3326,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["1234",{"_index":6274,"title":{},"name":{},"text":{"81":{},"82":{},"86":{},"87":{},"172":{},"173":{},"177":{},"178":{}},"component":{}}],["12500000",{"_index":5037,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["127",{"_index":5712,"title":{},"name":{},"text":{"68":{},"158":{}},"component":{}}],["128",{"_index":2491,"title":{},"name":{},"text":{"45":{},"46":{},"49":{},"53":{},"55":{},"59":{},"62":{},"68":{},"69":{},"70":{},"72":{},"80":{},"133":{},"134":{},"136":{},"143":{},"146":{},"149":{},"152":{},"158":{},"159":{},"160":{},"162":{},"171":{}},"component":{}}],["1282.198583",{"_index":3335,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["128k",{"_index":4020,"title":{},"name":{},"text":{"53":{},"143":{}},"component":{}}],["128kb",{"_index":4411,"title":{},"name":{},"text":{"55":{},"61":{},"146":{},"151":{}},"component":{}}],["128m",{"_index":3155,"title":{},"name":{},"text":{"46":{},"53":{},"62":{},"134":{},"143":{},"152":{}},"component":{}}],["128mb",{"_index":2656,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["129",{"_index":5710,"title":{},"name":{},"text":{"68":{},"158":{}},"component":{}}],["1299999",{"_index":2144,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["12:41:04",{"_index":6200,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["12:41:16",{"_index":6246,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["12v",{"_index":5426,"title":{},"name":{},"text":{"61":{},"151":{}},"component":{}}],["13",{"_index":3832,"title":{},"name":{},"text":{"52":{},"68":{},"142":{},"158":{}},"component":{}}],["130",{"_index":5390,"title":{},"name":{},"text":{"60":{},"68":{},"150":{},"158":{}},"component":{}}],["1300000",{"_index":6362,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["131",{"_index":5363,"title":{},"name":{},"text":{"60":{},"150":{}},"component":{}}],["131072",{"_index":3625,"title":{},"name":{},"text":{"50":{},"53":{},"59":{},"66":{},"138":{},"143":{},"149":{},"156":{}},"component":{}}],["131087",{"_index":3624,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["131088",{"_index":3620,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["13139968",{"_index":4786,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["132",{"_index":5394,"title":{},"name":{},"text":{"60":{},"150":{}},"component":{}}],["133",{"_index":5714,"title":{},"name":{},"text":{"68":{},"158":{}},"component":{}}],["1333",{"_index":5420,"title":{},"name":{},"text":{"61":{},"151":{}},"component":{}}],["134",{"_index":2334,"title":{},"name":{},"text":{"37":{},"120":{}},"component":{}}],["134217728",{"_index":4018,"title":{},"name":{},"text":{"53":{},"143":{}},"component":{}}],["135",{"_index":5364,"title":{},"name":{},"text":{"60":{},"150":{}},"component":{}}],["13615",{"_index":4209,"title":{},"name":{},"text":{"55":{},"146":{}},"component":{}}],["1380byte",{"_index":2273,"title":{},"name":{},"text":{"33":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{}},"component":{}}],["14",{"_index":3833,"title":{},"name":{},"text":{"52":{},"55":{},"68":{},"72":{},"83":{},"142":{},"146":{},"158":{},"162":{},"174":{}},"component":{}}],["140",{"_index":5365,"title":{},"name":{},"text":{"60":{},"150":{}},"component":{}}],["1400000",{"_index":6364,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["1418m",{"_index":5550,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["1476",{"_index":6798,"title":{},"name":{},"text":{"165":{}},"component":{}}],["1480",{"_index":243,"title":{},"name":{},"text":{"4":{},"48":{},"90":{},"137":{}},"component":{}}],["14941",{"_index":1467,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["14:41:53",{"_index":5853,"title":{},"name":{},"text":{"73":{},"75":{},"163":{},"166":{}},"component":{}}],["15",{"_index":1874,"title":{},"name":{},"text":{"26":{},"28":{},"52":{},"53":{},"55":{},"68":{},"69":{},"72":{},"83":{},"114":{},"115":{},"142":{},"143":{},"146":{},"158":{},"159":{},"162":{},"165":{},"174":{}},"component":{}}],["1500",{"_index":234,"title":{},"name":{},"text":{"4":{},"15":{},"19":{},"48":{},"60":{},"75":{},"90":{},"99":{},"105":{},"137":{},"150":{},"166":{}},"component":{}}],["15000",{"_index":1797,"title":{},"name":{},"text":{"23":{},"111":{}},"component":{}}],["1500000",{"_index":6366,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["15000b",{"_index":1821,"title":{},"name":{},"text":{"23":{},"111":{}},"component":{}}],["1500m",{"_index":3621,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["15269854",{"_index":3153,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["15269888",{"_index":3145,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["153",{"_index":4680,"title":{},"name":{},"text":{"58":{},"145":{}},"component":{}}],["1536",{"_index":6370,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["1536kb",{"_index":2675,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["15704063",{"_index":5932,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["157e8ac",{"_index":3109,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["1588",{"_index":1940,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["16",{"_index":2501,"title":{},"name":{},"text":{"45":{},"48":{},"50":{},"51":{},"52":{},"53":{},"55":{},"59":{},"66":{},"67":{},"68":{},"69":{},"70":{},"72":{},"73":{},"75":{},"83":{},"84":{},"87":{},"133":{},"137":{},"138":{},"139":{},"142":{},"143":{},"146":{},"149":{},"156":{},"157":{},"158":{},"159":{},"160":{},"162":{},"163":{},"166":{},"174":{},"175":{},"178":{}},"component":{}}],["16.0",{"_index":3339,"title":{},"name":{},"text":{"48":{},"66":{},"137":{},"156":{}},"component":{}}],["16.0k",{"_index":5640,"title":{},"name":{},"text":{"67":{},"74":{},"157":{},"164":{}},"component":{}}],["160",{"_index":1456,"title":{},"name":{},"text":{"15":{},"80":{},"99":{},"171":{}},"component":{}}],["1600",{"_index":1349,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["16000",{"_index":6431,"title":{},"name":{},"text":{"84":{},"86":{},"87":{},"175":{},"177":{},"178":{}},"component":{}}],["16000b",{"_index":6566,"title":{},"name":{},"text":{"87":{},"178":{}},"component":{}}],["163",{"_index":5861,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["16384",{"_index":3693,"title":{},"name":{},"text":{"50":{},"59":{},"138":{},"149":{}},"component":{}}],["163840",{"_index":3688,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["17",{"_index":2087,"title":{},"name":{},"text":{"29":{},"52":{},"53":{},"68":{},"69":{},"82":{},"87":{},"117":{},"142":{},"143":{},"158":{},"159":{},"173":{},"178":{}},"component":{}}],["1705/8187",{"_index":6202,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["17179620",{"_index":1840,"title":{},"name":{},"text":{"23":{},"111":{}},"component":{}}],["17356055",{"_index":4762,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["174.322126",{"_index":3340,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["179",{"_index":3550,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["18",{"_index":3840,"title":{},"name":{},"text":{"52":{},"53":{},"60":{},"68":{},"69":{},"75":{},"142":{},"143":{},"150":{},"158":{},"159":{},"165":{},"166":{}},"component":{}}],["18.4",{"_index":4792,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["180",{"_index":3533,"title":{},"name":{},"text":{"50":{},"52":{},"66":{},"138":{},"142":{},"156":{}},"component":{}}],["180degre",{"_index":3528,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["18432",{"_index":6355,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["1849/8187",{"_index":6247,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["185k",{"_index":4847,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["18808",{"_index":4791,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["18810",{"_index":4795,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["18859619",{"_index":6268,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["19",{"_index":572,"title":{},"name":{},"text":{"6":{},"29":{},"52":{},"59":{},"68":{},"69":{},"74":{},"94":{},"117":{},"142":{},"149":{},"158":{},"159":{},"164":{}},"component":{}}],["1900000",{"_index":2971,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["19112604462750000",{"_index":4929,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["192",{"_index":2141,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["192.168.0.1",{"_index":2859,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["192.168.0.10",{"_index":2855,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["192.168.0.20",{"_index":2869,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["192.168.1.1",{"_index":261,"title":{},"name":{},"text":{"4":{},"15":{},"19":{},"90":{},"99":{},"105":{}},"component":{}}],["192.168.1.1/24",{"_index":264,"title":{},"name":{},"text":{"4":{},"15":{},"19":{},"90":{},"99":{},"105":{}},"component":{}}],["192.168.1.1/32",{"_index":1340,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["192.168.1.2",{"_index":274,"title":{},"name":{},"text":{"4":{},"15":{},"19":{},"90":{},"99":{},"105":{}},"component":{}}],["194253029d50fd3b",{"_index":5915,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["1970",{"_index":3638,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["1:0",{"_index":1867,"title":{},"name":{},"text":{"26":{},"28":{},"85":{},"114":{},"115":{},"176":{}},"component":{}}],["1:1",{"_index":6473,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["1:1.0",{"_index":5293,"title":{},"name":{},"text":{"59":{},"74":{},"149":{},"164":{}},"component":{}}],["1:2::3:4",{"_index":6518,"title":{},"name":{},"text":{"86":{},"177":{}},"component":{}}],["1:5",{"_index":1869,"title":{},"name":{},"text":{"26":{},"28":{},"85":{},"114":{},"115":{},"176":{}},"component":{}}],["1:6",{"_index":1895,"title":{},"name":{},"text":{"26":{},"114":{}},"component":{}}],["1=minim",{"_index":2048,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["1@0",{"_index":1903,"title":{},"name":{},"text":{"26":{},"114":{}},"component":{}}],["1@1",{"_index":1904,"title":{},"name":{},"text":{"26":{},"114":{}},"component":{}}],["1@2",{"_index":1905,"title":{},"name":{},"text":{"26":{},"114":{}},"component":{}}],["1@3",{"_index":1906,"title":{},"name":{},"text":{"26":{},"114":{}},"component":{}}],["1@4",{"_index":1907,"title":{},"name":{},"text":{"26":{},"114":{}},"component":{}}],["1@5",{"_index":1908,"title":{},"name":{},"text":{"26":{},"114":{}},"component":{}}],["1@6",{"_index":1909,"title":{},"name":{},"text":{"26":{},"114":{}},"component":{}}],["1@7",{"_index":1910,"title":{},"name":{},"text":{"26":{},"114":{}},"component":{}}],["1be9268f",{"_index":6146,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["1d2f000",{"_index":6215,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["1e0000",{"_index":4028,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["1e65b9589954",{"_index":6136,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["1g",{"_index":2294,"title":{},"name":{},"text":{"35":{},"36":{},"53":{},"69":{},"123":{},"124":{},"143":{},"159":{}},"component":{}}],["1gb",{"_index":2667,"title":{},"name":{},"text":{"46":{},"61":{},"62":{},"134":{},"151":{},"152":{}},"component":{}}],["1gbp",{"_index":6087,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["1hr",{"_index":2337,"title":{},"name":{},"text":{"37":{},"120":{}},"component":{}}],["1m",{"_index":621,"title":{},"name":{},"text":{"6":{},"28":{},"86":{},"94":{},"115":{},"177":{}},"component":{}}],["1mb",{"_index":6104,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["1mbp",{"_index":6430,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["1min",{"_index":615,"title":{},"name":{},"text":{"6":{},"94":{}},"component":{}}],["1pp",{"_index":1966,"title":{},"name":{},"text":{"27":{},"36":{},"43":{},"112":{},"124":{},"130":{}},"component":{}}],["1s",{"_index":682,"title":{},"name":{},"text":{"7":{},"23":{},"80":{},"92":{},"111":{},"171":{}},"component":{}}],["1u",{"_index":1847,"title":{},"name":{},"text":{"23":{},"111":{}},"component":{}}],["2",{"_index":151,"title":{"6-17":{},"6-20":{},"8-2":{},"16-2":{},"29-2":{},"30-2":{},"46-11":{},"61-2":{},"62-11":{},"77-2":{},"81-2":{},"82-2":{},"85-2":{},"86-2":{},"87-2":{},"88-2":{},"90-2":{},"92-2":{},"94-2":{},"94-19":{},"95-2":{},"96-2":{},"98-2":{},"99-2":{},"101-2":{},"104-2":{},"105-2":{},"108-2":{},"109-2":{},"112-8":{},"114-2":{},"115-2":{},"116-2":{},"134-2":{},"144-2":{},"151-2":{},"152-2":{},"153-2":{},"154-2":{},"155-2":{},"156-2":{},"157-2":{},"158-2":{},"159-2":{},"160-2":{},"161-2":{},"162-6":{},"163-2":{},"164-2":{},"166-2":{},"167-2":{},"168-2":{},"170-2":{},"171-5":{},"172-2":{},"173-2":{},"175-2":{},"176-2":{},"177-2":{},"178-2":{}},"name":{},"text":{"2":{},"4":{},"6":{},"10":{},"12":{},"15":{},"16":{},"22":{},"23":{},"26":{},"27":{},"29":{},"31":{},"34":{},"36":{},"37":{},"46":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"59":{},"60":{},"61":{},"62":{},"65":{},"66":{},"67":{},"68":{},"69":{},"71":{},"72":{},"73":{},"74":{},"79":{},"80":{},"81":{},"82":{},"84":{},"85":{},"86":{},"87":{},"88":{},"90":{},"94":{},"97":{},"98":{},"99":{},"104":{},"109":{},"111":{},"112":{},"114":{},"117":{},"119":{},"120":{},"121":{},"124":{},"134":{},"136":{},"137":{},"138":{},"139":{},"142":{},"143":{},"144":{},"146":{},"147":{},"149":{},"150":{},"151":{},"152":{},"154":{},"156":{},"157":{},"158":{},"159":{},"161":{},"162":{},"163":{},"164":{},"165":{},"170":{},"171":{},"172":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["2#conf",{"_index":6654,"title":{},"name":{},"text":{"140":{}},"component":{}}],["2,1",{"_index":6606,"title":{},"name":{},"text":{"112":{}},"component":{}}],["2.0",{"_index":3246,"title":{},"name":{},"text":{"48":{},"59":{},"61":{},"64":{},"137":{},"149":{},"151":{},"155":{}},"component":{}}],["2.00",{"_index":3570,"title":{},"name":{},"text":{"50":{},"52":{},"59":{},"74":{},"138":{},"142":{},"149":{},"164":{}},"component":{}}],["2.1",{"_index":537,"title":{"6-18":{},"46-12":{},"62-12":{},"85-3":{},"94-3":{},"104-3":{},"115-3":{},"162-7":{},"170-3":{},"173-3":{},"175-3":{},"176-3":{}},"name":{},"text":{},"component":{}}],["2.1.1",{"_index":6437,"title":{"85-4":{},"176-4":{}},"name":{},"text":{},"component":{}}],["2.1.2",{"_index":6440,"title":{"85-5":{},"176-5":{}},"name":{},"text":{},"component":{}}],["2.1.3",{"_index":6441,"title":{"85-9":{},"176-9":{}},"name":{},"text":{},"component":{}}],["2.10",{"_index":6570,"title":{"94-12":{}},"name":{},"text":{},"component":{}}],["2.11",{"_index":6571,"title":{"94-13":{}},"name":{},"text":{},"component":{}}],["2.12",{"_index":6572,"title":{"94-14":{}},"name":{},"text":{},"component":{}}],["2.13",{"_index":6573,"title":{"94-15":{}},"name":{},"text":{},"component":{}}],["2.165688",{"_index":5270,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["2.2",{"_index":538,"title":{"6-19":{},"46-13":{},"62-13":{},"85-12":{},"94-4":{},"104-4":{},"115-4":{},"162-8":{},"170-4":{},"173-4":{},"175-4":{},"176-12":{}},"name":{},"text":{},"component":{}}],["2.3",{"_index":539,"title":{"6-20":{},"85-13":{},"94-5":{},"104-5":{},"162-9":{},"170-5":{},"173-5":{},"176-13":{}},"name":{},"text":{},"component":{}}],["2.3.1",{"_index":6442,"title":{"85-14":{},"104-6":{},"162-10":{},"176-14":{}},"name":{},"text":{},"component":{}}],["2.3.2",{"_index":6443,"title":{"85-15":{},"104-7":{},"162-11":{},"176-15":{}},"name":{},"text":{},"component":{}}],["2.3.2.1",{"_index":6713,"title":{"162-12":{}},"name":{},"text":{},"component":{}}],["2.3.3",{"_index":6444,"title":{"85-16":{},"104-8":{},"162-15":{},"176-16":{}},"name":{},"text":{},"component":{}}],["2.3.4",{"_index":6579,"title":{"104-9":{},"162-16":{}},"name":{},"text":{},"component":{}}],["2.3.5",{"_index":6714,"title":{"162-17":{}},"name":{},"text":{},"component":{}}],["2.3.6",{"_index":6715,"title":{"162-18":{}},"name":{},"text":{},"component":{}}],["2.373076",{"_index":3955,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["2.378776",{"_index":3956,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["2.387639",{"_index":3957,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["2.388324",{"_index":3958,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["2.396863",{"_index":5616,"title":{},"name":{},"text":{"66":{},"156":{}},"component":{}}],["2.399663",{"_index":3959,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["2.4",{"_index":540,"title":{"6-21":{},"85-17":{},"94-6":{},"170-6":{},"173-6":{},"176-17":{}},"name":{},"text":{},"component":{}}],["2.4.3",{"_index":6788,"title":{},"name":{},"text":{"165":{}},"component":{}}],["2.410084",{"_index":3960,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["2.5",{"_index":541,"title":{"6-22":{},"85-18":{},"94-7":{},"170-7":{},"173-7":{},"176-18":{}},"name":{},"text":{"55":{},"146":{}},"component":{}}],["2.534391",{"_index":5618,"title":{},"name":{},"text":{"66":{},"156":{}},"component":{}}],["2.537072",{"_index":5619,"title":{},"name":{},"text":{"66":{},"156":{}},"component":{}}],["2.542775",{"_index":5620,"title":{},"name":{},"text":{"66":{},"156":{}},"component":{}}],["2.550291",{"_index":5622,"title":{},"name":{},"text":{"66":{},"156":{}},"component":{}}],["2.552831",{"_index":5628,"title":{},"name":{},"text":{"66":{},"156":{}},"component":{}}],["2.557425",{"_index":5629,"title":{},"name":{},"text":{"66":{},"156":{}},"component":{}}],["2.562100",{"_index":5630,"title":{},"name":{},"text":{"66":{},"156":{}},"component":{}}],["2.5g",{"_index":2293,"title":{},"name":{},"text":{"35":{},"36":{},"123":{},"124":{}},"component":{}}],["2.5g_port",{"_index":2291,"title":{},"name":{},"text":{"35":{},"36":{},"123":{},"124":{}},"component":{}}],["2.5gb/",{"_index":2310,"title":{},"name":{},"text":{"36":{},"124":{}},"component":{}}],["2.6",{"_index":6567,"title":{"94-8":{},"173-8":{}},"name":{},"text":{},"component":{}}],["2.620999",{"_index":5631,"title":{},"name":{},"text":{"66":{},"156":{}},"component":{}}],["2.623655",{"_index":5633,"title":{},"name":{},"text":{"66":{},"156":{}},"component":{}}],["2.7",{"_index":6568,"title":{"94-9":{}},"name":{},"text":{},"component":{}}],["2.738213",{"_index":5635,"title":{},"name":{},"text":{"66":{},"156":{}},"component":{}}],["2.8",{"_index":6569,"title":{"94-10":{}},"name":{},"text":{},"component":{}}],["2.9",{"_index":3107,"title":{"94-11":{}},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["20",{"_index":655,"title":{},"name":{},"text":{"6":{},"7":{},"23":{},"27":{},"47":{},"50":{},"52":{},"53":{},"60":{},"63":{},"65":{},"68":{},"69":{},"75":{},"80":{},"85":{},"92":{},"94":{},"111":{},"112":{},"135":{},"138":{},"142":{},"143":{},"150":{},"153":{},"154":{},"158":{},"159":{},"166":{},"171":{},"176":{}},"component":{}}],["20.04",{"_index":1032,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["20.20.0.0/255.255.0.0",{"_index":6311,"title":{},"name":{},"text":{"82":{},"86":{},"87":{},"173":{},"177":{},"178":{}},"component":{}}],["20.20.20.20",{"_index":6310,"title":{},"name":{},"text":{"82":{},"85":{},"86":{},"87":{},"173":{},"176":{},"177":{},"178":{}},"component":{}}],["20.20.20.20/255.255.0.0",{"_index":6303,"title":{},"name":{},"text":{"82":{},"87":{},"173":{},"178":{}},"component":{}}],["200",{"_index":631,"title":{},"name":{},"text":{"6":{},"7":{},"22":{},"23":{},"80":{},"81":{},"84":{},"86":{},"92":{},"94":{},"109":{},"111":{},"171":{},"172":{},"175":{},"177":{}},"component":{}}],["2000",{"_index":6323,"title":{},"name":{},"text":{"82":{},"84":{},"86":{},"87":{},"112":{},"173":{},"175":{},"177":{},"178":{}},"component":{}}],["20000",{"_index":1777,"title":{},"name":{},"text":{"22":{},"109":{}},"component":{}}],["200000",{"_index":2970,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["200000.usb",{"_index":4612,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["20000000",{"_index":2027,"title":{},"name":{},"text":{"27":{},"82":{},"84":{},"112":{},"173":{},"175":{}},"component":{}}],["200000000",{"_index":6604,"title":{},"name":{},"text":{"112":{}},"component":{}}],["20002",{"_index":6488,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["2001:0:0:0:e1de:2244:0ff8:0123",{"_index":6333,"title":{},"name":{},"text":{"82":{},"86":{},"87":{},"173":{},"177":{},"178":{}},"component":{}}],["2001:0:0:0:e1de:2244:0ff8:4567",{"_index":6334,"title":{},"name":{},"text":{"82":{},"86":{},"87":{},"173":{},"177":{},"178":{}},"component":{}}],["2001:0db8:3c4d:0015:e1de:2244:0ff8:0123",{"_index":6337,"title":{},"name":{},"text":{"82":{},"86":{},"87":{},"173":{},"177":{},"178":{}},"component":{}}],["2001:0db8:3c4d:0015:e1de:2244:0ff8:0123/32",{"_index":6553,"title":{},"name":{},"text":{"87":{},"178":{}},"component":{}}],["2001:0db8:3c4d:0015:e1de:2244:0ff8:4567",{"_index":6525,"title":{},"name":{},"text":{"86":{},"87":{},"177":{},"178":{}},"component":{}}],["2001:0db8:3c4d:0015:e1de:2244:0ff8:4567/64",{"_index":6338,"title":{},"name":{},"text":{"82":{},"87":{},"173":{},"178":{}},"component":{}}],["2002",{"_index":6499,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["2005",{"_index":4971,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["2006",{"_index":6495,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["2007",{"_index":4972,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["2009/01/31",{"_index":5012,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["200929",{"_index":5586,"title":{},"name":{},"text":{"65":{},"154":{}},"component":{}}],["200m",{"_index":6602,"title":{},"name":{},"text":{"112":{}},"component":{}}],["200u",{"_index":6534,"title":{},"name":{},"text":{"86":{},"177":{}},"component":{}}],["20100000",{"_index":6301,"title":{},"name":{},"text":{"82":{},"84":{},"173":{},"175":{}},"component":{}}],["2016",{"_index":813,"title":{},"name":{},"text":{"10":{},"85":{},"97":{},"176":{}},"component":{}}],["2016.09",{"_index":2255,"title":{},"name":{},"text":{"33":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{}},"component":{}}],["2017",{"_index":842,"title":{},"name":{},"text":{"12":{},"23":{},"98":{},"111":{}},"component":{}}],["2018",{"_index":571,"title":{},"name":{},"text":{"6":{},"14":{},"23":{},"26":{},"28":{},"36":{},"85":{},"94":{},"101":{},"111":{},"114":{},"115":{},"124":{},"176":{}},"component":{}}],["2019.04",{"_index":2253,"title":{},"name":{},"text":{"33":{},"35":{},"36":{},"38":{},"39":{},"59":{},"60":{},"122":{},"123":{},"124":{},"125":{},"126":{},"149":{},"150":{}},"component":{}}],["2019.10",{"_index":2254,"title":{},"name":{},"text":{"33":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"80":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"171":{}},"component":{}}],["2020",{"_index":1947,"title":{},"name":{},"text":{"27":{},"50":{},"66":{},"112":{},"138":{},"156":{}},"component":{}}],["2021",{"_index":2192,"title":{},"name":{},"text":{"31":{},"32":{},"50":{},"59":{},"60":{},"118":{},"119":{},"138":{},"149":{},"150":{}},"component":{}}],["2021.02",{"_index":1122,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["2021.02.7",{"_index":2251,"title":{},"name":{},"text":{"33":{},"80":{},"122":{},"171":{}},"component":{}}],["2021.03",{"_index":2220,"title":{},"name":{},"text":{"32":{},"118":{}},"component":{}}],["2021.04",{"_index":2405,"title":{},"name":{},"text":{"43":{},"130":{},"131":{}},"component":{}}],["2021.06",{"_index":2190,"title":{"32":{},"118":{},"32-1":{}},"name":{"32":{},"118":{}},"text":{"31":{},"32":{},"118":{},"119":{}},"component":{}}],["2021.09",{"_index":1116,"title":{"31":{},"119":{},"31-1":{}},"name":{"31":{},"119":{}},"text":{"14":{},"31":{},"34":{},"44":{},"101":{},"119":{},"121":{},"132":{}},"component":{}}],["2021.09.tar.gz",{"_index":1108,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["2021.09/arm_standalone_defconfig.log",{"_index":1175,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["2021.12",{"_index":2246,"title":{"34":{},"37":{},"120":{},"121":{},"34-1":{},"37-1":{}},"name":{"34":{},"37":{},"120":{},"121":{}},"text":{"33":{},"34":{},"37":{},"44":{},"120":{},"121":{},"122":{},"132":{}},"component":{}}],["2022",{"_index":2247,"title":{},"name":{},"text":{"33":{},"34":{},"35":{},"36":{},"37":{},"55":{},"60":{},"72":{},"75":{},"80":{},"120":{},"121":{},"122":{},"123":{},"124":{},"146":{},"150":{},"162":{},"165":{},"166":{},"171":{}},"component":{}}],["2022.02.2",{"_index":2278,"title":{},"name":{},"text":{"35":{},"123":{}},"component":{}}],["2022.02.5",{"_index":2304,"title":{},"name":{},"text":{"36":{},"38":{},"124":{},"125":{}},"component":{}}],["2022.02.8",{"_index":2368,"title":{},"name":{},"text":{"39":{},"126":{}},"component":{}}],["2022.03",{"_index":2243,"title":{"33":{},"122":{},"33-1":{}},"name":{"33":{},"122":{}},"text":{"33":{},"35":{},"44":{},"122":{},"123":{},"132":{}},"component":{}}],["2022.06",{"_index":2274,"title":{"35":{},"123":{},"35-1":{}},"name":{"35":{},"123":{}},"text":{"35":{},"36":{},"44":{},"123":{},"124":{},"132":{}},"component":{}}],["2022.09",{"_index":2296,"title":{"36":{},"124":{},"36-1":{}},"name":{"36":{},"124":{}},"text":{"36":{},"38":{},"44":{},"124":{},"125":{},"132":{}},"component":{}}],["2022.12",{"_index":2340,"title":{"38":{},"125":{},"38-1":{}},"name":{"38":{},"125":{}},"text":{"38":{},"39":{},"44":{},"125":{},"126":{},"132":{}},"component":{}}],["2023",{"_index":2343,"title":{},"name":{},"text":{"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"72":{},"73":{},"74":{},"75":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"162":{},"163":{},"164":{},"166":{}},"component":{}}],["2023.02",{"_index":2373,"title":{},"name":{},"text":{"40":{},"42":{},"127":{},"129":{}},"component":{}}],["2023.02.2",{"_index":2391,"title":{},"name":{},"text":{"41":{},"128":{}},"component":{}}],["2023.02.4",{"_index":2403,"title":{},"name":{},"text":{"43":{},"130":{}},"component":{}}],["2023.03",{"_index":2365,"title":{"39":{},"126":{},"39-1":{}},"name":{"39":{},"126":{}},"text":{"39":{},"40":{},"44":{},"126":{},"127":{},"132":{}},"component":{}}],["2023.04",{"_index":2374,"title":{},"name":{},"text":{"40":{},"41":{},"42":{},"43":{},"73":{},"75":{},"127":{},"128":{},"129":{},"130":{},"131":{},"163":{},"166":{}},"component":{}}],["2023.06",{"_index":2371,"title":{"40":{},"127":{},"40-1":{}},"name":{"40":{},"127":{}},"text":{"40":{},"42":{},"44":{},"127":{},"129":{},"132":{}},"component":{}}],["2023.09",{"_index":2389,"title":{"41":{},"42":{},"128":{},"129":{},"41-1":{},"42-1":{}},"name":{"41":{},"42":{},"128":{},"129":{}},"text":{"41":{},"42":{},"43":{},"44":{},"128":{},"129":{},"130":{},"132":{}},"component":{}}],["2023.12",{"_index":2399,"title":{"43":{},"130":{},"43-1":{}},"name":{"43":{},"130":{}},"text":{"43":{},"44":{},"130":{},"131":{},"132":{}},"component":{}}],["2024",{"_index":2400,"title":{},"name":{},"text":{"43":{},"130":{},"131":{}},"component":{}}],["2024.02.8",{"_index":6610,"title":{},"name":{},"text":{"131":{}},"component":{}}],["2024.03",{"_index":6608,"title":{"131":{}},"name":{"131":{}},"text":{"131":{},"132":{}},"component":{}}],["2047",{"_index":3744,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["2048",{"_index":4010,"title":{},"name":{},"text":{"53":{},"58":{},"59":{},"62":{},"69":{},"143":{},"145":{},"149":{},"152":{},"159":{},"165":{}},"component":{}}],["2048+0",{"_index":4529,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["2048k",{"_index":3160,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["2048mb",{"_index":5416,"title":{},"name":{},"text":{"61":{},"77":{},"151":{},"167":{}},"component":{}}],["2067",{"_index":5810,"title":{},"name":{},"text":{"72":{},"162":{}},"component":{}}],["208960",{"_index":3106,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["2097152",{"_index":4690,"title":{},"name":{},"text":{"58":{},"69":{},"145":{},"159":{}},"component":{}}],["20mb",{"_index":6107,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["20mhz",{"_index":3994,"title":{},"name":{},"text":{"53":{},"143":{}},"component":{}}],["21",{"_index":573,"title":{},"name":{},"text":{"6":{},"29":{},"50":{},"52":{},"65":{},"66":{},"68":{},"84":{},"85":{},"94":{},"117":{},"138":{},"142":{},"154":{},"156":{},"158":{},"175":{},"176":{}},"component":{}}],["210",{"_index":3473,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["21000",{"_index":1780,"title":{},"name":{},"text":{"22":{},"85":{},"109":{},"176":{}},"component":{}}],["213808",{"_index":6253,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["2199023255540n",{"_index":4880,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["22",{"_index":133,"title":{},"name":{},"text":{"2":{},"6":{},"15":{},"29":{},"48":{},"52":{},"60":{},"68":{},"88":{},"94":{},"99":{},"117":{},"137":{},"142":{},"150":{},"158":{}},"component":{}}],["222.855",{"_index":6269,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["22244477111333666",{"_index":149,"title":{},"name":{},"text":{"2":{},"88":{}},"component":{}}],["224",{"_index":2505,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["22538412",{"_index":3108,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["229376",{"_index":3689,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["23",{"_index":2092,"title":{},"name":{},"text":{"29":{},"52":{},"68":{},"117":{},"142":{},"158":{}},"component":{}}],["231",{"_index":3474,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["232r",{"_index":5276,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["24",{"_index":2094,"title":{},"name":{},"text":{"29":{},"52":{},"55":{},"60":{},"68":{},"77":{},"117":{},"142":{},"146":{},"150":{},"158":{},"167":{}},"component":{}}],["245760",{"_index":1854,"title":{},"name":{},"text":{"23":{},"111":{}},"component":{}}],["247",{"_index":3556,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["247:0",{"_index":3576,"title":{},"name":{},"text":{"50":{},"52":{},"59":{},"66":{},"138":{},"142":{},"149":{},"156":{}},"component":{}}],["248",{"_index":2024,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["24:19",{"_index":4386,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["24c512",{"_index":3440,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["24port",{"_index":2394,"title":{"77-4":{},"167-4":{}},"name":{},"text":{"41":{},"42":{},"64":{},"65":{},"70":{},"73":{},"74":{},"77":{},"128":{},"129":{},"154":{},"155":{},"160":{},"163":{},"164":{},"167":{}},"component":{}}],["25",{"_index":2096,"title":{},"name":{},"text":{"29":{},"52":{},"68":{},"117":{},"142":{},"158":{}},"component":{}}],["250",{"_index":5021,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["25000000",{"_index":4396,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["250mhz",{"_index":5564,"title":{},"name":{},"text":{"65":{},"71":{},"73":{},"154":{},"161":{},"163":{}},"component":{}}],["252",{"_index":3475,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["252.0",{"_index":2019,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["254",{"_index":1990,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["255",{"_index":896,"title":{},"name":{},"text":{"12":{},"29":{},"84":{},"98":{},"117":{},"175":{}},"component":{}}],["255.255.255.0",{"_index":2857,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["2558",{"_index":1447,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["256",{"_index":474,"title":{},"name":{},"text":{"4":{},"23":{},"29":{},"45":{},"46":{},"55":{},"59":{},"60":{},"62":{},"72":{},"73":{},"80":{},"84":{},"90":{},"111":{},"117":{},"133":{},"134":{},"146":{},"149":{},"150":{},"152":{},"162":{},"163":{},"171":{},"175":{}},"component":{}}],["256kb",{"_index":2678,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["256mb",{"_index":5412,"title":{},"name":{},"text":{"61":{},"77":{},"80":{},"151":{},"167":{},"171":{}},"component":{}}],["25bae7c7d16c",{"_index":3673,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["25gbp",{"_index":6088,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["25mb",{"_index":3133,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["26",{"_index":2098,"title":{},"name":{},"text":{"29":{},"52":{},"68":{},"117":{},"142":{},"158":{}},"component":{}}],["26.6",{"_index":5868,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["260",{"_index":2217,"title":{},"name":{},"text":{"31":{},"33":{},"34":{},"37":{},"119":{},"120":{},"121":{},"122":{}},"component":{}}],["260608",{"_index":4831,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["262",{"_index":4062,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["262144",{"_index":4835,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["262207",{"_index":3154,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["262208",{"_index":3156,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["2629695",{"_index":3164,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["2629696",{"_index":3166,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["2631679",{"_index":5545,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["2631680",{"_index":5546,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["264191",{"_index":5537,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["264192",{"_index":5538,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["26n",{"_index":4878,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["27",{"_index":1568,"title":{},"name":{},"text":{"15":{},"29":{},"52":{},"59":{},"68":{},"73":{},"75":{},"99":{},"117":{},"142":{},"149":{},"158":{},"163":{},"166":{}},"component":{}}],["270",{"_index":3531,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["27258",{"_index":5867,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["273",{"_index":3476,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["28",{"_index":3848,"title":{},"name":{},"text":{"52":{},"53":{},"59":{},"68":{},"69":{},"74":{},"75":{},"142":{},"143":{},"149":{},"158":{},"159":{},"164":{},"166":{}},"component":{}}],["28724k",{"_index":4849,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["28:04:48:47:66:1e:e4:36:26:ad:5d:1d:83:45:41",{"_index":4257,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["28k",{"_index":5944,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["29",{"_index":1448,"title":{},"name":{},"text":{"15":{},"52":{},"53":{},"65":{},"68":{},"69":{},"99":{},"142":{},"143":{},"154":{},"158":{},"159":{}},"component":{}}],["29.7",{"_index":3655,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["2928k",{"_index":4844,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["2933.075931",{"_index":5960,"title":{},"name":{},"text":{"75":{},"166":{}},"component":{}}],["294912",{"_index":3690,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["2:0",{"_index":2036,"title":{},"name":{},"text":{"28":{},"115":{}},"component":{}}],["2=some",{"_index":2047,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["2b7e151628aed2a6abf7158809cf4f3c",{"_index":2495,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["2c",{"_index":5572,"title":{},"name":{},"text":{"65":{},"154":{}},"component":{}}],["2c6f",{"_index":3062,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["2c7f",{"_index":6803,"title":{},"name":{},"text":{"165":{}},"component":{}}],["2d",{"_index":4045,"title":{},"name":{},"text":{"53":{},"65":{},"69":{},"143":{},"154":{},"159":{}},"component":{}}],["2gb",{"_index":5422,"title":{},"name":{},"text":{"61":{},"151":{}},"component":{}}],["2k",{"_index":4022,"title":{},"name":{},"text":{"53":{},"143":{}},"component":{}}],["2kb",{"_index":1759,"title":{},"name":{},"text":{"22":{},"87":{},"109":{},"178":{}},"component":{}}],["2m",{"_index":4691,"title":{},"name":{},"text":{"58":{},"69":{},"145":{},"159":{}},"component":{}}],["2mb",{"_index":2661,"title":{},"name":{},"text":{"46":{},"61":{},"62":{},"72":{},"77":{},"134":{},"151":{},"152":{},"162":{},"167":{}},"component":{}}],["2x",{"_index":5423,"title":{},"name":{},"text":{"61":{},"151":{}},"component":{}}],["3",{"_index":152,"title":{"6-21":{},"8-3":{},"16-3":{},"46-14":{},"61-3":{},"62-14":{},"77-3":{},"81-3":{},"82-3":{},"85-19":{},"86-3":{},"87-3":{},"88-3":{},"90-3":{},"92-3":{},"94-16":{},"94-20":{},"95-3":{},"96-3":{},"98-3":{},"99-3":{},"101-3":{},"108-3":{},"109-3":{},"112-9":{},"114-3":{},"134-3":{},"144-3":{},"151-3":{},"152-3":{},"153-3":{},"154-3":{},"155-3":{},"156-3":{},"157-3":{},"158-3":{},"159-3":{},"160-3":{},"161-3":{},"162-19":{},"163-3":{},"164-3":{},"166-3":{},"167-3":{},"168-3":{},"171-6":{},"172-3":{},"175-5":{},"176-19":{},"177-3":{},"178-3":{}},"name":{},"text":{"2":{},"4":{},"6":{},"12":{},"16":{},"23":{},"26":{},"27":{},"29":{},"32":{},"46":{},"48":{},"49":{},"50":{},"51":{},"52":{},"54":{},"55":{},"57":{},"59":{},"62":{},"65":{},"66":{},"67":{},"68":{},"70":{},"71":{},"72":{},"73":{},"74":{},"79":{},"80":{},"81":{},"82":{},"84":{},"85":{},"86":{},"87":{},"88":{},"90":{},"94":{},"98":{},"104":{},"111":{},"112":{},"114":{},"117":{},"118":{},"134":{},"136":{},"137":{},"138":{},"139":{},"140":{},"142":{},"144":{},"146":{},"148":{},"149":{},"152":{},"154":{},"156":{},"157":{},"158":{},"160":{},"161":{},"162":{},"163":{},"164":{},"170":{},"171":{},"172":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["3,2",{"_index":6603,"title":{},"name":{},"text":{"112":{}},"component":{}}],["3,25",{"_index":699,"title":{},"name":{},"text":{"7":{},"92":{}},"component":{}}],["3.0",{"_index":5135,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["3.0.2",{"_index":6794,"title":{},"name":{},"text":{"165":{}},"component":{}}],["3.1",{"_index":1635,"title":{"16-4":{},"46-15":{},"61-4":{},"62-15":{},"77-4":{},"82-4":{},"94-17":{},"98-4":{},"101-4":{},"108-4":{},"134-4":{},"144-4":{},"151-4":{},"152-4":{},"153-4":{},"154-4":{},"155-4":{},"156-4":{},"157-4":{},"158-4":{},"159-4":{},"160-4":{},"161-4":{},"162-20":{},"163-4":{},"164-4":{},"166-4":{},"167-4":{},"172-4":{},"177-4":{},"178-4":{}},"name":{},"text":{},"component":{}}],["3.10",{"_index":6835,"title":{"178-13":{}},"name":{},"text":{},"component":{}}],["3.11",{"_index":6836,"title":{"178-14":{}},"name":{},"text":{},"component":{}}],["3.12",{"_index":6837,"title":{"178-15":{}},"name":{},"text":{},"component":{}}],["3.154864",{"_index":3558,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["3.2",{"_index":1636,"title":{"16-5":{},"46-16":{},"61-5":{},"62-16":{},"82-5":{},"94-18":{},"98-5":{},"101-5":{},"108-5":{},"134-5":{},"144-5":{},"151-5":{},"152-5":{},"153-5":{},"154-5":{},"155-5":{},"156-5":{},"157-5":{},"158-5":{},"159-5":{},"160-5":{},"161-5":{},"162-21":{},"163-5":{},"164-5":{},"177-5":{},"178-5":{}},"name":{},"text":{},"component":{}}],["3.3",{"_index":1637,"title":{"16-6":{},"46-17":{},"61-6":{},"62-17":{},"82-6":{},"94-19":{},"98-6":{},"134-6":{},"144-6":{},"151-6":{},"152-6":{},"162-22":{},"177-6":{},"178-6":{}},"name":{},"text":{"50":{},"52":{},"66":{},"138":{},"142":{},"156":{}},"component":{}}],["3.3.1",{"_index":1638,"title":{"16-7":{},"46-18":{},"62-18":{}},"name":{},"text":{},"component":{}}],["3.3.2",{"_index":1640,"title":{"16-8":{},"46-19":{},"62-19":{}},"name":{},"text":{},"component":{}}],["3.3.3",{"_index":1641,"title":{"16-9":{},"46-20":{},"62-20":{}},"name":{},"text":{},"component":{}}],["3.3.4",{"_index":1642,"title":{"16-10":{},"46-21":{},"62-21":{}},"name":{},"text":{},"component":{}}],["3.3.5",{"_index":2546,"title":{"46-22":{},"62-22":{}},"name":{},"text":{},"component":{}}],["3.3.6",{"_index":2548,"title":{"46-23":{},"62-23":{}},"name":{},"text":{},"component":{}}],["3.3.7",{"_index":2549,"title":{"46-24":{},"62-24":{}},"name":{},"text":{},"component":{}}],["3.3.8",{"_index":2551,"title":{"46-25":{},"62-25":{}},"name":{},"text":{},"component":{}}],["3.3.9",{"_index":2552,"title":{"46-26":{},"62-26":{}},"name":{},"text":{},"component":{}}],["3.30",{"_index":3585,"title":{},"name":{},"text":{"50":{},"52":{},"66":{},"138":{},"142":{},"156":{}},"component":{}}],["3.355470",{"_index":3562,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["3.365870",{"_index":3563,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["3.369463",{"_index":3568,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["3.373726",{"_index":3571,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["3.386894",{"_index":3573,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["3.397439",{"_index":3577,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["3.3v",{"_index":3976,"title":{},"name":{},"text":{"52":{},"68":{},"142":{},"158":{}},"component":{}}],["3.4",{"_index":1262,"title":{"46-27":{},"61-7":{},"62-27":{},"82-7":{},"94-20":{},"98-7":{},"134-7":{},"151-7":{},"152-7":{},"162-23":{},"177-7":{},"178-7":{}},"name":{},"text":{"14":{},"50":{},"52":{},"66":{},"101":{},"138":{},"142":{},"156":{}},"component":{}}],["3.4.1",{"_index":2553,"title":{"46-28":{},"62-28":{}},"name":{},"text":{},"component":{}}],["3.5",{"_index":2554,"title":{"46-29":{},"62-29":{},"82-8":{},"94-21":{},"134-8":{},"151-8":{},"152-8":{},"162-24":{},"177-8":{},"178-8":{}},"name":{},"text":{},"component":{}}],["3.5.1",{"_index":2555,"title":{"46-30":{},"62-30":{}},"name":{},"text":{},"component":{}}],["3.6",{"_index":2557,"title":{"46-31":{},"62-31":{},"82-9":{},"134-9":{},"152-9":{},"162-25":{},"177-9":{},"178-9":{}},"name":{},"text":{},"component":{}}],["3.63",{"_index":5621,"title":{},"name":{},"text":{"66":{},"156":{}},"component":{}}],["3.64",{"_index":3567,"title":{},"name":{},"text":{"50":{},"52":{},"59":{},"138":{},"142":{},"149":{}},"component":{}}],["3.7",{"_index":2559,"title":{"46-32":{},"62-32":{},"177-10":{},"178-10":{}},"name":{},"text":{},"component":{}}],["3.8",{"_index":2561,"title":{"46-33":{},"62-33":{},"177-11":{},"178-11":{}},"name":{},"text":{},"component":{}}],["3.9",{"_index":4783,"title":{"178-12":{}},"name":{},"text":{"59":{},"149":{}},"component":{}}],["30",{"_index":397,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"36":{},"39":{},"40":{},"41":{},"42":{},"50":{},"52":{},"53":{},"55":{},"59":{},"60":{},"65":{},"68":{},"69":{},"72":{},"75":{},"90":{},"92":{},"94":{},"124":{},"126":{},"127":{},"128":{},"129":{},"138":{},"142":{},"143":{},"146":{},"149":{},"150":{},"154":{},"158":{},"159":{},"162":{},"166":{}},"component":{}}],["300",{"_index":335,"title":{},"name":{},"text":{"4":{},"6":{},"26":{},"84":{},"90":{},"94":{},"114":{},"175":{}},"component":{}}],["30000",{"_index":6277,"title":{},"name":{},"text":{"81":{},"172":{}},"component":{}}],["300000.usb_dwc3",{"_index":5091,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["30000000",{"_index":2798,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["300001",{"_index":6436,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["30001",{"_index":6278,"title":{},"name":{},"text":{"81":{},"172":{}},"component":{}}],["301",{"_index":4893,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["3056/65531",{"_index":5532,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["30601216",{"_index":6214,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["3072000",{"_index":3629,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["3076m",{"_index":1346,"title":{},"name":{},"text":{"15":{},"19":{},"99":{},"105":{}},"component":{}}],["3077m",{"_index":293,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["30:25",{"_index":4382,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["31",{"_index":649,"title":{},"name":{},"text":{"6":{},"29":{},"37":{},"46":{},"52":{},"53":{},"55":{},"62":{},"65":{},"68":{},"69":{},"72":{},"94":{},"117":{},"120":{},"134":{},"142":{},"143":{},"146":{},"152":{},"154":{},"158":{},"159":{},"162":{}},"component":{}}],["314",{"_index":3477,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["317",{"_index":2210,"title":{},"name":{},"text":{"31":{},"34":{},"119":{},"121":{}},"component":{}}],["318",{"_index":2213,"title":{},"name":{},"text":{"31":{},"34":{},"119":{},"121":{}},"component":{}}],["31914983424",{"_index":3662,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["32",{"_index":31,"title":{"76-3":{},"76-4":{},"168-2":{},"168-3":{}},"name":{},"text":{"1":{},"4":{},"15":{},"29":{},"45":{},"46":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"55":{},"56":{},"58":{},"59":{},"60":{},"62":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"75":{},"84":{},"89":{},"90":{},"99":{},"117":{},"133":{},"134":{},"136":{},"137":{},"138":{},"139":{},"142":{},"143":{},"145":{},"146":{},"147":{},"149":{},"150":{},"152":{},"154":{},"155":{},"156":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"166":{},"175":{}},"component":{}}],["3203087",{"_index":3628,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["320mhz",{"_index":5731,"title":{},"name":{},"text":{"70":{},"160":{}},"component":{}}],["32768",{"_index":3686,"title":{},"name":{},"text":{"50":{},"59":{},"138":{},"149":{}},"component":{}}],["32769",{"_index":1410,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["32byte",{"_index":4272,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["32kb",{"_index":2654,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["32mb",{"_index":6110,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["33",{"_index":659,"title":{},"name":{},"text":{"6":{},"23":{},"46":{},"48":{},"52":{},"55":{},"59":{},"62":{},"65":{},"68":{},"72":{},"94":{},"111":{},"134":{},"137":{},"142":{},"146":{},"149":{},"152":{},"154":{},"158":{},"162":{}},"component":{}}],["331a19f91cb2",{"_index":3065,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["335",{"_index":3478,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["3357.425863",{"_index":4536,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["3360m",{"_index":3146,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["3391ff571e19",{"_index":3086,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["34",{"_index":3152,"title":{},"name":{},"text":{"46":{},"48":{},"52":{},"62":{},"65":{},"68":{},"80":{},"134":{},"137":{},"142":{},"152":{},"154":{},"158":{},"171":{}},"component":{}}],["349700.188862",{"_index":4614,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["349700.266456",{"_index":4617,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["349700.266468",{"_index":4622,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["349700.266471",{"_index":4626,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["349700.266474",{"_index":4627,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["349700.266476",{"_index":4628,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["349700.273296",{"_index":4630,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["35",{"_index":2102,"title":{},"name":{},"text":{"29":{},"52":{},"53":{},"59":{},"65":{},"68":{},"69":{},"117":{},"142":{},"143":{},"149":{},"154":{},"158":{},"159":{}},"component":{}}],["35219908",{"_index":3082,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["356",{"_index":3479,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["36",{"_index":3860,"title":{},"name":{},"text":{"52":{},"53":{},"65":{},"68":{},"69":{},"75":{},"142":{},"143":{},"154":{},"158":{},"159":{},"166":{}},"component":{}}],["360",{"_index":3532,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["369/65532",{"_index":4778,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["36:31",{"_index":4378,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["37",{"_index":3862,"title":{},"name":{},"text":{"52":{},"65":{},"68":{},"85":{},"142":{},"154":{},"158":{},"176":{}},"component":{}}],["37.50mhz",{"_index":4866,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["3728",{"_index":3605,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["377",{"_index":3463,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["37ca",{"_index":6687,"title":{},"name":{},"text":{"141":{}},"component":{}}],["37mhz",{"_index":4877,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["38",{"_index":3866,"title":{},"name":{},"text":{"52":{},"60":{},"65":{},"68":{},"142":{},"150":{},"154":{},"158":{}},"component":{}}],["382.641801",{"_index":5903,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["382.790319",{"_index":5904,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["382.795753",{"_index":5907,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["382.803050",{"_index":5908,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["382.807278",{"_index":5912,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["382.811348",{"_index":5914,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["382.817444",{"_index":5916,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["382.822855",{"_index":5918,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["383.842201",{"_index":5920,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["383.848550",{"_index":5925,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["383.854874",{"_index":5926,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["384",{"_index":2506,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["384000",{"_index":3676,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["3857",{"_index":6281,"title":{},"name":{},"text":{"81":{},"172":{}},"component":{}}],["3874",{"_index":6282,"title":{},"name":{},"text":{"81":{},"172":{}},"component":{}}],["39",{"_index":3868,"title":{},"name":{},"text":{"52":{},"53":{},"65":{},"68":{},"69":{},"142":{},"143":{},"154":{},"158":{},"159":{}},"component":{}}],["390",{"_index":2265,"title":{},"name":{},"text":{"33":{},"34":{},"37":{},"120":{},"121":{},"122":{}},"component":{}}],["3909091328",{"_index":3607,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["393",{"_index":2268,"title":{},"name":{},"text":{"33":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{}},"component":{}}],["39a3",{"_index":6147,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["39ec",{"_index":6688,"title":{},"name":{},"text":{"141":{}},"component":{}}],["3=full",{"_index":2046,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["3ad77bb40d7a3660a89ecaf32466ef97",{"_index":2503,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["3ascii",{"_index":3766,"title":{},"name":{},"text":{"51":{},"139":{}},"component":{}}],["3d69d8477de4",{"_index":6131,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["3ms3",{"_index":646,"title":{},"name":{},"text":{"6":{},"94":{}},"component":{}}],["3v3",{"_index":5277,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["4",{"_index":50,"title":{"141":{},"8-4":{},"40-5":{},"43-8":{},"46-34":{},"61-8":{},"62-34":{},"77-5":{},"81-4":{},"86-4":{},"87-4":{},"88-4":{},"90-4":{},"92-4":{},"96-4":{},"98-8":{},"99-4":{},"101-6":{},"112-10":{},"127-4":{},"130-7":{},"131-7":{},"134-10":{},"141-4":{},"141-5":{},"141-8":{},"151-9":{},"152-10":{},"154-6":{},"156-6":{},"157-6":{},"158-6":{},"159-6":{},"160-6":{},"161-6":{},"162-26":{},"163-6":{},"164-6":{},"166-5":{},"167-5":{},"171-7":{},"172-5":{},"175-6":{},"177-12":{}},"name":{},"text":{"1":{},"2":{},"4":{},"6":{},"12":{},"15":{},"16":{},"19":{},"23":{},"26":{},"27":{},"28":{},"29":{},"40":{},"46":{},"47":{},"48":{},"50":{},"51":{},"52":{},"55":{},"59":{},"60":{},"61":{},"62":{},"63":{},"65":{},"66":{},"67":{},"68":{},"71":{},"72":{},"73":{},"77":{},"80":{},"84":{},"85":{},"86":{},"87":{},"88":{},"89":{},"90":{},"94":{},"98":{},"99":{},"104":{},"105":{},"111":{},"112":{},"114":{},"115":{},"117":{},"127":{},"134":{},"135":{},"137":{},"138":{},"139":{},"141":{},"142":{},"146":{},"149":{},"150":{},"151":{},"152":{},"153":{},"154":{},"156":{},"157":{},"158":{},"161":{},"162":{},"163":{},"167":{},"171":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["4.0",{"_index":5011,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["4.0k",{"_index":5945,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["4.1",{"_index":2564,"title":{"46-35":{},"62-35":{},"81-5":{},"86-5":{},"87-5":{},"98-9":{},"134-11":{},"152-11":{},"154-7":{},"156-7":{},"157-7":{},"158-7":{},"159-7":{},"160-7":{},"162-27":{},"163-7":{},"164-7":{},"166-6":{}},"name":{},"text":{"73":{},"163":{}},"component":{}}],["4.1.1",{"_index":6821,"title":{"166-7":{}},"name":{},"text":{},"component":{}}],["4.1.2",{"_index":6822,"title":{"166-8":{}},"name":{},"text":{},"component":{}}],["4.1.3",{"_index":6823,"title":{"166-9":{}},"name":{},"text":{},"component":{}}],["4.1.4",{"_index":6824,"title":{"166-10":{}},"name":{},"text":{},"component":{}}],["4.1.5",{"_index":6825,"title":{"166-11":{}},"name":{},"text":{},"component":{}}],["4.10",{"_index":6541,"title":{"87-14":{}},"name":{},"text":{},"component":{}}],["4.11",{"_index":6542,"title":{"87-15":{}},"name":{},"text":{},"component":{}}],["4.12",{"_index":6543,"title":{"87-16":{}},"name":{},"text":{},"component":{}}],["4.2",{"_index":2565,"title":{"46-36":{},"62-36":{},"86-6":{},"87-6":{},"98-10":{},"134-12":{},"152-12":{},"154-8":{},"156-8":{},"158-8":{},"159-8":{},"160-8":{},"162-28":{},"163-8":{}},"name":{},"text":{},"component":{}}],["4.2.1",{"_index":6722,"title":{"163-9":{}},"name":{},"text":{},"component":{}}],["4.20.1.7",{"_index":6375,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["4.25.1.5",{"_index":6378,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["4.3",{"_index":2566,"title":{"46-37":{},"62-37":{},"86-7":{},"87-7":{},"98-11":{},"158-9":{},"162-29":{}},"name":{},"text":{},"component":{}}],["4.3.1",{"_index":6716,"title":{"162-30":{}},"name":{},"text":{},"component":{}}],["4.3.2",{"_index":6717,"title":{"162-31":{}},"name":{},"text":{},"component":{}}],["4.3.3",{"_index":6718,"title":{"162-32":{}},"name":{},"text":{},"component":{}}],["4.3.4",{"_index":6719,"title":{"162-33":{}},"name":{},"text":{},"component":{}}],["4.4",{"_index":2567,"title":{"46-38":{},"86-8":{},"87-8":{},"162-34":{}},"name":{},"text":{},"component":{}}],["4.4.1",{"_index":6720,"title":{"162-35":{}},"name":{},"text":{},"component":{}}],["4.4.2",{"_index":6721,"title":{"162-36":{}},"name":{},"text":{},"component":{}}],["4.4.3",{"_index":4615,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["4.4.3:1.0",{"_index":4632,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["4.5",{"_index":6508,"title":{"86-9":{},"87-9":{},"162-37":{}},"name":{},"text":{},"component":{}}],["4.6",{"_index":6510,"title":{"86-10":{},"87-10":{},"162-38":{}},"name":{},"text":{},"component":{}}],["4.678015",{"_index":4681,"title":{},"name":{},"text":{"58":{},"145":{}},"component":{}}],["4.686861",{"_index":4684,"title":{},"name":{},"text":{"58":{},"145":{}},"component":{}}],["4.7",{"_index":6511,"title":{"86-11":{},"87-11":{}},"name":{},"text":{},"component":{}}],["4.703046",{"_index":4685,"title":{},"name":{},"text":{"58":{},"145":{}},"component":{}}],["4.8",{"_index":6513,"title":{"86-12":{},"87-12":{}},"name":{},"text":{},"component":{}}],["4.9",{"_index":6539,"title":{"87-13":{}},"name":{},"text":{},"component":{}}],["40",{"_index":1923,"title":{},"name":{},"text":{"26":{},"51":{},"52":{},"55":{},"65":{},"67":{},"68":{},"72":{},"77":{},"114":{},"139":{},"142":{},"146":{},"154":{},"157":{},"158":{},"162":{},"167":{}},"component":{}}],["400",{"_index":632,"title":{},"name":{},"text":{"6":{},"94":{}},"component":{}}],["40000000",{"_index":1914,"title":{},"name":{},"text":{"26":{},"114":{}},"component":{}}],["405.656881",{"_index":5931,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["405.662434",{"_index":5935,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["405.693476",{"_index":5936,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["405.720651",{"_index":5938,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["4075b",{"_index":1758,"title":{},"name":{},"text":{"22":{},"109":{}},"component":{}}],["4096",{"_index":1751,"title":{},"name":{},"text":{"22":{},"23":{},"56":{},"58":{},"69":{},"84":{},"109":{},"111":{},"145":{},"147":{},"159":{},"165":{},"175":{}},"component":{}}],["40sec",{"_index":5334,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["41",{"_index":3872,"title":{},"name":{},"text":{"52":{},"53":{},"59":{},"65":{},"68":{},"69":{},"142":{},"143":{},"149":{},"154":{},"158":{},"159":{}},"component":{}}],["41.9",{"_index":5862,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["410fc075",{"_index":4805,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["4112",{"_index":6148,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["4114018",{"_index":4782,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["41d6f577e343c81cbd05552c8bc2408e99815d41683e98873acedbe7b8f197ca",{"_index":4532,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["42",{"_index":792,"title":{},"name":{},"text":{"10":{},"23":{},"29":{},"52":{},"68":{},"81":{},"82":{},"86":{},"87":{},"97":{},"111":{},"117":{},"142":{},"158":{},"172":{},"173":{},"177":{},"178":{}},"component":{}}],["420",{"_index":2290,"title":{},"name":{},"text":{"35":{},"43":{},"123":{},"130":{}},"component":{}}],["421.617746",{"_index":5943,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["424",{"_index":2271,"title":{},"name":{},"text":{"33":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{}},"component":{}}],["4259",{"_index":2332,"title":{},"name":{},"text":{"37":{},"120":{}},"component":{}}],["429",{"_index":2330,"title":{},"name":{},"text":{"36":{},"124":{}},"component":{}}],["42:37",{"_index":4374,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["43",{"_index":3659,"title":{},"name":{},"text":{"50":{},"52":{},"53":{},"59":{},"65":{},"68":{},"69":{},"138":{},"142":{},"143":{},"149":{},"154":{},"158":{},"159":{}},"component":{}}],["430",{"_index":2286,"title":{},"name":{},"text":{"35":{},"36":{},"123":{},"124":{}},"component":{}}],["4374",{"_index":3070,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["44",{"_index":3321,"title":{},"name":{},"text":{"48":{},"52":{},"53":{},"59":{},"68":{},"69":{},"137":{},"142":{},"143":{},"149":{},"158":{},"159":{}},"component":{}}],["44.720213",{"_index":3631,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["44000000",{"_index":5636,"title":{},"name":{},"text":{"66":{},"156":{}},"component":{}}],["440795204056",{"_index":4874,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["4433",{"_index":3051,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["4440496",{"_index":4211,"title":{},"name":{},"text":{"55":{},"146":{}},"component":{}}],["45",{"_index":3883,"title":{},"name":{},"text":{"52":{},"53":{},"59":{},"65":{},"68":{},"142":{},"143":{},"149":{},"154":{},"158":{}},"component":{}}],["450.113274",{"_index":3316,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["456,4044",{"_index":601,"title":{},"name":{},"text":{"6":{},"94":{}},"component":{}}],["458d",{"_index":3682,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["45mhz",{"_index":3525,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["46",{"_index":2104,"title":{},"name":{},"text":{"29":{},"52":{},"53":{},"65":{},"68":{},"69":{},"71":{},"73":{},"117":{},"142":{},"143":{},"154":{},"158":{},"159":{},"161":{},"163":{}},"component":{}}],["46000000",{"_index":3580,"title":{},"name":{},"text":{"50":{},"52":{},"138":{},"142":{}},"component":{}}],["4601",{"_index":3056,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["4615",{"_index":6804,"title":{},"name":{},"text":{"165":{}},"component":{}}],["46c3",{"_index":6134,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["47",{"_index":2106,"title":{},"name":{},"text":{"29":{},"52":{},"53":{},"65":{},"68":{},"69":{},"71":{},"73":{},"117":{},"142":{},"143":{},"154":{},"158":{},"159":{},"161":{},"163":{}},"component":{}}],["4726847",{"_index":3167,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["4726848",{"_index":3168,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["4728831",{"_index":5547,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["4728832",{"_index":5548,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["477",{"_index":5958,"title":{},"name":{},"text":{"75":{},"166":{}},"component":{}}],["4772",{"_index":6129,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["48",{"_index":3406,"title":{},"name":{},"text":{"49":{},"52":{},"55":{},"58":{},"59":{},"65":{},"68":{},"70":{},"71":{},"73":{},"75":{},"136":{},"142":{},"145":{},"146":{},"149":{},"154":{},"158":{},"160":{},"161":{},"163":{},"166":{}},"component":{}}],["481",{"_index":5959,"title":{},"name":{},"text":{"75":{},"166":{}},"component":{}}],["48ae",{"_index":3077,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["48v",{"_index":5427,"title":{},"name":{},"text":{"61":{},"151":{}},"component":{}}],["49",{"_index":1484,"title":{},"name":{},"text":{"15":{},"49":{},"52":{},"58":{},"59":{},"65":{},"68":{},"71":{},"73":{},"99":{},"136":{},"142":{},"145":{},"149":{},"154":{},"158":{},"161":{},"163":{}},"component":{}}],["4a29",{"_index":3098,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["4b08",{"_index":3084,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["4b40",{"_index":3671,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["4bc9",{"_index":3149,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["4bd0",{"_index":3063,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["4bit",{"_index":5592,"title":{},"name":{},"text":{"66":{},"156":{}},"component":{}}],["4c",{"_index":4046,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["4cbd",{"_index":6693,"title":{},"name":{},"text":{"141":{}},"component":{}}],["4d",{"_index":4048,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["4db9",{"_index":3091,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["4e",{"_index":4044,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["4eb5",{"_index":6141,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["4gb",{"_index":5417,"title":{},"name":{},"text":{"61":{},"80":{},"151":{},"171":{}},"component":{}}],["4k",{"_index":3677,"title":{},"name":{},"text":{"50":{},"58":{},"69":{},"138":{},"145":{},"159":{},"165":{}},"component":{}}],["4kb",{"_index":5454,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["4x1gbit",{"_index":2244,"title":{"33-5":{},"122-4":{}},"name":{},"text":{},"component":{}}],["4’",{"_index":6660,"title":{},"name":{},"text":{"141":{}},"component":{}}],["5",{"_index":123,"title":{"46-39":{},"62-38":{},"81-6":{},"86-13":{},"90-5":{},"92-5":{},"96-5":{},"99-5":{},"101-7":{},"112-11":{},"134-13":{},"152-13":{},"162-39":{},"171-8":{},"175-7":{},"177-13":{}},"name":{},"text":{"2":{},"4":{},"7":{},"15":{},"26":{},"29":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"55":{},"58":{},"59":{},"62":{},"65":{},"66":{},"67":{},"68":{},"72":{},"80":{},"83":{},"86":{},"88":{},"90":{},"92":{},"99":{},"114":{},"117":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"141":{},"142":{},"145":{},"146":{},"149":{},"152":{},"154":{},"156":{},"157":{},"158":{},"162":{},"171":{},"174":{},"177":{}},"component":{}}],["5.0",{"_index":2802,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"134":{},"146":{},"152":{}},"component":{}}],["5.1",{"_index":2569,"title":{"46-40":{},"62-39":{},"101-8":{},"134-14":{},"152-14":{}},"name":{},"text":{},"component":{}}],["5.1.1",{"_index":6574,"title":{"101-9":{}},"name":{},"text":{},"component":{}}],["5.1.2",{"_index":6575,"title":{"101-10":{}},"name":{},"text":{},"component":{}}],["5.1.3",{"_index":6576,"title":{"101-11":{}},"name":{},"text":{},"component":{}}],["5.10",{"_index":1224,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["5.10.tar.xz",{"_index":1216,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["5.10.x",{"_index":2219,"title":{"32-6":{},"118-5":{}},"name":{},"text":{},"component":{}}],["5.15",{"_index":5122,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["5.15.25",{"_index":2249,"title":{},"name":{},"text":{"33":{},"59":{},"122":{},"149":{}},"component":{}}],["5.15.41",{"_index":2277,"title":{},"name":{},"text":{"35":{},"123":{}},"component":{}}],["5.15.63",{"_index":2303,"title":{},"name":{},"text":{"36":{},"38":{},"124":{},"125":{}},"component":{}}],["5.16",{"_index":5347,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["5.17",{"_index":4621,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["5.2",{"_index":2573,"title":{"46-41":{},"62-40":{},"101-12":{},"134-15":{},"152-15":{}},"name":{},"text":{},"component":{}}],["5.2.1",{"_index":2574,"title":{"46-42":{},"62-41":{}},"name":{},"text":{},"component":{}}],["5.2.2",{"_index":2575,"title":{"46-43":{},"62-42":{}},"name":{},"text":{},"component":{}}],["5.2.3",{"_index":2576,"title":{"46-44":{},"62-43":{}},"name":{},"text":{},"component":{}}],["5.2.4",{"_index":2577,"title":{"46-45":{},"62-44":{}},"name":{},"text":{},"component":{}}],["5.2.4.1",{"_index":2578,"title":{"46-46":{},"62-45":{}},"name":{},"text":{},"component":{}}],["5.2.4.2",{"_index":2579,"title":{"46-47":{},"62-46":{}},"name":{},"text":{},"component":{}}],["5.2.4.3",{"_index":2580,"title":{"46-48":{},"62-47":{}},"name":{},"text":{},"component":{}}],["5.2.5",{"_index":2581,"title":{"46-49":{},"62-48":{}},"name":{},"text":{},"component":{}}],["5.2.5.1",{"_index":2582,"title":{"46-50":{},"62-49":{}},"name":{},"text":{},"component":{}}],["5.3",{"_index":2583,"title":{"46-51":{},"62-50":{},"134-16":{},"152-16":{}},"name":{},"text":{},"component":{}}],["5.3.1",{"_index":2584,"title":{"46-52":{},"62-51":{},"134-17":{},"152-17":{}},"name":{},"text":{},"component":{}}],["5.3.2",{"_index":2585,"title":{"46-53":{},"62-52":{},"134-18":{},"152-18":{}},"name":{},"text":{},"component":{}}],["5.3.3",{"_index":6618,"title":{"134-19":{},"152-19":{}},"name":{},"text":{},"component":{}}],["5.3.4",{"_index":6619,"title":{"134-20":{},"152-20":{}},"name":{},"text":{},"component":{}}],["5.3.5",{"_index":6620,"title":{"134-21":{},"152-21":{}},"name":{},"text":{},"component":{}}],["5.3.6",{"_index":4970,"title":{"134-22":{},"152-22":{}},"name":{},"text":{"59":{},"149":{}},"component":{}}],["5.3.7",{"_index":6621,"title":{"134-23":{},"152-23":{}},"name":{},"text":{},"component":{}}],["5.3.8",{"_index":6622,"title":{"134-24":{},"152-24":{}},"name":{},"text":{},"component":{}}],["5.3.9",{"_index":6623,"title":{"134-25":{},"152-25":{}},"name":{},"text":{},"component":{}}],["5.4",{"_index":6624,"title":{"134-26":{},"152-26":{}},"name":{},"text":{},"component":{}}],["5.4.1",{"_index":6625,"title":{"134-27":{},"152-27":{}},"name":{},"text":{},"component":{}}],["5.5",{"_index":6626,"title":{"134-28":{},"152-28":{}},"name":{},"text":{},"component":{}}],["5.5.1",{"_index":6627,"title":{"134-29":{},"152-29":{}},"name":{},"text":{},"component":{}}],["5.6",{"_index":6628,"title":{"134-30":{},"152-30":{}},"name":{},"text":{},"component":{}}],["5.7",{"_index":6629,"title":{"134-31":{},"152-31":{}},"name":{},"text":{},"component":{}}],["5.749296",{"_index":3427,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["5.757431",{"_index":3431,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["5.763341",{"_index":3433,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["5.774793",{"_index":3437,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["5.782333",{"_index":3434,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["5.8",{"_index":6630,"title":{"134-32":{},"152-32":{}},"name":{},"text":{},"component":{}}],["50",{"_index":1922,"title":{},"name":{},"text":{"26":{},"49":{},"52":{},"58":{},"59":{},"65":{},"66":{},"68":{},"114":{},"136":{},"142":{},"145":{},"149":{},"154":{},"156":{},"158":{}},"component":{}}],["500",{"_index":954,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["50000000",{"_index":1911,"title":{},"name":{},"text":{"26":{},"50":{},"114":{},"138":{}},"component":{}}],["500m",{"_index":627,"title":{},"name":{},"text":{"6":{},"94":{}},"component":{}}],["50mhz",{"_index":3697,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["51",{"_index":3409,"title":{},"name":{},"text":{"49":{},"52":{},"58":{},"59":{},"68":{},"136":{},"142":{},"145":{},"149":{},"158":{}},"component":{}}],["51(physic",{"_index":3969,"title":{},"name":{},"text":{"52":{},"68":{},"142":{},"158":{}},"component":{}}],["512",{"_index":2507,"title":{},"name":{},"text":{"45":{},"46":{},"50":{},"52":{},"55":{},"59":{},"62":{},"66":{},"72":{},"74":{},"133":{},"134":{},"138":{},"142":{},"146":{},"149":{},"152":{},"156":{},"162":{},"164":{},"165":{}},"component":{}}],["512mb",{"_index":5418,"title":{},"name":{},"text":{"61":{},"151":{}},"component":{}}],["5147m",{"_index":3169,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["52",{"_index":3410,"title":{},"name":{},"text":{"49":{},"52":{},"58":{},"59":{},"65":{},"68":{},"136":{},"142":{},"145":{},"149":{},"154":{},"158":{}},"component":{}}],["52.109889569",{"_index":1843,"title":{},"name":{},"text":{"23":{},"111":{}},"component":{}}],["524288",{"_index":4833,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["524351",{"_index":3157,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["524352",{"_index":3158,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["526335",{"_index":5539,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["526336",{"_index":5540,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["528447",{"_index":3159,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["528448",{"_index":3161,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["52mhz",{"_index":2799,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["53",{"_index":2453,"title":{},"name":{},"text":{"45":{},"52":{},"53":{},"65":{},"68":{},"69":{},"133":{},"142":{},"143":{},"154":{},"158":{},"159":{}},"component":{}}],["530431",{"_index":5541,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["530432",{"_index":5542,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["532543",{"_index":3162,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["532544",{"_index":3163,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["534527",{"_index":5543,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["534528",{"_index":5544,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["54",{"_index":1473,"title":{},"name":{},"text":{"15":{},"52":{},"53":{},"68":{},"69":{},"99":{},"142":{},"143":{},"158":{},"159":{}},"component":{}}],["546",{"_index":2424,"title":{},"name":{},"text":{"43":{},"130":{}},"component":{}}],["55",{"_index":3322,"title":{},"name":{},"text":{"48":{},"52":{},"68":{},"137":{},"142":{},"158":{}},"component":{}}],["5504k",{"_index":5046,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["553376",{"_index":2873,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["559a603550297e47a83fa2a9a42c4cb3216e8588d68ae488dc511abc6025ca88",{"_index":4530,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["56",{"_index":3898,"title":{},"name":{},"text":{"52":{},"53":{},"59":{},"65":{},"68":{},"69":{},"142":{},"143":{},"149":{},"154":{},"158":{},"159":{}},"component":{}}],["56(84",{"_index":275,"title":{},"name":{},"text":{"4":{},"15":{},"19":{},"90":{},"99":{},"105":{}},"component":{}}],["57",{"_index":2457,"title":{},"name":{},"text":{"45":{},"52":{},"53":{},"68":{},"69":{},"133":{},"142":{},"143":{},"158":{},"159":{}},"component":{}}],["57344",{"_index":6801,"title":{},"name":{},"text":{"165":{}},"component":{}}],["58",{"_index":3902,"title":{},"name":{},"text":{"52":{},"68":{},"87":{},"142":{},"158":{},"178":{}},"component":{}}],["580",{"_index":2420,"title":{},"name":{},"text":{"43":{},"130":{}},"component":{}}],["580.280482",{"_index":5370,"title":{},"name":{},"text":{"60":{},"150":{}},"component":{}}],["582",{"_index":2416,"title":{},"name":{},"text":{"43":{},"130":{}},"component":{}}],["59",{"_index":3904,"title":{},"name":{},"text":{"52":{},"68":{},"142":{},"158":{}},"component":{}}],["59170816",{"_index":6219,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["594",{"_index":2413,"title":{},"name":{},"text":{"43":{},"130":{}},"component":{}}],["5:6::7:8",{"_index":6519,"title":{},"name":{},"text":{"86":{},"177":{}},"component":{}}],["5a1",{"_index":3341,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["5a1#11.22.33.44.55.66.77.88",{"_index":3336,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["5b02",{"_index":3681,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["5d1c",{"_index":3097,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["5e:a3:1f:b8:c5:e3",{"_index":3330,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["5tuple_ip4",{"_index":6512,"title":{"86-11":{},"177-10":{}},"name":{},"text":{"86":{},"177":{}},"component":{}}],["5tuple_ip6",{"_index":6509,"title":{"86-9":{},"177-8":{}},"name":{},"text":{"86":{},"177":{}},"component":{}}],["5tuple_ipv4",{"_index":2165,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["6",{"_index":153,"title":{"46-54":{},"62-53":{},"86-14":{},"90-6":{},"92-6":{},"96-6":{},"99-6":{},"101-13":{},"112-12":{},"134-33":{},"152-33":{},"162-40":{},"171-9":{},"175-8":{},"177-14":{}},"name":{},"text":{"2":{},"4":{},"26":{},"29":{},"46":{},"48":{},"50":{},"51":{},"52":{},"55":{},"59":{},"62":{},"65":{},"66":{},"67":{},"68":{},"70":{},"71":{},"72":{},"73":{},"77":{},"80":{},"82":{},"83":{},"84":{},"86":{},"87":{},"88":{},"90":{},"114":{},"117":{},"134":{},"137":{},"138":{},"139":{},"141":{},"142":{},"146":{},"149":{},"152":{},"154":{},"156":{},"157":{},"158":{},"160":{},"161":{},"162":{},"163":{},"167":{},"171":{},"173":{},"174":{},"175":{},"177":{},"178":{}},"component":{}}],["6.1",{"_index":2370,"title":{"134-34":{},"152-34":{},"171-10":{},"175-9":{}},"name":{},"text":{"39":{},"40":{},"41":{},"42":{},"43":{},"46":{},"62":{},"126":{},"127":{},"128":{},"129":{},"130":{},"134":{},"152":{}},"component":{}}],["6.1.22",{"_index":2372,"title":{},"name":{},"text":{"40":{},"127":{}},"component":{}}],["6.1.3",{"_index":2367,"title":{},"name":{},"text":{"39":{},"126":{}},"component":{}}],["6.1.35",{"_index":2390,"title":{},"name":{},"text":{"41":{},"42":{},"128":{},"129":{}},"component":{}}],["6.1.4",{"_index":5827,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["6.1.4/input2",{"_index":5848,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["6.1.4:1.0",{"_index":5841,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["6.1.55",{"_index":2402,"title":{},"name":{},"text":{"43":{},"130":{}},"component":{}}],["6.2",{"_index":3102,"title":{"134-35":{},"152-35":{},"171-11":{},"175-10":{}},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["6.3",{"_index":6631,"title":{"134-36":{},"152-36":{},"171-12":{},"175-11":{}},"name":{},"text":{},"component":{}}],["6.4",{"_index":6632,"title":{"134-37":{}},"name":{},"text":{},"component":{}}],["6.5.0",{"_index":6796,"title":{},"name":{},"text":{"165":{}},"component":{}}],["6.6",{"_index":6611,"title":{},"name":{},"text":{"131":{}},"component":{}}],["6.6.8",{"_index":6609,"title":{},"name":{},"text":{"131":{}},"component":{}}],["6.7",{"_index":5864,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["60",{"_index":3908,"title":{},"name":{},"text":{"52":{},"60":{},"65":{},"68":{},"75":{},"77":{},"131":{},"142":{},"150":{},"154":{},"158":{},"166":{},"167":{}},"component":{}}],["600",{"_index":337,"title":{},"name":{},"text":{"4":{},"26":{},"90":{},"114":{}},"component":{}}],["6000",{"_index":4800,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["6045696",{"_index":6800,"title":{},"name":{},"text":{"165":{}},"component":{}}],["608k",{"_index":4842,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["60mhz",{"_index":5888,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["61",{"_index":3909,"title":{},"name":{},"text":{"52":{},"53":{},"68":{},"69":{},"142":{},"143":{},"158":{},"159":{}},"component":{}}],["6102",{"_index":5355,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["611319.667065",{"_index":5282,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["611319.861370",{"_index":5283,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["611319.861373",{"_index":5286,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["611319.861376",{"_index":5287,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["611319.861379",{"_index":5289,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["611319.861381",{"_index":5290,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["611319.872422",{"_index":5292,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["611319.872470",{"_index":5294,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["611319.877470",{"_index":5296,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["611420.396414",{"_index":5298,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["6144",{"_index":4982,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["62",{"_index":3912,"title":{},"name":{},"text":{"52":{},"53":{},"68":{},"69":{},"80":{},"142":{},"143":{},"158":{},"159":{},"171":{}},"component":{}}],["62333951",{"_index":3664,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["62333952",{"_index":3663,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["62439",{"_index":1646,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["63",{"_index":3914,"title":{},"name":{},"text":{"52":{},"53":{},"68":{},"69":{},"142":{},"143":{},"158":{},"159":{}},"component":{}}],["63.250316",{"_index":3665,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["63:43",{"_index":4373,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["64",{"_index":42,"title":{"76-2":{},"168-1":{}},"name":{},"text":{"1":{},"4":{},"6":{},"10":{},"15":{},"19":{},"29":{},"46":{},"51":{},"52":{},"53":{},"55":{},"57":{},"59":{},"66":{},"67":{},"68":{},"69":{},"72":{},"80":{},"84":{},"89":{},"90":{},"94":{},"97":{},"99":{},"105":{},"117":{},"134":{},"139":{},"142":{},"143":{},"146":{},"148":{},"149":{},"156":{},"157":{},"158":{},"159":{},"162":{},"171":{},"175":{}},"component":{}}],["64.0m",{"_index":3626,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["64000000",{"_index":3110,"title":{},"name":{},"text":{"46":{},"59":{},"62":{},"73":{},"134":{},"149":{},"152":{},"163":{}},"component":{}}],["6408000",{"_index":3138,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["643e",{"_index":6140,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["646cb5fc",{"_index":5869,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["64k",{"_index":4696,"title":{},"name":{},"text":{"58":{},"145":{}},"component":{}}],["64m",{"_index":3618,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["64mb",{"_index":6113,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["65",{"_index":3918,"title":{},"name":{},"text":{"52":{},"53":{},"59":{},"68":{},"69":{},"142":{},"143":{},"149":{},"158":{},"159":{}},"component":{}}],["6533000",{"_index":3105,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["65535",{"_index":1401,"title":{},"name":{},"text":{"15":{},"87":{},"99":{},"178":{}},"component":{}}],["65536",{"_index":223,"title":{},"name":{},"text":{"4":{},"15":{},"48":{},"49":{},"58":{},"59":{},"90":{},"99":{},"136":{},"137":{},"145":{},"149":{}},"component":{}}],["65538",{"_index":3444,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["66",{"_index":3323,"title":{},"name":{},"text":{"48":{},"50":{},"52":{},"53":{},"68":{},"69":{},"137":{},"138":{},"142":{},"143":{},"158":{},"159":{}},"component":{}}],["67",{"_index":3921,"title":{},"name":{},"text":{"52":{},"53":{},"65":{},"68":{},"69":{},"142":{},"143":{},"154":{},"158":{},"159":{}},"component":{}}],["671e9526",{"_index":3147,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["67d00000",{"_index":3111,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["67d07977",{"_index":3112,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["67e00000",{"_index":4793,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["67e07977",{"_index":4794,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["68",{"_index":1399,"title":{},"name":{},"text":{"15":{},"52":{},"53":{},"69":{},"75":{},"99":{},"142":{},"143":{},"159":{},"166":{}},"component":{}}],["68b6b72699c7",{"_index":3053,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["69",{"_index":3924,"title":{},"name":{},"text":{"52":{},"53":{},"68":{},"69":{},"142":{},"143":{},"158":{},"159":{}},"component":{}}],["6976499",{"_index":5863,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["6b84d0da71c8fe705ad46a9c76ce23211f2c5ac835e8823f62db13be5b676e62",{"_index":6756,"title":{},"name":{},"text":{"165":{}},"component":{}}],["6bc1bee22e409f96e93d7e117393172a",{"_index":2487,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["6bc1bee22e409f96e93d7e117393172a'.decode('hex",{"_index":2488,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["6c",{"_index":4034,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["6d",{"_index":4049,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["6e",{"_index":4035,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["6f",{"_index":4050,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["7",{"_index":147,"title":{"86-15":{},"90-7":{},"92-7":{},"96-7":{},"99-7":{},"101-14":{},"134-38":{},"152-37":{},"162-41":{},"171-13":{},"175-12":{}},"name":{},"text":{"2":{},"4":{},"6":{},"15":{},"16":{},"23":{},"26":{},"46":{},"48":{},"49":{},"50":{},"51":{},"52":{},"55":{},"59":{},"62":{},"65":{},"66":{},"67":{},"68":{},"71":{},"72":{},"73":{},"80":{},"88":{},"90":{},"94":{},"99":{},"104":{},"111":{},"112":{},"114":{},"134":{},"136":{},"137":{},"138":{},"139":{},"142":{},"146":{},"149":{},"152":{},"154":{},"156":{},"157":{},"158":{},"161":{},"162":{},"163":{},"171":{}},"component":{}}],["7)/dei(0",{"_index":143,"title":{},"name":{},"text":{"2":{},"88":{}},"component":{}}],["7)/dei(1",{"_index":144,"title":{},"name":{},"text":{"2":{},"88":{}},"component":{}}],["7.1",{"_index":6633,"title":{"134-39":{},"152-38":{},"171-14":{},"175-13":{}},"name":{},"text":{},"component":{}}],["7.2",{"_index":6634,"title":{"134-40":{},"152-39":{},"171-15":{},"175-14":{}},"name":{},"text":{},"component":{}}],["7.2.1",{"_index":6635,"title":{"134-41":{},"152-40":{}},"name":{},"text":{},"component":{}}],["7.2.2",{"_index":6636,"title":{"134-42":{},"152-41":{}},"name":{},"text":{},"component":{}}],["7.2.3",{"_index":6637,"title":{"134-43":{},"152-42":{}},"name":{},"text":{},"component":{}}],["7.2.4",{"_index":6638,"title":{"134-44":{},"152-43":{}},"name":{},"text":{},"component":{}}],["7.2.4.1",{"_index":6639,"title":{"134-45":{},"152-44":{}},"name":{},"text":{},"component":{}}],["7.2.4.2",{"_index":6640,"title":{"134-46":{},"152-45":{}},"name":{},"text":{},"component":{}}],["7.2.4.3",{"_index":6641,"title":{"134-47":{},"152-46":{}},"name":{},"text":{},"component":{}}],["7.2.5",{"_index":6642,"title":{"134-48":{},"152-47":{}},"name":{},"text":{},"component":{}}],["7.2.5.1",{"_index":6643,"title":{"134-49":{},"152-48":{}},"name":{},"text":{},"component":{}}],["7.3",{"_index":2804,"title":{"134-50":{},"152-49":{},"171-16":{},"175-15":{}},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["7.3.1",{"_index":6644,"title":{"134-51":{},"152-50":{}},"name":{},"text":{},"component":{}}],["7.3.2",{"_index":6645,"title":{"134-52":{},"152-51":{}},"name":{},"text":{},"component":{}}],["7.4",{"_index":6828,"title":{"175-16":{}},"name":{},"text":{},"component":{}}],["70",{"_index":3925,"title":{},"name":{},"text":{"52":{},"53":{},"60":{},"64":{},"65":{},"69":{},"142":{},"143":{},"150":{},"154":{},"155":{},"159":{}},"component":{}}],["71",{"_index":3926,"title":{},"name":{},"text":{"52":{},"64":{},"142":{},"155":{}},"component":{}}],["715",{"_index":1838,"title":{},"name":{},"text":{"23":{},"111":{}},"component":{}}],["7168283",{"_index":5860,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["72",{"_index":3262,"title":{},"name":{},"text":{"48":{},"52":{},"53":{},"64":{},"69":{},"137":{},"142":{},"143":{},"155":{},"159":{}},"component":{}}],["73",{"_index":3265,"title":{},"name":{},"text":{"48":{},"52":{},"53":{},"64":{},"69":{},"137":{},"142":{},"143":{},"155":{},"159":{}},"component":{}}],["74",{"_index":3263,"title":{},"name":{},"text":{"48":{},"52":{},"53":{},"69":{},"137":{},"142":{},"143":{},"159":{}},"component":{}}],["740",{"_index":5587,"title":{},"name":{},"text":{"65":{},"154":{}},"component":{}}],["740000000",{"_index":6206,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["75",{"_index":3267,"title":{},"name":{},"text":{"48":{},"52":{},"53":{},"69":{},"137":{},"142":{},"143":{},"159":{}},"component":{}}],["75.00",{"_index":4888,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["758a6c00",{"_index":6139,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["76",{"_index":3929,"title":{},"name":{},"text":{"52":{},"53":{},"69":{},"142":{},"143":{},"159":{}},"component":{}}],["760",{"_index":2146,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["7634910",{"_index":5549,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["7634943",{"_index":3616,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["7634944",{"_index":3608,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["764",{"_index":2124,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["767",{"_index":2125,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["768",{"_index":6381,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["77",{"_index":3324,"title":{},"name":{},"text":{"48":{},"52":{},"53":{},"65":{},"69":{},"137":{},"142":{},"143":{},"154":{},"159":{}},"component":{}}],["77877125",{"_index":3068,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["78",{"_index":3818,"title":{},"name":{},"text":{"52":{},"53":{},"65":{},"69":{},"71":{},"73":{},"142":{},"143":{},"154":{},"159":{},"161":{},"163":{}},"component":{}}],["7809",{"_index":3670,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["7879.765752",{"_index":5335,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["79",{"_index":4053,"title":{},"name":{},"text":{"53":{},"65":{},"69":{},"71":{},"73":{},"143":{},"154":{},"159":{},"161":{},"163":{}},"component":{}}],["7999",{"_index":6536,"title":{},"name":{},"text":{"86":{},"177":{}},"component":{}}],["7cbcdd9d",{"_index":6802,"title":{},"name":{},"text":{"165":{}},"component":{}}],["7d:f2:62:e6:e1:a9:2e:d1:c7:cd:0e:c2:62:01:db",{"_index":4258,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["7tupl",{"_index":2155,"title":{"86-7":{},"177-6":{}},"name":{},"text":{"29":{},"86":{},"117":{},"177":{}},"component":{}}],["8",{"_index":248,"title":{"92-8":{},"96-8":{},"99-8":{},"101-15":{},"134-53":{},"152-52":{},"162-42":{},"171-17":{},"175-17":{}},"name":{},"text":{"4":{},"7":{},"15":{},"22":{},"23":{},"26":{},"46":{},"48":{},"50":{},"52":{},"53":{},"55":{},"56":{},"61":{},"62":{},"65":{},"66":{},"68":{},"69":{},"71":{},"72":{},"73":{},"83":{},"84":{},"86":{},"90":{},"92":{},"99":{},"109":{},"111":{},"114":{},"134":{},"137":{},"138":{},"141":{},"142":{},"143":{},"146":{},"147":{},"151":{},"152":{},"154":{},"156":{},"158":{},"159":{},"161":{},"162":{},"163":{},"174":{},"175":{},"177":{}},"component":{}}],["8.02",{"_index":5922,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["8.04",{"_index":5933,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["8.1",{"_index":6826,"title":{"171-18":{},"175-18":{}},"name":{},"text":{},"component":{}}],["8.2",{"_index":6827,"title":{"171-19":{},"175-19":{}},"name":{},"text":{},"component":{}}],["8.3",{"_index":6829,"title":{"175-20":{}},"name":{},"text":{},"component":{}}],["8.4",{"_index":6830,"title":{"175-21":{}},"name":{},"text":{},"component":{}}],["8.4.0",{"_index":1136,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["8.6.8.2",{"_index":2034,"title":{},"name":{},"text":{"28":{},"85":{},"115":{},"176":{}},"component":{}}],["8.6.8.4",{"_index":1897,"title":{},"name":{},"text":{"26":{},"85":{},"114":{},"176":{}},"component":{}}],["8.717907",{"_index":5302,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["8.9",{"_index":4761,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["80",{"_index":651,"title":{},"name":{},"text":{"6":{},"7":{},"49":{},"58":{},"59":{},"65":{},"71":{},"73":{},"74":{},"92":{},"94":{},"136":{},"145":{},"149":{},"154":{},"161":{},"163":{},"164":{}},"component":{}}],["800",{"_index":1896,"title":{},"name":{},"text":{"26":{},"27":{},"112":{},"114":{}},"component":{}}],["8000.0:0:0:1:0:0",{"_index":1413,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["8000000",{"_index":2076,"title":{},"name":{},"text":{"29":{},"82":{},"84":{},"87":{},"117":{},"173":{},"175":{},"178":{}},"component":{}}],["80000000",{"_index":4906,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["8000001",{"_index":6387,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["8000002",{"_index":6564,"title":{},"name":{},"text":{"87":{},"178":{}},"component":{}}],["8000021",{"_index":6393,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["800007",{"_index":6389,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["8000255",{"_index":6388,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["800042",{"_index":6390,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["800u",{"_index":6535,"title":{},"name":{},"text":{"86":{},"177":{}},"component":{}}],["802.1a",{"_index":2288,"title":{},"name":{},"text":{"35":{},"36":{},"123":{},"124":{}},"component":{}}],["802.1ad",{"_index":6280,"title":{},"name":{},"text":{"81":{},"84":{},"85":{},"86":{},"172":{},"175":{},"176":{},"177":{}},"component":{}}],["802.1ag",{"_index":6557,"title":{},"name":{},"text":{"87":{},"178":{}},"component":{}}],["802.1cb",{"_index":841,"title":{},"name":{},"text":{"12":{},"23":{},"29":{},"98":{},"111":{},"117":{}},"component":{}}],["802.1d",{"_index":491,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["802.1q",{"_index":570,"title":{},"name":{},"text":{"6":{},"7":{},"12":{},"23":{},"26":{},"28":{},"36":{},"59":{},"81":{},"82":{},"84":{},"85":{},"86":{},"87":{},"92":{},"94":{},"98":{},"111":{},"114":{},"115":{},"124":{},"149":{},"172":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["802.1qbb",{"_index":1385,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["802.1qbu",{"_index":756,"title":{},"name":{},"text":{"10":{},"97":{}},"component":{}}],["802.1qbv",{"_index":800,"title":{},"name":{},"text":{"10":{},"97":{}},"component":{}}],["802.1qci",{"_index":1788,"title":{},"name":{},"text":{"23":{},"111":{}},"component":{}}],["802.1w",{"_index":487,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["802.3ad",{"_index":383,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["802.3af/at/bt",{"_index":6024,"title":{},"name":{},"text":{"77":{},"167":{}},"component":{}}],["802.3br",{"_index":757,"title":{},"name":{},"text":{"10":{},"97":{}},"component":{}}],["802.3bt/upo",{"_index":6020,"title":{},"name":{},"text":{"77":{},"167":{}},"component":{}}],["802.3x",{"_index":1380,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["8021.a",{"_index":1946,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["8021q",{"_index":5248,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["8021q_dei_cl",{"_index":2083,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["8021q_pcp_cl",{"_index":2085,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["8021q_vid_cl",{"_index":2088,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["8021q_vlan_tagged_i",{"_index":2089,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["802_2",{"_index":6403,"title":{},"name":{},"text":{"84":{},"87":{},"175":{},"178":{}},"component":{}}],["80kb",{"_index":5408,"title":{},"name":{},"text":{"61":{},"77":{},"151":{},"167":{}},"component":{}}],["80x30",{"_index":4885,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["81",{"_index":1842,"title":{},"name":{},"text":{"23":{},"49":{},"58":{},"59":{},"65":{},"71":{},"73":{},"111":{},"136":{},"145":{},"149":{},"154":{},"161":{},"163":{}},"component":{}}],["8100000",{"_index":6330,"title":{},"name":{},"text":{"82":{},"84":{},"87":{},"173":{},"175":{},"178":{}},"component":{}}],["8192",{"_index":2030,"title":{},"name":{},"text":{"28":{},"46":{},"59":{},"62":{},"115":{},"134":{},"149":{},"152":{}},"component":{}}],["8192k",{"_index":4841,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["8199999",{"_index":2078,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["82",{"_index":3407,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"66":{},"136":{},"145":{},"149":{},"156":{}},"component":{}}],["8200000",{"_index":6368,"title":{},"name":{},"text":{"84":{},"87":{},"175":{},"178":{}},"component":{}}],["8290",{"_index":3775,"title":{},"name":{},"text":{"51":{},"139":{}},"component":{}}],["8291",{"_index":3773,"title":{},"name":{},"text":{"51":{},"139":{}},"component":{}}],["83",{"_index":3408,"title":{},"name":{},"text":{"49":{},"50":{},"58":{},"59":{},"66":{},"136":{},"138":{},"145":{},"149":{},"156":{}},"component":{}}],["8300000",{"_index":6369,"title":{},"name":{},"text":{"84":{},"87":{},"175":{},"178":{}},"component":{}}],["830kb",{"_index":5463,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["84",{"_index":794,"title":{},"name":{},"text":{"10":{},"49":{},"58":{},"59":{},"97":{},"136":{},"145":{},"149":{}},"component":{}}],["8483",{"_index":6128,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["84b3",{"_index":6805,"title":{},"name":{},"text":{"165":{}},"component":{}}],["85",{"_index":2452,"title":{},"name":{},"text":{"45":{},"68":{},"133":{},"158":{}},"component":{}}],["8536",{"_index":3078,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["86",{"_index":5696,"title":{},"name":{},"text":{"68":{},"158":{}},"component":{}}],["866",{"_index":1832,"title":{},"name":{},"text":{"23":{},"111":{}},"component":{}}],["86910",{"_index":6270,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["871a0",{"_index":2874,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["87c0",{"_index":3052,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["88",{"_index":3325,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["888780k/1048576k",{"_index":4840,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["89",{"_index":2456,"title":{},"name":{},"text":{"45":{},"50":{},"133":{},"138":{}},"component":{}}],["893",{"_index":1768,"title":{},"name":{},"text":{"22":{},"109":{}},"component":{}}],["896",{"_index":5855,"title":{},"name":{},"text":{"73":{},"75":{},"163":{},"166":{}},"component":{}}],["897.689004",{"_index":5952,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["897.9",{"_index":5857,"title":{},"name":{},"text":{"73":{},"75":{},"163":{},"166":{}},"component":{}}],["8bit",{"_index":5593,"title":{},"name":{},"text":{"66":{},"156":{}},"component":{}}],["8e123a33",{"_index":3089,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["8e79",{"_index":6130,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["8ef917d1",{"_index":3061,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["8gb",{"_index":6102,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["8k",{"_index":3701,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["8kb",{"_index":5460,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["8m",{"_index":1795,"title":{},"name":{},"text":{"23":{},"86":{},"111":{},"177":{}},"component":{}}],["8mb",{"_index":1817,"title":{},"name":{},"text":{"23":{},"86":{},"111":{},"177":{}},"component":{}}],["8port",{"_index":2202,"title":{},"name":{},"text":{"31":{},"34":{},"37":{},"119":{},"120":{},"121":{}},"component":{}}],["9",{"_index":680,"title":{"92-9":{},"96-9":{},"99-9":{},"101-16":{},"175-22":{}},"name":{},"text":{"7":{},"23":{},"29":{},"49":{},"50":{},"52":{},"59":{},"60":{},"65":{},"68":{},"71":{},"73":{},"75":{},"84":{},"92":{},"111":{},"117":{},"136":{},"138":{},"142":{},"149":{},"150":{},"154":{},"158":{},"161":{},"163":{},"166":{},"175":{}},"component":{}}],["9.1",{"_index":6831,"title":{"175-23":{}},"name":{},"text":{},"component":{}}],["9.2",{"_index":6832,"title":{"175-24":{}},"name":{},"text":{},"component":{}}],["9.3",{"_index":6833,"title":{"175-25":{}},"name":{},"text":{},"component":{}}],["9.4",{"_index":6834,"title":{"175-26":{}},"name":{},"text":{},"component":{}}],["90",{"_index":3529,"title":{},"name":{},"text":{"50":{},"55":{},"65":{},"66":{},"72":{},"80":{},"86":{},"138":{},"146":{},"154":{},"156":{},"162":{},"171":{},"177":{}},"component":{}}],["90000000",{"_index":1796,"title":{},"name":{},"text":{"23":{},"86":{},"111":{},"177":{}},"component":{}}],["90m",{"_index":1800,"title":{},"name":{},"text":{"23":{},"111":{}},"component":{}}],["9134",{"_index":1834,"title":{},"name":{},"text":{"23":{},"111":{}},"component":{}}],["9177",{"_index":3099,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["9216",{"_index":6356,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["921600/8/n/1",{"_index":5467,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["929a",{"_index":6149,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["92:0d:c6:5e:32:18",{"_index":3287,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["92f4",{"_index":3092,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["9300",{"_index":5644,"title":{},"name":{},"text":{"67":{},"157":{}},"component":{}}],["9322",{"_index":3085,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["940",{"_index":4759,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["94:53:ca:46:c5",{"_index":4259,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["9561",{"_index":6142,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["96",{"_index":2068,"title":{},"name":{},"text":{"29":{},"66":{},"117":{},"156":{}},"component":{}}],["96000",{"_index":3678,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["9662",{"_index":3772,"title":{},"name":{},"text":{"51":{},"139":{}},"component":{}}],["9668",{"_index":3774,"title":{},"name":{},"text":{"51":{},"139":{}},"component":{}}],["9670",{"_index":3150,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["9692",{"_index":5645,"title":{},"name":{},"text":{"67":{},"157":{}},"component":{}}],["9698",{"_index":5643,"title":{},"name":{},"text":{"67":{},"157":{}},"component":{}}],["96b15000",{"_index":5875,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["96b22000",{"_index":5872,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["97",{"_index":3991,"title":{},"name":{},"text":{"53":{},"143":{}},"component":{}}],["973968",{"_index":3660,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["9790",{"_index":6135,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["97a513e3cae4",{"_index":3100,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["98",{"_index":3520,"title":{},"name":{},"text":{"50":{},"69":{},"138":{},"159":{}},"component":{}}],["98304",{"_index":3687,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["9849",{"_index":1819,"title":{},"name":{},"text":{"23":{},"111":{}},"component":{}}],["9893",{"_index":3683,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["990",{"_index":1876,"title":{},"name":{},"text":{"26":{},"28":{},"114":{},"115":{}},"component":{}}],["990000",{"_index":1872,"title":{},"name":{},"text":{"26":{},"28":{},"114":{},"115":{}},"component":{}}],["999/output/build_arm64_standalone/images/rootfs.squashf",{"_index":6265,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["9:1.0",{"_index":4733,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["9d",{"_index":2794,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["9dcc",{"_index":3057,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["9e60",{"_index":3071,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["_",{"_index":3453,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["_clk",{"_index":2458,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["_mmc_tmp",{"_index":2906,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["_tmp_",{"_index":2945,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["a+x",{"_index":1289,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["a/bl1",{"_index":2602,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["a/bl2",{"_index":2440,"title":{},"name":{},"text":{"45":{},"46":{},"55":{},"62":{},"72":{},"133":{},"134":{},"146":{},"152":{},"162":{}},"component":{}}],["a/bl33",{"_index":2692,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["a/linux",{"_index":2545,"title":{"46-13":{},"62-13":{},"134-12":{},"152-12":{}},"name":{},"text":{},"component":{}}],["a/uboot/linux",{"_index":2544,"title":{"46-12":{},"62-12":{},"134-11":{},"152-11":{}},"name":{},"text":{},"component":{}}],["a0",{"_index":2598,"title":{},"name":{},"text":{"46":{},"62":{},"65":{},"134":{},"152":{},"154":{}},"component":{}}],["a0369f.fffe.67c4e6",{"_index":2014,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["a14",{"_index":4315,"title":{},"name":{},"text":{"55":{},"146":{}},"component":{}}],["a2:17:30:13:8a:46",{"_index":4755,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["a3e850ee411aeec2a47c409d866a33a49771a76",{"_index":4698,"title":{},"name":{},"text":{"58":{},"145":{}},"component":{}}],["a4af13c6",{"_index":6691,"title":{},"name":{},"text":{"141":{}},"component":{}}],["a53",{"_index":5854,"title":{},"name":{},"text":{"73":{},"75":{},"163":{},"166":{}},"component":{}}],["a5b2",{"_index":3064,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["a8c51255994f",{"_index":3058,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["a98f",{"_index":3672,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["a9993e364706816aba3e25717850c26c9cd0d89d",{"_index":2513,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["a9f6",{"_index":6694,"title":{},"name":{},"text":{"141":{}},"component":{}}],["aaaa",{"_index":3651,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["aarch64",{"_index":5865,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["abbrevi",{"_index":2587,"title":{"46-54":{},"55-50":{},"62-53":{},"72-42":{},"134-53":{},"146-49":{},"152-52":{},"162-41":{}},"name":{},"text":{"46":{},"55":{},"62":{},"72":{},"84":{},"134":{},"146":{},"152":{},"162":{},"175":{}},"component":{}}],["abc",{"_index":2504,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["abcd",{"_index":1701,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["abcdefghij",{"_index":647,"title":{},"name":{},"text":{"6":{},"7":{},"92":{},"94":{}},"component":{}}],["abil",{"_index":4113,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["abort",{"_index":3746,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["abov",{"_index":146,"title":{},"name":{},"text":{"2":{},"4":{},"10":{},"12":{},"14":{},"22":{},"23":{},"26":{},"28":{},"29":{},"46":{},"52":{},"55":{},"59":{},"62":{},"64":{},"68":{},"71":{},"72":{},"73":{},"77":{},"80":{},"82":{},"83":{},"84":{},"85":{},"86":{},"87":{},"88":{},"90":{},"97":{},"98":{},"101":{},"109":{},"111":{},"114":{},"115":{},"117":{},"134":{},"141":{},"142":{},"146":{},"149":{},"152":{},"155":{},"158":{},"161":{},"162":{},"163":{},"167":{},"171":{},"173":{},"174":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["acceler",{"_index":2431,"title":{"45":{},"133":{},"45-1":{}},"name":{},"text":{"45":{},"133":{}},"component":{}}],["accept",{"_index":6420,"title":{},"name":{},"text":{"84":{},"85":{},"175":{},"176":{}},"component":{}}],["access",{"_index":1191,"title":{},"name":{},"text":{"14":{},"27":{},"30":{},"51":{},"54":{},"55":{},"65":{},"67":{},"72":{},"74":{},"82":{},"84":{},"87":{},"101":{},"112":{},"116":{},"139":{},"141":{},"144":{},"146":{},"151":{},"154":{},"157":{},"162":{},"164":{},"165":{},"173":{},"175":{},"178":{}},"component":{}}],["accompani",{"_index":6663,"title":{},"name":{},"text":{"141":{}},"component":{}}],["accord",{"_index":1883,"title":{},"name":{},"text":{"26":{},"28":{},"46":{},"54":{},"55":{},"62":{},"72":{},"79":{},"86":{},"87":{},"114":{},"115":{},"134":{},"144":{},"146":{},"152":{},"162":{},"170":{},"177":{},"178":{}},"component":{}}],["accordingli",{"_index":2648,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["account",{"_index":3691,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["accumul",{"_index":2038,"title":{},"name":{},"text":{"28":{},"46":{},"62":{},"115":{},"134":{},"152":{}},"component":{}}],["accuraci",{"_index":2335,"title":{},"name":{},"text":{"37":{},"120":{}},"component":{}}],["achiev",{"_index":3038,"title":{},"name":{},"text":{"46":{},"62":{},"112":{},"134":{},"152":{},"165":{}},"component":{}}],["acl",{"_index":366,"title":{"173":{},"178":{},"9-10":{},"22-3":{},"82-1":{},"82-2":{},"87-1":{},"87-2":{},"87-3":{},"96-9":{},"109-2":{},"173-1":{},"178-1":{},"178-2":{}},"name":{},"text":{"4":{},"9":{},"17":{},"22":{},"23":{},"84":{},"85":{},"87":{},"90":{},"96":{},"106":{},"109":{},"111":{},"175":{},"176":{},"178":{}},"component":{}}],["acm",{"_index":4575,"title":{},"name":{},"text":{"57":{},"59":{},"73":{},"148":{},"149":{},"163":{}},"component":{}}],["act",{"_index":369,"title":{},"name":{},"text":{"4":{},"6":{},"90":{},"94":{}},"component":{}}],["act_width",{"_index":2070,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["action",{"_index":361,"title":{"81-5":{},"82-9":{},"84-16":{},"84-21":{},"84-26":{},"85-14":{},"86-14":{},"87-15":{},"172-4":{},"173-8":{},"175-15":{},"175-20":{},"175-25":{},"176-14":{},"177-13":{},"178-14":{}},"name":{},"text":{"4":{},"6":{},"12":{},"22":{},"23":{},"29":{},"46":{},"54":{},"55":{},"59":{},"60":{},"62":{},"72":{},"75":{},"79":{},"81":{},"82":{},"84":{},"85":{},"86":{},"87":{},"90":{},"94":{},"98":{},"109":{},"111":{},"117":{},"134":{},"144":{},"146":{},"149":{},"150":{},"152":{},"162":{},"166":{},"170":{},"172":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["action_nam",{"_index":2062,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["action_valu",{"_index":2063,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["actionset",{"_index":2060,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["actionset_nam",{"_index":2061,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["activ",{"_index":387,"title":{"75-9":{},"166-8":{}},"name":{},"text":{"4":{},"10":{},"43":{},"45":{},"46":{},"57":{},"59":{},"62":{},"80":{},"90":{},"97":{},"130":{},"133":{},"134":{},"148":{},"149":{},"152":{},"171":{}},"component":{}}],["actual",{"_index":1182,"title":{},"name":{},"text":{"14":{},"15":{},"29":{},"50":{},"52":{},"56":{},"64":{},"66":{},"84":{},"85":{},"99":{},"101":{},"117":{},"138":{},"142":{},"147":{},"155":{},"156":{},"175":{},"176":{}},"component":{}}],["ad",{"_index":415,"title":{"14-15":{},"33-5":{},"36-4":{},"36-5":{},"36-10":{},"38-7":{},"101-14":{},"122-4":{},"124-3":{},"124-4":{},"124-9":{},"125-6":{}},"name":{},"text":{"4":{},"6":{},"7":{},"13":{},"14":{},"18":{},"27":{},"28":{},"29":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"40":{},"41":{},"42":{},"43":{},"52":{},"55":{},"57":{},"68":{},"72":{},"77":{},"80":{},"81":{},"82":{},"83":{},"84":{},"85":{},"90":{},"92":{},"94":{},"101":{},"102":{},"103":{},"112":{},"115":{},"117":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"127":{},"128":{},"129":{},"130":{},"131":{},"141":{},"142":{},"146":{},"148":{},"158":{},"162":{},"167":{},"171":{},"172":{},"173":{},"174":{},"175":{},"176":{}},"component":{}}],["adapt",{"_index":54,"title":{},"name":{},"text":{"1":{},"65":{},"89":{},"154":{}},"component":{}}],["add",{"_index":184,"title":{"7-5":{},"16-7":{},"16-10":{},"92-4":{},"104-6":{},"104-9":{}},"name":{},"text":{"4":{},"6":{},"7":{},"10":{},"12":{},"13":{},"14":{},"15":{},"16":{},"18":{},"22":{},"23":{},"26":{},"27":{},"28":{},"29":{},"32":{},"46":{},"55":{},"58":{},"59":{},"60":{},"62":{},"71":{},"72":{},"73":{},"74":{},"75":{},"77":{},"81":{},"82":{},"84":{},"85":{},"86":{},"87":{},"90":{},"92":{},"94":{},"97":{},"98":{},"99":{},"101":{},"102":{},"103":{},"104":{},"109":{},"111":{},"112":{},"114":{},"115":{},"117":{},"118":{},"134":{},"141":{},"145":{},"146":{},"149":{},"150":{},"152":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"172":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["add/del/mod",{"_index":4140,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["add/drop",{"_index":630,"title":{},"name":{},"text":{"6":{},"94":{}},"component":{}}],["add0",{"_index":3069,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["add_executable(hello",{"_index":1264,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["add_frag_s",{"_index":772,"title":{},"name":{},"text":{"10":{},"97":{}},"component":{}}],["added/modifi",{"_index":750,"title":{},"name":{},"text":{"9":{},"55":{},"72":{},"96":{},"146":{},"162":{}},"component":{}}],["adding/remov",{"_index":672,"title":{},"name":{},"text":{"7":{},"92":{}},"component":{}}],["addit",{"_index":811,"title":{"131-7":{}},"name":{},"text":{"10":{},"14":{},"46":{},"55":{},"62":{},"72":{},"86":{},"87":{},"97":{},"101":{},"134":{},"141":{},"146":{},"152":{},"162":{},"177":{},"178":{}},"component":{}}],["addition",{"_index":2753,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["addmrp",{"_index":1668,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["addr",{"_index":260,"title":{},"name":{},"text":{"4":{},"15":{},"19":{},"29":{},"46":{},"48":{},"51":{},"59":{},"62":{},"67":{},"80":{},"90":{},"99":{},"105":{},"117":{},"134":{},"137":{},"139":{},"149":{},"152":{},"157":{},"171":{}},"component":{}}],["addr:127.0.0.1",{"_index":3307,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["addrconf(netdev_chang",{"_index":3317,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["address",{"_index":163,"title":{"4-2":{},"15-3":{},"15-5":{},"19-3":{},"90-1":{},"99-2":{},"99-4":{},"105-2":{}},"name":{},"text":{"4":{},"7":{},"12":{},"15":{},"16":{},"19":{},"22":{},"23":{},"29":{},"46":{},"47":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"58":{},"59":{},"61":{},"62":{},"63":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"79":{},"80":{},"82":{},"84":{},"86":{},"87":{},"90":{},"92":{},"98":{},"99":{},"104":{},"105":{},"109":{},"111":{},"117":{},"134":{},"135":{},"136":{},"138":{},"139":{},"142":{},"143":{},"144":{},"145":{},"146":{},"149":{},"151":{},"152":{},"153":{},"154":{},"156":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"170":{},"171":{},"173":{},"175":{},"177":{},"178":{}},"component":{}}],["addrgenmod",{"_index":1431,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["adher",{"_index":6463,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["adjac",{"_index":6457,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["adjust",{"_index":1958,"title":{},"name":{},"text":{"27":{},"46":{},"59":{},"62":{},"112":{},"134":{},"149":{},"152":{}},"component":{}}],["adma",{"_index":3561,"title":{},"name":{},"text":{"50":{},"52":{},"59":{},"66":{},"138":{},"142":{},"149":{},"156":{}},"component":{}}],["admin",{"_index":767,"title":{},"name":{},"text":{"10":{},"97":{}},"component":{}}],["admin_statu",{"_index":766,"title":{},"name":{},"text":{"10":{},"97":{}},"component":{}}],["administr",{"_index":566,"title":{},"name":{},"text":{"6":{},"29":{},"51":{},"67":{},"94":{},"117":{},"139":{},"157":{}},"component":{}}],["adminstatus=rxtx",{"_index":1391,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["advanc",{"_index":2411,"title":{},"name":{},"text":{"43":{},"55":{},"72":{},"130":{},"146":{},"162":{}},"component":{}}],["advantag",{"_index":4302,"title":{},"name":{},"text":{"55":{},"72":{},"80":{},"112":{},"146":{},"162":{},"171":{}},"component":{}}],["advertis",{"_index":1369,"title":{},"name":{},"text":{"15":{},"35":{},"36":{},"55":{},"72":{},"99":{},"123":{},"124":{},"146":{},"162":{}},"component":{}}],["advis",{"_index":4477,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["ae",{"_index":2433,"title":{"45-5":{},"45-12":{},"133-4":{},"133-11":{}},"name":{"45":{},"133":{}},"text":{"45":{},"55":{},"59":{},"72":{},"133":{},"146":{},"149":{},"162":{}},"component":{}}],["aes.yaml",{"_index":2460,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["aes_clk",{"_index":2455,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["aff5c9c495b1",{"_index":3079,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["affect",{"_index":2388,"title":{},"name":{},"text":{"40":{},"55":{},"72":{},"85":{},"127":{},"146":{},"162":{},"176":{}},"component":{}}],["afterward",{"_index":2755,"title":{},"name":{},"text":{"46":{},"54":{},"62":{},"134":{},"144":{},"152":{}},"component":{}}],["ag",{"_index":331,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["again",{"_index":312,"title":{},"name":{},"text":{"4":{},"7":{},"26":{},"28":{},"29":{},"52":{},"68":{},"70":{},"85":{},"90":{},"92":{},"114":{},"115":{},"117":{},"142":{},"158":{},"160":{},"176":{}},"component":{}}],["against",{"_index":4286,"title":{},"name":{},"text":{"55":{},"72":{},"84":{},"146":{},"162":{},"165":{},"175":{}},"component":{}}],["ageing_tim",{"_index":338,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["aggreg",{"_index":168,"title":{"4-6":{},"90-5":{}},"name":{},"text":{"4":{},"15":{},"17":{},"55":{},"72":{},"90":{},"99":{},"106":{},"146":{},"162":{}},"component":{}}],["ahb",{"_index":3414,"title":{},"name":{},"text":{"49":{},"53":{},"58":{},"59":{},"65":{},"69":{},"71":{},"73":{},"136":{},"143":{},"145":{},"149":{},"154":{},"159":{},"161":{},"163":{}},"component":{}}],["ahb/apb/qspi@e0834000/spi",{"_index":3121,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["aim",{"_index":2316,"title":{},"name":{},"text":{"36":{},"124":{}},"component":{}}],["al",{"_index":1305,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["alg",{"_index":906,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["algo",{"_index":6761,"title":{},"name":{},"text":{"165":{}},"component":{}}],["algorithm",{"_index":400,"title":{},"name":{},"text":{"4":{},"12":{},"26":{},"28":{},"45":{},"55":{},"59":{},"72":{},"85":{},"90":{},"98":{},"114":{},"115":{},"133":{},"146":{},"149":{},"162":{},"165":{},"176":{}},"component":{}}],["alias",{"_index":4711,"title":{},"name":{},"text":{"59":{},"73":{},"149":{},"163":{}},"component":{}}],["alice@177ef3776e6a:/home/alice/project/brsdk/mscc",{"_index":1297,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["align",{"_index":2409,"title":{},"name":{},"text":{"43":{},"85":{},"130":{},"176":{}},"component":{}}],["alignmenterror",{"_index":1458,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["aliv",{"_index":692,"title":{},"name":{},"text":{"7":{},"92":{}},"component":{}}],["alive=/dev/watchdog",{"_index":5380,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["alloc",{"_index":925,"title":{},"name":{},"text":{"12":{},"50":{},"51":{},"59":{},"67":{},"85":{},"98":{},"138":{},"139":{},"149":{},"157":{},"165":{},"176":{}},"component":{}}],["alloc:off",{"_index":4838,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["allow",{"_index":251,"title":{},"name":{},"text":{"4":{},"9":{},"10":{},"12":{},"13":{},"16":{},"18":{},"22":{},"23":{},"27":{},"28":{},"46":{},"51":{},"55":{},"61":{},"62":{},"67":{},"72":{},"77":{},"79":{},"80":{},"81":{},"84":{},"85":{},"90":{},"96":{},"97":{},"98":{},"102":{},"103":{},"104":{},"109":{},"111":{},"112":{},"115":{},"134":{},"139":{},"141":{},"146":{},"151":{},"152":{},"157":{},"162":{},"165":{},"167":{},"170":{},"171":{},"172":{},"175":{},"176":{}},"component":{}}],["alon",{"_index":6772,"title":{},"name":{},"text":{"165":{}},"component":{}}],["along",{"_index":4480,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["alongsid",{"_index":6780,"title":{},"name":{},"text":{"165":{}},"component":{}}],["alreadi",{"_index":3039,"title":{},"name":{},"text":{"46":{},"51":{},"54":{},"55":{},"59":{},"62":{},"67":{},"72":{},"79":{},"134":{},"139":{},"144":{},"146":{},"149":{},"152":{},"157":{},"162":{},"165":{},"170":{}},"component":{}}],["alt",{"_index":3505,"title":{},"name":{},"text":{"50":{},"65":{},"66":{},"71":{},"73":{},"138":{},"154":{},"156":{},"161":{},"163":{}},"component":{}}],["alter",{"_index":1330,"title":{},"name":{},"text":{"14":{},"50":{},"66":{},"101":{},"138":{},"156":{}},"component":{}}],["altern",{"_index":1091,"title":{},"name":{},"text":{"14":{},"52":{},"54":{},"55":{},"68":{},"101":{},"142":{},"144":{},"146":{},"158":{}},"component":{}}],["although",{"_index":6733,"title":{},"name":{},"text":{"165":{}},"component":{}}],["alway",{"_index":778,"title":{},"name":{},"text":{"10":{},"14":{},"26":{},"28":{},"35":{},"36":{},"46":{},"51":{},"55":{},"62":{},"67":{},"72":{},"74":{},"84":{},"85":{},"97":{},"101":{},"112":{},"114":{},"115":{},"123":{},"124":{},"134":{},"139":{},"146":{},"152":{},"157":{},"162":{},"164":{},"175":{},"176":{}},"component":{}}],["am335",{"_index":5988,"title":{},"name":{},"text":{"76":{},"168":{}},"component":{}}],["amazon",{"_index":1097,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["amount",{"_index":334,"title":{},"name":{},"text":{"4":{},"28":{},"55":{},"72":{},"90":{},"115":{},"146":{},"162":{}},"component":{}}],["analog",{"_index":3421,"title":{},"name":{},"text":{"49":{},"65":{},"73":{},"136":{},"154":{},"163":{}},"component":{}}],["and/or",{"_index":306,"title":{},"name":{},"text":{"4":{},"12":{},"30":{},"46":{},"55":{},"56":{},"62":{},"72":{},"85":{},"90":{},"98":{},"116":{},"134":{},"146":{},"147":{},"152":{},"162":{},"165":{},"176":{}},"component":{}}],["annex",{"_index":2042,"title":{},"name":{},"text":{"28":{},"115":{}},"component":{}}],["announc",{"_index":5928,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["anoth",{"_index":899,"title":{},"name":{},"text":{"12":{},"14":{},"29":{},"46":{},"55":{},"62":{},"72":{},"84":{},"85":{},"98":{},"101":{},"117":{},"134":{},"146":{},"152":{},"162":{},"175":{},"176":{}},"component":{}}],["ansi",{"_index":5924,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["antiqu",{"_index":1712,"title":{},"name":{},"text":{"18":{},"103":{}},"component":{}}],["anyon",{"_index":4440,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["anyth",{"_index":4507,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["anytim",{"_index":4086,"title":{},"name":{},"text":{"54":{},"144":{}},"component":{}}],["anyway",{"_index":3640,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["apart",{"_index":4191,"title":{},"name":{},"text":{"55":{},"72":{},"86":{},"146":{},"162":{},"177":{}},"component":{}}],["apb",{"_index":3416,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"65":{},"71":{},"73":{},"136":{},"145":{},"149":{},"154":{},"161":{},"163":{}},"component":{}}],["api",{"_index":949,"title":{},"name":{},"text":{"12":{},"35":{},"59":{},"60":{},"75":{},"98":{},"123":{},"149":{},"150":{},"166":{}},"component":{}}],["appear",{"_index":4079,"title":{},"name":{},"text":{"54":{},"55":{},"57":{},"72":{},"79":{},"144":{},"146":{},"148":{},"162":{},"170":{}},"component":{}}],["append",{"_index":3232,"title":{},"name":{},"text":{"47":{},"51":{},"63":{},"67":{},"135":{},"139":{},"153":{},"157":{}},"component":{}}],["appl",{"_index":2331,"title":{},"name":{},"text":{"37":{},"120":{}},"component":{}}],["appli",{"_index":952,"title":{},"name":{},"text":{"12":{},"16":{},"36":{},"46":{},"54":{},"55":{},"62":{},"72":{},"79":{},"84":{},"85":{},"98":{},"104":{},"124":{},"134":{},"140":{},"144":{},"146":{},"152":{},"162":{},"165":{},"170":{},"175":{},"176":{}},"component":{}}],["applic",{"_index":549,"title":{},"name":{},"text":{"6":{},"13":{},"14":{},"16":{},"18":{},"27":{},"46":{},"51":{},"54":{},"55":{},"59":{},"62":{},"67":{},"72":{},"73":{},"79":{},"85":{},"94":{},"101":{},"102":{},"103":{},"104":{},"112":{},"134":{},"139":{},"144":{},"146":{},"149":{},"152":{},"157":{},"162":{},"163":{},"165":{},"170":{},"176":{}},"component":{}}],["approach",{"_index":2761,"title":{},"name":{},"text":{"46":{},"54":{},"55":{},"62":{},"72":{},"79":{},"134":{},"144":{},"146":{},"152":{},"162":{},"170":{}},"component":{}}],["appropri",{"_index":16,"title":{},"name":{},"text":{"1":{},"14":{},"43":{},"54":{},"70":{},"79":{},"80":{},"86":{},"87":{},"89":{},"101":{},"130":{},"144":{},"160":{},"165":{},"170":{},"171":{},"177":{},"178":{}},"component":{}}],["approxim",{"_index":3975,"title":{},"name":{},"text":{"52":{},"68":{},"84":{},"142":{},"158":{},"175":{}},"component":{}}],["apr",{"_index":4744,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["apt",{"_index":1036,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["arbitrari",{"_index":6467,"title":{},"name":{},"text":{"85":{},"165":{},"176":{}},"component":{}}],["arch",{"_index":4198,"title":{},"name":{},"text":{"55":{},"72":{},"140":{},"146":{},"162":{}},"component":{}}],["arch_sys_count",{"_index":4869,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["arch_tim",{"_index":4863,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["architectur",{"_index":1316,"title":{"55-3":{},"72-3":{},"85-2":{},"146-2":{},"162-2":{},"176-2":{}},"name":{},"text":{"14":{},"18":{},"32":{},"38":{},"40":{},"46":{},"59":{},"62":{},"73":{},"101":{},"103":{},"118":{},"125":{},"127":{},"134":{},"149":{},"152":{},"163":{}},"component":{}}],["archiv",{"_index":2698,"title":{},"name":{},"text":{"46":{},"54":{},"62":{},"79":{},"134":{},"144":{},"152":{},"170":{}},"component":{}}],["area",{"_index":2819,"title":{},"name":{},"text":{"46":{},"48":{},"51":{},"55":{},"59":{},"61":{},"62":{},"64":{},"67":{},"72":{},"77":{},"134":{},"137":{},"139":{},"146":{},"149":{},"151":{},"152":{},"155":{},"157":{},"162":{},"167":{}},"component":{}}],["arg",{"_index":2817,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"72":{},"134":{},"146":{},"152":{},"162":{}},"component":{}}],["argument",{"_index":17,"title":{},"name":{},"text":{"1":{},"6":{},"14":{},"27":{},"29":{},"46":{},"55":{},"62":{},"72":{},"80":{},"89":{},"94":{},"101":{},"112":{},"117":{},"134":{},"146":{},"152":{},"162":{},"171":{}},"component":{}}],["aris",{"_index":4476,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["arm",{"_index":33,"title":{"40-6":{},"76-2":{},"76-3":{},"127-5":{},"165-2":{},"168-1":{},"168-2":{}},"name":{},"text":{"1":{},"14":{},"32":{},"38":{},"40":{},"46":{},"55":{},"59":{},"62":{},"72":{},"73":{},"75":{},"76":{},"89":{},"101":{},"118":{},"125":{},"127":{},"134":{},"140":{},"146":{},"149":{},"152":{},"162":{},"163":{},"165":{},"166":{},"168":{}},"component":{}}],["arm,psci",{"_index":4485,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["arm64",{"_index":2228,"title":{"40-6":{},"127-5":{}},"name":{},"text":{"32":{},"33":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"62":{},"72":{},"76":{},"80":{},"118":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"141":{},"152":{},"162":{},"168":{},"171":{}},"component":{}}],["arm64_bootload",{"_index":41,"title":{},"name":{},"text":{"1":{},"76":{},"89":{},"168":{}},"component":{}}],["arm64_bootloaders_ls1046",{"_index":43,"title":{},"name":{},"text":{"1":{},"76":{},"89":{},"168":{}},"component":{}}],["arm64_bootloaders_rpi",{"_index":45,"title":{},"name":{},"text":{"1":{},"76":{},"89":{},"168":{}},"component":{}}],["arm64_standalon",{"_index":5969,"title":{},"name":{},"text":{"76":{},"168":{}},"component":{}}],["arm64_standalone_rpi",{"_index":5971,"title":{},"name":{},"text":{"76":{},"168":{}},"component":{}}],["arm64_xstax",{"_index":5970,"title":{},"name":{},"text":{"76":{},"168":{}},"component":{}}],["arm_bootload",{"_index":30,"title":{},"name":{},"text":{"1":{},"76":{},"89":{},"168":{}},"component":{}}],["arm_bootloaders_bbb",{"_index":35,"title":{},"name":{},"text":{"1":{},"76":{},"89":{},"168":{}},"component":{}}],["arm_standalon",{"_index":1162,"title":{},"name":{},"text":{"14":{},"76":{},"101":{},"168":{}},"component":{}}],["arm_standalone_defconfig",{"_index":1163,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["arm_toolchain_defconfig",{"_index":1332,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["arm_xstax",{"_index":5982,"title":{},"name":{},"text":{"76":{},"168":{}},"component":{}}],["armv7",{"_index":3203,"title":{},"name":{},"text":{"46":{},"59":{},"62":{},"134":{},"149":{},"152":{}},"component":{}}],["armv8",{"_index":3204,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["armv8_a",{"_index":5469,"title":{},"name":{},"text":{"62":{},"80":{},"141":{},"152":{},"171":{}},"component":{}}],["around",{"_index":2336,"title":{},"name":{},"text":{"37":{},"120":{}},"component":{}}],["arp",{"_index":2112,"title":{"82-4":{},"87-10":{},"173-3":{},"178-9":{}},"name":{},"text":{"29":{},"82":{},"84":{},"86":{},"87":{},"117":{},"173":{},"175":{},"177":{},"178":{}},"component":{}}],["arp/rarp",{"_index":6545,"title":{},"name":{},"text":{"87":{},"178":{}},"component":{}}],["arp_addr_space_ok_i",{"_index":2090,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["arp_len_ok_i",{"_index":2091,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["arp_op",{"_index":6299,"title":{},"name":{},"text":{"82":{},"84":{},"87":{},"173":{},"175":{},"178":{}},"component":{}}],["arp_opcod",{"_index":2093,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["arp_opcode_unknown_i",{"_index":2095,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["arp_proto_space_ok_i",{"_index":2097,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["arp_sender_match_i",{"_index":2099,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["arp_sip",{"_index":6298,"title":{},"name":{},"text":{"82":{},"87":{},"173":{},"178":{}},"component":{}}],["arp_tgt_match_i",{"_index":2100,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["arp_tip",{"_index":6296,"title":{},"name":{},"text":{"82":{},"87":{},"173":{},"178":{}},"component":{}}],["array",{"_index":3737,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["arrow",{"_index":4073,"title":{},"name":{},"text":{"54":{},"79":{},"144":{},"170":{}},"component":{}}],["artifact",{"_index":1006,"title":{"14-14":{},"46-14":{},"46-16":{},"46-17":{},"46-19":{},"55-48":{},"62-14":{},"62-16":{},"62-17":{},"62-19":{},"72-40":{},"101-13":{},"134-13":{},"134-15":{},"134-16":{},"134-18":{},"146-47":{},"152-13":{},"152-15":{},"152-16":{},"152-18":{},"162-39":{}},"name":{},"text":{"14":{},"32":{},"46":{},"54":{},"55":{},"62":{},"72":{},"79":{},"101":{},"118":{},"134":{},"144":{},"146":{},"152":{},"162":{},"170":{}},"component":{}}],["ascii",{"_index":3749,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["asciidoc",{"_index":1038,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["asciidoctor",{"_index":1089,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["ascii|hex",{"_index":3755,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["ascii|hex|dec",{"_index":3714,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["ascii|hex|dec|3ascii",{"_index":3712,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["asn1",{"_index":4260,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["aspect",{"_index":2171,"title":{},"name":{},"text":{"30":{},"116":{}},"component":{}}],["assign",{"_index":256,"title":{},"name":{},"text":{"4":{},"9":{},"12":{},"14":{},"15":{},"16":{},"19":{},"23":{},"28":{},"48":{},"50":{},"53":{},"59":{},"64":{},"65":{},"66":{},"69":{},"74":{},"83":{},"84":{},"85":{},"86":{},"87":{},"90":{},"96":{},"98":{},"99":{},"101":{},"104":{},"105":{},"111":{},"115":{},"137":{},"138":{},"143":{},"149":{},"154":{},"155":{},"156":{},"159":{},"164":{},"174":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["associ",{"_index":300,"title":{"9-12":{},"96-11":{}},"name":{},"text":{"4":{},"6":{},"9":{},"12":{},"13":{},"32":{},"51":{},"55":{},"57":{},"67":{},"72":{},"84":{},"90":{},"94":{},"96":{},"98":{},"102":{},"118":{},"139":{},"146":{},"148":{},"157":{},"162":{},"175":{}},"component":{}}],["assum",{"_index":974,"title":{},"name":{},"text":{"13":{},"46":{},"51":{},"54":{},"55":{},"61":{},"62":{},"79":{},"80":{},"102":{},"134":{},"139":{},"141":{},"144":{},"146":{},"151":{},"152":{},"165":{},"170":{},"171":{}},"component":{}}],["assume_two_step",{"_index":2028,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["astyl",{"_index":1039,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["asynchron",{"_index":3207,"title":{},"name":{},"text":{"46":{},"47":{},"49":{},"55":{},"62":{},"63":{},"65":{},"72":{},"134":{},"135":{},"136":{},"146":{},"152":{},"153":{},"154":{},"162":{}},"component":{}}],["at",{"_index":4442,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["at24",{"_index":3438,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["at91",{"_index":3435,"title":{},"name":{},"text":{"49":{},"65":{},"136":{},"154":{}},"component":{}}],["at91_i2c",{"_index":3428,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["at_xdmac",{"_index":4949,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["atag",{"_index":4941,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["atmel",{"_index":2432,"title":{"45-5":{},"45-6":{},"133-4":{},"133-5":{}},"name":{},"text":{"45":{},"50":{},"57":{},"59":{},"66":{},"69":{},"74":{},"133":{},"138":{},"148":{},"149":{},"156":{},"159":{},"164":{}},"component":{}}],["atmel,24c512",{"_index":3424,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["atmel,at91rm9200",{"_index":4641,"title":{},"name":{},"text":{"58":{},"71":{},"145":{},"161":{}},"component":{}}],["atmel,at91sam9260",{"_index":4707,"title":{},"name":{},"text":{"59":{},"73":{},"149":{},"163":{}},"component":{}}],["atmel,at91sam9g46",{"_index":2448,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["atmel,fifo",{"_index":3420,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["atmel,flexcom",{"_index":3240,"title":{},"name":{},"text":{"47":{},"49":{},"58":{},"59":{},"63":{},"65":{},"71":{},"73":{},"135":{},"136":{},"145":{},"149":{},"153":{},"154":{},"161":{},"163":{}},"component":{}}],["atmel,sama5d2",{"_index":3223,"title":{},"name":{},"text":{"47":{},"63":{},"135":{},"153":{}},"component":{}}],["atmel,sama5d3",{"_index":4582,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["atmel,us",{"_index":4672,"title":{},"name":{},"text":{"58":{},"145":{}},"component":{}}],["atmel,vbu",{"_index":4588,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["atmel_",{"_index":5301,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["atmel_a",{"_index":5200,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["atmel_flexcom_mode_spi",{"_index":4640,"title":{},"name":{},"text":{"58":{},"71":{},"145":{},"161":{}},"component":{}}],["atmel_flexcom_mode_twi",{"_index":3345,"title":{},"name":{},"text":{"49":{},"65":{},"136":{},"154":{}},"component":{}}],["atmel_flexcom_mode_usart",{"_index":4706,"title":{},"name":{},"text":{"59":{},"73":{},"149":{},"163":{}},"component":{}}],["atmel_qspi",{"_index":4002,"title":{},"name":{},"text":{"53":{},"143":{}},"component":{}}],["atmel_seri",{"_index":5038,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["atmel_sha",{"_index":5206,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["atmel_spi",{"_index":4682,"title":{},"name":{},"text":{"58":{},"69":{},"145":{},"159":{}},"component":{}}],["atmel_usart_seri",{"_index":5030,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["atmel_usart_serial.0.auto",{"_index":5031,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["atmel_usart_serial.1.auto",{"_index":5040,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["atom",{"_index":4936,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["atom12",{"_index":6025,"title":{},"name":{},"text":{"78":{},"169":{}},"component":{}}],["attach",{"_index":1749,"title":{"57-13":{},"148-12":{}},"name":{},"text":{"22":{},"26":{},"28":{},"31":{},"34":{},"46":{},"54":{},"56":{},"57":{},"59":{},"62":{},"74":{},"79":{},"80":{},"84":{},"85":{},"109":{},"114":{},"115":{},"119":{},"121":{},"134":{},"141":{},"144":{},"147":{},"148":{},"149":{},"152":{},"164":{},"170":{},"171":{},"175":{},"176":{}},"component":{}}],["attack",{"_index":4283,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{},"165":{}},"component":{}}],["attempt",{"_index":781,"title":{},"name":{},"text":{"10":{},"46":{},"55":{},"60":{},"62":{},"75":{},"97":{},"134":{},"146":{},"150":{},"152":{},"166":{}},"component":{}}],["attr",{"_index":3047,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["attribut",{"_index":679,"title":{"55-36":{},"55-37":{},"55-38":{},"55-39":{},"55-40":{},"55-41":{},"55-42":{},"72-32":{},"72-33":{},"72-34":{},"146-35":{},"146-36":{},"146-37":{},"146-38":{},"146-39":{},"146-40":{},"146-41":{},"162-31":{},"162-32":{},"162-33":{}},"name":{},"text":{"7":{},"27":{},"46":{},"55":{},"57":{},"62":{},"72":{},"80":{},"92":{},"112":{},"134":{},"146":{},"148":{},"152":{},"162":{},"171":{}},"component":{}}],["audienc",{"_index":961,"title":{"13-1":{},"102-1":{}},"name":{},"text":{},"component":{}}],["audit",{"_index":4938,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["audit(0.030:1",{"_index":4944,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["audit_enabled=0",{"_index":4946,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["aug",{"_index":3674,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["auth.fip",{"_index":2714,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["auth.gpt",{"_index":2782,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["auth.gpt.gz",{"_index":2717,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["authent",{"_index":2695,"title":{"55-16":{},"72-16":{},"146-15":{},"162-15":{}},"name":{},"text":{"46":{},"55":{},"62":{},"72":{},"131":{},"134":{},"146":{},"152":{},"162":{},"165":{}},"component":{}}],["auto",{"_index":1352,"title":{},"name":{},"text":{"15":{},"16":{},"27":{},"35":{},"36":{},"43":{},"46":{},"59":{},"62":{},"99":{},"104":{},"112":{},"123":{},"124":{},"130":{},"134":{},"149":{},"152":{}},"component":{}}],["autoboot",{"_index":2790,"title":{},"name":{},"text":{"46":{},"60":{},"62":{},"73":{},"75":{},"80":{},"134":{},"150":{},"152":{},"163":{},"166":{},"171":{}},"component":{}}],["autoconf",{"_index":1040,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["autom",{"_index":988,"title":{},"name":{},"text":{"13":{},"14":{},"18":{},"101":{},"102":{},"103":{}},"component":{}}],["automat",{"_index":209,"title":{},"name":{},"text":{"4":{},"9":{},"14":{},"46":{},"55":{},"62":{},"72":{},"85":{},"90":{},"96":{},"101":{},"134":{},"146":{},"152":{},"162":{},"176":{}},"component":{}}],["automot",{"_index":6006,"title":{},"name":{},"text":{"77":{},"167":{}},"component":{}}],["autoneg",{"_index":1358,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["autonegoti",{"_index":1382,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["avail",{"_index":968,"title":{"40-3":{},"41-3":{},"42-3":{},"43-3":{},"127-2":{},"128-2":{},"129-2":{},"130-2":{},"131-2":{}},"name":{},"text":{"13":{},"14":{},"18":{},"29":{},"32":{},"40":{},"41":{},"42":{},"43":{},"46":{},"51":{},"55":{},"56":{},"57":{},"58":{},"59":{},"62":{},"67":{},"70":{},"72":{},"74":{},"80":{},"84":{},"85":{},"87":{},"101":{},"102":{},"103":{},"117":{},"118":{},"127":{},"128":{},"129":{},"130":{},"131":{},"134":{},"139":{},"145":{},"146":{},"147":{},"148":{},"149":{},"152":{},"157":{},"160":{},"162":{},"164":{},"165":{},"171":{},"175":{},"176":{},"178":{}},"component":{}}],["averag",{"_index":5368,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["avoid",{"_index":853,"title":{},"name":{},"text":{"12":{},"14":{},"46":{},"62":{},"98":{},"101":{},"134":{},"152":{}},"component":{}}],["aw",{"_index":1099,"title":{},"name":{},"text":{"14":{},"18":{},"101":{},"103":{}},"component":{}}],["awar",{"_index":200,"title":{"26-4":{},"114-3":{}},"name":{},"text":{"4":{},"9":{},"12":{},"17":{},"18":{},"26":{},"31":{},"33":{},"34":{},"36":{},"37":{},"43":{},"46":{},"54":{},"55":{},"62":{},"72":{},"79":{},"84":{},"85":{},"90":{},"96":{},"98":{},"101":{},"103":{},"106":{},"114":{},"119":{},"120":{},"121":{},"122":{},"124":{},"130":{},"134":{},"144":{},"146":{},"152":{},"162":{},"170":{},"175":{},"176":{}},"component":{}}],["away",{"_index":6459,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["awehouqdqgaeaqzofvl+yqcalkncm7s7itszfbyw+r9sqk5cbcuobehhzh7kniat",{"_index":4267,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["axi",{"_index":3413,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"65":{},"68":{},"71":{},"73":{},"136":{},"145":{},"149":{},"154":{},"158":{},"161":{},"163":{}},"component":{}}],["axi:usb@300000",{"_index":5697,"title":{},"name":{},"text":{"68":{},"158":{}},"component":{}}],["b",{"_index":855,"title":{},"name":{},"text":{"12":{},"27":{},"38":{},"48":{},"49":{},"50":{},"52":{},"57":{},"60":{},"62":{},"64":{},"65":{},"66":{},"75":{},"98":{},"112":{},"125":{},"136":{},"137":{},"138":{},"142":{},"148":{},"150":{},"152":{},"154":{},"155":{},"156":{},"166":{}},"component":{}}],["b'001001001101",{"_index":4506,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["b/",{"_index":6271,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["b0",{"_index":2597,"title":{},"name":{},"text":{"46":{},"55":{},"65":{},"134":{},"146":{},"154":{}},"component":{}}],["b14",{"_index":4316,"title":{},"name":{},"text":{"55":{},"146":{}},"component":{}}],["b15",{"_index":4317,"title":{},"name":{},"text":{"55":{},"146":{}},"component":{}}],["b2c8fd7ff0af",{"_index":6806,"title":{},"name":{},"text":{"165":{}},"component":{}}],["b2dde0d3",{"_index":3680,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["b4b84b8a",{"_index":3075,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["b61705a90f00c79348629adf0c777a8d9c923636f7f9ece854902f3a609233c5",{"_index":6808,"title":{},"name":{},"text":{"165":{}},"component":{}}],["b9e5",{"_index":3050,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["back",{"_index":204,"title":{},"name":{},"text":{"4":{},"15":{},"26":{},"51":{},"54":{},"55":{},"67":{},"72":{},"79":{},"85":{},"90":{},"99":{},"114":{},"139":{},"144":{},"146":{},"157":{},"162":{},"170":{},"176":{}},"component":{}}],["backchannel",{"_index":5000,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["backend",{"_index":6792,"title":{},"name":{},"text":{"165":{}},"component":{}}],["background",{"_index":556,"title":{"60-11":{},"75-11":{},"150-10":{},"166-10":{}},"name":{},"text":{"6":{},"10":{},"15":{},"16":{},"60":{},"75":{},"94":{},"97":{},"99":{},"104":{},"112":{},"150":{},"166":{}},"component":{}}],["backlog",{"_index":1771,"title":{},"name":{},"text":{"22":{},"23":{},"81":{},"86":{},"87":{},"109":{},"111":{},"172":{},"177":{},"178":{}},"component":{}}],["backup",{"_index":3018,"title":{},"name":{},"text":{"46":{},"50":{},"62":{},"80":{},"134":{},"138":{},"152":{},"171":{}},"component":{}}],["bak",{"_index":2679,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["balanc",{"_index":378,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["band",{"_index":1882,"title":{},"name":{},"text":{"26":{},"114":{}},"component":{}}],["bandwidth",{"_index":1746,"title":{},"name":{},"text":{"22":{},"26":{},"28":{},"80":{},"85":{},"109":{},"114":{},"115":{},"171":{},"176":{}},"component":{}}],["bank",{"_index":5733,"title":{},"name":{},"text":{"70":{},"160":{}},"component":{}}],["bar",{"_index":4069,"title":{},"name":{},"text":{"54":{},"55":{},"79":{},"144":{},"146":{},"170":{}},"component":{}}],["bar0",{"_index":4366,"title":{},"name":{},"text":{"55":{},"146":{}},"component":{}}],["bar1",{"_index":4367,"title":{},"name":{},"text":{"55":{},"146":{}},"component":{}}],["bar2",{"_index":4368,"title":{},"name":{},"text":{"55":{},"146":{}},"component":{}}],["bar3",{"_index":4369,"title":{},"name":{},"text":{"55":{},"146":{}},"component":{}}],["bar4",{"_index":4370,"title":{},"name":{},"text":{"55":{},"146":{}},"component":{}}],["bar5",{"_index":4371,"title":{},"name":{},"text":{"55":{},"146":{}},"component":{}}],["bare",{"_index":1025,"title":{"46-30":{},"62-30":{},"134-29":{},"152-29":{}},"name":{},"text":{"14":{},"80":{},"101":{},"141":{},"171":{}},"component":{}}],["bare.ext4",{"_index":1201,"title":{},"name":{},"text":{"14":{},"46":{},"62":{},"101":{},"134":{},"152":{}},"component":{}}],["bare.it",{"_index":5511,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["bare.itb",{"_index":1200,"title":{},"name":{},"text":{"14":{},"62":{},"101":{},"152":{}},"component":{}}],["bare.ubif",{"_index":5512,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["base",{"_index":34,"title":{},"name":{},"text":{"1":{},"4":{},"6":{},"8":{},"9":{},"12":{},"13":{},"14":{},"15":{},"18":{},"23":{},"26":{},"27":{},"28":{},"40":{},"43":{},"45":{},"46":{},"47":{},"50":{},"53":{},"54":{},"55":{},"58":{},"59":{},"62":{},"63":{},"66":{},"69":{},"71":{},"72":{},"76":{},"79":{},"80":{},"83":{},"84":{},"85":{},"86":{},"87":{},"89":{},"90":{},"94":{},"95":{},"96":{},"98":{},"99":{},"101":{},"102":{},"103":{},"111":{},"112":{},"114":{},"115":{},"127":{},"130":{},"133":{},"134":{},"135":{},"138":{},"140":{},"143":{},"144":{},"145":{},"146":{},"149":{},"152":{},"153":{},"156":{},"159":{},"161":{},"162":{},"165":{},"168":{},"170":{},"171":{},"174":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["base_baud",{"_index":5036,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["basetim",{"_index":6528,"title":{},"name":{},"text":{"86":{},"177":{}},"component":{}}],["bash",{"_index":1296,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["basi",{"_index":1384,"title":{},"name":{},"text":{"15":{},"23":{},"99":{},"111":{}},"component":{}}],["basic",{"_index":69,"title":{"88":{},"174":{},"2-1":{},"83-1":{},"83-2":{},"174-1":{}},"name":{},"text":{"8":{},"15":{},"17":{},"31":{},"33":{},"34":{},"36":{},"37":{},"43":{},"46":{},"55":{},"62":{},"72":{},"77":{},"83":{},"85":{},"95":{},"99":{},"106":{},"119":{},"120":{},"121":{},"122":{},"124":{},"130":{},"134":{},"146":{},"152":{},"162":{},"167":{},"174":{},"176":{}},"component":{}}],["basic_qo",{"_index":89,"title":{},"name":{"2":{},"88":{}},"text":{},"component":{}}],["batch",{"_index":6738,"title":{},"name":{},"text":{"165":{}},"component":{}}],["baudrat",{"_index":3014,"title":{},"name":{},"text":{"46":{},"59":{},"62":{},"134":{},"149":{},"152":{}},"component":{}}],["baudrate=115200",{"_index":2880,"title":{},"name":{},"text":{"46":{},"59":{},"62":{},"80":{},"134":{},"149":{},"152":{},"171":{}},"component":{}}],["bay",{"_index":4519,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["bb:89:34:99:7d:b6:30:f9:1f:6c:a8:ae:5c:6d:c5",{"_index":4256,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["bc",{"_index":1041,"title":{},"name":{},"text":{"14":{},"27":{},"101":{},"112":{}},"component":{}}],["bcddevic",{"_index":4620,"title":{},"name":{},"text":{"57":{},"59":{},"73":{},"74":{},"148":{},"149":{},"163":{},"164":{}},"component":{}}],["bcm_2711",{"_index":5972,"title":{},"name":{},"text":{"76":{},"168":{}},"component":{}}],["be",{"_index":1229,"title":{},"name":{},"text":{"14":{},"47":{},"51":{},"52":{},"55":{},"59":{},"63":{},"67":{},"68":{},"70":{},"72":{},"84":{},"85":{},"86":{},"101":{},"135":{},"139":{},"142":{},"146":{},"149":{},"153":{},"157":{},"158":{},"160":{},"162":{},"175":{},"176":{},"177":{}},"component":{}}],["be25",{"_index":3777,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["beagl",{"_index":36,"title":{},"name":{},"text":{"1":{},"89":{}},"component":{}}],["becom",{"_index":3318,"title":{},"name":{},"text":{"48":{},"59":{},"73":{},"137":{},"149":{},"163":{}},"component":{}}],["befor",{"_index":414,"title":{},"name":{},"text":{"4":{},"6":{},"10":{},"13":{},"14":{},"15":{},"16":{},"19":{},"26":{},"27":{},"43":{},"46":{},"51":{},"55":{},"59":{},"62":{},"67":{},"72":{},"74":{},"80":{},"81":{},"84":{},"85":{},"90":{},"94":{},"97":{},"99":{},"101":{},"102":{},"104":{},"105":{},"112":{},"114":{},"130":{},"134":{},"139":{},"146":{},"149":{},"152":{},"157":{},"162":{},"164":{},"171":{},"172":{},"175":{},"176":{}},"component":{}}],["begin",{"_index":4265,"title":{},"name":{},"text":{"55":{},"72":{},"80":{},"146":{},"162":{},"171":{}},"component":{}}],["behav",{"_index":1982,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["behavior",{"_index":613,"title":{},"name":{},"text":{"6":{},"30":{},"80":{},"85":{},"94":{},"116":{},"171":{},"176":{}},"component":{}}],["behaviour",{"_index":1861,"title":{},"name":{},"text":{"26":{},"84":{},"114":{},"175":{}},"component":{}}],["belong",{"_index":856,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["below",{"_index":582,"title":{},"name":{},"text":{"6":{},"7":{},"12":{},"45":{},"46":{},"47":{},"49":{},"50":{},"52":{},"53":{},"55":{},"56":{},"58":{},"59":{},"61":{},"62":{},"63":{},"65":{},"66":{},"68":{},"69":{},"71":{},"72":{},"73":{},"77":{},"80":{},"82":{},"85":{},"86":{},"92":{},"94":{},"98":{},"133":{},"134":{},"135":{},"136":{},"138":{},"142":{},"143":{},"145":{},"146":{},"147":{},"149":{},"151":{},"152":{},"153":{},"154":{},"156":{},"158":{},"159":{},"161":{},"162":{},"163":{},"167":{},"171":{},"173":{},"176":{},"177":{}},"component":{}}],["besid",{"_index":1495,"title":{},"name":{},"text":{"15":{},"29":{},"46":{},"55":{},"62":{},"65":{},"72":{},"83":{},"99":{},"117":{},"134":{},"146":{},"152":{},"154":{},"162":{},"174":{}},"component":{}}],["best",{"_index":3535,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["beta",{"_index":2185,"title":{"31-3":{},"31-4":{},"31-5":{},"32-3":{},"32-4":{},"33-4":{},"34-3":{},"34-4":{},"34-5":{},"35-4":{},"37-3":{},"37-4":{},"37-5":{},"118-2":{},"118-3":{},"119-2":{},"119-3":{},"119-4":{},"120-2":{},"120-3":{},"120-4":{},"121-2":{},"121-3":{},"121-4":{},"122-3":{},"123-3":{}},"name":{},"text":{"31":{},"33":{},"34":{},"35":{},"36":{},"37":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{}},"component":{}}],["better",{"_index":992,"title":{},"name":{},"text":{"13":{},"18":{},"102":{},"103":{}},"component":{}}],["between",{"_index":253,"title":{"84-8":{},"175-7":{}},"name":{},"text":{"4":{},"10":{},"12":{},"15":{},"16":{},"27":{},"28":{},"38":{},"50":{},"55":{},"61":{},"66":{},"72":{},"76":{},"77":{},"84":{},"85":{},"90":{},"97":{},"98":{},"99":{},"104":{},"112":{},"115":{},"125":{},"138":{},"146":{},"151":{},"156":{},"162":{},"167":{},"168":{},"175":{},"176":{}},"component":{}}],["beyond",{"_index":2543,"title":{"46-11":{},"62-11":{},"134-10":{},"152-10":{}},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["bfebb6dba410",{"_index":3151,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["bidirect",{"_index":4312,"title":{},"name":{},"text":{"55":{},"62":{},"146":{},"152":{}},"component":{}}],["bigger",{"_index":2751,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["bin",{"_index":1124,"title":{},"name":{},"text":{"14":{},"62":{},"101":{},"152":{}},"component":{}}],["binari",{"_index":1118,"title":{"32-7":{},"118-6":{}},"name":{},"text":{"14":{},"32":{},"38":{},"46":{},"51":{},"55":{},"56":{},"60":{},"62":{},"67":{},"72":{},"75":{},"80":{},"101":{},"118":{},"125":{},"134":{},"139":{},"146":{},"147":{},"150":{},"152":{},"157":{},"162":{},"165":{},"166":{},"171":{}},"component":{}}],["bind",{"_index":1764,"title":{"56-7":{},"147-6":{}},"name":{},"text":{"22":{},"23":{},"36":{},"46":{},"55":{},"56":{},"59":{},"62":{},"72":{},"81":{},"86":{},"87":{},"109":{},"111":{},"124":{},"134":{},"146":{},"147":{},"149":{},"152":{},"162":{},"172":{},"177":{},"178":{}},"component":{}}],["bin|hex",{"_index":3753,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["bison",{"_index":1042,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["bit",{"_index":32,"title":{"76-2":{},"76-3":{},"76-4":{},"168-1":{},"168-2":{},"168-3":{}},"name":{},"text":{"1":{},"4":{},"12":{},"22":{},"23":{},"28":{},"29":{},"46":{},"50":{},"51":{},"52":{},"53":{},"55":{},"59":{},"62":{},"66":{},"67":{},"69":{},"72":{},"73":{},"81":{},"84":{},"86":{},"87":{},"89":{},"90":{},"98":{},"109":{},"111":{},"115":{},"117":{},"134":{},"138":{},"139":{},"142":{},"143":{},"146":{},"149":{},"152":{},"156":{},"157":{},"159":{},"162":{},"163":{},"165":{},"172":{},"175":{},"177":{},"178":{}},"component":{}}],["bitfield",{"_index":3732,"title":{},"name":{},"text":{"51":{},"55":{},"67":{},"72":{},"139":{},"146":{},"157":{},"162":{}},"component":{}}],["bitmask",{"_index":775,"title":{},"name":{},"text":{"10":{},"97":{}},"component":{}}],["bitrat",{"_index":2031,"title":{},"name":{},"text":{"28":{},"48":{},"85":{},"115":{},"137":{},"176":{}},"component":{}}],["bl1",{"_index":3178,"title":{"55-24":{},"72-24":{},"146-23":{},"162-23":{}},"name":{},"text":{"46":{},"51":{},"54":{},"55":{},"62":{},"67":{},"72":{},"79":{},"134":{},"139":{},"144":{},"146":{},"152":{},"157":{},"162":{},"170":{}},"component":{}}],["bl1/bl2",{"_index":4298,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["bl2",{"_index":2356,"title":{"55-25":{},"72-25":{},"146-24":{},"162-24":{}},"name":{},"text":{"38":{},"45":{},"46":{},"51":{},"55":{},"62":{},"67":{},"72":{},"125":{},"133":{},"134":{},"139":{},"146":{},"152":{},"157":{},"162":{}},"component":{}}],["bl2,bl32,bl33",{"_index":4177,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["bl2_image_id",{"_index":4148,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["bl2normal",{"_index":2713,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["bl2u",{"_index":4078,"title":{"79-5":{},"170-4":{}},"name":{},"text":{"54":{},"55":{},"72":{},"79":{},"144":{},"146":{},"162":{},"170":{}},"component":{}}],["bl31",{"_index":3180,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"72":{},"134":{},"146":{},"152":{},"162":{}},"component":{}}],["bl31/bl32",{"_index":3729,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["bl31_image_id",{"_index":5790,"title":{},"name":{},"text":{"72":{},"162":{}},"component":{}}],["bl31_key",{"_index":4224,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["bl32",{"_index":2608,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"72":{},"134":{},"146":{},"152":{},"162":{}},"component":{}}],["bl32_image_id",{"_index":4150,"title":{},"name":{},"text":{"55":{},"146":{}},"component":{}}],["bl32_key",{"_index":4226,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["bl33",{"_index":2609,"title":{"55-12":{},"55-13":{},"72-12":{},"72-13":{},"146-11":{},"146-12":{},"162-11":{},"162-12":{}},"name":{},"text":{"46":{},"54":{},"55":{},"62":{},"72":{},"75":{},"79":{},"134":{},"144":{},"146":{},"152":{},"162":{},"165":{},"166":{},"170":{}},"component":{}}],["bl33_blob",{"_index":5796,"title":{},"name":{},"text":{"72":{},"162":{}},"component":{}}],["bl33_image_id",{"_index":4152,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["bl33_key",{"_index":4231,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["bl33linux",{"_index":2720,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["bl3x",{"_index":4132,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["black",{"_index":38,"title":{},"name":{},"text":{"1":{},"89":{}},"component":{}}],["blank",{"_index":2571,"title":{"46-40":{},"62-39":{},"134-39":{},"152-38":{}},"name":{},"text":{"46":{},"54":{},"62":{},"79":{},"134":{},"144":{},"152":{},"170":{}},"component":{}}],["bld_uid=$(id",{"_index":1281,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["bld_user=$(id",{"_index":1279,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["blindli",{"_index":4428,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["blk",{"_index":2814,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["blob",{"_index":1013,"title":{},"name":{},"text":{"14":{},"46":{},"55":{},"59":{},"62":{},"72":{},"73":{},"101":{},"134":{},"146":{},"149":{},"152":{},"162":{},"163":{}},"component":{}}],["block",{"_index":606,"title":{"85-18":{},"176-18":{}},"name":{},"text":{"6":{},"8":{},"9":{},"12":{},"16":{},"17":{},"45":{},"46":{},"50":{},"51":{},"52":{},"53":{},"58":{},"59":{},"62":{},"64":{},"67":{},"68":{},"74":{},"80":{},"84":{},"85":{},"86":{},"94":{},"95":{},"98":{},"104":{},"106":{},"133":{},"134":{},"138":{},"139":{},"142":{},"143":{},"145":{},"149":{},"152":{},"155":{},"157":{},"158":{},"164":{},"165":{},"171":{},"175":{},"176":{},"177":{}},"component":{}}],["blx",{"_index":4090,"title":{"55-4":{},"72-4":{},"146-3":{},"162-3":{}},"name":{},"text":{},"component":{}}],["board",{"_index":29,"title":{"38-5":{},"61-8":{},"76-2":{},"76-3":{},"76-4":{},"77-5":{},"80-9":{},"80-10":{},"80-14":{},"125-4":{},"151-9":{},"167-5":{},"168-1":{},"168-2":{},"168-3":{},"171-8":{},"171-9":{},"171-13":{}},"name":{},"text":{"1":{},"13":{},"14":{},"31":{},"32":{},"34":{},"35":{},"36":{},"37":{},"38":{},"46":{},"50":{},"51":{},"54":{},"55":{},"59":{},"61":{},"62":{},"64":{},"65":{},"66":{},"67":{},"72":{},"73":{},"76":{},"77":{},"79":{},"80":{},"89":{},"101":{},"102":{},"112":{},"118":{},"119":{},"120":{},"121":{},"123":{},"124":{},"125":{},"134":{},"138":{},"139":{},"141":{},"144":{},"146":{},"149":{},"151":{},"152":{},"154":{},"155":{},"156":{},"157":{},"162":{},"163":{},"167":{},"168":{},"170":{},"171":{}},"component":{}}],["board\\bsp",{"_index":5968,"title":{},"name":{},"text":{"76":{},"168":{}},"component":{}}],["boards(pcb8309",{"_index":3328,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["bogomip",{"_index":4889,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["bold",{"_index":2671,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["bond",{"_index":377,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["bond0",{"_index":389,"title":{},"name":{},"text":{"4":{},"48":{},"90":{},"137":{}},"component":{}}],["bone",{"_index":37,"title":{},"name":{},"text":{"1":{},"89":{}},"component":{}}],["boneblack",{"_index":5989,"title":{},"name":{},"text":{"76":{},"168":{}},"component":{}}],["bool",{"_index":1240,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["boot",{"_index":21,"title":{"46":{},"55":{},"62":{},"72":{},"134":{},"146":{},"152":{},"162":{},"165":{},"40-6":{},"46-1":{},"46-4":{},"46-6":{},"46-7":{},"46-34":{},"46-35":{},"46-45":{},"55-1":{},"55-29":{},"55-30":{},"62-1":{},"62-4":{},"62-6":{},"62-7":{},"62-34":{},"62-35":{},"62-44":{},"72-1":{},"72-29":{},"80-2":{},"80-5":{},"80-11":{},"80-12":{},"80-13":{},"80-15":{},"80-16":{},"80-17":{},"80-18":{},"80-19":{},"80-20":{},"127-5":{},"131-4":{},"134-3":{},"134-5":{},"134-6":{},"134-33":{},"134-34":{},"134-44":{},"141-7":{},"146-28":{},"146-29":{},"152-3":{},"152-5":{},"152-6":{},"152-33":{},"152-34":{},"152-43":{},"162-28":{},"165-2":{},"165-3":{},"165-5":{},"165-7":{},"171-1":{},"171-4":{},"171-10":{},"171-11":{},"171-12":{},"171-14":{},"171-15":{},"171-16":{},"171-17":{},"171-18":{},"171-19":{}},"name":{"46":{},"62":{},"134":{},"152":{},"165":{}},"text":{"1":{},"14":{},"31":{},"32":{},"34":{},"36":{},"37":{},"38":{},"40":{},"43":{},"46":{},"50":{},"51":{},"54":{},"55":{},"56":{},"57":{},"59":{},"60":{},"61":{},"62":{},"66":{},"67":{},"72":{},"73":{},"75":{},"78":{},"79":{},"80":{},"89":{},"101":{},"118":{},"119":{},"120":{},"121":{},"124":{},"125":{},"127":{},"130":{},"131":{},"134":{},"138":{},"139":{},"140":{},"141":{},"144":{},"146":{},"147":{},"148":{},"149":{},"150":{},"151":{},"152":{},"156":{},"157":{},"162":{},"163":{},"165":{},"166":{},"169":{},"170":{},"171":{}},"component":{}}],["boot${nand_cur};ubi",{"_index":6184,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["boot${nand_cur};ubifsmount",{"_index":6187,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["boot.dtsi",{"_index":6744,"title":{},"name":{},"text":{"165":{}},"component":{}}],["boot0",{"_index":2664,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["boot1",{"_index":2668,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["boot_ack",{"_index":2830,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["boot_bus_width",{"_index":2824,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["boot_mod",{"_index":2826,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["boot_partit",{"_index":2831,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["boot_source=${boot_sourc",{"_index":5531,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["bootarg",{"_index":2928,"title":{},"name":{},"text":{"46":{},"55":{},"59":{},"62":{},"73":{},"80":{},"134":{},"146":{},"149":{},"152":{},"163":{},"171":{}},"component":{}}],["bootargs=console=ttyat0,115200",{"_index":5516,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["bootargs=console=ttys1,115200",{"_index":4765,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["bootargs_extra",{"_index":2933,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["bootargs_extra=loglevel=4",{"_index":6156,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["bootargs_extra=uio_pdrv_genirq.of_id=gener",{"_index":3006,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["bootbu",{"_index":2823,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["bootcmd",{"_index":2966,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["bootcmd=run",{"_index":2882,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["bootdelay",{"_index":3015,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["bootdelay=3",{"_index":2881,"title":{},"name":{},"text":{"46":{},"59":{},"62":{},"80":{},"134":{},"149":{},"152":{},"171":{}},"component":{}}],["bootf",{"_index":6686,"title":{},"name":{},"text":{"141":{}},"component":{}}],["bootfile=fit_icpu_build_623.itb",{"_index":4768,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["bootlad",{"_index":2762,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["bootload",{"_index":1,"title":{"89":{},"1-1":{},"55-4":{},"72-4":{},"146-3":{},"162-3":{}},"name":{"1":{},"89":{}},"text":{"1":{},"32":{},"43":{},"46":{},"55":{},"62":{},"72":{},"80":{},"89":{},"118":{},"130":{},"134":{},"141":{},"146":{},"152":{},"162":{},"171":{}},"component":{}}],["bootm",{"_index":2922,"title":{},"name":{},"text":{"46":{},"59":{},"62":{},"80":{},"134":{},"149":{},"152":{},"171":{}},"component":{}}],["bootp",{"_index":4757,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["bootpart",{"_index":2827,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["bootrom",{"_index":2349,"title":{},"name":{},"text":{"38":{},"51":{},"55":{},"61":{},"67":{},"72":{},"77":{},"125":{},"139":{},"146":{},"151":{},"157":{},"162":{},"167":{}},"component":{}}],["bootstag",{"_index":2776,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["bootstrap",{"_index":2408,"title":{"80-10":{},"80-14":{},"171-9":{},"171-13":{}},"name":{},"text":{"43":{},"54":{},"79":{},"130":{},"144":{},"170":{}},"component":{}}],["bootup",{"_index":2750,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["bosch",{"_index":3249,"title":{},"name":{},"text":{"48":{},"64":{},"137":{},"155":{}},"component":{}}],["bosch,m_can",{"_index":3253,"title":{},"name":{},"text":{"48":{},"64":{},"137":{},"155":{}},"component":{}}],["bosch,mram",{"_index":3272,"title":{},"name":{},"text":{"48":{},"64":{},"137":{},"155":{}},"component":{}}],["both",{"_index":148,"title":{},"name":{},"text":{"2":{},"4":{},"7":{},"12":{},"14":{},"16":{},"31":{},"32":{},"34":{},"37":{},"38":{},"41":{},"42":{},"43":{},"50":{},"55":{},"59":{},"66":{},"72":{},"80":{},"82":{},"84":{},"85":{},"86":{},"87":{},"88":{},"90":{},"92":{},"98":{},"101":{},"104":{},"118":{},"119":{},"120":{},"121":{},"125":{},"128":{},"129":{},"130":{},"138":{},"146":{},"149":{},"156":{},"162":{},"165":{},"171":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["bottom",{"_index":1256,"title":{},"name":{},"text":{"14":{},"101":{},"165":{}},"component":{}}],["bounc",{"_index":5017,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["bound",{"_index":4275,"title":{},"name":{},"text":{"55":{},"56":{},"59":{},"72":{},"146":{},"147":{},"149":{},"162":{}},"component":{}}],["boundari",{"_index":1930,"title":{"27-4":{},"112-3":{}},"name":{},"text":{"27":{},"55":{},"72":{},"112":{},"146":{},"162":{}},"component":{}}],["box",{"_index":511,"title":{},"name":{},"text":{"4":{},"55":{},"72":{},"90":{},"146":{},"162":{}},"component":{}}],["bp",{"_index":6429,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["bpdu",{"_index":497,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["br0",{"_index":187,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"12":{},"15":{},"16":{},"90":{},"92":{},"94":{},"98":{},"99":{},"104":{}},"component":{}}],["br2_external=./extern",{"_index":1186,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["br2_external_mscc_path/package/mscc",{"_index":1258,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["br2_package_mscc_hello_world",{"_index":1239,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["br2_rootfs_post_image_script",{"_index":1190,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["branch",{"_index":2234,"title":{},"name":{},"text":{"32":{},"40":{},"41":{},"42":{},"43":{},"118":{},"127":{},"128":{},"129":{},"130":{},"131":{}},"component":{}}],["brctl",{"_index":500,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["brd",{"_index":233,"title":{},"name":{},"text":{"4":{},"15":{},"19":{},"48":{},"59":{},"90":{},"99":{},"105":{},"137":{},"149":{}},"component":{}}],["breach",{"_index":4439,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["break",{"_index":2215,"title":{},"name":{},"text":{"31":{},"34":{},"55":{},"72":{},"119":{},"121":{},"146":{},"162":{}},"component":{}}],["brick",{"_index":2683,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["bridg",{"_index":74,"title":{"90":{},"91":{},"2-2":{},"3-1":{},"4-1":{},"16-5":{},"88-1":{},"104-4":{}},"name":{},"text":{"2":{},"4":{},"6":{},"7":{},"9":{},"12":{},"15":{},"16":{},"18":{},"19":{},"27":{},"30":{},"49":{},"58":{},"59":{},"65":{},"71":{},"73":{},"83":{},"88":{},"90":{},"92":{},"94":{},"96":{},"98":{},"99":{},"103":{},"104":{},"105":{},"112":{},"116":{},"136":{},"145":{},"149":{},"154":{},"161":{},"163":{},"174":{}},"component":{}}],["bridge(relay",{"_index":1936,"title":{"27-6":{},"112-5":{}},"name":{},"text":{},"component":{}}],["bridge/bond",{"_index":416,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["bridge_configur",{"_index":175,"title":{},"name":{"4":{},"90":{}},"text":{},"component":{}}],["bridge_overview",{"_index":162,"title":{},"name":{"3":{},"91":{}},"text":{},"component":{}}],["bridge_slav",{"_index":455,"title":{},"name":{},"text":{"4":{},"15":{},"90":{},"99":{}},"component":{}}],["briefli",{"_index":2595,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"85":{},"134":{},"152":{},"171":{},"176":{}},"component":{}}],["bring",{"_index":4915,"title":{},"name":{},"text":{"59":{},"131":{},"149":{}},"component":{}}],["bringup",{"_index":4064,"title":{},"name":{},"text":{"54":{},"79":{},"144":{},"170":{}},"component":{}}],["broadcast",{"_index":3288,"title":{},"name":{},"text":{"48":{},"51":{},"59":{},"67":{},"137":{},"139":{},"149":{},"157":{}},"component":{}}],["broadcastframesreceivedok",{"_index":1474,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["broadcastframesxmittedok",{"_index":1470,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["brought",{"_index":4917,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["brows",{"_index":4145,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["browser",{"_index":1109,"title":{},"name":{},"text":{"14":{},"54":{},"79":{},"101":{},"144":{},"170":{}},"component":{}}],["brsdk",{"_index":1107,"title":{},"name":{},"text":{"14":{},"18":{},"32":{},"46":{},"62":{},"80":{},"101":{},"103":{},"118":{},"134":{},"141":{},"152":{},"171":{}},"component":{}}],["brsdk_standalone_arm.ext4.gz",{"_index":2721,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["brsdk_standalone_arm.itb",{"_index":2722,"title":{},"name":{},"text":{"46":{},"55":{},"72":{},"134":{},"146":{},"162":{}},"component":{}}],["brsdk_standalone_arm64.ext4.gz",{"_index":5481,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["brsdk_standalone_arm64.it",{"_index":5483,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["brsdk_standalone_arm64.itb",{"_index":5482,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["brw",{"_index":3549,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["bs=10m",{"_index":3588,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["bs=1k",{"_index":4525,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["bs=32",{"_index":4510,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["bs=64k",{"_index":4695,"title":{},"name":{},"text":{"58":{},"145":{}},"component":{}}],["bs=8m",{"_index":6680,"title":{},"name":{},"text":{"141":{}},"component":{}}],["bsd",{"_index":4103,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["bsg",{"_index":5019,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["bsp",{"_index":68,"title":{"18":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"103":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"14-5":{},"14-7":{},"31-1":{},"31-3":{},"32-1":{},"32-3":{},"33-1":{},"33-4":{},"34-1":{},"34-3":{},"35-1":{},"35-4":{},"36-1":{},"36-11":{},"36-12":{},"37-1":{},"37-3":{},"38-1":{},"39-1":{},"40-1":{},"41-1":{},"42-1":{},"43-1":{},"101-4":{},"101-6":{},"118-2":{},"119-2":{},"120-2":{},"121-2":{},"122-3":{},"123-3":{},"124-10":{},"124-11":{},"141-4":{}},"name":{"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{}},"text":{"6":{},"10":{},"13":{},"14":{},"18":{},"27":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{},"55":{},"57":{},"72":{},"76":{},"80":{},"94":{},"97":{},"101":{},"102":{},"103":{},"112":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"132":{},"141":{},"146":{},"148":{},"162":{},"165":{},"168":{},"171":{}},"component":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{},"82":{},"83":{},"84":{},"85":{},"86":{},"87":{},"88":{},"89":{},"90":{},"91":{},"92":{},"93":{},"94":{},"95":{},"96":{},"97":{},"98":{},"99":{},"100":{},"101":{},"102":{},"103":{},"104":{},"105":{},"106":{},"107":{},"108":{},"109":{},"110":{},"111":{},"112":{},"113":{},"114":{},"115":{},"116":{},"117":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"132":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"140":{},"141":{},"142":{},"143":{},"144":{},"145":{},"146":{},"147":{},"148":{},"149":{},"150":{},"151":{},"152":{},"153":{},"154":{},"155":{},"156":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"168":{},"169":{},"170":{},"171":{},"172":{},"173":{},"174":{},"175":{},"176":{},"177":{},"178":{}}}],["bss",{"_index":4848,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["bssk",{"_index":3183,"title":{},"name":{},"text":{"46":{},"55":{},"56":{},"62":{},"72":{},"134":{},"146":{},"147":{},"152":{},"162":{}},"component":{}}],["bu",{"_index":2361,"title":{},"name":{},"text":{"38":{},"46":{},"48":{},"49":{},"50":{},"52":{},"53":{},"55":{},"59":{},"62":{},"65":{},"66":{},"68":{},"69":{},"70":{},"72":{},"125":{},"134":{},"136":{},"137":{},"138":{},"141":{},"142":{},"143":{},"146":{},"149":{},"152":{},"154":{},"156":{},"158":{},"159":{},"160":{},"162":{}},"component":{}}],["bucket",{"_index":2322,"title":{},"name":{},"text":{"36":{},"85":{},"124":{},"176":{}},"component":{}}],["bucket_order=0",{"_index":5009,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["buffer",{"_index":1377,"title":{},"name":{},"text":{"15":{},"28":{},"55":{},"59":{},"72":{},"85":{},"99":{},"115":{},"146":{},"149":{},"162":{},"176":{}},"component":{}}],["bug",{"_index":2189,"title":{"31-7":{},"33-6":{},"34-7":{},"35-6":{},"36-13":{},"37-7":{},"38-8":{},"39-5":{},"40-7":{},"41-7":{},"42-7":{},"43-9":{},"119-6":{},"120-6":{},"121-6":{},"122-5":{},"123-5":{},"124-12":{},"125-7":{},"126-4":{},"127-6":{},"128-6":{},"129-6":{},"130-8":{},"131-8":{}},"name":{},"text":{},"component":{}}],["build",{"_index":60,"title":{"14-8":{},"14-9":{},"14-10":{},"14-11":{},"14-12":{},"14-13":{},"14-14":{},"55-8":{},"55-10":{},"72-8":{},"72-10":{},"101-7":{},"101-8":{},"101-9":{},"101-10":{},"101-11":{},"101-12":{},"101-13":{},"146-7":{},"146-9":{},"162-7":{},"162-9":{}},"name":{},"text":{"1":{},"12":{},"13":{},"14":{},"18":{},"32":{},"46":{},"50":{},"51":{},"55":{},"62":{},"66":{},"67":{},"72":{},"89":{},"98":{},"101":{},"102":{},"103":{},"118":{},"134":{},"138":{},"139":{},"141":{},"146":{},"152":{},"156":{},"157":{},"162":{},"165":{}},"component":{}}],["build.rb",{"_index":1155,"title":{},"name":{},"text":{"14":{},"55":{},"72":{},"101":{},"146":{},"162":{}},"component":{}}],["buildenv",{"_index":1313,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["buildroot",{"_index":24,"title":{"14-13":{},"46-16":{},"46-19":{},"62-16":{},"62-19":{},"101-12":{},"134-15":{},"134-18":{},"152-15":{},"152-18":{}},"name":{},"text":{"1":{},"13":{},"14":{},"18":{},"33":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"50":{},"53":{},"58":{},"59":{},"60":{},"62":{},"66":{},"69":{},"75":{},"89":{},"101":{},"102":{},"103":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"133":{},"134":{},"138":{},"143":{},"145":{},"149":{},"150":{},"152":{},"156":{},"159":{},"166":{}},"component":{}}],["built",{"_index":56,"title":{"57-4":{},"148-3":{}},"name":{},"text":{"1":{},"13":{},"14":{},"18":{},"55":{},"57":{},"59":{},"72":{},"89":{},"101":{},"102":{},"103":{},"146":{},"148":{},"149":{},"162":{}},"component":{}}],["bundl",{"_index":4144,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["burst",{"_index":1748,"title":{},"name":{},"text":{"22":{},"23":{},"28":{},"84":{},"85":{},"86":{},"87":{},"109":{},"111":{},"115":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["bus:]c",{"_index":2843,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["busi",{"_index":4470,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["busybox",{"_index":2415,"title":{"60-10":{},"150-9":{}},"name":{},"text":{"43":{},"57":{},"60":{},"75":{},"130":{},"148":{},"150":{},"166":{}},"component":{}}],["button",{"_index":4074,"title":{},"name":{},"text":{"54":{},"79":{},"144":{},"170":{}},"component":{}}],["byte",{"_index":276,"title":{},"name":{},"text":{"4":{},"15":{},"19":{},"22":{},"23":{},"28":{},"45":{},"46":{},"49":{},"50":{},"51":{},"53":{},"54":{},"55":{},"56":{},"58":{},"59":{},"60":{},"62":{},"66":{},"67":{},"69":{},"72":{},"73":{},"74":{},"79":{},"80":{},"81":{},"84":{},"86":{},"87":{},"90":{},"99":{},"105":{},"109":{},"111":{},"115":{},"131":{},"133":{},"134":{},"136":{},"138":{},"139":{},"143":{},"144":{},"145":{},"146":{},"147":{},"149":{},"150":{},"152":{},"156":{},"157":{},"159":{},"162":{},"163":{},"164":{},"165":{},"170":{},"171":{},"172":{},"175":{},"177":{},"178":{}},"component":{}}],["bytes/writ",{"_index":3442,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["bytes:0",{"_index":3299,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["bytes:16",{"_index":3338,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["c",{"_index":287,"title":{},"name":{},"text":{"4":{},"12":{},"14":{},"15":{},"19":{},"27":{},"45":{},"48":{},"49":{},"50":{},"53":{},"55":{},"59":{},"60":{},"65":{},"66":{},"69":{},"72":{},"75":{},"84":{},"90":{},"98":{},"99":{},"101":{},"105":{},"112":{},"133":{},"136":{},"137":{},"138":{},"143":{},"146":{},"149":{},"150":{},"154":{},"156":{},"159":{},"162":{},"166":{},"175":{}},"component":{}}],["c0",{"_index":5589,"title":{},"name":{},"text":{"65":{},"154":{}},"component":{}}],["c2",{"_index":652,"title":{},"name":{},"text":{"6":{},"7":{},"92":{},"94":{}},"component":{}}],["c34a",{"_index":3148,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["c613",{"_index":3083,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["c961fef8255d",{"_index":6695,"title":{},"name":{},"text":{"141":{}},"component":{}}],["cabl",{"_index":2785,"title":{},"name":{},"text":{"46":{},"54":{},"59":{},"62":{},"77":{},"79":{},"134":{},"141":{},"144":{},"149":{},"152":{},"167":{},"170":{}},"component":{}}],["cach",{"_index":4163,"title":{},"name":{},"text":{"55":{},"59":{},"72":{},"146":{},"149":{},"162":{}},"component":{}}],["cage",{"_index":5746,"title":{},"name":{},"text":{"70":{},"160":{}},"component":{}}],["calcul",{"_index":786,"title":{},"name":{},"text":{"10":{},"28":{},"45":{},"46":{},"48":{},"49":{},"50":{},"52":{},"53":{},"55":{},"58":{},"59":{},"60":{},"62":{},"64":{},"65":{},"66":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"75":{},"83":{},"97":{},"115":{},"133":{},"134":{},"136":{},"137":{},"138":{},"142":{},"143":{},"145":{},"146":{},"149":{},"150":{},"152":{},"154":{},"155":{},"156":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"166":{},"174":{}},"component":{}}],["calendar",{"_index":2392,"title":{},"name":{},"text":{"41":{},"42":{},"128":{},"129":{}},"component":{}}],["calibr",{"_index":4887,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["call",{"_index":186,"title":{},"name":{},"text":{"4":{},"7":{},"10":{},"12":{},"14":{},"29":{},"36":{},"46":{},"50":{},"51":{},"55":{},"59":{},"62":{},"66":{},"67":{},"72":{},"80":{},"85":{},"90":{},"92":{},"97":{},"98":{},"101":{},"117":{},"124":{},"134":{},"138":{},"139":{},"146":{},"149":{},"152":{},"156":{},"157":{},"162":{},"165":{},"171":{},"176":{}},"component":{}}],["can't",{"_index":3430,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["can0",{"_index":3277,"title":{},"name":{},"text":{"48":{},"64":{},"137":{},"155":{}},"component":{}}],["can0_a",{"_index":3847,"title":{},"name":{},"text":{"52":{},"68":{},"142":{},"158":{}},"component":{}}],["can0_b",{"_index":3859,"title":{},"name":{},"text":{"52":{},"68":{},"142":{},"158":{}},"component":{}}],["can1",{"_index":3851,"title":{},"name":{},"text":{"52":{},"68":{},"142":{},"158":{}},"component":{}}],["can@e081c000",{"_index":3278,"title":{},"name":{},"text":{"48":{},"64":{},"137":{},"155":{}},"component":{}}],["can_stbi",{"_index":3274,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["candump",{"_index":3282,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["cansend",{"_index":3283,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["can’t",{"_index":3771,"title":{},"name":{},"text":{"51":{},"67":{},"86":{},"139":{},"157":{},"177":{}},"component":{}}],["cap",{"_index":3545,"title":{},"name":{},"text":{"50":{},"52":{},"138":{},"142":{}},"component":{}}],["capabl",{"_index":707,"title":{},"name":{},"text":{"8":{},"10":{},"31":{},"34":{},"37":{},"46":{},"55":{},"62":{},"72":{},"85":{},"97":{},"119":{},"120":{},"121":{},"134":{},"146":{},"152":{},"162":{},"176":{}},"component":{}}],["capac",{"_index":2803,"title":{},"name":{},"text":{"46":{},"51":{},"62":{},"67":{},"74":{},"77":{},"134":{},"139":{},"152":{},"157":{},"164":{},"167":{}},"component":{}}],["captur",{"_index":2173,"title":{},"name":{},"text":{"30":{},"116":{}},"component":{}}],["card",{"_index":2380,"title":{},"name":{},"text":{"40":{},"46":{},"50":{},"52":{},"55":{},"59":{},"62":{},"66":{},"72":{},"127":{},"134":{},"138":{},"141":{},"142":{},"146":{},"149":{},"152":{},"156":{},"162":{}},"component":{}}],["card(v3.0",{"_index":3486,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["care",{"_index":2696,"title":{},"name":{},"text":{"46":{},"50":{},"52":{},"62":{},"66":{},"74":{},"134":{},"138":{},"142":{},"152":{},"156":{},"164":{}},"component":{}}],["carelink",{"_index":5163,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["carri",{"_index":727,"title":{},"name":{},"text":{"9":{},"96":{}},"component":{}}],["carrier",{"_index":1445,"title":{"61-6":{},"151-7":{}},"name":{},"text":{"15":{},"36":{},"48":{},"61":{},"99":{},"124":{},"137":{},"151":{}},"component":{}}],["carrier:0",{"_index":3296,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["carriersenseerror",{"_index":1465,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["case",{"_index":748,"title":{"46-39":{},"62-38":{},"134-38":{},"152-37":{}},"name":{},"text":{"9":{},"12":{},"14":{},"16":{},"26":{},"29":{},"32":{},"46":{},"47":{},"54":{},"55":{},"60":{},"62":{},"63":{},"72":{},"75":{},"79":{},"80":{},"84":{},"85":{},"86":{},"96":{},"98":{},"101":{},"104":{},"114":{},"117":{},"118":{},"134":{},"135":{},"144":{},"146":{},"150":{},"152":{},"153":{},"162":{},"166":{},"170":{},"171":{},"175":{},"176":{},"177":{}},"component":{}}],["casual",{"_index":6730,"title":{},"name":{},"text":{"165":{}},"component":{}}],["cat",{"_index":417,"title":{},"name":{},"text":{"4":{},"14":{},"23":{},"27":{},"29":{},"30":{},"45":{},"49":{},"50":{},"52":{},"58":{},"59":{},"60":{},"65":{},"66":{},"68":{},"70":{},"71":{},"74":{},"75":{},"90":{},"101":{},"111":{},"112":{},"116":{},"117":{},"133":{},"136":{},"138":{},"142":{},"145":{},"149":{},"150":{},"154":{},"156":{},"158":{},"160":{},"161":{},"164":{},"166":{}},"component":{}}],["caus",{"_index":1666,"title":{},"name":{},"text":{"16":{},"38":{},"46":{},"50":{},"55":{},"62":{},"66":{},"72":{},"74":{},"85":{},"104":{},"125":{},"134":{},"138":{},"146":{},"152":{},"156":{},"162":{},"164":{},"176":{}},"component":{}}],["cb",{"_index":1866,"title":{"28-5":{},"85-11":{},"115-4":{},"176-11":{}},"name":{},"text":{"26":{},"28":{},"43":{},"85":{},"114":{},"115":{},"130":{},"176":{}},"component":{}}],["cb:eb:29:43:74:12:54:96:43:e6:42:48:13:8f:5b",{"_index":4251,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["cbc",{"_index":2480,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["cc",{"_index":645,"title":{"7-6":{},"92-5":{}},"name":{},"text":{"6":{},"7":{},"74":{},"92":{},"94":{},"164":{}},"component":{}}],["ccach",{"_index":1044,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["cclk",{"_index":3271,"title":{},"name":{},"text":{"48":{},"64":{},"137":{},"155":{}},"component":{}}],["ccm",{"_index":576,"title":{"7-7":{},"92-6":{}},"name":{},"text":{"6":{},"7":{},"92":{},"94":{}},"component":{}}],["cd",{"_index":1110,"title":{},"name":{},"text":{"14":{},"50":{},"56":{},"57":{},"66":{},"101":{},"138":{},"141":{},"147":{},"148":{},"156":{}},"component":{}}],["cdc",{"_index":4574,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["cdc_acm",{"_index":4631,"title":{},"name":{},"text":{"57":{},"59":{},"73":{},"148":{},"149":{},"163":{}},"component":{}}],["cell",{"_index":3230,"title":{},"name":{},"text":{"47":{},"49":{},"52":{},"53":{},"55":{},"58":{},"63":{},"68":{},"69":{},"70":{},"72":{},"74":{},"135":{},"136":{},"142":{},"143":{},"145":{},"146":{},"153":{},"158":{},"159":{},"160":{},"162":{},"164":{}},"component":{}}],["cert",{"_index":4155,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["cert/dev.crt",{"_index":6757,"title":{},"name":{},"text":{"165":{}},"component":{}}],["cert_creat",{"_index":4141,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["certain",{"_index":1376,"title":{},"name":{},"text":{"15":{},"27":{},"46":{},"50":{},"55":{},"66":{},"99":{},"112":{},"134":{},"138":{},"146":{},"156":{}},"component":{}}],["certif",{"_index":2615,"title":{"55-21":{},"72-21":{},"146-20":{},"162-20":{}},"name":{},"text":{"46":{},"55":{},"62":{},"72":{},"134":{},"146":{},"152":{},"162":{}},"component":{}}],["certificate_vers",{"_index":4288,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["certtool",{"_index":4142,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["cf:8d:c7:8b:da:b8:c8:64:ae:f7:43:c1:94:ce:a6",{"_index":4252,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["cfb",{"_index":2478,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["cfb16",{"_index":2476,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["cfb32",{"_index":2477,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["cfb64",{"_index":2473,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["cfb8",{"_index":2475,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["cfg",{"_index":3273,"title":{},"name":{},"text":{"48":{},"64":{},"137":{},"155":{}},"component":{}}],["cfm",{"_index":567,"title":{"92":{},"7-1":{}},"name":{"7":{},"92":{}},"text":{"6":{},"7":{},"16":{},"92":{},"94":{},"104":{}},"component":{}}],["cfm_dmac",{"_index":1698,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["cfm_instanc",{"_index":1694,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["cfm_level",{"_index":1695,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["cfm_maid",{"_index":1700,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["cfm_mepid",{"_index":1696,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["cfm_peer_mepid",{"_index":1697,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["cfm_server",{"_index":704,"title":{},"name":{},"text":{"7":{},"92":{}},"component":{}}],["chain",{"_index":872,"title":{"55-24":{},"55-25":{},"72-24":{},"72-25":{},"84-12":{},"85-17":{},"146-23":{},"146-24":{},"162-23":{},"162-24":{},"175-11":{},"176-17":{}},"name":{},"text":{"12":{},"22":{},"23":{},"29":{},"43":{},"55":{},"72":{},"81":{},"82":{},"84":{},"85":{},"86":{},"87":{},"98":{},"109":{},"111":{},"117":{},"130":{},"146":{},"162":{},"172":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["chain_index",{"_index":6401,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["challeng",{"_index":4420,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["challenge.rb",{"_index":4425,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["challenge/respons",{"_index":4421,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["chan_id",{"_index":5576,"title":{},"name":{},"text":{"65":{},"154":{}},"component":{}}],["chang",{"_index":203,"title":{"14-20":{},"32-7":{},"43-7":{},"101-19":{},"118-6":{},"130-6":{}},"name":{},"text":{"4":{},"6":{},"7":{},"9":{},"12":{},"14":{},"15":{},"16":{},"18":{},"26":{},"27":{},"29":{},"31":{},"34":{},"36":{},"37":{},"38":{},"46":{},"48":{},"50":{},"52":{},"54":{},"55":{},"56":{},"57":{},"60":{},"62":{},"64":{},"66":{},"68":{},"70":{},"72":{},"74":{},"75":{},"79":{},"80":{},"81":{},"82":{},"84":{},"86":{},"87":{},"90":{},"92":{},"94":{},"96":{},"98":{},"99":{},"101":{},"103":{},"104":{},"112":{},"114":{},"117":{},"119":{},"120":{},"121":{},"124":{},"125":{},"134":{},"137":{},"138":{},"140":{},"142":{},"144":{},"146":{},"147":{},"148":{},"150":{},"152":{},"155":{},"156":{},"158":{},"160":{},"162":{},"164":{},"166":{},"170":{},"171":{},"172":{},"173":{},"175":{},"177":{},"178":{}},"component":{}}],["channel",{"_index":419,"title":{},"name":{},"text":{"4":{},"49":{},"53":{},"59":{},"65":{},"69":{},"71":{},"73":{},"90":{},"136":{},"143":{},"149":{},"154":{},"159":{},"161":{},"163":{}},"component":{}}],["chapter",{"_index":2694,"title":{},"name":{},"text":{"46":{},"55":{},"61":{},"62":{},"72":{},"77":{},"134":{},"146":{},"151":{},"152":{},"162":{},"167":{}},"component":{}}],["char",{"_index":3750,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["charact",{"_index":3779,"title":{},"name":{},"text":{"51":{},"57":{},"67":{},"139":{},"148":{},"157":{}},"component":{}}],["chardev",{"_index":3575,"title":{},"name":{},"text":{"50":{},"52":{},"59":{},"66":{},"138":{},"142":{},"149":{},"156":{}},"component":{}}],["check",{"_index":258,"title":{},"name":{},"text":{"4":{},"7":{},"14":{},"15":{},"19":{},"45":{},"46":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"58":{},"59":{},"60":{},"61":{},"62":{},"66":{},"67":{},"68":{},"69":{},"70":{},"72":{},"73":{},"74":{},"75":{},"77":{},"85":{},"90":{},"92":{},"99":{},"101":{},"105":{},"133":{},"134":{},"136":{},"137":{},"138":{},"139":{},"142":{},"143":{},"144":{},"145":{},"146":{},"147":{},"149":{},"150":{},"151":{},"152":{},"156":{},"157":{},"158":{},"159":{},"160":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"176":{}},"component":{}}],["check|set|complet",{"_index":2821,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["child",{"_index":5732,"title":{},"name":{},"text":{"70":{},"74":{},"85":{},"160":{},"164":{},"176":{}},"component":{}}],["childnod",{"_index":6662,"title":{},"name":{},"text":{"141":{}},"component":{}}],["chioc",{"_index":3536,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["chip",{"_index":1704,"title":{},"name":{},"text":{"17":{},"18":{},"32":{},"40":{},"46":{},"47":{},"50":{},"51":{},"52":{},"55":{},"61":{},"62":{},"63":{},"66":{},"67":{},"68":{},"72":{},"77":{},"80":{},"103":{},"106":{},"118":{},"127":{},"134":{},"135":{},"138":{},"139":{},"142":{},"146":{},"151":{},"152":{},"153":{},"156":{},"157":{},"158":{},"162":{},"167":{},"171":{}},"component":{}}],["chip_id",{"_index":2426,"title":{},"name":{},"text":{"43":{},"130":{}},"component":{}}],["chk_rc",{"_index":1680,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["chk_ro",{"_index":1679,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["chmod",{"_index":1288,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["choic",{"_index":4533,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["choos",{"_index":4075,"title":{},"name":{},"text":{"54":{},"79":{},"80":{},"85":{},"144":{},"170":{},"171":{},"176":{}},"component":{}}],["choosen",{"_index":4569,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["chosen",{"_index":2866,"title":{},"name":{},"text":{"46":{},"54":{},"55":{},"59":{},"62":{},"72":{},"73":{},"79":{},"85":{},"134":{},"144":{},"146":{},"149":{},"152":{},"162":{},"163":{},"170":{},"176":{}},"component":{}}],["chosen/bootarg",{"_index":4192,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["chrome",{"_index":2711,"title":{},"name":{},"text":{"46":{},"54":{},"62":{},"79":{},"134":{},"144":{},"152":{},"170":{}},"component":{}}],["ciphertext",{"_index":2496,"title":{},"name":{},"text":{"45":{},"133":{},"165":{}},"component":{}}],["circuit",{"_index":3216,"title":{},"name":{},"text":{"47":{},"49":{},"63":{},"65":{},"135":{},"136":{},"153":{},"154":{}},"component":{}}],["circumv",{"_index":6774,"title":{},"name":{},"text":{"165":{}},"component":{}}],["class",{"_index":1893,"title":{"85-4":{},"85-12":{},"176-4":{},"176-12":{}},"name":{},"text":{"26":{},"28":{},"55":{},"85":{},"114":{},"115":{},"146":{},"176":{}},"component":{}}],["class/misc",{"_index":4498,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["classid",{"_index":1894,"title":{},"name":{},"text":{"26":{},"114":{}},"component":{}}],["classif",{"_index":867,"title":{"177":{},"82-2":{},"86-1":{},"86-2":{},"86-3":{},"87-2":{},"87-3":{},"173-1":{},"177-1":{},"177-2":{},"178-1":{},"178-2":{}},"name":{},"text":{"12":{},"84":{},"86":{},"98":{},"175":{},"177":{}},"component":{}}],["classifi",{"_index":101,"title":{"9-2":{},"9-3":{},"9-4":{},"9-5":{},"9-6":{},"96-1":{},"96-2":{},"96-3":{},"96-4":{},"96-5":{}},"name":{},"text":{"2":{},"8":{},"9":{},"12":{},"26":{},"55":{},"72":{},"81":{},"82":{},"83":{},"84":{},"85":{},"86":{},"87":{},"88":{},"95":{},"96":{},"98":{},"114":{},"146":{},"162":{},"172":{},"173":{},"174":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["classless",{"_index":6439,"title":{"85-4":{},"176-4":{}},"name":{},"text":{"85":{},"176":{}},"component":{}}],["claus",{"_index":4104,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["clean",{"_index":4169,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["clear",{"_index":607,"title":{},"name":{},"text":{"6":{},"7":{},"12":{},"16":{},"92":{},"94":{},"98":{},"104":{}},"component":{}}],["cli",{"_index":3185,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["client",{"_index":557,"title":{"16-6":{},"46-10":{},"55-33":{},"62-10":{},"104-5":{},"134-9":{},"146-32":{},"152-9":{}},"name":{},"text":{"6":{},"16":{},"18":{},"46":{},"55":{},"59":{},"62":{},"70":{},"72":{},"94":{},"103":{},"104":{},"134":{},"146":{},"149":{},"152":{},"160":{},"162":{}},"component":{}}],["client(mic",{"_index":1651,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["client(mrc",{"_index":1648,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["clk",{"_index":3492,"title":{},"name":{},"text":{"50":{},"52":{},"66":{},"138":{},"142":{},"156":{}},"component":{}}],["clkmon",{"_index":5652,"title":{},"name":{},"text":{"68":{},"158":{}},"component":{}}],["clm",{"_index":6379,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["clock",{"_index":1942,"title":{},"name":{},"text":{"27":{},"33":{},"38":{},"45":{},"47":{},"48":{},"49":{},"50":{},"52":{},"53":{},"57":{},"58":{},"59":{},"60":{},"63":{},"64":{},"65":{},"66":{},"69":{},"70":{},"71":{},"73":{},"74":{},"75":{},"112":{},"122":{},"125":{},"131":{},"133":{},"135":{},"136":{},"137":{},"138":{},"142":{},"143":{},"145":{},"148":{},"149":{},"150":{},"153":{},"154":{},"155":{},"156":{},"159":{},"160":{},"161":{},"163":{},"164":{},"166":{}},"component":{}}],["clock(200mhz",{"_index":3412,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["clock(bc",{"_index":1931,"title":{"27-4":{},"112-3":{}},"name":{},"text":{},"component":{}}],["clock(oc",{"_index":1928,"title":{"27-3":{},"112-2":{}},"name":{},"text":{},"component":{}}],["clock(tc",{"_index":1934,"title":{"27-5":{},"112-4":{}},"name":{},"text":{},"component":{}}],["clock_realtim",{"_index":2020,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["clock_servo",{"_index":6582,"title":{},"name":{},"text":{"112":{}},"component":{}}],["clock_typ",{"_index":1979,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["clockid",{"_index":1812,"title":{},"name":{},"text":{"23":{},"86":{},"111":{},"177":{}},"component":{}}],["clocksourc",{"_index":4868,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["clone",{"_index":1286,"title":{},"name":{},"text":{"14":{},"55":{},"72":{},"101":{},"141":{},"146":{},"162":{}},"component":{}}],["close",{"_index":1658,"title":{},"name":{},"text":{"16":{},"23":{},"26":{},"52":{},"55":{},"68":{},"72":{},"85":{},"86":{},"104":{},"111":{},"114":{},"142":{},"146":{},"158":{},"162":{},"165":{},"176":{},"177":{}},"component":{}}],["clr",{"_index":917,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["clsact",{"_index":358,"title":{},"name":{},"text":{"4":{},"12":{},"22":{},"23":{},"81":{},"82":{},"84":{},"85":{},"86":{},"87":{},"90":{},"98":{},"109":{},"111":{},"172":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["cm",{"_index":2378,"title":{"141":{},"131-7":{},"141-4":{},"141-5":{},"141-8":{}},"name":{},"text":{"40":{},"127":{},"141":{}},"component":{}}],["cm4",{"_index":5973,"title":{},"name":{},"text":{"76":{},"141":{},"168":{}},"component":{}}],["cma",{"_index":4812,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["cmake",{"_index":1045,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["cmake_minimum_required(vers",{"_index":1261,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["cmd",{"_index":3491,"title":{},"name":{},"text":{"50":{},"52":{},"55":{},"66":{},"72":{},"138":{},"142":{},"146":{},"156":{},"162":{}},"component":{}}],["cnt",{"_index":915,"title":{},"name":{},"text":{"12":{},"46":{},"62":{},"98":{},"134":{},"152":{}},"component":{}}],["cobra",{"_index":6028,"title":{},"name":{},"text":{"78":{},"169":{}},"component":{}}],["code",{"_index":1148,"title":{},"name":{},"text":{"14":{},"46":{},"50":{},"51":{},"55":{},"56":{},"59":{},"62":{},"66":{},"67":{},"72":{},"101":{},"134":{},"138":{},"139":{},"146":{},"147":{},"149":{},"152":{},"156":{},"157":{},"162":{},"165":{}},"component":{}}],["code/function",{"_index":4124,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["coher",{"_index":4898,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["collect",{"_index":1173,"title":{},"name":{},"text":{"14":{},"15":{},"46":{},"62":{},"99":{},"101":{},"134":{},"152":{}},"component":{}}],["collisions:0",{"_index":3297,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["collsn",{"_index":1446,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["color",{"_index":743,"title":{},"name":{},"text":{"9":{},"96":{}},"component":{}}],["color)dpl",{"_index":145,"title":{},"name":{},"text":{"2":{},"88":{}},"component":{}}],["colour",{"_index":4883,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["column",{"_index":4360,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["com",{"_index":3189,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["combin",{"_index":352,"title":{},"name":{},"text":{"4":{},"12":{},"29":{},"46":{},"62":{},"76":{},"82":{},"84":{},"85":{},"86":{},"87":{},"90":{},"98":{},"117":{},"134":{},"141":{},"152":{},"168":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["combo",{"_index":6658,"title":{},"name":{},"text":{"141":{}},"component":{}}],["come",{"_index":6220,"title":{},"name":{},"text":{"80":{},"81":{},"86":{},"87":{},"112":{},"171":{},"172":{},"177":{},"178":{}},"component":{}}],["comit",{"_index":4407,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["command",{"_index":119,"title":{"6-3":{},"6-11":{},"84-6":{},"94-2":{},"94-10":{},"175-5":{}},"name":{},"text":{"2":{},"4":{},"6":{},"7":{},"8":{},"10":{},"12":{},"14":{},"15":{},"16":{},"22":{},"23":{},"26":{},"27":{},"28":{},"29":{},"38":{},"45":{},"46":{},"48":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"62":{},"66":{},"67":{},"68":{},"69":{},"72":{},"75":{},"79":{},"80":{},"81":{},"83":{},"84":{},"85":{},"86":{},"87":{},"88":{},"90":{},"92":{},"94":{},"95":{},"97":{},"98":{},"99":{},"101":{},"104":{},"109":{},"111":{},"112":{},"114":{},"115":{},"117":{},"125":{},"133":{},"134":{},"137":{},"138":{},"139":{},"142":{},"143":{},"144":{},"145":{},"146":{},"147":{},"148":{},"149":{},"150":{},"152":{},"156":{},"157":{},"158":{},"159":{},"162":{},"165":{},"166":{},"170":{},"171":{},"172":{},"174":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["commit",{"_index":4406,"title":{},"name":{},"text":{"55":{},"72":{},"80":{},"146":{},"162":{},"171":{}},"component":{}}],["common",{"_index":943,"title":{},"name":{},"text":{"12":{},"32":{},"46":{},"55":{},"62":{},"72":{},"74":{},"84":{},"98":{},"118":{},"134":{},"146":{},"152":{},"162":{},"164":{},"175":{}},"component":{}}],["commun",{"_index":252,"title":{},"name":{},"text":{"4":{},"10":{},"30":{},"47":{},"49":{},"55":{},"58":{},"59":{},"63":{},"65":{},"71":{},"72":{},"73":{},"90":{},"97":{},"116":{},"135":{},"136":{},"145":{},"146":{},"149":{},"153":{},"154":{},"161":{},"162":{},"163":{}},"component":{}}],["compaq",{"_index":4799,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["compar",{"_index":4136,"title":{},"name":{},"text":{"55":{},"61":{},"72":{},"80":{},"85":{},"86":{},"146":{},"151":{},"162":{},"171":{},"176":{},"177":{}},"component":{}}],["comparison",{"_index":2769,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"72":{},"134":{},"146":{},"152":{},"162":{}},"component":{}}],["compat",{"_index":2446,"title":{},"name":{},"text":{"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"56":{},"57":{},"58":{},"59":{},"60":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"73":{},"74":{},"75":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"142":{},"143":{},"145":{},"147":{},"148":{},"149":{},"150":{},"152":{},"153":{},"154":{},"155":{},"156":{},"157":{},"158":{},"159":{},"160":{},"161":{},"163":{},"164":{},"166":{}},"component":{}}],["compens",{"_index":3539,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["compil",{"_index":982,"title":{},"name":{},"text":{"13":{},"14":{},"18":{},"32":{},"46":{},"55":{},"62":{},"72":{},"101":{},"102":{},"103":{},"118":{},"134":{},"146":{},"152":{},"162":{},"165":{}},"component":{}}],["complet",{"_index":1327,"title":{},"name":{},"text":{"14":{},"32":{},"36":{},"46":{},"53":{},"54":{},"55":{},"62":{},"66":{},"69":{},"72":{},"79":{},"101":{},"118":{},"124":{},"134":{},"143":{},"144":{},"146":{},"152":{},"156":{},"159":{},"162":{},"170":{}},"component":{}}],["complex",{"_index":1714,"title":{},"name":{},"text":{"18":{},"55":{},"72":{},"85":{},"103":{},"146":{},"162":{},"176":{}},"component":{}}],["compliant",{"_index":3245,"title":{},"name":{},"text":{"48":{},"64":{},"77":{},"137":{},"155":{},"167":{}},"component":{}}],["complic",{"_index":1236,"title":{},"name":{},"text":{"14":{},"26":{},"55":{},"72":{},"101":{},"114":{},"146":{},"162":{}},"component":{}}],["compon",{"_index":2236,"title":{"33-2":{},"35-2":{},"36-2":{},"38-2":{},"39-2":{},"40-2":{},"41-2":{},"42-2":{},"43-2":{},"122-1":{},"123-1":{},"124-1":{},"125-1":{},"126-1":{},"127-1":{},"128-1":{},"129-1":{},"130-1":{},"131-1":{}},"name":{},"text":{"32":{},"33":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"46":{},"55":{},"62":{},"72":{},"80":{},"85":{},"118":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"134":{},"146":{},"152":{},"162":{},"171":{},"176":{}},"component":{}}],["compound",{"_index":827,"title":{"12-5":{},"98-4":{}},"name":{},"text":{"12":{},"98":{}},"component":{}}],["comprehens",{"_index":6446,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["compress",{"_index":1149,"title":{},"name":{},"text":{"14":{},"46":{},"55":{},"59":{},"62":{},"72":{},"73":{},"101":{},"134":{},"140":{},"146":{},"149":{},"152":{},"162":{},"163":{}},"component":{}}],["compris",{"_index":2589,"title":{},"name":{},"text":{"46":{},"61":{},"134":{},"151":{}},"component":{}}],["compromis",{"_index":1727,"title":{},"name":{},"text":{"18":{},"103":{}},"component":{}}],["comput",{"_index":48,"title":{"40-5":{},"43-8":{},"127-4":{},"130-7":{}},"name":{},"text":{"1":{},"61":{},"89":{},"141":{},"151":{}},"component":{}}],["concaten",{"_index":4423,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["concentr",{"_index":2690,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["concept",{"_index":1179,"title":{},"name":{},"text":{"14":{},"51":{},"55":{},"67":{},"72":{},"85":{},"101":{},"139":{},"146":{},"157":{},"162":{},"176":{}},"component":{}}],["condfig_mmc",{"_index":3488,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["condit",{"_index":612,"title":{},"name":{},"text":{"6":{},"14":{},"55":{},"72":{},"94":{},"101":{},"146":{},"162":{}},"component":{}}],["conf",{"_index":6759,"title":{},"name":{},"text":{"165":{}},"component":{}}],["confidenti",{"_index":4110,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["config",{"_index":535,"title":{"6-15":{},"14-20":{},"55-43":{},"72-35":{},"94-14":{},"101-19":{},"146-42":{},"162-34":{}},"name":{},"text":{"6":{},"7":{},"13":{},"14":{},"18":{},"45":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"78":{},"92":{},"94":{},"101":{},"102":{},"103":{},"133":{},"135":{},"136":{},"137":{},"138":{},"139":{},"140":{},"142":{},"143":{},"145":{},"146":{},"147":{},"148":{},"149":{},"150":{},"153":{},"154":{},"155":{},"156":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"166":{},"169":{}},"component":{}}],["config.txt",{"_index":6698,"title":{},"name":{},"text":{"141":{}},"component":{}}],["config_arm_psci",{"_index":4483,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["config_blk_dev_dm=i",{"_index":6816,"title":{},"name":{},"text":{"165":{}},"component":{}}],["config_can",{"_index":3247,"title":{},"name":{},"text":{"48":{},"64":{},"137":{},"155":{}},"component":{}}],["config_can_m_can",{"_index":3248,"title":{},"name":{},"text":{"48":{},"64":{},"137":{},"155":{}},"component":{}}],["config_can_m_can_platform",{"_index":3250,"title":{},"name":{},"text":{"48":{},"64":{},"137":{},"155":{}},"component":{}}],["config_crypto_a",{"_index":2443,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["config_crypto_dev_atmel_a",{"_index":2444,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["config_crypto_dev_atmel_sha",{"_index":2445,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["config_crypto_sha256",{"_index":4484,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["config_crypto_sha256=i",{"_index":6818,"title":{},"name":{},"text":{"165":{}},"component":{}}],["config_crypto_user_api_hash=i",{"_index":6819,"title":{},"name":{},"text":{"165":{}},"component":{}}],["config_crypto_user_api_skcipher=i",{"_index":6820,"title":{},"name":{},"text":{"165":{}},"component":{}}],["config_device_tree_includes=\"lan969x_signed.dtsi",{"_index":6742,"title":{},"name":{},"text":{"165":{}},"component":{}}],["config_dm_verity=i",{"_index":6817,"title":{},"name":{},"text":{"165":{}},"component":{}}],["config_dw_watchdog",{"_index":5329,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["config_eeprom_at24",{"_index":3344,"title":{},"name":{},"text":{"49":{},"65":{},"136":{},"154":{}},"component":{}}],["config_fit_signature=i",{"_index":6741,"title":{},"name":{},"text":{"165":{}},"component":{}}],["config_i2c_at91",{"_index":3342,"title":{},"name":{},"text":{"49":{},"65":{},"136":{},"154":{}},"component":{}}],["config_mchp_tfa_ctl",{"_index":4482,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["config_md=i",{"_index":6815,"title":{},"name":{},"text":{"165":{}},"component":{}}],["config_mfd_at91_usart",{"_index":4705,"title":{},"name":{},"text":{"59":{},"73":{},"149":{},"163":{}},"component":{}}],["config_mfd_atmel_flexcom",{"_index":3222,"title":{},"name":{},"text":{"47":{},"49":{},"63":{},"65":{},"135":{},"136":{},"153":{},"154":{}},"component":{}}],["config_mmc_sdhci",{"_index":3487,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["config_mmc_sdhci_of_at91",{"_index":3489,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["config_mtd",{"_index":3978,"title":{},"name":{},"text":{"53":{},"58":{},"69":{},"71":{},"143":{},"145":{},"159":{},"161":{}},"component":{}}],["config_mtd_spi_nand",{"_index":3980,"title":{},"name":{},"text":{"53":{},"58":{},"69":{},"71":{},"143":{},"145":{},"159":{},"161":{}},"component":{}}],["config_mtd_spi_nor",{"_index":3979,"title":{},"name":{},"text":{"53":{},"58":{},"69":{},"71":{},"143":{},"145":{},"159":{},"161":{}},"component":{}}],["config_nvmem_microchip_otp",{"_index":3703,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["config_nvmem_sysf",{"_index":3705,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["config_pend",{"_index":1420,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["config_pinctrl_microchip_sgpio",{"_index":5729,"title":{},"name":{},"text":{"70":{},"160":{}},"component":{}}],["config_pinctrl_ocelot",{"_index":3819,"title":{},"name":{},"text":{"52":{},"68":{},"142":{},"158":{}},"component":{}}],["config_spi_atmel",{"_index":4639,"title":{},"name":{},"text":{"58":{},"71":{},"145":{},"161":{}},"component":{}}],["config_spi_atmel_quadspi",{"_index":3977,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["config_spi_spidev",{"_index":4675,"title":{},"name":{},"text":{"58":{},"145":{}},"component":{}}],["config_u_serial_consol",{"_index":4577,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["config_usb_atmel_usba",{"_index":4568,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["config_usb_configf",{"_index":4572,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["config_usb_dwc3",{"_index":5883,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["config_usb_dwc3_ulpi",{"_index":5884,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["config_usb_g_seri",{"_index":4571,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["config_usb_gadget",{"_index":4567,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["configf",{"_index":4566,"title":{"57-5":{},"57-11":{},"148-4":{},"148-10":{}},"name":{},"text":{"57":{},"148":{}},"component":{}}],["configs/c.1",{"_index":4605,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["configs/c.1/maxpow",{"_index":4609,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["configs/c.1/strings/0x409",{"_index":4606,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["configs/c.1/strings/0x409/configur",{"_index":4607,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["configur",{"_index":76,"title":{"90":{},"2-2":{},"4-1":{},"6-17":{},"6-18":{},"7-4":{},"7-6":{},"7-9":{},"12-8":{},"15-9":{},"27-10":{},"45-3":{},"45-4":{},"46-4":{},"46-34":{},"47-3":{},"47-4":{},"48-3":{},"48-4":{},"49-3":{},"49-4":{},"50-3":{},"50-4":{},"51-3":{},"51-4":{},"52-3":{},"52-4":{},"52-10":{},"53-3":{},"53-4":{},"55-14":{},"56-3":{},"56-4":{},"57-3":{},"57-7":{},"58-3":{},"58-4":{},"59-3":{},"59-4":{},"60-3":{},"60-4":{},"62-4":{},"62-34":{},"63-3":{},"63-4":{},"64-3":{},"64-4":{},"65-3":{},"65-4":{},"66-3":{},"66-4":{},"67-3":{},"67-4":{},"68-3":{},"68-4":{},"68-9":{},"68-10":{},"69-3":{},"69-4":{},"70-3":{},"70-4":{},"71-3":{},"71-4":{},"72-14":{},"73-3":{},"73-4":{},"74-3":{},"74-4":{},"75-3":{},"75-4":{},"88-1":{},"92-3":{},"92-5":{},"92-8":{},"94-16":{},"94-17":{},"98-7":{},"99-8":{},"112-12":{},"133-2":{},"133-3":{},"134-3":{},"134-33":{},"135-2":{},"135-3":{},"136-2":{},"136-3":{},"137-2":{},"137-3":{},"138-2":{},"138-3":{},"139-2":{},"139-3":{},"141-2":{},"141-3":{},"142-2":{},"142-3":{},"142-9":{},"143-2":{},"143-3":{},"145-2":{},"145-3":{},"146-13":{},"147-2":{},"147-3":{},"148-2":{},"148-6":{},"149-2":{},"149-3":{},"150-2":{},"150-3":{},"152-3":{},"152-33":{},"153-2":{},"153-3":{},"154-2":{},"154-3":{},"155-2":{},"155-3":{},"156-2":{},"156-3":{},"157-2":{},"157-3":{},"158-2":{},"158-3":{},"158-8":{},"158-9":{},"159-2":{},"159-3":{},"160-2":{},"160-3":{},"161-2":{},"161-3":{},"162-13":{},"163-2":{},"163-3":{},"164-2":{},"164-3":{},"165-5":{},"166-2":{},"166-3":{}},"name":{},"text":{"2":{},"4":{},"6":{},"7":{},"8":{},"9":{},"10":{},"12":{},"13":{},"14":{},"15":{},"16":{},"18":{},"22":{},"23":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"55":{},"57":{},"58":{},"59":{},"60":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"80":{},"81":{},"82":{},"83":{},"84":{},"85":{},"86":{},"87":{},"88":{},"90":{},"92":{},"94":{},"95":{},"96":{},"97":{},"98":{},"99":{},"101":{},"102":{},"103":{},"104":{},"109":{},"111":{},"112":{},"114":{},"115":{},"116":{},"117":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"128":{},"129":{},"130":{},"131":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"140":{},"141":{},"142":{},"143":{},"145":{},"146":{},"148":{},"149":{},"150":{},"152":{},"153":{},"154":{},"155":{},"156":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"171":{},"172":{},"173":{},"174":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["confirm",{"_index":2436,"title":{"45-10":{},"48-8":{},"49-8":{},"50-8":{},"52-8":{},"53-8":{},"58-8":{},"59-7":{},"60-8":{},"65-8":{},"66-8":{},"68-8":{},"69-8":{},"70-8":{},"73-8":{},"75-8":{},"133-9":{},"136-7":{},"137-7":{},"138-7":{},"142-7":{},"143-7":{},"145-7":{},"149-6":{},"150-7":{},"154-7":{},"156-7":{},"158-7":{},"159-7":{},"160-7":{},"163-7":{},"166-7":{}},"name":{},"text":{"49":{},"50":{},"51":{},"53":{},"55":{},"58":{},"66":{},"67":{},"69":{},"72":{},"79":{},"136":{},"138":{},"139":{},"143":{},"145":{},"146":{},"156":{},"157":{},"159":{},"162":{},"170":{}},"component":{}}],["confus",{"_index":5580,"title":{},"name":{},"text":{"65":{},"154":{}},"component":{}}],["congest",{"_index":742,"title":{},"name":{},"text":{"9":{},"96":{}},"component":{}}],["connect",{"_index":388,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"12":{},"15":{},"17":{},"36":{},"43":{},"46":{},"49":{},"54":{},"55":{},"58":{},"59":{},"62":{},"65":{},"71":{},"72":{},"73":{},"77":{},"79":{},"85":{},"87":{},"90":{},"92":{},"94":{},"98":{},"99":{},"106":{},"124":{},"130":{},"134":{},"136":{},"144":{},"145":{},"146":{},"149":{},"152":{},"154":{},"161":{},"162":{},"163":{},"167":{},"170":{},"176":{},"178":{}},"component":{}}],["connector",{"_index":2307,"title":{},"name":{},"text":{"36":{},"61":{},"124":{},"141":{},"151":{}},"component":{}}],["consequ",{"_index":112,"title":{},"name":{},"text":{"2":{},"84":{},"88":{},"175":{}},"component":{}}],["consequenti",{"_index":4465,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["consid",{"_index":1337,"title":{},"name":{},"text":{"15":{},"19":{},"31":{},"33":{},"34":{},"35":{},"37":{},"46":{},"50":{},"55":{},"62":{},"66":{},"72":{},"80":{},"99":{},"105":{},"119":{},"120":{},"121":{},"122":{},"123":{},"134":{},"138":{},"146":{},"152":{},"156":{},"162":{},"171":{}},"component":{}}],["consist",{"_index":321,"title":{},"name":{},"text":{"4":{},"12":{},"15":{},"55":{},"72":{},"77":{},"80":{},"83":{},"85":{},"90":{},"98":{},"99":{},"146":{},"162":{},"167":{},"171":{},"174":{},"176":{}},"component":{}}],["consol",{"_index":2686,"title":{"57-6":{},"59-9":{},"73-10":{},"79-4":{},"141-6":{},"148-5":{},"149-8":{},"163-9":{},"170-3":{}},"name":{},"text":{"46":{},"51":{},"54":{},"55":{},"57":{},"59":{},"62":{},"67":{},"72":{},"73":{},"79":{},"134":{},"139":{},"141":{},"144":{},"146":{},"148":{},"149":{},"152":{},"157":{},"162":{},"163":{},"170":{}},"component":{}}],["console=${consol",{"_index":2929,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["console=ttyat0,115200",{"_index":5612,"title":{},"name":{},"text":{"66":{},"72":{},"156":{},"162":{}},"component":{}}],["console=ttyat0,115200n8",{"_index":5518,"title":{},"name":{},"text":{"62":{},"73":{},"152":{},"163":{}},"component":{}}],["console=ttygs0,115200",{"_index":4578,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["console=ttys0,115200",{"_index":4193,"title":{},"name":{},"text":{"55":{},"146":{}},"component":{}}],["console=ttys0,115200n8",{"_index":3004,"title":{},"name":{},"text":{"46":{},"80":{},"134":{},"171":{}},"component":{}}],["console=ttys1,115200",{"_index":4719,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["consult",{"_index":736,"title":{},"name":{},"text":{"9":{},"29":{},"84":{},"85":{},"96":{},"117":{},"141":{},"175":{},"176":{}},"component":{}}],["consum",{"_index":5304,"title":{},"name":{},"text":{"59":{},"85":{},"149":{},"176":{}},"component":{}}],["cont",{"_index":3743,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["cont:1",{"_index":3739,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["contain",{"_index":178,"title":{},"name":{},"text":{"4":{},"8":{},"10":{},"12":{},"14":{},"22":{},"46":{},"50":{},"54":{},"55":{},"56":{},"62":{},"66":{},"72":{},"79":{},"80":{},"84":{},"85":{},"90":{},"95":{},"97":{},"98":{},"101":{},"109":{},"134":{},"138":{},"140":{},"141":{},"144":{},"146":{},"147":{},"152":{},"156":{},"162":{},"165":{},"170":{},"171":{},"175":{},"176":{}},"component":{}}],["content",{"_index":339,"title":{"55-12":{},"72-12":{},"146-11":{},"162-11":{}},"name":{},"text":{"4":{},"13":{},"14":{},"18":{},"36":{},"46":{},"50":{},"51":{},"55":{},"62":{},"65":{},"66":{},"67":{},"72":{},"80":{},"84":{},"90":{},"101":{},"102":{},"103":{},"124":{},"134":{},"138":{},"139":{},"141":{},"146":{},"152":{},"154":{},"156":{},"157":{},"162":{},"171":{},"175":{}},"component":{}}],["context",{"_index":2708,"title":{},"name":{},"text":{"46":{},"56":{},"62":{},"85":{},"134":{},"147":{},"152":{},"165":{},"176":{}},"component":{}}],["continu",{"_index":681,"title":{},"name":{},"text":{"7":{},"28":{},"38":{},"49":{},"51":{},"55":{},"65":{},"67":{},"72":{},"74":{},"80":{},"92":{},"115":{},"125":{},"136":{},"139":{},"146":{},"154":{},"157":{},"162":{},"164":{},"171":{}},"component":{}}],["contract",{"_index":4473,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["contributor",{"_index":4456,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["control",{"_index":351,"title":{"6-6":{},"6-18":{},"15-7":{},"15-8":{},"56-6":{},"68-9":{},"94-5":{},"94-17":{},"99-6":{},"99-7":{},"147-5":{},"158-8":{}},"name":{},"text":{"4":{},"6":{},"7":{},"12":{},"15":{},"17":{},"26":{},"27":{},"30":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"55":{},"56":{},"57":{},"58":{},"59":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"80":{},"81":{},"82":{},"84":{},"85":{},"87":{},"90":{},"92":{},"94":{},"98":{},"99":{},"106":{},"112":{},"114":{},"116":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"141":{},"142":{},"145":{},"146":{},"147":{},"148":{},"149":{},"152":{},"153":{},"154":{},"155":{},"156":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"171":{},"172":{},"173":{},"175":{},"176":{},"178":{}},"component":{}}],["convent",{"_index":6461,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["convers",{"_index":447,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["convert",{"_index":3139,"title":{},"name":{},"text":{"46":{},"59":{},"62":{},"134":{},"141":{},"149":{},"152":{}},"component":{}}],["cookbook",{"_index":514,"title":{"93":{},"5-1":{}},"name":{},"text":{},"component":{}}],["cookbook_exampl",{"_index":515,"title":{},"name":{"5":{},"93":{}},"text":{},"component":{}}],["coordin",{"_index":3195,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"72":{},"134":{},"146":{},"152":{},"162":{}},"component":{}}],["copi",{"_index":347,"title":{},"name":{},"text":{"4":{},"14":{},"46":{},"53":{},"54":{},"55":{},"58":{},"62":{},"69":{},"72":{},"74":{},"79":{},"86":{},"87":{},"90":{},"101":{},"134":{},"143":{},"144":{},"145":{},"146":{},"152":{},"159":{},"162":{},"164":{},"170":{},"177":{},"178":{}},"component":{}}],["copied/clon",{"_index":4303,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["copper",{"_index":2395,"title":{},"name":{},"text":{"41":{},"42":{},"128":{},"129":{}},"component":{}}],["copyright",{"_index":1137,"title":{},"name":{},"text":{"14":{},"55":{},"59":{},"72":{},"101":{},"146":{},"149":{},"162":{}},"component":{}}],["copyright(c",{"_index":5194,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["core",{"_index":2689,"title":{},"name":{},"text":{"46":{},"52":{},"55":{},"59":{},"62":{},"68":{},"70":{},"72":{},"73":{},"75":{},"80":{},"134":{},"142":{},"146":{},"149":{},"152":{},"158":{},"160":{},"162":{},"163":{},"166":{},"171":{}},"component":{}}],["corespond",{"_index":3726,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["correct",{"_index":1318,"title":{},"name":{},"text":{"14":{},"43":{},"46":{},"54":{},"55":{},"62":{},"72":{},"79":{},"80":{},"101":{},"130":{},"134":{},"144":{},"146":{},"152":{},"162":{},"170":{},"171":{}},"component":{}}],["correctli",{"_index":5642,"title":{},"name":{},"text":{"67":{},"79":{},"157":{},"170":{}},"component":{}}],["correspond",{"_index":1164,"title":{},"name":{},"text":{"14":{},"23":{},"26":{},"28":{},"46":{},"49":{},"50":{},"52":{},"53":{},"55":{},"58":{},"59":{},"62":{},"65":{},"66":{},"68":{},"69":{},"71":{},"72":{},"73":{},"83":{},"84":{},"101":{},"111":{},"114":{},"115":{},"134":{},"136":{},"138":{},"142":{},"143":{},"145":{},"146":{},"149":{},"152":{},"154":{},"156":{},"158":{},"159":{},"161":{},"162":{},"163":{},"174":{},"175":{}},"component":{}}],["correspondingli",{"_index":2148,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["cortex_a8",{"_index":1131,"title":{},"name":{},"text":{"14":{},"32":{},"46":{},"101":{},"118":{},"134":{}},"component":{}}],["cost",{"_index":250,"title":{},"name":{},"text":{"4":{},"15":{},"90":{},"99":{}},"component":{}}],["count",{"_index":437,"title":{},"name":{},"text":{"4":{},"22":{},"46":{},"62":{},"80":{},"81":{},"86":{},"87":{},"90":{},"109":{},"134":{},"152":{},"171":{},"172":{},"177":{},"178":{}},"component":{}}],["count=1",{"_index":3589,"title":{},"name":{},"text":{"50":{},"56":{},"58":{},"66":{},"138":{},"145":{},"147":{},"156":{}},"component":{}}],["counter",{"_index":916,"title":{"55-17":{},"72-17":{},"146-16":{},"162-16":{}},"name":{},"text":{"12":{},"15":{},"23":{},"29":{},"31":{},"33":{},"34":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"51":{},"55":{},"67":{},"72":{},"81":{},"84":{},"98":{},"99":{},"111":{},"117":{},"119":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"139":{},"146":{},"157":{},"162":{},"172":{},"175":{}},"component":{}}],["cover",{"_index":93,"title":{},"name":{},"text":{"2":{},"31":{},"33":{},"34":{},"35":{},"36":{},"37":{},"46":{},"55":{},"62":{},"72":{},"85":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"134":{},"146":{},"152":{},"162":{},"176":{}},"component":{}}],["cp15",{"_index":4864,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["cpio",{"_index":1048,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["cpu",{"_index":40,"title":{"141":{},"40-5":{},"43-8":{},"127-4":{},"130-7":{}},"name":{},"text":{"1":{},"4":{},"15":{},"19":{},"31":{},"32":{},"34":{},"40":{},"45":{},"46":{},"48":{},"49":{},"50":{},"52":{},"53":{},"55":{},"58":{},"59":{},"60":{},"61":{},"62":{},"64":{},"65":{},"66":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"77":{},"80":{},"84":{},"85":{},"87":{},"89":{},"90":{},"99":{},"105":{},"118":{},"119":{},"121":{},"127":{},"131":{},"133":{},"134":{},"136":{},"137":{},"138":{},"141":{},"142":{},"143":{},"145":{},"146":{},"149":{},"150":{},"151":{},"152":{},"154":{},"155":{},"156":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"166":{},"167":{},"171":{},"175":{},"176":{},"178":{}},"component":{}}],["cpu(",{"_index":4920,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["cpu0",{"_index":4900,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["cpu_capac",{"_index":4901,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["cr=10c5387d",{"_index":4806,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["creat",{"_index":185,"title":{"6-4":{},"7-3":{},"45-10":{},"48-8":{},"49-8":{},"50-8":{},"52-8":{},"53-8":{},"58-8":{},"59-7":{},"60-8":{},"65-8":{},"66-8":{},"68-8":{},"69-8":{},"70-8":{},"73-8":{},"75-8":{},"92-2":{},"94-3":{},"133-9":{},"136-7":{},"137-7":{},"138-7":{},"142-7":{},"143-7":{},"145-7":{},"149-6":{},"150-7":{},"154-7":{},"156-7":{},"158-7":{},"159-7":{},"160-7":{},"163-7":{},"166-7":{}},"name":{},"text":{"4":{},"6":{},"7":{},"9":{},"12":{},"14":{},"16":{},"22":{},"23":{},"26":{},"28":{},"29":{},"46":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"57":{},"58":{},"59":{},"61":{},"62":{},"66":{},"67":{},"68":{},"69":{},"72":{},"73":{},"74":{},"77":{},"79":{},"80":{},"84":{},"85":{},"90":{},"92":{},"94":{},"96":{},"98":{},"101":{},"104":{},"109":{},"111":{},"114":{},"115":{},"117":{},"134":{},"136":{},"137":{},"138":{},"139":{},"141":{},"142":{},"143":{},"144":{},"145":{},"146":{},"148":{},"149":{},"151":{},"152":{},"156":{},"157":{},"158":{},"159":{},"162":{},"163":{},"164":{},"165":{},"167":{},"170":{},"171":{},"175":{},"176":{}},"component":{}}],["create_key",{"_index":4172,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["creating/delet",{"_index":671,"title":{},"name":{},"text":{"7":{},"92":{}},"component":{}}],["creation",{"_index":6469,"title":{},"name":{},"text":{"85":{},"165":{},"176":{}},"component":{}}],["credit",{"_index":2032,"title":{},"name":{},"text":{"28":{},"43":{},"73":{},"85":{},"115":{},"130":{},"163":{},"176":{}},"component":{}}],["critic",{"_index":759,"title":{},"name":{},"text":{"10":{},"97":{}},"component":{}}],["crng_init=0",{"_index":4862,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["cross",{"_index":981,"title":{},"name":{},"text":{"13":{},"14":{},"18":{},"101":{},"102":{},"103":{}},"component":{}}],["cruzer",{"_index":5910,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["crw",{"_index":3555,"title":{},"name":{},"text":{"50":{},"58":{},"59":{},"60":{},"66":{},"138":{},"145":{},"149":{},"150":{},"156":{}},"component":{}}],["crypt",{"_index":6789,"title":{},"name":{},"text":{"165":{}},"component":{}}],["crypto",{"_index":2430,"title":{"45":{},"133":{},"45-1":{}},"name":{},"text":{"45":{},"133":{},"165":{}},"component":{}}],["crypto@e004c000",{"_index":2461,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["crypto@e006c000",{"_index":2462,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["cryptodev",{"_index":2482,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["cryptodev.ko",{"_index":2485,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["cryptograph",{"_index":2437,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["cryptsetup",{"_index":6787,"title":{},"name":{},"text":{"165":{}},"component":{}}],["crystal",{"_index":4748,"title":{},"name":{},"text":{"59":{},"60":{},"149":{},"150":{}},"component":{}}],["cs",{"_index":904,"title":{},"name":{},"text":{"12":{},"47":{},"58":{},"63":{},"71":{},"73":{},"98":{},"135":{},"145":{},"153":{},"161":{},"163":{}},"component":{}}],["cs0",{"_index":3218,"title":{},"name":{},"text":{"47":{},"58":{},"63":{},"71":{},"135":{},"145":{},"153":{},"161":{}},"component":{}}],["cs1",{"_index":3219,"title":{},"name":{},"text":{"47":{},"58":{},"63":{},"71":{},"135":{},"145":{},"153":{},"161":{}},"component":{}}],["cs_id",{"_index":905,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["csr",{"_index":6095,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["cs|msa|msf|ms|iflow|vlan",{"_index":902,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["ct",{"_index":3220,"title":{},"name":{},"text":{"47":{},"59":{},"63":{},"73":{},"135":{},"149":{},"153":{},"163":{}},"component":{}}],["ctag",{"_index":6404,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["ctl",{"_index":4500,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["ctr",{"_index":2474,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["ctrl",{"_index":1494,"title":{},"name":{},"text":{"15":{},"60":{},"75":{},"99":{},"150":{},"166":{}},"component":{}}],["cu",{"_index":2245,"title":{"33-5":{},"122-4":{}},"name":{},"text":{},"component":{}}],["current",{"_index":309,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"9":{},"10":{},"12":{},"14":{},"16":{},"23":{},"27":{},"28":{},"29":{},"31":{},"33":{},"34":{},"35":{},"37":{},"38":{},"41":{},"42":{},"46":{},"62":{},"68":{},"72":{},"74":{},"80":{},"81":{},"82":{},"84":{},"85":{},"86":{},"87":{},"90":{},"92":{},"94":{},"96":{},"97":{},"98":{},"101":{},"104":{},"111":{},"112":{},"115":{},"117":{},"119":{},"120":{},"121":{},"122":{},"123":{},"125":{},"128":{},"129":{},"134":{},"152":{},"158":{},"162":{},"164":{},"171":{},"172":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["current_data_set",{"_index":2013,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["curs",{"_index":1046,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["curv",{"_index":4264,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["custom",{"_index":1009,"title":{"14-19":{},"101-18":{}},"name":{},"text":{"14":{},"38":{},"46":{},"55":{},"62":{},"72":{},"87":{},"101":{},"125":{},"134":{},"146":{},"152":{},"162":{},"178":{}},"component":{}}],["cvlan_ethtyp",{"_index":6417,"title":{},"name":{},"text":{"84":{},"86":{},"175":{},"177":{}},"component":{}}],["cvlan_id",{"_index":6414,"title":{},"name":{},"text":{"84":{},"86":{},"175":{},"177":{}},"component":{}}],["cvlan_prio",{"_index":6416,"title":{},"name":{},"text":{"84":{},"86":{},"175":{},"177":{}},"component":{}}],["cycl",{"_index":1801,"title":{},"name":{},"text":{"23":{},"26":{},"46":{},"62":{},"85":{},"86":{},"111":{},"114":{},"134":{},"152":{},"176":{},"177":{}},"component":{}}],["cyclic",{"_index":1899,"title":{},"name":{},"text":{"26":{},"85":{},"114":{},"176":{}},"component":{}}],["cylind",{"_index":3599,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["d",{"_index":1388,"title":{},"name":{},"text":{"15":{},"49":{},"51":{},"55":{},"65":{},"67":{},"72":{},"80":{},"99":{},"136":{},"139":{},"146":{},"154":{},"157":{},"162":{},"171":{}},"component":{}}],["d0",{"_index":3493,"title":{},"name":{},"text":{"50":{},"52":{},"65":{},"66":{},"70":{},"138":{},"142":{},"154":{},"156":{},"160":{}},"component":{}}],["d1",{"_index":3494,"title":{},"name":{},"text":{"50":{},"52":{},"66":{},"70":{},"138":{},"142":{},"156":{},"160":{}},"component":{}}],["d165",{"_index":6692,"title":{},"name":{},"text":{"141":{}},"component":{}}],["d2",{"_index":3495,"title":{},"name":{},"text":{"50":{},"52":{},"66":{},"138":{},"142":{},"156":{}},"component":{}}],["d22196",{"_index":4827,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["d3",{"_index":3496,"title":{},"name":{},"text":{"50":{},"52":{},"66":{},"138":{},"142":{},"156":{}},"component":{}}],["d3ebd9b3224f",{"_index":3093,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["d4",{"_index":3501,"title":{},"name":{},"text":{"50":{},"52":{},"66":{},"138":{},"142":{},"156":{}},"component":{}}],["d5",{"_index":3502,"title":{},"name":{},"text":{"50":{},"52":{},"66":{},"138":{},"142":{},"156":{}},"component":{}}],["d6",{"_index":3503,"title":{},"name":{},"text":{"50":{},"52":{},"66":{},"138":{},"142":{},"156":{}},"component":{}}],["d7",{"_index":3504,"title":{},"name":{},"text":{"50":{},"52":{},"66":{},"138":{},"142":{},"156":{}},"component":{}}],["daemon",{"_index":481,"title":{},"name":{},"text":{"4":{},"10":{},"27":{},"57":{},"60":{},"74":{},"75":{},"90":{},"97":{},"112":{},"148":{},"150":{},"164":{},"166":{}},"component":{}}],["daemon.info",{"_index":5374,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["damag",{"_index":4466,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["data",{"_index":9,"title":{},"name":{},"text":{"1":{},"4":{},"15":{},"19":{},"28":{},"29":{},"46":{},"48":{},"49":{},"51":{},"54":{},"55":{},"56":{},"58":{},"59":{},"62":{},"64":{},"66":{},"67":{},"69":{},"72":{},"73":{},"74":{},"80":{},"89":{},"90":{},"99":{},"105":{},"115":{},"117":{},"134":{},"136":{},"137":{},"139":{},"140":{},"144":{},"145":{},"146":{},"147":{},"149":{},"152":{},"155":{},"156":{},"157":{},"159":{},"162":{},"163":{},"164":{},"165":{},"171":{}},"component":{}}],["data/command",{"_index":3537,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["datasheet",{"_index":737,"title":{},"name":{},"text":{"9":{},"29":{},"36":{},"53":{},"69":{},"84":{},"96":{},"117":{},"124":{},"143":{},"159":{},"175":{}},"component":{}}],["date",{"_index":2191,"title":{},"name":{},"text":{"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"46":{},"62":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"134":{},"152":{}},"component":{}}],["dbb",{"_index":2412,"title":{},"name":{},"text":{"43":{},"130":{}},"component":{}}],["dblatex",{"_index":1049,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["dc",{"_index":5428,"title":{},"name":{},"text":{"61":{},"151":{}},"component":{}}],["dd",{"_index":3171,"title":{},"name":{},"text":{"46":{},"50":{},"56":{},"58":{},"59":{},"62":{},"66":{},"134":{},"138":{},"141":{},"145":{},"147":{},"149":{},"152":{},"156":{}},"component":{}}],["ddr",{"_index":2354,"title":{},"name":{},"text":{"38":{},"46":{},"55":{},"61":{},"62":{},"72":{},"77":{},"80":{},"125":{},"134":{},"146":{},"151":{},"152":{},"162":{},"167":{},"171":{}},"component":{}}],["ddr3l",{"_index":5419,"title":{},"name":{},"text":{"61":{},"151":{}},"component":{}}],["ddr50",{"_index":3649,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["de",{"_index":2441,"title":{},"name":{},"text":{"45":{},"46":{},"62":{},"133":{},"134":{},"152":{}},"component":{}}],["deadlin",{"_index":5023,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["deal",{"_index":5404,"title":{},"name":{},"text":{"61":{},"151":{}},"component":{}}],["debrick",{"_index":2570,"title":{"46-40":{},"62-39":{},"134-39":{},"152-38":{}},"name":{},"text":{},"component":{}}],["debug",{"_index":349,"title":{"29-2":{},"30-2":{},"116-2":{},"117-1":{}},"name":{},"text":{"4":{},"23":{},"30":{},"32":{},"46":{},"50":{},"55":{},"62":{},"66":{},"72":{},"90":{},"111":{},"116":{},"118":{},"134":{},"138":{},"146":{},"152":{},"156":{},"162":{},"165":{}},"component":{}}],["debug/develop",{"_index":4273,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["debugf",{"_index":819,"title":{},"name":{},"text":{"10":{},"29":{},"30":{},"50":{},"52":{},"59":{},"66":{},"97":{},"116":{},"117":{},"138":{},"142":{},"149":{},"156":{}},"component":{}}],["dec",{"_index":3713,"title":{},"name":{},"text":{"51":{},"67":{},"72":{},"74":{},"139":{},"157":{},"162":{},"164":{}},"component":{}}],["decid",{"_index":740,"title":{},"name":{},"text":{"9":{},"50":{},"55":{},"66":{},"80":{},"85":{},"96":{},"138":{},"146":{},"156":{},"171":{},"176":{}},"component":{}}],["decim",{"_index":3769,"title":{},"name":{},"text":{"51":{},"139":{}},"component":{}}],["decreas",{"_index":2777,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["decrypt",{"_index":4133,"title":{},"name":{},"text":{"55":{},"56":{},"72":{},"146":{},"147":{},"162":{}},"component":{}}],["dedic",{"_index":4122,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["def0",{"_index":5745,"title":{},"name":{},"text":{"70":{},"160":{}},"component":{}}],["default",{"_index":75,"title":{"2-2":{},"27-10":{},"46-33":{},"62-33":{},"79-4":{},"88-1":{},"112-12":{},"134-32":{},"152-32":{},"170-3":{}},"name":{},"text":{"2":{},"4":{},"6":{},"9":{},"10":{},"12":{},"14":{},"15":{},"16":{},"19":{},"26":{},"27":{},"29":{},"31":{},"34":{},"38":{},"45":{},"46":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"62":{},"64":{},"65":{},"66":{},"67":{},"68":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"80":{},"81":{},"83":{},"84":{},"85":{},"86":{},"88":{},"90":{},"94":{},"96":{},"97":{},"98":{},"99":{},"101":{},"104":{},"105":{},"112":{},"114":{},"117":{},"119":{},"121":{},"125":{},"133":{},"134":{},"136":{},"137":{},"138":{},"139":{},"142":{},"143":{},"145":{},"146":{},"147":{},"148":{},"149":{},"150":{},"152":{},"154":{},"155":{},"156":{},"157":{},"158":{},"160":{},"161":{},"162":{},"163":{},"164":{},"166":{},"171":{},"172":{},"174":{},"175":{},"176":{},"177":{}},"component":{}}],["default][legaci",{"_index":6795,"title":{},"name":{},"text":{"165":{}},"component":{}}],["default_cnt",{"_index":2071,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["defconfig",{"_index":1145,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["defect",{"_index":617,"title":{},"name":{},"text":{"6":{},"7":{},"92":{},"94":{}},"component":{}}],["defiend",{"_index":3760,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["defin",{"_index":485,"title":{},"name":{},"text":{"4":{},"10":{},"12":{},"14":{},"15":{},"23":{},"29":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"55":{},"57":{},"58":{},"59":{},"60":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"80":{},"83":{},"84":{},"85":{},"90":{},"97":{},"98":{},"99":{},"101":{},"111":{},"117":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"142":{},"143":{},"145":{},"146":{},"148":{},"149":{},"150":{},"152":{},"153":{},"154":{},"155":{},"156":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"166":{},"171":{},"174":{},"175":{},"176":{}},"component":{}}],["definit",{"_index":3020,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"72":{},"85":{},"134":{},"146":{},"152":{},"162":{},"165":{},"176":{}},"component":{}}],["degre",{"_index":3530,"title":{},"name":{},"text":{"50":{},"52":{},"66":{},"138":{},"142":{},"156":{}},"component":{}}],["degress",{"_index":3534,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["dei",{"_index":108,"title":{"9-6":{},"96-5":{}},"name":{},"text":{"2":{},"9":{},"83":{},"88":{},"96":{},"174":{}},"component":{}}],["del",{"_index":207,"title":{},"name":{},"text":{"4":{},"12":{},"15":{},"19":{},"22":{},"29":{},"51":{},"67":{},"90":{},"98":{},"99":{},"105":{},"109":{},"117":{},"139":{},"157":{}},"component":{}}],["delay",{"_index":428,"title":{},"name":{},"text":{"4":{},"35":{},"36":{},"59":{},"90":{},"123":{},"124":{},"149":{}},"component":{}}],["delay_mechan",{"_index":1971,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["delays/skew",{"_index":3540,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["delet",{"_index":208,"title":{"6-5":{},"7-3":{},"16-9":{},"92-2":{},"94-4":{},"104-8":{}},"name":{},"text":{"4":{},"6":{},"7":{},"12":{},"15":{},"16":{},"19":{},"22":{},"29":{},"38":{},"55":{},"72":{},"80":{},"85":{},"90":{},"92":{},"94":{},"98":{},"99":{},"104":{},"105":{},"109":{},"117":{},"125":{},"146":{},"162":{},"171":{},"176":{}},"component":{}}],["deliver",{"_index":4427,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["delmrp",{"_index":1681,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["del|set",{"_index":3745,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["demo",{"_index":4107,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{},"165":{}},"component":{}}],["demonstr",{"_index":4718,"title":{},"name":{},"text":{"59":{},"73":{},"149":{},"163":{},"165":{}},"component":{}}],["demostr",{"_index":3327,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["denot",{"_index":876,"title":{},"name":{},"text":{"12":{},"86":{},"98":{},"177":{}},"component":{}}],["dentri",{"_index":4832,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["depend",{"_index":668,"title":{},"name":{},"text":{"7":{},"12":{},"15":{},"29":{},"47":{},"55":{},"57":{},"61":{},"63":{},"72":{},"77":{},"84":{},"85":{},"92":{},"98":{},"99":{},"117":{},"135":{},"141":{},"146":{},"148":{},"151":{},"153":{},"162":{},"165":{},"167":{},"175":{},"176":{}},"component":{}}],["deplet",{"_index":2040,"title":{},"name":{},"text":{"28":{},"115":{}},"component":{}}],["deploy",{"_index":4518,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["depth",{"_index":4279,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["depth=1",{"_index":6671,"title":{},"name":{},"text":{"141":{}},"component":{}}],["dequeu",{"_index":1886,"title":{},"name":{},"text":{"26":{},"114":{}},"component":{}}],["deriv",{"_index":4221,"title":{},"name":{},"text":{"55":{},"56":{},"72":{},"84":{},"146":{},"147":{},"162":{},"175":{}},"component":{}}],["descib",{"_index":4517,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["describ",{"_index":59,"title":{},"name":{},"text":{"1":{},"2":{},"4":{},"6":{},"7":{},"8":{},"12":{},"13":{},"14":{},"15":{},"16":{},"26":{},"27":{},"28":{},"46":{},"54":{},"55":{},"56":{},"61":{},"62":{},"68":{},"70":{},"72":{},"76":{},"77":{},"78":{},"79":{},"80":{},"85":{},"86":{},"87":{},"88":{},"89":{},"90":{},"92":{},"94":{},"95":{},"98":{},"99":{},"101":{},"102":{},"104":{},"112":{},"114":{},"115":{},"131":{},"134":{},"140":{},"141":{},"144":{},"146":{},"147":{},"151":{},"152":{},"158":{},"160":{},"162":{},"165":{},"167":{},"168":{},"169":{},"170":{},"171":{},"176":{},"177":{},"178":{}},"component":{}}],["descript",{"_index":72,"title":{"88":{},"92":{},"94":{},"96":{},"97":{},"98":{},"100":{},"104":{},"105":{},"107":{},"108":{},"110":{},"112":{},"113":{},"2-1":{},"6-1":{},"7-1":{},"9-1":{},"10-1":{},"11-1":{},"12-1":{},"16-1":{},"19-1":{},"20-1":{},"21-1":{},"24-1":{},"25-1":{},"27-1":{}},"name":{},"text":{"8":{},"14":{},"26":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"46":{},"51":{},"54":{},"55":{},"59":{},"62":{},"67":{},"72":{},"73":{},"79":{},"81":{},"82":{},"84":{},"85":{},"86":{},"87":{},"95":{},"101":{},"114":{},"116":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"134":{},"139":{},"144":{},"146":{},"149":{},"152":{},"157":{},"162":{},"163":{},"165":{},"170":{},"172":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["descriptor",{"_index":724,"title":{"9-13":{},"96-12":{}},"name":{},"text":{"9":{},"96":{}},"component":{}}],["design",{"_index":1153,"title":{},"name":{},"text":{"14":{},"26":{},"38":{},"46":{},"55":{},"59":{},"61":{},"62":{},"64":{},"65":{},"72":{},"73":{},"77":{},"80":{},"85":{},"101":{},"114":{},"125":{},"134":{},"146":{},"149":{},"151":{},"152":{},"154":{},"155":{},"162":{},"163":{},"167":{},"171":{},"176":{}},"component":{}}],["designated_bridg",{"_index":1412,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["designated_cost",{"_index":1411,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["designated_port",{"_index":1409,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["designated_root",{"_index":1414,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["designwar",{"_index":5385,"title":{},"name":{},"text":{"60":{},"74":{},"75":{},"150":{},"164":{},"166":{}},"component":{}}],["desir",{"_index":1725,"title":{},"name":{},"text":{"18":{},"51":{},"55":{},"67":{},"72":{},"103":{},"139":{},"146":{},"157":{},"162":{},"165":{}},"component":{}}],["desktop",{"_index":5897,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["destin",{"_index":689,"title":{},"name":{},"text":{"7":{},"12":{},"14":{},"22":{},"23":{},"46":{},"62":{},"82":{},"84":{},"86":{},"87":{},"92":{},"98":{},"101":{},"109":{},"111":{},"134":{},"152":{},"173":{},"175":{},"177":{},"178":{}},"component":{}}],["detail",{"_index":738,"title":{"55-20":{},"55-23":{},"72-20":{},"72-23":{},"146-19":{},"146-22":{},"162-19":{},"162-22":{}},"name":{},"text":{"9":{},"14":{},"15":{},"22":{},"27":{},"29":{},"36":{},"38":{},"45":{},"46":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"58":{},"59":{},"60":{},"62":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"71":{},"72":{},"73":{},"75":{},"79":{},"84":{},"85":{},"96":{},"99":{},"101":{},"109":{},"112":{},"117":{},"124":{},"125":{},"133":{},"134":{},"136":{},"137":{},"138":{},"139":{},"141":{},"142":{},"143":{},"144":{},"145":{},"146":{},"147":{},"149":{},"150":{},"152":{},"154":{},"155":{},"156":{},"157":{},"158":{},"159":{},"161":{},"162":{},"163":{},"165":{},"166":{},"170":{},"175":{},"176":{}},"component":{}}],["detect",{"_index":452,"title":{},"name":{},"text":{"4":{},"6":{},"15":{},"16":{},"37":{},"43":{},"46":{},"49":{},"59":{},"60":{},"62":{},"73":{},"74":{},"80":{},"90":{},"94":{},"99":{},"104":{},"112":{},"120":{},"130":{},"134":{},"136":{},"149":{},"150":{},"152":{},"163":{},"164":{},"165":{},"171":{}},"component":{}}],["determin",{"_index":95,"title":{},"name":{},"text":{"2":{},"13":{},"18":{},"46":{},"62":{},"80":{},"85":{},"88":{},"102":{},"103":{},"134":{},"152":{},"171":{},"176":{}},"component":{}}],["dev",{"_index":211,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"10":{},"12":{},"14":{},"15":{},"16":{},"19":{},"22":{},"23":{},"26":{},"27":{},"28":{},"29":{},"46":{},"50":{},"51":{},"53":{},"56":{},"58":{},"59":{},"62":{},"66":{},"67":{},"69":{},"73":{},"74":{},"80":{},"81":{},"82":{},"84":{},"85":{},"86":{},"87":{},"90":{},"92":{},"94":{},"97":{},"98":{},"99":{},"101":{},"104":{},"105":{},"109":{},"111":{},"112":{},"114":{},"115":{},"117":{},"134":{},"138":{},"139":{},"143":{},"145":{},"147":{},"149":{},"152":{},"156":{},"157":{},"159":{},"163":{},"164":{},"165":{},"171":{},"172":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["dev/mapper/dmv_root",{"_index":6813,"title":{},"name":{},"text":{"165":{}},"component":{}}],["dev/mmc",{"_index":3548,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["dev/mmcblk0",{"_index":3144,"title":{},"name":{},"text":{"46":{},"50":{},"62":{},"66":{},"134":{},"138":{},"152":{},"156":{}},"component":{}}],["dev/mmcblk0boot0",{"_index":3553,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["dev/mmcblk0boot1",{"_index":3554,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["dev/mmcblk0p",{"_index":3141,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["dev/mmcblk0p1",{"_index":3172,"title":{},"name":{},"text":{"46":{},"50":{},"62":{},"66":{},"134":{},"138":{},"152":{},"156":{}},"component":{}}],["dev/mmcblk0p2",{"_index":3627,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["dev/mmcblk0p3",{"_index":5608,"title":{},"name":{},"text":{"66":{},"156":{}},"component":{}}],["dev/mmcblk0p4",{"_index":5609,"title":{},"name":{},"text":{"66":{},"156":{}},"component":{}}],["dev/mmcblk0p5",{"_index":3175,"title":{},"name":{},"text":{"46":{},"62":{},"66":{},"134":{},"152":{},"156":{},"165":{}},"component":{}}],["dev/mmcblk0p6",{"_index":5610,"title":{},"name":{},"text":{"66":{},"156":{},"165":{}},"component":{}}],["dev/mmcblk0p7",{"_index":5611,"title":{},"name":{},"text":{"66":{},"156":{}},"component":{}}],["dev/mmcblk0rpmb",{"_index":3557,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["dev/mtd0",{"_index":4677,"title":{},"name":{},"text":{"58":{},"69":{},"145":{},"159":{}},"component":{}}],["dev/mtd1",{"_index":4012,"title":{},"name":{},"text":{"53":{},"143":{}},"component":{}}],["dev/mtdx",{"_index":4000,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["dev/nvram0",{"_index":3724,"title":{},"name":{},"text":{"51":{},"139":{}},"component":{}}],["dev/ptp0",{"_index":2010,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["dev/ptp1",{"_index":2012,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["dev/ptp10",{"_index":6588,"title":{},"name":{},"text":{"112":{}},"component":{}}],["dev/ptp2",{"_index":6586,"title":{},"name":{},"text":{"112":{}},"component":{}}],["dev/ptp3",{"_index":6587,"title":{},"name":{},"text":{"112":{}},"component":{}}],["dev/random",{"_index":3759,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["dev/sda",{"_index":5927,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["dev/sda1",{"_index":5941,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["dev/sdx",{"_index":6675,"title":{},"name":{},"text":{"141":{}},"component":{}}],["dev/sdx1",{"_index":6700,"title":{},"name":{},"text":{"141":{}},"component":{}}],["dev/spi",{"_index":4679,"title":{},"name":{},"text":{"58":{},"145":{}},"component":{}}],["dev/spidev0.0",{"_index":4678,"title":{},"name":{},"text":{"58":{},"145":{}},"component":{}}],["dev/tti",{"_index":5317,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["dev/ttyacm0",{"_index":2789,"title":{},"name":{},"text":{"46":{},"54":{},"57":{},"59":{},"62":{},"73":{},"79":{},"134":{},"144":{},"148":{},"149":{},"152":{},"163":{},"170":{}},"component":{}}],["dev/ttyacm1",{"_index":5851,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["dev/ttyacmx",{"_index":4720,"title":{},"name":{},"text":{"59":{},"73":{},"149":{},"163":{}},"component":{}}],["dev/ttygs0",{"_index":4590,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["dev/ttys0",{"_index":5318,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["dev/ttys1",{"_index":5319,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["dev/ttyusb1",{"_index":5323,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["dev/ttyx",{"_index":5322,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["dev/watchdog",{"_index":5332,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["dev/watchdog0",{"_index":5333,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["dev1",{"_index":919,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["dev2",{"_index":920,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["devcrypto",{"_index":2492,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["develop",{"_index":969,"title":{"14-3":{},"101-2":{}},"name":{},"text":{"13":{},"14":{},"18":{},"55":{},"72":{},"80":{},"101":{},"102":{},"103":{},"146":{},"162":{},"171":{}},"component":{}}],["devic",{"_index":13,"title":{"2-2":{},"21-6":{},"55-15":{},"57-13":{},"59-10":{},"72-15":{},"88-1":{},"108-5":{},"146-14":{},"148-12":{},"149-9":{},"162-14":{}},"name":{},"text":{"1":{},"2":{},"4":{},"6":{},"7":{},"9":{},"10":{},"12":{},"14":{},"15":{},"26":{},"27":{},"32":{},"33":{},"34":{},"35":{},"37":{},"38":{},"40":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"77":{},"79":{},"80":{},"88":{},"89":{},"90":{},"92":{},"94":{},"96":{},"97":{},"98":{},"99":{},"101":{},"112":{},"114":{},"118":{},"120":{},"121":{},"122":{},"123":{},"125":{},"127":{},"130":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"141":{},"142":{},"143":{},"144":{},"145":{},"146":{},"147":{},"148":{},"149":{},"150":{},"151":{},"152":{},"153":{},"154":{},"155":{},"156":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"170":{},"171":{}},"component":{}}],["device=dev",{"_index":3722,"title":{},"name":{},"text":{"51":{},"139":{}},"component":{}}],["devicetre",{"_index":2311,"title":{"45-4":{},"47-4":{},"48-4":{},"49-4":{},"50-4":{},"51-4":{},"52-4":{},"53-4":{},"56-4":{},"57-7":{},"58-4":{},"59-4":{},"60-4":{},"63-4":{},"64-4":{},"65-4":{},"66-4":{},"67-4":{},"68-4":{},"69-4":{},"70-4":{},"71-4":{},"73-4":{},"74-4":{},"75-4":{},"133-3":{},"135-3":{},"136-3":{},"137-3":{},"138-3":{},"139-3":{},"141-3":{},"142-3":{},"143-3":{},"145-3":{},"147-3":{},"148-6":{},"149-3":{},"150-3":{},"153-3":{},"154-3":{},"155-3":{},"156-3":{},"157-3":{},"158-3":{},"159-3":{},"160-3":{},"161-3":{},"163-3":{},"164-3":{},"166-3":{}},"name":{},"text":{"36":{},"73":{},"75":{},"124":{},"163":{},"166":{}},"component":{}}],["devtmpf",{"_index":4923,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["dgst",{"_index":2509,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["dhcp",{"_index":2765,"title":{},"name":{},"text":{"46":{},"59":{},"61":{},"62":{},"80":{},"134":{},"149":{},"151":{},"152":{},"171":{}},"component":{}}],["dhcp/tftp",{"_index":2775,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["differ",{"_index":55,"title":{},"name":{},"text":{"1":{},"4":{},"7":{},"9":{},"12":{},"14":{},"15":{},"16":{},"17":{},"27":{},"28":{},"29":{},"31":{},"32":{},"34":{},"38":{},"46":{},"50":{},"51":{},"54":{},"55":{},"61":{},"62":{},"66":{},"67":{},"72":{},"77":{},"80":{},"83":{},"84":{},"85":{},"89":{},"90":{},"92":{},"96":{},"98":{},"99":{},"101":{},"104":{},"106":{},"112":{},"115":{},"117":{},"118":{},"119":{},"121":{},"125":{},"134":{},"138":{},"139":{},"140":{},"144":{},"146":{},"151":{},"152":{},"156":{},"157":{},"162":{},"167":{},"171":{},"174":{},"175":{},"176":{}},"component":{}}],["differenti",{"_index":1672,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["digit",{"_index":3199,"title":{},"name":{},"text":{"46":{},"49":{},"55":{},"59":{},"62":{},"65":{},"72":{},"73":{},"112":{},"134":{},"136":{},"146":{},"149":{},"152":{},"154":{},"162":{},"163":{}},"component":{}}],["dimens",{"_index":4118,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["dip",{"_index":410,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["dir",{"_index":5357,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["direct",{"_index":98,"title":{"75-9":{},"166-8":{}},"name":{},"text":{"2":{},"6":{},"7":{},"52":{},"55":{},"68":{},"70":{},"72":{},"74":{},"75":{},"92":{},"94":{},"142":{},"146":{},"158":{},"160":{},"162":{},"164":{},"165":{},"166":{}},"component":{}}],["directli",{"_index":1209,"title":{},"name":{},"text":{"14":{},"27":{},"40":{},"46":{},"55":{},"56":{},"62":{},"72":{},"77":{},"85":{},"101":{},"112":{},"127":{},"134":{},"146":{},"147":{},"152":{},"162":{},"165":{},"167":{},"176":{}},"component":{}}],["directori",{"_index":1181,"title":{"32-7":{},"118-6":{}},"name":{},"text":{"14":{},"46":{},"49":{},"50":{},"52":{},"53":{},"58":{},"59":{},"62":{},"66":{},"68":{},"69":{},"73":{},"101":{},"134":{},"136":{},"138":{},"142":{},"143":{},"145":{},"149":{},"152":{},"156":{},"158":{},"159":{},"163":{},"165":{}},"component":{}}],["dirti",{"_index":424,"title":{},"name":{},"text":{"4":{},"59":{},"90":{},"149":{}},"component":{}}],["disabl",{"_index":155,"title":{},"name":{},"text":{"2":{},"4":{},"6":{},"7":{},"10":{},"12":{},"15":{},"19":{},"45":{},"46":{},"47":{},"48":{},"50":{},"53":{},"55":{},"57":{},"59":{},"60":{},"62":{},"63":{},"64":{},"66":{},"69":{},"70":{},"72":{},"74":{},"88":{},"90":{},"92":{},"94":{},"97":{},"98":{},"99":{},"105":{},"133":{},"134":{},"135":{},"137":{},"138":{},"141":{},"143":{},"146":{},"148":{},"149":{},"150":{},"152":{},"153":{},"155":{},"156":{},"159":{},"160":{},"162":{},"164":{}},"component":{}}],["disadvantag",{"_index":4306,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["discard",{"_index":850,"title":{},"name":{},"text":{"12":{},"23":{},"50":{},"85":{},"86":{},"98":{},"111":{},"138":{},"176":{},"177":{}},"component":{}}],["discardedpacket",{"_index":937,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["disciplin",{"_index":6462,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["disclaim",{"_index":2184,"title":{"31-2":{},"32-2":{},"34-2":{},"37-2":{},"38-3":{},"118-1":{},"119-1":{},"120-1":{},"121-1":{},"125-2":{}},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["disconnect",{"_index":4722,"title":{},"name":{},"text":{"59":{},"73":{},"149":{},"163":{}},"component":{}}],["discret",{"_index":3728,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["disk",{"_index":3143,"title":{},"name":{},"text":{"46":{},"50":{},"55":{},"62":{},"66":{},"72":{},"74":{},"80":{},"134":{},"138":{},"146":{},"152":{},"156":{},"162":{},"164":{},"165":{},"171":{}},"component":{}}],["disklabel",{"_index":3595,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["display",{"_index":2051,"title":{"68-9":{},"158-8":{}},"name":{},"text":{"29":{},"46":{},"51":{},"55":{},"62":{},"67":{},"72":{},"117":{},"134":{},"139":{},"141":{},"146":{},"152":{},"157":{},"162":{}},"component":{}}],["distribut",{"_index":1177,"title":{},"name":{},"text":{"14":{},"32":{},"46":{},"55":{},"62":{},"72":{},"101":{},"118":{},"134":{},"146":{},"152":{},"162":{}},"component":{}}],["div",{"_index":4807,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["div_512",{"_index":2975,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["div_512=setexpr",{"_index":2944,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["div_cfg",{"_index":2423,"title":{},"name":{},"text":{"43":{},"130":{}},"component":{}}],["divid",{"_index":708,"title":{},"name":{},"text":{"8":{},"55":{},"72":{},"146":{},"162":{}},"component":{}}],["divis",{"_index":623,"title":{},"name":{},"text":{"6":{},"59":{},"94":{},"149":{}},"component":{}}],["dl",{"_index":1150,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["dl/ethtool",{"_index":1215,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["dl/ethtool/ethtool",{"_index":1218,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["dm",{"_index":6776,"title":{},"name":{},"text":{"165":{}},"component":{}}],["dma",{"_index":2406,"title":{},"name":{},"text":{"43":{},"45":{},"49":{},"53":{},"58":{},"59":{},"69":{},"71":{},"73":{},"80":{},"130":{},"131":{},"133":{},"136":{},"143":{},"145":{},"149":{},"159":{},"161":{},"163":{},"171":{}},"component":{}}],["dma0",{"_index":3995,"title":{},"name":{},"text":{"53":{},"69":{},"71":{},"73":{},"143":{},"159":{},"161":{},"163":{}},"component":{}}],["dma0chan0",{"_index":4005,"title":{},"name":{},"text":{"53":{},"58":{},"59":{},"143":{},"145":{},"149":{}},"component":{}}],["dma0chan1",{"_index":4004,"title":{},"name":{},"text":{"53":{},"58":{},"59":{},"143":{},"145":{},"149":{}},"component":{}}],["dma0chan2",{"_index":5210,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["dmac",{"_index":406,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"12":{},"23":{},"84":{},"85":{},"90":{},"92":{},"94":{},"98":{},"111":{},"175":{},"176":{}},"component":{}}],["dmac_vid",{"_index":6514,"title":{"86-12":{},"177-11":{}},"name":{},"text":{"86":{},"177":{}},"component":{}}],["dmesg",{"_index":2172,"title":{},"name":{},"text":{"30":{},"49":{},"50":{},"52":{},"53":{},"56":{},"57":{},"58":{},"59":{},"66":{},"68":{},"69":{},"73":{},"116":{},"136":{},"138":{},"141":{},"142":{},"143":{},"145":{},"147":{},"148":{},"149":{},"156":{},"158":{},"159":{},"163":{}},"component":{}}],["dmv_root",{"_index":6812,"title":{},"name":{},"text":{"165":{}},"component":{}}],["dmveriti",{"_index":6612,"title":{},"name":{},"text":{"131":{}},"component":{}}],["dnsip=10.99.10.1",{"_index":4769,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["do",{"_index":712,"title":{},"name":{},"text":{"8":{},"16":{},"50":{},"55":{},"66":{},"72":{},"95":{},"104":{},"138":{},"146":{},"156":{},"162":{}},"component":{}}],["doc",{"_index":1734,"title":{"31-3":{},"32-3":{},"33-4":{},"34-3":{},"35-4":{},"37-3":{},"118-2":{},"119-2":{},"120-2":{},"121-2":{},"122-3":{},"123-3":{}},"name":{},"text":{"18":{},"31":{},"33":{},"34":{},"35":{},"36":{},"37":{},"103":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{}},"component":{}}],["doc.html",{"_index":2223,"title":{},"name":{},"text":{"32":{},"118":{}},"component":{}}],["doc/lan966x",{"_index":2301,"title":{"36-11":{},"124-10":{}},"name":{},"text":{},"component":{}}],["doc/sparx5",{"_index":2302,"title":{"36-12":{},"124-11":{}},"name":{},"text":{},"component":{}}],["docker",{"_index":1008,"title":{"14-18":{},"101-17":{}},"name":{},"text":{"14":{},"55":{},"72":{},"101":{},"146":{},"162":{}},"component":{}}],["docker.env",{"_index":1272,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["docker_env",{"_index":1307,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["dockerfil",{"_index":1312,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["document",{"_index":812,"title":{},"name":{},"text":{"10":{},"13":{},"14":{},"18":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"46":{},"47":{},"48":{},"49":{},"50":{},"52":{},"53":{},"55":{},"56":{},"57":{},"58":{},"60":{},"62":{},"63":{},"64":{},"65":{},"66":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"80":{},"84":{},"85":{},"97":{},"101":{},"102":{},"103":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"131":{},"134":{},"135":{},"136":{},"137":{},"138":{},"140":{},"141":{},"142":{},"143":{},"145":{},"146":{},"147":{},"148":{},"150":{},"152":{},"153":{},"154":{},"155":{},"156":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"171":{},"175":{},"176":{}},"component":{}}],["doesn't",{"_index":5148,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["doesn’t",{"_index":197,"title":{},"name":{},"text":{"4":{},"46":{},"62":{},"90":{},"112":{},"134":{},"152":{}},"component":{}}],["domain",{"_index":596,"title":{},"name":{},"text":{"6":{},"7":{},"16":{},"27":{},"59":{},"92":{},"94":{},"104":{},"112":{},"149":{}},"component":{}}],["domainnumb",{"_index":1983,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["don't",{"_index":3582,"title":{},"name":{},"text":{"50":{},"52":{},"59":{},"60":{},"66":{},"75":{},"138":{},"142":{},"149":{},"150":{},"156":{},"166":{}},"component":{}}],["done",{"_index":657,"title":{},"name":{},"text":{"6":{},"8":{},"14":{},"26":{},"31":{},"34":{},"37":{},"43":{},"46":{},"50":{},"55":{},"56":{},"57":{},"59":{},"62":{},"72":{},"80":{},"84":{},"94":{},"95":{},"101":{},"114":{},"119":{},"120":{},"121":{},"130":{},"134":{},"138":{},"141":{},"146":{},"147":{},"148":{},"149":{},"152":{},"162":{},"165":{},"171":{},"175":{}},"component":{}}],["don’t",{"_index":6764,"title":{},"name":{},"text":{"165":{}},"component":{}}],["doubl",{"_index":3186,"title":{},"name":{},"text":{"46":{},"59":{},"62":{},"134":{},"149":{},"152":{}},"component":{}}],["down",{"_index":245,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"15":{},"16":{},"19":{},"48":{},"55":{},"59":{},"72":{},"80":{},"90":{},"92":{},"94":{},"99":{},"104":{},"105":{},"137":{},"146":{},"149":{},"162":{},"171":{}},"component":{}}],["downgrad",{"_index":4269,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["download",{"_index":997,"title":{"14-4":{},"79-5":{},"101-3":{},"170-4":{}},"name":{},"text":{"14":{},"46":{},"54":{},"55":{},"62":{},"79":{},"101":{},"134":{},"144":{},"146":{},"152":{},"170":{}},"component":{}}],["downsid",{"_index":6483,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["downstream",{"_index":4285,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["doxygen",{"_index":1051,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["dpl",{"_index":103,"title":{"9-4":{},"96-3":{}},"name":{},"text":{"2":{},"9":{},"15":{},"83":{},"88":{},"96":{},"99":{},"174":{}},"component":{}}],["dpll",{"_index":5767,"title":{"112-7":{}},"name":{},"text":{"71":{},"112":{},"131":{},"161":{}},"component":{}}],["dport",{"_index":413,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["dr",{"_index":1284,"title":{},"name":{},"text":{"14":{},"55":{},"72":{},"101":{},"146":{},"162":{}},"component":{}}],["dr_green_prio_0",{"_index":1623,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["dr_green_prio_1",{"_index":1624,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["dr_green_prio_2",{"_index":1625,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["dr_green_prio_3",{"_index":1626,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["dr_green_prio_4",{"_index":1627,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["dr_green_prio_5",{"_index":1628,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["dr_green_prio_6",{"_index":1629,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["dr_green_prio_7",{"_index":1630,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["dr_local",{"_index":1613,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["dr_mode",{"_index":5093,"title":{},"name":{},"text":{"59":{},"74":{},"149":{},"164":{}},"component":{}}],["dr_tail",{"_index":1614,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["dr_yellow_prio_0",{"_index":1615,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["dr_yellow_prio_1",{"_index":1616,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["dr_yellow_prio_2",{"_index":1617,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["dr_yellow_prio_3",{"_index":1618,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["dr_yellow_prio_4",{"_index":1619,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["dr_yellow_prio_5",{"_index":1620,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["dr_yellow_prio_6",{"_index":1621,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["dr_yellow_prio_7",{"_index":1622,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["dram",{"_index":4750,"title":{},"name":{},"text":{"59":{},"60":{},"73":{},"75":{},"149":{},"150":{},"163":{},"166":{}},"component":{}}],["draw",{"_index":4282,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["drawback",{"_index":2748,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["driver",{"_index":420,"title":{"36-10":{},"56-5":{},"124-9":{},"147-4":{}},"name":{},"text":{"4":{},"18":{},"30":{},"31":{},"32":{},"33":{},"34":{},"36":{},"37":{},"38":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"80":{},"84":{},"85":{},"90":{},"103":{},"116":{},"118":{},"119":{},"120":{},"121":{},"122":{},"124":{},"125":{},"130":{},"131":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"141":{},"142":{},"143":{},"145":{},"146":{},"147":{},"148":{},"149":{},"150":{},"152":{},"153":{},"154":{},"155":{},"156":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"166":{},"171":{},"175":{},"176":{}},"component":{}}],["drop",{"_index":104,"title":{},"name":{},"text":{"2":{},"9":{},"15":{},"22":{},"23":{},"81":{},"82":{},"84":{},"85":{},"86":{},"87":{},"88":{},"96":{},"99":{},"109":{},"111":{},"131":{},"172":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["drop_7c",{"_index":3448,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["dropbear",{"_index":5877,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["dropdown",{"_index":4076,"title":{},"name":{},"text":{"54":{},"79":{},"144":{},"170":{}},"component":{}}],["dropped:0",{"_index":3293,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["drwx",{"_index":3692,"title":{},"name":{},"text":{"50":{},"74":{},"138":{},"164":{}},"component":{}}],["drwxr",{"_index":4492,"title":{},"name":{},"text":{"56":{},"74":{},"147":{},"164":{}},"component":{}}],["dsa",{"_index":6447,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["dscp",{"_index":79,"title":{"2-3":{},"88-2":{}},"name":{},"text":{"2":{},"15":{},"82":{},"86":{},"87":{},"88":{},"99":{},"173":{},"177":{},"178":{}},"component":{}}],["dsr",{"_index":2837,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["dst",{"_index":2162,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["dst_ip",{"_index":1778,"title":{},"name":{},"text":{"22":{},"29":{},"82":{},"84":{},"85":{},"86":{},"87":{},"109":{},"117":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["dst_mac",{"_index":878,"title":{},"name":{},"text":{"12":{},"23":{},"82":{},"84":{},"85":{},"86":{},"87":{},"98":{},"111":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["dst_port",{"_index":6322,"title":{},"name":{},"text":{"82":{},"84":{},"86":{},"87":{},"173":{},"175":{},"177":{},"178":{}},"component":{}}],["dt",{"_index":2235,"title":{"46-21":{},"62-21":{},"134-20":{},"152-20":{}},"name":{},"text":{"32":{},"36":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"55":{},"57":{},"58":{},"59":{},"60":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"118":{},"124":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"140":{},"142":{},"143":{},"145":{},"146":{},"148":{},"149":{},"150":{},"152":{},"153":{},"154":{},"155":{},"156":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"166":{}},"component":{}}],["dtb",{"_index":2547,"title":{"46-22":{},"62-22":{},"134-21":{},"152-21":{}},"name":{},"text":{"46":{},"62":{},"134":{},"152":{},"165":{}},"component":{}}],["dtc",{"_index":2734,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["dtoverlay=dwc2,dr_mode=host",{"_index":6705,"title":{},"name":{},"text":{"141":{}},"component":{}}],["dtsi",{"_index":3238,"title":{},"name":{},"text":{"47":{},"48":{},"50":{},"52":{},"53":{},"57":{},"60":{},"63":{},"64":{},"66":{},"68":{},"69":{},"70":{},"74":{},"75":{},"135":{},"137":{},"138":{},"142":{},"143":{},"148":{},"150":{},"153":{},"155":{},"156":{},"158":{},"159":{},"160":{},"164":{},"166":{}},"component":{}}],["dual",{"_index":5881,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["due",{"_index":2358,"title":{},"name":{},"text":{"38":{},"45":{},"125":{},"133":{}},"component":{}}],["dummi",{"_index":4884,"title":{},"name":{},"text":{"59":{},"84":{},"149":{},"175":{}},"component":{}}],["dump",{"_index":2138,"title":{},"name":{},"text":{"29":{},"30":{},"46":{},"51":{},"55":{},"62":{},"65":{},"67":{},"72":{},"116":{},"117":{},"134":{},"139":{},"146":{},"152":{},"154":{},"157":{},"162":{}},"component":{}}],["duplex",{"_index":434,"title":{"15-6":{},"99-5":{}},"name":{},"text":{"4":{},"15":{},"59":{},"90":{},"99":{},"149":{}},"component":{}}],["duplic",{"_index":847,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["durat",{"_index":1921,"title":{},"name":{},"text":{"26":{},"114":{}},"component":{}}],["dure",{"_index":1170,"title":{},"name":{},"text":{"14":{},"23":{},"46":{},"51":{},"55":{},"62":{},"67":{},"72":{},"80":{},"86":{},"101":{},"111":{},"134":{},"139":{},"146":{},"152":{},"157":{},"162":{},"165":{},"171":{},"177":{}},"component":{}}],["dut",{"_index":2270,"title":{"48-11":{},"137-10":{}},"name":{},"text":{"33":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"48":{},"59":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"137":{},"149":{}},"component":{}}],["dw",{"_index":5328,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["dwc3",{"_index":5090,"title":{},"name":{},"text":{"59":{},"74":{},"149":{},"164":{}},"component":{}}],["dwrr",{"_index":1707,"title":{"26-3":{},"114-2":{}},"name":{},"text":{"17":{},"26":{},"85":{},"106":{},"114":{},"176":{}},"component":{}}],["dynam",{"_index":328,"title":{},"name":{},"text":{"4":{},"46":{},"62":{},"80":{},"90":{},"134":{},"152":{},"171":{}},"component":{}}],["e",{"_index":1278,"title":{},"name":{},"text":{"14":{},"49":{},"50":{},"65":{},"66":{},"87":{},"101":{},"136":{},"138":{},"154":{},"156":{},"178":{}},"component":{}}],["e.g",{"_index":10,"title":{},"name":{},"text":{"1":{},"4":{},"6":{},"10":{},"14":{},"26":{},"29":{},"46":{},"50":{},"54":{},"62":{},"66":{},"70":{},"79":{},"84":{},"85":{},"89":{},"90":{},"94":{},"97":{},"101":{},"114":{},"117":{},"134":{},"138":{},"141":{},"144":{},"152":{},"156":{},"160":{},"170":{},"175":{},"176":{}},"component":{}}],["e.mmc",{"_index":3484,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["e0",{"_index":5590,"title":{},"name":{},"text":{"65":{},"154":{}},"component":{}}],["e0000000.mscc_switch",{"_index":5078,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["e0040200.seri",{"_index":5683,"title":{},"name":{},"text":{"68":{},"158":{}},"component":{}}],["e004c000.a",{"_index":5201,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["e0060400.spi",{"_index":5688,"title":{},"name":{},"text":{"68":{},"69":{},"158":{},"159":{}},"component":{}}],["e0060600.i2c",{"_index":3429,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["e0064400.spi",{"_index":4683,"title":{},"name":{},"text":{"58":{},"145":{}},"component":{}}],["e0064600.i2c",{"_index":5687,"title":{},"name":{},"text":{"68":{},"158":{}},"component":{}}],["e0068000.dma",{"_index":4950,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["e006c000.sha",{"_index":5207,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["e00c0000.switch",{"_index":5693,"title":{},"name":{},"text":{"68":{},"158":{}},"component":{}}],["e0830000.sdhci",{"_index":5617,"title":{},"name":{},"text":{"66":{},"68":{},"156":{},"158":{}},"component":{}}],["e0830000.sdio",{"_index":3560,"title":{},"name":{},"text":{"50":{},"52":{},"59":{},"138":{},"142":{},"149":{}},"component":{}}],["e0834000.spi",{"_index":4003,"title":{},"name":{},"text":{"53":{},"143":{}},"component":{}}],["e088fd39",{"_index":6689,"title":{},"name":{},"text":{"141":{}},"component":{}}],["e2",{"_index":1973,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["e2000000.switch",{"_index":5064,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["e2004064.pinctrl",{"_index":3952,"title":{},"name":{},"text":{"52":{},"59":{},"142":{},"149":{}},"component":{}}],["e20100d4.pinctrl",{"_index":5678,"title":{},"name":{},"text":{"68":{},"158":{}},"component":{}}],["e20101a8.mdio",{"_index":5692,"title":{},"name":{},"text":{"68":{},"158":{}},"component":{}}],["e2010230.gpio",{"_index":5682,"title":{},"name":{},"text":{"68":{},"70":{},"158":{},"160":{}},"component":{}}],["e2020100.hwmon",{"_index":5713,"title":{},"name":{},"text":{"68":{},"158":{}},"component":{}}],["e2fsprog",{"_index":3699,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["e3796aecd5f734716fc0f2569d54bf60c585dd61fa0e346586cb017b6f1ec27f",{"_index":6809,"title":{},"name":{},"text":{"165":{}},"component":{}}],["e3d3",{"_index":3090,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["e_def",{"_index":6341,"title":{},"name":{},"text":{"83":{},"174":{}},"component":{}}],["e_mod",{"_index":6340,"title":{},"name":{},"text":{"83":{},"174":{}},"component":{}}],["e_tag_map",{"_index":6342,"title":{},"name":{},"text":{"83":{},"174":{}},"component":{}}],["each",{"_index":27,"title":{},"name":{},"text":{"1":{},"7":{},"8":{},"12":{},"14":{},"16":{},"23":{},"26":{},"27":{},"29":{},"46":{},"47":{},"49":{},"51":{},"55":{},"58":{},"59":{},"62":{},"63":{},"65":{},"67":{},"70":{},"71":{},"72":{},"73":{},"81":{},"84":{},"85":{},"86":{},"87":{},"89":{},"92":{},"95":{},"98":{},"101":{},"104":{},"111":{},"112":{},"114":{},"117":{},"134":{},"135":{},"136":{},"139":{},"140":{},"145":{},"146":{},"149":{},"152":{},"153":{},"154":{},"157":{},"160":{},"161":{},"162":{},"163":{},"165":{},"172":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["eacl",{"_index":6287,"title":{},"name":{},"text":{"82":{},"173":{}},"component":{}}],["earli",{"_index":4821,"title":{},"name":{},"text":{"59":{},"61":{},"77":{},"112":{},"149":{},"151":{},"167":{}},"component":{}}],["easi",{"_index":979,"title":{},"name":{},"text":{"13":{},"14":{},"18":{},"55":{},"72":{},"80":{},"101":{},"102":{},"103":{},"146":{},"162":{},"171":{}},"component":{}}],["easier",{"_index":6489,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["easili",{"_index":6773,"title":{},"name":{},"text":{"165":{}},"component":{}}],["ebd0a0a2",{"_index":3049,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["ec",{"_index":4249,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["ecb",{"_index":2481,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["echo",{"_index":1221,"title":{},"name":{},"text":{"14":{},"45":{},"49":{},"50":{},"52":{},"53":{},"56":{},"57":{},"59":{},"66":{},"68":{},"69":{},"70":{},"101":{},"133":{},"136":{},"138":{},"142":{},"143":{},"147":{},"148":{},"149":{},"156":{},"158":{},"159":{},"160":{}},"component":{}}],["eco",{"_index":3734,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["ecsda",{"_index":4100,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["ed",{"_index":4405,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["edg",{"_index":2306,"title":{},"name":{},"text":{"36":{},"46":{},"54":{},"62":{},"79":{},"112":{},"124":{},"134":{},"144":{},"152":{},"170":{}},"component":{}}],["edit",{"_index":6697,"title":{},"name":{},"text":{"141":{}},"component":{}}],["editenv",{"_index":6256,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["eds2",{"_index":5403,"title":{"61-7":{},"151-8":{}},"name":{},"text":{"61":{},"151":{}},"component":{}}],["eeprom",{"_index":3343,"title":{"65-9":{},"154-8":{}},"name":{},"text":{"49":{},"65":{},"136":{},"154":{}},"component":{}}],["eeprom@50",{"_index":3423,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["ef",{"_index":2177,"title":{},"name":{},"text":{"30":{},"60":{},"75":{},"116":{},"150":{},"166":{}},"component":{}}],["effect",{"_index":5856,"title":{},"name":{},"text":{"73":{},"75":{},"163":{},"166":{}},"component":{}}],["effici",{"_index":978,"title":{},"name":{},"text":{"13":{},"18":{},"102":{},"103":{}},"component":{}}],["effort",{"_index":4426,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["efi",{"_index":3043,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["eg",{"_index":4176,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["egr_port",{"_index":957,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["egress",{"_index":97,"title":{"173":{},"174":{},"8-4":{},"82-1":{},"83-1":{},"95-3":{}},"name":{},"text":{"2":{},"4":{},"7":{},"8":{},"9":{},"12":{},"17":{},"26":{},"28":{},"30":{},"33":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"81":{},"82":{},"83":{},"84":{},"85":{},"86":{},"87":{},"88":{},"90":{},"92":{},"95":{},"96":{},"98":{},"106":{},"114":{},"115":{},"116":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"172":{},"173":{},"174":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["ehci",{"_index":5096,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["ehci_hcd",{"_index":5095,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["eight",{"_index":715,"title":{},"name":{},"text":{"8":{},"26":{},"85":{},"95":{},"114":{},"176":{}},"component":{}}],["el0",{"_index":4119,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["el1/svc",{"_index":4131,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["el3",{"_index":2610,"title":{},"name":{},"text":{"46":{},"51":{},"55":{},"62":{},"67":{},"72":{},"134":{},"139":{},"146":{},"152":{},"157":{},"162":{}},"component":{}}],["el3/svc",{"_index":4129,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["element",{"_index":2744,"title":{},"name":{},"text":{"46":{},"51":{},"62":{},"67":{},"80":{},"134":{},"139":{},"152":{},"157":{},"165":{},"171":{}},"component":{}}],["elimin",{"_index":839,"title":{},"name":{},"text":{"12":{},"17":{},"29":{},"30":{},"98":{},"106":{},"116":{},"117":{}},"component":{}}],["elis",{"_index":6034,"title":{},"name":{},"text":{"78":{},"169":{}},"component":{}}],["embed",{"_index":980,"title":{"46-30":{},"62-30":{},"134-29":{},"152-29":{}},"name":{},"text":{"13":{},"18":{},"46":{},"50":{},"55":{},"59":{},"62":{},"66":{},"72":{},"74":{},"79":{},"102":{},"103":{},"134":{},"138":{},"146":{},"149":{},"152":{},"156":{},"162":{},"164":{},"165":{},"170":{}},"component":{}}],["emcc",{"_index":6248,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["emit",{"_index":2642,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"134":{},"146":{},"152":{}},"component":{}}],["emmc",{"_index":2381,"title":{"46-37":{},"46-46":{},"46-50":{},"54-6":{},"54-7":{},"62-37":{},"62-45":{},"62-49":{},"79-7":{},"79-8":{},"80-8":{},"80-14":{},"80-15":{},"80-17":{},"134-36":{},"134-45":{},"134-49":{},"141-5":{},"144-5":{},"144-6":{},"152-36":{},"152-44":{},"152-48":{},"170-6":{},"170-7":{},"171-7":{},"171-13":{},"171-14":{},"171-16":{}},"name":{},"text":{"40":{},"43":{},"46":{},"50":{},"52":{},"54":{},"55":{},"61":{},"62":{},"66":{},"72":{},"79":{},"80":{},"127":{},"130":{},"134":{},"138":{},"141":{},"142":{},"144":{},"146":{},"151":{},"152":{},"156":{},"162":{},"165":{},"170":{},"171":{}},"component":{}}],["emmc/sdcard",{"_index":2531,"title":{"46-6":{},"46-33":{},"62-6":{},"62-33":{},"134-5":{},"134-32":{},"152-5":{},"152-32":{}},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["emmc@e0830000",{"_index":4752,"title":{},"name":{},"text":{"59":{},"60":{},"73":{},"75":{},"149":{},"150":{},"163":{},"166":{}},"component":{}}],["emmc_pin",{"_index":3500,"title":{},"name":{},"text":{"50":{},"52":{},"66":{},"138":{},"142":{},"156":{}},"component":{}}],["emmc_sd",{"_index":3922,"title":{},"name":{},"text":{"52":{},"66":{},"68":{},"142":{},"156":{},"158":{}},"component":{}}],["emmc_sd_pin",{"_index":3490,"title":{},"name":{},"text":{"50":{},"52":{},"66":{},"138":{},"142":{},"156":{}},"component":{}}],["empti",{"_index":1204,"title":{},"name":{},"text":{"14":{},"55":{},"56":{},"72":{},"74":{},"101":{},"141":{},"146":{},"147":{},"162":{},"164":{}},"component":{}}],["emu",{"_index":4320,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["emul",{"_index":4096,"title":{"55-44":{},"72-36":{},"146-43":{},"162-35":{}},"name":{},"text":{"55":{},"56":{},"59":{},"72":{},"73":{},"146":{},"147":{},"149":{},"162":{},"163":{}},"component":{}}],["enabl",{"_index":134,"title":{"54-4":{},"79-4":{},"144-3":{},"170-3":{}},"name":{},"text":{"2":{},"4":{},"6":{},"7":{},"10":{},"12":{},"14":{},"15":{},"19":{},"28":{},"36":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"79":{},"80":{},"82":{},"84":{},"88":{},"90":{},"92":{},"94":{},"97":{},"98":{},"99":{},"101":{},"105":{},"115":{},"124":{},"130":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"140":{},"141":{},"142":{},"143":{},"144":{},"145":{},"146":{},"147":{},"148":{},"149":{},"150":{},"152":{},"153":{},"154":{},"155":{},"156":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"170":{},"171":{},"173":{},"175":{}},"component":{}}],["enable/dis",{"_index":470,"title":{},"name":{},"text":{"4":{},"7":{},"90":{},"92":{}},"component":{}}],["enable_tx",{"_index":768,"title":{},"name":{},"text":{"10":{},"97":{}},"component":{}}],["enable_uart=1",{"_index":6706,"title":{},"name":{},"text":{"141":{}},"component":{}}],["enabled=1,5,7",{"_index":1394,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["enc",{"_index":2490,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["encap:ethernet",{"_index":3285,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["encap:ipv6",{"_index":3313,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["encap:loc",{"_index":3306,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["encap:unspec",{"_index":3301,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["encod",{"_index":2498,"title":{},"name":{},"text":{"45":{},"55":{},"72":{},"133":{},"146":{},"162":{}},"component":{}}],["encrypt",{"_index":2486,"title":{"55-18":{},"55-26":{},"72-18":{},"72-26":{},"146-17":{},"146-25":{},"162-17":{},"162-25":{}},"name":{},"text":{"45":{},"46":{},"55":{},"56":{},"62":{},"72":{},"133":{},"134":{},"146":{},"147":{},"152":{},"162":{}},"component":{}}],["end",{"_index":1657,"title":{"46-8":{},"55-31":{},"134-7":{},"146-30":{}},"name":{},"text":{"16":{},"27":{},"43":{},"46":{},"51":{},"55":{},"59":{},"61":{},"62":{},"67":{},"72":{},"73":{},"80":{},"84":{},"104":{},"112":{},"130":{},"134":{},"139":{},"146":{},"149":{},"151":{},"152":{},"157":{},"162":{},"163":{},"171":{},"175":{}},"component":{}}],["end2end",{"_index":2262,"title":{},"name":{},"text":{"33":{},"122":{}},"component":{}}],["endch",{"_index":3612,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["endian",{"_index":3778,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["endlba",{"_index":3614,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["endnod",{"_index":2200,"title":{},"name":{},"text":{"31":{},"32":{},"34":{},"37":{},"118":{},"119":{},"120":{},"121":{}},"component":{}}],["endors",{"_index":4457,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["endpoint",{"_index":2624,"title":{},"name":{},"text":{"46":{},"55":{},"134":{},"146":{}},"component":{}}],["enforc",{"_index":6397,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["engin",{"_index":667,"title":{},"name":{},"text":{"7":{},"13":{},"16":{},"43":{},"45":{},"55":{},"72":{},"92":{},"102":{},"104":{},"130":{},"133":{},"146":{},"162":{}},"component":{}}],["enh",{"_index":2812,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["enhanc",{"_index":1880,"title":{},"name":{},"text":{"26":{},"36":{},"59":{},"84":{},"85":{},"114":{},"124":{},"149":{},"175":{},"176":{}},"component":{}}],["enlist",{"_index":4854,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["enough",{"_index":4432,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["ensur",{"_index":2163,"title":{},"name":{},"text":{"29":{},"46":{},"55":{},"56":{},"62":{},"72":{},"117":{},"134":{},"146":{},"147":{},"152":{},"162":{},"165":{}},"component":{}}],["ent",{"_index":1101,"title":{},"name":{},"text":{"14":{},"46":{},"62":{},"101":{},"134":{},"152":{}},"component":{}}],["enter",{"_index":741,"title":{},"name":{},"text":{"9":{},"22":{},"46":{},"62":{},"96":{},"109":{},"134":{},"152":{}},"component":{}}],["entir",{"_index":987,"title":{},"name":{},"text":{"13":{},"18":{},"55":{},"72":{},"102":{},"103":{},"146":{},"162":{},"165":{}},"component":{}}],["entiti",{"_index":6724,"title":{},"name":{},"text":{"165":{}},"component":{}}],["entri",{"_index":158,"title":{},"name":{},"text":{"2":{},"4":{},"9":{},"23":{},"26":{},"46":{},"55":{},"56":{},"59":{},"62":{},"72":{},"73":{},"84":{},"85":{},"86":{},"88":{},"90":{},"96":{},"111":{},"114":{},"134":{},"146":{},"147":{},"149":{},"152":{},"162":{},"163":{},"175":{},"176":{},"177":{}},"component":{}}],["enumer",{"_index":4066,"title":{},"name":{},"text":{"54":{},"57":{},"79":{},"144":{},"148":{},"170":{}},"component":{}}],["env",{"_index":2658,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"140":{},"152":{},"171":{}},"component":{}}],["env.bak",{"_index":2662,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["env.bk",{"_index":3128,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["environ",{"_index":973,"title":{"14-3":{},"55-8":{},"72-8":{},"80-11":{},"80-15":{},"80-19":{},"101-2":{},"146-7":{},"162-7":{},"171-10":{},"171-14":{},"171-18":{}},"name":{},"text":{"13":{},"14":{},"46":{},"55":{},"59":{},"60":{},"62":{},"72":{},"73":{},"75":{},"80":{},"101":{},"102":{},"134":{},"146":{},"149":{},"150":{},"152":{},"162":{},"163":{},"165":{},"166":{},"171":{}},"component":{}}],["enzo",{"_index":6036,"title":{},"name":{},"text":{"78":{},"169":{}},"component":{}}],["equal",{"_index":1887,"title":{},"name":{},"text":{"26":{},"46":{},"51":{},"62":{},"67":{},"114":{},"134":{},"139":{},"152":{},"157":{}},"component":{}}],["equip",{"_index":1355,"title":{},"name":{},"text":{"15":{},"46":{},"55":{},"62":{},"72":{},"80":{},"99":{},"134":{},"146":{},"152":{},"162":{},"171":{}},"component":{}}],["equival",{"_index":2502,"title":{},"name":{},"text":{"45":{},"51":{},"67":{},"133":{},"139":{},"157":{}},"component":{}}],["eras",{"_index":2806,"title":{},"name":{},"text":{"46":{},"51":{},"53":{},"58":{},"59":{},"60":{},"62":{},"67":{},"69":{},"73":{},"80":{},"134":{},"139":{},"143":{},"145":{},"149":{},"150":{},"152":{},"157":{},"159":{},"163":{},"171":{}},"component":{}}],["erase/read/writ",{"_index":4024,"title":{},"name":{},"text":{"53":{},"58":{},"69":{},"143":{},"145":{},"159":{}},"component":{}}],["erases",{"_index":4700,"title":{},"name":{},"text":{"58":{},"145":{}},"component":{}}],["erp",{"_index":516,"title":{"94":{},"6-1":{},"6-3":{},"6-4":{},"6-5":{},"6-6":{},"6-7":{},"6-8":{},"6-9":{},"6-10":{},"6-11":{},"6-12":{},"6-13":{},"6-14":{},"6-15":{},"6-16":{},"6-17":{},"94-2":{},"94-3":{},"94-4":{},"94-5":{},"94-6":{},"94-7":{},"94-8":{},"94-9":{},"94-10":{},"94-11":{},"94-12":{},"94-13":{},"94-14":{},"94-15":{},"94-16":{}},"name":{"6":{},"94":{}},"text":{"6":{},"94":{}},"component":{}}],["erps_serv",{"_index":555,"title":{},"name":{},"text":{"6":{},"94":{}},"component":{}}],["err",{"_index":4753,"title":{},"name":{},"text":{"59":{},"60":{},"73":{},"75":{},"149":{},"150":{},"163":{},"166":{}},"component":{}}],["error",{"_index":1442,"title":{},"name":{},"text":{"15":{},"30":{},"51":{},"52":{},"56":{},"60":{},"67":{},"68":{},"75":{},"85":{},"99":{},"116":{},"139":{},"142":{},"147":{},"150":{},"157":{},"158":{},"166":{},"176":{}},"component":{}}],["errors:0",{"_index":3292,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["es0",{"_index":956,"title":{"172":{},"81-1":{},"81-5":{},"81-6":{},"84-23":{},"172-4":{},"172-5":{},"175-22":{}},"name":{"81":{},"172":{}},"text":{"12":{},"29":{},"36":{},"81":{},"83":{},"84":{},"98":{},"117":{},"124":{},"172":{},"174":{},"175":{}},"component":{}}],["es2",{"_index":2314,"title":{"82-9":{},"173-8":{}},"name":{"82":{},"173":{}},"text":{"36":{},"82":{},"84":{},"124":{},"173":{},"175":{}},"component":{}}],["essenti",{"_index":1043,"title":{},"name":{},"text":{"14":{},"55":{},"72":{},"80":{},"101":{},"146":{},"162":{},"171":{}},"component":{}}],["establish",{"_index":2767,"title":{},"name":{},"text":{"46":{},"54":{},"55":{},"59":{},"62":{},"72":{},"134":{},"144":{},"146":{},"149":{},"152":{},"162":{}},"component":{}}],["et",{"_index":1881,"title":{"36-8":{},"85-8":{},"124-7":{},"176-8":{}},"name":{},"text":{"26":{},"28":{},"36":{},"85":{},"114":{},"115":{},"124":{},"176":{}},"component":{}}],["etag",{"_index":6339,"title":{},"name":{"83":{},"174":{}},"text":{},"component":{}}],["etc",{"_index":1018,"title":{},"name":{},"text":{"14":{},"30":{},"35":{},"46":{},"51":{},"55":{},"62":{},"67":{},"72":{},"85":{},"101":{},"116":{},"123":{},"134":{},"139":{},"146":{},"152":{},"157":{},"162":{},"176":{}},"component":{}}],["etc/inittab",{"_index":4634,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["etc/watchdog.conf",{"_index":5339,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["eth",{"_index":1450,"title":{},"name":{},"text":{"15":{},"51":{},"67":{},"99":{},"139":{},"157":{}},"component":{}}],["eth/ipv4/ipv6",{"_index":2263,"title":{},"name":{},"text":{"33":{},"122":{}},"component":{}}],["eth0",{"_index":121,"title":{},"name":{},"text":{"2":{},"4":{},"6":{},"7":{},"10":{},"12":{},"15":{},"16":{},"19":{},"22":{},"23":{},"26":{},"27":{},"28":{},"29":{},"48":{},"59":{},"60":{},"73":{},"75":{},"81":{},"82":{},"83":{},"84":{},"85":{},"86":{},"87":{},"88":{},"90":{},"92":{},"94":{},"97":{},"98":{},"99":{},"104":{},"105":{},"109":{},"111":{},"112":{},"114":{},"115":{},"117":{},"137":{},"149":{},"150":{},"163":{},"166":{},"172":{},"173":{},"174":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["eth0.400",{"_index":636,"title":{},"name":{},"text":{"6":{},"94":{}},"component":{}}],["eth1",{"_index":215,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"12":{},"16":{},"27":{},"48":{},"85":{},"90":{},"92":{},"94":{},"98":{},"104":{},"112":{},"137":{},"176":{}},"component":{}}],["eth1.400",{"_index":637,"title":{},"name":{},"text":{"6":{},"94":{}},"component":{}}],["eth10",{"_index":4737,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["eth12",{"_index":6302,"title":{},"name":{},"text":{"82":{},"84":{},"86":{},"173":{},"175":{},"177":{}},"component":{}}],["eth2",{"_index":216,"title":{},"name":{},"text":{"4":{},"6":{},"12":{},"16":{},"27":{},"29":{},"48":{},"86":{},"87":{},"90":{},"94":{},"98":{},"104":{},"112":{},"117":{},"137":{},"177":{},"178":{}},"component":{}}],["eth3",{"_index":217,"title":{},"name":{},"text":{"4":{},"6":{},"16":{},"48":{},"81":{},"84":{},"85":{},"87":{},"90":{},"94":{},"104":{},"137":{},"172":{},"175":{},"176":{},"178":{}},"component":{}}],["eth4",{"_index":6596,"title":{},"name":{},"text":{"112":{}},"component":{}}],["eth48",{"_index":6336,"title":{},"name":{},"text":{"82":{},"173":{}},"component":{}}],["eth49",{"_index":6314,"title":{},"name":{},"text":{"82":{},"86":{},"173":{},"177":{}},"component":{}}],["eth_typ",{"_index":1781,"title":{},"name":{},"text":{"22":{},"23":{},"81":{},"86":{},"109":{},"111":{},"172":{},"177":{}},"component":{}}],["ethact=switch@0",{"_index":4770,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["ethaddr",{"_index":3719,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["ethaddr_count",{"_index":3720,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["ethernet",{"_index":183,"title":{},"name":{},"text":{"4":{},"6":{},"10":{},"15":{},"19":{},"27":{},"35":{},"46":{},"57":{},"61":{},"80":{},"85":{},"87":{},"90":{},"94":{},"97":{},"99":{},"105":{},"112":{},"123":{},"134":{},"148":{},"151":{},"171":{},"176":{},"178":{}},"component":{}}],["etherstatsfrag",{"_index":1481,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["etherstatsjabb",{"_index":1482,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["etherstatsoversizepkt",{"_index":1480,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["etherstatspkts1024to1518octet",{"_index":1490,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["etherstatspkts128to255octet",{"_index":1487,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["etherstatspkts1519to10239octet",{"_index":1491,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["etherstatspkts256to511octet",{"_index":1488,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["etherstatspkts512to1023octet",{"_index":1489,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["etherstatspkts64octet",{"_index":1483,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["etherstatspkts65to127octet",{"_index":1485,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["etherstatsundersizepkt",{"_index":1479,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["ethertyp",{"_index":6289,"title":{},"name":{},"text":{"82":{},"84":{},"87":{},"173":{},"175":{},"178":{}},"component":{}}],["ethtool",{"_index":763,"title":{},"name":{},"text":{"10":{},"14":{},"15":{},"30":{},"97":{},"99":{},"101":{},"116":{}},"component":{}}],["ethtool_override_srcdir",{"_index":1222,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["ethtyp",{"_index":6560,"title":{},"name":{},"text":{"87":{},"178":{}},"component":{}}],["etp@e0021000",{"_index":3708,"title":{},"name":{},"text":{"51":{},"139":{}},"component":{}}],["ets(8",{"_index":1884,"title":{},"name":{},"text":{"26":{},"114":{}},"component":{}}],["etyp",{"_index":6329,"title":{},"name":{},"text":{"82":{},"87":{},"173":{},"178":{}},"component":{}}],["eu",{"_index":1103,"title":{},"name":{},"text":{"14":{},"46":{},"62":{},"101":{},"134":{},"152":{}},"component":{}}],["eui64",{"_index":1432,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["ev09d37a",{"_index":5434,"title":{},"name":{},"text":{"61":{},"151":{}},"component":{}}],["ev14y36a",{"_index":6021,"title":{},"name":{},"text":{"77":{},"167":{}},"component":{}}],["ev18w53a",{"_index":5433,"title":{},"name":{},"text":{"61":{},"151":{}},"component":{}}],["ev23x71a",{"_index":5486,"title":{},"name":{},"text":{"62":{},"73":{},"75":{},"77":{},"152":{},"163":{},"165":{},"166":{},"167":{}},"component":{}}],["ev44z97a",{"_index":5435,"title":{},"name":{},"text":{"61":{},"151":{}},"component":{}}],["ev53u25a",{"_index":6712,"title":{},"name":{},"text":{"151":{}},"component":{}}],["ev83e85a",{"_index":5437,"title":{},"name":{},"text":{"61":{},"151":{}},"component":{}}],["eval",{"_index":1252,"title":{},"name":{},"text":{"14":{},"31":{},"34":{},"37":{},"46":{},"54":{},"61":{},"62":{},"77":{},"79":{},"101":{},"119":{},"120":{},"121":{},"134":{},"144":{},"151":{},"152":{},"167":{},"170":{}},"component":{}}],["evalu",{"_index":2203,"title":{"80-10":{},"80-14":{},"171-9":{},"171-13":{}},"name":{},"text":{"31":{},"32":{},"34":{},"37":{},"38":{},"46":{},"55":{},"62":{},"72":{},"77":{},"80":{},"118":{},"119":{},"120":{},"121":{},"125":{},"134":{},"146":{},"152":{},"162":{},"167":{},"171":{}},"component":{}}],["evb",{"_index":2196,"title":{"36-4":{},"61-3":{},"61-4":{},"61-5":{},"61-6":{},"61-7":{},"77-3":{},"77-4":{},"124-3":{},"151-3":{},"151-4":{},"151-5":{},"151-6":{},"151-7":{},"151-8":{},"167-3":{},"167-4":{}},"name":{},"text":{"31":{},"32":{},"33":{},"34":{},"35":{},"37":{},"41":{},"42":{},"54":{},"59":{},"61":{},"64":{},"65":{},"70":{},"73":{},"74":{},"77":{},"79":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"128":{},"129":{},"131":{},"141":{},"144":{},"149":{},"151":{},"154":{},"155":{},"160":{},"163":{},"164":{},"167":{},"170":{}},"component":{}}],["even",{"_index":458,"title":{},"name":{},"text":{"4":{},"14":{},"33":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"46":{},"51":{},"55":{},"62":{},"67":{},"72":{},"86":{},"90":{},"101":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"134":{},"139":{},"146":{},"152":{},"157":{},"162":{},"177":{}},"component":{}}],["event",{"_index":4461,"title":{},"name":{},"text":{"55":{},"59":{},"72":{},"112":{},"146":{},"149":{},"162":{}},"component":{}}],["eventu",{"_index":2318,"title":{},"name":{},"text":{"36":{},"46":{},"62":{},"80":{},"124":{},"134":{},"152":{},"171":{}},"component":{}}],["everyth",{"_index":1301,"title":{},"name":{},"text":{"14":{},"23":{},"46":{},"55":{},"62":{},"72":{},"101":{},"111":{},"134":{},"146":{},"152":{},"162":{}},"component":{}}],["exact",{"_index":669,"title":{},"name":{},"text":{"7":{},"51":{},"67":{},"92":{},"139":{},"157":{}},"component":{}}],["exactli",{"_index":6481,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["examin",{"_index":6399,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["exampl",{"_index":473,"title":{"93":{},"5-1":{},"12-9":{},"14-17":{},"45-8":{},"45-11":{},"47-6":{},"48-6":{},"48-9":{},"49-6":{},"49-9":{},"50-6":{},"50-9":{},"51-5":{},"51-8":{},"52-6":{},"52-9":{},"53-6":{},"53-9":{},"57-9":{},"58-6":{},"58-9":{},"59-5":{},"59-8":{},"60-6":{},"60-9":{},"60-10":{},"63-6":{},"64-6":{},"65-6":{},"66-6":{},"66-9":{},"67-5":{},"67-8":{},"68-6":{},"69-6":{},"69-9":{},"70-6":{},"71-6":{},"73-6":{},"73-9":{},"74-6":{},"75-6":{},"81-4":{},"84-17":{},"84-22":{},"84-27":{},"86-13":{},"98-8":{},"101-16":{},"133-7":{},"133-10":{},"135-5":{},"136-5":{},"136-8":{},"137-5":{},"137-8":{},"138-5":{},"138-8":{},"139-4":{},"139-7":{},"142-5":{},"142-8":{},"143-5":{},"143-8":{},"145-5":{},"145-8":{},"148-8":{},"149-4":{},"149-7":{},"150-5":{},"150-8":{},"150-9":{},"153-5":{},"154-5":{},"155-5":{},"156-5":{},"156-8":{},"157-4":{},"157-7":{},"158-5":{},"159-5":{},"159-8":{},"160-5":{},"161-5":{},"163-5":{},"163-8":{},"164-5":{},"166-5":{},"172-3":{},"175-16":{},"175-21":{},"175-26":{},"177-12":{}},"name":{},"text":{"4":{},"10":{},"12":{},"14":{},"16":{},"18":{},"23":{},"26":{},"27":{},"28":{},"29":{},"30":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"55":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"80":{},"81":{},"82":{},"84":{},"85":{},"86":{},"87":{},"90":{},"97":{},"98":{},"101":{},"103":{},"104":{},"111":{},"112":{},"114":{},"115":{},"116":{},"117":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"140":{},"142":{},"143":{},"145":{},"146":{},"148":{},"149":{},"150":{},"151":{},"152":{},"153":{},"154":{},"155":{},"156":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"171":{},"172":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["exce",{"_index":1747,"title":{},"name":{},"text":{"22":{},"23":{},"28":{},"85":{},"109":{},"111":{},"115":{},"176":{}},"component":{}}],["except",{"_index":1659,"title":{},"name":{},"text":{"16":{},"55":{},"62":{},"72":{},"84":{},"104":{},"146":{},"152":{},"162":{},"175":{}},"component":{}}],["execut",{"_index":15,"title":{},"name":{},"text":{"1":{},"6":{},"14":{},"27":{},"46":{},"54":{},"55":{},"57":{},"59":{},"62":{},"72":{},"73":{},"79":{},"80":{},"81":{},"84":{},"89":{},"94":{},"101":{},"112":{},"134":{},"144":{},"146":{},"148":{},"149":{},"152":{},"162":{},"163":{},"165":{},"170":{},"171":{},"172":{},"175":{}},"component":{}}],["exemplari",{"_index":4464,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["exist",{"_index":1254,"title":{},"name":{},"text":{"14":{},"16":{},"29":{},"36":{},"46":{},"51":{},"54":{},"55":{},"62":{},"67":{},"72":{},"79":{},"84":{},"85":{},"101":{},"104":{},"112":{},"117":{},"124":{},"134":{},"139":{},"144":{},"146":{},"152":{},"157":{},"162":{},"165":{},"170":{},"175":{},"176":{}},"component":{}}],["exit",{"_index":1302,"title":{},"name":{},"text":{"14":{},"55":{},"60":{},"75":{},"101":{},"146":{},"150":{},"166":{}},"component":{}}],["expand",{"_index":2305,"title":{},"name":{},"text":{"36":{},"124":{}},"component":{}}],["expans",{"_index":5429,"title":{},"name":{},"text":{"61":{},"151":{}},"component":{}}],["expect",{"_index":683,"title":{},"name":{},"text":{"7":{},"10":{},"12":{},"14":{},"16":{},"45":{},"46":{},"51":{},"55":{},"62":{},"67":{},"80":{},"84":{},"85":{},"92":{},"97":{},"98":{},"101":{},"104":{},"112":{},"133":{},"134":{},"139":{},"146":{},"152":{},"157":{},"171":{},"175":{},"176":{}},"component":{}}],["experi",{"_index":4404,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["expir",{"_index":620,"title":{},"name":{},"text":{"6":{},"94":{}},"component":{}}],["explain",{"_index":790,"title":{},"name":{},"text":{"10":{},"12":{},"22":{},"46":{},"49":{},"55":{},"58":{},"62":{},"65":{},"71":{},"72":{},"80":{},"83":{},"84":{},"97":{},"98":{},"109":{},"134":{},"136":{},"141":{},"145":{},"146":{},"152":{},"154":{},"161":{},"162":{},"171":{},"174":{},"175":{}},"component":{}}],["explan",{"_index":3010,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"72":{},"134":{},"146":{},"152":{},"162":{}},"component":{}}],["explicitli",{"_index":747,"title":{},"name":{},"text":{"9":{},"23":{},"55":{},"72":{},"96":{},"111":{},"146":{},"162":{},"165":{}},"component":{}}],["explictli",{"_index":4270,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["export",{"_index":3963,"title":{},"name":{},"text":{"52":{},"68":{},"142":{},"158":{}},"component":{}}],["expos",{"_index":2264,"title":{},"name":{},"text":{"33":{},"55":{},"61":{},"72":{},"112":{},"122":{},"146":{},"151":{},"162":{}},"component":{}}],["exposur",{"_index":4435,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["express",{"_index":1159,"title":{},"name":{},"text":{"14":{},"46":{},"55":{},"62":{},"72":{},"101":{},"134":{},"146":{},"152":{},"162":{}},"component":{}}],["ext",{"_index":1815,"title":{},"name":{},"text":{"23":{},"84":{},"86":{},"111":{},"175":{},"177":{}},"component":{}}],["ext2",{"_index":2726,"title":{},"name":{},"text":{"46":{},"50":{},"62":{},"66":{},"134":{},"138":{},"152":{},"156":{}},"component":{}}],["ext2,ext3,ext4",{"_index":3700,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["ext4",{"_index":1026,"title":{"46-26":{},"46-29":{},"46-30":{},"46-53":{},"62-26":{},"62-29":{},"62-30":{},"62-52":{},"134-25":{},"134-28":{},"134-29":{},"134-52":{},"152-25":{},"152-28":{},"152-29":{},"152-51":{}},"name":{},"text":{"14":{},"46":{},"62":{},"66":{},"74":{},"80":{},"101":{},"134":{},"141":{},"152":{},"156":{},"164":{},"165":{},"171":{}},"component":{}}],["ext4.gz",{"_index":3031,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["extend",{"_index":2315,"title":{},"name":{},"text":{"36":{},"50":{},"55":{},"66":{},"72":{},"124":{},"138":{},"146":{},"156":{},"162":{}},"component":{}}],["extens",{"_index":1721,"title":{},"name":{},"text":{"18":{},"59":{},"103":{},"149":{}},"component":{}}],["extern",{"_index":39,"title":{"141":{},"40-5":{},"43-8":{},"127-4":{},"130-7":{}},"name":{},"text":{"1":{},"14":{},"40":{},"54":{},"55":{},"61":{},"72":{},"77":{},"79":{},"80":{},"84":{},"89":{},"101":{},"112":{},"127":{},"131":{},"144":{},"146":{},"151":{},"162":{},"167":{},"170":{},"171":{},"175":{}},"component":{}}],["extern_learn",{"_index":341,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["external/config",{"_index":1146,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["external/config.in",{"_index":1257,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["external/packag",{"_index":1147,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["external/package/mscc",{"_index":1237,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["external/support/misc/mscc",{"_index":1120,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["external/support/script",{"_index":1208,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["external/support/scripts/imggen.rb",{"_index":1210,"title":{},"name":{},"text":{"14":{},"80":{},"101":{},"171":{}},"component":{}}],["extra",{"_index":1197,"title":{},"name":{},"text":{"14":{},"27":{},"46":{},"62":{},"101":{},"112":{},"134":{},"152":{},"165":{}},"component":{}}],["extra1",{"_index":4184,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["extra2",{"_index":4185,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["extract",{"_index":1113,"title":{},"name":{},"text":{"14":{},"46":{},"55":{},"59":{},"62":{},"72":{},"86":{},"87":{},"101":{},"134":{},"146":{},"149":{},"152":{},"162":{},"177":{},"178":{}},"component":{}}],["f",{"_index":1172,"title":{},"name":{},"text":{"14":{},"15":{},"27":{},"49":{},"53":{},"59":{},"60":{},"65":{},"69":{},"75":{},"80":{},"99":{},"101":{},"112":{},"136":{},"143":{},"149":{},"150":{},"154":{},"159":{},"165":{},"166":{},"171":{}},"component":{}}],["f0",{"_index":5591,"title":{},"name":{},"text":{"65":{},"154":{}},"component":{}}],["f2011135196",{"_index":5585,"title":{},"name":{},"text":{"65":{},"154":{}},"component":{}}],["f226556ade32",{"_index":6143,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["f4",{"_index":6735,"title":{},"name":{},"text":{"165":{}},"component":{}}],["fabric",{"_index":3415,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"65":{},"71":{},"73":{},"136":{},"145":{},"149":{},"154":{},"161":{},"163":{}},"component":{}}],["fabric_clk",{"_index":5563,"title":{},"name":{},"text":{"65":{},"71":{},"73":{},"154":{},"161":{},"163":{}},"component":{}}],["facil",{"_index":2593,"title":{"80-4":{},"171-3":{}},"name":{},"text":{"46":{},"55":{},"62":{},"72":{},"80":{},"134":{},"146":{},"152":{},"162":{},"171":{}},"component":{}}],["facilit",{"_index":4314,"title":{},"name":{},"text":{"55":{},"146":{}},"component":{}}],["fact",{"_index":4245,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["factori",{"_index":4372,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["fail",{"_index":363,"title":{},"name":{},"text":{"4":{},"41":{},"46":{},"55":{},"56":{},"59":{},"62":{},"72":{},"90":{},"128":{},"134":{},"146":{},"147":{},"149":{},"152":{},"162":{}},"component":{}}],["faill",{"_index":6605,"title":{},"name":{},"text":{"112":{}},"component":{}}],["failur",{"_index":436,"title":{},"name":{},"text":{"4":{},"6":{},"90":{},"94":{}},"component":{}}],["fairli",{"_index":6255,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["fall",{"_index":496,"title":{},"name":{},"text":{"4":{},"90":{},"112":{}},"component":{}}],["fallback",{"_index":2760,"title":{},"name":{},"text":{"46":{},"55":{},"57":{},"62":{},"80":{},"134":{},"146":{},"148":{},"152":{},"171":{}},"component":{}}],["famili",{"_index":2588,"title":{"61-1":{},"77-1":{},"151-1":{},"167-1":{}},"name":{},"text":{"46":{},"55":{},"59":{},"61":{},"72":{},"77":{},"80":{},"134":{},"146":{},"149":{},"151":{},"162":{},"167":{},"171":{}},"component":{}}],["familiar",{"_index":975,"title":{},"name":{},"text":{"13":{},"102":{}},"component":{}}],["fan",{"_index":5660,"title":{},"name":{},"text":{"68":{},"158":{}},"component":{}}],["fan_pin",{"_index":5665,"title":{},"name":{},"text":{"68":{},"158":{}},"component":{}}],["far",{"_index":1718,"title":{},"name":{},"text":{"18":{},"46":{},"62":{},"103":{},"134":{},"152":{}},"component":{}}],["fast",{"_index":393,"title":{},"name":{},"text":{"4":{},"46":{},"59":{},"62":{},"80":{},"90":{},"134":{},"149":{},"152":{},"171":{}},"component":{}}],["faster",{"_index":492,"title":{},"name":{},"text":{"4":{},"45":{},"62":{},"80":{},"90":{},"133":{},"152":{},"171":{}},"component":{}}],["fastleav",{"_index":1404,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["fat16",{"_index":3619,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["fault",{"_index":568,"title":{},"name":{},"text":{"6":{},"7":{},"17":{},"70":{},"87":{},"92":{},"94":{},"106":{},"160":{},"178":{}},"component":{}}],["fc",{"_index":5571,"title":{},"name":{},"text":{"65":{},"68":{},"71":{},"73":{},"154":{},"158":{},"161":{},"163":{}},"component":{}}],["fc0",{"_index":5439,"title":{},"name":{},"text":{"62":{},"73":{},"152":{},"163":{}},"component":{}}],["fc0_a",{"_index":3828,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["fc0_a_rxd_pin",{"_index":3349,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["fc0_a_sck_pin",{"_index":4642,"title":{},"name":{},"text":{"58":{},"145":{}},"component":{}}],["fc0_a_txd_pin",{"_index":3351,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["fc0_b",{"_index":3842,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["fc0_b_rxd_pin",{"_index":3353,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["fc0_b_sck_pin",{"_index":4644,"title":{},"name":{},"text":{"58":{},"145":{}},"component":{}}],["fc0_b_txd_pin",{"_index":3355,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["fc0_c",{"_index":3911,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["fc0_c_rxd_pin",{"_index":3357,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["fc0_c_sck_pin",{"_index":4646,"title":{},"name":{},"text":{"58":{},"145":{}},"component":{}}],["fc0_c_txd_pin",{"_index":3359,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["fc0_pin",{"_index":5825,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["fc1_a",{"_index":3831,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["fc1_a_rxd_pin",{"_index":3361,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["fc1_a_sck_pin",{"_index":4648,"title":{},"name":{},"text":{"58":{},"145":{}},"component":{}}],["fc1_a_txd_pin",{"_index":3363,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["fc1_b",{"_index":3856,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["fc1_b_rxd_pin",{"_index":3365,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["fc1_b_sck_pin",{"_index":4650,"title":{},"name":{},"text":{"58":{},"145":{}},"component":{}}],["fc1_b_txd_pin",{"_index":3367,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["fc1_c",{"_index":3884,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["fc1_c_rxd_pin",{"_index":3369,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["fc1_c_sck_pin",{"_index":4652,"title":{},"name":{},"text":{"58":{},"145":{}},"component":{}}],["fc1_c_txd_pin",{"_index":3371,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["fc2",{"_index":5770,"title":{},"name":{},"text":{"71":{},"73":{},"161":{},"163":{}},"component":{}}],["fc2_a",{"_index":3834,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["fc2_a_rxd_pin",{"_index":3373,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["fc2_a_sck_pin",{"_index":4654,"title":{},"name":{},"text":{"58":{},"145":{}},"component":{}}],["fc2_a_txd_pin",{"_index":3375,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["fc2_b",{"_index":3877,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["fc2_b_rxd_pin",{"_index":3377,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["fc2_b_sck_pin",{"_index":4656,"title":{},"name":{},"text":{"58":{},"145":{}},"component":{}}],["fc2_b_txd_pin",{"_index":3379,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["fc2_pin",{"_index":5769,"title":{},"name":{},"text":{"71":{},"73":{},"161":{},"163":{}},"component":{}}],["fc3",{"_index":2618,"title":{"54-4":{},"144-3":{}},"name":{},"text":{"46":{},"55":{},"65":{},"73":{},"134":{},"146":{},"154":{},"163":{}},"component":{}}],["fc3_a",{"_index":3839,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["fc3_a_rxd_pin",{"_index":3381,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["fc3_a_sck_pin",{"_index":4658,"title":{},"name":{},"text":{"58":{},"145":{}},"component":{}}],["fc3_a_txd_pin",{"_index":3383,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["fc3_b",{"_index":3891,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["fc3_b_rxd_pin",{"_index":3385,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["fc3_b_sck_pin",{"_index":4660,"title":{},"name":{},"text":{"58":{},"145":{}},"component":{}}],["fc3_b_txd_pin",{"_index":3387,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["fc3_c",{"_index":3850,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["fc3_c_rxd_pin",{"_index":3389,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["fc3_c_sck_pin",{"_index":4661,"title":{},"name":{},"text":{"58":{},"145":{}},"component":{}}],["fc3_c_txd_pin",{"_index":3391,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["fc3_pin",{"_index":5568,"title":{},"name":{},"text":{"65":{},"73":{},"154":{},"163":{}},"component":{}}],["fc4_a",{"_index":3841,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["fc4_a_rxd_pin",{"_index":3393,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["fc4_a_sck_pin",{"_index":4663,"title":{},"name":{},"text":{"58":{},"145":{}},"component":{}}],["fc4_a_txd_pin",{"_index":3395,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["fc4_b",{"_index":3899,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["fc4_b_rxd_pin",{"_index":3397,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["fc4_b_sck_pin",{"_index":4665,"title":{},"name":{},"text":{"58":{},"145":{}},"component":{}}],["fc4_b_txd_pin",{"_index":3399,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["fc4_c",{"_index":3916,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["fc4_c_rxd_pin",{"_index":3401,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["fc4_c_sck_pin",{"_index":4667,"title":{},"name":{},"text":{"58":{},"145":{}},"component":{}}],["fc4_c_txd_pin",{"_index":3403,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["fc_shrd",{"_index":5648,"title":{},"name":{},"text":{"68":{},"158":{}},"component":{}}],["fc_shrd0",{"_index":3863,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["fc_shrd1",{"_index":3870,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["fc_shrd10",{"_index":3900,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["fc_shrd11",{"_index":3901,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["fc_shrd12",{"_index":3903,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["fc_shrd13",{"_index":3913,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["fc_shrd14",{"_index":3915,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["fc_shrd15",{"_index":3917,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["fc_shrd16",{"_index":3890,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["fc_shrd17",{"_index":3927,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["fc_shrd18",{"_index":3928,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["fc_shrd19",{"_index":3930,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["fc_shrd2",{"_index":3873,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["fc_shrd20",{"_index":3931,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["fc_shrd3",{"_index":3875,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["fc_shrd4",{"_index":3885,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["fc_shrd5",{"_index":3886,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["fc_shrd6",{"_index":3887,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["fc_shrd7",{"_index":3888,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["fc_shrd8",{"_index":3896,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["fc_shrd9",{"_index":3897,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["fcx",{"_index":3188,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["fd",{"_index":5554,"title":{},"name":{},"text":{"64":{},"155":{},"165":{}},"component":{}}],["fd(control",{"_index":3244,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["fdb",{"_index":318,"title":{},"name":{},"text":{"4":{},"12":{},"16":{},"90":{},"98":{},"104":{}},"component":{}}],["fdisk",{"_index":3140,"title":{},"name":{},"text":{"46":{},"50":{},"62":{},"66":{},"134":{},"138":{},"152":{},"156":{}},"component":{}}],["fdt",{"_index":2925,"title":{},"name":{},"text":{"46":{},"55":{},"59":{},"62":{},"72":{},"73":{},"134":{},"140":{},"146":{},"149":{},"152":{},"162":{},"163":{},"165":{}},"component":{}}],["fdt_high",{"_index":3011,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["fdt_high=0xffffffff",{"_index":2878,"title":{},"name":{},"text":{"46":{},"59":{},"62":{},"134":{},"149":{},"152":{}},"component":{}}],["fdt_lan9662_ung8290_0_at_lan966x",{"_index":4202,"title":{},"name":{},"text":{"55":{},"146":{}},"component":{}}],["fdt_lan9662_ung8291_0_at_lan966x",{"_index":4199,"title":{},"name":{},"text":{"55":{},"59":{},"146":{},"149":{}},"component":{}}],["fdt_lan9668_ung8385_sa_lan8840_0_at_lan966x",{"_index":6651,"title":{},"name":{},"text":{"140":{}},"component":{}}],["fdt_lan9668_ung8385_sb_lan8840_0_at_lan966x",{"_index":6648,"title":{},"name":{},"text":{"140":{}},"component":{}}],["fdt_lan9698_ev23x71a_0_at_lan969x",{"_index":5805,"title":{},"name":{},"text":{"72":{},"73":{},"162":{},"163":{},"165":{}},"component":{}}],["fdt_pcb134",{"_index":5802,"title":{},"name":{},"text":{"72":{},"162":{}},"component":{}}],["fdt_updat",{"_index":5526,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["fdt_update=fdt",{"_index":5519,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["fdtcontroladdr=77ffce2d0",{"_index":6223,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["fdtcontroladdr=77ffd0310",{"_index":6158,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["fdtcontroladdr=9fb7e068",{"_index":4771,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["fe80::240:42ff:fe04:989b/64",{"_index":1341,"title":{},"name":{},"text":{"15":{},"19":{},"99":{},"105":{}},"component":{}}],["fe80::cc8f:1ff:fe4b:10c9/64",{"_index":270,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["fe:13:e4:88:b1:21",{"_index":3331,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["fe:13:e4:88:b1:22",{"_index":3332,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["fe:13:e4:88:b1:23",{"_index":3333,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["fe:13:e4:88:b1:24",{"_index":3334,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["feat_di",{"_index":4338,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["feat_id",{"_index":3782,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["featur",{"_index":547,"title":{"33-3":{},"35-3":{},"36-3":{},"38-6":{},"39-3":{},"40-4":{},"41-4":{},"42-4":{},"43-4":{},"122-2":{},"123-2":{},"124-2":{},"125-5":{},"126-2":{},"127-3":{},"128-3":{},"129-3":{},"130-3":{}},"name":{},"text":{"6":{},"17":{},"27":{},"30":{},"31":{},"34":{},"36":{},"37":{},"43":{},"46":{},"55":{},"56":{},"61":{},"62":{},"72":{},"77":{},"85":{},"94":{},"106":{},"112":{},"116":{},"119":{},"120":{},"121":{},"124":{},"130":{},"131":{},"134":{},"146":{},"147":{},"151":{},"152":{},"162":{},"165":{},"167":{},"176":{}},"component":{}}],["fec",{"_index":1367,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["fed",{"_index":5389,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["feed",{"_index":4297,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["few",{"_index":4083,"title":{},"name":{},"text":{"54":{},"55":{},"72":{},"79":{},"144":{},"146":{},"162":{},"170":{}},"component":{}}],["fewer",{"_index":6380,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["ff",{"_index":3770,"title":{},"name":{},"text":{"51":{},"53":{},"65":{},"67":{},"69":{},"139":{},"143":{},"154":{},"157":{},"159":{}},"component":{}}],["ff:ff:ff:ff:ff:ff",{"_index":238,"title":{},"name":{},"text":{"4":{},"12":{},"15":{},"19":{},"48":{},"90":{},"98":{},"99":{},"105":{},"137":{}},"component":{}}],["fi",{"_index":2915,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["field",{"_index":398,"title":{},"name":{},"text":{"4":{},"12":{},"14":{},"29":{},"46":{},"51":{},"54":{},"55":{},"62":{},"67":{},"72":{},"79":{},"82":{},"84":{},"86":{},"87":{},"90":{},"98":{},"101":{},"117":{},"134":{},"139":{},"144":{},"146":{},"152":{},"157":{},"162":{},"165":{},"170":{},"173":{},"175":{},"177":{},"178":{}},"component":{}}],["fifo",{"_index":3432,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"69":{},"136":{},"145":{},"149":{},"159":{}},"component":{}}],["figur",{"_index":4409,"title":{},"name":{},"text":{"55":{},"72":{},"80":{},"84":{},"146":{},"162":{},"171":{},"175":{}},"component":{}}],["file",{"_index":818,"title":{"46-44":{},"62-43":{},"134-43":{},"152-42":{},"165-8":{}},"name":{},"text":{"10":{},"13":{},"14":{},"18":{},"27":{},"32":{},"36":{},"40":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"60":{},"62":{},"63":{},"64":{},"66":{},"67":{},"68":{},"69":{},"70":{},"72":{},"74":{},"75":{},"79":{},"80":{},"97":{},"101":{},"102":{},"103":{},"112":{},"118":{},"124":{},"127":{},"130":{},"133":{},"134":{},"135":{},"137":{},"138":{},"139":{},"141":{},"142":{},"143":{},"144":{},"146":{},"147":{},"148":{},"150":{},"152":{},"153":{},"155":{},"156":{},"157":{},"158":{},"159":{},"160":{},"162":{},"164":{},"165":{},"166":{},"170":{},"171":{}},"component":{}}],["file/docu",{"_index":4448,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["fileaddr",{"_index":2973,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["fileaddr=64000000",{"_index":4772,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["filenam",{"_index":2781,"title":{},"name":{},"text":{"46":{},"59":{},"62":{},"80":{},"134":{},"149":{},"152":{},"171":{}},"component":{}}],["files",{"_index":2946,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["files.md5",{"_index":1329,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["filesize=108d517",{"_index":4773,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["filesize_512",{"_index":2948,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["filesystem",{"_index":1027,"title":{},"name":{},"text":{"14":{},"46":{},"50":{},"60":{},"62":{},"66":{},"74":{},"75":{},"80":{},"101":{},"131":{},"134":{},"138":{},"150":{},"152":{},"156":{},"164":{},"166":{},"171":{}},"component":{}}],["fill",{"_index":4277,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["filter",{"_index":354,"title":{"111":{},"23-1":{},"81-4":{},"84-8":{},"85-13":{},"85-14":{},"85-15":{},"85-16":{},"85-18":{},"86-13":{},"172-3":{},"175-7":{},"176-13":{},"176-14":{},"176-15":{},"176-16":{},"176-18":{},"177-12":{}},"name":{},"text":{"4":{},"7":{},"9":{},"17":{},"22":{},"23":{},"31":{},"34":{},"36":{},"38":{},"49":{},"65":{},"73":{},"81":{},"82":{},"84":{},"85":{},"86":{},"87":{},"90":{},"92":{},"96":{},"106":{},"109":{},"111":{},"119":{},"121":{},"124":{},"125":{},"136":{},"154":{},"163":{},"172":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["filterid",{"_index":6400,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["final",{"_index":846,"title":{},"name":{},"text":{"12":{},"26":{},"55":{},"72":{},"80":{},"81":{},"86":{},"87":{},"98":{},"114":{},"146":{},"162":{},"165":{},"171":{},"172":{},"177":{},"178":{}},"component":{}}],["find",{"_index":1317,"title":{},"name":{},"text":{"14":{},"18":{},"40":{},"41":{},"42":{},"43":{},"51":{},"54":{},"55":{},"67":{},"70":{},"72":{},"79":{},"80":{},"101":{},"103":{},"127":{},"128":{},"129":{},"130":{},"131":{},"139":{},"141":{},"144":{},"146":{},"157":{},"160":{},"162":{},"170":{},"171":{}},"component":{}}],["fine",{"_index":512,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["finish",{"_index":4081,"title":{},"name":{},"text":{"54":{},"79":{},"144":{},"170":{}},"component":{}}],["fip",{"_index":2558,"title":{"46-31":{},"46-52":{},"54-5":{},"54-7":{},"55-5":{},"55-6":{},"62-31":{},"62-51":{},"72-5":{},"72-6":{},"79-6":{},"79-8":{},"134-30":{},"134-51":{},"144-4":{},"144-6":{},"146-4":{},"146-5":{},"152-30":{},"152-50":{},"162-4":{},"162-5":{},"170-5":{},"170-7":{}},"name":{},"text":{"46":{},"54":{},"55":{},"56":{},"62":{},"72":{},"79":{},"134":{},"144":{},"146":{},"147":{},"152":{},"162":{},"170":{}},"component":{}}],["fip.bak",{"_index":2647,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"72":{},"134":{},"146":{},"152":{},"162":{}},"component":{}}],["fip.bin",{"_index":2754,"title":{},"name":{},"text":{"46":{},"62":{},"72":{},"134":{},"152":{},"162":{}},"component":{}}],["fip.bk",{"_index":5514,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["fip0",{"_index":3029,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["fip1",{"_index":3030,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["fip_align",{"_index":4544,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["fip_fw",{"_index":2952,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["fip_fw=lan966x_b0.fip",{"_index":2950,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["fip_fw=lan969x_a0.fip",{"_index":5521,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["fip_fw_dl",{"_index":2961,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["fip_fw_dl=dhcp",{"_index":2951,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["fip_linux.bin",{"_index":5799,"title":{},"name":{},"text":{"72":{},"162":{}},"component":{}}],["fiptool",{"_index":4139,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["fireant_pcb*.bin",{"_index":6154,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["firewal",{"_index":5238,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["firmwar",{"_index":2351,"title":{"55-5":{},"55-26":{},"55-43":{},"56-7":{},"72-5":{},"72-26":{},"72-35":{},"146-4":{},"146-25":{},"146-42":{},"147-6":{},"162-4":{},"162-25":{},"162-34":{},"165-2":{}},"name":{},"text":{"38":{},"46":{},"54":{},"55":{},"56":{},"62":{},"72":{},"75":{},"79":{},"125":{},"134":{},"144":{},"146":{},"147":{},"152":{},"162":{},"165":{},"166":{},"170":{}},"component":{}}],["firmware/releas",{"_index":2700,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"72":{},"134":{},"146":{},"152":{},"162":{}},"component":{}}],["first",{"_index":308,"title":{},"name":{},"text":{"4":{},"7":{},"9":{},"14":{},"15":{},"16":{},"22":{},"26":{},"27":{},"29":{},"45":{},"46":{},"50":{},"51":{},"54":{},"55":{},"56":{},"59":{},"62":{},"66":{},"67":{},"72":{},"73":{},"74":{},"79":{},"80":{},"81":{},"82":{},"84":{},"85":{},"86":{},"87":{},"90":{},"92":{},"99":{},"101":{},"104":{},"109":{},"112":{},"114":{},"117":{},"133":{},"134":{},"138":{},"139":{},"141":{},"144":{},"146":{},"147":{},"149":{},"152":{},"156":{},"157":{},"162":{},"163":{},"164":{},"165":{},"170":{},"171":{},"172":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["first_cid",{"_index":2075,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["first_step_threshold",{"_index":1986,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["first_valid_addr",{"_index":2079,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["fis_act=${act",{"_index":2932,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["fit",{"_index":1014,"title":{"46-27":{},"62-27":{},"134-26":{},"152-26":{},"165-6":{}},"name":{},"text":{"14":{},"43":{},"46":{},"55":{},"59":{},"62":{},"72":{},"73":{},"75":{},"80":{},"101":{},"130":{},"131":{},"134":{},"140":{},"146":{},"149":{},"152":{},"162":{},"163":{},"165":{},"166":{},"171":{}},"component":{}}],["fit.it",{"_index":5484,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["fit.itb",{"_index":1198,"title":{},"name":{},"text":{"14":{},"46":{},"62":{},"101":{},"134":{},"152":{},"165":{}},"component":{}}],["fit/itb",{"_index":4091,"title":{"55-13":{},"72-13":{},"146-12":{},"162-12":{}},"name":{},"text":{},"component":{}}],["fit_config",{"_index":3817,"title":{},"name":{},"text":{"51":{},"55":{},"67":{},"72":{},"139":{},"146":{},"157":{},"162":{}},"component":{}}],["fit_icpu.itb",{"_index":4756,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["fix",{"_index":2208,"title":{},"name":{},"text":{"31":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"51":{},"55":{},"60":{},"67":{},"72":{},"75":{},"85":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"139":{},"146":{},"150":{},"157":{},"162":{},"166":{},"176":{}},"component":{}}],["flag",{"_index":301,"title":{},"name":{},"text":{"4":{},"22":{},"23":{},"26":{},"51":{},"55":{},"67":{},"72":{},"85":{},"86":{},"90":{},"109":{},"111":{},"114":{},"139":{},"146":{},"157":{},"162":{},"176":{},"177":{}},"component":{}}],["flash",{"_index":2572,"title":{"46-40":{},"62-39":{},"134-39":{},"152-38":{}},"name":{},"text":{"46":{},"49":{},"53":{},"54":{},"55":{},"58":{},"59":{},"60":{},"61":{},"62":{},"65":{},"69":{},"71":{},"72":{},"77":{},"79":{},"80":{},"134":{},"136":{},"143":{},"144":{},"145":{},"146":{},"149":{},"150":{},"151":{},"152":{},"154":{},"159":{},"161":{},"162":{},"167":{},"170":{},"171":{}},"component":{}}],["flash...don",{"_index":6259,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["flash...writ",{"_index":6258,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["flash@0",{"_index":3118,"title":{},"name":{},"text":{"46":{},"53":{},"58":{},"62":{},"69":{},"134":{},"143":{},"145":{},"152":{},"159":{}},"component":{}}],["flash_eras",{"_index":4025,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["flasher",{"_index":4080,"title":{},"name":{},"text":{"54":{},"79":{},"144":{},"170":{}},"component":{}}],["flashload",{"_index":5169,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["flat",{"_index":4188,"title":{},"name":{},"text":{"55":{},"59":{},"72":{},"73":{},"146":{},"149":{},"162":{},"163":{}},"component":{}}],["flat_dt",{"_index":4201,"title":{},"name":{},"text":{"55":{},"72":{},"140":{},"146":{},"162":{}},"component":{}}],["flatten",{"_index":1015,"title":{},"name":{},"text":{"14":{},"46":{},"55":{},"59":{},"62":{},"72":{},"73":{},"101":{},"134":{},"146":{},"149":{},"152":{},"162":{},"163":{}},"component":{}}],["flavor",{"_index":5513,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["flavour",{"_index":2743,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["flaw",{"_index":2360,"title":{},"name":{},"text":{"38":{},"125":{}},"component":{}}],["flex",{"_index":1052,"title":{},"name":{},"text":{"14":{},"46":{},"62":{},"101":{},"134":{},"152":{}},"component":{}}],["flexcom",{"_index":3208,"title":{"47":{},"63":{},"135":{},"153":{},"47-1":{},"59-9":{},"59-10":{},"63-1":{},"73-10":{},"149-8":{},"149-9":{},"163-9":{}},"name":{"47":{},"63":{},"135":{},"153":{}},"text":{"47":{},"49":{},"58":{},"59":{},"63":{},"65":{},"66":{},"71":{},"73":{},"135":{},"136":{},"145":{},"149":{},"153":{},"154":{},"156":{},"161":{},"163":{}},"component":{}}],["flexcom.txt",{"_index":3236,"title":{},"name":{},"text":{"47":{},"135":{}},"component":{}}],["flexcom0",{"_index":4704,"title":{"59-11":{},"59-12":{},"149-10":{},"149-11":{}},"name":{},"text":{"59":{},"62":{},"73":{},"149":{},"152":{},"163":{}},"component":{}}],["flexcom2",{"_index":3237,"title":{},"name":{},"text":{"47":{},"63":{},"135":{},"153":{}},"component":{}}],["flexcom3",{"_index":2643,"title":{},"name":{},"text":{"46":{},"47":{},"54":{},"55":{},"59":{},"63":{},"134":{},"135":{},"144":{},"146":{},"149":{},"153":{}},"component":{}}],["flexcom@e0060000",{"_index":3239,"title":{},"name":{},"text":{"47":{},"63":{},"135":{},"153":{}},"component":{}}],["flexcom@e0064000",{"_index":3242,"title":{},"name":{},"text":{"47":{},"63":{},"135":{},"153":{}},"component":{}}],["flexcom_shared[0",{"_index":3221,"title":{},"name":{},"text":{"47":{},"63":{},"135":{},"153":{}},"component":{}}],["flexcomm",{"_index":1742,"title":{"21-2":{},"108-1":{}},"name":{},"text":{},"component":{}}],["flexcoms(flex",{"_index":3209,"title":{},"name":{},"text":{"47":{},"49":{},"58":{},"59":{},"135":{},"136":{},"145":{},"149":{}},"component":{}}],["flexibl",{"_index":2742,"title":{},"name":{},"text":{"46":{},"48":{},"62":{},"63":{},"64":{},"65":{},"71":{},"73":{},"85":{},"134":{},"137":{},"152":{},"153":{},"154":{},"155":{},"161":{},"163":{},"176":{}},"component":{}}],["fli",{"_index":4143,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["float",{"_index":5003,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["flood",{"_index":852,"title":{},"name":{},"text":{"12":{},"15":{},"16":{},"98":{},"99":{},"104":{}},"component":{}}],["flood_dis",{"_index":927,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["flow",{"_index":830,"title":{"12-7":{},"15-7":{},"15-8":{},"98-6":{},"99-6":{},"99-7":{}},"name":{},"text":{"12":{},"15":{},"17":{},"23":{},"31":{},"34":{},"46":{},"59":{},"62":{},"85":{},"98":{},"99":{},"106":{},"111":{},"119":{},"121":{},"134":{},"149":{},"152":{},"176":{}},"component":{}}],["flower",{"_index":877,"title":{"84-9":{},"85-16":{},"175-8":{},"176-16":{}},"name":{"84":{},"175":{}},"text":{"12":{},"22":{},"23":{},"29":{},"36":{},"81":{},"82":{},"84":{},"85":{},"86":{},"87":{},"98":{},"109":{},"111":{},"117":{},"124":{},"172":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["flx0",{"_index":3225,"title":{},"name":{},"text":{"47":{},"49":{},"58":{},"59":{},"63":{},"65":{},"71":{},"73":{},"135":{},"136":{},"145":{},"149":{},"153":{},"154":{},"161":{},"163":{}},"component":{}}],["flx1",{"_index":3226,"title":{},"name":{},"text":{"47":{},"49":{},"58":{},"59":{},"63":{},"65":{},"71":{},"73":{},"135":{},"136":{},"145":{},"149":{},"153":{},"154":{},"161":{},"163":{}},"component":{}}],["flx2",{"_index":3227,"title":{},"name":{},"text":{"47":{},"49":{},"58":{},"59":{},"63":{},"65":{},"71":{},"73":{},"135":{},"136":{},"145":{},"149":{},"153":{},"154":{},"161":{},"163":{}},"component":{}}],["flx3",{"_index":3228,"title":{},"name":{},"text":{"47":{},"49":{},"58":{},"59":{},"63":{},"65":{},"71":{},"73":{},"135":{},"136":{},"145":{},"149":{},"153":{},"154":{},"161":{},"163":{}},"component":{}}],["flx4",{"_index":3229,"title":{},"name":{},"text":{"47":{},"49":{},"58":{},"59":{},"63":{},"135":{},"136":{},"145":{},"149":{},"153":{}},"component":{}}],["focu",{"_index":1732,"title":{},"name":{},"text":{"18":{},"32":{},"46":{},"54":{},"62":{},"79":{},"80":{},"85":{},"103":{},"118":{},"134":{},"144":{},"152":{},"170":{},"171":{},"176":{}},"component":{}}],["folder",{"_index":1028,"title":{},"name":{},"text":{"14":{},"40":{},"46":{},"55":{},"62":{},"72":{},"74":{},"80":{},"101":{},"127":{},"134":{},"146":{},"152":{},"162":{},"164":{},"171":{}},"component":{}}],["folder(",{"_index":1233,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["follow",{"_index":213,"title":{},"name":{},"text":{"4":{},"7":{},"8":{},"9":{},"10":{},"12":{},"14":{},"15":{},"16":{},"26":{},"27":{},"28":{},"29":{},"30":{},"32":{},"36":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"78":{},"79":{},"80":{},"81":{},"82":{},"84":{},"85":{},"86":{},"87":{},"90":{},"92":{},"95":{},"96":{},"97":{},"98":{},"99":{},"101":{},"104":{},"112":{},"114":{},"115":{},"116":{},"117":{},"118":{},"124":{},"130":{},"131":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"142":{},"143":{},"144":{},"145":{},"146":{},"147":{},"148":{},"149":{},"150":{},"151":{},"152":{},"153":{},"154":{},"155":{},"156":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"169":{},"170":{},"171":{},"172":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["follow_oth",{"_index":2159,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["follow_up_info",{"_index":1999,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["forc",{"_index":508,"title":{},"name":{},"text":{"4":{},"6":{},"12":{},"27":{},"35":{},"36":{},"51":{},"59":{},"60":{},"67":{},"75":{},"90":{},"94":{},"98":{},"112":{},"123":{},"124":{},"139":{},"149":{},"150":{},"157":{},"166":{}},"component":{}}],["force=no",{"_index":5384,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["foreground",{"_index":5325,"title":{"60-12":{},"75-12":{},"150-11":{},"166-11":{}},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["foregroung",{"_index":5387,"title":{},"name":{},"text":{"60":{},"150":{}},"component":{}}],["foremost",{"_index":6723,"title":{},"name":{},"text":{"165":{}},"component":{}}],["forev",{"_index":267,"title":{},"name":{},"text":{"4":{},"15":{},"19":{},"26":{},"85":{},"90":{},"99":{},"105":{},"114":{},"176":{}},"component":{}}],["form",{"_index":2267,"title":{},"name":{},"text":{"33":{},"34":{},"37":{},"55":{},"72":{},"120":{},"121":{},"122":{},"146":{},"162":{}},"component":{}}],["format",{"_index":1016,"title":{},"name":{},"text":{"14":{},"29":{},"46":{},"50":{},"51":{},"54":{},"55":{},"62":{},"66":{},"67":{},"72":{},"74":{},"79":{},"80":{},"101":{},"117":{},"134":{},"138":{},"139":{},"144":{},"146":{},"152":{},"156":{},"157":{},"162":{},"164":{},"165":{},"170":{},"171":{}},"component":{}}],["formatt",{"_index":5899,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["former",{"_index":6810,"title":{},"name":{},"text":{"165":{}},"component":{}}],["forward",{"_index":249,"title":{"95":{},"8-1":{}},"name":{},"text":{"4":{},"8":{},"9":{},"12":{},"15":{},"16":{},"27":{},"84":{},"85":{},"90":{},"95":{},"96":{},"98":{},"99":{},"104":{},"112":{},"175":{},"176":{}},"component":{}}],["forward_delay_tim",{"_index":1418,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["forwarding_overview",{"_index":706,"title":{},"name":{"8":{},"95":{}},"text":{},"component":{}}],["found",{"_index":577,"title":{},"name":{},"text":{"6":{},"14":{},"16":{},"18":{},"27":{},"29":{},"32":{},"35":{},"46":{},"51":{},"53":{},"54":{},"55":{},"57":{},"59":{},"61":{},"62":{},"67":{},"72":{},"73":{},"74":{},"77":{},"79":{},"80":{},"85":{},"86":{},"87":{},"94":{},"101":{},"103":{},"104":{},"112":{},"117":{},"118":{},"123":{},"134":{},"139":{},"141":{},"143":{},"144":{},"146":{},"148":{},"149":{},"151":{},"152":{},"157":{},"162":{},"163":{},"164":{},"167":{},"170":{},"171":{},"176":{},"177":{},"178":{}},"component":{}}],["foundat",{"_index":1138,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["four",{"_index":214,"title":{},"name":{},"text":{"4":{},"80":{},"90":{},"171":{}},"component":{}}],["fourth",{"_index":6372,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["fp",{"_index":765,"title":{},"name":{},"text":{"10":{},"30":{},"97":{},"116":{},"165":{}},"component":{}}],["fpga",{"_index":5492,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["frag",{"_index":773,"title":{},"name":{},"text":{"10":{},"97":{}},"component":{}}],["frag/firstfrag",{"_index":6527,"title":{},"name":{},"text":{"86":{},"177":{}},"component":{}}],["frag/nofirstfrag",{"_index":6316,"title":{},"name":{},"text":{"82":{},"84":{},"86":{},"87":{},"173":{},"175":{},"177":{},"178":{}},"component":{}}],["frag_siz",{"_index":787,"title":{},"name":{},"text":{"10":{},"97":{}},"component":{}}],["fragment",{"_index":785,"title":{},"name":{},"text":{"10":{},"97":{}},"component":{}}],["frame",{"_index":78,"title":{"95":{},"96":{},"97":{},"2-3":{},"8-1":{},"9-1":{},"10-1":{},"82-2":{},"87-2":{},"87-3":{},"88-2":{},"173-1":{},"178-1":{},"178-2":{}},"name":{},"text":{"2":{},"4":{},"6":{},"7":{},"8":{},"9":{},"10":{},"12":{},"15":{},"16":{},"17":{},"19":{},"22":{},"23":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"33":{},"34":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"81":{},"82":{},"84":{},"85":{},"86":{},"87":{},"88":{},"90":{},"92":{},"94":{},"95":{},"96":{},"97":{},"98":{},"99":{},"104":{},"105":{},"106":{},"109":{},"111":{},"112":{},"114":{},"115":{},"116":{},"117":{},"119":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"172":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["frame:0",{"_index":3295,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["frame_meta_data",{"_index":726,"title":{},"name":{"9":{},"96":{}},"text":{},"component":{}}],["frame_preempt",{"_index":755,"title":{},"name":{"10":{},"97":{}},"text":{},"component":{}}],["framechecksequenceerror",{"_index":1457,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["framepreempt",{"_index":2299,"title":{"36-9":{},"124-8":{}},"name":{},"text":{"36":{},"124":{}},"component":{}}],["framesabortedduetoxscol",{"_index":1463,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["frameslostduetointmacrcverror",{"_index":1468,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["frameslostduetointmacxmiterror",{"_index":1464,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["framesreceivedok",{"_index":1455,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["framestransmittedok",{"_index":1451,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["frameswithdeferredxmiss",{"_index":1461,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["frameswithexcessivedeferr",{"_index":1471,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["frametoolongerror",{"_index":1477,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["framework",{"_index":2178,"title":{},"name":{},"text":{"30":{},"45":{},"55":{},"72":{},"85":{},"116":{},"133":{},"146":{},"162":{},"176":{}},"component":{}}],["free",{"_index":945,"title":{},"name":{},"text":{"12":{},"14":{},"59":{},"98":{},"101":{},"149":{}},"component":{}}],["free:off",{"_index":4839,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["free_run",{"_index":1991,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["freeli",{"_index":967,"title":{},"name":{},"text":{"13":{},"102":{}},"component":{}}],["freq_est_interv",{"_index":1992,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["frequenc",{"_index":2364,"title":{},"name":{},"text":{"38":{},"53":{},"58":{},"59":{},"60":{},"66":{},"69":{},"71":{},"73":{},"112":{},"125":{},"143":{},"145":{},"149":{},"150":{},"156":{},"159":{},"161":{},"163":{}},"component":{}}],["frer",{"_index":716,"title":{"98":{},"9-7":{},"12-1":{},"12-2":{},"12-4":{},"12-9":{},"96-6":{},"98-1":{},"98-3":{},"98-8":{}},"name":{"12":{},"98":{}},"text":{"9":{},"12":{},"17":{},"29":{},"30":{},"96":{},"98":{},"106":{},"116":{},"117":{}},"component":{}}],["frerseqrcvxxxx",{"_index":929,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["frerseqrcvyalgorithm",{"_index":907,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["frerseqrcvyhistorylength",{"_index":910,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["frerseqrcvyresetmsec",{"_index":912,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["frerseqrcvytakenosequ",{"_index":914,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["friendli",{"_index":4313,"title":{},"name":{},"text":{"55":{},"146":{}},"component":{}}],["front",{"_index":1333,"title":{"99":{},"15-1":{}},"name":{},"text":{"15":{},"16":{},"99":{},"104":{}},"component":{}}],["front_port",{"_index":1334,"title":{},"name":{"15":{},"99":{}},"text":{},"component":{}}],["fs",{"_index":2556,"title":{"46-30":{},"62-30":{},"134-29":{},"152-29":{}},"name":{},"text":{"46":{},"55":{},"62":{},"65":{},"66":{},"72":{},"74":{},"134":{},"146":{},"152":{},"154":{},"156":{},"162":{},"164":{}},"component":{}}],["ft232rl",{"_index":5295,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["ftbr6a83",{"_index":5291,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["ftdi",{"_index":5159,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["ftdi_sio",{"_index":5157,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["full",{"_index":435,"title":{"46-28":{},"62-28":{},"134-27":{},"152-27":{}},"name":{},"text":{"4":{},"6":{},"14":{},"15":{},"46":{},"47":{},"59":{},"62":{},"63":{},"73":{},"74":{},"85":{},"86":{},"90":{},"94":{},"99":{},"101":{},"134":{},"135":{},"149":{},"152":{},"153":{},"163":{},"164":{},"176":{},"177":{}},"component":{}}],["fulli",{"_index":551,"title":{},"name":{},"text":{"6":{},"14":{},"38":{},"46":{},"62":{},"80":{},"94":{},"101":{},"125":{},"134":{},"152":{},"171":{}},"component":{}}],["func",{"_index":3513,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["func0",{"_index":3932,"title":{},"name":{},"text":{"52":{},"68":{},"142":{},"158":{}},"component":{}}],["func1",{"_index":3822,"title":{},"name":{},"text":{"52":{},"68":{},"142":{},"158":{}},"component":{}}],["func2",{"_index":3823,"title":{},"name":{},"text":{"52":{},"68":{},"142":{},"158":{}},"component":{}}],["func3",{"_index":3824,"title":{},"name":{},"text":{"52":{},"68":{},"142":{},"158":{}},"component":{}}],["func4",{"_index":3825,"title":{},"name":{},"text":{"52":{},"68":{},"142":{},"158":{}},"component":{}}],["func5",{"_index":3826,"title":{},"name":{},"text":{"52":{},"68":{},"142":{},"158":{}},"component":{}}],["func6",{"_index":3827,"title":{},"name":{},"text":{"52":{},"68":{},"142":{},"158":{}},"component":{}}],["func7",{"_index":3933,"title":{},"name":{},"text":{"52":{},"68":{},"142":{},"158":{}},"component":{}}],["function",{"_index":71,"title":{"88":{},"92":{},"94":{},"97":{},"98":{},"100":{},"104":{},"105":{},"107":{},"108":{},"110":{},"112":{},"113":{},"2-1":{},"6-1":{},"7-1":{},"10-1":{},"11-1":{},"12-1":{},"16-1":{},"19-1":{},"20-1":{},"21-1":{},"24-1":{},"25-1":{},"27-1":{}},"name":{},"text":{"2":{},"6":{},"7":{},"8":{},"9":{},"12":{},"18":{},"23":{},"46":{},"47":{},"52":{},"55":{},"57":{},"61":{},"62":{},"63":{},"65":{},"66":{},"68":{},"70":{},"71":{},"72":{},"73":{},"74":{},"80":{},"82":{},"83":{},"84":{},"92":{},"94":{},"95":{},"96":{},"98":{},"103":{},"111":{},"112":{},"134":{},"135":{},"141":{},"142":{},"146":{},"148":{},"151":{},"152":{},"153":{},"154":{},"156":{},"158":{},"160":{},"161":{},"162":{},"163":{},"164":{},"171":{},"173":{},"174":{},"175":{}},"component":{}}],["functional",{"_index":2259,"title":{},"name":{},"text":{"33":{},"122":{}},"component":{}}],["functionn",{"_index":4589,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["functions/acm.usb0",{"_index":4610,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["fundament",{"_index":4308,"title":{},"name":{},"text":{"55":{},"146":{}},"component":{}}],["funsoft",{"_index":5167,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["further",{"_index":2746,"title":{},"name":{},"text":{"46":{},"54":{},"62":{},"79":{},"84":{},"85":{},"134":{},"144":{},"152":{},"165":{},"170":{},"175":{},"176":{}},"component":{}}],["furthermor",{"_index":2780,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["fusa",{"_index":5661,"title":{},"name":{},"text":{"68":{},"158":{}},"component":{}}],["futex",{"_index":4931,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["futur",{"_index":2037,"title":{},"name":{},"text":{"28":{},"31":{},"34":{},"37":{},"38":{},"81":{},"82":{},"86":{},"87":{},"115":{},"119":{},"120":{},"121":{},"125":{},"172":{},"173":{},"177":{},"178":{}},"component":{}}],["fw",{"_index":3191,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"72":{},"134":{},"146":{},"152":{},"162":{}},"component":{}}],["fw_bind",{"_index":4490,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["fw_bind_trigg",{"_index":4491,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["fw_bssk_failur",{"_index":4558,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["fw_config",{"_index":4095,"title":{"55-43":{},"72-35":{},"146-42":{},"162-34":{}},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["fw_config_id",{"_index":4097,"title":{"55-45":{},"72-37":{},"146-44":{},"162-36":{}},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["fw_decrypt",{"_index":4556,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["fw_encrypt",{"_index":4560,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["fw_fip_align",{"_index":4542,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["fw_fip_hdr",{"_index":4540,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["fw_fip_incomplet",{"_index":4546,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["fw_not_ssk_encrypt",{"_index":4552,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["fw_ssk_failur",{"_index":4554,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["fw_toc_term_miss",{"_index":4550,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["fwd_mode",{"_index":6376,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["fwu",{"_index":5470,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["fwu.html",{"_index":2709,"title":{},"name":{},"text":{"46":{},"54":{},"55":{},"62":{},"72":{},"79":{},"134":{},"144":{},"146":{},"152":{},"162":{},"170":{}},"component":{}}],["fwu_fip.bin",{"_index":5473,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["g",{"_index":3455,"title":{},"name":{},"text":{"49":{},"55":{},"65":{},"72":{},"136":{},"146":{},"154":{},"162":{}},"component":{}}],["g.8032",{"_index":546,"title":{},"name":{},"text":{"6":{},"94":{}},"component":{}}],["g.8032v1",{"_index":592,"title":{},"name":{},"text":{"6":{},"94":{}},"component":{}}],["g.8032v2",{"_index":593,"title":{},"name":{},"text":{"6":{},"94":{}},"component":{}}],["g.8275/rs422",{"_index":6018,"title":{},"name":{},"text":{"77":{},"167":{}},"component":{}}],["g2609d6b5a",{"_index":5811,"title":{},"name":{},"text":{"72":{},"162":{}},"component":{}}],["g2bdd7b58fc",{"_index":4743,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["g70353fd4af6b",{"_index":4796,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["g8032",{"_index":824,"title":{"100":{},"11-1":{}},"name":{"11":{},"100":{}},"text":{},"component":{}}],["gact",{"_index":1784,"title":{},"name":{},"text":{"22":{},"23":{},"59":{},"81":{},"86":{},"87":{},"109":{},"111":{},"149":{},"172":{},"177":{},"178":{}},"component":{}}],["gadget",{"_index":4565,"title":{"57-4":{},"57-5":{},"57-6":{},"57-11":{},"148-3":{},"148-4":{},"148-5":{},"148-10":{}},"name":{},"text":{"57":{},"148":{}},"component":{}}],["garbl",{"_index":4548,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["gate",{"_index":1790,"title":{},"name":{},"text":{"23":{},"31":{},"34":{},"86":{},"111":{},"119":{},"121":{},"177":{}},"component":{}}],["gateway",{"_index":5245,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["gatewayip=10.99.10.1",{"_index":4774,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["gb",{"_index":3661,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["gb/7.49",{"_index":5934,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["gb80a6c394df4",{"_index":423,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["gbp",{"_index":2041,"title":{},"name":{},"text":{"28":{},"77":{},"80":{},"115":{},"167":{},"171":{}},"component":{}}],["gcc",{"_index":1134,"title":{},"name":{},"text":{"14":{},"33":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"59":{},"101":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"149":{}},"component":{}}],["gcc.br_real",{"_index":1135,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["gck",{"_index":3521,"title":{},"name":{},"text":{"50":{},"53":{},"66":{},"69":{},"138":{},"143":{},"156":{},"159":{}},"component":{}}],["gclk",{"_index":3993,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["gcm",{"_index":2472,"title":{},"name":{},"text":{"45":{},"55":{},"72":{},"133":{},"146":{},"162":{}},"component":{}}],["gdisk",{"_index":1053,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["gem",{"_index":1087,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["gen",{"_index":6754,"title":{},"name":{},"text":{"165":{}},"component":{}}],["gener",{"_index":113,"title":{"31-6":{},"32-5":{},"34-6":{},"37-6":{},"55-19":{},"72-19":{},"118-4":{},"119-5":{},"120-5":{},"121-5":{},"146-18":{},"162-18":{},"165-4":{}},"name":{},"text":{"2":{},"4":{},"7":{},"10":{},"12":{},"13":{},"14":{},"15":{},"18":{},"22":{},"23":{},"29":{},"33":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"46":{},"50":{},"51":{},"55":{},"59":{},"62":{},"66":{},"67":{},"72":{},"73":{},"80":{},"82":{},"84":{},"85":{},"86":{},"87":{},"88":{},"90":{},"92":{},"97":{},"98":{},"99":{},"101":{},"102":{},"103":{},"109":{},"111":{},"112":{},"117":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"134":{},"138":{},"139":{},"146":{},"149":{},"152":{},"156":{},"157":{},"162":{},"163":{},"165":{},"171":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["generation/remov",{"_index":947,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["genext2f",{"_index":1054,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["genrsa",{"_index":6734,"title":{},"name":{},"text":{"165":{}},"component":{}}],["geometri",{"_index":4855,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["get",{"_index":995,"title":{"101":{},"14-1":{},"55-7":{},"55-9":{},"72-7":{},"72-9":{},"146-6":{},"146-8":{},"162-6":{},"162-8":{}},"name":{"14":{},"101":{}},"text":{"29":{},"37":{},"117":{},"120":{}},"component":{}}],["get/set",{"_index":3751,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["get_random_byt",{"_index":4860,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["getmrp",{"_index":1677,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["gettext",{"_index":1055,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["gib",{"_index":2805,"title":{},"name":{},"text":{"46":{},"50":{},"52":{},"59":{},"60":{},"62":{},"66":{},"74":{},"134":{},"138":{},"142":{},"149":{},"150":{},"152":{},"156":{},"164":{}},"component":{}}],["gic",{"_index":3445,"title":{},"name":{},"text":{"49":{},"50":{},"136":{},"138":{}},"component":{}}],["gigabit",{"_index":2592,"title":{},"name":{},"text":{"46":{},"61":{},"134":{},"151":{}},"component":{}}],["giometti",{"_index":4974,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["git",{"_index":1056,"title":{},"name":{},"text":{"14":{},"55":{},"72":{},"101":{},"141":{},"146":{},"162":{}},"component":{}}],["github",{"_index":1311,"title":{},"name":{},"text":{"14":{},"40":{},"41":{},"42":{},"43":{},"101":{},"127":{},"128":{},"129":{},"130":{},"131":{}},"component":{}}],["give",{"_index":100,"title":{},"name":{},"text":{"2":{},"6":{},"23":{},"26":{},"46":{},"54":{},"55":{},"62":{},"72":{},"79":{},"88":{},"94":{},"111":{},"114":{},"134":{},"144":{},"146":{},"152":{},"162":{},"170":{}},"component":{}}],["given",{"_index":118,"title":{},"name":{},"text":{"2":{},"12":{},"46":{},"51":{},"55":{},"62":{},"67":{},"72":{},"84":{},"85":{},"88":{},"98":{},"134":{},"139":{},"146":{},"152":{},"157":{},"162":{},"165":{},"175":{},"176":{}},"component":{}}],["global",{"_index":125,"title":{},"name":{},"text":{"2":{},"4":{},"15":{},"19":{},"27":{},"88":{},"90":{},"99":{},"105":{},"112":{}},"component":{}}],["glue",{"_index":5886,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["gmcapabl",{"_index":2002,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["gmii",{"_index":6042,"title":{},"name":{},"text":{"78":{},"169":{}},"component":{}}],["gmii/mii/rgmii",{"_index":6052,"title":{},"name":{},"text":{"78":{},"169":{}},"component":{}}],["gmii/mii/rgmii/mii",{"_index":6048,"title":{},"name":{},"text":{"78":{},"169":{}},"component":{}}],["gnu",{"_index":2232,"title":{},"name":{},"text":{"32":{},"118":{}},"component":{}}],["gnu/bootloaders/releas",{"_index":6155,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["gnu/standalone/releas",{"_index":2705,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["gnu/standalone_rpi/release/readme.adoc",{"_index":6667,"title":{},"name":{},"text":{"141":{}},"component":{}}],["gnu/standalone_rpi/release/rpi4cm.img",{"_index":6666,"title":{},"name":{},"text":{"141":{}},"component":{}}],["gnueabi",{"_index":4803,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["gnueabihf",{"_index":1133,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["gnueabihf/usr/bin/arm",{"_index":1132,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["go",{"_index":1685,"title":{},"name":{},"text":{"16":{},"31":{},"34":{},"46":{},"55":{},"62":{},"72":{},"81":{},"82":{},"84":{},"86":{},"87":{},"104":{},"119":{},"121":{},"134":{},"146":{},"152":{},"162":{},"172":{},"173":{},"175":{},"177":{},"178":{}},"component":{}}],["goe",{"_index":2601,"title":{},"name":{},"text":{"46":{},"62":{},"82":{},"84":{},"86":{},"87":{},"134":{},"152":{},"173":{},"175":{},"177":{},"178":{}},"component":{}}],["good",{"_index":2346,"title":{},"name":{},"text":{"38":{},"55":{},"56":{},"72":{},"125":{},"146":{},"147":{},"162":{},"165":{}},"component":{}}],["googl",{"_index":5171,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["goto",{"_index":1779,"title":{},"name":{},"text":{"22":{},"23":{},"81":{},"82":{},"84":{},"85":{},"86":{},"87":{},"109":{},"111":{},"172":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["goto’",{"_index":6418,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["gp",{"_index":1965,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["gp1|gp2|gp3|gp4",{"_index":2820,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["gpio",{"_index":3275,"title":{"52":{},"68":{},"142":{},"158":{},"52-1":{},"52-10":{},"68-1":{},"68-10":{},"142-9":{},"158-9":{}},"name":{},"text":{"48":{},"49":{},"52":{},"53":{},"57":{},"58":{},"59":{},"64":{},"65":{},"66":{},"68":{},"69":{},"70":{},"71":{},"73":{},"74":{},"80":{},"136":{},"137":{},"142":{},"143":{},"145":{},"148":{},"149":{},"154":{},"155":{},"156":{},"158":{},"159":{},"160":{},"161":{},"163":{},"164":{},"171":{}},"component":{}}],["gpio10",{"_index":3352,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["gpio11",{"_index":4649,"title":{},"name":{},"text":{"58":{},"145":{}},"component":{}}],["gpio12",{"_index":3362,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["gpio13",{"_index":3364,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["gpio14",{"_index":4655,"title":{},"name":{},"text":{"58":{},"66":{},"71":{},"145":{},"156":{},"161":{}},"component":{}}],["gpio15",{"_index":3374,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"65":{},"66":{},"71":{},"73":{},"136":{},"145":{},"149":{},"154":{},"156":{},"161":{},"163":{}},"component":{}}],["gpio16",{"_index":3376,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"65":{},"66":{},"71":{},"73":{},"136":{},"145":{},"149":{},"154":{},"156":{},"161":{},"163":{}},"component":{}}],["gpio17",{"_index":4659,"title":{},"name":{},"text":{"58":{},"66":{},"145":{},"156":{}},"component":{}}],["gpio18",{"_index":3382,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"66":{},"136":{},"145":{},"149":{},"156":{}},"component":{}}],["gpio19",{"_index":3384,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"66":{},"136":{},"145":{},"149":{},"156":{}},"component":{}}],["gpio2",{"_index":5764,"title":{},"name":{},"text":{"71":{},"161":{}},"component":{}}],["gpio20",{"_index":4664,"title":{},"name":{},"text":{"58":{},"66":{},"145":{},"156":{}},"component":{}}],["gpio21",{"_index":3394,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"66":{},"136":{},"145":{},"149":{},"156":{}},"component":{}}],["gpio22",{"_index":3396,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"66":{},"136":{},"145":{},"149":{},"156":{}},"component":{}}],["gpio23",{"_index":5596,"title":{},"name":{},"text":{"66":{},"156":{}},"component":{}}],["gpio24",{"_index":4645,"title":{},"name":{},"text":{"58":{},"66":{},"145":{},"156":{}},"component":{}}],["gpio25",{"_index":3354,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["gpio26",{"_index":3356,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["gpio27",{"_index":5765,"title":{},"name":{},"text":{"71":{},"161":{}},"component":{}}],["gpio28",{"_index":5560,"title":{},"name":{},"text":{"65":{},"71":{},"73":{},"154":{},"161":{},"163":{}},"component":{}}],["gpio29",{"_index":5561,"title":{},"name":{},"text":{"65":{},"71":{},"73":{},"154":{},"161":{},"163":{}},"component":{}}],["gpio3",{"_index":5558,"title":{},"name":{},"text":{"65":{},"71":{},"73":{},"154":{},"161":{},"163":{}},"component":{}}],["gpio30",{"_index":4662,"title":{},"name":{},"text":{"58":{},"145":{}},"component":{}}],["gpio31",{"_index":3390,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["gpio32",{"_index":3392,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["gpio33",{"_index":4651,"title":{},"name":{},"text":{"58":{},"145":{}},"component":{}}],["gpio34",{"_index":3366,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["gpio35",{"_index":3368,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["gpio4",{"_index":5559,"title":{},"name":{},"text":{"65":{},"71":{},"73":{},"154":{},"161":{},"163":{}},"component":{}}],["gpio43",{"_index":4657,"title":{},"name":{},"text":{"58":{},"145":{}},"component":{}}],["gpio44",{"_index":3378,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["gpio45",{"_index":3380,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["gpio46",{"_index":4653,"title":{},"name":{},"text":{"58":{},"145":{}},"component":{}}],["gpio47",{"_index":3370,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["gpio48",{"_index":3372,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["gpio51",{"_index":3971,"title":{},"name":{},"text":{"52":{},"58":{},"68":{},"142":{},"145":{},"158":{}},"component":{}}],["gpio52",{"_index":3386,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["gpio52/alt",{"_index":4310,"title":{},"name":{},"text":{"55":{},"62":{},"146":{},"152":{}},"component":{}}],["gpio53",{"_index":3388,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["gpio53/alt",{"_index":4311,"title":{},"name":{},"text":{"55":{},"62":{},"146":{},"152":{}},"component":{}}],["gpio54",{"_index":5766,"title":{},"name":{},"text":{"71":{},"161":{}},"component":{}}],["gpio55",{"_index":5562,"title":{},"name":{},"text":{"65":{},"71":{},"73":{},"154":{},"161":{},"163":{}},"component":{}}],["gpio56",{"_index":4666,"title":{},"name":{},"text":{"58":{},"65":{},"71":{},"73":{},"145":{},"154":{},"161":{},"163":{}},"component":{}}],["gpio57",{"_index":3398,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["gpio58",{"_index":3400,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["gpio61",{"_index":4647,"title":{},"name":{},"text":{"58":{},"145":{}},"component":{}}],["gpio62",{"_index":3358,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["gpio63",{"_index":3360,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["gpio64",{"_index":4668,"title":{},"name":{},"text":{"58":{},"71":{},"145":{},"161":{}},"component":{}}],["gpio65",{"_index":3402,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"65":{},"71":{},"73":{},"136":{},"145":{},"149":{},"154":{},"161":{},"163":{}},"component":{}}],["gpio66",{"_index":3404,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"65":{},"71":{},"73":{},"136":{},"145":{},"149":{},"154":{},"161":{},"163":{}},"component":{}}],["gpio67",{"_index":3506,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["gpio68",{"_index":3507,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["gpio69",{"_index":3508,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["gpio70",{"_index":3509,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["gpio71",{"_index":3510,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["gpio72",{"_index":3511,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["gpio73",{"_index":3514,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["gpio74",{"_index":3515,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["gpio75",{"_index":3516,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["gpio76",{"_index":3517,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["gpio77",{"_index":3512,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["gpio8",{"_index":4643,"title":{},"name":{},"text":{"58":{},"145":{}},"component":{}}],["gpio9",{"_index":3350,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["gpio@0",{"_index":5736,"title":{},"name":{},"text":{"70":{},"160":{}},"component":{}}],["gpio@1",{"_index":5738,"title":{},"name":{},"text":{"70":{},"160":{}},"component":{}}],["gpio@e2010230",{"_index":5734,"title":{},"name":{},"text":{"70":{},"160":{}},"component":{}}],["gpio_1",{"_index":5711,"title":{},"name":{},"text":{"68":{},"74":{},"158":{},"164":{}},"component":{}}],["gpio_10",{"_index":5670,"title":{},"name":{},"text":{"68":{},"158":{}},"component":{}}],["gpio_11",{"_index":5672,"title":{},"name":{},"text":{"68":{},"158":{}},"component":{}}],["gpio_12",{"_index":5708,"title":{},"name":{},"text":{"68":{},"74":{},"158":{},"164":{}},"component":{}}],["gpio_13",{"_index":5709,"title":{},"name":{},"text":{"68":{},"74":{},"158":{},"164":{}},"component":{}}],["gpio_14",{"_index":5597,"title":{},"name":{},"text":{"66":{},"68":{},"156":{},"158":{}},"component":{}}],["gpio_15",{"_index":5598,"title":{},"name":{},"text":{"66":{},"68":{},"156":{},"158":{}},"component":{}}],["gpio_16",{"_index":5599,"title":{},"name":{},"text":{"66":{},"68":{},"156":{},"158":{}},"component":{}}],["gpio_17",{"_index":5600,"title":{},"name":{},"text":{"66":{},"68":{},"156":{},"158":{}},"component":{}}],["gpio_18",{"_index":5601,"title":{},"name":{},"text":{"66":{},"68":{},"156":{},"158":{}},"component":{}}],["gpio_19",{"_index":5602,"title":{},"name":{},"text":{"66":{},"68":{},"156":{},"158":{}},"component":{}}],["gpio_20",{"_index":5603,"title":{},"name":{},"text":{"66":{},"68":{},"156":{},"158":{}},"component":{}}],["gpio_21",{"_index":5604,"title":{},"name":{},"text":{"66":{},"68":{},"156":{},"158":{}},"component":{}}],["gpio_22",{"_index":5605,"title":{},"name":{},"text":{"66":{},"68":{},"156":{},"158":{}},"component":{}}],["gpio_23",{"_index":5606,"title":{},"name":{},"text":{"66":{},"68":{},"156":{},"158":{}},"component":{}}],["gpio_24",{"_index":5607,"title":{},"name":{},"text":{"66":{},"68":{},"156":{},"158":{}},"component":{}}],["gpio_25",{"_index":5666,"title":{},"name":{},"text":{"68":{},"158":{}},"component":{}}],["gpio_26",{"_index":5667,"title":{},"name":{},"text":{"68":{},"158":{}},"component":{}}],["gpio_3",{"_index":5685,"title":{},"name":{},"text":{"68":{},"73":{},"158":{},"163":{}},"component":{}}],["gpio_30",{"_index":5698,"title":{},"name":{},"text":{"68":{},"74":{},"158":{},"164":{}},"component":{}}],["gpio_31",{"_index":5699,"title":{},"name":{},"text":{"68":{},"74":{},"158":{},"164":{}},"component":{}}],["gpio_32",{"_index":5700,"title":{},"name":{},"text":{"68":{},"74":{},"158":{},"164":{}},"component":{}}],["gpio_33",{"_index":5701,"title":{},"name":{},"text":{"68":{},"74":{},"158":{},"164":{}},"component":{}}],["gpio_34",{"_index":5702,"title":{},"name":{},"text":{"68":{},"74":{},"158":{},"164":{}},"component":{}}],["gpio_35",{"_index":3820,"title":{},"name":{},"text":{"52":{},"68":{},"74":{},"142":{},"158":{},"164":{}},"component":{}}],["gpio_36",{"_index":3821,"title":{},"name":{},"text":{"52":{},"68":{},"74":{},"142":{},"158":{},"164":{}},"component":{}}],["gpio_37",{"_index":5703,"title":{},"name":{},"text":{"68":{},"74":{},"158":{},"164":{}},"component":{}}],["gpio_38",{"_index":5704,"title":{},"name":{},"text":{"68":{},"74":{},"158":{},"164":{}},"component":{}}],["gpio_39",{"_index":5705,"title":{},"name":{},"text":{"68":{},"74":{},"158":{},"164":{}},"component":{}}],["gpio_4",{"_index":5686,"title":{},"name":{},"text":{"68":{},"73":{},"158":{},"163":{}},"component":{}}],["gpio_40",{"_index":5706,"title":{},"name":{},"text":{"68":{},"74":{},"158":{},"164":{}},"component":{}}],["gpio_41",{"_index":5707,"title":{},"name":{},"text":{"68":{},"74":{},"158":{},"164":{}},"component":{}}],["gpio_5",{"_index":5715,"title":{},"name":{},"text":{"68":{},"70":{},"158":{},"160":{}},"component":{}}],["gpio_55",{"_index":5569,"title":{},"name":{},"text":{"65":{},"68":{},"73":{},"154":{},"158":{},"163":{}},"component":{}}],["gpio_56",{"_index":5570,"title":{},"name":{},"text":{"65":{},"68":{},"73":{},"154":{},"158":{},"163":{}},"component":{}}],["gpio_58",{"_index":5694,"title":{},"name":{},"text":{"68":{},"158":{}},"component":{}}],["gpio_59",{"_index":5695,"title":{},"name":{},"text":{"68":{},"158":{}},"component":{}}],["gpio_6",{"_index":5716,"title":{},"name":{},"text":{"68":{},"70":{},"158":{},"160":{}},"component":{}}],["gpio_64",{"_index":5689,"title":{},"name":{},"text":{"68":{},"71":{},"73":{},"158":{},"161":{},"163":{}},"component":{}}],["gpio_65",{"_index":5690,"title":{},"name":{},"text":{"68":{},"71":{},"73":{},"158":{},"161":{},"163":{}},"component":{}}],["gpio_66",{"_index":5691,"title":{},"name":{},"text":{"68":{},"71":{},"73":{},"158":{},"161":{},"163":{}},"component":{}}],["gpio_67",{"_index":3935,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["gpio_68",{"_index":3936,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["gpio_69",{"_index":3937,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["gpio_7",{"_index":5717,"title":{},"name":{},"text":{"68":{},"70":{},"158":{},"160":{}},"component":{}}],["gpio_70",{"_index":3938,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["gpio_71",{"_index":3939,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["gpio_72",{"_index":3940,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["gpio_73",{"_index":3942,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["gpio_74",{"_index":3943,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["gpio_75",{"_index":3944,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["gpio_76",{"_index":3945,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["gpio_77",{"_index":3941,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["gpio_8",{"_index":4587,"title":{},"name":{},"text":{"57":{},"68":{},"70":{},"148":{},"158":{},"160":{}},"component":{}}],["gpio_9",{"_index":5669,"title":{},"name":{},"text":{"68":{},"158":{}},"component":{}}],["gpiochip0",{"_index":3950,"title":{},"name":{},"text":{"52":{},"68":{},"142":{},"158":{}},"component":{}}],["gpt",{"_index":2560,"title":{"46-32":{},"54-6":{},"62-32":{},"79-7":{},"134-31":{},"144-5":{},"152-31":{},"170-6":{}},"name":{},"text":{"46":{},"50":{},"54":{},"55":{},"62":{},"66":{},"72":{},"79":{},"80":{},"134":{},"138":{},"144":{},"146":{},"152":{},"156":{},"162":{},"170":{},"171":{}},"component":{}}],["gpt_partition_addr",{"_index":5523,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["gptimg",{"_index":4181,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["granular",{"_index":6452,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["graphviz",{"_index":1057,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["greater",{"_index":6419,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["green",{"_index":4296,"title":{},"name":{},"text":{"55":{},"70":{},"72":{},"146":{},"160":{},"162":{}},"component":{}}],["grep",{"_index":1121,"title":{},"name":{},"text":{"14":{},"45":{},"49":{},"50":{},"52":{},"53":{},"56":{},"58":{},"59":{},"60":{},"66":{},"68":{},"69":{},"75":{},"101":{},"133":{},"136":{},"138":{},"142":{},"143":{},"145":{},"147":{},"149":{},"150":{},"156":{},"158":{},"159":{},"166":{}},"component":{}}],["ground",{"_index":6709,"title":{},"name":{},"text":{"141":{}},"component":{}}],["group",{"_index":228,"title":{"9-12":{},"96-11":{}},"name":{},"text":{"4":{},"9":{},"15":{},"19":{},"29":{},"46":{},"48":{},"50":{},"55":{},"59":{},"62":{},"68":{},"72":{},"84":{},"90":{},"96":{},"99":{},"105":{},"117":{},"134":{},"137":{},"138":{},"146":{},"149":{},"152":{},"158":{},"162":{},"175":{}},"component":{}}],["group_fwd_mask",{"_index":1427,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["group_fwd_mask_str",{"_index":1428,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["gso_max_s",{"_index":1435,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["gso_max_seg",{"_index":1436,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["gt/",{"_index":4362,"title":{},"name":{},"text":{"55":{},"146":{}},"component":{}}],["gtp",{"_index":5898,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["guarante",{"_index":6474,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["guard",{"_index":533,"title":{"6-14":{},"94-13":{}},"name":{},"text":{"6":{},"15":{},"94":{},"99":{}},"component":{}}],["gui",{"_index":1047,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["guid",{"_index":963,"title":{"13-2":{},"102-2":{}},"name":{},"text":{"14":{},"46":{},"55":{},"62":{},"72":{},"80":{},"101":{},"134":{},"146":{},"152":{},"162":{},"171":{}},"component":{}}],["guidelin",{"_index":4098,"title":{"55-48":{},"55-49":{},"72-40":{},"72-41":{},"146-47":{},"146-48":{},"162-39":{},"162-40":{}},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["gz",{"_index":2723,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["gzip",{"_index":1058,"title":{},"name":{},"text":{"14":{},"59":{},"72":{},"73":{},"101":{},"149":{},"162":{},"163":{}},"component":{}}],["h",{"_index":1633,"title":{},"name":{},"text":{"15":{},"29":{},"49":{},"51":{},"67":{},"99":{},"112":{},"117":{},"136":{},"139":{},"157":{}},"component":{}}],["hairpin",{"_index":1402,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["half",{"_index":1357,"title":{},"name":{},"text":{"15":{},"51":{},"67":{},"99":{},"139":{},"157":{}},"component":{}}],["halt",{"_index":5351,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["hand",{"_index":4161,"title":{},"name":{},"text":{"55":{},"72":{},"85":{},"86":{},"146":{},"162":{},"176":{},"177":{}},"component":{}}],["handl",{"_index":96,"title":{"84-11":{},"175-10":{}},"name":{},"text":{"2":{},"4":{},"6":{},"7":{},"9":{},"12":{},"22":{},"23":{},"26":{},"28":{},"29":{},"52":{},"55":{},"68":{},"72":{},"81":{},"82":{},"84":{},"85":{},"86":{},"87":{},"88":{},"90":{},"92":{},"94":{},"96":{},"98":{},"109":{},"111":{},"114":{},"115":{},"117":{},"142":{},"146":{},"158":{},"162":{},"172":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["handler",{"_index":5254,"title":{},"name":{},"text":{"59":{},"68":{},"149":{},"158":{}},"component":{}}],["happen",{"_index":130,"title":{},"name":{},"text":{"2":{},"9":{},"88":{},"96":{}},"component":{}}],["happili",{"_index":3747,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["hard",{"_index":2673,"title":{},"name":{},"text":{"46":{},"51":{},"62":{},"67":{},"134":{},"139":{},"152":{},"157":{}},"component":{}}],["harden",{"_index":6732,"title":{},"name":{},"text":{"165":{}},"component":{}}],["hardwar",{"_index":160,"title":{"91":{},"3-1":{}},"name":{},"text":{"8":{},"17":{},"22":{},"23":{},"27":{},"29":{},"33":{},"45":{},"46":{},"54":{},"55":{},"60":{},"61":{},"62":{},"72":{},"75":{},"79":{},"81":{},"85":{},"86":{},"87":{},"106":{},"109":{},"111":{},"112":{},"117":{},"122":{},"131":{},"133":{},"134":{},"141":{},"144":{},"146":{},"150":{},"151":{},"152":{},"162":{},"165":{},"166":{},"170":{},"172":{},"176":{},"177":{},"178":{}},"component":{}}],["hash",{"_index":381,"title":{},"name":{},"text":{"4":{},"55":{},"59":{},"72":{},"73":{},"90":{},"146":{},"149":{},"162":{},"163":{},"165":{}},"component":{}}],["hash=sha256",{"_index":6784,"title":{},"name":{},"text":{"165":{}},"component":{}}],["hash_devic",{"_index":6799,"title":{},"name":{},"text":{"165":{}},"component":{}}],["have",{"_index":4121,"title":{},"name":{},"text":{"55":{},"72":{},"80":{},"146":{},"162":{},"171":{}},"component":{}}],["hc",{"_index":2808,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["hcc",{"_index":5109,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["hcd",{"_index":5105,"title":{},"name":{},"text":{"59":{},"74":{},"149":{},"164":{}},"component":{}}],["hcd.2.auto",{"_index":5106,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["hci",{"_index":5112,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["hclk",{"_index":3270,"title":{},"name":{},"text":{"48":{},"57":{},"64":{},"137":{},"148":{},"155":{}},"component":{}}],["hclock",{"_index":3523,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["head",{"_index":3609,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["header",{"_index":2772,"title":{},"name":{},"text":{"46":{},"55":{},"56":{},"62":{},"72":{},"86":{},"87":{},"134":{},"141":{},"146":{},"147":{},"152":{},"162":{},"165":{},"177":{},"178":{}},"component":{}}],["heap",{"_index":4837,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["heartbeat=[non",{"_index":5381,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["heavili",{"_index":2599,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["held",{"_index":1901,"title":{},"name":{},"text":{"26":{},"55":{},"72":{},"85":{},"114":{},"146":{},"162":{},"176":{}},"component":{}}],["hello",{"_index":394,"title":{"14-17":{},"101-16":{}},"name":{},"text":{"4":{},"14":{},"90":{},"101":{}},"component":{}}],["hello_world",{"_index":3642,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["help",{"_index":466,"title":{},"name":{},"text":{"4":{},"10":{},"12":{},"13":{},"14":{},"15":{},"18":{},"29":{},"46":{},"50":{},"51":{},"55":{},"60":{},"62":{},"66":{},"67":{},"72":{},"75":{},"84":{},"85":{},"90":{},"97":{},"98":{},"99":{},"101":{},"102":{},"103":{},"112":{},"116":{},"117":{},"134":{},"138":{},"139":{},"146":{},"150":{},"152":{},"156":{},"157":{},"162":{},"166":{},"175":{},"176":{}},"component":{}}],["help2man",{"_index":1059,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["helper",{"_index":1206,"title":{},"name":{},"text":{"14":{},"59":{},"74":{},"101":{},"149":{},"164":{}},"component":{}}],["henc",{"_index":4333,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["here",{"_index":578,"title":{},"name":{},"text":{"6":{},"12":{},"14":{},"16":{},"17":{},"18":{},"22":{},"23":{},"26":{},"27":{},"29":{},"32":{},"40":{},"41":{},"42":{},"43":{},"44":{},"46":{},"51":{},"54":{},"55":{},"56":{},"57":{},"59":{},"62":{},"67":{},"68":{},"70":{},"72":{},"73":{},"74":{},"79":{},"80":{},"81":{},"84":{},"85":{},"86":{},"87":{},"94":{},"98":{},"101":{},"103":{},"104":{},"106":{},"109":{},"111":{},"112":{},"114":{},"116":{},"117":{},"118":{},"127":{},"128":{},"129":{},"130":{},"131":{},"132":{},"134":{},"139":{},"141":{},"144":{},"146":{},"147":{},"148":{},"149":{},"152":{},"157":{},"158":{},"160":{},"162":{},"163":{},"164":{},"165":{},"170":{},"171":{},"172":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["herebi",{"_index":2864,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["hex",{"_index":2499,"title":{},"name":{},"text":{"45":{},"46":{},"50":{},"51":{},"59":{},"62":{},"66":{},"67":{},"80":{},"133":{},"134":{},"138":{},"139":{},"149":{},"152":{},"156":{},"157":{},"171":{}},"component":{}}],["hexadecim",{"_index":6460,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["hexdump",{"_index":2497,"title":{},"name":{},"text":{"45":{},"53":{},"69":{},"133":{},"143":{},"159":{}},"component":{}}],["hicredit",{"_index":1873,"title":{},"name":{},"text":{"26":{},"28":{},"114":{},"115":{}},"component":{}}],["hid",{"_index":5214,"title":{},"name":{},"text":{"59":{},"73":{},"149":{},"163":{}},"component":{}}],["hiddev1,hidraw2",{"_index":5845,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["hierarch",{"_index":4851,"title":{},"name":{},"text":{"59":{},"149":{},"165":{}},"component":{}}],["hierarchi",{"_index":4093,"title":{"55-21":{},"72-21":{},"146-20":{},"162-20":{}},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["high",{"_index":2418,"title":{"62-9":{},"152-8":{}},"name":{},"text":{"43":{},"46":{},"50":{},"52":{},"55":{},"57":{},"59":{},"62":{},"64":{},"66":{},"72":{},"73":{},"74":{},"85":{},"130":{},"134":{},"138":{},"142":{},"146":{},"148":{},"149":{},"152":{},"155":{},"156":{},"162":{},"163":{},"164":{},"176":{}},"component":{}}],["higher",{"_index":760,"title":{},"name":{},"text":{"10":{},"29":{},"55":{},"61":{},"81":{},"84":{},"97":{},"117":{},"146":{},"151":{},"172":{},"175":{}},"component":{}}],["highest",{"_index":1860,"title":{},"name":{},"text":{"26":{},"29":{},"38":{},"85":{},"114":{},"117":{},"125":{},"176":{}},"component":{}}],["highlight",{"_index":4335,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["highmem",{"_index":4817,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["highspe",{"_index":3546,"title":{},"name":{},"text":{"50":{},"52":{},"138":{},"142":{}},"component":{}}],["hint",{"_index":6760,"title":{},"name":{},"text":{"165":{}},"component":{}}],["histori",{"_index":930,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["hit",{"_index":731,"title":{},"name":{},"text":{"9":{},"12":{},"22":{},"29":{},"60":{},"73":{},"75":{},"80":{},"85":{},"96":{},"98":{},"109":{},"117":{},"150":{},"163":{},"166":{},"171":{},"176":{}},"component":{}}],["hlen",{"_index":909,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["hmac",{"_index":2465,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["hold",{"_index":531,"title":{"6-13":{},"94-12":{}},"name":{},"text":{"6":{},"10":{},"46":{},"55":{},"56":{},"62":{},"65":{},"73":{},"94":{},"97":{},"134":{},"146":{},"147":{},"152":{},"154":{},"163":{},"165":{}},"component":{}}],["hold_adv",{"_index":791,"title":{},"name":{},"text":{"10":{},"97":{}},"component":{}}],["hold_request",{"_index":796,"title":{},"name":{},"text":{"10":{},"97":{}},"component":{}}],["hold_tim",{"_index":1415,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["holder",{"_index":4460,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["holdoff",{"_index":622,"title":{},"name":{},"text":{"6":{},"94":{}},"component":{}}],["home",{"_index":989,"title":{},"name":{},"text":{"13":{},"14":{},"18":{},"101":{},"102":{},"103":{}},"component":{}}],["home/alice/mscc",{"_index":1259,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["hook",{"_index":6456,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["host",{"_index":254,"title":{"105":{},"19-1":{},"21-5":{},"59-11":{},"59-12":{},"108-4":{},"149-10":{},"149-11":{}},"name":{},"text":{"4":{},"12":{},"14":{},"15":{},"19":{},"43":{},"46":{},"50":{},"52":{},"54":{},"55":{},"57":{},"59":{},"61":{},"62":{},"66":{},"68":{},"72":{},"73":{},"74":{},"77":{},"79":{},"90":{},"98":{},"99":{},"101":{},"105":{},"130":{},"131":{},"134":{},"138":{},"141":{},"142":{},"144":{},"146":{},"148":{},"149":{},"151":{},"152":{},"156":{},"158":{},"162":{},"163":{},"164":{},"167":{},"170":{}},"component":{}}],["host0",{"_index":5919,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["host@e0830000",{"_index":2793,"title":{},"name":{},"text":{"46":{},"50":{},"59":{},"60":{},"62":{},"66":{},"134":{},"138":{},"149":{},"150":{},"152":{},"156":{}},"component":{}}],["host_match",{"_index":2101,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["hostipaddr:]bootfilenam",{"_index":2862,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["howto",{"_index":6490,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["howto/index.html",{"_index":6492,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["hp",{"_index":4798,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["hp4x",{"_index":5183,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["hs",{"_index":3696,"title":{},"name":{},"text":{"50":{},"62":{},"138":{},"152":{}},"component":{}}],["hsr",{"_index":6326,"title":{},"name":{},"text":{"82":{},"87":{},"173":{},"178":{}},"component":{}}],["html5",{"_index":2685,"title":{},"name":{},"text":{"46":{},"54":{},"62":{},"79":{},"134":{},"144":{},"152":{},"170":{}},"component":{}}],["http://borg.uu3.net/traffic_shaping/index.html",{"_index":6500,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["http://mscc",{"_index":1100,"title":{},"name":{},"text":{"14":{},"46":{},"62":{},"101":{},"134":{},"152":{}},"component":{}}],["http://www.buildroot.net",{"_index":991,"title":{},"name":{},"text":{"13":{},"18":{},"102":{},"103":{}},"component":{}}],["http://www.hello",{"_index":1246,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["https://buildroot.org/downloads/manual/manual.html#_building_out_of_tre",{"_index":1180,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["https://buildroot.org/downloads/manual/manual.html#_buildroot_quick_start",{"_index":1167,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["https://buildroot.org/downloads/manual/manual.html#_developer_guid",{"_index":1151,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["https://buildroot.org/downloads/manual/manual.html#_infrastructure_for_cmake_based_packag",{"_index":1235,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["https://buildroot.org/downloads/manual/manual.html#_using_buildroot_during_develop",{"_index":1212,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["https://buildroot.org/downloads/manual/manual.html#ad",{"_index":1211,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["https://buildroot.org/downloads/manual/manual.html#requir",{"_index":1030,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["https://docs.docker.com/engine/instal",{"_index":1292,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["https://elixir.bootlin.com/linux/latest/source/documentation/devicetree/bindings/crypto/atmel,at91sam9g46",{"_index":2459,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["https://elixir.bootlin.com/linux/latest/source/documentation/devicetree/bindings/mfd/atmel",{"_index":3235,"title":{},"name":{},"text":{"47":{},"135":{}},"component":{}}],["https://elixir.bootlin.com/linux/latest/source/documentation/devicetree/bindings/serial/atmel,at91",{"_index":5821,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["https://github.com/microchip",{"_index":579,"title":{},"name":{},"text":{"6":{},"14":{},"16":{},"40":{},"41":{},"42":{},"46":{},"55":{},"62":{},"72":{},"94":{},"101":{},"104":{},"127":{},"128":{},"129":{},"134":{},"146":{},"152":{},"162":{}},"component":{}}],["https://github.com/orgs/microchip",{"_index":1314,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["https://github.com/raspberrypi/usbboot",{"_index":6672,"title":{},"name":{},"text":{"141":{}},"component":{}}],["https://gitlab.com/rkraevskiy/ubootpubkey",{"_index":6745,"title":{},"name":{},"text":{"165":{}},"component":{}}],["https://lwn.net/articles/671458",{"_index":6501,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["https://lwn.net/articles/723067",{"_index":6502,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["https://lwn.net/articles/736338",{"_index":6503,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["https://lwn.net/articles/743391",{"_index":6504,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["https://pcisig.com/sites/default/files/files/pci_cod",{"_index":4363,"title":{},"name":{},"text":{"55":{},"146":{}},"component":{}}],["https://tldp.org/en/traff",{"_index":6496,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["https://tldp.org/howto/adv",{"_index":6497,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["https://tldp.org/howto/traff",{"_index":6491,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["hub",{"_index":4963,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["huge",{"_index":2784,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["huk",{"_index":3717,"title":{},"name":{},"text":{"51":{},"55":{},"56":{},"67":{},"72":{},"139":{},"146":{},"147":{},"157":{},"162":{}},"component":{}}],["human",{"_index":2731,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["hw",{"_index":65,"title":{"45":{},"133":{},"9-7":{},"9-8":{},"9-9":{},"9-10":{},"45-1":{},"80-4":{},"96-6":{},"96-7":{},"96-8":{},"96-9":{},"171-3":{}},"name":{},"text":{"1":{},"4":{},"7":{},"9":{},"16":{},"26":{},"27":{},"28":{},"36":{},"45":{},"46":{},"49":{},"50":{},"52":{},"55":{},"62":{},"72":{},"80":{},"84":{},"85":{},"89":{},"90":{},"92":{},"96":{},"104":{},"112":{},"114":{},"115":{},"124":{},"133":{},"134":{},"136":{},"138":{},"142":{},"146":{},"152":{},"162":{},"171":{},"175":{},"176":{}},"component":{}}],["hwaddr",{"_index":3286,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["hwmon",{"_index":5674,"title":{},"name":{},"text":{"68":{},"158":{}},"component":{}}],["hwpartit",{"_index":2816,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["hz",{"_index":2844,"title":{},"name":{},"text":{"46":{},"50":{},"52":{},"62":{},"66":{},"134":{},"138":{},"142":{},"152":{},"156":{}},"component":{}}],["i.",{"_index":4190,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["i/o",{"_index":3123,"title":{},"name":{},"text":{"46":{},"47":{},"62":{},"63":{},"80":{},"134":{},"135":{},"152":{},"153":{},"171":{}},"component":{}}],["i2c",{"_index":2279,"title":{"49":{},"65":{},"136":{},"154":{},"49-1":{},"65-1":{}},"name":{"49":{},"65":{},"136":{},"154":{}},"text":{"35":{},"49":{},"59":{},"63":{},"65":{},"70":{},"73":{},"123":{},"136":{},"149":{},"153":{},"154":{},"160":{},"163":{}},"component":{}}],["i2c(int",{"_index":3215,"title":{},"name":{},"text":{"47":{},"49":{},"65":{},"135":{},"136":{},"154":{}},"component":{}}],["i2c0",{"_index":3418,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["i2c3",{"_index":5566,"title":{},"name":{},"text":{"65":{},"73":{},"154":{},"163":{}},"component":{}}],["i2c@600",{"_index":3419,"title":{},"name":{},"text":{"49":{},"65":{},"73":{},"136":{},"154":{},"163":{}},"component":{}}],["i2c_dev",{"_index":5191,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["i2cdetect",{"_index":5577,"title":{},"name":{},"text":{"65":{},"154":{}},"component":{}}],["i2cdump",{"_index":5578,"title":{},"name":{},"text":{"65":{},"154":{}},"component":{}}],["i_def",{"_index":120,"title":{},"name":{},"text":{"2":{},"88":{}},"component":{}}],["i_dscp_map",{"_index":132,"title":{},"name":{},"text":{"2":{},"88":{}},"component":{}}],["i_mod",{"_index":154,"title":{},"name":{},"text":{"2":{},"15":{},"88":{},"99":{}},"component":{}}],["i_tag_map",{"_index":138,"title":{},"name":{},"text":{"2":{},"15":{},"88":{},"99":{}},"component":{}}],["ib_trig_a",{"_index":3835,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["ib_trig_b",{"_index":3879,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["ib_trig_c",{"_index":3892,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["icmp",{"_index":6313,"title":{},"name":{},"text":{"82":{},"87":{},"173":{},"178":{}},"component":{}}],["icmp_seq=1",{"_index":277,"title":{},"name":{},"text":{"4":{},"15":{},"19":{},"90":{},"99":{},"105":{}},"component":{}}],["icmp_seq=2",{"_index":281,"title":{},"name":{},"text":{"4":{},"15":{},"19":{},"90":{},"99":{},"105":{}},"component":{}}],["icmp_seq=3",{"_index":283,"title":{},"name":{},"text":{"4":{},"15":{},"19":{},"90":{},"99":{},"105":{}},"component":{}}],["icmp_seq=4",{"_index":285,"title":{},"name":{},"text":{"4":{},"15":{},"19":{},"90":{},"99":{},"105":{}},"component":{}}],["icmpv6",{"_index":6554,"title":{},"name":{},"text":{"87":{},"178":{}},"component":{}}],["icp",{"_index":4741,"title":{},"name":{},"text":{"59":{},"60":{},"149":{},"150":{}},"component":{}}],["id",{"_index":298,"title":{"6-9":{},"6-10":{},"9-11":{},"55-6":{},"72-6":{},"94-8":{},"94-9":{},"96-10":{},"146-5":{},"162-5":{}},"name":{},"text":{"4":{},"6":{},"7":{},"8":{},"9":{},"12":{},"16":{},"23":{},"29":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"53":{},"55":{},"57":{},"58":{},"59":{},"60":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"69":{},"71":{},"73":{},"75":{},"78":{},"81":{},"84":{},"85":{},"86":{},"90":{},"92":{},"94":{},"95":{},"96":{},"98":{},"104":{},"111":{},"117":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"143":{},"145":{},"146":{},"148":{},"149":{},"150":{},"152":{},"153":{},"154":{},"155":{},"156":{},"157":{},"159":{},"161":{},"163":{},"166":{},"169":{},"172":{},"175":{},"176":{},"177":{}},"component":{}}],["id32",{"_index":2454,"title":{},"name":{},"text":{"45":{},"48":{},"49":{},"50":{},"52":{},"53":{},"58":{},"59":{},"60":{},"64":{},"65":{},"66":{},"68":{},"69":{},"70":{},"71":{},"73":{},"75":{},"133":{},"136":{},"137":{},"138":{},"142":{},"143":{},"145":{},"149":{},"150":{},"154":{},"155":{},"156":{},"158":{},"159":{},"160":{},"161":{},"163":{},"166":{}},"component":{}}],["id=id",{"_index":3725,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["id_id",{"_index":1690,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["id_r_1_11__v24_jan_2019.pdf",{"_index":4364,"title":{},"name":{},"text":{"55":{},"146":{}},"component":{}}],["idea",{"_index":4128,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["idel",{"_index":611,"title":{},"name":{},"text":{"6":{},"94":{}},"component":{}}],["ident",{"_index":4908,"title":{},"name":{},"text":{"59":{},"60":{},"62":{},"75":{},"149":{},"150":{},"152":{},"166":{}},"component":{}}],["identif",{"_index":825,"title":{"12-3":{},"98-2":{}},"name":{},"text":{"12":{},"23":{},"98":{},"111":{}},"component":{}}],["identifi",{"_index":848,"title":{},"name":{},"text":{"12":{},"14":{},"46":{},"52":{},"55":{},"59":{},"62":{},"68":{},"72":{},"73":{},"85":{},"98":{},"101":{},"134":{},"142":{},"146":{},"149":{},"152":{},"158":{},"162":{},"163":{},"165":{},"176":{}},"component":{}}],["idl",{"_index":662,"title":{},"name":{},"text":{"6":{},"28":{},"94":{},"115":{}},"component":{}}],["idleslop",{"_index":1870,"title":{},"name":{},"text":{"26":{},"28":{},"114":{},"115":{}},"component":{}}],["idproduct",{"_index":4599,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["idproduct=0002",{"_index":5121,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["idproduct=0003",{"_index":5141,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["idproduct=00df",{"_index":5832,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["idproduct=1234",{"_index":4619,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["idproduct=5406",{"_index":5906,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["idproduct=6001",{"_index":5285,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["idproduct=6124",{"_index":4727,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["idvendor",{"_index":4597,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["idvendor=03eb",{"_index":4726,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["idvendor=0403",{"_index":5284,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["idvendor=04d8",{"_index":5831,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["idvendor=0781",{"_index":5905,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["idvendor=1d6b",{"_index":5120,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["idvendor=abcd",{"_index":4618,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["idx",{"_index":2650,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["iec",{"_index":1645,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["ieee",{"_index":486,"title":{},"name":{},"text":{"4":{},"6":{},"10":{},"12":{},"15":{},"26":{},"27":{},"28":{},"29":{},"36":{},"77":{},"85":{},"87":{},"90":{},"94":{},"97":{},"98":{},"99":{},"112":{},"114":{},"115":{},"117":{},"124":{},"167":{},"176":{},"178":{}},"component":{}}],["ieee1588",{"_index":2021,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["ieee802.1a",{"_index":2023,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["if=/dev/mmcblk0p1",{"_index":4520,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["if=/dev/nul",{"_index":4562,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["if=/dev/urandom",{"_index":4693,"title":{},"name":{},"text":{"58":{},"145":{}},"component":{}}],["if=/dev/zero",{"_index":3586,"title":{},"name":{},"text":{"50":{},"56":{},"66":{},"138":{},"147":{},"156":{}},"component":{}}],["if=/sys/class/misc/tfa_ctl/fw_bind",{"_index":4527,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["if=/temp/ext4",{"_index":3176,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["if=/temp/lan966x_b0",{"_index":3173,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["if=/temp/lan969x_a0",{"_index":5551,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["if=data",{"_index":4523,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["if=key",{"_index":4511,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["if=rpicm4.img",{"_index":6678,"title":{},"name":{},"text":{"141":{}},"component":{}}],["if_igr_port_mask",{"_index":2103,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["ifconfig",{"_index":3284,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["ifconifg",{"_index":3280,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["ifh",{"_index":2407,"title":{},"name":{},"text":{"43":{},"130":{}},"component":{}}],["iflow",{"_index":923,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["iftlv",{"_index":687,"title":{},"name":{},"text":{"7":{},"92":{}},"component":{}}],["igb",{"_index":4735,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["igmp",{"_index":442,"title":{},"name":{},"text":{"4":{},"31":{},"33":{},"34":{},"37":{},"90":{},"119":{},"120":{},"121":{},"122":{}},"component":{}}],["igmp/mld",{"_index":170,"title":{"4-7":{},"90-6":{}},"name":{},"text":{"4":{},"17":{},"90":{},"106":{}},"component":{}}],["ignor",{"_index":1326,"title":{},"name":{},"text":{"14":{},"15":{},"28":{},"46":{},"62":{},"99":{},"101":{},"112":{},"115":{},"134":{},"152":{}},"component":{}}],["igr_port_mask",{"_index":886,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["illustr",{"_index":218,"title":{},"name":{},"text":{"4":{},"12":{},"46":{},"54":{},"55":{},"56":{},"62":{},"72":{},"79":{},"85":{},"90":{},"98":{},"134":{},"144":{},"146":{},"147":{},"152":{},"162":{},"170":{},"176":{}},"component":{}}],["imag",{"_index":12,"title":{"144":{},"170":{},"46-14":{},"46-15":{},"46-18":{},"46-32":{},"46-45":{},"46-49":{},"46-51":{},"54-1":{},"54-3":{},"54-6":{},"55-5":{},"55-6":{},"55-18":{},"55-19":{},"55-23":{},"62-14":{},"62-15":{},"62-18":{},"62-32":{},"62-44":{},"62-48":{},"62-50":{},"72-5":{},"72-6":{},"72-18":{},"72-19":{},"72-23":{},"79-1":{},"79-3":{},"79-7":{},"134-13":{},"134-14":{},"134-17":{},"134-31":{},"134-44":{},"134-48":{},"134-50":{},"141-4":{},"144-2":{},"144-5":{},"146-4":{},"146-5":{},"146-17":{},"146-18":{},"146-22":{},"152-13":{},"152-14":{},"152-17":{},"152-31":{},"152-43":{},"152-47":{},"152-49":{},"162-4":{},"162-5":{},"162-17":{},"162-18":{},"162-22":{},"165-6":{},"170-2":{},"170-6":{}},"name":{},"text":{"1":{},"14":{},"32":{},"40":{},"43":{},"46":{},"54":{},"55":{},"56":{},"59":{},"62":{},"72":{},"73":{},"75":{},"79":{},"80":{},"89":{},"101":{},"118":{},"127":{},"130":{},"131":{},"134":{},"140":{},"141":{},"144":{},"146":{},"147":{},"149":{},"152":{},"162":{},"163":{},"165":{},"166":{},"170":{},"171":{}},"component":{}}],["image.itb",{"_index":2919,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["image.sh",{"_index":1194,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["images/kernel",{"_index":5520,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["img",{"_index":2586,"title":{"46-53":{},"62-52":{},"134-52":{},"152-51":{}},"name":{},"text":{"62":{},"152":{}},"component":{}}],["imggen.rb",{"_index":1207,"title":{},"name":{},"text":{"14":{},"80":{},"101":{},"171":{}},"component":{}}],["immedi",{"_index":1774,"title":{},"name":{},"text":{"22":{},"23":{},"26":{},"40":{},"81":{},"86":{},"87":{},"109":{},"111":{},"114":{},"127":{},"172":{},"177":{},"178":{}},"component":{}}],["immut",{"_index":3179,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"72":{},"134":{},"146":{},"152":{},"162":{}},"component":{}}],["impact",{"_index":99,"title":{},"name":{},"text":{"2":{},"7":{},"46":{},"55":{},"62":{},"72":{},"88":{},"92":{},"134":{},"146":{},"152":{},"162":{}},"component":{}}],["implement",{"_index":376,"title":{},"name":{},"text":{"4":{},"6":{},"10":{},"16":{},"17":{},"22":{},"23":{},"26":{},"27":{},"28":{},"31":{},"33":{},"34":{},"36":{},"37":{},"43":{},"46":{},"48":{},"49":{},"51":{},"55":{},"58":{},"59":{},"62":{},"64":{},"65":{},"67":{},"71":{},"72":{},"74":{},"85":{},"90":{},"94":{},"97":{},"104":{},"106":{},"109":{},"111":{},"112":{},"114":{},"115":{},"119":{},"120":{},"121":{},"122":{},"124":{},"130":{},"134":{},"136":{},"137":{},"139":{},"145":{},"146":{},"149":{},"152":{},"154":{},"155":{},"157":{},"161":{},"162":{},"164":{},"165":{},"176":{}},"component":{}}],["implementor",{"_index":4927,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["impli",{"_index":2033,"title":{},"name":{},"text":{"28":{},"55":{},"72":{},"115":{},"146":{},"162":{}},"component":{}}],["implicit",{"_index":1802,"title":{},"name":{},"text":{"23":{},"111":{}},"component":{}}],["import",{"_index":1967,"title":{},"name":{},"text":{"27":{},"46":{},"51":{},"55":{},"62":{},"67":{},"72":{},"85":{},"112":{},"134":{},"139":{},"146":{},"152":{},"157":{},"162":{},"176":{}},"component":{}}],["improv",{"_index":488,"title":{},"name":{},"text":{"4":{},"55":{},"62":{},"90":{},"146":{},"152":{}},"component":{}}],["in_hw",{"_index":1756,"title":{},"name":{},"text":{"22":{},"23":{},"81":{},"86":{},"87":{},"109":{},"111":{},"172":{},"177":{},"178":{}},"component":{}}],["in_hw_count",{"_index":1782,"title":{},"name":{},"text":{"22":{},"23":{},"81":{},"86":{},"87":{},"109":{},"111":{},"172":{},"177":{},"178":{}},"component":{}}],["in_id",{"_index":1688,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["in_mod",{"_index":1692,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["in_rol",{"_index":1687,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["inappropri",{"_index":1713,"title":{},"name":{},"text":{"18":{},"103":{}},"component":{}}],["inc",{"_index":1139,"title":{},"name":{},"text":{"14":{},"55":{},"72":{},"73":{},"101":{},"146":{},"162":{},"163":{}},"component":{}}],["incbin/(\"./lan966x_pcb8385_sb_lan8840.dtbo",{"_index":6649,"title":{},"name":{},"text":{"140":{}},"component":{}}],["incbin/(\"arch/arm/boot/dts/lan966x_pcb8290.dtb",{"_index":4203,"title":{},"name":{},"text":{"55":{},"146":{}},"component":{}}],["incbin/(\"arch/arm/boot/dts/lan966x_pcb8291.dtb",{"_index":4200,"title":{},"name":{},"text":{"55":{},"146":{}},"component":{}}],["incbin/(\"arch/arm/boot/zimag",{"_index":4197,"title":{},"name":{},"text":{"55":{},"146":{}},"component":{}}],["incbin/(\"images/mscc",{"_index":5801,"title":{},"name":{},"text":{"72":{},"162":{}},"component":{}}],["incbin/(\"images/sparx5_pcb134.dtb",{"_index":5803,"title":{},"name":{},"text":{"72":{},"162":{}},"component":{}}],["incbin/(\"rootfs.squashf",{"_index":4204,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["incident",{"_index":4463,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["includ",{"_index":762,"title":{},"name":{},"text":{"10":{},"13":{},"14":{},"18":{},"23":{},"31":{},"32":{},"34":{},"36":{},"37":{},"46":{},"47":{},"49":{},"50":{},"51":{},"55":{},"61":{},"62":{},"63":{},"65":{},"66":{},"67":{},"72":{},"80":{},"81":{},"86":{},"87":{},"97":{},"101":{},"102":{},"103":{},"111":{},"118":{},"119":{},"120":{},"121":{},"124":{},"134":{},"135":{},"136":{},"138":{},"139":{},"146":{},"151":{},"152":{},"153":{},"154":{},"156":{},"157":{},"162":{},"165":{},"171":{},"172":{},"177":{},"178":{}},"component":{}}],["incom",{"_index":1775,"title":{},"name":{},"text":{"22":{},"109":{}},"component":{}}],["incomplet",{"_index":2195,"title":{},"name":{},"text":{"31":{},"33":{},"34":{},"35":{},"37":{},"49":{},"56":{},"119":{},"120":{},"121":{},"122":{},"123":{},"136":{},"147":{}},"component":{}}],["incorrect",{"_index":2419,"title":{},"name":{},"text":{"43":{},"130":{}},"component":{}}],["increas",{"_index":371,"title":{},"name":{},"text":{"4":{},"26":{},"80":{},"84":{},"90":{},"114":{},"171":{},"175":{}},"component":{}}],["increment",{"_index":2212,"title":{},"name":{},"text":{"31":{},"33":{},"34":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"51":{},"55":{},"67":{},"72":{},"81":{},"119":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"139":{},"146":{},"157":{},"162":{},"172":{}},"component":{}}],["independ",{"_index":4307,"title":{},"name":{},"text":{"55":{},"72":{},"85":{},"146":{},"162":{},"176":{}},"component":{}}],["index",{"_index":965,"title":{},"name":{"13":{},"102":{}},"text":{"22":{},"23":{},"29":{},"45":{},"46":{},"48":{},"49":{},"50":{},"52":{},"53":{},"58":{},"59":{},"60":{},"62":{},"64":{},"65":{},"66":{},"68":{},"69":{},"70":{},"71":{},"73":{},"75":{},"81":{},"83":{},"84":{},"86":{},"87":{},"109":{},"111":{},"117":{},"133":{},"134":{},"136":{},"137":{},"138":{},"142":{},"143":{},"145":{},"149":{},"150":{},"152":{},"154":{},"155":{},"156":{},"158":{},"159":{},"160":{},"161":{},"163":{},"166":{},"172":{},"174":{},"175":{},"177":{},"178":{}},"component":{}}],["indi",{"_index":2427,"title":{},"name":{},"text":{"43":{},"61":{},"78":{},"130":{},"151":{},"169":{}},"component":{}}],["indic",{"_index":1300,"title":{},"name":{},"text":{"14":{},"26":{},"55":{},"56":{},"72":{},"101":{},"114":{},"146":{},"147":{},"162":{}},"component":{}}],["indirect",{"_index":4462,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["indirectli",{"_index":942,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["individu",{"_index":63,"title":{},"name":{},"text":{"1":{},"4":{},"12":{},"15":{},"46":{},"55":{},"62":{},"72":{},"84":{},"85":{},"89":{},"90":{},"98":{},"99":{},"134":{},"146":{},"152":{},"162":{},"165":{},"175":{},"176":{}},"component":{}}],["industri",{"_index":4434,"title":{},"name":{},"text":{"55":{},"72":{},"77":{},"146":{},"162":{},"167":{}},"component":{}}],["inet",{"_index":263,"title":{},"name":{},"text":{"4":{},"15":{},"19":{},"48":{},"90":{},"99":{},"105":{},"137":{}},"component":{}}],["inet6",{"_index":269,"title":{},"name":{},"text":{"4":{},"15":{},"19":{},"48":{},"90":{},"99":{},"105":{},"137":{}},"component":{}}],["influenc",{"_index":728,"title":{},"name":{},"text":{"9":{},"46":{},"55":{},"62":{},"72":{},"96":{},"134":{},"146":{},"152":{},"162":{}},"component":{}}],["info",{"_index":2139,"title":{},"name":{},"text":{"29":{},"46":{},"51":{},"53":{},"54":{},"55":{},"58":{},"62":{},"67":{},"69":{},"72":{},"117":{},"134":{},"139":{},"143":{},"144":{},"145":{},"146":{},"152":{},"157":{},"159":{},"162":{},"165":{}},"component":{}}],["inform",{"_index":219,"title":{"54-2":{},"79-2":{},"84-3":{},"144-1":{},"170-1":{},"175-2":{}},"name":{},"text":{"4":{},"6":{},"10":{},"12":{},"14":{},"15":{},"16":{},"22":{},"23":{},"29":{},"30":{},"40":{},"46":{},"49":{},"50":{},"54":{},"55":{},"56":{},"62":{},"66":{},"72":{},"74":{},"79":{},"81":{},"85":{},"86":{},"87":{},"90":{},"94":{},"97":{},"98":{},"99":{},"101":{},"104":{},"109":{},"111":{},"112":{},"116":{},"117":{},"127":{},"134":{},"136":{},"138":{},"144":{},"146":{},"147":{},"152":{},"156":{},"162":{},"164":{},"165":{},"170":{},"172":{},"176":{},"177":{},"178":{}},"component":{}}],["ing",{"_index":380,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["ingress",{"_index":87,"title":{"2-5":{},"8-2":{},"9-13":{},"12-7":{},"88-4":{},"95-1":{},"96-12":{},"98-6":{}},"name":{},"text":{"2":{},"4":{},"7":{},"8":{},"9":{},"12":{},"17":{},"22":{},"23":{},"29":{},"30":{},"33":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"83":{},"84":{},"85":{},"86":{},"87":{},"88":{},"90":{},"92":{},"95":{},"96":{},"98":{},"106":{},"109":{},"111":{},"116":{},"117":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"174":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["ingress_block",{"_index":6484,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["inher",{"_index":6727,"title":{},"name":{},"text":{"165":{}},"component":{}}],["init",{"_index":2845,"title":{},"name":{},"text":{"46":{},"51":{},"57":{},"59":{},"62":{},"67":{},"134":{},"139":{},"148":{},"149":{},"152":{},"157":{}},"component":{}}],["initi",{"_index":1192,"title":{"84-7":{},"175-6":{}},"name":{},"text":{"14":{},"38":{},"46":{},"51":{},"52":{},"54":{},"55":{},"59":{},"62":{},"67":{},"68":{},"72":{},"79":{},"80":{},"101":{},"125":{},"134":{},"139":{},"142":{},"144":{},"146":{},"149":{},"152":{},"157":{},"158":{},"162":{},"165":{},"170":{},"171":{}},"component":{}}],["initialis",{"_index":6790,"title":{},"name":{},"text":{"165":{}},"component":{}}],["initmem",{"_index":4822,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["initramf",{"_index":1021,"title":{},"name":{},"text":{"14":{},"46":{},"59":{},"62":{},"101":{},"134":{},"149":{},"152":{}},"component":{}}],["initramfs.ext4",{"_index":1202,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["initramfs.itb",{"_index":1199,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["initrd",{"_index":5045,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["initrd_high",{"_index":3013,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["initrd_high=0xffffffff",{"_index":2879,"title":{},"name":{},"text":{"46":{},"59":{},"62":{},"134":{},"149":{},"152":{}},"component":{}}],["initrd_start",{"_index":2941,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["inject",{"_index":2176,"title":{},"name":{},"text":{"30":{},"116":{},"131":{}},"component":{}}],["injection/captur",{"_index":2175,"title":{},"name":{},"text":{"30":{},"116":{}},"component":{}}],["inner",{"_index":6415,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["inod",{"_index":2738,"title":{},"name":{},"text":{"46":{},"50":{},"59":{},"62":{},"134":{},"138":{},"149":{},"152":{}},"component":{}}],["input",{"_index":2328,"title":{},"name":{},"text":{"36":{},"46":{},"49":{},"50":{},"52":{},"53":{},"55":{},"58":{},"59":{},"62":{},"65":{},"66":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"112":{},"124":{},"134":{},"136":{},"138":{},"142":{},"143":{},"145":{},"146":{},"149":{},"152":{},"154":{},"156":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"165":{}},"component":{}}],["input/output",{"_index":4535,"title":{},"name":{},"text":{"56":{},"77":{},"147":{},"167":{}},"component":{}}],["inr(int1",{"_index":3260,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["inrangelengtherror",{"_index":1475,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["insecur",{"_index":4325,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{},"165":{}},"component":{}}],["insert",{"_index":131,"title":{},"name":{},"text":{"2":{},"6":{},"7":{},"12":{},"61":{},"74":{},"82":{},"86":{},"87":{},"88":{},"92":{},"94":{},"98":{},"141":{},"151":{},"164":{},"173":{},"177":{},"178":{}},"component":{}}],["insert/remov",{"_index":199,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["insid",{"_index":1234,"title":{},"name":{},"text":{"14":{},"46":{},"54":{},"55":{},"62":{},"72":{},"79":{},"85":{},"101":{},"134":{},"144":{},"146":{},"152":{},"162":{},"165":{},"170":{},"176":{}},"component":{}}],["inspect",{"_index":1962,"title":{},"name":{},"text":{"27":{},"29":{},"80":{},"112":{},"117":{},"171":{}},"component":{}}],["instal",{"_index":1034,"title":{},"name":{},"text":{"14":{},"22":{},"23":{},"60":{},"75":{},"81":{},"86":{},"87":{},"101":{},"109":{},"111":{},"150":{},"166":{},"172":{},"177":{},"178":{}},"component":{}}],["install(target",{"_index":1266,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["instanc",{"_index":559,"title":{"27-7":{},"45-10":{},"48-8":{},"49-8":{},"50-8":{},"52-8":{},"53-8":{},"58-8":{},"59-7":{},"60-8":{},"65-8":{},"66-8":{},"68-8":{},"69-8":{},"70-8":{},"73-8":{},"75-8":{},"112-6":{},"133-9":{},"136-7":{},"137-7":{},"138-7":{},"142-7":{},"143-7":{},"145-7":{},"149-6":{},"150-7":{},"154-7":{},"156-7":{},"158-7":{},"159-7":{},"160-7":{},"163-7":{},"166-7":{}},"name":{},"text":{"6":{},"7":{},"9":{},"16":{},"27":{},"29":{},"31":{},"34":{},"43":{},"48":{},"57":{},"60":{},"64":{},"66":{},"74":{},"75":{},"84":{},"92":{},"94":{},"96":{},"104":{},"112":{},"117":{},"119":{},"121":{},"130":{},"137":{},"148":{},"150":{},"155":{},"156":{},"164":{},"166":{},"175":{}},"component":{}}],["instead",{"_index":503,"title":{},"name":{},"text":{"4":{},"14":{},"27":{},"46":{},"55":{},"56":{},"62":{},"72":{},"80":{},"85":{},"90":{},"101":{},"112":{},"134":{},"141":{},"146":{},"147":{},"152":{},"162":{},"171":{},"176":{}},"component":{}}],["instruct",{"_index":1293,"title":{},"name":{},"text":{"14":{},"46":{},"54":{},"55":{},"59":{},"62":{},"79":{},"101":{},"134":{},"144":{},"146":{},"149":{},"152":{},"170":{}},"component":{}}],["int",{"_index":1268,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["int0",{"_index":3268,"title":{},"name":{},"text":{"48":{},"64":{},"137":{},"155":{}},"component":{}}],["int1",{"_index":3269,"title":{},"name":{},"text":{"48":{},"64":{},"137":{},"155":{}},"component":{}}],["int=1",{"_index":5395,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["int_statu",{"_index":4501,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["integr",{"_index":22,"title":{"165-8":{}},"name":{},"text":{"1":{},"13":{},"47":{},"49":{},"55":{},"59":{},"63":{},"65":{},"72":{},"73":{},"89":{},"102":{},"135":{},"136":{},"146":{},"149":{},"153":{},"154":{},"162":{},"163":{},"165":{}},"component":{}}],["intend",{"_index":4334,"title":{},"name":{},"text":{"55":{},"72":{},"81":{},"146":{},"162":{},"172":{}},"component":{}}],["inter",{"_index":5552,"title":{},"name":{},"text":{"63":{},"153":{}},"component":{}}],["interact",{"_index":1961,"title":{},"name":{},"text":{"27":{},"46":{},"62":{},"112":{},"134":{},"141":{},"152":{}},"component":{}}],["intercept",{"_index":4304,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["interconnect",{"_index":583,"title":{},"name":{},"text":{"6":{},"16":{},"46":{},"55":{},"62":{},"72":{},"94":{},"104":{},"134":{},"146":{},"152":{},"162":{}},"component":{}}],["interest",{"_index":451,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["interfac",{"_index":180,"title":{"15-2":{},"19-2":{},"52-10":{},"59-11":{},"59-12":{},"68-10":{},"99-1":{},"105-1":{},"142-9":{},"149-10":{},"149-11":{},"158-9":{}},"name":{},"text":{"4":{},"6":{},"7":{},"10":{},"15":{},"16":{},"19":{},"27":{},"28":{},"29":{},"30":{},"36":{},"46":{},"47":{},"48":{},"49":{},"50":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"69":{},"71":{},"72":{},"73":{},"75":{},"78":{},"79":{},"80":{},"84":{},"85":{},"90":{},"92":{},"94":{},"97":{},"99":{},"104":{},"105":{},"112":{},"115":{},"116":{},"117":{},"124":{},"134":{},"135":{},"136":{},"137":{},"138":{},"141":{},"142":{},"143":{},"144":{},"145":{},"146":{},"147":{},"148":{},"149":{},"150":{},"151":{},"152":{},"153":{},"154":{},"155":{},"156":{},"159":{},"161":{},"162":{},"163":{},"166":{},"169":{},"170":{},"171":{},"175":{},"176":{}},"component":{}}],["intern",{"_index":1373,"title":{},"name":{},"text":{"15":{},"23":{},"46":{},"51":{},"55":{},"61":{},"67":{},"72":{},"77":{},"78":{},"81":{},"86":{},"87":{},"99":{},"111":{},"131":{},"134":{},"139":{},"146":{},"151":{},"157":{},"162":{},"167":{},"169":{},"172":{},"177":{},"178":{}},"component":{}}],["interpret",{"_index":3767,"title":{},"name":{},"text":{"51":{},"139":{}},"component":{}}],["interrupt",{"_index":2327,"title":{},"name":{},"text":{"36":{},"45":{},"46":{},"48":{},"49":{},"50":{},"52":{},"53":{},"55":{},"57":{},"58":{},"59":{},"60":{},"62":{},"64":{},"65":{},"66":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"124":{},"133":{},"134":{},"136":{},"137":{},"138":{},"142":{},"143":{},"145":{},"146":{},"148":{},"149":{},"150":{},"152":{},"154":{},"155":{},"156":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"166":{}},"component":{}}],["interrupt(int0",{"_index":3257,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["interrupt(int1",{"_index":3259,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["interrupt:36",{"_index":3305,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["interv",{"_index":427,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"23":{},"86":{},"90":{},"92":{},"94":{},"111":{},"112":{},"177":{}},"component":{}}],["intr",{"_index":2451,"title":{},"name":{},"text":{"45":{},"48":{},"49":{},"50":{},"52":{},"53":{},"58":{},"59":{},"60":{},"64":{},"65":{},"66":{},"68":{},"69":{},"70":{},"71":{},"73":{},"74":{},"75":{},"133":{},"136":{},"137":{},"138":{},"142":{},"143":{},"145":{},"149":{},"150":{},"154":{},"155":{},"156":{},"158":{},"159":{},"160":{},"161":{},"163":{},"164":{},"166":{}},"component":{}}],["intr(int0",{"_index":3258,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["intro",{"_index":6445,"title":{},"name":{"85":{},"176":{}},"text":{},"component":{}}],["introduc",{"_index":2225,"title":{},"name":{},"text":{"32":{},"38":{},"55":{},"72":{},"118":{},"125":{},"146":{},"162":{}},"component":{}}],["introduct",{"_index":355,"title":{"18":{},"103":{},"6-2":{},"7-2":{},"16-2":{},"18-2":{},"46-2":{},"55-2":{},"62-2":{},"72-2":{},"84-2":{},"85-1":{},"92-1":{},"94-1":{},"103-2":{},"104-1":{},"134-1":{},"140-1":{},"146-1":{},"152-1":{},"162-1":{},"165-1":{},"175-1":{},"176-1":{}},"name":{"18":{},"103":{}},"text":{"4":{},"12":{},"22":{},"23":{},"29":{},"85":{},"90":{},"98":{},"109":{},"111":{},"117":{},"165":{},"176":{}},"component":{}}],["invalid",{"_index":3615,"title":{},"name":{},"text":{"50":{},"51":{},"59":{},"66":{},"67":{},"138":{},"139":{},"149":{},"156":{},"157":{}},"component":{}}],["invers",{"_index":6750,"title":{},"name":{},"text":{"165":{}},"component":{}}],["investig",{"_index":6607,"title":{},"name":{},"text":{"116":{}},"component":{}}],["involv",{"_index":955,"title":{},"name":{},"text":{"12":{},"15":{},"19":{},"46":{},"80":{},"86":{},"98":{},"99":{},"105":{},"134":{},"171":{},"177":{}},"component":{}}],["io",{"_index":3252,"title":{},"name":{},"text":{"48":{},"50":{},"59":{},"64":{},"66":{},"137":{},"138":{},"141":{},"149":{},"155":{},"156":{},"165":{}},"component":{}}],["io0",{"_index":3986,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["io1",{"_index":3987,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["io2",{"_index":3988,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["io3",{"_index":3989,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["ioam",{"_index":5230,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["ioctl",{"_index":3630,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["iodatar2",{"_index":2520,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["iommu",{"_index":4953,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["ip",{"_index":128,"title":{"4-2":{},"15-3":{},"19-3":{},"90-1":{},"99-2":{},"105-2":{}},"name":{},"text":{"2":{},"4":{},"6":{},"7":{},"9":{},"12":{},"15":{},"16":{},"18":{},"19":{},"22":{},"23":{},"27":{},"29":{},"30":{},"46":{},"48":{},"57":{},"59":{},"62":{},"82":{},"84":{},"85":{},"86":{},"87":{},"88":{},"90":{},"92":{},"94":{},"96":{},"98":{},"99":{},"103":{},"104":{},"105":{},"109":{},"111":{},"112":{},"116":{},"117":{},"134":{},"137":{},"148":{},"149":{},"152":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["ip/udp",{"_index":6434,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["ip4_oth",{"_index":6283,"title":{"82-5":{},"87-9":{},"173-4":{},"178-8":{}},"name":{},"text":{"82":{},"84":{},"87":{},"173":{},"175":{},"178":{}},"component":{}}],["ip4_tcp_udp",{"_index":6284,"title":{"82-6":{},"87-8":{},"173-5":{},"178-7":{}},"name":{},"text":{"82":{},"84":{},"87":{},"173":{},"175":{},"178":{}},"component":{}}],["ip6",{"_index":6548,"title":{},"name":{},"text":{"87":{},"178":{}},"component":{}}],["ip6_oth",{"_index":6538,"title":{"87-7":{},"178-6":{}},"name":{},"text":{"87":{},"178":{}},"component":{}}],["ip6_std",{"_index":6549,"title":{},"name":{},"text":{"87":{},"178":{}},"component":{}}],["ip6_tcp_udp",{"_index":6537,"title":{"87-6":{},"178-5":{}},"name":{},"text":{"87":{},"178":{}},"component":{}}],["ip_7tupl",{"_index":6286,"title":{"82-8":{},"87-5":{},"173-7":{},"178-4":{}},"name":{},"text":{"82":{},"87":{},"173":{},"178":{}},"component":{}}],["ip_flag",{"_index":6307,"title":{},"name":{},"text":{"82":{},"84":{},"86":{},"87":{},"173":{},"175":{},"177":{},"178":{}},"component":{}}],["ip_proto",{"_index":6312,"title":{},"name":{},"text":{"82":{},"84":{},"85":{},"86":{},"87":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["ip_to",{"_index":6304,"title":{},"name":{},"text":{"82":{},"84":{},"86":{},"87":{},"173":{},"175":{},"177":{},"178":{}},"component":{}}],["ip_ttl",{"_index":6551,"title":{},"name":{},"text":{"87":{},"178":{}},"component":{}}],["ipaddr",{"_index":2854,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["ipaddr=10.99.10.174",{"_index":4775,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["iport",{"_index":1689,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["iproute2",{"_index":1060,"title":{},"name":{},"text":{"14":{},"15":{},"18":{},"30":{},"85":{},"99":{},"101":{},"103":{},"116":{},"176":{}},"component":{}}],["iptabl",{"_index":5876,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["iputil",{"_index":1061,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["ipv",{"_index":1816,"title":{},"name":{},"text":{"23":{},"86":{},"111":{},"177":{}},"component":{}}],["ipv4",{"_index":443,"title":{"86-13":{},"177-12":{}},"name":{},"text":{"4":{},"22":{},"27":{},"29":{},"48":{},"59":{},"82":{},"84":{},"86":{},"87":{},"90":{},"109":{},"112":{},"117":{},"137":{},"149":{},"173":{},"175":{},"177":{},"178":{}},"component":{}}],["ipv4/ipv6",{"_index":408,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["ipv4/tcp",{"_index":6324,"title":{},"name":{},"text":{"82":{},"87":{},"173":{},"178":{}},"component":{}}],["ipv4_oth",{"_index":2114,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["ipv4_tcp_udp",{"_index":2113,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["ipv6",{"_index":445,"title":{},"name":{},"text":{"4":{},"27":{},"29":{},"31":{},"34":{},"48":{},"59":{},"82":{},"84":{},"85":{},"86":{},"87":{},"90":{},"112":{},"117":{},"119":{},"121":{},"137":{},"149":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["ipv6/tcp",{"_index":6335,"title":{},"name":{},"text":{"82":{},"87":{},"173":{},"178":{}},"component":{}}],["ipv6_oth",{"_index":2116,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["ipv6_tcp_udp",{"_index":2115,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["irq",{"_index":4859,"title":{},"name":{},"text":{"59":{},"68":{},"69":{},"149":{},"158":{},"159":{}},"component":{}}],["irq0",{"_index":5647,"title":{},"name":{},"text":{"68":{},"158":{}},"component":{}}],["irq1",{"_index":5650,"title":{},"name":{},"text":{"68":{},"158":{}},"component":{}}],["irq3",{"_index":5656,"title":{},"name":{},"text":{"68":{},"158":{}},"component":{}}],["irq4",{"_index":5658,"title":{},"name":{},"text":{"68":{},"158":{}},"component":{}}],["irq_in_a",{"_index":3882,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["irq_in_b",{"_index":3894,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["irq_in_c",{"_index":3837,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["irq_out_a",{"_index":3880,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["irq_out_b",{"_index":3893,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["irq_out_c",{"_index":3838,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["irrespect",{"_index":2295,"title":{},"name":{},"text":{"35":{},"36":{},"123":{},"124":{}},"component":{}}],["is0",{"_index":752,"title":{"86-2":{},"177-1":{}},"name":{},"text":{"9":{},"84":{},"86":{},"96":{},"175":{},"177":{}},"component":{}}],["is0/clm",{"_index":2313,"title":{},"name":{},"text":{"36":{},"124":{}},"component":{}}],["is0/is1",{"_index":6391,"title":{"177":{},"86-1":{},"86-4":{},"86-13":{},"86-14":{},"86-15":{},"177-3":{},"177-12":{},"177-13":{},"177-14":{}},"name":{},"text":{"84":{},"86":{},"98":{},"175":{},"177":{}},"component":{}}],["is004g",{"_index":3566,"title":{},"name":{},"text":{"50":{},"52":{},"59":{},"138":{},"142":{},"149":{}},"component":{}}],["is008",{"_index":2797,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["is1",{"_index":753,"title":{"84-13":{},"86-3":{},"175-12":{},"177-2":{}},"name":{"86":{},"177":{}},"text":{"9":{},"12":{},"23":{},"29":{},"82":{},"84":{},"86":{},"87":{},"96":{},"98":{},"111":{},"117":{},"173":{},"175":{},"177":{},"178":{}},"component":{}}],["is2",{"_index":367,"title":{"178":{},"82-2":{},"84-18":{},"87-1":{},"87-2":{},"87-3":{},"87-4":{},"87-15":{},"87-16":{},"173-1":{},"175-17":{},"178-1":{},"178-2":{},"178-3":{},"178-14":{},"178-15":{}},"name":{"87":{},"178":{}},"text":{"4":{},"9":{},"22":{},"29":{},"36":{},"82":{},"84":{},"86":{},"87":{},"90":{},"96":{},"109":{},"117":{},"124":{},"173":{},"175":{},"177":{},"178":{}},"component":{}}],["isdx",{"_index":725,"title":{"9-13":{},"81-2":{},"96-12":{},"172-1":{}},"name":{},"text":{"9":{},"12":{},"81":{},"84":{},"96":{},"98":{},"172":{},"175":{}},"component":{}}],["isdx_add_v",{"_index":895,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["isdx_gt0_i",{"_index":2105,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["isdx_replace_ena",{"_index":894,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["isol",{"_index":1430,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["issu",{"_index":558,"title":{},"name":{},"text":{"6":{},"10":{},"31":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"55":{},"72":{},"94":{},"97":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"146":{},"162":{}},"component":{}}],["istax",{"_index":1731,"title":{},"name":{},"text":{"18":{},"31":{},"32":{},"34":{},"37":{},"103":{},"118":{},"119":{},"120":{},"121":{}},"component":{}}],["itb",{"_index":1012,"title":{"46-28":{},"46-30":{},"62-28":{},"62-30":{},"134-27":{},"134-29":{},"152-27":{},"152-29":{}},"name":{},"text":{"14":{},"46":{},"55":{},"62":{},"72":{},"80":{},"101":{},"134":{},"146":{},"152":{},"162":{},"165":{},"171":{}},"component":{}}],["itb/fit",{"_index":4186,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["itb_rootf",{"_index":1029,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["item",{"_index":2672,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["itself",{"_index":257,"title":{},"name":{},"text":{"4":{},"16":{},"26":{},"27":{},"55":{},"56":{},"72":{},"85":{},"90":{},"104":{},"112":{},"114":{},"146":{},"147":{},"162":{},"165":{},"176":{}},"component":{}}],["itu",{"_index":545,"title":{},"name":{},"text":{"6":{},"94":{}},"component":{}}],["it’",{"_index":316,"title":{},"name":{},"text":{"4":{},"52":{},"68":{},"90":{},"142":{},"158":{}},"component":{}}],["ix",{"_index":1830,"title":{},"name":{},"text":{"23":{},"111":{}},"component":{}}],["j2",{"_index":6668,"title":{},"name":{},"text":{"141":{}},"component":{}}],["j8",{"_index":6708,"title":{},"name":{},"text":{"141":{}},"component":{}}],["jaguar2_pcb110",{"_index":5993,"title":{},"name":{},"text":{"76":{},"168":{}},"component":{}}],["jaguar2_pcb111",{"_index":5994,"title":{},"name":{},"text":{"76":{},"168":{}},"component":{}}],["jaguar2_pcb118",{"_index":5995,"title":{},"name":{},"text":{"76":{},"168":{}},"component":{}}],["jan",{"_index":3551,"title":{},"name":{},"text":{"50":{},"53":{},"56":{},"58":{},"59":{},"60":{},"66":{},"67":{},"69":{},"75":{},"85":{},"138":{},"143":{},"145":{},"147":{},"149":{},"150":{},"156":{},"157":{},"159":{},"166":{},"176":{}},"component":{}}],["jedec,spi",{"_index":4673,"title":{},"name":{},"text":{"58":{},"69":{},"145":{},"159":{}},"component":{}}],["jedec_spi_nor",{"_index":3120,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["jiffi",{"_index":1846,"title":{},"name":{},"text":{"23":{},"59":{},"111":{},"149":{}},"component":{}}],["jiri",{"_index":5215,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["joint",{"_index":3193,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"72":{},"134":{},"146":{},"152":{},"162":{}},"component":{}}],["jre",{"_index":1050,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["jtag",{"_index":3192,"title":{"55-47":{},"72-39":{},"146-46":{},"162-38":{}},"name":{},"text":{"46":{},"55":{},"56":{},"62":{},"72":{},"134":{},"146":{},"147":{},"152":{},"162":{}},"component":{}}],["jtag_uuid",{"_index":3792,"title":{},"name":{},"text":{"51":{},"55":{},"67":{},"72":{},"139":{},"146":{},"157":{},"162":{}},"component":{}}],["jul",{"_index":6498,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["jump",{"_index":4120,"title":{},"name":{},"text":{"55":{},"72":{},"85":{},"146":{},"162":{},"176":{}},"component":{}}],["k",{"_index":2494,"title":{},"name":{},"text":{"45":{},"49":{},"80":{},"133":{},"136":{},"165":{},"171":{}},"component":{}}],["kbp",{"_index":1851,"title":{},"name":{},"text":{"23":{},"28":{},"111":{},"115":{}},"component":{}}],["kbyte",{"_index":4687,"title":{},"name":{},"text":{"58":{},"59":{},"69":{},"145":{},"149":{},"159":{}},"component":{}}],["kconfig",{"_index":983,"title":{},"name":{},"text":{"13":{},"18":{},"102":{},"103":{}},"component":{}}],["keep",{"_index":310,"title":{},"name":{},"text":{"4":{},"7":{},"55":{},"72":{},"84":{},"90":{},"92":{},"146":{},"162":{},"175":{}},"component":{}}],["kept",{"_index":4109,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{},"165":{}},"component":{}}],["kern.crit",{"_index":5386,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["kernel",{"_index":5,"title":{"32-6":{},"39-4":{},"45-3":{},"46-20":{},"47-3":{},"48-3":{},"49-3":{},"50-3":{},"51-3":{},"52-3":{},"53-3":{},"56-3":{},"57-3":{},"57-6":{},"58-3":{},"59-3":{},"60-3":{},"62-20":{},"63-3":{},"64-3":{},"65-3":{},"66-3":{},"67-3":{},"68-3":{},"69-3":{},"70-3":{},"71-3":{},"73-3":{},"74-3":{},"75-3":{},"118-5":{},"126-3":{},"133-2":{},"134-19":{},"135-2":{},"136-2":{},"137-2":{},"138-2":{},"139-2":{},"141-2":{},"142-2":{},"143-2":{},"145-2":{},"147-2":{},"148-2":{},"148-5":{},"149-2":{},"150-2":{},"152-19":{},"153-2":{},"154-2":{},"155-2":{},"156-2":{},"157-2":{},"158-2":{},"159-2":{},"160-2":{},"161-2":{},"163-2":{},"164-2":{},"166-2":{}},"name":{},"text":{"1":{},"4":{},"6":{},"14":{},"15":{},"16":{},"18":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"77":{},"78":{},"80":{},"81":{},"85":{},"86":{},"87":{},"89":{},"90":{},"94":{},"99":{},"101":{},"103":{},"104":{},"116":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"141":{},"142":{},"143":{},"145":{},"146":{},"147":{},"148":{},"149":{},"150":{},"151":{},"152":{},"153":{},"154":{},"155":{},"156":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"169":{},"171":{},"172":{},"176":{},"177":{},"178":{}},"component":{}}],["kernel.bin",{"_index":5498,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["kernel.bin.gz",{"_index":5499,"title":{},"name":{},"text":{"62":{},"72":{},"80":{},"152":{},"162":{},"171":{}},"component":{}}],["kernel.bin.xz",{"_index":5500,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["kernel’",{"_index":6152,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["key",{"_index":739,"title":{"55-16":{},"72-16":{},"84-15":{},"84-20":{},"84-25":{},"146-15":{},"162-15":{},"165-4":{},"165-6":{},"175-14":{},"175-19":{},"175-24":{}},"name":{},"text":{"9":{},"12":{},"29":{},"46":{},"51":{},"55":{},"56":{},"60":{},"62":{},"67":{},"72":{},"73":{},"75":{},"77":{},"80":{},"81":{},"82":{},"84":{},"85":{},"86":{},"87":{},"96":{},"98":{},"117":{},"134":{},"139":{},"146":{},"147":{},"150":{},"152":{},"157":{},"162":{},"163":{},"165":{},"166":{},"167":{},"171":{},"172":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["key_mask",{"_index":2057,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["key_nam",{"_index":2055,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["key_valu",{"_index":2056,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["keyboard",{"_index":6657,"title":{},"name":{},"text":{"141":{}},"component":{}}],["keys/bl31_ecdsa.pem",{"_index":4225,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["keys/bl32_ecdsa.pem",{"_index":4227,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["keys/bl33_ecdsa.pem",{"_index":4232,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["keys/non_trusted_world_ecdsa.pem",{"_index":4237,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["keys/rotpk_ecdsa.d",{"_index":4220,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["keys/rotpk_ecdsa_sha256.bin",{"_index":4223,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["keys/rotprivk_ecdsa.pem",{"_index":4214,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["keys/scp_bl2_ecdsa.pem",{"_index":4241,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["keys/ssk.bin",{"_index":4271,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["keys/trusted_world_ecdsa.pem",{"_index":4243,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["keyset",{"_index":2058,"title":{"82-3":{},"86-4":{},"87-4":{},"173-2":{},"177-3":{},"178-3":{}},"name":{},"text":{"29":{},"81":{},"82":{},"86":{},"87":{},"117":{},"172":{},"173":{},"177":{},"178":{}},"component":{}}],["keyset_nam",{"_index":2054,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["keyword",{"_index":315,"title":{},"name":{},"text":{"4":{},"84":{},"90":{},"175":{}},"component":{}}],["kib",{"_index":2807,"title":{},"name":{},"text":{"46":{},"50":{},"52":{},"53":{},"59":{},"60":{},"62":{},"66":{},"73":{},"80":{},"134":{},"138":{},"142":{},"143":{},"149":{},"150":{},"152":{},"156":{},"163":{},"171":{}},"component":{}}],["kib/",{"_index":2871,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["kibyt",{"_index":4027,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["kill",{"_index":5356,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["kilobit",{"_index":2039,"title":{},"name":{},"text":{"28":{},"115":{}},"component":{}}],["kind",{"_index":322,"title":{},"name":{},"text":{"4":{},"14":{},"51":{},"55":{},"67":{},"72":{},"84":{},"85":{},"86":{},"90":{},"101":{},"139":{},"146":{},"157":{},"162":{},"175":{},"176":{},"177":{}},"component":{}}],["klmnopqrst",{"_index":648,"title":{},"name":{},"text":{"6":{},"7":{},"92":{},"94":{}},"component":{}}],["klogd",{"_index":5267,"title":{},"name":{},"text":{"59":{},"73":{},"149":{},"163":{}},"component":{}}],["know",{"_index":2410,"title":{},"name":{},"text":{"43":{},"51":{},"55":{},"59":{},"61":{},"67":{},"72":{},"130":{},"139":{},"140":{},"146":{},"149":{},"151":{},"157":{},"162":{}},"component":{}}],["known",{"_index":317,"title":{},"name":{},"text":{"4":{},"23":{},"26":{},"29":{},"31":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"85":{},"90":{},"111":{},"114":{},"117":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"176":{}},"component":{}}],["kosina",{"_index":5216,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["kyber",{"_index":5025,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["l",{"_index":1968,"title":{},"name":{},"text":{"27":{},"28":{},"29":{},"46":{},"49":{},"50":{},"53":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"62":{},"65":{},"66":{},"69":{},"74":{},"75":{},"112":{},"115":{},"117":{},"134":{},"136":{},"138":{},"143":{},"145":{},"146":{},"147":{},"148":{},"149":{},"150":{},"152":{},"154":{},"156":{},"159":{},"164":{},"166":{}},"component":{}}],["l0",{"_index":6357,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["l1",{"_index":6358,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["l2",{"_index":1975,"title":{},"name":{},"text":{"27":{},"84":{},"112":{},"175":{}},"component":{}}],["l2_bc_i",{"_index":2107,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["l2_dmac",{"_index":891,"title":{},"name":{},"text":{"12":{},"29":{},"98":{},"117":{}},"component":{}}],["l3",{"_index":6361,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["l4",{"_index":6363,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["l5",{"_index":6365,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["l:0",{"_index":2109,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["l:1",{"_index":2117,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["l:2",{"_index":2160,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["label",{"_index":5748,"title":{},"name":{},"text":{"70":{},"160":{}},"component":{}}],["lacp",{"_index":386,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["lacp_rat",{"_index":392,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["lag",{"_index":375,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["lan8804",{"_index":6041,"title":{},"name":{},"text":{"78":{},"169":{}},"component":{}}],["lan8814",{"_index":2186,"title":{"31-4":{},"33-5":{},"34-4":{},"37-4":{},"119-3":{},"120-3":{},"121-3":{},"122-4":{}},"name":{},"text":{"31":{},"33":{},"34":{},"37":{},"61":{},"77":{},"78":{},"119":{},"120":{},"121":{},"122":{},"151":{},"167":{},"169":{}},"component":{}}],["lan8814/8804",{"_index":2428,"title":{},"name":{},"text":{"43":{},"130":{}},"component":{}}],["lan8841",{"_index":2325,"title":{},"name":{},"text":{"36":{},"77":{},"78":{},"124":{},"167":{},"169":{}},"component":{}}],["lan9662",{"_index":2187,"title":{"141":{},"31-5":{},"32-4":{},"34-5":{},"36-4":{},"37-5":{},"38-4":{},"61-5":{},"61-6":{},"118-3":{},"119-4":{},"120-4":{},"121-4":{},"124-3":{},"125-3":{},"151-5":{},"151-6":{},"151-7":{}},"name":{},"text":{"31":{},"32":{},"33":{},"34":{},"35":{},"37":{},"38":{},"46":{},"51":{},"59":{},"61":{},"67":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"125":{},"134":{},"139":{},"141":{},"149":{},"151":{},"157":{}},"component":{}}],["lan9662_ung8290_0_at_lan966x",{"_index":4206,"title":{},"name":{},"text":{"55":{},"146":{}},"component":{}}],["lan9662_ung8291_0_at_lan966x",{"_index":4205,"title":{},"name":{},"text":{"55":{},"59":{},"146":{},"149":{}},"component":{}}],["lan9668",{"_index":2188,"title":{"31-5":{},"34-5":{},"37-5":{},"38-4":{},"38-5":{},"61-4":{},"61-7":{},"119-4":{},"120-4":{},"121-4":{},"125-3":{},"125-4":{},"151-4":{},"151-8":{}},"name":{},"text":{"31":{},"33":{},"34":{},"35":{},"37":{},"38":{},"46":{},"51":{},"61":{},"67":{},"119":{},"120":{},"121":{},"122":{},"123":{},"125":{},"134":{},"139":{},"151":{},"157":{}},"component":{}}],["lan9668_ung8385_sa_lan8840_0_at_lan966x",{"_index":6650,"title":{},"name":{},"text":{"140":{}},"component":{}}],["lan966x",{"_index":1496,"title":{"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"140":{},"142":{},"143":{},"145":{},"146":{},"147":{},"148":{},"149":{},"150":{},"151":{},"36-5":{},"45-1":{},"46-1":{},"47-1":{},"48-1":{},"49-1":{},"50-1":{},"51-1":{},"52-1":{},"53-1":{},"55-1":{},"55-7":{},"55-27":{},"56-1":{},"57-1":{},"58-1":{},"59-1":{},"60-1":{},"61-1":{},"84-5":{},"84-13":{},"84-18":{},"84-23":{},"86-3":{},"87-3":{},"124-4":{},"131-5":{},"131-6":{},"146-6":{},"146-26":{},"151-1":{},"175-4":{},"175-12":{},"175-17":{},"175-22":{},"177-2":{},"178-2":{}},"name":{"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"140":{},"141":{},"142":{},"143":{},"144":{},"145":{},"146":{},"147":{},"148":{},"149":{},"150":{},"151":{}},"text":{"15":{},"17":{},"29":{},"33":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"57":{},"58":{},"59":{},"60":{},"61":{},"64":{},"67":{},"78":{},"81":{},"82":{},"84":{},"86":{},"87":{},"99":{},"106":{},"117":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"141":{},"142":{},"143":{},"144":{},"145":{},"146":{},"148":{},"149":{},"150":{},"151":{},"155":{},"157":{},"169":{},"172":{},"173":{},"175":{},"177":{},"178":{}},"component":{}}],["lan966x_a0",{"_index":2712,"title":{},"name":{},"text":{"46":{},"55":{},"134":{},"146":{}},"component":{}}],["lan966x_b0",{"_index":2716,"title":{},"name":{},"text":{"46":{},"55":{},"72":{},"134":{},"146":{},"162":{}},"component":{}}],["lan966x_b0.fip",{"_index":3036,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["lan966x_fw_conf_mmc_bus_width",{"_index":4397,"title":{},"name":{},"text":{"55":{},"146":{}},"component":{}}],["lan966x_fw_conf_mmc_clk_r",{"_index":4395,"title":{},"name":{},"text":{"55":{},"146":{}},"component":{}}],["lan966x_fw_conf_mmc_speed_mod",{"_index":4400,"title":{},"name":{},"text":{"55":{},"146":{}},"component":{}}],["lan966x_fw_conf_mmc_tx_tuning_phas",{"_index":4402,"title":{},"name":{},"text":{"55":{},"146":{}},"component":{}}],["lan966x_fw_conf_qspi_clk",{"_index":4399,"title":{},"name":{},"text":{"55":{},"146":{}},"component":{}}],["lan966x_lm",{"_index":5791,"title":{},"name":{},"text":{"72":{},"162":{}},"component":{}}],["lan966x_pcb8281",{"_index":5985,"title":{},"name":{},"text":{"76":{},"168":{}},"component":{}}],["lan966x_pcb8290",{"_index":5984,"title":{},"name":{},"text":{"76":{},"168":{}},"component":{}}],["lan966x_pcb8291",{"_index":5983,"title":{},"name":{},"text":{"76":{},"168":{}},"component":{}}],["lan966x_pcb8309",{"_index":5986,"title":{},"name":{},"text":{"76":{},"168":{}},"component":{}}],["lan966x_pcb8309.dt",{"_index":2308,"title":{},"name":{},"text":{"36":{},"124":{}},"component":{}}],["lan966x_pcb8385",{"_index":5987,"title":{},"name":{},"text":{"76":{},"168":{}},"component":{}}],["lan966x_pinctrl_prob",{"_index":4751,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["lan9691",{"_index":6007,"title":{},"name":{},"text":{"77":{},"167":{}},"component":{}}],["lan9692",{"_index":6008,"title":{},"name":{},"text":{"77":{},"167":{}},"component":{}}],["lan9693",{"_index":6009,"title":{},"name":{},"text":{"77":{},"167":{}},"component":{}}],["lan9694",{"_index":6011,"title":{},"name":{},"text":{"77":{},"167":{}},"component":{}}],["lan9696",{"_index":2393,"title":{"77-4":{},"167-4":{}},"name":{},"text":{"41":{},"42":{},"64":{},"65":{},"70":{},"73":{},"74":{},"77":{},"128":{},"129":{},"154":{},"155":{},"160":{},"163":{},"164":{},"167":{}},"component":{}}],["lan9698",{"_index":6010,"title":{},"name":{},"text":{"77":{},"165":{},"167":{}},"component":{}}],["lan9698_ev23x71a_0_at_lan969x",{"_index":5804,"title":{},"name":{},"text":{"72":{},"73":{},"162":{},"163":{},"165":{}},"component":{}}],["lan969x",{"_index":1705,"title":{"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"77":{},"152":{},"153":{},"154":{},"155":{},"156":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"41-5":{},"42-5":{},"43-6":{},"62-1":{},"63-1":{},"64-1":{},"65-1":{},"66-1":{},"67-1":{},"68-1":{},"69-1":{},"70-1":{},"71-1":{},"72-1":{},"72-7":{},"72-27":{},"73-1":{},"74-1":{},"75-1":{},"77-1":{},"84-4":{},"128-4":{},"129-4":{},"130-5":{},"131-6":{},"162-6":{},"162-26":{},"167-1":{},"175-3":{}},"name":{"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"77":{},"152":{},"153":{},"154":{},"155":{},"156":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{}},"text":{"17":{},"41":{},"42":{},"43":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"77":{},"79":{},"84":{},"106":{},"128":{},"129":{},"130":{},"131":{},"152":{},"153":{},"154":{},"155":{},"156":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"170":{},"175":{}},"component":{}}],["lan969x_a0",{"_index":5471,"title":{},"name":{},"text":{"62":{},"72":{},"152":{},"162":{}},"component":{}}],["lan969x_a0.fip",{"_index":5533,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["lan969x_appl_ev23x71a.dtb",{"_index":5485,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["lan969x_ev23x71a.dtb",{"_index":5487,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["lan969x_fw_conf_mmc_bus_width",{"_index":5816,"title":{},"name":{},"text":{"72":{},"162":{}},"component":{}}],["lan969x_fw_conf_mmc_clk_r",{"_index":5815,"title":{},"name":{},"text":{"72":{},"162":{}},"component":{}}],["lan969x_fw_conf_mmc_speed_mod",{"_index":5818,"title":{},"name":{},"text":{"72":{},"162":{}},"component":{}}],["lan969x_fw_conf_mmc_tx_tuning_phas",{"_index":5819,"title":{},"name":{},"text":{"72":{},"162":{}},"component":{}}],["lan969x_fw_conf_qspi_clk",{"_index":5817,"title":{},"name":{},"text":{"72":{},"162":{}},"component":{}}],["lan969x_lm",{"_index":5794,"title":{},"name":{},"text":{"72":{},"162":{}},"component":{}}],["lan969x_pcb10001.dtb",{"_index":5488,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["lan969x_pci",{"_index":5795,"title":{},"name":{},"text":{"72":{},"162":{}},"component":{}}],["lan969x_signed.dtsi",{"_index":6758,"title":{},"name":{},"text":{"165":{}},"component":{}}],["lan969x_sr",{"_index":5792,"title":{},"name":{},"text":{"72":{},"162":{}},"component":{}}],["lan969x_sr.dtb",{"_index":5491,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["lan969x_svb",{"_index":5793,"title":{},"name":{},"text":{"72":{},"162":{}},"component":{}}],["lan996x",{"_index":4106,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["larg",{"_index":2035,"title":{},"name":{},"text":{"28":{},"46":{},"55":{},"62":{},"72":{},"87":{},"115":{},"134":{},"146":{},"152":{},"162":{},"178":{}},"component":{}}],["larger",{"_index":1805,"title":{},"name":{},"text":{"23":{},"29":{},"50":{},"62":{},"66":{},"84":{},"86":{},"111":{},"117":{},"138":{},"152":{},"156":{},"175":{},"177":{}},"component":{}}],["largest",{"_index":6521,"title":{},"name":{},"text":{"86":{},"177":{}},"component":{}}],["last",{"_index":604,"title":{},"name":{},"text":{"6":{},"23":{},"29":{},"46":{},"50":{},"51":{},"55":{},"62":{},"66":{},"67":{},"72":{},"82":{},"84":{},"85":{},"94":{},"111":{},"117":{},"134":{},"138":{},"139":{},"146":{},"152":{},"156":{},"157":{},"162":{},"173":{},"175":{},"176":{}},"component":{}}],["last_cid",{"_index":2077,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["last_used_addr",{"_index":2081,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["last_valid_addr",{"_index":2080,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["latecollis",{"_index":1462,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["latenc",{"_index":4412,"title":{},"name":{},"text":{"55":{},"72":{},"85":{},"146":{},"162":{},"176":{}},"component":{}}],["later",{"_index":897,"title":{},"name":{},"text":{"12":{},"15":{},"32":{},"55":{},"72":{},"80":{},"84":{},"85":{},"98":{},"99":{},"118":{},"146":{},"162":{},"171":{},"175":{},"176":{}},"component":{}}],["latest",{"_index":2369,"title":{},"name":{},"text":{"39":{},"44":{},"46":{},"62":{},"126":{},"132":{},"134":{},"152":{}},"component":{}}],["latter",{"_index":6811,"title":{},"name":{},"text":{"165":{}},"component":{}}],["lay",{"_index":6454,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["layer",{"_index":399,"title":{},"name":{},"text":{"4":{},"55":{},"59":{},"72":{},"90":{},"146":{},"149":{},"162":{}},"component":{}}],["layer2",{"_index":403,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["layer2+3",{"_index":402,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["layer3+4",{"_index":411,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["layout",{"_index":2044,"title":{},"name":{},"text":{"29":{},"46":{},"51":{},"55":{},"62":{},"67":{},"117":{},"134":{},"139":{},"146":{},"152":{},"157":{}},"component":{}}],["lba",{"_index":3044,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["lc",{"_index":1693,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["lc_mode",{"_index":1684,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["ld",{"_index":5740,"title":{},"name":{},"text":{"70":{},"160":{}},"component":{}}],["leaf",{"_index":6478,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["leak",{"_index":678,"title":{},"name":{},"text":{"7":{},"55":{},"72":{},"92":{},"146":{},"162":{}},"component":{}}],["learn",{"_index":329,"title":{},"name":{},"text":{"4":{},"12":{},"15":{},"90":{},"98":{},"99":{}},"component":{}}],["learn_dis",{"_index":928,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["leav",{"_index":1303,"title":{},"name":{},"text":{"14":{},"55":{},"72":{},"101":{},"146":{},"162":{},"165":{}},"component":{}}],["led",{"_index":2396,"title":{"70-9":{},"160-8":{}},"name":{},"text":{"41":{},"42":{},"50":{},"66":{},"70":{},"128":{},"129":{},"138":{},"156":{},"160":{}},"component":{}}],["leftmost",{"_index":6343,"title":{},"name":{},"text":{"83":{},"174":{}},"component":{}}],["legaci",{"_index":1726,"title":{},"name":{},"text":{"18":{},"27":{},"103":{},"112":{}},"component":{}}],["len",{"_index":2801,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["length",{"_index":931,"title":{},"name":{},"text":{"12":{},"47":{},"49":{},"50":{},"51":{},"53":{},"58":{},"59":{},"63":{},"65":{},"66":{},"67":{},"69":{},"71":{},"73":{},"98":{},"135":{},"136":{},"138":{},"139":{},"143":{},"145":{},"149":{},"153":{},"154":{},"156":{},"157":{},"159":{},"161":{},"163":{}},"component":{}}],["less",{"_index":2272,"title":{},"name":{},"text":{"33":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"85":{},"87":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"176":{},"178":{}},"component":{}}],["let",{"_index":1375,"title":{},"name":{},"text":{"15":{},"46":{},"62":{},"99":{},"134":{},"152":{}},"component":{}}],["letter",{"_index":3768,"title":{},"name":{},"text":{"51":{},"139":{}},"component":{}}],["let’",{"_index":2006,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["level",{"_index":106,"title":{},"name":{},"text":{"2":{},"6":{},"7":{},"9":{},"16":{},"27":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"37":{},"49":{},"50":{},"51":{},"55":{},"61":{},"67":{},"72":{},"88":{},"92":{},"94":{},"96":{},"101":{},"104":{},"112":{},"116":{},"117":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"136":{},"138":{},"139":{},"146":{},"151":{},"157":{},"162":{},"165":{}},"component":{}}],["liabil",{"_index":4472,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["liabl",{"_index":4105,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["lib",{"_index":2258,"title":{},"name":{},"text":{"33":{},"122":{}},"component":{}}],["libacl1",{"_index":1062,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["libcomposit",{"_index":4593,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["libelf",{"_index":1063,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["libglade2",{"_index":1064,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["libgtk2.0",{"_index":1065,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["libmpc",{"_index":1066,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["libncurses5",{"_index":1067,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["libncursesw5",{"_index":1068,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["librari",{"_index":6793,"title":{},"name":{},"text":{"165":{}},"component":{}}],["libssl",{"_index":1069,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["libtool",{"_index":1070,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["libtransistor",{"_index":5173,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["licens",{"_index":4099,"title":{"55-51":{},"72-43":{},"146-50":{},"162-42":{}},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["life",{"_index":4125,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["likewis",{"_index":5798,"title":{},"name":{},"text":{"72":{},"85":{},"162":{},"176":{}},"component":{}}],["lilo",{"_index":3602,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["limit",{"_index":1745,"title":{"41-6":{},"42-6":{},"128-5":{},"129-5":{}},"name":{},"text":{"22":{},"23":{},"28":{},"41":{},"42":{},"46":{},"50":{},"51":{},"55":{},"62":{},"66":{},"67":{},"72":{},"84":{},"85":{},"86":{},"101":{},"109":{},"111":{},"115":{},"128":{},"129":{},"134":{},"138":{},"139":{},"146":{},"152":{},"156":{},"157":{},"162":{},"175":{},"176":{},"177":{}},"component":{}}],["line",{"_index":1226,"title":{},"name":{},"text":{"14":{},"23":{},"27":{},"29":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"52":{},"53":{},"55":{},"57":{},"58":{},"59":{},"60":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"75":{},"80":{},"101":{},"111":{},"112":{},"117":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"142":{},"143":{},"145":{},"146":{},"148":{},"149":{},"150":{},"152":{},"153":{},"154":{},"155":{},"156":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"165":{},"166":{},"171":{}},"component":{}}],["linear",{"_index":4834,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["lines[cpu",{"_index":3405,"title":{},"name":{},"text":{"49":{},"65":{},"136":{},"154":{}},"component":{}}],["link",{"_index":167,"title":{"4-6":{},"84-8":{},"90-5":{},"175-7":{}},"name":{},"text":{"4":{},"6":{},"7":{},"9":{},"10":{},"12":{},"15":{},"16":{},"17":{},"19":{},"27":{},"36":{},"46":{},"48":{},"55":{},"57":{},"59":{},"62":{},"84":{},"90":{},"92":{},"94":{},"96":{},"97":{},"98":{},"99":{},"104":{},"105":{},"106":{},"112":{},"124":{},"134":{},"137":{},"146":{},"148":{},"149":{},"152":{},"175":{}},"component":{}}],["link/can",{"_index":3315,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["link/eth",{"_index":236,"title":{},"name":{},"text":{"4":{},"15":{},"19":{},"48":{},"90":{},"99":{},"105":{},"137":{}},"component":{}}],["link/loopback",{"_index":231,"title":{},"name":{},"text":{"4":{},"48":{},"90":{},"137":{}},"component":{}}],["link/sit",{"_index":246,"title":{},"name":{},"text":{"4":{},"48":{},"90":{},"137":{}},"component":{}}],["linreq",{"_index":1955,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["linux",{"_index":4,"title":{"32-6":{},"39-4":{},"46-51":{},"62-50":{},"118-5":{},"126-3":{},"134-50":{},"152-49":{},"165-7":{}},"name":{},"text":{"1":{},"4":{},"6":{},"10":{},"12":{},"13":{},"14":{},"15":{},"18":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"50":{},"51":{},"52":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"66":{},"67":{},"68":{},"72":{},"73":{},"74":{},"75":{},"77":{},"78":{},"79":{},"80":{},"85":{},"89":{},"90":{},"94":{},"97":{},"98":{},"99":{},"101":{},"102":{},"103":{},"116":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"133":{},"134":{},"138":{},"139":{},"141":{},"142":{},"144":{},"145":{},"146":{},"147":{},"148":{},"149":{},"150":{},"151":{},"152":{},"156":{},"157":{},"158":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"169":{},"170":{},"171":{},"176":{}},"component":{}}],["linux.bk",{"_index":2955,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["linux.fip.gz",{"_index":5476,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["linux.gpt.gz",{"_index":5478,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["linux/istax/switchdev/mesa",{"_index":6017,"title":{},"name":{},"text":{"77":{},"167":{}},"component":{}}],["linux4sam_6.2",{"_index":4740,"title":{},"name":{},"text":{"59":{},"60":{},"149":{},"150":{}},"component":{}}],["linux@bl33",{"_index":2568,"title":{"46-38":{},"134-37":{}},"name":{},"text":{},"component":{}}],["linuxpp",{"_index":4967,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["linuxptp",{"_index":1943,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["list",{"_index":599,"title":{},"name":{},"text":{"6":{},"9":{},"26":{},"29":{},"32":{},"46":{},"49":{},"50":{},"51":{},"52":{},"53":{},"55":{},"56":{},"57":{},"58":{},"59":{},"62":{},"65":{},"66":{},"67":{},"68":{},"69":{},"71":{},"72":{},"73":{},"74":{},"77":{},"80":{},"82":{},"84":{},"87":{},"94":{},"96":{},"114":{},"117":{},"118":{},"134":{},"136":{},"138":{},"139":{},"142":{},"143":{},"145":{},"146":{},"147":{},"148":{},"149":{},"152":{},"154":{},"156":{},"157":{},"158":{},"159":{},"161":{},"162":{},"163":{},"164":{},"167":{},"171":{},"173":{},"175":{},"178":{}},"component":{}}],["listen",{"_index":446,"title":{},"name":{},"text":{"4":{},"16":{},"90":{},"104":{}},"component":{}}],["lite",{"_index":4990,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["littl",{"_index":1915,"title":{},"name":{},"text":{"26":{},"51":{},"67":{},"114":{},"139":{},"157":{}},"component":{}}],["live",{"_index":1960,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["ll",{"_index":5639,"title":{},"name":{},"text":{"67":{},"157":{}},"component":{}}],["llc",{"_index":2169,"title":{},"name":{},"text":{"30":{},"84":{},"87":{},"116":{},"175":{},"178":{}},"component":{}}],["lldp",{"_index":806,"title":{},"name":{},"text":{"10":{},"15":{},"97":{},"99":{}},"component":{}}],["lldp/tlv",{"_index":815,"title":{},"name":{},"text":{"10":{},"97":{}},"component":{}}],["lldpad",{"_index":1387,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["lldpd",{"_index":810,"title":{},"name":{},"text":{"10":{},"30":{},"97":{},"116":{}},"component":{}}],["lldptool",{"_index":1390,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["lmi",{"_index":6556,"title":{},"name":{},"text":{"87":{},"178":{}},"component":{}}],["lmstax",{"_index":5438,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["lmtd",{"_index":4040,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["ln",{"_index":4611,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["lo",{"_index":221,"title":{},"name":{},"text":{"4":{},"48":{},"70":{},"90":{},"137":{},"160":{}},"component":{}}],["load",{"_index":3,"title":{"46-44":{},"55-13":{},"55-45":{},"62-43":{},"72-13":{},"72-37":{},"134-43":{},"146-12":{},"146-44":{},"152-42":{},"162-12":{},"162-36":{}},"name":{},"text":{"1":{},"4":{},"45":{},"46":{},"54":{},"55":{},"57":{},"59":{},"60":{},"62":{},"72":{},"73":{},"75":{},"79":{},"80":{},"89":{},"90":{},"133":{},"134":{},"140":{},"144":{},"146":{},"148":{},"149":{},"150":{},"152":{},"162":{},"163":{},"166":{},"170":{},"171":{}},"component":{}}],["load=0,0,0",{"_index":5398,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["loadaddr",{"_index":2918,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["loadaddr=0x64000000",{"_index":2884,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["loadaddr=740000000",{"_index":6159,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["loadaddress",{"_index":2861,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["loadaddr}#${pcb",{"_index":2921,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["loader",{"_index":1024,"title":{},"name":{},"text":{"14":{},"46":{},"51":{},"55":{},"62":{},"67":{},"72":{},"80":{},"101":{},"134":{},"139":{},"146":{},"152":{},"157":{},"162":{},"171":{}},"component":{}}],["loado",{"_index":2923,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["loc",{"_index":675,"title":{},"name":{},"text":{"7":{},"92":{}},"component":{}}],["local",{"_index":1071,"title":{},"name":{},"text":{"14":{},"51":{},"56":{},"61":{},"67":{},"77":{},"101":{},"139":{},"147":{},"151":{},"157":{},"167":{}},"component":{}}],["local.mk",{"_index":1220,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["locat",{"_index":882,"title":{},"name":{},"text":{"12":{},"14":{},"29":{},"46":{},"55":{},"60":{},"62":{},"70":{},"72":{},"75":{},"85":{},"98":{},"101":{},"117":{},"134":{},"141":{},"146":{},"150":{},"152":{},"160":{},"162":{},"166":{},"176":{}},"component":{}}],["lock",{"_index":4419,"title":{},"name":{},"text":{"55":{},"72":{},"112":{},"131":{},"146":{},"162":{}},"component":{}}],["lock/unlock",{"_index":2848,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["locredit",{"_index":1875,"title":{},"name":{},"text":{"26":{},"28":{},"114":{},"115":{}},"component":{}}],["log",{"_index":1168,"title":{},"name":{},"text":{"14":{},"18":{},"27":{},"30":{},"54":{},"55":{},"56":{},"60":{},"72":{},"74":{},"75":{},"79":{},"101":{},"103":{},"112":{},"116":{},"141":{},"144":{},"146":{},"147":{},"150":{},"162":{},"164":{},"166":{},"170":{}},"component":{}}],["logannounceinterv",{"_index":2003,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["logic",{"_index":710,"title":{},"name":{},"text":{"8":{},"46":{},"51":{},"55":{},"62":{},"67":{},"72":{},"74":{},"134":{},"139":{},"146":{},"152":{},"157":{},"162":{},"164":{}},"component":{}}],["login",{"_index":5274,"title":{},"name":{},"text":{"59":{},"73":{},"80":{},"141":{},"149":{},"163":{},"171":{}},"component":{}}],["loglevel=1",{"_index":3007,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["loglevel=4",{"_index":5517,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["loglevel=7",{"_index":4766,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["loglevel=8",{"_index":4195,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["loglevel=9",{"_index":5615,"title":{},"name":{},"text":{"66":{},"156":{}},"component":{}}],["logmindelayreqinterv",{"_index":2022,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["logminpdelayreqinterv",{"_index":6593,"title":{},"name":{},"text":{"112":{}},"component":{}}],["logsyncinterv",{"_index":2004,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["long",{"_index":2366,"title":{"39-4":{},"126-3":{}},"name":{},"text":{"56":{},"86":{},"147":{},"177":{}},"component":{}}],["longer",{"_index":2749,"title":{},"name":{},"text":{"46":{},"55":{},"60":{},"62":{},"72":{},"75":{},"134":{},"146":{},"150":{},"152":{},"162":{},"166":{}},"component":{}}],["look",{"_index":735,"title":{},"name":{},"text":{"9":{},"27":{},"29":{},"46":{},"55":{},"62":{},"72":{},"80":{},"96":{},"112":{},"117":{},"134":{},"146":{},"152":{},"162":{},"171":{}},"component":{}}],["lookup",{"_index":874,"title":{},"name":{},"text":{"12":{},"29":{},"43":{},"59":{},"81":{},"82":{},"84":{},"85":{},"86":{},"87":{},"98":{},"117":{},"130":{},"149":{},"172":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["lookup_index",{"_index":2130,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["loop",{"_index":854,"title":{},"name":{},"text":{"12":{},"16":{},"30":{},"59":{},"60":{},"75":{},"98":{},"104":{},"112":{},"116":{},"149":{},"150":{},"165":{},"166":{}},"component":{}}],["loopback",{"_index":3243,"title":{"48-10":{},"137-9":{}},"name":{},"text":{"48":{},"137":{}},"component":{}}],["loss",{"_index":292,"title":{},"name":{},"text":{"4":{},"12":{},"15":{},"19":{},"55":{},"72":{},"90":{},"98":{},"99":{},"105":{},"146":{},"162":{}},"component":{}}],["lost+found",{"_index":3695,"title":{},"name":{},"text":{"50":{},"74":{},"138":{},"164":{}},"component":{}}],["lostpacket",{"_index":938,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["lot",{"_index":1321,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["lougher",{"_index":5014,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["low",{"_index":697,"title":{},"name":{},"text":{"7":{},"10":{},"29":{},"30":{},"48":{},"61":{},"92":{},"97":{},"116":{},"117":{},"137":{},"151":{}},"component":{}}],["lower",{"_index":404,"title":{},"name":{},"text":{"4":{},"26":{},"28":{},"38":{},"55":{},"72":{},"84":{},"90":{},"114":{},"115":{},"125":{},"146":{},"162":{},"175":{}},"component":{}}],["lowest",{"_index":1859,"title":{},"name":{},"text":{"26":{},"84":{},"85":{},"114":{},"175":{},"176":{}},"component":{}}],["lpj=375000",{"_index":4890,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["lpm",{"_index":5139,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["lrwxrwxrwx",{"_index":4497,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["ls",{"_index":1112,"title":{},"name":{},"text":{"14":{},"50":{},"52":{},"53":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"66":{},"68":{},"69":{},"72":{},"74":{},"75":{},"101":{},"138":{},"142":{},"143":{},"145":{},"146":{},"147":{},"148":{},"149":{},"150":{},"156":{},"158":{},"159":{},"162":{},"164":{},"166":{}},"component":{}}],["ls1046",{"_index":44,"title":{},"name":{},"text":{"1":{},"33":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"62":{},"89":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"152":{}},"component":{}}],["ls1046_pcb110",{"_index":5974,"title":{},"name":{},"text":{"76":{},"168":{}},"component":{}}],["ls1046_pcb110.dtb",{"_index":5493,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["ls1046_pcb121",{"_index":5975,"title":{},"name":{},"text":{"76":{},"168":{}},"component":{}}],["ls1046_pcb121.dtb",{"_index":5495,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["ls1046_pcb134",{"_index":5976,"title":{},"name":{},"text":{"76":{},"168":{}},"component":{}}],["ls1046_pcb134.dtb",{"_index":5497,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["lsb",{"_index":1920,"title":{},"name":{},"text":{"26":{},"82":{},"86":{},"87":{},"114":{},"173":{},"177":{},"178":{}},"component":{}}],["lsblk",{"_index":6676,"title":{},"name":{},"text":{"141":{}},"component":{}}],["lt",{"_index":1033,"title":{"39-4":{},"126-3":{}},"name":{},"text":{"14":{},"39":{},"40":{},"41":{},"42":{},"43":{},"72":{},"101":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"162":{}},"component":{}}],["lu",{"_index":1839,"title":{},"name":{},"text":{"23":{},"111":{}},"component":{}}],["lution",{"_index":4039,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["luton_pcb090",{"_index":5996,"title":{},"name":{},"text":{"76":{},"168":{}},"component":{}}],["luton_pcb091",{"_index":5997,"title":{},"name":{},"text":{"76":{},"168":{}},"component":{}}],["m",{"_index":1094,"title":{},"name":{},"text":{"14":{},"27":{},"46":{},"49":{},"50":{},"59":{},"60":{},"62":{},"66":{},"80":{},"101":{},"112":{},"134":{},"136":{},"138":{},"149":{},"150":{},"152":{},"156":{},"171":{}},"component":{}}],["m25p,fast",{"_index":5719,"title":{},"name":{},"text":{"69":{},"159":{}},"component":{}}],["m4",{"_index":1072,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["m_can",{"_index":3251,"title":{},"name":{},"text":{"48":{},"64":{},"137":{},"155":{}},"component":{}}],["mac",{"_index":164,"title":{"4-4":{},"15-5":{},"90-3":{},"99-4":{}},"name":{},"text":{"4":{},"6":{},"7":{},"12":{},"15":{},"16":{},"23":{},"31":{},"34":{},"37":{},"51":{},"59":{},"67":{},"84":{},"86":{},"90":{},"92":{},"94":{},"98":{},"99":{},"104":{},"111":{},"119":{},"120":{},"121":{},"139":{},"149":{},"157":{},"175":{},"177":{}},"component":{}}],["mac/ip",{"_index":6526,"title":{},"name":{},"text":{"86":{},"177":{}},"component":{}}],["mac/ipv6",{"_index":6522,"title":{},"name":{},"text":{"86":{},"177":{}},"component":{}}],["mac_etyp",{"_index":6285,"title":{"82-7":{},"87-14":{},"173-6":{},"178-13":{}},"name":{},"text":{"82":{},"87":{},"173":{},"178":{}},"component":{}}],["mac_llc",{"_index":6540,"title":{"87-13":{},"178-12":{}},"name":{},"text":{"87":{},"178":{}},"component":{}}],["mac_snap",{"_index":2111,"title":{"87-12":{},"178-11":{}},"name":{},"text":{"29":{},"87":{},"117":{},"178":{}},"component":{}}],["machin",{"_index":1663,"title":{"59-11":{},"149-10":{}},"name":{},"text":{"16":{},"46":{},"54":{},"55":{},"59":{},"60":{},"62":{},"73":{},"75":{},"79":{},"104":{},"134":{},"144":{},"146":{},"149":{},"150":{},"152":{},"163":{},"166":{},"170":{}},"component":{}}],["macro",{"_index":1253,"title":{},"name":{},"text":{"14":{},"80":{},"101":{},"171":{}},"component":{}}],["made",{"_index":2376,"title":{},"name":{},"text":{"40":{},"41":{},"42":{},"43":{},"46":{},"62":{},"80":{},"127":{},"128":{},"129":{},"130":{},"131":{},"134":{},"152":{},"171":{}},"component":{}}],["maid",{"_index":684,"title":{},"name":{},"text":{"7":{},"16":{},"92":{},"104":{}},"component":{}}],["main",{"_index":1269,"title":{},"name":{},"text":{"14":{},"18":{},"28":{},"38":{},"46":{},"54":{},"60":{},"62":{},"75":{},"79":{},"80":{},"101":{},"103":{},"112":{},"115":{},"125":{},"134":{},"144":{},"150":{},"152":{},"166":{},"170":{},"171":{}},"component":{}}],["main.r",{"_index":5947,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["mainli",{"_index":2730,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["mainlin",{"_index":994,"title":{},"name":{},"text":{"13":{},"18":{},"102":{},"103":{}},"component":{}}],["maintain",{"_index":2747,"title":{},"name":{},"text":{"46":{},"62":{},"101":{},"134":{},"152":{},"165":{}},"component":{}}],["mainten",{"_index":595,"title":{},"name":{},"text":{"6":{},"79":{},"94":{},"170":{}},"component":{}}],["major",{"_index":1877,"title":{"33-2":{},"35-2":{},"36-2":{},"38-2":{},"39-2":{},"40-2":{},"41-2":{},"42-2":{},"43-2":{},"122-1":{},"123-1":{},"124-1":{},"125-1":{},"126-1":{},"127-1":{},"128-1":{},"129-1":{},"130-1":{},"131-1":{}},"name":{},"text":{"26":{},"59":{},"85":{},"114":{},"149":{},"176":{}},"component":{}}],["make",{"_index":542,"title":{"6-22":{},"94-21":{}},"name":{},"text":{"6":{},"14":{},"18":{},"22":{},"27":{},"35":{},"36":{},"46":{},"51":{},"55":{},"57":{},"59":{},"62":{},"67":{},"72":{},"74":{},"80":{},"85":{},"86":{},"94":{},"101":{},"103":{},"109":{},"112":{},"123":{},"124":{},"134":{},"139":{},"141":{},"146":{},"148":{},"149":{},"152":{},"157":{},"162":{},"164":{},"165":{},"171":{},"176":{},"177":{}},"component":{}}],["makefil",{"_index":984,"title":{},"name":{},"text":{"13":{},"18":{},"102":{},"103":{}},"component":{}}],["man",{"_index":1885,"title":{},"name":{},"text":{"26":{},"27":{},"36":{},"85":{},"112":{},"114":{},"124":{},"176":{}},"component":{}}],["manag",{"_index":499,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"17":{},"27":{},"30":{},"59":{},"61":{},"77":{},"87":{},"90":{},"92":{},"94":{},"106":{},"112":{},"116":{},"149":{},"151":{},"167":{},"178":{}},"component":{}}],["manager(mim",{"_index":1650,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["manager(mra",{"_index":1649,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["manager(mrm",{"_index":1647,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["mandatori",{"_index":1283,"title":{},"name":{},"text":{"14":{},"46":{},"101":{},"134":{}},"component":{}}],["mani",{"_index":2596,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"70":{},"72":{},"85":{},"112":{},"134":{},"146":{},"152":{},"160":{},"162":{},"176":{}},"component":{}}],["manipul",{"_index":6273,"title":{},"name":{},"text":{"81":{},"172":{}},"component":{}}],["manual",{"_index":210,"title":{},"name":{},"text":{"4":{},"6":{},"12":{},"13":{},"14":{},"15":{},"18":{},"26":{},"55":{},"72":{},"90":{},"94":{},"98":{},"99":{},"101":{},"102":{},"103":{},"114":{},"146":{},"162":{}},"component":{}}],["manufactur",{"_index":2345,"title":{},"name":{},"text":{"38":{},"46":{},"51":{},"55":{},"57":{},"59":{},"62":{},"67":{},"72":{},"73":{},"74":{},"125":{},"134":{},"139":{},"146":{},"148":{},"149":{},"152":{},"157":{},"162":{},"163":{},"164":{}},"component":{}}],["map",{"_index":82,"title":{"2-3":{},"2-4":{},"61-2":{},"77-2":{},"88-2":{},"88-3":{},"151-2":{},"167-2":{}},"name":{},"text":{"2":{},"4":{},"9":{},"12":{},"15":{},"26":{},"29":{},"32":{},"46":{},"47":{},"48":{},"49":{},"55":{},"58":{},"59":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"68":{},"71":{},"72":{},"73":{},"80":{},"83":{},"85":{},"88":{},"90":{},"96":{},"98":{},"99":{},"114":{},"117":{},"118":{},"134":{},"135":{},"136":{},"137":{},"141":{},"145":{},"146":{},"149":{},"151":{},"152":{},"153":{},"154":{},"155":{},"156":{},"158":{},"161":{},"162":{},"163":{},"171":{},"174":{},"176":{}},"component":{}}],["mapper",{"_index":6791,"title":{},"name":{},"text":{"165":{}},"component":{}}],["mar",{"_index":3668,"title":{},"name":{},"text":{"50":{},"80":{},"138":{},"165":{},"171":{}},"component":{}}],["margin",{"_index":3541,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["mark",{"_index":344,"title":{},"name":{},"text":{"4":{},"51":{},"55":{},"67":{},"72":{},"90":{},"139":{},"146":{},"157":{},"162":{}},"component":{}}],["marker",{"_index":4071,"title":{},"name":{},"text":{"54":{},"144":{}},"component":{}}],["market",{"_index":345,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["mas_sw",{"_index":2209,"title":{},"name":{},"text":{"31":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{}},"component":{}}],["maserati",{"_index":4403,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["mask",{"_index":1919,"title":{},"name":{},"text":{"26":{},"29":{},"51":{},"55":{},"59":{},"67":{},"72":{},"84":{},"85":{},"86":{},"114":{},"117":{},"139":{},"146":{},"149":{},"157":{},"162":{},"175":{},"176":{},"177":{}},"component":{}}],["mask:255.0.0.0",{"_index":3308,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["mass",{"_index":5917,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["master",{"_index":205,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"12":{},"15":{},"16":{},"27":{},"48":{},"59":{},"60":{},"90":{},"92":{},"94":{},"98":{},"99":{},"104":{},"112":{},"137":{},"149":{},"150":{}},"component":{}}],["master@600104000",{"_index":6120,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["match",{"_index":157,"title":{},"name":{},"text":{"2":{},"9":{},"12":{},"14":{},"23":{},"26":{},"29":{},"51":{},"55":{},"64":{},"67":{},"72":{},"81":{},"82":{},"84":{},"85":{},"86":{},"87":{},"88":{},"96":{},"98":{},"101":{},"111":{},"114":{},"117":{},"139":{},"146":{},"155":{},"157":{},"162":{},"172":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["matchal",{"_index":359,"title":{"85-15":{},"176-15":{}},"name":{},"text":{"4":{},"22":{},"43":{},"84":{},"85":{},"90":{},"109":{},"130":{},"175":{},"176":{}},"component":{}}],["matching_frames_count",{"_index":1823,"title":{},"name":{},"text":{"23":{},"111":{}},"component":{}}],["materi",{"_index":971,"title":{},"name":{},"text":{"13":{},"55":{},"72":{},"102":{},"146":{},"162":{}},"component":{}}],["matplotlib",{"_index":1095,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["matter",{"_index":3113,"title":{},"name":{},"text":{"46":{},"51":{},"62":{},"67":{},"80":{},"134":{},"139":{},"152":{},"157":{},"171":{}},"component":{}}],["max",{"_index":563,"title":{},"name":{},"text":{"6":{},"23":{},"46":{},"51":{},"53":{},"58":{},"61":{},"66":{},"67":{},"69":{},"71":{},"73":{},"77":{},"86":{},"94":{},"111":{},"134":{},"139":{},"143":{},"145":{},"151":{},"156":{},"157":{},"159":{},"161":{},"163":{},"167":{},"177":{}},"component":{}}],["max_cycl",{"_index":4871,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["max_hops=1",{"_index":5246,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["max_idle_n",{"_index":4873,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["max_octet",{"_index":6529,"title":{},"name":{},"text":{"86":{},"177":{}},"component":{}}],["max_order=18",{"_index":5008,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["maximum",{"_index":565,"title":{},"name":{},"text":{"6":{},"10":{},"12":{},"15":{},"22":{},"23":{},"28":{},"55":{},"74":{},"85":{},"86":{},"94":{},"97":{},"98":{},"99":{},"109":{},"111":{},"115":{},"146":{},"164":{},"176":{},"177":{}},"component":{}}],["maxmtu",{"_index":1400,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["mb",{"_index":3606,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["mbl",{"_index":6515,"title":{},"name":{},"text":{"86":{},"177":{}},"component":{}}],["mbp",{"_index":433,"title":{},"name":{},"text":{"4":{},"23":{},"59":{},"90":{},"111":{},"149":{}},"component":{}}],["mbr",{"_index":3142,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["mc",{"_index":6544,"title":{},"name":{},"text":{"87":{},"178":{}},"component":{}}],["mcan",{"_index":2280,"title":{"48":{},"64":{},"137":{},"155":{},"48-1":{},"64-1":{}},"name":{"48":{},"64":{},"137":{},"155":{}},"text":{"35":{},"48":{},"64":{},"123":{},"137":{},"155":{}},"component":{}}],["mcan0",{"_index":3254,"title":{},"name":{},"text":{"48":{},"52":{},"64":{},"68":{},"137":{},"142":{},"155":{},"158":{}},"component":{}}],["mcan1",{"_index":3255,"title":{},"name":{},"text":{"48":{},"64":{},"137":{},"155":{}},"component":{}}],["mcast",{"_index":1444,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["mcast_",{"_index":469,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["mcast_fast_leav",{"_index":1423,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["mcast_flood",{"_index":1424,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["mcast_igmp_vers",{"_index":460,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["mcast_mld_vers",{"_index":461,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["mcast_queri",{"_index":463,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["mcast_rout",{"_index":456,"title":{},"name":{},"text":{"4":{},"15":{},"90":{},"99":{}},"component":{}}],["mcast_snoop",{"_index":454,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["mcast_to_unicast",{"_index":1425,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["mcast_vlan_snoop",{"_index":471,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["mchp",{"_index":6019,"title":{},"name":{},"text":{"77":{},"167":{}},"component":{}}],["mchp,cpld",{"_index":5055,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["mchp,cpld_fifo",{"_index":5057,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["mchp,synce_builtin",{"_index":5051,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["mchp,synce_dpl",{"_index":5053,"title":{},"name":{},"text":{"59":{},"71":{},"73":{},"149":{},"161":{},"163":{}},"component":{}}],["mchp,t1e1j1",{"_index":5059,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["mchp1",{"_index":5809,"title":{},"name":{},"text":{"72":{},"162":{}},"component":{}}],["mchp_docker_opt",{"_index":1273,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["mchp_tfa_ctl",{"_index":4481,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["mcp2200",{"_index":5836,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["mdio",{"_index":5663,"title":{},"name":{},"text":{"68":{},"158":{}},"component":{}}],["mdio0",{"_index":5675,"title":{},"name":{},"text":{"68":{},"158":{}},"component":{}}],["mdio_irq_pin",{"_index":5671,"title":{},"name":{},"text":{"68":{},"158":{}},"component":{}}],["mdio_pin",{"_index":5668,"title":{},"name":{},"text":{"68":{},"158":{}},"component":{}}],["mdlevel",{"_index":586,"title":{},"name":{},"text":{"6":{},"94":{}},"component":{}}],["mean",{"_index":196,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"14":{},"16":{},"26":{},"28":{},"31":{},"34":{},"37":{},"45":{},"46":{},"51":{},"55":{},"60":{},"61":{},"62":{},"67":{},"72":{},"75":{},"80":{},"81":{},"84":{},"85":{},"87":{},"90":{},"92":{},"94":{},"101":{},"104":{},"114":{},"115":{},"119":{},"120":{},"121":{},"133":{},"134":{},"139":{},"146":{},"150":{},"151":{},"152":{},"157":{},"162":{},"166":{},"171":{},"172":{},"175":{},"176":{},"178":{}},"component":{}}],["meanpathdelay",{"_index":2018,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["measur",{"_index":3974,"title":{},"name":{},"text":{"52":{},"55":{},"68":{},"72":{},"142":{},"146":{},"158":{},"162":{},"165":{}},"component":{}}],["mechan",{"_index":439,"title":{},"name":{},"text":{"4":{},"15":{},"55":{},"72":{},"90":{},"99":{},"146":{},"162":{},"165":{}},"component":{}}],["media",{"_index":1644,"title":{"46-4":{},"62-4":{},"80-5":{},"134-3":{},"152-3":{},"171-4":{}},"name":{},"text":{"16":{},"17":{},"46":{},"55":{},"56":{},"62":{},"72":{},"74":{},"80":{},"104":{},"106":{},"134":{},"146":{},"147":{},"152":{},"162":{},"164":{},"165":{},"171":{}},"component":{}}],["media/vishnu/842a0c11",{"_index":3669,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["mef",{"_index":6555,"title":{},"name":{},"text":{"87":{},"178":{}},"component":{}}],["meg",{"_index":673,"title":{},"name":{},"text":{"7":{},"16":{},"92":{},"104":{}},"component":{}}],["mega",{"_index":6530,"title":{},"name":{},"text":{"86":{},"177":{}},"component":{}}],["megabit",{"_index":1750,"title":{},"name":{},"text":{"22":{},"28":{},"109":{},"115":{}},"component":{}}],["megabyt",{"_index":1804,"title":{},"name":{},"text":{"23":{},"111":{}},"component":{}}],["mem",{"_index":4814,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["member",{"_index":297,"title":{"12-6":{},"98-5":{}},"name":{},"text":{"4":{},"12":{},"15":{},"90":{},"98":{},"99":{}},"component":{}}],["memo",{"_index":4051,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["memori",{"_index":6,"title":{"61-2":{},"74-8":{},"77-2":{},"151-2":{},"164-7":{},"167-2":{}},"name":{},"text":{"1":{},"46":{},"50":{},"51":{},"53":{},"54":{},"55":{},"56":{},"59":{},"60":{},"61":{},"62":{},"66":{},"67":{},"69":{},"72":{},"74":{},"75":{},"77":{},"79":{},"80":{},"84":{},"89":{},"134":{},"138":{},"139":{},"143":{},"144":{},"146":{},"147":{},"149":{},"150":{},"151":{},"152":{},"156":{},"157":{},"159":{},"162":{},"164":{},"166":{},"167":{},"170":{},"171":{},"175":{}},"component":{}}],["mention",{"_index":6221,"title":{},"name":{},"text":{"80":{},"85":{},"141":{},"171":{},"176":{}},"component":{}}],["menu",{"_index":4077,"title":{},"name":{},"text":{"54":{},"79":{},"144":{},"170":{}},"component":{}}],["menuconfig",{"_index":1183,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["mep",{"_index":575,"title":{"7-3":{},"7-4":{},"7-5":{},"7-6":{},"7-7":{},"7-8":{},"7-9":{},"7-10":{},"92-2":{},"92-3":{},"92-4":{},"92-5":{},"92-6":{},"92-7":{},"92-8":{},"92-9":{}},"name":{},"text":{"6":{},"7":{},"16":{},"92":{},"94":{},"104":{}},"component":{}}],["mepid",{"_index":644,"title":{},"name":{},"text":{"6":{},"7":{},"92":{},"94":{}},"component":{}}],["mera",{"_index":2275,"title":{"35-5":{},"123-4":{}},"name":{},"text":{},"component":{}}],["mera(microchip",{"_index":2283,"title":{},"name":{},"text":{"35":{},"123":{}},"component":{}}],["merchant",{"_index":1141,"title":{},"name":{},"text":{"14":{},"55":{},"72":{},"101":{},"146":{},"162":{}},"component":{}}],["merg",{"_index":851,"title":{},"name":{},"text":{"12":{},"51":{},"67":{},"98":{},"139":{},"157":{}},"component":{}}],["merkl",{"_index":6778,"title":{},"name":{},"text":{"165":{}},"component":{}}],["mesa",{"_index":1728,"title":{},"name":{},"text":{"18":{},"31":{},"32":{},"34":{},"37":{},"103":{},"118":{},"119":{},"120":{},"121":{}},"component":{}}],["messag",{"_index":1969,"title":{},"name":{},"text":{"27":{},"30":{},"35":{},"36":{},"46":{},"48":{},"51":{},"55":{},"57":{},"60":{},"62":{},"67":{},"72":{},"75":{},"112":{},"116":{},"123":{},"124":{},"134":{},"137":{},"139":{},"146":{},"148":{},"150":{},"152":{},"157":{},"162":{},"166":{}},"component":{}}],["message_age_tim",{"_index":1417,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["message_ram",{"_index":3256,"title":{},"name":{},"text":{"48":{},"64":{},"137":{},"155":{}},"component":{}}],["met",{"_index":4452,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["metadata",{"_index":114,"title":{"96":{},"9-1":{}},"name":{},"text":{"2":{},"9":{},"46":{},"62":{},"84":{},"88":{},"96":{},"134":{},"152":{},"175":{}},"component":{}}],["meter",{"_index":1791,"title":{},"name":{},"text":{"23":{},"31":{},"34":{},"111":{},"119":{},"121":{}},"component":{}}],["method",{"_index":2740,"title":{},"name":{},"text":{"46":{},"54":{},"55":{},"56":{},"62":{},"72":{},"79":{},"80":{},"134":{},"144":{},"146":{},"147":{},"152":{},"162":{},"165":{},"170":{},"171":{}},"component":{}}],["metric:1",{"_index":3290,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["mfc",{"_index":1831,"title":{},"name":{},"text":{"23":{},"111":{}},"component":{}}],["mfr=0",{"_index":4729,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["mfr=1",{"_index":4623,"title":{},"name":{},"text":{"57":{},"59":{},"73":{},"74":{},"148":{},"149":{},"163":{},"164":{}},"component":{}}],["mfr=3",{"_index":5124,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["mhccaqeeimvrkun0elswq+zcsbopw8+nx4vaumhkrvddwztophh7oaogccqgsm49",{"_index":4266,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["mhz",{"_index":4749,"title":{},"name":{},"text":{"59":{},"60":{},"149":{},"150":{}},"component":{}}],["mib",{"_index":2810,"title":{},"name":{},"text":{"46":{},"50":{},"52":{},"53":{},"59":{},"60":{},"62":{},"66":{},"73":{},"75":{},"80":{},"134":{},"138":{},"142":{},"143":{},"149":{},"150":{},"152":{},"156":{},"163":{},"166":{},"171":{}},"component":{}}],["mib/",{"_index":3103,"title":{},"name":{},"text":{"46":{},"59":{},"62":{},"73":{},"134":{},"149":{},"152":{},"163":{}},"component":{}}],["mic",{"_index":1655,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["micrel_phi",{"_index":6038,"title":{},"name":{},"text":{"78":{},"169":{}},"component":{}}],["micro",{"_index":5911,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["microchip",{"_index":18,"title":{},"name":{},"text":{"1":{},"4":{},"7":{},"13":{},"14":{},"16":{},"18":{},"26":{},"30":{},"46":{},"55":{},"57":{},"59":{},"62":{},"72":{},"73":{},"78":{},"80":{},"84":{},"85":{},"87":{},"89":{},"90":{},"92":{},"101":{},"102":{},"103":{},"104":{},"114":{},"116":{},"134":{},"146":{},"148":{},"149":{},"152":{},"162":{},"163":{},"169":{},"171":{},"175":{},"176":{},"178":{}},"component":{}}],["microchip,flx",{"_index":3233,"title":{},"name":{},"text":{"47":{},"58":{},"63":{},"135":{},"145":{},"153":{}},"component":{}}],["microchip,lan9662",{"_index":4580,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["microchip,lan966x",{"_index":3224,"title":{},"name":{},"text":{"47":{},"50":{},"51":{},"52":{},"53":{},"66":{},"69":{},"74":{},"135":{},"138":{},"139":{},"142":{},"143":{},"156":{},"159":{},"164":{}},"component":{}}],["microchip,lan969x",{"_index":5553,"title":{},"name":{},"text":{"63":{},"67":{},"68":{},"153":{},"157":{},"158":{}},"component":{}}],["microchip,sam9x60",{"_index":3346,"title":{},"name":{},"text":{"49":{},"65":{},"136":{},"154":{}},"component":{}}],["microchip,sgpio",{"_index":5741,"title":{},"name":{},"text":{"70":{},"160":{}},"component":{}}],["microchip,sparx5",{"_index":5730,"title":{},"name":{},"text":{"70":{},"160":{}},"component":{}}],["microsemi_phi",{"_index":6027,"title":{},"name":{},"text":{"78":{},"169":{}},"component":{}}],["mii",{"_index":425,"title":{},"name":{},"text":{"4":{},"15":{},"90":{},"99":{}},"component":{}}],["miim",{"_index":5653,"title":{},"name":{},"text":{"68":{},"80":{},"158":{},"171":{}},"component":{}}],["miim_a",{"_index":3849,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["miim_b",{"_index":3857,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["miim_c",{"_index":3906,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["miim_irq",{"_index":5655,"title":{},"name":{},"text":{"68":{},"158":{}},"component":{}}],["miim_sa",{"_index":5654,"title":{},"name":{},"text":{"68":{},"158":{}},"component":{}}],["miim_slave_a",{"_index":3855,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["miim_slaveb",{"_index":3907,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["miimon",{"_index":391,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["millisecond",{"_index":390,"title":{},"name":{},"text":{"4":{},"10":{},"12":{},"26":{},"90":{},"97":{},"98":{},"114":{}},"component":{}}],["mim",{"_index":1654,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["mim,mic",{"_index":1676,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["mim/mic",{"_index":1643,"title":{"16-10":{},"104-9":{}},"name":{},"text":{},"component":{}}],["min",{"_index":3122,"title":{},"name":{},"text":{"46":{},"60":{},"62":{},"75":{},"80":{},"134":{},"150":{},"152":{},"166":{},"171":{}},"component":{}}],["min/avg/max/mdev",{"_index":295,"title":{},"name":{},"text":{"4":{},"15":{},"19":{},"90":{},"99":{},"105":{}},"component":{}}],["min_neighbor_prop_delay",{"_index":2026,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["mini",{"_index":6043,"title":{},"name":{},"text":{"78":{},"169":{}},"component":{}}],["minicom",{"_index":4717,"title":{},"name":{},"text":{"59":{},"73":{},"149":{},"163":{}},"component":{}}],["minimum",{"_index":784,"title":{},"name":{},"text":{"10":{},"28":{},"59":{},"97":{},"115":{},"141":{},"149":{}},"component":{}}],["minmtu",{"_index":1398,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["minor",{"_index":1878,"title":{},"name":{},"text":{"26":{},"38":{},"40":{},"41":{},"42":{},"43":{},"85":{},"114":{},"125":{},"127":{},"128":{},"129":{},"130":{},"131":{},"176":{}},"component":{}}],["minut",{"_index":4084,"title":{},"name":{},"text":{"54":{},"79":{},"144":{},"170":{}},"component":{}}],["mip",{"_index":52,"title":{"76-4":{},"168-3":{}},"name":{},"text":{"1":{},"6":{},"76":{},"89":{},"94":{},"168":{}},"component":{}}],["mipsel",{"_index":2229,"title":{},"name":{},"text":{"32":{},"33":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"118":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{}},"component":{}}],["mipsel_bootload",{"_index":51,"title":{},"name":{},"text":{"1":{},"76":{},"89":{},"168":{}},"component":{}}],["mipsel_standalon",{"_index":5990,"title":{},"name":{},"text":{"76":{},"168":{}},"component":{}}],["mipsel_xstax",{"_index":5991,"title":{},"name":{},"text":{"76":{},"168":{}},"component":{}}],["mipsel_xstax_load",{"_index":5992,"title":{},"name":{},"text":{"76":{},"168":{}},"component":{}}],["mir",{"_index":362,"title":{},"name":{},"text":{"4":{},"84":{},"85":{},"86":{},"87":{},"90":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["mirror",{"_index":165,"title":{"4-5":{},"90-4":{}},"name":{},"text":{"4":{},"17":{},"80":{},"84":{},"85":{},"86":{},"87":{},"90":{},"106":{},"171":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["mirror/redirect",{"_index":5222,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["misc",{"_index":4537,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["mismatch",{"_index":5092,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["miss",{"_index":1443,"title":{},"name":{},"text":{"15":{},"43":{},"46":{},"62":{},"84":{},"99":{},"130":{},"134":{},"152":{},"175":{}},"component":{}}],["mix",{"_index":1888,"title":{},"name":{},"text":{"26":{},"114":{}},"component":{}}],["mkdir",{"_index":1127,"title":{},"name":{},"text":{"14":{},"50":{},"57":{},"66":{},"101":{},"138":{},"141":{},"148":{},"156":{},"165":{}},"component":{}}],["mke2f",{"_index":3634,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["mkfs.ext2",{"_index":3633,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["mkimag",{"_index":6765,"title":{},"name":{},"text":{"165":{}},"component":{}}],["mld",{"_index":444,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["mmc",{"_index":2281,"title":{"46-42":{},"55-29":{},"62-41":{},"134-41":{},"146-28":{},"152-40":{}},"name":{"50":{},"66":{},"138":{},"156":{}},"text":{"35":{},"46":{},"50":{},"52":{},"54":{},"55":{},"56":{},"59":{},"60":{},"62":{},"66":{},"73":{},"75":{},"79":{},"80":{},"123":{},"134":{},"138":{},"142":{},"144":{},"146":{},"147":{},"149":{},"150":{},"152":{},"156":{},"163":{},"166":{},"170":{},"171":{}},"component":{}}],["mmc(0",{"_index":3040,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["mmc.gpt",{"_index":5536,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["mmc.gpt.gz",{"_index":5477,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["mmc0",{"_index":3559,"title":{},"name":{},"text":{"50":{},"52":{},"59":{},"66":{},"138":{},"142":{},"149":{},"156":{}},"component":{}}],["mmc0:0001",{"_index":3565,"title":{},"name":{},"text":{"50":{},"52":{},"59":{},"66":{},"138":{},"142":{},"149":{},"156":{}},"component":{}}],["mmc0:aaaa",{"_index":3653,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["mmc_bak",{"_index":2907,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["mmc_bak=2",{"_index":6224,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["mmc_bak=6",{"_index":2886,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["mmc_bak};run",{"_index":6226,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["mmc_boot",{"_index":2883,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["mmc_boot01_dlup",{"_index":3034,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["mmc_boot01_dlup=run",{"_index":2998,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["mmc_boot0_dlup",{"_index":3032,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["mmc_boot0_dlup=run",{"_index":2991,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["mmc_boot0_upd",{"_index":2993,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["mmc_boot0_upd=run",{"_index":2989,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["mmc_boot1_dlup",{"_index":3033,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["mmc_boot1_dlup=run",{"_index":2996,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["mmc_boot1_upd",{"_index":2997,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["mmc_boot1_upd=run",{"_index":2994,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["mmc_boot=run",{"_index":2887,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["mmc_bus_width_4",{"_index":4398,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["mmc_cur",{"_index":2908,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["mmc_cur=1",{"_index":6227,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["mmc_cur=5",{"_index":2890,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["mmc_dev",{"_index":2893,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["mmc_dev=mmc",{"_index":2891,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["mmc_dev}:${mmc_cur",{"_index":2917,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["mmc_dl",{"_index":2992,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["mmc_dl=dhcp",{"_index":2985,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["mmc_dlup",{"_index":6252,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["mmc_dlup=dhcp",{"_index":6228,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["mmc_fip01_dlup",{"_index":3028,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["mmc_fip01_dlup=run",{"_index":2983,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["mmc_fip0_dlup=run",{"_index":2977,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["mmc_fip0_upd",{"_index":2978,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["mmc_fip0_upd=run",{"_index":2974,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["mmc_fip1_dlup",{"_index":3027,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["mmc_fip1_dlup=run",{"_index":2981,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["mmc_fip1_upd",{"_index":2982,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["mmc_fip1_upd=run",{"_index":2979,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["mmc_fip_dlup",{"_index":3026,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["mmc_format",{"_index":3019,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["mmc_format=gpt",{"_index":2892,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["mmc_fw",{"_index":2986,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["mmc_fw=brsdk_standalone_arm.ext4.gz",{"_index":2984,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["mmc_fw=brsdk_standalone_arm64.ext4.gz",{"_index":5524,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["mmc_guid",{"_index":2894,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["mmc_guid;gpt",{"_index":6232,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["mmc_image=new.ext4.gz",{"_index":6233,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["mmc_image};unzip",{"_index":6229,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["mmc_load",{"_index":2910,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["mmc_load=ext4load",{"_index":2916,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["mmc_offset_boot0",{"_index":2990,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["mmc_offset_boot0=0x82040",{"_index":3001,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["mmc_offset_boot1",{"_index":2995,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["mmc_offset_boot1=0x282040",{"_index":3002,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["mmc_offset_data",{"_index":3035,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["mmc_offset_data=0x482040",{"_index":3003,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["mmc_offset_fip0",{"_index":2976,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["mmc_offset_fip0=0x40",{"_index":2999,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["mmc_offset_fip1",{"_index":2980,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["mmc_offset_fip1=0x40040",{"_index":3000,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["mmc_p",{"_index":3101,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["mmc_part",{"_index":2895,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["mmc_part=uuid_disk=${mmc_guid",{"_index":2896,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["mmc_part=uuid_disk=${mmc_guid};name=boot0,size=1024mib,type=linux;name=boot1,size=1024mib,type=linux;name=data,size=1536mib,type=linux",{"_index":6234,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["mmc_part=uuid_disk=${mmc_guid};name=fip,start=1mib,size=128mib,type=system;name=fip.bak,size=128mib,type=system;name=env,size=2mib,type=data;name=env.bak,size=2mib,type=data;name=boot0,size=1gib,type=linux;name=boot1,size=1gib,type=linux;name=data,s",{"_index":5525,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["mmc_start",{"_index":6239,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["mmc_swap",{"_index":2889,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["mmc_swap=env",{"_index":2905,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["mmc_tryboot",{"_index":2888,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["mmc_tryboot;env",{"_index":6225,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["mmc_tryboot;run",{"_index":5522,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["mmc_tryboot=run",{"_index":2909,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["mmc_unzip_loadaddr",{"_index":2988,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["mmc_unzip_loadaddr=0x80000000",{"_index":2885,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["mmc_updat",{"_index":6231,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["mmc_update=run",{"_index":6236,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["mmcaddr",{"_index":6238,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["mmcaddr=760000000",{"_index":6240,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["mmcaddr};run",{"_index":6230,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["mmcblk0",{"_index":3564,"title":{},"name":{},"text":{"50":{},"52":{},"59":{},"66":{},"138":{},"142":{},"149":{},"156":{}},"component":{}}],["mmcblk0boot0",{"_index":3569,"title":{},"name":{},"text":{"50":{},"52":{},"59":{},"66":{},"138":{},"142":{},"149":{},"156":{}},"component":{}}],["mmcblk0boot1",{"_index":3572,"title":{},"name":{},"text":{"50":{},"52":{},"59":{},"66":{},"138":{},"142":{},"149":{},"156":{}},"component":{}}],["mmcblk0p5",{"_index":5632,"title":{},"name":{},"text":{"66":{},"156":{}},"component":{}}],["mmcblk0rpmb",{"_index":3574,"title":{},"name":{},"text":{"50":{},"52":{},"59":{},"66":{},"138":{},"142":{},"149":{},"156":{}},"component":{}}],["mmcgetoffset;mmc",{"_index":6237,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["mmcgetoffset=part",{"_index":6241,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["mmcload;setenv",{"_index":6235,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["mmcload=ext4load",{"_index":6242,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["mmio",{"_index":5034,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["mnt",{"_index":5942,"title":{},"name":{},"text":{"74":{},"164":{},"165":{}},"component":{}}],["mnt/boot",{"_index":6696,"title":{},"name":{},"text":{"141":{}},"component":{}}],["mnt/boot/config.txt",{"_index":6704,"title":{},"name":{},"text":{"141":{}},"component":{}}],["mnt/boot/ssh",{"_index":6702,"title":{},"name":{},"text":{"141":{}},"component":{}}],["mnt/main.r",{"_index":5948,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["mobil",{"_index":4830,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["mod",{"_index":2052,"title":{},"name":{},"text":{"29":{},"70":{},"117":{},"160":{}},"component":{}}],["mode",{"_index":88,"title":{"105":{},"2-5":{},"19-1":{},"19-2":{},"46-10":{},"55-28":{},"62-10":{},"72-28":{},"88-4":{},"105-1":{},"134-9":{},"146-27":{},"152-9":{},"162-27":{}},"name":{},"text":{"2":{},"4":{},"15":{},"16":{},"19":{},"46":{},"47":{},"48":{},"49":{},"50":{},"52":{},"54":{},"55":{},"56":{},"58":{},"59":{},"62":{},"63":{},"65":{},"66":{},"68":{},"71":{},"72":{},"73":{},"74":{},"79":{},"80":{},"88":{},"90":{},"99":{},"104":{},"105":{},"134":{},"135":{},"136":{},"137":{},"138":{},"141":{},"142":{},"144":{},"145":{},"146":{},"147":{},"149":{},"152":{},"153":{},"154":{},"156":{},"158":{},"161":{},"162":{},"163":{},"164":{},"165":{},"170":{},"171":{}},"component":{}}],["model",{"_index":581,"title":{},"name":{},"text":{"6":{},"7":{},"16":{},"59":{},"73":{},"75":{},"92":{},"94":{},"104":{},"149":{},"163":{},"166":{}},"component":{}}],["modemmanag",{"_index":4579,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["modern",{"_index":4162,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["modif",{"_index":1227,"title":{"55-15":{},"72-15":{},"146-14":{},"162-14":{}},"name":{},"text":{"14":{},"55":{},"72":{},"101":{},"146":{},"162":{}},"component":{}}],["modifi",{"_index":808,"title":{"14-16":{},"101-15":{}},"name":{},"text":{"10":{},"14":{},"29":{},"51":{},"67":{},"81":{},"83":{},"84":{},"85":{},"86":{},"97":{},"101":{},"117":{},"139":{},"157":{},"172":{},"174":{},"175":{},"176":{},"177":{}},"component":{}}],["modprob",{"_index":2484,"title":{},"name":{},"text":{"45":{},"57":{},"133":{},"148":{}},"component":{}}],["modul",{"_index":49,"title":{"40-5":{},"43-8":{},"127-4":{},"130-7":{}},"name":{},"text":{"1":{},"45":{},"57":{},"59":{},"61":{},"77":{},"89":{},"133":{},"141":{},"148":{},"149":{},"151":{},"165":{},"167":{}},"component":{}}],["modular",{"_index":5490,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["modulo",{"_index":2152,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["mon",{"_index":4130,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["monitor",{"_index":348,"title":{"46-9":{},"54-4":{},"55-32":{},"62-8":{},"62-9":{},"79-4":{},"134-8":{},"144-3":{},"146-31":{},"152-7":{},"152-8":{},"170-3":{}},"name":{},"text":{"4":{},"6":{},"7":{},"14":{},"46":{},"54":{},"55":{},"62":{},"72":{},"79":{},"84":{},"85":{},"87":{},"90":{},"92":{},"94":{},"101":{},"134":{},"141":{},"144":{},"146":{},"152":{},"162":{},"170":{},"175":{},"176":{},"178":{}},"component":{}}],["more",{"_index":191,"title":{},"name":{},"text":{"4":{},"6":{},"12":{},"14":{},"16":{},"22":{},"23":{},"26":{},"27":{},"29":{},"32":{},"33":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"46":{},"49":{},"51":{},"54":{},"55":{},"60":{},"61":{},"62":{},"64":{},"67":{},"70":{},"72":{},"75":{},"79":{},"80":{},"82":{},"84":{},"85":{},"86":{},"87":{},"90":{},"94":{},"98":{},"101":{},"104":{},"109":{},"111":{},"112":{},"114":{},"117":{},"118":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"134":{},"136":{},"139":{},"144":{},"146":{},"150":{},"151":{},"152":{},"155":{},"157":{},"160":{},"162":{},"165":{},"166":{},"170":{},"171":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["mostli",{"_index":2224,"title":{},"name":{},"text":{"32":{},"118":{}},"component":{}}],["moto_modem",{"_index":5177,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["motorola_tetra",{"_index":5179,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["mount",{"_index":1232,"title":{"74-8":{},"164-7":{}},"name":{},"text":{"14":{},"46":{},"50":{},"52":{},"57":{},"59":{},"61":{},"66":{},"68":{},"74":{},"80":{},"101":{},"134":{},"138":{},"141":{},"142":{},"148":{},"149":{},"151":{},"156":{},"158":{},"164":{},"165":{},"171":{}},"component":{}}],["mountpoint",{"_index":4896,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["mous",{"_index":6656,"title":{},"name":{},"text":{"141":{}},"component":{}}],["movabl",{"_index":4820,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["move",{"_index":2355,"title":{},"name":{},"text":{"38":{},"55":{},"61":{},"72":{},"77":{},"125":{},"146":{},"151":{},"162":{},"167":{}},"component":{}}],["mpidr",{"_index":4905,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["mpl",{"_index":5233,"title":{},"name":{},"text":{"59":{},"86":{},"149":{},"177":{}},"component":{}}],["mq",{"_index":235,"title":{},"name":{},"text":{"4":{},"15":{},"19":{},"59":{},"90":{},"99":{},"105":{},"149":{}},"component":{}}],["mqprio",{"_index":1863,"title":{"36-8":{},"85-6":{},"124-7":{},"176-6":{}},"name":{},"text":{"26":{},"28":{},"36":{},"85":{},"114":{},"115":{},"124":{},"176":{}},"component":{}}],["mra",{"_index":2266,"title":{},"name":{},"text":{"33":{},"34":{},"37":{},"120":{},"121":{},"122":{}},"component":{}}],["mrc",{"_index":1653,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["mrm",{"_index":1652,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["mrm,mrc,mra",{"_index":1675,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["mrm/mrc",{"_index":1639,"title":{"16-7":{},"104-6":{}},"name":{},"text":{},"component":{}}],["mrp",{"_index":1634,"title":{"104":{},"16-1":{},"16-9":{},"104-8":{}},"name":{"16":{},"104":{}},"text":{"16":{},"17":{},"33":{},"34":{},"37":{},"104":{},"106":{},"120":{},"121":{},"122":{}},"component":{}}],["mrp_intest",{"_index":1661,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["mrp_server",{"_index":1665,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["mrp_test",{"_index":1656,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["ms",{"_index":280,"title":{},"name":{},"text":{"4":{},"12":{},"15":{},"19":{},"46":{},"54":{},"59":{},"62":{},"73":{},"79":{},"86":{},"90":{},"98":{},"99":{},"105":{},"134":{},"144":{},"149":{},"152":{},"163":{},"170":{},"177":{}},"component":{}}],["ms_enabl",{"_index":924,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["ms_id",{"_index":922,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["msa",{"_index":918,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["msb",{"_index":3776,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["mscc",{"_index":1106,"title":{},"name":{},"text":{"14":{},"18":{},"32":{},"46":{},"62":{},"80":{},"101":{},"103":{},"118":{},"134":{},"141":{},"152":{},"171":{}},"component":{}}],["mscc_hello_world_install_stag",{"_index":1250,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["mscc_hello_world_override_srcdir",{"_index":1271,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["mscc_hello_world_sit",{"_index":1245,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["mscc_hello_world_sourc",{"_index":1248,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["mscc_hello_world_vers",{"_index":1243,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["mscc_hello_world_version).tar.gz",{"_index":1249,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["msf",{"_index":921,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["mstpctl",{"_index":502,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["mstpd",{"_index":482,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["mtd",{"_index":1073,"title":{},"name":{},"text":{"14":{},"46":{},"53":{},"58":{},"62":{},"69":{},"80":{},"101":{},"134":{},"143":{},"145":{},"152":{},"159":{},"171":{}},"component":{}}],["mtd.erases",{"_index":4019,"title":{},"name":{},"text":{"53":{},"58":{},"69":{},"143":{},"145":{},"159":{}},"component":{}}],["mtd.flag",{"_index":4015,"title":{},"name":{},"text":{"53":{},"58":{},"69":{},"143":{},"145":{},"159":{}},"component":{}}],["mtd.oobsiz",{"_index":4023,"title":{},"name":{},"text":{"53":{},"58":{},"69":{},"143":{},"145":{},"159":{}},"component":{}}],["mtd.size",{"_index":4017,"title":{},"name":{},"text":{"53":{},"58":{},"69":{},"143":{},"145":{},"159":{}},"component":{}}],["mtd.type",{"_index":4013,"title":{},"name":{},"text":{"53":{},"58":{},"69":{},"143":{},"145":{},"159":{}},"component":{}}],["mtd.writes",{"_index":4021,"title":{},"name":{},"text":{"53":{},"58":{},"69":{},"143":{},"145":{},"159":{}},"component":{}}],["mtd0",{"_index":4701,"title":{},"name":{},"text":{"58":{},"145":{}},"component":{}}],["mtd5",{"_index":6217,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["mtd_cap_nandflash",{"_index":4016,"title":{},"name":{},"text":{"53":{},"143":{}},"component":{}}],["mtd_cap_norflash",{"_index":4689,"title":{},"name":{},"text":{"58":{},"69":{},"145":{},"159":{}},"component":{}}],["mtd_debug",{"_index":3999,"title":{},"name":{},"text":{"53":{},"58":{},"69":{},"143":{},"145":{},"159":{}},"component":{}}],["mtd_nandflash",{"_index":4014,"title":{},"name":{},"text":{"53":{},"143":{}},"component":{}}],["mtd_norflash",{"_index":4688,"title":{},"name":{},"text":{"58":{},"69":{},"145":{},"159":{}},"component":{}}],["mtdids=nor0=spi0.0",{"_index":6243,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["mtdids=nor0=spi0.0,spi",{"_index":6160,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["mtdpart",{"_index":2930,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["mtdparts=${nor_parts};env",{"_index":2965,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["mtdparts=mtdparts=spi0",{"_index":5527,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["mtdparts=mtdparts=spi0.0:1m(uboot),256k(env),256k(env.bk),20m(linux),20m(linux.bk",{"_index":6244,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["mtdparts=mtdparts=spi0.0:1m(uboot),256k(env),256k(env.bk);spi0.14:64m(boot0),64m(boot1",{"_index":6162,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["mtdparts=mtdparts=spi0:1536k(fip),256k(env),256k(env.bak",{"_index":3005,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["mtdroot",{"_index":2912,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["mtu",{"_index":222,"title":{"15-4":{},"99-3":{}},"name":{},"text":{"4":{},"15":{},"19":{},"22":{},"23":{},"48":{},"86":{},"87":{},"90":{},"99":{},"105":{},"109":{},"111":{},"137":{},"177":{},"178":{}},"component":{}}],["mtu:1480",{"_index":3314,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["mtu:1500",{"_index":3289,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["mtu:16",{"_index":3303,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["mtu:65536",{"_index":3311,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["mu",{"_index":5646,"title":{},"name":{},"text":{"68":{},"158":{}},"component":{}}],["much",{"_index":1787,"title":{},"name":{},"text":{"22":{},"85":{},"87":{},"109":{},"176":{},"178":{}},"component":{}}],["multclk",{"_index":3524,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["multi",{"_index":4111,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["multicast",{"_index":441,"title":{},"name":{},"text":{"4":{},"31":{},"34":{},"48":{},"87":{},"90":{},"119":{},"121":{},"137":{},"178":{}},"component":{}}],["multicastframesreceivedok",{"_index":1472,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["multicastframesxmittedok",{"_index":1469,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["multimedia",{"_index":3483,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["multimediacard",{"_index":3187,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"72":{},"134":{},"146":{},"152":{},"162":{}},"component":{}}],["multimet",{"_index":3970,"title":{},"name":{},"text":{"52":{},"68":{},"142":{},"158":{}},"component":{}}],["multipl",{"_index":560,"title":{"27-7":{},"112-6":{}},"name":{},"text":{"6":{},"12":{},"16":{},"27":{},"94":{},"98":{},"104":{},"112":{}},"component":{}}],["multiplecollisionfram",{"_index":1454,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["multiqueu",{"_index":2323,"title":{},"name":{},"text":{"36":{},"85":{},"124":{},"176":{}},"component":{}}],["mute",{"_index":5557,"title":{},"name":{},"text":{"64":{},"155":{}},"component":{}}],["mux",{"_index":5565,"title":{},"name":{},"text":{"65":{},"70":{},"154":{},"160":{}},"component":{}}],["mux_group",{"_index":5684,"title":{},"name":{},"text":{"68":{},"158":{}},"component":{}}],["mx66l1g45g",{"_index":6153,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["n",{"_index":2153,"title":{},"name":{},"text":{"29":{},"45":{},"49":{},"50":{},"55":{},"66":{},"72":{},"80":{},"117":{},"133":{},"136":{},"138":{},"146":{},"156":{},"162":{},"171":{}},"component":{}}],["n.a",{"_index":2710,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["n/a",{"_index":944,"title":{},"name":{},"text":{"12":{},"46":{},"62":{},"98":{},"134":{},"152":{}},"component":{}}],["name",{"_index":189,"title":{"61-8":{},"77-5":{},"151-9":{},"167-5":{}},"name":{},"text":{"4":{},"6":{},"7":{},"10":{},"12":{},"14":{},"16":{},"18":{},"29":{},"30":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"57":{},"58":{},"59":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"77":{},"78":{},"79":{},"80":{},"84":{},"85":{},"90":{},"92":{},"94":{},"97":{},"98":{},"101":{},"103":{},"104":{},"116":{},"117":{},"130":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"142":{},"143":{},"144":{},"145":{},"146":{},"148":{},"149":{},"151":{},"152":{},"153":{},"154":{},"155":{},"156":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"167":{},"169":{},"170":{},"171":{},"175":{},"176":{}},"component":{}}],["name,fstype,label,uuid,partuuid,mountpoint",{"_index":6677,"title":{},"name":{},"text":{"141":{}},"component":{}}],["name/desc",{"_index":2757,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["name/numb",{"_index":3754,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["name=boot0,size=1gib,type=linux",{"_index":2901,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["name=boot1,size=1gib,type=linux",{"_index":2902,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["name=data,s",{"_index":2903,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["name=env,size=2mib,type=data",{"_index":2899,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["name=env.bak,size=2mib,type=data",{"_index":2900,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["name=fip,start=32k,size=128mib,type=system",{"_index":2897,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["name=fip.bak,size=128mib,type=system",{"_index":2898,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["nand",{"_index":2398,"title":{"80-7":{},"80-10":{},"80-11":{},"80-13":{},"171-6":{},"171-9":{},"171-10":{},"171-12":{}},"name":{},"text":{"41":{},"53":{},"61":{},"69":{},"80":{},"128":{},"143":{},"151":{},"159":{},"171":{}},"component":{}}],["nand0",{"_index":6118,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["nand0=spi0.14",{"_index":6161,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["nand@",{"_index":6119,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["nand_bak",{"_index":6177,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["nand_bak=1",{"_index":6163,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["nand_bak};run",{"_index":6167,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["nand_boot",{"_index":6157,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["nand_boot=run",{"_index":6164,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["nand_cur",{"_index":6166,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["nand_cur=0",{"_index":6169,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["nand_dlup",{"_index":6213,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["nand_dlup=dhcp",{"_index":6170,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["nand_image=new.ubif",{"_index":6173,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["nand_image};run",{"_index":6171,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["nand_mtdroot=root=ubi0:rootf",{"_index":6174,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["nand_mtdroot};run",{"_index":6181,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["nand_swap=env",{"_index":6176,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["nand_tryboot",{"_index":6168,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["nand_tryboot;env",{"_index":6165,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["nand_tryboot=run",{"_index":6178,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["nand_upd",{"_index":6172,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["nand_update=sf",{"_index":6182,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["nandload;setenv",{"_index":6179,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["nandload=sf",{"_index":6185,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["nano",{"_index":6050,"title":{},"name":{},"text":{"78":{},"85":{},"169":{},"176":{}},"component":{}}],["nanosecond",{"_index":798,"title":{},"name":{},"text":{"10":{},"26":{},"97":{},"114":{}},"component":{}}],["nanousb",{"_index":6673,"title":{},"name":{},"text":{"141":{}},"component":{}}],["natur",{"_index":1715,"title":{},"name":{},"text":{"18":{},"103":{}},"component":{}}],["nav",{"_index":2429,"title":{},"name":{"44":{},"132":{}},"text":{},"component":{}}],["navig",{"_index":4167,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["nc",{"_index":3985,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["nearest",{"_index":1853,"title":{},"name":{},"text":{"23":{},"111":{}},"component":{}}],["necessari",{"_index":255,"title":{},"name":{},"text":{"4":{},"12":{},"14":{},"18":{},"29":{},"46":{},"55":{},"62":{},"72":{},"80":{},"84":{},"90":{},"98":{},"101":{},"103":{},"117":{},"134":{},"146":{},"152":{},"162":{},"165":{},"171":{},"175":{}},"component":{}}],["need",{"_index":53,"title":{},"name":{},"text":{"1":{},"4":{},"12":{},"14":{},"15":{},"16":{},"19":{},"26":{},"27":{},"29":{},"32":{},"36":{},"38":{},"43":{},"45":{},"46":{},"51":{},"52":{},"54":{},"55":{},"56":{},"57":{},"61":{},"62":{},"67":{},"68":{},"72":{},"74":{},"80":{},"82":{},"84":{},"85":{},"89":{},"90":{},"98":{},"99":{},"101":{},"104":{},"105":{},"112":{},"114":{},"117":{},"118":{},"124":{},"125":{},"130":{},"133":{},"134":{},"139":{},"140":{},"141":{},"142":{},"144":{},"146":{},"147":{},"148":{},"151":{},"152":{},"157":{},"158":{},"162":{},"164":{},"165":{},"171":{},"173":{},"175":{},"176":{}},"component":{}}],["neg",{"_index":1719,"title":{},"name":{},"text":{"18":{},"103":{}},"component":{}}],["neglig",{"_index":4475,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["negoti",{"_index":1353,"title":{},"name":{},"text":{"15":{},"35":{},"36":{},"46":{},"62":{},"99":{},"123":{},"124":{},"134":{},"152":{}},"component":{}}],["neigh_suppress",{"_index":1426,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["neighbor",{"_index":658,"title":{},"name":{},"text":{"6":{},"94":{}},"component":{}}],["neighborpropdelaythresh",{"_index":2025,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["nest",{"_index":6470,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["net",{"_index":1856,"title":{"24-2":{},"35-5":{},"110-1":{},"123-4":{}},"name":{},"text":{"59":{},"60":{},"73":{},"75":{},"149":{},"150":{},"163":{},"166":{}},"component":{}}],["netfilt",{"_index":6458,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["netlink",{"_index":701,"title":{},"name":{},"text":{"7":{},"16":{},"36":{},"59":{},"92":{},"104":{},"124":{},"149":{}},"component":{}}],["netmask",{"_index":2856,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["netmask=255.255.255.0",{"_index":4776,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["netwind",{"_index":5002,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["network",{"_index":179,"title":{"105":{},"106":{},"17-1":{},"19-1":{},"30-1":{},"46-35":{},"46-44":{},"46-47":{},"62-35":{},"62-43":{},"62-46":{},"80-12":{},"80-16":{},"116-1":{},"134-34":{},"134-43":{},"134-46":{},"152-34":{},"152-42":{},"152-45":{},"171-11":{},"171-15":{}},"name":{},"text":{"4":{},"12":{},"15":{},"16":{},"19":{},"27":{},"30":{},"31":{},"32":{},"34":{},"36":{},"37":{},"46":{},"48":{},"54":{},"59":{},"62":{},"64":{},"73":{},"77":{},"79":{},"80":{},"85":{},"90":{},"98":{},"99":{},"104":{},"105":{},"112":{},"116":{},"118":{},"119":{},"120":{},"121":{},"124":{},"134":{},"137":{},"141":{},"144":{},"149":{},"152":{},"155":{},"163":{},"167":{},"170":{},"171":{},"176":{}},"component":{}}],["network_host_mod",{"_index":1736,"title":{},"name":{"19":{},"105":{}},"text":{},"component":{}}],["network_overview",{"_index":1703,"title":{},"name":{"17":{},"106":{}},"text":{},"component":{}}],["network_transport",{"_index":1974,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["never",{"_index":4274,"title":{},"name":{},"text":{"55":{},"72":{},"85":{},"146":{},"162":{},"176":{}},"component":{}}],["new",{"_index":307,"title":{"14-15":{},"36-4":{},"39-4":{},"101-14":{},"124-3":{},"126-3":{}},"name":{},"text":{"4":{},"6":{},"12":{},"14":{},"28":{},"29":{},"36":{},"38":{},"40":{},"43":{},"46":{},"50":{},"51":{},"52":{},"54":{},"55":{},"57":{},"59":{},"62":{},"66":{},"67":{},"72":{},"73":{},"74":{},"79":{},"80":{},"84":{},"85":{},"90":{},"94":{},"98":{},"101":{},"115":{},"117":{},"124":{},"125":{},"127":{},"130":{},"134":{},"138":{},"139":{},"141":{},"142":{},"144":{},"146":{},"148":{},"149":{},"152":{},"156":{},"157":{},"162":{},"163":{},"164":{},"165":{},"170":{},"171":{},"175":{},"176":{}},"component":{}}],["new.ext4.gz",{"_index":6251,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["new.itb",{"_index":6266,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["new.ubif",{"_index":6212,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["newli",{"_index":4248,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["next",{"_index":1196,"title":{},"name":{},"text":{"14":{},"23":{},"26":{},"46":{},"51":{},"55":{},"62":{},"67":{},"72":{},"73":{},"80":{},"84":{},"85":{},"86":{},"87":{},"101":{},"111":{},"114":{},"134":{},"139":{},"141":{},"146":{},"152":{},"157":{},"162":{},"163":{},"165":{},"171":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["next_root",{"_index":6254,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["nfsv4.1",{"_index":4999,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["ngpio",{"_index":5742,"title":{},"name":{},"text":{"70":{},"160":{}},"component":{}}],["nic",{"_index":1497,"title":{"141":{},"151-6":{}},"name":{},"text":{"15":{},"40":{},"49":{},"58":{},"59":{},"99":{},"127":{},"131":{},"136":{},"141":{},"145":{},"149":{},"151":{}},"component":{}}],["nic_clk",{"_index":3411,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"136":{},"145":{},"149":{}},"component":{}}],["nist",{"_index":4263,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["no]firstfrag",{"_index":6309,"title":{},"name":{},"text":{"82":{},"86":{},"87":{},"173":{},"177":{},"178":{}},"component":{}}],["no]frag",{"_index":6308,"title":{},"name":{},"text":{"82":{},"86":{},"87":{},"173":{},"177":{},"178":{}},"component":{}}],["no_act=no",{"_index":5383,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["noarp",{"_index":3302,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["node",{"_index":524,"title":{"6-9":{},"6-19":{},"6-20":{},"6-21":{},"94-8":{},"94-18":{},"94-19":{},"94-20":{}},"name":{},"text":{"6":{},"16":{},"27":{},"46":{},"49":{},"50":{},"55":{},"56":{},"58":{},"59":{},"61":{},"65":{},"66":{},"70":{},"71":{},"72":{},"73":{},"74":{},"94":{},"104":{},"112":{},"134":{},"136":{},"138":{},"140":{},"141":{},"145":{},"146":{},"147":{},"149":{},"151":{},"154":{},"156":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{}},"component":{}}],["noinitrd",{"_index":5614,"title":{},"name":{},"text":{"66":{},"156":{}},"component":{}}],["nokogiri",{"_index":1088,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["nomast",{"_index":212,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["non",{"_index":1154,"title":{},"name":{},"text":{"14":{},"16":{},"38":{},"45":{},"50":{},"51":{},"52":{},"55":{},"66":{},"67":{},"72":{},"86":{},"87":{},"101":{},"104":{},"125":{},"133":{},"138":{},"139":{},"142":{},"146":{},"156":{},"157":{},"162":{},"165":{},"177":{},"178":{}},"component":{}}],["non_trusted_fw_content_cert",{"_index":4294,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["non_trusted_fw_content_cert_id",{"_index":4160,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["non_trusted_fw_content_cert_priv_key",{"_index":4233,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["non_trusted_fw_content_cert_pub_key",{"_index":4234,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["non_trusted_fw_key_cert",{"_index":4235,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["non_trusted_fw_key_cert_id",{"_index":4158,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["non_trusted_nv_ctr",{"_index":4293,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["non_trusted_world",{"_index":4173,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["non_trusted_world_key",{"_index":4236,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["non_trusted_world_priv_key",{"_index":4238,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["non_trusted_world_pub_key",{"_index":4239,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["nonalias",{"_index":4810,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["none",{"_index":597,"title":{},"name":{},"text":{"6":{},"22":{},"23":{},"31":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"50":{},"51":{},"52":{},"55":{},"57":{},"66":{},"67":{},"68":{},"72":{},"81":{},"86":{},"87":{},"94":{},"109":{},"111":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"138":{},"139":{},"140":{},"142":{},"146":{},"148":{},"156":{},"157":{},"158":{},"162":{},"172":{},"177":{},"178":{}},"component":{}}],["nontrust",{"_index":3752,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["noop",{"_index":244,"title":{},"name":{},"text":{"4":{},"48":{},"55":{},"90":{},"137":{},"146":{}},"component":{}}],["noqueu",{"_index":225,"title":{},"name":{},"text":{"4":{},"48":{},"90":{},"137":{}},"component":{}}],["nor.gpt.gz",{"_index":5479,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["nor/mmc",{"_index":5475,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["nor/nand",{"_index":3981,"title":{},"name":{},"text":{"53":{},"58":{},"69":{},"71":{},"143":{},"145":{},"159":{},"161":{}},"component":{}}],["nor0",{"_index":3117,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["nor_",{"_index":6263,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["nor_boot",{"_index":3135,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["nor_boot;env",{"_index":2967,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["nor_boot=sf",{"_index":2953,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["nor_dlup",{"_index":3134,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["nor_dlup=dhcp",{"_index":2956,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["nor_fip_dlup",{"_index":3025,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["nor_fip_dlup=run",{"_index":2960,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["nor_fip_upd",{"_index":2962,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["nor_fip_upd=sf",{"_index":2959,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["nor_imag",{"_index":2957,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["nor_image=brsdk_standalone_arm.itb",{"_index":2963,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["nor_image=brsdk_standalone_arm64.itb",{"_index":5528,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["nor_image=new.itb",{"_index":6189,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["nor_onli",{"_index":3116,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["nor_only=env",{"_index":2964,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["nor_parts=spi0.0:1m(uboot),256k(env),256k(env.bk),20m(linux),20m(linux.bk),32m(rootfs_data",{"_index":6190,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["nor_parts=spi0:1536k(fip),256k(env),256k(env.bk),25m(linux),25m(linux.bk),12m(rootfs_data",{"_index":2968,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["nor_parts=spi0:1920k(fip),64k(env),64k(env.bk),25m(linux),25m(linux.bk),12m(rootfs_data",{"_index":5529,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["nor_tryboot",{"_index":2954,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["nor_tryboot=mtd",{"_index":5530,"title":{},"name":{},"text":{"62":{},"80":{},"152":{},"171":{}},"component":{}}],["nor_tryboot=sf",{"_index":2969,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["nor_upd",{"_index":2958,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["nor_update=sf",{"_index":2972,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["norimg",{"_index":4180,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["normal",{"_index":323,"title":{"86-10":{},"141-7":{},"177-9":{}},"name":{},"text":{"4":{},"6":{},"13":{},"14":{},"46":{},"51":{},"55":{},"59":{},"62":{},"67":{},"72":{},"79":{},"80":{},"86":{},"90":{},"94":{},"101":{},"102":{},"134":{},"139":{},"146":{},"149":{},"152":{},"157":{},"162":{},"165":{},"170":{},"171":{},"177":{}},"component":{}}],["normal_5tuple_ip4",{"_index":6505,"title":{"86-5":{},"177-4":{}},"name":{},"text":{"86":{},"177":{}},"component":{}}],["normal_7tupl",{"_index":6506,"title":{"86-6":{},"177-5":{}},"name":{},"text":{"86":{},"177":{}},"component":{}}],["normal_ip6",{"_index":6507,"title":{"86-8":{},"177-7":{}},"name":{},"text":{"86":{},"177":{}},"component":{}}],["nosalt",{"_index":2493,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["not_passing_frames_count",{"_index":1825,"title":{},"name":{},"text":{"23":{},"31":{},"34":{},"111":{},"119":{},"121":{}},"component":{}}],["not_passing_sdu_count",{"_index":1826,"title":{},"name":{},"text":{"23":{},"111":{}},"component":{}}],["notat",{"_index":2123,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["note",{"_index":656,"title":{"44":{},"132":{}},"name":{},"text":{"6":{},"12":{},"14":{},"29":{},"44":{},"45":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"55":{},"56":{},"58":{},"59":{},"60":{},"61":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"75":{},"77":{},"80":{},"81":{},"82":{},"84":{},"86":{},"87":{},"94":{},"98":{},"101":{},"117":{},"132":{},"133":{},"136":{},"137":{},"138":{},"139":{},"142":{},"143":{},"145":{},"146":{},"147":{},"149":{},"150":{},"151":{},"154":{},"155":{},"156":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"165":{},"166":{},"167":{},"171":{},"172":{},"173":{},"175":{},"177":{},"178":{}},"component":{}}],["noth",{"_index":1864,"title":{},"name":{},"text":{"26":{},"50":{},"66":{},"84":{},"85":{},"114":{},"138":{},"156":{},"175":{},"176":{}},"component":{}}],["notic",{"_index":4454,"title":{},"name":{},"text":{"55":{},"72":{},"75":{},"79":{},"146":{},"162":{},"166":{},"170":{}},"component":{}}],["notif",{"_index":430,"title":{"7-10":{},"92-9":{}},"name":{},"text":{"4":{},"7":{},"90":{},"92":{}},"component":{}}],["notifi",{"_index":1660,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["nov",{"_index":5852,"title":{},"name":{},"text":{"73":{},"75":{},"163":{},"166":{}},"component":{}}],["novatel_gp",{"_index":5181,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["now",{"_index":271,"title":{},"name":{},"text":{"4":{},"12":{},"14":{},"15":{},"16":{},"19":{},"23":{},"36":{},"38":{},"40":{},"41":{},"42":{},"43":{},"46":{},"52":{},"54":{},"56":{},"59":{},"60":{},"62":{},"68":{},"70":{},"74":{},"75":{},"79":{},"80":{},"84":{},"85":{},"90":{},"98":{},"99":{},"101":{},"104":{},"105":{},"111":{},"124":{},"125":{},"127":{},"128":{},"129":{},"130":{},"131":{},"134":{},"141":{},"142":{},"144":{},"147":{},"149":{},"150":{},"152":{},"158":{},"160":{},"164":{},"166":{},"170":{},"171":{},"175":{},"176":{}},"component":{}}],["npfc",{"_index":1833,"title":{},"name":{},"text":{"23":{},"111":{}},"component":{}}],["npi",{"_index":6205,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["npsc",{"_index":1836,"title":{},"name":{},"text":{"23":{},"111":{}},"component":{}}],["nr_cpu_ids=1",{"_index":4853,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["nr_cpus=4",{"_index":4852,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["nr_irq",{"_index":4857,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["ns",{"_index":3422,"title":{},"name":{},"text":{"49":{},"55":{},"59":{},"65":{},"72":{},"73":{},"136":{},"146":{},"149":{},"154":{},"162":{},"163":{}},"component":{}}],["nt",{"_index":4153,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["ntfw",{"_index":4179,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["ntpshm",{"_index":1956,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["null",{"_index":862,"title":{},"name":{},"text":{"12":{},"23":{},"98":{},"111":{}},"component":{}}],["nullf",{"_index":1957,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["num",{"_index":4147,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["num_tc",{"_index":1902,"title":{},"name":{},"text":{"26":{},"114":{}},"component":{}}],["number",{"_index":564,"title":{},"name":{},"text":{"6":{},"7":{},"10":{},"12":{},"14":{},"15":{},"23":{},"26":{},"27":{},"29":{},"43":{},"45":{},"46":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"55":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"81":{},"84":{},"85":{},"86":{},"87":{},"92":{},"94":{},"97":{},"98":{},"99":{},"101":{},"111":{},"112":{},"114":{},"117":{},"130":{},"133":{},"134":{},"136":{},"137":{},"138":{},"139":{},"142":{},"143":{},"145":{},"146":{},"148":{},"149":{},"150":{},"151":{},"152":{},"154":{},"155":{},"156":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"166":{},"172":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["number[cpu",{"_index":3518,"title":{},"name":{},"text":{"50":{},"53":{},"58":{},"59":{},"66":{},"69":{},"71":{},"73":{},"138":{},"143":{},"145":{},"149":{},"156":{},"159":{},"161":{},"163":{}},"component":{}}],["numer",{"_index":2154,"title":{},"name":{},"text":{"29":{},"55":{},"72":{},"117":{},"146":{},"162":{}},"component":{}}],["numrxqueu",{"_index":1434,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["numtxqueu",{"_index":1433,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["nv",{"_index":4092,"title":{"55-17":{},"72-17":{},"146-16":{},"162-16":{}},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["nvcnt",{"_index":3715,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["nvctr",{"_index":4178,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["nvim",{"_index":6703,"title":{},"name":{},"text":{"141":{}},"component":{}}],["nvmem",{"_index":3709,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["nvram",{"_index":3723,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["o",{"_index":1184,"title":{},"name":{},"text":{"14":{},"27":{},"29":{},"49":{},"80":{},"101":{},"112":{},"117":{},"136":{},"171":{}},"component":{}}],["o=./output/mybuild",{"_index":1187,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["oam",{"_index":594,"title":{"87-11":{},"178-10":{}},"name":{},"text":{"6":{},"7":{},"29":{},"59":{},"84":{},"87":{},"92":{},"94":{},"117":{},"149":{},"175":{},"178":{}},"component":{}}],["ob_trig",{"_index":3852,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["ob_trig_a",{"_index":3836,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["ob_trig_b",{"_index":3878,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["obey",{"_index":1381,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["object",{"_index":6471,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["observ",{"_index":2500,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["obsolet",{"_index":5797,"title":{},"name":{},"text":{"72":{},"162":{}},"component":{}}],["obtain",{"_index":4166,"title":{},"name":{},"text":{"55":{},"56":{},"72":{},"146":{},"147":{},"162":{}},"component":{}}],["oc",{"_index":1980,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["occupi",{"_index":865,"title":{},"name":{},"text":{"12":{},"29":{},"87":{},"98":{},"117":{},"178":{}},"component":{}}],["occur",{"_index":618,"title":{},"name":{},"text":{"6":{},"28":{},"94":{},"115":{}},"component":{}}],["ocelot",{"_index":3951,"title":{},"name":{},"text":{"52":{},"59":{},"68":{},"142":{},"149":{},"158":{}},"component":{}}],["ocelot_pcb120",{"_index":5998,"title":{},"name":{},"text":{"76":{},"168":{}},"component":{}}],["ocelot_pcb123",{"_index":5999,"title":{},"name":{},"text":{"76":{},"168":{}},"component":{}}],["oct",{"_index":6494,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["octet",{"_index":605,"title":{},"name":{},"text":{"6":{},"10":{},"23":{},"86":{},"94":{},"97":{},"111":{},"177":{}},"component":{}}],["octetsreceivedok",{"_index":1466,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["octetstransmittedok",{"_index":1459,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["od",{"_index":3451,"title":{},"name":{},"text":{"49":{},"56":{},"136":{},"147":{}},"component":{}}],["oem",{"_index":2795,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["of=/dev/mmcblk0",{"_index":3587,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["of=/dev/mmcblk0p1",{"_index":3174,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["of=/dev/mmcblk0p5",{"_index":3177,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["of=/dev/sdx",{"_index":6679,"title":{},"name":{},"text":{"141":{}},"component":{}}],["of=/sys/class/misc/tfa_ctl/fw_bind",{"_index":4524,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["of=/sys/class/misc/tfa_ctl/sjtag_key",{"_index":4512,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["of=64k",{"_index":4694,"title":{},"name":{},"text":{"58":{},"145":{}},"component":{}}],["of=bound",{"_index":4528,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["of=data",{"_index":4521,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["of=key",{"_index":4509,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["of_cfs_init",{"_index":5256,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["of_libfdt_overlay=i",{"_index":6647,"title":{},"name":{},"text":{"140":{}},"component":{}}],["ofb",{"_index":2479,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["offer",{"_index":2207,"title":{},"name":{},"text":{"31":{},"32":{},"34":{},"37":{},"38":{},"46":{},"55":{},"62":{},"72":{},"80":{},"85":{},"118":{},"119":{},"120":{},"121":{},"125":{},"134":{},"146":{},"152":{},"162":{},"171":{},"176":{}},"component":{}}],["offlin",{"_index":4437,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["offload",{"_index":161,"title":{"91":{},"3-1":{}},"name":{},"text":{"4":{},"8":{},"22":{},"23":{},"26":{},"28":{},"85":{},"90":{},"109":{},"111":{},"114":{},"115":{},"176":{}},"component":{}}],["offset",{"_index":1879,"title":{},"name":{},"text":{"26":{},"27":{},"46":{},"51":{},"54":{},"55":{},"62":{},"67":{},"72":{},"79":{},"80":{},"84":{},"112":{},"114":{},"134":{},"139":{},"144":{},"146":{},"152":{},"157":{},"162":{},"165":{},"170":{},"171":{},"175":{}},"component":{}}],["offset/nam",{"_index":2651,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["offset/s",{"_index":3756,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["offsetfrommast",{"_index":2016,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["offset|partit",{"_index":2846,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["oflag=direct",{"_index":6682,"title":{},"name":{},"text":{"141":{}},"component":{}}],["ohci",{"_index":5100,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["ohci_hcd",{"_index":5099,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["oid",{"_index":4261,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["ok",{"_index":3041,"title":{},"name":{},"text":{"46":{},"59":{},"60":{},"62":{},"73":{},"75":{},"79":{},"80":{},"134":{},"149":{},"150":{},"152":{},"163":{},"166":{},"170":{},"171":{}},"component":{}}],["okay",{"_index":3241,"title":{},"name":{},"text":{"47":{},"48":{},"49":{},"50":{},"52":{},"53":{},"57":{},"58":{},"59":{},"60":{},"63":{},"64":{},"65":{},"66":{},"68":{},"69":{},"70":{},"71":{},"73":{},"74":{},"135":{},"136":{},"137":{},"138":{},"142":{},"143":{},"145":{},"148":{},"149":{},"150":{},"153":{},"154":{},"155":{},"156":{},"158":{},"159":{},"160":{},"161":{},"163":{},"164":{}},"component":{}}],["old",{"_index":311,"title":{},"name":{},"text":{"4":{},"50":{},"55":{},"66":{},"72":{},"90":{},"138":{},"146":{},"156":{},"162":{}},"component":{}}],["older",{"_index":1735,"title":{},"name":{},"text":{"18":{},"103":{}},"component":{}}],["omit",{"_index":685,"title":{},"name":{},"text":{"7":{},"14":{},"85":{},"92":{},"101":{},"176":{}},"component":{}}],["on",{"_index":192,"title":{},"name":{},"text":{"4":{},"7":{},"8":{},"12":{},"14":{},"16":{},"18":{},"26":{},"27":{},"28":{},"29":{},"33":{},"46":{},"47":{},"51":{},"54":{},"55":{},"57":{},"60":{},"61":{},"62":{},"63":{},"65":{},"67":{},"72":{},"74":{},"75":{},"79":{},"80":{},"81":{},"82":{},"84":{},"85":{},"86":{},"87":{},"90":{},"92":{},"95":{},"98":{},"101":{},"103":{},"104":{},"112":{},"114":{},"115":{},"117":{},"122":{},"134":{},"135":{},"139":{},"141":{},"144":{},"146":{},"148":{},"150":{},"151":{},"152":{},"153":{},"154":{},"157":{},"162":{},"164":{},"165":{},"166":{},"170":{},"171":{},"172":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["onboard",{"_index":6661,"title":{},"name":{},"text":{"141":{}},"component":{}}],["onc",{"_index":1667,"title":{},"name":{},"text":{"16":{},"46":{},"51":{},"55":{},"59":{},"62":{},"67":{},"72":{},"73":{},"80":{},"104":{},"112":{},"134":{},"139":{},"146":{},"149":{},"152":{},"157":{},"162":{},"163":{},"171":{}},"component":{}}],["onto",{"_index":2384,"title":{},"name":{},"text":{"40":{},"127":{}},"component":{}}],["on|off",{"_index":2818,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["oob",{"_index":4011,"title":{},"name":{},"text":{"53":{},"80":{},"143":{},"171":{}},"component":{}}],["op",{"_index":4443,"title":{},"name":{},"text":{"55":{},"72":{},"81":{},"82":{},"86":{},"87":{},"146":{},"162":{},"172":{},"173":{},"177":{},"178":{}},"component":{}}],["opc",{"_index":1737,"title":{"107":{},"20-1":{}},"name":{},"text":{},"component":{}}],["opc_ua_pub_sub",{"_index":1740,"title":{},"name":{"20":{},"107":{}},"text":{},"component":{}}],["opcod",{"_index":694,"title":{},"name":{},"text":{"7":{},"92":{}},"component":{}}],["open",{"_index":478,"title":{},"name":{},"text":{"4":{},"14":{},"16":{},"23":{},"26":{},"27":{},"46":{},"54":{},"55":{},"59":{},"62":{},"72":{},"79":{},"85":{},"86":{},"90":{},"101":{},"104":{},"111":{},"112":{},"114":{},"134":{},"144":{},"146":{},"149":{},"152":{},"162":{},"165":{},"170":{},"176":{},"177":{}},"component":{}}],["open/clos",{"_index":1683,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["openssl",{"_index":2483,"title":{},"name":{},"text":{"45":{},"55":{},"72":{},"133":{},"146":{},"162":{},"165":{}},"component":{}}],["oper",{"_index":543,"title":{"6-22":{},"94-21":{}},"name":{},"text":{"6":{},"12":{},"15":{},"16":{},"45":{},"46":{},"50":{},"51":{},"55":{},"56":{},"62":{},"66":{},"67":{},"72":{},"79":{},"84":{},"85":{},"94":{},"98":{},"99":{},"104":{},"116":{},"133":{},"134":{},"138":{},"139":{},"146":{},"147":{},"152":{},"156":{},"157":{},"162":{},"170":{},"175":{},"176":{}},"component":{}}],["oppos",{"_index":4276,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["opt",{"_index":3764,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["opt/mscc",{"_index":1119,"title":{},"name":{},"text":{"14":{},"55":{},"72":{},"101":{},"146":{},"162":{}},"component":{}}],["opt/mscc/mscc",{"_index":1129,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["opt:$opt",{"_index":1275,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["optim",{"_index":2238,"title":{},"name":{},"text":{"32":{},"55":{},"72":{},"85":{},"118":{},"146":{},"162":{},"176":{}},"component":{}}],["option",{"_index":465,"title":{},"name":{},"text":{"4":{},"10":{},"12":{},"14":{},"15":{},"27":{},"29":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"77":{},"80":{},"81":{},"84":{},"85":{},"86":{},"90":{},"97":{},"98":{},"99":{},"101":{},"112":{},"117":{},"130":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"140":{},"142":{},"143":{},"145":{},"146":{},"147":{},"148":{},"149":{},"150":{},"151":{},"152":{},"153":{},"154":{},"155":{},"156":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"171":{},"172":{},"175":{},"176":{},"177":{}},"component":{}}],["orag",{"_index":4057,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["order",{"_index":66,"title":{},"name":{},"text":{"1":{},"7":{},"12":{},"14":{},"22":{},"23":{},"26":{},"29":{},"46":{},"47":{},"49":{},"55":{},"58":{},"59":{},"61":{},"62":{},"63":{},"65":{},"66":{},"71":{},"72":{},"73":{},"74":{},"77":{},"80":{},"81":{},"84":{},"85":{},"86":{},"87":{},"89":{},"92":{},"98":{},"101":{},"109":{},"111":{},"114":{},"117":{},"134":{},"135":{},"136":{},"145":{},"146":{},"149":{},"151":{},"152":{},"153":{},"154":{},"156":{},"161":{},"162":{},"163":{},"164":{},"167":{},"171":{},"172":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["ordinari",{"_index":1927,"title":{"27-3":{},"112-2":{}},"name":{},"text":{"27":{},"112":{}},"component":{}}],["organ",{"_index":2230,"title":{},"name":{},"text":{"32":{},"118":{}},"component":{}}],["origin",{"_index":489,"title":{},"name":{},"text":{"4":{},"23":{},"30":{},"55":{},"72":{},"85":{},"90":{},"111":{},"116":{},"146":{},"162":{},"165":{},"176":{}},"component":{}}],["os",{"_index":2693,"title":{},"name":{},"text":{"46":{},"55":{},"59":{},"62":{},"72":{},"73":{},"134":{},"146":{},"149":{},"152":{},"162":{},"163":{}},"component":{}}],["os/2",{"_index":3604,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["osf",{"_index":3594,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["oss",{"_index":3603,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["ossman",{"_index":5196,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["os’",{"_index":6449,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["other",{"_index":2216,"title":{},"name":{},"text":{"31":{},"34":{},"85":{},"119":{},"121":{},"176":{}},"component":{}}],["otherwis",{"_index":816,"title":{},"name":{},"text":{"10":{},"55":{},"57":{},"66":{},"72":{},"97":{},"146":{},"148":{},"156":{},"162":{}},"component":{}}],["otp",{"_index":2282,"title":{"51":{},"67":{},"139":{},"157":{},"51-1":{},"55-34":{},"55-35":{},"55-36":{},"55-37":{},"55-38":{},"55-39":{},"55-40":{},"55-41":{},"55-42":{},"55-44":{},"67-1":{},"72-30":{},"72-31":{},"72-32":{},"72-33":{},"72-34":{},"72-36":{},"146-33":{},"146-34":{},"146-35":{},"146-36":{},"146-37":{},"146-38":{},"146-39":{},"146-40":{},"146-41":{},"146-43":{},"162-29":{},"162-30":{},"162-31":{},"162-32":{},"162-33":{},"162-35":{}},"name":{"51":{},"67":{},"139":{},"157":{}},"text":{"35":{},"46":{},"51":{},"55":{},"56":{},"62":{},"67":{},"72":{},"123":{},"134":{},"139":{},"146":{},"147":{},"152":{},"157":{},"162":{},"165":{}},"component":{}}],["otp(on",{"_index":3702,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["otp0",{"_index":3707,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["otp0/nvmem",{"_index":3711,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["otp@e0021000",{"_index":5637,"title":{},"name":{},"text":{"67":{},"157":{}},"component":{}}],["otp_pcie_bar",{"_index":3804,"title":{"55-41":{},"146-40":{}},"name":{},"text":{"51":{},"55":{},"67":{},"139":{},"146":{},"157":{}},"component":{}}],["otp_pcie_dev",{"_index":3800,"title":{"55-39":{},"146-38":{}},"name":{},"text":{"51":{},"55":{},"67":{},"139":{},"146":{},"157":{}},"component":{}}],["otp_pcie_flag",{"_index":3798,"title":{"55-38":{},"146-37":{}},"name":{},"text":{"51":{},"55":{},"67":{},"139":{},"146":{},"157":{}},"component":{}}],["otp_pcie_id",{"_index":3802,"title":{"55-40":{},"146-39":{}},"name":{},"text":{"51":{},"55":{},"67":{},"139":{},"146":{},"157":{}},"component":{}}],["otp_prg",{"_index":3780,"title":{},"name":{},"text":{"51":{},"55":{},"67":{},"72":{},"139":{},"146":{},"157":{},"162":{}},"component":{}}],["otp_sjtag_ssk",{"_index":3813,"title":{},"name":{},"text":{"51":{},"55":{},"67":{},"72":{},"139":{},"146":{},"157":{},"162":{}},"component":{}}],["otp_strap_disable_mask",{"_index":3815,"title":{"55-37":{},"72-33":{},"146-36":{},"162-32":{}},"name":{},"text":{"51":{},"55":{},"67":{},"72":{},"139":{},"146":{},"157":{},"162":{}},"component":{}}],["otp_tbbr_ek",{"_index":3809,"title":{},"name":{},"text":{"51":{},"55":{},"67":{},"72":{},"139":{},"146":{},"157":{},"162":{}},"component":{}}],["otp_tbbr_huk",{"_index":3758,"title":{},"name":{},"text":{"51":{},"55":{},"67":{},"72":{},"139":{},"146":{},"157":{},"162":{}},"component":{}}],["otp_tbbr_ntnvct",{"_index":4357,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["otp_tbbr_rotpk",{"_index":3806,"title":{},"name":{},"text":{"51":{},"55":{},"67":{},"72":{},"139":{},"146":{},"157":{},"162":{}},"component":{}}],["otp_tbbr_ssk",{"_index":3811,"title":{},"name":{},"text":{"51":{},"55":{},"67":{},"72":{},"139":{},"146":{},"157":{},"162":{}},"component":{}}],["otp_tbbr_tnvct",{"_index":4359,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["out",{"_index":510,"title":{},"name":{},"text":{"4":{},"7":{},"14":{},"22":{},"32":{},"35":{},"36":{},"45":{},"50":{},"51":{},"52":{},"55":{},"56":{},"58":{},"59":{},"60":{},"66":{},"67":{},"68":{},"70":{},"72":{},"73":{},"75":{},"85":{},"90":{},"92":{},"101":{},"109":{},"118":{},"123":{},"124":{},"133":{},"138":{},"139":{},"141":{},"142":{},"145":{},"146":{},"147":{},"149":{},"150":{},"156":{},"157":{},"158":{},"160":{},"162":{},"163":{},"165":{},"166":{},"176":{}},"component":{}}],["outbound",{"_index":6097,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["outdat",{"_index":626,"title":{},"name":{},"text":{"6":{},"94":{}},"component":{}}],["outer",{"_index":6412,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["outermost",{"_index":6279,"title":{},"name":{},"text":{"81":{},"172":{}},"component":{}}],["outlin",{"_index":711,"title":{},"name":{},"text":{"8":{},"9":{},"96":{}},"component":{}}],["outoforderpacket",{"_index":934,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["outofrangelengthfield",{"_index":1476,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["output",{"_index":1143,"title":{},"name":{},"text":{"14":{},"15":{},"27":{},"36":{},"40":{},"46":{},"50":{},"51":{},"55":{},"62":{},"66":{},"67":{},"68":{},"70":{},"72":{},"99":{},"101":{},"112":{},"124":{},"127":{},"134":{},"138":{},"139":{},"141":{},"146":{},"152":{},"156":{},"157":{},"158":{},"160":{},"162":{},"165":{}},"component":{}}],["output/artifact",{"_index":1176,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["output/build_arm_standalon",{"_index":1165,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["output/build_arm_standalone/arm_standalone_defconfig.log",{"_index":1169,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["output/build_arm_standalone/imag",{"_index":1185,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["output/build_arm_standalone/local.mk",{"_index":1225,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["output/build_arm_toolchain",{"_index":1331,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["output/mscc",{"_index":1174,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["output/mybuild",{"_index":1188,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["output/target",{"_index":6578,"title":{},"name":{},"text":{"101":{}},"component":{}}],["outsid",{"_index":1231,"title":{},"name":{},"text":{"14":{},"55":{},"72":{},"101":{},"146":{},"162":{},"165":{}},"component":{}}],["over",{"_index":845,"title":{},"name":{},"text":{"12":{},"27":{},"46":{},"55":{},"57":{},"59":{},"62":{},"72":{},"74":{},"98":{},"112":{},"134":{},"146":{},"148":{},"149":{},"152":{},"162":{},"164":{}},"component":{}}],["overhead",{"_index":1761,"title":{},"name":{},"text":{"22":{},"23":{},"87":{},"109":{},"111":{},"178":{}},"component":{}}],["overlaid",{"_index":6083,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["overlap",{"_index":5594,"title":{},"name":{},"text":{"66":{},"84":{},"156":{},"175":{}},"component":{}}],["overlay",{"_index":6646,"title":{"140":{}},"name":{"140":{}},"text":{"140":{},"141":{}},"component":{}}],["overlimit",{"_index":1769,"title":{},"name":{},"text":{"22":{},"23":{},"81":{},"86":{},"87":{},"109":{},"111":{},"172":{},"177":{},"178":{}},"component":{}}],["overrid",{"_index":1219,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["overriden",{"_index":4576,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["overruns:0",{"_index":3294,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["overview",{"_index":159,"title":{"91":{},"95":{},"106":{},"116":{},"3-1":{},"8-1":{},"12-2":{},"17-1":{},"46-3":{},"61-1":{},"61-3":{},"61-8":{},"62-3":{},"77-1":{},"77-3":{},"77-5":{},"80-3":{},"98-1":{},"134-2":{},"151-1":{},"151-3":{},"151-9":{},"152-2":{},"167-1":{},"167-3":{},"167-5":{},"171-2":{}},"name":{},"text":{"17":{},"46":{},"54":{},"55":{},"62":{},"72":{},"79":{},"84":{},"106":{},"134":{},"144":{},"146":{},"152":{},"162":{},"170":{},"175":{}},"component":{}}],["overwrit",{"_index":135,"title":{},"name":{},"text":{"2":{},"55":{},"72":{},"88":{},"146":{},"162":{}},"component":{}}],["overwritten",{"_index":6377,"title":{},"name":{},"text":{"84":{},"165":{},"175":{}},"component":{}}],["owner",{"_index":643,"title":{},"name":{},"text":{"6":{},"94":{}},"component":{}}],["p",{"_index":1128,"title":{"24-2":{},"35-5":{},"110-1":{},"123-4":{}},"name":{},"text":{"14":{},"27":{},"29":{},"49":{},"50":{},"55":{},"57":{},"66":{},"72":{},"101":{},"112":{},"117":{},"136":{},"138":{},"141":{},"146":{},"148":{},"156":{},"162":{}},"component":{}}],["p0",{"_index":1438,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["p1",{"_index":3578,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["p2",{"_index":3579,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["p2p",{"_index":1972,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["p2p_tc",{"_index":1995,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["p3",{"_index":5623,"title":{},"name":{},"text":{"66":{},"156":{}},"component":{}}],["p4",{"_index":5624,"title":{},"name":{},"text":{"66":{},"156":{}},"component":{}}],["p5",{"_index":5625,"title":{},"name":{},"text":{"66":{},"156":{}},"component":{}}],["p6",{"_index":5626,"title":{},"name":{},"text":{"66":{},"156":{}},"component":{}}],["p7",{"_index":5627,"title":{},"name":{},"text":{"66":{},"156":{}},"component":{}}],["pack",{"_index":1003,"title":{"14-11":{},"101-10":{}},"name":{},"text":{"14":{},"46":{},"62":{},"101":{},"134":{},"152":{}},"component":{}}],["packag",{"_index":966,"title":{"14-15":{},"14-16":{},"55-5":{},"72-5":{},"101-14":{},"101-15":{},"146-4":{},"162-4":{}},"name":{},"text":{"13":{},"14":{},"18":{},"32":{},"35":{},"45":{},"46":{},"55":{},"62":{},"72":{},"85":{},"101":{},"102":{},"103":{},"118":{},"123":{},"133":{},"134":{},"146":{},"152":{},"162":{},"176":{}},"component":{}}],["packet",{"_index":289,"title":{},"name":{},"text":{"4":{},"12":{},"14":{},"15":{},"19":{},"22":{},"23":{},"30":{},"46":{},"62":{},"82":{},"84":{},"85":{},"86":{},"87":{},"90":{},"98":{},"99":{},"101":{},"105":{},"109":{},"111":{},"116":{},"134":{},"152":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["packets:0",{"_index":3291,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["packets:2",{"_index":3337,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["pad",{"_index":6617,"title":{},"name":{},"text":{"131":{}},"component":{}}],["pag",{"_index":722,"title":{"9-12":{},"96-11":{}},"name":{},"text":{"9":{},"84":{},"86":{},"87":{},"96":{},"175":{},"177":{},"178":{}},"component":{}}],["page",{"_index":356,"title":{},"name":{},"text":{"4":{},"12":{},"22":{},"23":{},"26":{},"29":{},"36":{},"46":{},"53":{},"54":{},"59":{},"60":{},"62":{},"64":{},"68":{},"70":{},"73":{},"79":{},"80":{},"83":{},"84":{},"85":{},"90":{},"98":{},"109":{},"111":{},"114":{},"117":{},"124":{},"134":{},"143":{},"144":{},"149":{},"150":{},"152":{},"155":{},"158":{},"160":{},"163":{},"170":{},"171":{},"174":{},"175":{},"176":{}},"component":{}}],["pages",{"_index":3425,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["pages/cpu",{"_index":4824,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["par",{"_index":6616,"title":{},"name":{},"text":{"131":{}},"component":{}}],["parallel",{"_index":6371,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["param",{"_index":5110,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["paramet",{"_index":124,"title":{},"name":{},"text":{"2":{},"10":{},"12":{},"15":{},"22":{},"26":{},"28":{},"57":{},"83":{},"85":{},"88":{},"97":{},"98":{},"99":{},"109":{},"114":{},"115":{},"148":{},"165":{},"174":{},"176":{}},"component":{}}],["parent",{"_index":1868,"title":{},"name":{},"text":{"26":{},"28":{},"46":{},"55":{},"59":{},"62":{},"72":{},"80":{},"85":{},"114":{},"115":{},"134":{},"146":{},"149":{},"152":{},"162":{},"171":{},"176":{}},"component":{}}],["pars",{"_index":4189,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["parslet",{"_index":1080,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["part",{"_index":23,"title":{},"name":{},"text":{"1":{},"4":{},"12":{},"14":{},"16":{},"18":{},"23":{},"26":{},"27":{},"36":{},"38":{},"46":{},"48":{},"51":{},"55":{},"59":{},"62":{},"64":{},"67":{},"72":{},"74":{},"80":{},"82":{},"84":{},"85":{},"86":{},"87":{},"89":{},"90":{},"98":{},"101":{},"103":{},"104":{},"111":{},"112":{},"114":{},"124":{},"125":{},"134":{},"137":{},"139":{},"146":{},"149":{},"152":{},"155":{},"157":{},"162":{},"164":{},"171":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["part'.thi",{"_index":3042,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["partconf",{"_index":2829,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["parti",{"_index":1325,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["partial",{"_index":6520,"title":{},"name":{},"text":{"86":{},"165":{},"177":{}},"component":{}}],["particip",{"_index":2168,"title":{},"name":{},"text":{"30":{},"116":{}},"component":{}}],["particular",{"_index":1142,"title":{},"name":{},"text":{"14":{},"55":{},"57":{},"72":{},"101":{},"146":{},"148":{},"162":{}},"component":{}}],["partid",{"_index":3718,"title":{},"name":{},"text":{"51":{},"55":{},"67":{},"72":{},"139":{},"146":{},"157":{},"162":{}},"component":{}}],["partit",{"_index":2562,"title":{"46-33":{},"62-33":{},"134-32":{},"152-32":{}},"name":{},"text":{"46":{},"50":{},"54":{},"55":{},"62":{},"66":{},"72":{},"74":{},"79":{},"80":{},"134":{},"138":{},"141":{},"144":{},"146":{},"152":{},"156":{},"162":{},"164":{},"165":{},"170":{},"171":{}},"component":{}}],["partition'to",{"_index":2847,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["partition_access",{"_index":2832,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["partition_config",{"_index":2833,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["partli",{"_index":548,"title":{},"name":{},"text":{"6":{},"51":{},"67":{},"94":{},"139":{},"157":{}},"component":{}}],["partner",{"_index":1354,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["partprob",{"_index":5930,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["parttabl",{"_index":2652,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["pass",{"_index":713,"title":{},"name":{},"text":{"8":{},"14":{},"16":{},"22":{},"23":{},"27":{},"55":{},"59":{},"72":{},"73":{},"81":{},"82":{},"84":{},"85":{},"86":{},"87":{},"95":{},"101":{},"104":{},"109":{},"111":{},"112":{},"146":{},"149":{},"162":{},"163":{},"172":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["passedpacket",{"_index":936,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["passing_frames_count",{"_index":1844,"title":{},"name":{},"text":{"23":{},"111":{}},"component":{}}],["passing_sdu_count",{"_index":1845,"title":{},"name":{},"text":{"23":{},"111":{}},"component":{}}],["passiv",{"_index":1789,"title":{},"name":{},"text":{"23":{},"111":{}},"component":{}}],["password",{"_index":3736,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"141":{},"157":{}},"component":{}}],["patch",{"_index":554,"title":{},"name":{},"text":{"6":{},"13":{},"18":{},"27":{},"59":{},"94":{},"102":{},"103":{},"112":{},"149":{}},"component":{}}],["patchelf",{"_index":1075,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["path",{"_index":705,"title":{"8-2":{},"8-4":{},"95-1":{},"95-3":{}},"name":{},"text":{"8":{},"12":{},"14":{},"46":{},"59":{},"62":{},"73":{},"95":{},"98":{},"101":{},"134":{},"149":{},"152":{},"163":{}},"component":{}}],["path_trace_en",{"_index":1997,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["paus",{"_index":1365,"title":{},"name":{},"text":{"15":{},"33":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"99":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{}},"component":{}}],["payload",{"_index":4088,"title":{},"name":{},"text":{"54":{},"72":{},"79":{},"144":{},"162":{},"170":{}},"component":{}}],["pc",{"_index":1178,"title":{},"name":{},"text":{"14":{},"54":{},"57":{},"59":{},"73":{},"79":{},"101":{},"144":{},"148":{},"149":{},"163":{},"170":{}},"component":{}}],["pc0",{"_index":5584,"title":{},"name":{},"text":{"65":{},"154":{}},"component":{}}],["pcb",{"_index":2333,"title":{},"name":{},"text":{"37":{},"51":{},"61":{},"67":{},"80":{},"120":{},"139":{},"140":{},"151":{},"157":{},"171":{}},"component":{}}],["pcb10001",{"_index":5489,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["pcb110",{"_index":5494,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["pcb121",{"_index":5496,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["pcb125",{"_index":5506,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["pcb134",{"_index":2256,"title":{},"name":{},"text":{"33":{},"35":{},"62":{},"72":{},"80":{},"122":{},"123":{},"152":{},"162":{},"171":{}},"component":{}}],["pcb134_emmc",{"_index":6250,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["pcb135",{"_index":2257,"title":{},"name":{},"text":{"33":{},"35":{},"62":{},"80":{},"122":{},"123":{},"152":{},"171":{}},"component":{}}],["pcb8290",{"_index":4065,"title":{},"name":{},"text":{"54":{},"144":{}},"component":{}}],["pcb8291",{"_index":4708,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["pcb8398",{"_index":5823,"title":{},"name":{},"text":{"73":{},"75":{},"163":{},"166":{}},"component":{}}],["pcb=conf",{"_index":6652,"title":{},"name":{},"text":{"140":{}},"component":{}}],["pcb=pcb134",{"_index":6191,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["pcb=pcb134_emmc",{"_index":6245,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["pch/mch",{"_index":6015,"title":{},"name":{},"text":{"77":{},"167":{}},"component":{}}],["pcie",{"_index":2379,"title":{"141":{},"46-8":{},"55-31":{},"134-7":{},"146-30":{}},"name":{"141":{}},"text":{"40":{},"43":{},"46":{},"55":{},"62":{},"72":{},"77":{},"80":{},"127":{},"130":{},"131":{},"134":{},"141":{},"146":{},"151":{},"152":{},"162":{},"167":{},"171":{}},"component":{}}],["pcie_perst",{"_index":5649,"title":{},"name":{},"text":{"68":{},"158":{}},"component":{}}],["pclk",{"_index":3992,"title":{},"name":{},"text":{"53":{},"57":{},"69":{},"143":{},"148":{},"159":{}},"component":{}}],["pcp",{"_index":107,"title":{"9-5":{},"96-4":{}},"name":{},"text":{"2":{},"9":{},"15":{},"81":{},"83":{},"84":{},"85":{},"86":{},"88":{},"96":{},"99":{},"172":{},"174":{},"175":{},"176":{},"177":{}},"component":{}}],["pcp(0",{"_index":142,"title":{},"name":{},"text":{"2":{},"88":{}},"component":{}}],["pcp,dei",{"_index":141,"title":{},"name":{},"text":{"2":{},"88":{}},"component":{}}],["pcp/dei",{"_index":85,"title":{"2-4":{},"88-3":{}},"name":{},"text":{"2":{},"88":{}},"component":{}}],["pd69208t4",{"_index":6022,"title":{},"name":{},"text":{"77":{},"167":{}},"component":{}}],["pd69210",{"_index":6023,"title":{},"name":{},"text":{"77":{},"167":{}},"component":{}}],["pdu",{"_index":602,"title":{},"name":{},"text":{"6":{},"7":{},"92":{},"94":{}},"component":{}}],["peer",{"_index":429,"title":{"7-5":{},"7-8":{},"7-9":{},"92-4":{},"92-7":{},"92-8":{}},"name":{},"text":{"4":{},"6":{},"7":{},"16":{},"35":{},"36":{},"90":{},"92":{},"94":{},"104":{},"123":{},"124":{}},"component":{}}],["peer2peer",{"_index":2261,"title":{},"name":{},"text":{"33":{},"122":{}},"component":{}}],["per",{"_index":115,"title":{"111":{},"23-1":{}},"name":{},"text":{"2":{},"4":{},"6":{},"7":{},"8":{},"12":{},"15":{},"17":{},"22":{},"23":{},"26":{},"28":{},"29":{},"38":{},"51":{},"55":{},"59":{},"65":{},"67":{},"72":{},"73":{},"84":{},"88":{},"90":{},"92":{},"94":{},"95":{},"98":{},"99":{},"106":{},"109":{},"111":{},"114":{},"115":{},"117":{},"125":{},"139":{},"146":{},"149":{},"154":{},"157":{},"162":{},"163":{},"175":{}},"component":{}}],["percent",{"_index":6475,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["percpu",{"_index":4823,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["perform",{"_index":2438,"title":{},"name":{},"text":{"45":{},"46":{},"51":{},"55":{},"61":{},"62":{},"67":{},"72":{},"84":{},"85":{},"133":{},"134":{},"139":{},"146":{},"151":{},"152":{},"157":{},"162":{},"175":{},"176":{}},"component":{}}],["perid",{"_index":3996,"title":{},"name":{},"text":{"53":{},"69":{},"71":{},"73":{},"143":{},"159":{},"161":{},"163":{}},"component":{}}],["period",{"_index":653,"title":{},"name":{},"text":{"6":{},"7":{},"28":{},"43":{},"92":{},"94":{},"115":{},"130":{}},"component":{}}],["peripher",{"_index":1741,"title":{"108":{},"21-1":{}},"name":{"21":{},"108":{}},"text":{"32":{},"35":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"52":{},"53":{},"55":{},"58":{},"59":{},"60":{},"62":{},"63":{},"64":{},"65":{},"66":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"118":{},"123":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"142":{},"143":{},"145":{},"146":{},"149":{},"150":{},"152":{},"153":{},"154":{},"155":{},"156":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"166":{}},"component":{}}],["peripheral(her",{"_index":3947,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["permaddr",{"_index":1351,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["perman",{"_index":324,"title":{},"name":{},"text":{"4":{},"46":{},"55":{},"62":{},"72":{},"80":{},"90":{},"134":{},"146":{},"152":{},"162":{},"171":{}},"component":{}}],["permiss",{"_index":2737,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"72":{},"134":{},"146":{},"152":{},"162":{}},"component":{}}],["permit",{"_index":4451,"title":{},"name":{},"text":{"55":{},"72":{},"87":{},"146":{},"162":{},"178":{}},"component":{}}],["persist",{"_index":4318,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["perspect",{"_index":2348,"title":{},"name":{},"text":{"38":{},"61":{},"125":{},"151":{}},"component":{}}],["pf_can",{"_index":5241,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["pf_inet",{"_index":4978,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["pf_inet6",{"_index":5224,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["pf_netlink/pf_rout",{"_index":4934,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["pf_packet",{"_index":5236,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["pf_unix/pf_loc",{"_index":4992,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["pfc",{"_index":1392,"title":{},"name":{},"text":{"15":{},"23":{},"33":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"99":{},"111":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{}},"component":{}}],["pfc:paus",{"_index":2269,"title":{},"name":{},"text":{"33":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{}},"component":{}}],["pfifo_fast",{"_index":3319,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["phad_ctrl",{"_index":2422,"title":{},"name":{},"text":{"43":{},"130":{}},"component":{}}],["phandl",{"_index":3522,"title":{},"name":{},"text":{"50":{},"53":{},"66":{},"69":{},"71":{},"73":{},"138":{},"143":{},"156":{},"159":{},"161":{},"163":{}},"component":{}}],["phase",{"_index":3526,"title":{},"name":{},"text":{"50":{},"52":{},"55":{},"66":{},"72":{},"112":{},"138":{},"142":{},"146":{},"156":{},"162":{}},"component":{}}],["phase_detector_ctrl",{"_index":2421,"title":{},"name":{},"text":{"43":{},"130":{}},"component":{}}],["phc",{"_index":1970,"title":{},"name":{},"text":{"27":{},"33":{},"112":{},"122":{}},"component":{}}],["phc(physic",{"_index":1959,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["phc0",{"_index":2007,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["phc1",{"_index":2008,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["phc2si",{"_index":1939,"title":{"27-9":{},"112-9":{}},"name":{},"text":{"27":{},"112":{}},"component":{}}],["pheiffer",{"_index":6040,"title":{},"name":{},"text":{"78":{},"169":{}},"component":{}}],["phi",{"_index":1493,"title":{"169":{},"31-4":{},"33-5":{},"34-4":{},"37-4":{},"78-1":{},"119-3":{},"120-3":{},"121-3":{},"122-4":{}},"name":{"78":{},"169":{}},"text":{"15":{},"31":{},"33":{},"34":{},"36":{},"37":{},"43":{},"46":{},"61":{},"62":{},"74":{},"77":{},"78":{},"80":{},"99":{},"112":{},"119":{},"120":{},"121":{},"122":{},"124":{},"130":{},"134":{},"151":{},"152":{},"164":{},"167":{},"169":{},"171":{}},"component":{}}],["phillip",{"_index":5013,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["phy/lan8841",{"_index":2300,"title":{"36-10":{},"124-9":{}},"name":{},"text":{},"component":{}}],["phyad",{"_index":1371,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["physic",{"_index":633,"title":{},"name":{},"text":{"6":{},"27":{},"33":{},"52":{},"55":{},"59":{},"61":{},"68":{},"72":{},"77":{},"94":{},"112":{},"122":{},"142":{},"146":{},"149":{},"151":{},"158":{},"162":{},"167":{}},"component":{}}],["pi",{"_index":47,"title":{"141":{},"40-5":{},"43-8":{},"127-4":{},"130-7":{},"131-7":{},"141-4":{},"141-5":{},"141-8":{}},"name":{},"text":{"1":{},"27":{},"43":{},"61":{},"89":{},"112":{},"130":{},"141":{},"151":{}},"component":{}}],["pictur",{"_index":4295,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["pid",{"_index":5349,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["pid_max",{"_index":4892,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["pidfil",{"_index":5401,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["pierr",{"_index":5195,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["pin",{"_index":2541,"title":{"46-10":{},"52-10":{},"62-10":{},"68-9":{},"68-10":{},"134-9":{},"142-9":{},"152-9":{},"158-8":{},"158-9":{}},"name":{},"text":{"46":{},"47":{},"48":{},"49":{},"50":{},"52":{},"53":{},"54":{},"55":{},"57":{},"58":{},"59":{},"62":{},"63":{},"65":{},"66":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"79":{},"80":{},"112":{},"134":{},"135":{},"136":{},"137":{},"138":{},"141":{},"142":{},"143":{},"144":{},"145":{},"146":{},"148":{},"149":{},"152":{},"153":{},"154":{},"156":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"170":{},"171":{}},"component":{}}],["pinconf",{"_index":5681,"title":{},"name":{},"text":{"68":{},"70":{},"158":{},"160":{}},"component":{}}],["pincontrol",{"_index":5673,"title":{},"name":{},"text":{"68":{},"158":{}},"component":{}}],["pinctrl",{"_index":3279,"title":{},"name":{"52":{},"68":{},"142":{},"158":{}},"text":{"48":{},"49":{},"50":{},"52":{},"53":{},"57":{},"58":{},"59":{},"64":{},"65":{},"66":{},"68":{},"69":{},"70":{},"71":{},"73":{},"74":{},"136":{},"137":{},"138":{},"142":{},"143":{},"145":{},"148":{},"149":{},"154":{},"155":{},"156":{},"158":{},"159":{},"160":{},"161":{},"163":{},"164":{}},"component":{}}],["pinctrl@e2004070",{"_index":3934,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["pinctrl@e20100d4",{"_index":5664,"title":{},"name":{},"text":{"68":{},"158":{}},"component":{}}],["ping",{"_index":272,"title":{},"name":{},"text":{"4":{},"14":{},"15":{},"19":{},"60":{},"75":{},"90":{},"99":{},"101":{},"105":{},"150":{},"166":{}},"component":{}}],["pinhead",{"_index":6669,"title":{},"name":{},"text":{"141":{}},"component":{}}],["pinmux",{"_index":5680,"title":{},"name":{},"text":{"68":{},"70":{},"158":{},"160":{}},"component":{}}],["pio",{"_index":5721,"title":{},"name":{},"text":{"69":{},"159":{}},"component":{}}],["pip",{"_index":1077,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["pipe",{"_index":1818,"title":{},"name":{},"text":{"23":{},"81":{},"86":{},"111":{},"172":{},"177":{}},"component":{}}],["pipelin",{"_index":6384,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["pipt",{"_index":4808,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["pirat",{"_index":5405,"title":{},"name":{},"text":{"61":{},"151":{}},"component":{}}],["pk",{"_index":3197,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["pkt",{"_index":1767,"title":{},"name":{},"text":{"22":{},"23":{},"81":{},"86":{},"87":{},"109":{},"111":{},"172":{},"177":{},"178":{}},"component":{}}],["place",{"_index":2691,"title":{},"name":{},"text":{"46":{},"55":{},"56":{},"59":{},"62":{},"72":{},"80":{},"134":{},"146":{},"147":{},"149":{},"152":{},"162":{},"171":{}},"component":{}}],["plain",{"_index":2715,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["plaintext",{"_index":2489,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["plan",{"_index":1948,"title":{},"name":{},"text":{"27":{},"84":{},"112":{},"175":{}},"component":{}}],["platform",{"_index":670,"title":{"55-11":{},"55-27":{},"72-11":{},"72-27":{},"146-10":{},"146-26":{},"162-10":{},"162-26":{}},"name":{},"text":{"7":{},"17":{},"29":{},"46":{},"51":{},"55":{},"59":{},"62":{},"67":{},"72":{},"84":{},"85":{},"92":{},"106":{},"112":{},"117":{},"134":{},"139":{},"146":{},"149":{},"152":{},"157":{},"162":{},"165":{},"175":{},"176":{}},"component":{}}],["platform/vari",{"_index":4170,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["platform_count",{"_index":4289,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["pleas",{"_index":1161,"title":{},"name":{},"text":{"14":{},"28":{},"29":{},"38":{},"46":{},"54":{},"61":{},"62":{},"64":{},"74":{},"77":{},"79":{},"101":{},"115":{},"117":{},"125":{},"134":{},"144":{},"151":{},"152":{},"155":{},"164":{},"167":{},"170":{}},"component":{}}],["pltfm",{"_index":5198,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["plu",{"_index":2614,"title":{},"name":{},"text":{"46":{},"62":{},"84":{},"134":{},"152":{},"175":{}},"component":{}}],["plug",{"_index":5432,"title":{},"name":{},"text":{"61":{},"151":{}},"component":{}}],["pmc",{"_index":1938,"title":{"27-8":{},"112-8":{}},"name":{},"text":{"27":{},"112":{}},"component":{}}],["point",{"_index":749,"title":{"46-8":{},"55-31":{},"134-7":{},"146-30":{}},"name":{},"text":{"9":{},"14":{},"26":{},"46":{},"55":{},"59":{},"62":{},"72":{},"73":{},"96":{},"101":{},"112":{},"114":{},"134":{},"146":{},"149":{},"152":{},"162":{},"163":{}},"component":{}}],["pointer",{"_index":717,"title":{"9-7":{},"9-8":{},"9-9":{},"9-10":{},"96-6":{},"96-7":{},"96-8":{},"96-9":{}},"name":{},"text":{"9":{},"96":{}},"component":{}}],["polic",{"_index":719,"title":{"109":{},"111":{},"9-9":{},"9-10":{},"22-1":{},"22-2":{},"22-3":{},"22-4":{},"23-1":{},"96-8":{},"96-9":{},"109-1":{},"109-2":{},"109-3":{}},"name":{"22":{},"109":{}},"text":{"9":{},"17":{},"22":{},"23":{},"38":{},"84":{},"85":{},"86":{},"87":{},"96":{},"106":{},"109":{},"111":{},"125":{},"131":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["polici",{"_index":382,"title":{"9-12":{},"96-11":{}},"name":{},"text":{"4":{},"9":{},"59":{},"84":{},"85":{},"90":{},"96":{},"149":{},"175":{},"176":{}},"component":{}}],["poll",{"_index":426,"title":{},"name":{},"text":{"4":{},"74":{},"90":{},"164":{}},"component":{}}],["pool",{"_index":1829,"title":{},"name":{},"text":{"23":{},"59":{},"111":{},"149":{}},"component":{}}],["pop",{"_index":926,"title":{},"name":{},"text":{"12":{},"81":{},"83":{},"84":{},"85":{},"98":{},"172":{},"174":{},"175":{},"176":{}},"component":{}}],["port",{"_index":129,"title":{"99":{},"15-1":{},"22-2":{},"28-2":{},"109-1":{},"115-1":{}},"name":{},"text":{"2":{},"4":{},"6":{},"7":{},"8":{},"12":{},"15":{},"16":{},"17":{},"22":{},"26":{},"28":{},"29":{},"32":{},"33":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"46":{},"54":{},"55":{},"57":{},"59":{},"61":{},"70":{},"72":{},"73":{},"74":{},"77":{},"79":{},"80":{},"81":{},"82":{},"83":{},"84":{},"85":{},"86":{},"87":{},"88":{},"90":{},"92":{},"94":{},"95":{},"98":{},"99":{},"104":{},"106":{},"109":{},"114":{},"115":{},"117":{},"118":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"134":{},"141":{},"144":{},"146":{},"148":{},"149":{},"151":{},"160":{},"162":{},"163":{},"164":{},"167":{},"170":{},"171":{},"172":{},"173":{},"174":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["port(",{"_index":505,"title":{},"name":{},"text":{"4":{},"84":{},"90":{},"175":{}},"component":{}}],["port/egress",{"_index":941,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["port0",{"_index":584,"title":{},"name":{},"text":{"6":{},"46":{},"62":{},"94":{},"134":{},"152":{}},"component":{}}],["port1",{"_index":585,"title":{},"name":{},"text":{"6":{},"94":{}},"component":{}}],["port[00",{"_index":2108,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["port[02",{"_index":2157,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["port_id",{"_index":1405,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["port_no",{"_index":1407,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["portabl",{"_index":4445,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["portion",{"_index":550,"title":{},"name":{},"text":{"6":{},"55":{},"72":{},"94":{},"146":{},"162":{}},"component":{}}],["portnam",{"_index":1437,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["porttlv",{"_index":688,"title":{},"name":{},"text":{"7":{},"92":{}},"component":{}}],["pose",{"_index":4438,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["posit",{"_index":3730,"title":{},"name":{},"text":{"51":{},"55":{},"67":{},"72":{},"139":{},"141":{},"146":{},"157":{},"162":{}},"component":{}}],["possibl",{"_index":190,"title":{},"name":{},"text":{"4":{},"7":{},"12":{},"14":{},"15":{},"16":{},"18":{},"19":{},"22":{},"23":{},"26":{},"27":{},"28":{},"29":{},"35":{},"46":{},"47":{},"49":{},"50":{},"51":{},"55":{},"56":{},"58":{},"59":{},"62":{},"63":{},"65":{},"66":{},"67":{},"71":{},"72":{},"73":{},"80":{},"82":{},"83":{},"84":{},"85":{},"86":{},"87":{},"90":{},"92":{},"98":{},"99":{},"101":{},"103":{},"104":{},"105":{},"109":{},"111":{},"112":{},"114":{},"115":{},"117":{},"123":{},"134":{},"135":{},"136":{},"138":{},"139":{},"145":{},"146":{},"147":{},"149":{},"152":{},"153":{},"154":{},"156":{},"157":{},"161":{},"162":{},"163":{},"165":{},"171":{},"173":{},"174":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["post",{"_index":1193,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["postsi",{"_index":2414,"title":{},"name":{},"text":{"43":{},"130":{}},"component":{}}],["potenti",{"_index":4430,"title":{},"name":{},"text":{"55":{},"72":{},"84":{},"146":{},"162":{},"175":{}},"component":{}}],["power",{"_index":2822,"title":{},"name":{},"text":{"46":{},"50":{},"52":{},"55":{},"56":{},"59":{},"61":{},"62":{},"66":{},"72":{},"73":{},"74":{},"134":{},"138":{},"142":{},"146":{},"147":{},"149":{},"151":{},"152":{},"156":{},"162":{},"163":{},"164":{}},"component":{}}],["powercycl",{"_index":6710,"title":{},"name":{},"text":{"141":{}},"component":{}}],["pp",{"_index":5067,"title":{},"name":{},"text":{"59":{},"112":{},"149":{}},"component":{}}],["pport",{"_index":1670,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["pps0",{"_index":5068,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["pps1",{"_index":5071,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["pps2",{"_index":5074,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["pps_core",{"_index":4966,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["pq",{"_index":5923,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["practic",{"_index":2851,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["praxi",{"_index":4433,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["pre",{"_index":553,"title":{},"name":{},"text":{"6":{},"55":{},"72":{},"94":{},"141":{},"146":{},"162":{},"165":{}},"component":{}}],["prealloc",{"_index":4858,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["precaut",{"_index":6728,"title":{},"name":{},"text":{"165":{}},"component":{}}],["preced",{"_index":105,"title":{},"name":{},"text":{"2":{},"9":{},"84":{},"88":{},"96":{},"175":{}},"component":{}}],["precis",{"_index":1708,"title":{},"name":{},"text":{"17":{},"27":{},"43":{},"59":{},"106":{},"112":{},"130":{},"149":{}},"component":{}}],["precompos",{"_index":4570,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["predefin",{"_index":1144,"title":{},"name":{},"text":{"14":{},"46":{},"62":{},"101":{},"134":{},"152":{}},"component":{}}],["preemption",{"_index":754,"title":{"97":{},"10-1":{}},"name":{},"text":{"10":{},"17":{},"30":{},"36":{},"97":{},"106":{},"116":{},"124":{}},"component":{}}],["preemption_act",{"_index":795,"title":{},"name":{},"text":{"10":{},"97":{}},"component":{}}],["pref",{"_index":1754,"title":{},"name":{},"text":{"22":{},"23":{},"81":{},"84":{},"85":{},"86":{},"87":{},"109":{},"111":{},"172":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["prefer",{"_index":2733,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["preferred_lft",{"_index":268,"title":{},"name":{},"text":{"4":{},"15":{},"19":{},"90":{},"99":{},"105":{}},"component":{}}],["prefix",{"_index":4165,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["prep",{"_index":2926,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["prepar",{"_index":26,"title":{"55-48":{},"72-40":{},"146-47":{},"162-39":{}},"name":{},"text":{"1":{},"14":{},"55":{},"72":{},"74":{},"89":{},"101":{},"146":{},"162":{},"164":{},"165":{}},"component":{}}],["prepend",{"_index":1304,"title":{},"name":{},"text":{"14":{},"55":{},"72":{},"101":{},"146":{},"162":{}},"component":{}}],["prerequisit",{"_index":4281,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["presenc",{"_index":457,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["present",{"_index":453,"title":{},"name":{},"text":{"4":{},"14":{},"29":{},"49":{},"53":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"69":{},"71":{},"72":{},"73":{},"74":{},"75":{},"84":{},"90":{},"101":{},"117":{},"136":{},"143":{},"145":{},"146":{},"147":{},"148":{},"149":{},"150":{},"159":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"175":{}},"component":{}}],["preserv",{"_index":2735,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["press",{"_index":2877,"title":{},"name":{},"text":{"46":{},"54":{},"60":{},"62":{},"75":{},"79":{},"80":{},"134":{},"144":{},"150":{},"152":{},"166":{},"170":{},"171":{}},"component":{}}],["prevent",{"_index":624,"title":{},"name":{},"text":{"6":{},"7":{},"46":{},"55":{},"62":{},"72":{},"92":{},"94":{},"134":{},"146":{},"152":{},"162":{}},"component":{}}],["previou",{"_index":472,"title":{},"name":{},"text":{"4":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"50":{},"54":{},"62":{},"66":{},"79":{},"90":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"138":{},"141":{},"144":{},"152":{},"156":{},"165":{},"170":{}},"component":{}}],["previous",{"_index":2778,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["primari",{"_index":1673,"title":{},"name":{},"text":{"16":{},"50":{},"66":{},"74":{},"85":{},"104":{},"138":{},"156":{},"164":{},"176":{}},"component":{}}],["primarili",{"_index":2838,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["prime256v1",{"_index":4262,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["print",{"_index":703,"title":{},"name":{},"text":{"7":{},"14":{},"27":{},"29":{},"45":{},"46":{},"51":{},"57":{},"62":{},"67":{},"80":{},"92":{},"101":{},"112":{},"117":{},"133":{},"134":{},"139":{},"148":{},"152":{},"157":{},"165":{},"171":{}},"component":{}}],["printenv",{"_index":4764,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["printf(\"hello",{"_index":1270,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["printk",{"_index":5048,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["prio",{"_index":122,"title":{"84-10":{},"175-9":{}},"name":{},"text":{"2":{},"4":{},"15":{},"22":{},"23":{},"29":{},"81":{},"82":{},"84":{},"85":{},"86":{},"87":{},"88":{},"90":{},"99":{},"109":{},"111":{},"117":{},"172":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["prio/dpl",{"_index":81,"title":{"2-3":{},"2-4":{},"88-2":{},"88-3":{}},"name":{},"text":{"2":{},"88":{}},"component":{}}],["priomap",{"_index":1890,"title":{},"name":{},"text":{"26":{},"114":{}},"component":{}}],["prior",{"_index":4459,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{},"165":{}},"component":{}}],["prioriti",{"_index":102,"title":{"9-3":{},"15-8":{},"28-3":{},"96-2":{},"99-7":{},"115-2":{}},"name":{},"text":{"2":{},"4":{},"8":{},"9":{},"10":{},"12":{},"15":{},"17":{},"23":{},"26":{},"28":{},"29":{},"33":{},"34":{},"36":{},"37":{},"60":{},"75":{},"81":{},"83":{},"84":{},"85":{},"86":{},"88":{},"90":{},"95":{},"96":{},"97":{},"98":{},"99":{},"106":{},"111":{},"114":{},"115":{},"117":{},"120":{},"121":{},"122":{},"124":{},"150":{},"166":{},"172":{},"174":{},"175":{},"176":{},"177":{}},"component":{}}],["priority1",{"_index":1989,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["priority2",{"_index":1996,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["priv",{"_index":4250,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["privat",{"_index":3198,"title":{"165-6":{}},"name":{},"text":{"46":{},"55":{},"62":{},"72":{},"134":{},"146":{},"152":{},"162":{},"165":{}},"component":{}}],["pro",{"_index":4801,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["probabl",{"_index":843,"title":{},"name":{},"text":{"12":{},"59":{},"98":{},"149":{}},"component":{}}],["probe",{"_index":2841,"title":{},"name":{},"text":{"46":{},"62":{},"74":{},"80":{},"134":{},"152":{},"164":{},"171":{}},"component":{}}],["probe;mtd",{"_index":6183,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["probe;ubi",{"_index":6186,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["problem",{"_index":350,"title":{},"name":{},"text":{"4":{},"50":{},"55":{},"56":{},"66":{},"72":{},"90":{},"138":{},"146":{},"147":{},"156":{},"162":{}},"component":{}}],["proc/crypto",{"_index":2464,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["proc/interrupt",{"_index":3443,"title":{},"name":{},"text":{"49":{},"50":{},"136":{},"138":{}},"component":{}}],["proc/mtd",{"_index":4699,"title":{},"name":{},"text":{"58":{},"145":{}},"component":{}}],["proc/net/bonding/bond0",{"_index":418,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["proc/net/igmp",{"_index":476,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["proc/net/igmp6",{"_index":477,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["proce",{"_index":3639,"title":{},"name":{},"text":{"50":{},"54":{},"66":{},"79":{},"138":{},"144":{},"156":{},"170":{}},"component":{}}],["procedur",{"_index":1152,"title":{},"name":{},"text":{"14":{},"54":{},"55":{},"62":{},"72":{},"79":{},"101":{},"144":{},"146":{},"152":{},"162":{},"170":{}},"component":{}}],["process",{"_index":804,"title":{},"name":{},"text":{"10":{},"13":{},"14":{},"18":{},"46":{},"54":{},"55":{},"56":{},"59":{},"60":{},"62":{},"72":{},"74":{},"75":{},"79":{},"80":{},"84":{},"85":{},"97":{},"101":{},"102":{},"103":{},"134":{},"141":{},"144":{},"146":{},"147":{},"149":{},"150":{},"152":{},"162":{},"164":{},"165":{},"166":{},"170":{},"171":{},"175":{},"176":{}},"component":{}}],["processor",{"_index":4123,"title":{},"name":{},"text":{"55":{},"59":{},"72":{},"84":{},"146":{},"149":{},"162":{},"175":{}},"component":{}}],["procur",{"_index":4467,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["produc",{"_index":4543,"title":{},"name":{},"text":{"56":{},"72":{},"80":{},"85":{},"147":{},"162":{},"165":{},"171":{},"176":{}},"component":{}}],["product",{"_index":194,"title":{},"name":{},"text":{"4":{},"13":{},"15":{},"18":{},"38":{},"46":{},"51":{},"55":{},"57":{},"59":{},"61":{},"62":{},"67":{},"72":{},"73":{},"74":{},"77":{},"87":{},"90":{},"99":{},"102":{},"103":{},"125":{},"134":{},"139":{},"146":{},"148":{},"149":{},"151":{},"152":{},"157":{},"162":{},"163":{},"164":{},"165":{},"167":{},"178":{}},"component":{}}],["product=0",{"_index":4730,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["product=2",{"_index":4624,"title":{},"name":{},"text":{"57":{},"59":{},"73":{},"74":{},"148":{},"149":{},"163":{},"164":{}},"component":{}}],["profil",{"_index":2289,"title":{},"name":{},"text":{"35":{},"36":{},"123":{},"124":{}},"component":{}}],["profinet",{"_index":1855,"title":{"110":{},"24-1":{}},"name":{"24":{},"110":{}},"text":{"35":{},"123":{}},"component":{}}],["profit",{"_index":4469,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["program",{"_index":986,"title":{"46-49":{},"54-5":{},"54-6":{},"62-48":{},"79-6":{},"79-7":{},"79-8":{},"134-48":{},"144-4":{},"144-5":{},"152-47":{},"170-5":{},"170-6":{},"170-7":{}},"name":{},"text":{"13":{},"18":{},"46":{},"51":{},"54":{},"55":{},"62":{},"65":{},"67":{},"72":{},"79":{},"80":{},"102":{},"103":{},"112":{},"134":{},"139":{},"144":{},"146":{},"152":{},"154":{},"157":{},"162":{},"170":{},"171":{}},"component":{}}],["programm",{"_index":2771,"title":{"54-7":{},"144-6":{}},"name":{},"text":{"46":{},"51":{},"54":{},"55":{},"62":{},"67":{},"72":{},"79":{},"80":{},"134":{},"139":{},"144":{},"146":{},"152":{},"157":{},"162":{},"170":{},"171":{}},"component":{}}],["progress",{"_index":4085,"title":{},"name":{},"text":{"54":{},"79":{},"144":{},"170":{}},"component":{}}],["project",{"_index":1291,"title":{},"name":{},"text":{"14":{},"27":{},"46":{},"55":{},"61":{},"62":{},"72":{},"77":{},"101":{},"112":{},"134":{},"146":{},"151":{},"152":{},"162":{},"167":{}},"component":{}}],["project(helloworld",{"_index":1263,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["promiscu",{"_index":1397,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["promot",{"_index":4458,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["prompt",{"_index":1299,"title":{},"name":{},"text":{"14":{},"46":{},"62":{},"80":{},"101":{},"134":{},"152":{},"171":{}},"component":{}}],["proper",{"_index":2701,"title":{},"name":{},"text":{"46":{},"51":{},"54":{},"55":{},"56":{},"62":{},"67":{},"72":{},"79":{},"134":{},"139":{},"144":{},"146":{},"147":{},"152":{},"157":{},"162":{},"170":{}},"component":{}}],["properli",{"_index":2774,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{},"165":{}},"component":{}}],["properti",{"_index":2450,"title":{},"name":{},"text":{"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"55":{},"57":{},"58":{},"59":{},"60":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"142":{},"143":{},"145":{},"146":{},"148":{},"149":{},"150":{},"152":{},"153":{},"154":{},"155":{},"156":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"166":{}},"component":{}}],["propos",{"_index":6770,"title":{},"name":{},"text":{"165":{}},"component":{}}],["proprietari",{"_index":764,"title":{},"name":{},"text":{"10":{},"12":{},"97":{},"98":{}},"component":{}}],["protect",{"_index":544,"title":{"55-17":{},"55-22":{},"72-17":{},"72-22":{},"146-16":{},"146-21":{},"162-16":{},"162-21":{}},"name":{},"text":{"6":{},"46":{},"51":{},"55":{},"62":{},"67":{},"72":{},"94":{},"134":{},"139":{},"146":{},"152":{},"157":{},"162":{},"165":{}},"component":{}}],["protect/unprotect",{"_index":2850,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["protect_otp_writ",{"_index":3762,"title":{},"name":{},"text":{"51":{},"55":{},"67":{},"72":{},"139":{},"146":{},"157":{},"162":{}},"component":{}}],["protect_region_addr",{"_index":3761,"title":{},"name":{},"text":{"51":{},"55":{},"67":{},"72":{},"139":{},"146":{},"157":{},"162":{}},"component":{}}],["proto",{"_index":6402,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["protocol",{"_index":174,"title":{"4-8":{},"84-14":{},"84-19":{},"84-24":{},"90-7":{},"175-13":{},"175-18":{},"175-23":{}},"name":{},"text":{"4":{},"6":{},"12":{},"15":{},"16":{},"17":{},"22":{},"23":{},"27":{},"29":{},"30":{},"43":{},"46":{},"47":{},"49":{},"55":{},"59":{},"62":{},"63":{},"65":{},"81":{},"82":{},"84":{},"85":{},"86":{},"87":{},"90":{},"94":{},"98":{},"99":{},"104":{},"106":{},"109":{},"111":{},"112":{},"116":{},"117":{},"130":{},"134":{},"135":{},"136":{},"146":{},"149":{},"152":{},"153":{},"154":{},"172":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["prototyp",{"_index":4278,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["prove",{"_index":660,"title":{},"name":{},"text":{"6":{},"94":{}},"component":{}}],["provid",{"_index":373,"title":{},"name":{},"text":{"4":{},"10":{},"12":{},"13":{},"14":{},"17":{},"18":{},"30":{},"31":{},"32":{},"34":{},"37":{},"40":{},"43":{},"46":{},"50":{},"51":{},"53":{},"55":{},"56":{},"57":{},"58":{},"60":{},"62":{},"66":{},"67":{},"69":{},"70":{},"72":{},"75":{},"80":{},"84":{},"85":{},"90":{},"97":{},"98":{},"101":{},"102":{},"103":{},"106":{},"112":{},"116":{},"118":{},"119":{},"120":{},"121":{},"127":{},"130":{},"134":{},"138":{},"139":{},"143":{},"145":{},"146":{},"147":{},"148":{},"150":{},"151":{},"152":{},"156":{},"157":{},"159":{},"160":{},"162":{},"166":{},"171":{},"175":{},"176":{}},"component":{}}],["provis",{"_index":2764,"title":{"55-49":{},"72-41":{},"146-48":{},"162-40":{}},"name":{},"text":{"46":{},"51":{},"55":{},"62":{},"67":{},"72":{},"134":{},"139":{},"146":{},"152":{},"157":{},"162":{}},"component":{}}],["proxy_arp",{"_index":1421,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["proxy_arp_wifi",{"_index":1422,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["ps",{"_index":5361,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["psc",{"_index":1835,"title":{},"name":{},"text":{"23":{},"111":{}},"component":{}}],["psci",{"_index":3194,"title":{},"name":{},"text":{"46":{},"55":{},"56":{},"62":{},"72":{},"134":{},"146":{},"147":{},"152":{},"162":{}},"component":{}}],["psci/smccc",{"_index":4479,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["psfp",{"_index":718,"title":{"111":{},"9-8":{},"9-9":{},"22-4":{},"23-1":{},"38-7":{},"96-7":{},"96-8":{},"109-3":{},"125-6":{}},"name":{"23":{},"111":{}},"text":{"9":{},"17":{},"22":{},"23":{},"38":{},"96":{},"106":{},"109":{},"111":{},"125":{}},"component":{}}],["ptp",{"_index":1709,"title":{"112":{},"27-1":{},"27-7":{},"112-6":{}},"name":{"27":{},"112":{}},"text":{"17":{},"23":{},"26":{},"27":{},"30":{},"33":{},"35":{},"36":{},"43":{},"59":{},"77":{},"85":{},"106":{},"111":{},"112":{},"114":{},"116":{},"122":{},"123":{},"124":{},"130":{},"149":{},"167":{},"176":{}},"component":{}}],["ptp/timestamp",{"_index":2206,"title":{},"name":{},"text":{"31":{},"34":{},"36":{},"37":{},"119":{},"120":{},"121":{},"124":{}},"component":{}}],["ptp0",{"_index":5069,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["ptp1",{"_index":5072,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["ptp2",{"_index":5075,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["ptp4l",{"_index":1925,"title":{"27-2":{},"112-1":{}},"name":{},"text":{"27":{},"30":{},"112":{},"116":{}},"component":{}}],["ptp4l_indi",{"_index":2287,"title":{},"name":{},"text":{"35":{},"36":{},"123":{},"124":{}},"component":{}}],["ptp_dst_mac",{"_index":2000,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["ptpsync_0",{"_index":3858,"title":{},"name":{},"text":{"52":{},"68":{},"142":{},"158":{}},"component":{}}],["ptpsync_1",{"_index":3861,"title":{},"name":{},"text":{"52":{},"68":{},"142":{},"158":{}},"component":{}}],["ptpsync_2",{"_index":3864,"title":{},"name":{},"text":{"52":{},"68":{},"142":{},"158":{}},"component":{}}],["ptpsync_3",{"_index":3867,"title":{},"name":{},"text":{"52":{},"68":{},"142":{},"158":{}},"component":{}}],["ptpsync_4",{"_index":3869,"title":{},"name":{},"text":{"52":{},"68":{},"142":{},"158":{}},"component":{}}],["ptpsync_5",{"_index":3871,"title":{},"name":{},"text":{"52":{},"68":{},"142":{},"158":{}},"component":{}}],["ptpsync_6",{"_index":3874,"title":{},"name":{},"text":{"52":{},"68":{},"142":{},"158":{}},"component":{}}],["ptpsync_7",{"_index":3876,"title":{},"name":{},"text":{"52":{},"68":{},"142":{},"158":{}},"component":{}}],["pub",{"_index":4254,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["pub/sub",{"_index":1739,"title":{"107":{},"20-1":{}},"name":{},"text":{},"component":{}}],["public",{"_index":1310,"title":{},"name":{},"text":{"14":{},"46":{},"55":{},"62":{},"72":{},"101":{},"134":{},"146":{},"152":{},"162":{},"165":{}},"component":{}}],["publicli",{"_index":4108,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["publish",{"_index":4246,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["pull",{"_index":2681,"title":{},"name":{},"text":{"46":{},"50":{},"52":{},"66":{},"134":{},"138":{},"142":{},"156":{}},"component":{}}],["puls",{"_index":6600,"title":{},"name":{},"text":{"112":{}},"component":{}}],["purg",{"_index":4561,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["purpos",{"_index":2,"title":{},"name":{},"text":{"1":{},"9":{},"12":{},"14":{},"27":{},"46":{},"51":{},"54":{},"55":{},"62":{},"67":{},"72":{},"79":{},"80":{},"87":{},"89":{},"96":{},"98":{},"101":{},"112":{},"134":{},"139":{},"144":{},"146":{},"152":{},"157":{},"162":{},"165":{},"170":{},"171":{},"178":{}},"component":{}}],["push",{"_index":734,"title":{},"name":{},"text":{"9":{},"50":{},"52":{},"66":{},"81":{},"83":{},"84":{},"85":{},"96":{},"138":{},"142":{},"156":{},"172":{},"174":{},"175":{},"176":{}},"component":{}}],["push/pop",{"_index":6450,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["push_outer_tag",{"_index":960,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["put",{"_index":2617,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"141":{},"152":{},"165":{}},"component":{}}],["putti",{"_index":2788,"title":{},"name":{},"text":{"46":{},"54":{},"62":{},"79":{},"134":{},"144":{},"152":{},"170":{}},"component":{}}],["pvid",{"_index":299,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["python",{"_index":1090,"title":{},"name":{},"text":{"14":{},"45":{},"101":{},"133":{}},"component":{}}],["python3",{"_index":1076,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["q",{"_index":5350,"title":{},"name":{},"text":{"60":{},"75":{},"77":{},"150":{},"166":{},"167":{}},"component":{}}],["qdisc",{"_index":224,"title":{"85-3":{},"85-4":{},"176-3":{},"176-4":{}},"name":{},"text":{"4":{},"12":{},"15":{},"19":{},"22":{},"23":{},"26":{},"28":{},"36":{},"48":{},"81":{},"82":{},"84":{},"85":{},"86":{},"87":{},"90":{},"98":{},"99":{},"105":{},"109":{},"111":{},"114":{},"115":{},"124":{},"137":{},"172":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["qlen",{"_index":229,"title":{},"name":{},"text":{"4":{},"15":{},"19":{},"48":{},"90":{},"99":{},"105":{},"137":{}},"component":{}}],["qo",{"_index":70,"title":{"88":{},"2-1":{}},"name":{},"text":{"2":{},"15":{},"17":{},"30":{},"83":{},"85":{},"88":{},"99":{},"106":{},"116":{},"174":{},"176":{}},"component":{}}],["qos_ena",{"_index":2120,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["qos_val",{"_index":2121,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["qsgmii",{"_index":2205,"title":{"33-5":{},"122-4":{}},"name":{},"text":{"31":{},"34":{},"37":{},"78":{},"119":{},"120":{},"121":{},"169":{}},"component":{}}],["qsgmii/qusgmii",{"_index":6039,"title":{},"name":{},"text":{"78":{},"169":{}},"component":{}}],["qsgmii/sgmii",{"_index":6057,"title":{},"name":{},"text":{"78":{},"169":{}},"component":{}}],["qsgmii/sgmii/rgmii",{"_index":6059,"title":{},"name":{},"text":{"78":{},"169":{}},"component":{}}],["qspi",{"_index":2839,"title":{"53":{},"69":{},"143":{},"159":{},"53-1":{},"69-1":{}},"name":{"53":{},"69":{},"143":{},"159":{}},"text":{"46":{},"53":{},"62":{},"69":{},"134":{},"143":{},"152":{},"159":{}},"component":{}}],["qspi/nor",{"_index":2644,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["qspi0",{"_index":2619,"title":{},"name":{},"text":{"46":{},"53":{},"55":{},"61":{},"62":{},"69":{},"77":{},"134":{},"143":{},"146":{},"151":{},"152":{},"159":{},"167":{}},"component":{}}],["qspi1",{"_index":3905,"title":{},"name":{},"text":{"52":{},"53":{},"68":{},"69":{},"142":{},"143":{},"158":{},"159":{}},"component":{}}],["qspi2",{"_index":3923,"title":{},"name":{},"text":{"52":{},"53":{},"69":{},"142":{},"143":{},"159":{}},"component":{}}],["qspi@e0834000",{"_index":3119,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["qspi_bas",{"_index":3982,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["qspi_mmap",{"_index":3983,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["qspix",{"_index":3990,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["quad",{"_index":5424,"title":{},"name":{},"text":{"61":{},"151":{}},"component":{}}],["qualiti",{"_index":91,"title":{},"name":{},"text":{"2":{},"30":{},"31":{},"33":{},"34":{},"35":{},"37":{},"116":{},"119":{},"120":{},"121":{},"122":{},"123":{}},"component":{}}],["quanta",{"_index":1889,"title":{},"name":{},"text":{"26":{},"114":{}},"component":{}}],["quantum",{"_index":1892,"title":{},"name":{},"text":{"26":{},"114":{}},"component":{}}],["quattro",{"_index":6053,"title":{},"name":{},"text":{"78":{},"169":{}},"component":{}}],["queri",{"_index":820,"title":{},"name":{},"text":{"10":{},"29":{},"56":{},"97":{},"117":{},"147":{}},"component":{}}],["querier",{"_index":462,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["queu",{"_index":709,"title":{},"name":{},"text":{"8":{},"85":{},"176":{}},"component":{}}],["queue",{"_index":438,"title":{"8-3":{},"9-11":{},"95-2":{},"96-10":{}},"name":{},"text":{"4":{},"8":{},"9":{},"10":{},"26":{},"28":{},"85":{},"90":{},"95":{},"96":{},"97":{},"114":{},"115":{},"176":{}},"component":{}}],["quirk",{"_index":5114,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["quota",{"_index":5634,"title":{},"name":{},"text":{"66":{},"74":{},"156":{},"164":{}},"component":{}}],["r",{"_index":857,"title":{},"name":{},"text":{"12":{},"49":{},"53":{},"55":{},"56":{},"60":{},"67":{},"69":{},"72":{},"74":{},"75":{},"80":{},"98":{},"136":{},"143":{},"146":{},"147":{},"150":{},"157":{},"159":{},"162":{},"164":{},"166":{},"171":{}},"component":{}}],["r8192",{"_index":4826,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["r_tag",{"_index":889,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["ram",{"_index":3024,"title":{"55-46":{},"72-38":{},"146-45":{},"162-37":{}},"name":{},"text":{"46":{},"55":{},"61":{},"62":{},"72":{},"134":{},"146":{},"151":{},"152":{},"162":{}},"component":{}}],["ramboot",{"_index":2914,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["ramboot=bootm",{"_index":2920,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["ramboot=run",{"_index":6192,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["ramdisk",{"_index":11,"title":{},"name":{},"text":{"1":{},"46":{},"55":{},"59":{},"62":{},"72":{},"89":{},"134":{},"146":{},"149":{},"152":{},"162":{},"165":{}},"component":{}}],["ramusag",{"_index":4183,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["random",{"_index":1785,"title":{},"name":{},"text":{"22":{},"23":{},"51":{},"55":{},"59":{},"67":{},"72":{},"81":{},"86":{},"87":{},"109":{},"111":{},"139":{},"146":{},"149":{},"157":{},"162":{},"172":{},"177":{},"178":{}},"component":{}}],["randomli",{"_index":2867,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"72":{},"134":{},"146":{},"152":{},"162":{}},"component":{}}],["rang",{"_index":94,"title":{},"name":{},"text":{"2":{},"7":{},"10":{},"47":{},"52":{},"55":{},"59":{},"63":{},"68":{},"70":{},"72":{},"74":{},"92":{},"97":{},"135":{},"142":{},"146":{},"149":{},"153":{},"158":{},"160":{},"162":{},"164":{}},"component":{}}],["rap",{"_index":574,"title":{},"name":{},"text":{"6":{},"94":{}},"component":{}}],["rapid",{"_index":483,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["rare",{"_index":4436,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["rarp",{"_index":6292,"title":{},"name":{},"text":{"82":{},"84":{},"87":{},"173":{},"175":{},"178":{}},"component":{}}],["raspberri",{"_index":46,"title":{"141":{},"40-5":{},"43-8":{},"127-4":{},"130-7":{},"131-7":{},"141-4":{},"141-5":{},"141-8":{}},"name":{},"text":{"1":{},"43":{},"61":{},"89":{},"130":{},"141":{},"151":{}},"component":{}}],["rate",{"_index":395,"title":{},"name":{},"text":{"4":{},"22":{},"23":{},"28":{},"33":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"46":{},"48":{},"50":{},"53":{},"62":{},"64":{},"66":{},"69":{},"74":{},"80":{},"84":{},"85":{},"86":{},"87":{},"90":{},"109":{},"111":{},"115":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"134":{},"137":{},"138":{},"143":{},"152":{},"155":{},"156":{},"159":{},"164":{},"171":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["raw",{"_index":1953,"title":{},"name":{},"text":{"27":{},"29":{},"46":{},"51":{},"54":{},"59":{},"62":{},"67":{},"79":{},"80":{},"112":{},"117":{},"134":{},"139":{},"144":{},"149":{},"152":{},"157":{},"165":{},"170":{},"171":{}},"component":{}}],["rc",{"_index":1702,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["rc_mode",{"_index":1682,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["rcu",{"_index":4850,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["rcu_fanout_leaf=16",{"_index":4856,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["rcu_sch",{"_index":2338,"title":{},"name":{},"text":{"37":{},"120":{}},"component":{}}],["rd",{"_index":2800,"title":{},"name":{},"text":{"46":{},"53":{},"62":{},"69":{},"134":{},"143":{},"152":{},"159":{}},"component":{}}],["rdi",{"_index":677,"title":{},"name":{},"text":{"7":{},"92":{}},"component":{}}],["re",{"_index":2442,"title":{},"name":{},"text":{"45":{},"50":{},"56":{},"66":{},"133":{},"138":{},"147":{},"156":{}},"component":{}}],["reach",{"_index":1379,"title":{},"name":{},"text":{"15":{},"18":{},"28":{},"32":{},"46":{},"62":{},"99":{},"103":{},"115":{},"118":{},"134":{},"152":{}},"component":{}}],["read",{"_index":817,"title":{"59-11":{},"59-12":{},"149-10":{},"149-11":{}},"name":{},"text":{"10":{},"13":{},"27":{},"29":{},"41":{},"45":{},"46":{},"49":{},"50":{},"51":{},"52":{},"53":{},"55":{},"56":{},"58":{},"59":{},"62":{},"66":{},"67":{},"68":{},"69":{},"72":{},"73":{},"74":{},"80":{},"97":{},"102":{},"112":{},"117":{},"128":{},"133":{},"134":{},"136":{},"138":{},"139":{},"142":{},"143":{},"145":{},"146":{},"147":{},"149":{},"152":{},"156":{},"157":{},"158":{},"159":{},"162":{},"163":{},"164":{},"165":{},"171":{}},"component":{}}],["read/writ",{"_index":2688,"title":{},"name":{},"text":{"46":{},"49":{},"51":{},"55":{},"62":{},"67":{},"134":{},"136":{},"139":{},"146":{},"152":{},"157":{}},"component":{}}],["readabl",{"_index":2732,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["reader",{"_index":962,"title":{"13-2":{},"102-2":{}},"name":{},"text":{"141":{}},"component":{}}],["readi",{"_index":663,"title":{},"name":{},"text":{"6":{},"14":{},"36":{},"48":{},"80":{},"94":{},"101":{},"124":{},"137":{},"165":{},"171":{}},"component":{}}],["readm",{"_index":964,"title":{"13":{},"102":{}},"name":{},"text":{"141":{}},"component":{}}],["readme.adoc",{"_index":2387,"title":{},"name":{},"text":{"40":{},"127":{}},"component":{}}],["real",{"_index":4446,"title":{},"name":{},"text":{"55":{},"57":{},"72":{},"85":{},"146":{},"148":{},"162":{},"176":{}},"component":{}}],["realli",{"_index":6464,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["realm",{"_index":6726,"title":{},"name":{},"text":{"165":{}},"component":{}}],["realtim",{"_index":5360,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["realtime=no",{"_index":5396,"title":{},"name":{},"text":{"60":{},"150":{}},"component":{}}],["realtime=y",{"_index":5964,"title":{},"name":{},"text":{"75":{},"166":{}},"component":{}}],["reason",{"_index":3115,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"72":{},"80":{},"85":{},"101":{},"134":{},"146":{},"152":{},"162":{},"171":{},"176":{}},"component":{}}],["reboot",{"_index":1336,"title":{"60-11":{},"60-12":{},"150-10":{},"150-11":{}},"name":{},"text":{"15":{},"19":{},"46":{},"60":{},"62":{},"75":{},"99":{},"105":{},"134":{},"150":{},"152":{},"166":{}},"component":{}}],["rebuild",{"_index":1230,"title":{},"name":{},"text":{"14":{},"55":{},"72":{},"101":{},"146":{},"162":{}},"component":{}}],["rebuilt",{"_index":1228,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["receiv",{"_index":291,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"10":{},"12":{},"15":{},"16":{},"19":{},"27":{},"30":{},"33":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"46":{},"47":{},"48":{},"49":{},"55":{},"62":{},"63":{},"64":{},"65":{},"72":{},"85":{},"86":{},"87":{},"90":{},"92":{},"94":{},"97":{},"98":{},"99":{},"104":{},"105":{},"112":{},"116":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"134":{},"135":{},"136":{},"137":{},"146":{},"152":{},"153":{},"154":{},"155":{},"162":{},"176":{},"177":{},"178":{}},"component":{}}],["recept",{"_index":674,"title":{},"name":{},"text":{"7":{},"92":{}},"component":{}}],["reclassifi",{"_index":1760,"title":{},"name":{},"text":{"22":{},"23":{},"87":{},"109":{},"111":{},"178":{}},"component":{}}],["reco_a",{"_index":3881,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["reco_b",{"_index":3853,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["recogn",{"_index":198,"title":{},"name":{},"text":{"4":{},"46":{},"51":{},"62":{},"67":{},"90":{},"134":{},"139":{},"152":{},"157":{}},"component":{}}],["recogniz",{"_index":6151,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["recommend",{"_index":634,"title":{},"name":{},"text":{"6":{},"14":{},"27":{},"38":{},"80":{},"94":{},"101":{},"112":{},"125":{},"171":{}},"component":{}}],["reconfigur",{"_index":4414,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["record",{"_index":3591,"title":{},"name":{},"text":{"50":{},"51":{},"56":{},"58":{},"66":{},"67":{},"138":{},"139":{},"145":{},"147":{},"156":{},"157":{}},"component":{}}],["recover",{"_index":3598,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["recoveri",{"_index":493,"title":{},"name":{},"text":{"4":{},"12":{},"46":{},"49":{},"62":{},"66":{},"90":{},"98":{},"134":{},"136":{},"152":{},"156":{}},"component":{}}],["recurs",{"_index":6472,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["red",{"_index":4070,"title":{},"name":{},"text":{"54":{},"77":{},"79":{},"144":{},"167":{},"170":{}},"component":{}}],["red_frames_count",{"_index":1827,"title":{},"name":{},"text":{"23":{},"111":{}},"component":{}}],["redirect",{"_index":641,"title":{},"name":{},"text":{"6":{},"87":{},"94":{},"178":{}},"component":{}}],["redistribut",{"_index":4450,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["reduc",{"_index":440,"title":{},"name":{},"text":{"4":{},"12":{},"90":{},"98":{},"165":{}},"component":{}}],["redund",{"_index":374,"title":{},"name":{},"text":{"4":{},"16":{},"17":{},"46":{},"62":{},"77":{},"90":{},"104":{},"106":{},"134":{},"152":{},"167":{}},"component":{}}],["ref",{"_index":1763,"title":{},"name":{},"text":{"22":{},"23":{},"74":{},"81":{},"86":{},"87":{},"109":{},"111":{},"112":{},"164":{},"172":{},"177":{},"178":{}},"component":{}}],["ref_cnt",{"_index":1841,"title":{},"name":{},"text":{"23":{},"111":{}},"component":{}}],["refer",{"_index":28,"title":{"15-11":{},"45-7":{},"47-5":{},"48-5":{},"49-5":{},"50-5":{},"51-6":{},"52-5":{},"53-5":{},"54-2":{},"57-8":{},"57-12":{},"58-5":{},"60-5":{},"63-5":{},"64-5":{},"65-5":{},"66-5":{},"67-6":{},"68-5":{},"69-5":{},"70-5":{},"71-5":{},"73-5":{},"74-5":{},"75-5":{},"79-2":{},"80-9":{},"85-19":{},"99-10":{},"133-6":{},"135-4":{},"136-4":{},"137-4":{},"138-4":{},"139-5":{},"142-4":{},"143-4":{},"144-1":{},"145-4":{},"148-7":{},"148-11":{},"150-4":{},"153-4":{},"154-4":{},"155-4":{},"156-4":{},"157-5":{},"158-4":{},"159-4":{},"160-4":{},"161-4":{},"163-4":{},"164-4":{},"166-4":{},"170-1":{},"171-8":{},"176-19":{}},"name":{},"text":{"1":{},"9":{},"14":{},"26":{},"47":{},"52":{},"53":{},"54":{},"55":{},"56":{},"61":{},"63":{},"64":{},"66":{},"68":{},"69":{},"70":{},"72":{},"76":{},"77":{},"79":{},"80":{},"84":{},"89":{},"96":{},"101":{},"114":{},"135":{},"142":{},"143":{},"144":{},"146":{},"147":{},"151":{},"153":{},"155":{},"156":{},"158":{},"159":{},"160":{},"162":{},"165":{},"167":{},"168":{},"170":{},"171":{},"175":{}},"component":{}}],["referenc",{"_index":2697,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"72":{},"134":{},"146":{},"152":{},"162":{}},"component":{}}],["refus",{"_index":4361,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["reg",{"_index":2449,"title":{},"name":{},"text":{"45":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"55":{},"57":{},"58":{},"59":{},"60":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"80":{},"133":{},"135":{},"136":{},"137":{},"138":{},"139":{},"142":{},"143":{},"145":{},"146":{},"148":{},"149":{},"150":{},"153":{},"154":{},"155":{},"156":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"166":{},"171":{}},"component":{}}],["regard",{"_index":807,"title":{},"name":{},"text":{"10":{},"84":{},"97":{},"175":{}},"component":{}}],["regardless",{"_index":4102,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["region",{"_index":3231,"title":{"55-35":{},"72-31":{},"146-34":{},"162-30":{}},"name":{},"text":{"47":{},"51":{},"53":{},"55":{},"58":{},"63":{},"67":{},"69":{},"72":{},"135":{},"139":{},"143":{},"145":{},"146":{},"153":{},"157":{},"159":{},"162":{}},"component":{}}],["regist",{"_index":2181,"title":{},"name":{},"text":{"30":{},"32":{},"45":{},"46":{},"47":{},"49":{},"50":{},"52":{},"53":{},"55":{},"56":{},"58":{},"59":{},"62":{},"63":{},"65":{},"66":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"116":{},"118":{},"133":{},"134":{},"135":{},"136":{},"138":{},"141":{},"142":{},"143":{},"145":{},"146":{},"147":{},"149":{},"152":{},"153":{},"154":{},"156":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{}},"component":{}}],["regular",{"_index":1158,"title":{},"name":{},"text":{"14":{},"64":{},"101":{},"155":{}},"component":{}}],["rel",{"_index":985,"title":{},"name":{},"text":{"13":{},"18":{},"26":{},"85":{},"101":{},"102":{},"103":{},"114":{},"176":{}},"component":{}}],["relat",{"_index":464,"title":{},"name":{},"text":{"4":{},"7":{},"14":{},"26":{},"32":{},"46":{},"55":{},"56":{},"57":{},"62":{},"72":{},"90":{},"92":{},"101":{},"114":{},"118":{},"134":{},"146":{},"147":{},"148":{},"152":{},"162":{}},"component":{}}],["relationship",{"_index":5967,"title":{},"name":{},"text":{"76":{},"168":{}},"component":{}}],["relay",{"_index":1945,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["releas",{"_index":802,"title":{"44":{},"132":{},"32-7":{},"55-9":{},"72-9":{},"118-6":{},"146-8":{},"162-8":{}},"name":{},"text":{"10":{},"18":{},"28":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{},"46":{},"55":{},"62":{},"72":{},"80":{},"81":{},"82":{},"87":{},"97":{},"103":{},"115":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"132":{},"134":{},"141":{},"146":{},"152":{},"162":{},"165":{},"171":{},"172":{},"173":{},"178":{}},"component":{}}],["release.fip.gz",{"_index":5474,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["release.html",{"_index":5472,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["release_adv",{"_index":793,"title":{},"name":{},"text":{"10":{},"97":{}},"component":{}}],["relev",{"_index":116,"title":{},"name":{},"text":{"2":{},"46":{},"61":{},"62":{},"77":{},"80":{},"85":{},"88":{},"134":{},"151":{},"152":{},"167":{},"171":{},"176":{}},"component":{}}],["reliabl",{"_index":840,"title":{},"name":{},"text":{"12":{},"17":{},"29":{},"30":{},"98":{},"106":{},"116":{},"117":{}},"component":{}}],["reloc",{"_index":1004,"title":{"14-12":{},"101-11":{}},"name":{},"text":{"14":{},"55":{},"72":{},"101":{},"146":{},"162":{}},"component":{}}],["remain",{"_index":3596,"title":{},"name":{},"text":{"50":{},"55":{},"66":{},"72":{},"138":{},"146":{},"156":{},"162":{}},"component":{}}],["remaind",{"_index":6383,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["remap",{"_index":6103,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["rememb",{"_index":449,"title":{},"name":{},"text":{"4":{},"46":{},"62":{},"74":{},"90":{},"134":{},"152":{},"164":{}},"component":{}}],["remov",{"_index":136,"title":{"7-5":{},"38-4":{},"92-4":{},"125-3":{}},"name":{},"text":{"2":{},"4":{},"7":{},"12":{},"14":{},"23":{},"50":{},"52":{},"55":{},"66":{},"72":{},"74":{},"85":{},"88":{},"90":{},"92":{},"98":{},"101":{},"111":{},"138":{},"141":{},"142":{},"146":{},"156":{},"162":{},"164":{},"176":{}},"component":{}}],["renam",{"_index":6210,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["repair",{"_index":5378,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["repeat",{"_index":1924,"title":{},"name":{},"text":{"26":{},"85":{},"114":{},"176":{}},"component":{}}],["replac",{"_index":951,"title":{},"name":{},"text":{"12":{},"26":{},"28":{},"45":{},"51":{},"55":{},"67":{},"72":{},"84":{},"85":{},"98":{},"114":{},"115":{},"133":{},"139":{},"146":{},"157":{},"162":{},"165":{},"175":{},"176":{}},"component":{}}],["repli",{"_index":6300,"title":{},"name":{},"text":{"82":{},"87":{},"173":{},"178":{}},"component":{}}],["replic",{"_index":838,"title":{},"name":{},"text":{"12":{},"17":{},"29":{},"98":{},"106":{},"117":{}},"component":{}}],["replica",{"_index":844,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["repo",{"_index":1214,"title":{},"name":{},"text":{"14":{},"101":{},"141":{}},"component":{}}],["report",{"_index":1368,"title":{},"name":{},"text":{"15":{},"35":{},"36":{},"51":{},"55":{},"72":{},"99":{},"123":{},"124":{},"139":{},"146":{},"162":{}},"component":{}}],["repositori",{"_index":1255,"title":{"18-3":{},"103-3":{}},"name":{},"text":{"14":{},"40":{},"41":{},"42":{},"43":{},"55":{},"72":{},"101":{},"127":{},"128":{},"129":{},"130":{},"131":{},"146":{},"162":{}},"component":{}}],["repres",{"_index":1335,"title":{},"name":{},"text":{"15":{},"16":{},"27":{},"46":{},"51":{},"62":{},"67":{},"74":{},"85":{},"99":{},"104":{},"112":{},"134":{},"139":{},"152":{},"157":{},"164":{},"165":{},"176":{}},"component":{}}],["reproduc",{"_index":4455,"title":{},"name":{},"text":{"55":{},"56":{},"72":{},"146":{},"147":{},"162":{}},"component":{}}],["req",{"_index":6737,"title":{},"name":{},"text":{"165":{}},"component":{}}],["request",{"_index":799,"title":{},"name":{},"text":{"10":{},"27":{},"46":{},"51":{},"55":{},"62":{},"67":{},"68":{},"72":{},"82":{},"84":{},"87":{},"97":{},"112":{},"134":{},"139":{},"146":{},"152":{},"157":{},"158":{},"162":{},"173":{},"175":{},"178":{}},"component":{}}],["requeu",{"_index":1770,"title":{},"name":{},"text":{"22":{},"23":{},"81":{},"86":{},"87":{},"109":{},"111":{},"172":{},"177":{},"178":{}},"component":{}}],["requir",{"_index":8,"title":{},"name":{},"text":{"1":{},"6":{},"12":{},"14":{},"15":{},"16":{},"18":{},"22":{},"27":{},"28":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"71":{},"72":{},"73":{},"74":{},"75":{},"79":{},"81":{},"84":{},"86":{},"89":{},"94":{},"98":{},"99":{},"101":{},"103":{},"104":{},"109":{},"112":{},"115":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"140":{},"142":{},"143":{},"144":{},"145":{},"146":{},"147":{},"148":{},"149":{},"150":{},"152":{},"153":{},"154":{},"155":{},"156":{},"157":{},"158":{},"159":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"170":{},"172":{},"175":{},"177":{}},"component":{}}],["require_cnt_di",{"_index":2072,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["res=1",{"_index":4947,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["rescan",{"_index":2815,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["rescu",{"_index":6482,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["reserv",{"_index":2627,"title":{},"name":{},"text":{"46":{},"51":{},"52":{},"55":{},"59":{},"62":{},"67":{},"68":{},"72":{},"134":{},"139":{},"142":{},"146":{},"149":{},"152":{},"157":{},"158":{},"162":{}},"component":{}}],["reset",{"_index":940,"title":{},"name":{},"text":{"12":{},"29":{},"46":{},"50":{},"52":{},"54":{},"55":{},"60":{},"62":{},"68":{},"70":{},"72":{},"73":{},"75":{},"79":{},"80":{},"98":{},"117":{},"134":{},"138":{},"142":{},"144":{},"146":{},"150":{},"152":{},"158":{},"160":{},"162":{},"163":{},"166":{},"170":{},"171":{}},"component":{}}],["reset_boot_bus_width",{"_index":2825,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["reset_tim",{"_index":911,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["resetmsec",{"_index":932,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["resid",{"_index":2863,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"72":{},"134":{},"146":{},"152":{},"162":{}},"component":{}}],["resiz",{"_index":2828,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["resolut",{"_index":614,"title":{},"name":{},"text":{"6":{},"23":{},"59":{},"84":{},"94":{},"111":{},"149":{},"175":{}},"component":{}}],["resoruc",{"_index":2312,"title":{},"name":{},"text":{"36":{},"124":{}},"component":{}}],["resourc",{"_index":733,"title":{"45-2":{},"47-2":{},"48-2":{},"49-2":{},"50-2":{},"51-2":{},"52-2":{},"53-2":{},"56-2":{},"57-2":{},"58-2":{},"59-2":{},"60-2":{},"63-2":{},"64-2":{},"65-2":{},"66-2":{},"67-2":{},"68-2":{},"69-2":{},"70-2":{},"71-2":{},"73-2":{},"74-2":{},"75-2":{},"133-1":{},"135-1":{},"136-1":{},"137-1":{},"138-1":{},"139-1":{},"141-1":{},"142-1":{},"143-1":{},"145-1":{},"147-1":{},"148-1":{},"149-1":{},"150-1":{},"153-1":{},"154-1":{},"155-1":{},"156-1":{},"157-1":{},"158-1":{},"159-1":{},"160-1":{},"161-1":{},"163-1":{},"164-1":{},"166-1":{}},"name":{},"text":{"9":{},"45":{},"56":{},"61":{},"77":{},"96":{},"133":{},"147":{},"151":{},"167":{}},"component":{}}],["respect",{"_index":3946,"title":{},"name":{},"text":{"52":{},"53":{},"68":{},"69":{},"101":{},"142":{},"143":{},"158":{},"159":{}},"component":{}}],["respond",{"_index":4417,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["respons",{"_index":494,"title":{},"name":{},"text":{"4":{},"16":{},"27":{},"55":{},"72":{},"90":{},"104":{},"112":{},"140":{},"146":{},"162":{},"165":{}},"component":{}}],["rest",{"_index":1916,"title":{},"name":{},"text":{"26":{},"51":{},"85":{},"114":{},"139":{},"176":{}},"component":{}}],["restart",{"_index":1963,"title":{},"name":{},"text":{"27":{},"35":{},"36":{},"80":{},"112":{},"123":{},"124":{},"171":{}},"component":{}}],["restor",{"_index":661,"title":{"144":{},"170":{},"54-1":{},"54-3":{},"79-1":{},"79-3":{},"144-2":{},"170-2":{}},"name":{"54":{},"79":{},"144":{},"170":{}},"text":{"6":{},"46":{},"54":{},"62":{},"79":{},"94":{},"134":{},"144":{},"152":{},"170":{}},"component":{}}],["restrict",{"_index":948,"title":{},"name":{},"text":{"12":{},"55":{},"59":{},"72":{},"98":{},"146":{},"149":{},"162":{}},"component":{}}],["result",{"_index":859,"title":{},"name":{},"text":{"12":{},"14":{},"18":{},"46":{},"55":{},"56":{},"62":{},"72":{},"80":{},"84":{},"98":{},"101":{},"103":{},"134":{},"146":{},"147":{},"152":{},"162":{},"171":{},"175":{}},"component":{}}],["resum",{"_index":803,"title":{},"name":{},"text":{"10":{},"97":{}},"component":{}}],["retain",{"_index":4453,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["retest",{"_index":1722,"title":{},"name":{},"text":{"18":{},"103":{}},"component":{}}],["retri",{"_index":5379,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["retriev",{"_index":5939,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["return",{"_index":822,"title":{},"name":{},"text":{"10":{},"12":{},"14":{},"46":{},"51":{},"56":{},"62":{},"67":{},"84":{},"85":{},"97":{},"98":{},"101":{},"134":{},"139":{},"147":{},"152":{},"157":{},"175":{},"176":{}},"component":{}}],["rev",{"_index":2341,"title":{"38-4":{},"125-3":{}},"name":{},"text":{"38":{},"59":{},"65":{},"125":{},"149":{},"154":{}},"component":{}}],["reva",{"_index":2359,"title":{},"name":{},"text":{"38":{},"125":{}},"component":{}}],["revalid",{"_index":1723,"title":{},"name":{},"text":{"18":{},"103":{}},"component":{}}],["reveal",{"_index":4290,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["revers",{"_index":2397,"title":{},"name":{},"text":{"41":{},"42":{},"55":{},"72":{},"128":{},"129":{},"146":{},"162":{}},"component":{}}],["revert",{"_index":529,"title":{"6-12":{},"94-11":{}},"name":{},"text":{"6":{},"94":{}},"component":{}}],["review",{"_index":4431,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["revis",{"_index":2344,"title":{},"name":{},"text":{"38":{},"46":{},"51":{},"55":{},"59":{},"67":{},"125":{},"134":{},"139":{},"146":{},"149":{},"157":{}},"component":{}}],["revoc",{"_index":4094,"title":{"55-22":{},"72-22":{},"146-21":{},"162-21":{}},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["rewrit",{"_index":6272,"title":{"172":{},"81-1":{}},"name":{},"text":{"83":{},"84":{},"174":{},"175":{}},"component":{}}],["rfc",{"_index":1837,"title":{},"name":{},"text":{"23":{},"111":{}},"component":{}}],["rgmii",{"_index":2297,"title":{"36-5":{},"124-4":{}},"name":{},"text":{"36":{},"77":{},"78":{},"124":{},"167":{},"169":{}},"component":{}}],["rgmii/gmii",{"_index":2326,"title":{},"name":{},"text":{"36":{},"78":{},"124":{},"169":{}},"component":{}}],["rgmii/rmii",{"_index":6045,"title":{},"name":{},"text":{"78":{},"169":{}},"component":{}}],["rich",{"_index":3998,"title":{},"name":{},"text":{"53":{},"58":{},"69":{},"143":{},"145":{},"159":{}},"component":{}}],["right",{"_index":3763,"title":{},"name":{},"text":{"51":{},"67":{},"74":{},"139":{},"157":{},"164":{}},"component":{}}],["rightmost",{"_index":6344,"title":{},"name":{},"text":{"83":{},"174":{}},"component":{}}],["ring",{"_index":526,"title":{"6-10":{},"6-17":{},"6-22":{},"94-9":{},"94-16":{},"94-21":{}},"name":{},"text":{"6":{},"16":{},"33":{},"34":{},"37":{},"94":{},"104":{},"120":{},"121":{},"122":{}},"component":{}}],["ring_nr",{"_index":1669,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["ring_rol",{"_index":1671,"title":{},"name":{},"text":{"16":{},"33":{},"34":{},"37":{},"104":{},"120":{},"121":{},"122":{}},"component":{}}],["ring_stat",{"_index":1678,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["rise",{"_index":6599,"title":{},"name":{},"text":{"112":{}},"component":{}}],["risk",{"_index":4300,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["rmon",{"_index":1478,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rng",{"_index":4135,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["rngd",{"_index":5273,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["ro",{"_index":2936,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["roadmap",{"_index":2194,"title":{},"name":{},"text":{"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{}},"component":{}}],["rodata",{"_index":4845,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["rodolfo",{"_index":4973,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["rogu",{"_index":6771,"title":{},"name":{},"text":{"165":{}},"component":{}}],["roguepacket",{"_index":935,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["role",{"_index":589,"title":{},"name":{},"text":{"6":{},"16":{},"74":{},"94":{},"104":{},"164":{}},"component":{}}],["roll",{"_index":4291,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["rollback",{"_index":3731,"title":{"55-17":{},"55-22":{},"72-17":{},"72-22":{},"146-16":{},"146-21":{},"162-16":{},"162-21":{}},"name":{},"text":{"51":{},"55":{},"67":{},"72":{},"139":{},"146":{},"157":{},"162":{}},"component":{}}],["rom",{"_index":2603,"title":{},"name":{},"text":{"46":{},"51":{},"55":{},"62":{},"67":{},"72":{},"134":{},"139":{},"146":{},"152":{},"157":{},"162":{}},"component":{}}],["root",{"_index":1017,"title":{},"name":{},"text":{"14":{},"26":{},"28":{},"32":{},"43":{},"46":{},"50":{},"52":{},"53":{},"55":{},"56":{},"58":{},"59":{},"60":{},"62":{},"66":{},"67":{},"68":{},"69":{},"72":{},"73":{},"74":{},"75":{},"80":{},"85":{},"101":{},"114":{},"115":{},"118":{},"130":{},"131":{},"134":{},"138":{},"141":{},"142":{},"143":{},"145":{},"146":{},"147":{},"149":{},"150":{},"152":{},"156":{},"157":{},"158":{},"159":{},"162":{},"163":{},"164":{},"165":{},"166":{},"171":{},"176":{}},"component":{}}],["root=/dev/mmcblk0p${mmc_cur",{"_index":2935,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["root=/dev/mmcblk0p4",{"_index":4194,"title":{},"name":{},"text":{"55":{},"146":{}},"component":{}}],["root=/dev/mmcblk0p5",{"_index":5613,"title":{},"name":{},"text":{"66":{},"72":{},"156":{},"162":{}},"component":{}}],["root=/dev/ram0",{"_index":2939,"title":{},"name":{},"text":{"46":{},"59":{},"62":{},"134":{},"149":{},"152":{}},"component":{}}],["root@kavya",{"_index":4797,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["root@swlab",{"_index":5279,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["root_block",{"_index":1403,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["root_next=/dev/mmcblk0p${mmc_cur",{"_index":2913,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["rootarg",{"_index":2931,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["rootargs=root=/dev/ram0",{"_index":6193,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["rootargs_mmc",{"_index":2942,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["rootargs_mmc=setenv",{"_index":2934,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["rootargs_ram",{"_index":2943,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["rootargs_ram=setenv",{"_index":2938,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["rootdelay=1",{"_index":6257,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["rootf",{"_index":1019,"title":{"46-23":{},"62-23":{},"134-22":{},"152-22":{}},"name":{},"text":{"14":{},"32":{},"38":{},"46":{},"59":{},"62":{},"80":{},"101":{},"118":{},"125":{},"134":{},"141":{},"149":{},"152":{},"165":{},"171":{}},"component":{}}],["rootfil",{"_index":6208,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["rootfs.ext2",{"_index":2725,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["rootfs.ext4",{"_index":2727,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["rootfs.hash",{"_index":6786,"title":{},"name":{},"text":{"165":{}},"component":{}}],["rootfs.squashf",{"_index":2728,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"165":{},"171":{}},"component":{}}],["rootfs.tar",{"_index":2729,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["rootfs/tar",{"_index":2550,"title":{"46-24":{},"62-24":{},"134-23":{},"152-23":{}},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["rootfs_data",{"_index":3132,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["rootfstype=squashf",{"_index":6194,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["rootfstype=ubif",{"_index":6175,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["roothash.txt",{"_index":6785,"title":{},"name":{},"text":{"165":{}},"component":{}}],["rootwait",{"_index":2937,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"66":{},"72":{},"134":{},"146":{},"152":{},"156":{},"162":{}},"component":{}}],["rot",{"_index":3196,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"72":{},"134":{},"146":{},"152":{},"162":{},"165":{}},"component":{}}],["rot_priv_key",{"_index":4217,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["rot_pub",{"_index":4219,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["rot_pub_key",{"_index":4218,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["rot_sha",{"_index":4222,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["rough",{"_index":2707,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["round",{"_index":1852,"title":{},"name":{},"text":{"23":{},"46":{},"62":{},"111":{},"134":{},"152":{}},"component":{}}],["rout",{"_index":5227,"title":{},"name":{},"text":{"59":{},"85":{},"149":{},"176":{}},"component":{}}],["router",{"_index":448,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["routin",{"_index":2876,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["row",{"_index":2065,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["rpc",{"_index":4994,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["rpi",{"_index":2382,"title":{},"name":{},"text":{"40":{},"76":{},"127":{},"141":{},"168":{}},"component":{}}],["rpi4",{"_index":2377,"title":{},"name":{},"text":{"40":{},"43":{},"127":{},"130":{},"141":{}},"component":{}}],["rpi4cm",{"_index":2404,"title":{},"name":{"141":{}},"text":{"43":{},"130":{},"131":{}},"component":{}}],["rpi4cm.img",{"_index":6665,"title":{},"name":{},"text":{"141":{}},"component":{}}],["rpiboot",{"_index":6674,"title":{},"name":{},"text":{"141":{}},"component":{}}],["rpl",{"_index":521,"title":{"6-7":{},"94-6":{}},"name":{},"text":{"6":{},"94":{}},"component":{}}],["rpmb",{"_index":2813,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["rs485",{"_index":5305,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["rsa,expon",{"_index":6747,"title":{},"name":{},"text":{"165":{}},"component":{}}],["rsa,modulu",{"_index":6748,"title":{},"name":{},"text":{"165":{}},"component":{}}],["rsa,n0",{"_index":6749,"title":{},"name":{},"text":{"165":{}},"component":{}}],["rsa,num",{"_index":6751,"title":{},"name":{},"text":{"165":{}},"component":{}}],["rsa,r",{"_index":6752,"title":{},"name":{},"text":{"165":{}},"component":{}}],["rst",{"_index":2834,"title":{},"name":{},"text":{"46":{},"62":{},"74":{},"134":{},"152":{},"164":{}},"component":{}}],["rst_n_function",{"_index":2835,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["rstn",{"_index":3497,"title":{},"name":{},"text":{"50":{},"52":{},"66":{},"138":{},"142":{},"156":{}},"component":{}}],["rstp",{"_index":484,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["rsync",{"_index":1078,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["rt",{"_index":2158,"title":{},"name":{},"text":{"29":{},"47":{},"59":{},"63":{},"73":{},"117":{},"135":{},"149":{},"153":{},"163":{}},"component":{}}],["rtag",{"_index":6407,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["rte",{"_index":2284,"title":{},"name":{},"text":{"35":{},"55":{},"72":{},"123":{},"146":{},"162":{}},"component":{}}],["rte/mera",{"_index":1857,"title":{"113":{},"25-1":{}},"name":{},"text":{},"component":{}}],["rte_mera",{"_index":1858,"title":{},"name":{"25":{},"113":{}},"text":{},"component":{}}],["rtl",{"_index":4336,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["rto",{"_index":6725,"title":{},"name":{},"text":{"165":{}},"component":{}}],["rtt",{"_index":294,"title":{},"name":{},"text":{"4":{},"15":{},"19":{},"90":{},"99":{},"105":{}},"component":{}}],["rubi",{"_index":1079,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["rule",{"_index":745,"title":{},"name":{},"text":{"9":{},"12":{},"22":{},"29":{},"30":{},"43":{},"83":{},"84":{},"85":{},"86":{},"87":{},"96":{},"98":{},"109":{},"116":{},"117":{},"130":{},"174":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["rule_id",{"_index":2050,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["run",{"_index":385,"title":{"60-11":{},"60-12":{},"75-11":{},"75-12":{},"150-10":{},"150-11":{},"166-10":{},"166-11":{}},"name":{},"text":{"4":{},"6":{},"14":{},"16":{},"27":{},"28":{},"35":{},"45":{},"46":{},"48":{},"50":{},"51":{},"53":{},"54":{},"55":{},"58":{},"59":{},"60":{},"62":{},"66":{},"67":{},"69":{},"72":{},"73":{},"74":{},"75":{},"77":{},"79":{},"80":{},"84":{},"85":{},"90":{},"94":{},"101":{},"104":{},"112":{},"115":{},"123":{},"133":{},"134":{},"137":{},"138":{},"139":{},"141":{},"143":{},"144":{},"145":{},"146":{},"149":{},"150":{},"152":{},"156":{},"157":{},"159":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"170":{},"171":{},"175":{},"176":{}},"component":{}}],["runtim",{"_index":2611,"title":{},"name":{},"text":{"46":{},"51":{},"55":{},"62":{},"67":{},"72":{},"134":{},"139":{},"146":{},"152":{},"157":{},"162":{}},"component":{}}],["rw",{"_index":4042,"title":{},"name":{},"text":{"53":{},"55":{},"56":{},"60":{},"62":{},"66":{},"67":{},"69":{},"72":{},"74":{},"75":{},"80":{},"143":{},"146":{},"147":{},"150":{},"152":{},"156":{},"157":{},"159":{},"162":{},"164":{},"166":{},"171":{}},"component":{}}],["rwdata",{"_index":4843,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["rx",{"_index":696,"title":{},"name":{},"text":{"7":{},"15":{},"45":{},"48":{},"53":{},"55":{},"58":{},"62":{},"69":{},"71":{},"73":{},"92":{},"99":{},"133":{},"137":{},"141":{},"143":{},"145":{},"146":{},"152":{},"159":{},"161":{},"163":{}},"component":{}}],["rx/tx",{"_index":4739,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["rx_assembly_err",{"_index":1542,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_assembly_ok",{"_index":1544,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_broadcast",{"_index":1501,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_cat_drop",{"_index":1517,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_control",{"_index":1515,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_crc",{"_index":1505,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_frag",{"_index":1503,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_green_prio_0",{"_index":1534,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_green_prio_1",{"_index":1535,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_green_prio_2",{"_index":1536,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_green_prio_3",{"_index":1537,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_green_prio_4",{"_index":1538,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_green_prio_5",{"_index":1539,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_green_prio_6",{"_index":1540,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_green_prio_7",{"_index":1541,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_jabber",{"_index":1504,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_long",{"_index":1516,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_merge_frag",{"_index":1545,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_multicast",{"_index":1500,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_octet",{"_index":1498,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_paus",{"_index":1514,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_pmac_broadcast",{"_index":1549,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_pmac_control",{"_index":1563,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_pmac_crc",{"_index":1553,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_pmac_frag",{"_index":1551,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_pmac_jabb",{"_index":1552,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_pmac_long",{"_index":1564,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_pmac_multicast",{"_index":1548,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_pmac_octet",{"_index":1546,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_pmac_paus",{"_index":1562,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_pmac_short",{"_index":1550,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_pmac_symbol_err",{"_index":1554,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_pmac_sz_1024_1526",{"_index":1560,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_pmac_sz_128_255",{"_index":1557,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_pmac_sz_256_511",{"_index":1558,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_pmac_sz_512_1023",{"_index":1559,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_pmac_sz_64",{"_index":1555,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_pmac_sz_65_127",{"_index":1556,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_pmac_sz_jumbo",{"_index":1561,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_pmac_unicast",{"_index":1547,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_red_prio_0",{"_index":1518,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_red_prio_1",{"_index":1519,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_red_prio_2",{"_index":1520,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_red_prio_3",{"_index":1521,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_red_prio_4",{"_index":1522,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_red_prio_5",{"_index":1523,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_red_prio_6",{"_index":1524,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_red_prio_7",{"_index":1525,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_short",{"_index":1502,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_smd_err",{"_index":1543,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_symbol_err",{"_index":1506,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_sz_1024_1526",{"_index":1512,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_sz_128_255",{"_index":1509,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_sz_256_511",{"_index":1510,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_sz_512_1023",{"_index":1511,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_sz_64",{"_index":1507,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_sz_65_127",{"_index":1508,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_sz_jumbo",{"_index":1513,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_unicast",{"_index":1499,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_yellow_prio_0",{"_index":1526,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_yellow_prio_1",{"_index":1527,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_yellow_prio_2",{"_index":1528,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_yellow_prio_3",{"_index":1529,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_yellow_prio_4",{"_index":1530,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_yellow_prio_5",{"_index":1531,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_yellow_prio_6",{"_index":1532,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rx_yellow_prio_7",{"_index":1533,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["rxd",{"_index":3348,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"65":{},"71":{},"73":{},"136":{},"145":{},"149":{},"154":{},"161":{},"163":{}},"component":{}}],["ry",{"_index":4054,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["s",{"_index":1356,"title":{},"name":{},"text":{"15":{},"22":{},"23":{},"26":{},"27":{},"49":{},"55":{},"57":{},"59":{},"60":{},"72":{},"73":{},"75":{},"80":{},"81":{},"84":{},"86":{},"87":{},"99":{},"109":{},"111":{},"112":{},"114":{},"136":{},"146":{},"148":{},"149":{},"150":{},"162":{},"163":{},"166":{},"171":{},"172":{},"175":{},"177":{},"178":{}},"component":{}}],["s/n",{"_index":4117,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["s0_vid",{"_index":959,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["s1",{"_index":833,"title":{"12-10":{},"98-9":{}},"name":{},"text":{"12":{},"98":{}},"component":{}}],["s14668",{"_index":4825,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["s1_7tupl",{"_index":863,"title":{},"name":{},"text":{"12":{},"84":{},"98":{},"175":{}},"component":{}}],["s1_dmac_vid",{"_index":869,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["s2",{"_index":835,"title":{"12-11":{},"98-10":{}},"name":{},"text":{"12":{},"98":{}},"component":{}}],["s3",{"_index":858,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["s4",{"_index":837,"title":{"12-12":{},"98-11":{}},"name":{},"text":{"12":{},"98":{}},"component":{}}],["s6",{"_index":5747,"title":{},"name":{},"text":{"70":{},"160":{}},"component":{}}],["s6:green",{"_index":5749,"title":{},"name":{},"text":{"70":{},"160":{}},"component":{}}],["s6:yellow",{"_index":5751,"title":{},"name":{},"text":{"70":{},"160":{}},"component":{}}],["safe",{"_index":3009,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"72":{},"134":{},"146":{},"152":{},"162":{}},"component":{}}],["salt",{"_index":6807,"title":{},"name":{},"text":{"165":{}},"component":{}}],["sama7",{"_index":4747,"title":{},"name":{},"text":{"59":{},"60":{},"149":{},"150":{}},"component":{}}],["same",{"_index":57,"title":{},"name":{},"text":{"1":{},"4":{},"6":{},"12":{},"14":{},"15":{},"16":{},"19":{},"22":{},"23":{},"26":{},"27":{},"28":{},"29":{},"32":{},"46":{},"48":{},"50":{},"51":{},"55":{},"61":{},"62":{},"66":{},"67":{},"72":{},"80":{},"81":{},"82":{},"84":{},"85":{},"86":{},"87":{},"89":{},"90":{},"94":{},"98":{},"99":{},"101":{},"104":{},"105":{},"109":{},"111":{},"112":{},"114":{},"115":{},"117":{},"118":{},"134":{},"137":{},"138":{},"139":{},"146":{},"151":{},"152":{},"156":{},"157":{},"162":{},"171":{},"172":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["sampl",{"_index":4309,"title":{},"name":{},"text":{"55":{},"80":{},"146":{},"165":{},"171":{}},"component":{}}],["sandisk",{"_index":5913,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["saniti",{"_index":5348,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["satisfactorili",{"_index":6207,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["save",{"_index":871,"title":{},"name":{},"text":{"12":{},"14":{},"46":{},"59":{},"62":{},"73":{},"80":{},"98":{},"101":{},"134":{},"149":{},"152":{},"163":{},"171":{}},"component":{}}],["saveenv",{"_index":2860,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["sc32g",{"_index":3654,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["scale",{"_index":6453,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["scan",{"_index":4182,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["scenario",{"_index":2684,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"72":{},"85":{},"134":{},"146":{},"152":{},"162":{},"176":{}},"component":{}}],["sched",{"_index":1793,"title":{},"name":{},"text":{"23":{},"26":{},"86":{},"111":{},"114":{},"177":{}},"component":{}}],["sched_clock",{"_index":4876,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["schedul",{"_index":109,"title":{"114":{},"26-1":{},"26-2":{},"26-3":{},"26-4":{},"85-5":{},"114-1":{},"114-2":{},"114-3":{},"176-5":{}},"name":{"26":{},"114":{}},"text":{"2":{},"9":{},"17":{},"23":{},"26":{},"36":{},"59":{},"85":{},"86":{},"88":{},"96":{},"106":{},"111":{},"114":{},"124":{},"149":{},"176":{},"177":{}},"component":{}}],["schema",{"_index":2563,"title":{"46-33":{},"62-33":{},"134-32":{},"152-32":{}},"name":{},"text":{"46":{},"134":{}},"component":{}}],["schemat",{"_index":5406,"title":{},"name":{},"text":{"61":{},"77":{},"151":{},"167":{}},"component":{}}],["scheme",{"_index":2756,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["sck",{"_index":3984,"title":{},"name":{},"text":{"53":{},"58":{},"69":{},"70":{},"71":{},"143":{},"145":{},"159":{},"160":{},"161":{}},"component":{}}],["scope",{"_index":265,"title":{},"name":{},"text":{"4":{},"15":{},"19":{},"55":{},"72":{},"90":{},"99":{},"105":{},"146":{},"162":{},"165":{}},"component":{}}],["scope:host",{"_index":3310,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["scp_bl2",{"_index":4174,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["scp_bl2_key",{"_index":4240,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["screen",{"_index":1323,"title":{},"name":{},"text":{"14":{},"51":{},"54":{},"67":{},"79":{},"101":{},"139":{},"144":{},"157":{},"165":{},"170":{}},"component":{}}],["screenshot",{"_index":4072,"title":{},"name":{},"text":{"54":{},"79":{},"144":{},"170":{}},"component":{}}],["script",{"_index":1001,"title":{"14-9":{},"101-8":{}},"name":{},"text":{"14":{},"55":{},"72":{},"80":{},"101":{},"146":{},"162":{},"171":{}},"component":{}}],["scripts/build.rb",{"_index":4168,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["scripts/fw_data.yaml",{"_index":4394,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["scripts/sjtag",{"_index":4424,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["scsi",{"_index":4958,"title":{},"name":{},"text":{"59":{},"74":{},"149":{},"164":{}},"component":{}}],["sd",{"_index":2385,"title":{},"name":{},"text":{"40":{},"50":{},"52":{},"55":{},"66":{},"68":{},"72":{},"74":{},"127":{},"138":{},"142":{},"146":{},"156":{},"158":{},"162":{},"164":{}},"component":{}}],["sd/emmc",{"_index":3543,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["sda",{"_index":5567,"title":{},"name":{},"text":{"65":{},"73":{},"74":{},"154":{},"163":{},"164":{}},"component":{}}],["sda1",{"_index":5937,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["sdcard",{"_index":2620,"title":{"141-8":{}},"name":{},"text":{"46":{},"54":{},"55":{},"62":{},"134":{},"141":{},"144":{},"146":{},"152":{}},"component":{}}],["sdhc",{"_index":3650,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["sdhci",{"_index":2792,"title":{},"name":{},"text":{"46":{},"50":{},"52":{},"59":{},"60":{},"62":{},"66":{},"134":{},"138":{},"142":{},"149":{},"150":{},"152":{},"156":{}},"component":{}}],["sdio",{"_index":3544,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["sdmmc",{"_index":3482,"title":{"50":{},"66":{},"138":{},"156":{},"50-1":{},"66-1":{}},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["sdmmc0",{"_index":3519,"title":{},"name":{},"text":{"50":{},"52":{},"66":{},"138":{},"142":{},"156":{}},"component":{}}],["sdmmc1",{"_index":5595,"title":{},"name":{},"text":{"66":{},"156":{}},"component":{}}],["sdmmc_pin",{"_index":3498,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["sdmmc_timing_h",{"_index":4401,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["sdu",{"_index":1806,"title":{},"name":{},"text":{"23":{},"111":{}},"component":{}}],["sdx",{"_index":6683,"title":{},"name":{},"text":{"141":{}},"component":{}}],["sdx1",{"_index":6684,"title":{},"name":{},"text":{"141":{}},"component":{}}],["sdx2",{"_index":6690,"title":{},"name":{},"text":{"141":{}},"component":{}}],["search",{"_index":467,"title":{},"name":{},"text":{"4":{},"84":{},"90":{},"175":{}},"component":{}}],["sec",{"_index":1765,"title":{},"name":{},"text":{"22":{},"23":{},"81":{},"86":{},"87":{},"109":{},"111":{},"112":{},"172":{},"177":{},"178":{}},"component":{}}],["second",{"_index":336,"title":{},"name":{},"text":{"4":{},"7":{},"12":{},"16":{},"22":{},"23":{},"27":{},"28":{},"29":{},"46":{},"51":{},"54":{},"60":{},"62":{},"67":{},"75":{},"79":{},"82":{},"84":{},"85":{},"86":{},"87":{},"90":{},"92":{},"98":{},"104":{},"109":{},"111":{},"112":{},"115":{},"117":{},"134":{},"139":{},"141":{},"144":{},"150":{},"152":{},"157":{},"166":{},"170":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["secondari",{"_index":1674,"title":{},"name":{},"text":{"16":{},"59":{},"85":{},"104":{},"149":{},"176":{}},"component":{}}],["secondli",{"_index":1386,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["secret",{"_index":3184,"title":{},"name":{},"text":{"46":{},"51":{},"55":{},"62":{},"67":{},"72":{},"134":{},"139":{},"146":{},"152":{},"157":{},"162":{}},"component":{}}],["section",{"_index":61,"title":{},"name":{},"text":{"1":{},"2":{},"6":{},"7":{},"12":{},"14":{},"15":{},"26":{},"28":{},"29":{},"36":{},"46":{},"54":{},"55":{},"62":{},"72":{},"76":{},"79":{},"80":{},"83":{},"84":{},"85":{},"86":{},"87":{},"88":{},"89":{},"92":{},"94":{},"98":{},"99":{},"101":{},"114":{},"115":{},"117":{},"124":{},"134":{},"141":{},"144":{},"146":{},"152":{},"162":{},"165":{},"168":{},"170":{},"171":{},"174":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["sector",{"_index":2849,"title":{},"name":{},"text":{"46":{},"50":{},"62":{},"66":{},"134":{},"138":{},"152":{},"156":{}},"component":{}}],["sectors/track",{"_index":3610,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["secur",{"_index":2329,"title":{"55":{},"72":{},"146":{},"162":{},"165":{},"55-1":{},"55-46":{},"55-47":{},"55-48":{},"55-49":{},"72-1":{},"72-38":{},"72-39":{},"72-40":{},"72-41":{},"146-45":{},"146-46":{},"146-47":{},"146-48":{},"162-37":{},"162-38":{},"162-39":{},"162-40":{},"165-2":{}},"name":{},"text":{"36":{},"38":{},"45":{},"46":{},"51":{},"55":{},"56":{},"59":{},"62":{},"67":{},"72":{},"124":{},"125":{},"133":{},"134":{},"139":{},"146":{},"147":{},"149":{},"152":{},"157":{},"162":{},"165":{}},"component":{}}],["secure/non",{"_index":4114,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["secure_jtag",{"_index":3788,"title":{},"name":{},"text":{"51":{},"55":{},"67":{},"72":{},"139":{},"146":{},"157":{},"162":{}},"component":{}}],["secureboot",{"_index":2779,"title":{"144":{},"170":{},"54-1":{},"79-1":{}},"name":{"54":{},"79":{},"144":{},"170":{}},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["secured/secret",{"_index":6743,"title":{},"name":{},"text":{"165":{}},"component":{}}],["see",{"_index":62,"title":{},"name":{},"text":{"1":{},"4":{},"12":{},"14":{},"16":{},"22":{},"23":{},"26":{},"27":{},"28":{},"29":{},"36":{},"38":{},"40":{},"46":{},"51":{},"52":{},"54":{},"55":{},"56":{},"60":{},"62":{},"63":{},"65":{},"67":{},"68":{},"72":{},"75":{},"79":{},"80":{},"81":{},"83":{},"84":{},"85":{},"86":{},"87":{},"89":{},"90":{},"98":{},"101":{},"104":{},"109":{},"111":{},"112":{},"114":{},"115":{},"117":{},"124":{},"125":{},"127":{},"134":{},"139":{},"141":{},"142":{},"144":{},"146":{},"147":{},"150":{},"152":{},"153":{},"154":{},"157":{},"158":{},"162":{},"165":{},"166":{},"170":{},"171":{},"172":{},"174":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["seed",{"_index":5269,"title":{},"name":{},"text":{"59":{},"73":{},"149":{},"163":{}},"component":{}}],["seek",{"_index":3023,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["seemingli",{"_index":1716,"title":{},"name":{},"text":{"18":{},"103":{}},"component":{}}],["seen",{"_index":333,"title":{},"name":{},"text":{"4":{},"7":{},"23":{},"55":{},"56":{},"72":{},"90":{},"92":{},"111":{},"146":{},"147":{},"162":{},"165":{}},"component":{}}],["segment",{"_index":5226,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["sel",{"_index":5457,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["select",{"_index":365,"title":{"14-14":{},"55-11":{},"55-14":{},"72-11":{},"72-14":{},"101-13":{},"146-10":{},"146-13":{},"162-10":{},"162-13":{}},"name":{},"text":{"4":{},"8":{},"13":{},"14":{},"15":{},"18":{},"26":{},"29":{},"36":{},"43":{},"46":{},"47":{},"50":{},"51":{},"52":{},"55":{},"56":{},"62":{},"63":{},"66":{},"72":{},"77":{},"80":{},"84":{},"85":{},"86":{},"90":{},"95":{},"99":{},"101":{},"102":{},"103":{},"114":{},"117":{},"124":{},"130":{},"134":{},"135":{},"138":{},"139":{},"142":{},"146":{},"147":{},"152":{},"153":{},"156":{},"162":{},"167":{},"171":{},"175":{},"176":{},"177":{}},"component":{}}],["self",{"_index":314,"title":{},"name":{},"text":{"4":{},"6":{},"37":{},"51":{},"55":{},"67":{},"72":{},"90":{},"94":{},"120":{},"139":{},"146":{},"157":{},"162":{}},"component":{}}],["semi",{"_index":3733,"title":{},"name":{},"text":{"51":{},"55":{},"67":{},"72":{},"139":{},"146":{},"157":{},"162":{}},"component":{}}],["send",{"_index":346,"title":{},"name":{},"text":{"4":{},"12":{},"15":{},"16":{},"19":{},"27":{},"28":{},"48":{},"84":{},"85":{},"86":{},"87":{},"90":{},"98":{},"99":{},"104":{},"105":{},"112":{},"115":{},"137":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["send/rec",{"_index":3281,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["sender",{"_index":3329,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["sendslop",{"_index":1871,"title":{},"name":{},"text":{"26":{},"28":{},"114":{},"115":{}},"component":{}}],["sens",{"_index":6782,"title":{},"name":{},"text":{"165":{}},"component":{}}],["sensit",{"_index":4301,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["sensor",{"_index":5377,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["sent",{"_index":303,"title":{},"name":{},"text":{"4":{},"22":{},"23":{},"30":{},"48":{},"57":{},"81":{},"85":{},"86":{},"87":{},"90":{},"109":{},"111":{},"116":{},"137":{},"148":{},"172":{},"176":{},"177":{},"178":{}},"component":{}}],["sep",{"_index":5337,"title":{},"name":{},"text":{"60":{},"74":{},"150":{},"164":{}},"component":{}}],["separ",{"_index":746,"title":{},"name":{},"text":{"9":{},"12":{},"14":{},"65":{},"85":{},"96":{},"98":{},"101":{},"154":{},"165":{},"176":{}},"component":{}}],["seq",{"_index":698,"title":{},"name":{},"text":{"7":{},"27":{},"92":{},"112":{}},"component":{}}],["sequenc",{"_index":686,"title":{},"name":{},"text":{"7":{},"8":{},"12":{},"46":{},"62":{},"80":{},"84":{},"92":{},"95":{},"98":{},"134":{},"152":{},"171":{},"175":{}},"component":{}}],["serd",{"_index":5762,"title":{},"name":{},"text":{"70":{},"160":{}},"component":{}}],["serial",{"_index":2787,"title":{"57-6":{},"57-13":{},"141-6":{},"148-5":{},"148-12":{}},"name":{},"text":{"46":{},"47":{},"49":{},"51":{},"53":{},"55":{},"57":{},"58":{},"59":{},"60":{},"62":{},"63":{},"65":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"75":{},"77":{},"84":{},"134":{},"135":{},"136":{},"139":{},"141":{},"143":{},"145":{},"146":{},"148":{},"149":{},"150":{},"152":{},"153":{},"154":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"166":{},"167":{},"175":{}},"component":{}}],["serial/usb",{"_index":6659,"title":{},"name":{},"text":{"141":{}},"component":{}}],["serial0",{"_index":4712,"title":{},"name":{},"text":{"59":{},"73":{},"149":{},"163":{}},"component":{}}],["serial0:115200n8",{"_index":5824,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["serial1",{"_index":4714,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["serial1:115200n8",{"_index":4710,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["serial@200",{"_index":4716,"title":{},"name":{},"text":{"59":{},"73":{},"149":{},"163":{}},"component":{}}],["serial_numb",{"_index":3765,"title":{},"name":{},"text":{"51":{},"55":{},"67":{},"72":{},"139":{},"146":{},"157":{},"162":{}},"component":{}}],["serialnumb",{"_index":4629,"title":{},"name":{},"text":{"57":{},"59":{},"73":{},"74":{},"148":{},"149":{},"163":{},"164":{}},"component":{}}],["serialnumber=0",{"_index":4731,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["serialnumber=1",{"_index":5125,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["serialnumber=3",{"_index":4625,"title":{},"name":{},"text":{"57":{},"59":{},"73":{},"74":{},"148":{},"149":{},"163":{},"164":{}},"component":{}}],["seriou",{"_index":6731,"title":{},"name":{},"text":{"165":{}},"component":{}}],["serv",{"_index":1865,"title":{},"name":{},"text":{"26":{},"84":{},"114":{},"175":{}},"component":{}}],["serval2_pcb112",{"_index":6002,"title":{},"name":{},"text":{"76":{},"168":{}},"component":{}}],["serval_pcb105",{"_index":6000,"title":{},"name":{},"text":{"76":{},"168":{}},"component":{}}],["serval_pcb106",{"_index":6001,"title":{},"name":{},"text":{"76":{},"168":{}},"component":{}}],["servalt_pcb116",{"_index":6003,"title":{},"name":{},"text":{"76":{},"168":{}},"component":{}}],["server",{"_index":702,"title":{"16-4":{},"104-3":{}},"name":{},"text":{"7":{},"16":{},"46":{},"59":{},"60":{},"61":{},"62":{},"75":{},"80":{},"92":{},"104":{},"134":{},"141":{},"149":{},"150":{},"151":{},"152":{},"166":{},"171":{}},"component":{}}],["serverip",{"_index":2858,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["serverip=10.99.10.1",{"_index":4777,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["servic",{"_index":92,"title":{"9-13":{},"96-12":{}},"name":{},"text":{"2":{},"6":{},"9":{},"14":{},"30":{},"46":{},"55":{},"62":{},"72":{},"81":{},"84":{},"94":{},"96":{},"101":{},"116":{},"134":{},"146":{},"152":{},"162":{},"172":{},"175":{}},"component":{}}],["servo",{"_index":1954,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["session",{"_index":4305,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["set",{"_index":201,"title":{"70-9":{},"80-13":{},"80-17":{},"80-18":{},"80-20":{},"160-8":{},"171-12":{},"171-16":{},"171-17":{},"171-19":{}},"name":{},"text":{"4":{},"6":{},"7":{},"9":{},"12":{},"14":{},"15":{},"16":{},"19":{},"26":{},"27":{},"28":{},"29":{},"36":{},"38":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"57":{},"58":{},"59":{},"60":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"79":{},"80":{},"83":{},"84":{},"85":{},"86":{},"87":{},"90":{},"92":{},"94":{},"96":{},"98":{},"99":{},"101":{},"104":{},"105":{},"112":{},"114":{},"115":{},"117":{},"124":{},"125":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"141":{},"142":{},"143":{},"144":{},"145":{},"146":{},"148":{},"149":{},"150":{},"152":{},"153":{},"154":{},"155":{},"156":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"170":{},"171":{},"174":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["set_rootarg",{"_index":2924,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["set_rootargs=if",{"_index":2940,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["setdsr",{"_index":2836,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["setenv",{"_index":2911,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["setexpr",{"_index":2947,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["setforcev",{"_index":509,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["setgatest",{"_index":1918,"title":{},"name":{},"text":{"26":{},"114":{}},"component":{}}],["setup",{"_index":950,"title":{"84-7":{},"175-6":{}},"name":{},"text":{"12":{},"13":{},"18":{},"22":{},"23":{},"46":{},"50":{},"55":{},"57":{},"59":{},"62":{},"66":{},"72":{},"80":{},"85":{},"87":{},"98":{},"102":{},"103":{},"109":{},"111":{},"112":{},"134":{},"138":{},"141":{},"146":{},"148":{},"149":{},"152":{},"156":{},"162":{},"171":{},"176":{},"178":{}},"component":{}}],["setup/hold",{"_index":3542,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["setup=setenv",{"_index":2927,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["sever",{"_index":616,"title":{},"name":{},"text":{"6":{},"12":{},"14":{},"18":{},"23":{},"85":{},"94":{},"98":{},"101":{},"103":{},"111":{},"165":{},"176":{}},"component":{}}],["sf",{"_index":2840,"title":{},"name":{},"text":{"46":{},"59":{},"60":{},"62":{},"73":{},"80":{},"134":{},"149":{},"150":{},"152":{},"163":{},"171":{}},"component":{}}],["sff",{"_index":4802,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["sff,sfp",{"_index":5744,"title":{},"name":{},"text":{"70":{},"160":{}},"component":{}}],["sfp",{"_index":2309,"title":{"65-9":{},"70-9":{},"154-8":{},"160-8":{}},"name":{},"text":{"36":{},"65":{},"70":{},"77":{},"80":{},"124":{},"154":{},"160":{},"167":{},"171":{}},"component":{}}],["sfp0",{"_index":5743,"title":{},"name":{},"text":{"70":{},"160":{}},"component":{}}],["sfp_sd",{"_index":3845,"title":{},"name":{},"text":{"52":{},"68":{},"142":{},"158":{}},"component":{}}],["sfpp",{"_index":5583,"title":{},"name":{},"text":{"65":{},"154":{}},"component":{}}],["sgi",{"_index":3593,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["sgmii",{"_index":6033,"title":{},"name":{},"text":{"78":{},"169":{}},"component":{}}],["sgmii/gmii/mii/rgmii",{"_index":6031,"title":{},"name":{},"text":{"78":{},"169":{}},"component":{}}],["sgpio",{"_index":5728,"title":{"70":{},"160":{},"70-1":{}},"name":{"70":{},"160":{}},"text":{"70":{},"160":{}},"component":{}}],["sgpio_a",{"_index":3854,"title":{},"name":{},"text":{"52":{},"68":{},"70":{},"142":{},"158":{},"160":{}},"component":{}}],["sgpio_b",{"_index":3910,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["sgpio_in",{"_index":5735,"title":{},"name":{},"text":{"70":{},"160":{}},"component":{}}],["sgpio_out",{"_index":5737,"title":{},"name":{},"text":{"70":{},"160":{}},"component":{}}],["sgpio_pin",{"_index":5739,"title":{},"name":{},"text":{"70":{},"160":{}},"component":{}}],["sh",{"_index":4534,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["sha",{"_index":2434,"title":{"45-6":{},"45-13":{},"133-5":{},"133-12":{}},"name":{"45":{},"133":{}},"text":{"45":{},"46":{},"55":{},"62":{},"72":{},"133":{},"134":{},"146":{},"152":{},"162":{}},"component":{}}],["sha$i",{"_index":2510,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["sha1",{"_index":2470,"title":{},"name":{},"text":{"45":{},"133":{},"165":{}},"component":{}}],["sha1,rsa2048",{"_index":6762,"title":{},"name":{},"text":{"165":{}},"component":{}}],["sha1/sha256/sha224/sha384/sha512",{"_index":5212,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["sha1sum",{"_index":4697,"title":{},"name":{},"text":{"58":{},"145":{}},"component":{}}],["sha224",{"_index":2469,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["sha256",{"_index":2468,"title":{},"name":{},"text":{"45":{},"133":{},"165":{}},"component":{}}],["sha256(challeng",{"_index":4422,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["sha256sum",{"_index":4522,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["sha384",{"_index":2467,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["sha512",{"_index":2466,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["sha_clk",{"_index":2463,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["sha_iodatar0",{"_index":2514,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["sha_iodatar1",{"_index":2517,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["sha_iodatar3",{"_index":2523,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["sha_iodatar4",{"_index":2526,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["sha_sha_iodatar0",{"_index":2515,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["sha_sha_iodatar2",{"_index":2521,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["sha_sha_iodatar3",{"_index":2524,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["sha_sha_iodatar4",{"_index":2527,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["sha_sha_iodatarl",{"_index":2518,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["shal",{"_index":2511,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["shall",{"_index":2645,"title":{},"name":{},"text":{"46":{},"51":{},"55":{},"62":{},"67":{},"72":{},"134":{},"139":{},"146":{},"152":{},"157":{},"162":{}},"component":{}}],["shape",{"_index":110,"title":{"115":{},"28-1":{},"28-2":{},"28-3":{},"115-1":{},"115-2":{}},"name":{"28":{},"115":{}},"text":{"2":{},"9":{},"17":{},"26":{},"28":{},"85":{},"88":{},"96":{},"106":{},"114":{},"115":{},"176":{}},"component":{}}],["shaper",{"_index":1862,"title":{"85-9":{},"176-9":{}},"name":{},"text":{"26":{},"28":{},"36":{},"43":{},"85":{},"114":{},"115":{},"124":{},"130":{},"176":{}},"component":{}}],["share",{"_index":561,"title":{"85-18":{},"176-18":{}},"name":{},"text":{"6":{},"17":{},"26":{},"45":{},"47":{},"48":{},"49":{},"50":{},"52":{},"53":{},"55":{},"58":{},"59":{},"60":{},"63":{},"64":{},"65":{},"66":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"84":{},"85":{},"94":{},"106":{},"114":{},"133":{},"135":{},"136":{},"137":{},"138":{},"142":{},"143":{},"145":{},"146":{},"149":{},"150":{},"153":{},"154":{},"155":{},"156":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"166":{},"175":{},"176":{}},"component":{}}],["shared/symmetr",{"_index":4429,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["shasum",{"_index":2508,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["sheet",{"_index":4415,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["shell",{"_index":1189,"title":{"57-13":{},"148-12":{}},"name":{},"text":{"14":{},"57":{},"80":{},"101":{},"148":{},"171":{}},"component":{}}],["shift",{"_index":3527,"title":{},"name":{},"text":{"50":{},"52":{},"66":{},"138":{},"142":{},"156":{}},"component":{}}],["short",{"_index":90,"title":{},"name":{},"text":{"2":{},"6":{},"7":{},"12":{},"27":{},"55":{},"72":{},"86":{},"92":{},"94":{},"98":{},"112":{},"146":{},"162":{},"177":{}},"component":{}}],["shorter",{"_index":868,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["shorthand",{"_index":2122,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["shortli",{"_index":6084,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["show",{"_index":220,"title":{"6-15":{},"6-16":{},"7-8":{},"7-9":{},"15-9":{},"15-10":{},"65-9":{},"92-7":{},"92-8":{},"94-14":{},"94-15":{},"99-8":{},"99-9":{},"154-8":{}},"name":{},"text":{"4":{},"6":{},"7":{},"10":{},"12":{},"15":{},"19":{},"22":{},"23":{},"29":{},"30":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"55":{},"57":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"72":{},"73":{},"74":{},"75":{},"77":{},"80":{},"81":{},"84":{},"85":{},"86":{},"87":{},"90":{},"92":{},"94":{},"97":{},"98":{},"99":{},"105":{},"109":{},"111":{},"116":{},"117":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"142":{},"143":{},"146":{},"148":{},"149":{},"150":{},"151":{},"152":{},"153":{},"154":{},"155":{},"156":{},"157":{},"158":{},"159":{},"160":{},"162":{},"163":{},"164":{},"166":{},"167":{},"171":{},"172":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["showbridg",{"_index":504,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["shown",{"_index":598,"title":{},"name":{},"text":{"6":{},"12":{},"15":{},"22":{},"23":{},"26":{},"29":{},"46":{},"55":{},"62":{},"64":{},"71":{},"72":{},"79":{},"80":{},"81":{},"82":{},"84":{},"85":{},"86":{},"87":{},"94":{},"98":{},"99":{},"109":{},"111":{},"114":{},"117":{},"134":{},"146":{},"152":{},"155":{},"161":{},"162":{},"170":{},"171":{},"172":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["showport",{"_index":506,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["showportdetail",{"_index":507,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["shrd",{"_index":3234,"title":{},"name":{},"text":{"47":{},"58":{},"63":{},"135":{},"145":{},"153":{}},"component":{}}],["side",{"_index":4592,"title":{},"name":{},"text":{"57":{},"59":{},"84":{},"148":{},"149":{},"175":{}},"component":{}}],["siemens_mpi",{"_index":5187,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["sign",{"_index":2613,"title":{"55-23":{},"72-23":{},"146-22":{},"162-22":{},"165-6":{}},"name":{},"text":{"46":{},"55":{},"62":{},"72":{},"134":{},"146":{},"152":{},"162":{},"165":{}},"component":{}}],["signal",{"_index":1753,"title":{},"name":{},"text":{"22":{},"50":{},"52":{},"55":{},"56":{},"62":{},"66":{},"70":{},"109":{},"112":{},"138":{},"142":{},"146":{},"147":{},"152":{},"156":{},"160":{}},"component":{}}],["signatur",{"_index":4287,"title":{},"name":{},"text":{"55":{},"72":{},"131":{},"146":{},"162":{},"165":{}},"component":{}}],["significantli",{"_index":2350,"title":{},"name":{},"text":{"38":{},"125":{}},"component":{}}],["similar",{"_index":861,"title":{},"name":{},"text":{"12":{},"16":{},"27":{},"98":{},"104":{},"112":{}},"component":{}}],["similarli",{"_index":6392,"title":{},"name":{},"text":{"84":{},"87":{},"175":{},"178":{}},"component":{}}],["simpl",{"_index":977,"title":{},"name":{},"text":{"13":{},"14":{},"18":{},"54":{},"55":{},"72":{},"74":{},"79":{},"85":{},"101":{},"102":{},"103":{},"144":{},"146":{},"162":{},"164":{},"170":{},"176":{}},"component":{}}],["simpli",{"_index":6466,"title":{},"name":{},"text":{"85":{},"165":{},"176":{}},"component":{}}],["simplifi",{"_index":6203,"title":{},"name":{},"text":{"80":{},"85":{},"171":{},"176":{}},"component":{}}],["simul",{"_index":6385,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["simultan",{"_index":1383,"title":{},"name":{},"text":{"15":{},"84":{},"85":{},"86":{},"99":{},"175":{},"176":{},"177":{}},"component":{}}],["singl",{"_index":370,"title":{},"name":{},"text":{"4":{},"12":{},"16":{},"26":{},"33":{},"43":{},"46":{},"62":{},"84":{},"85":{},"86":{},"87":{},"90":{},"98":{},"104":{},"114":{},"122":{},"130":{},"134":{},"152":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["singlecollisionfram",{"_index":1453,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["sip",{"_index":409,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["sit",{"_index":5232,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["sit0",{"_index":3312,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["sit0@non",{"_index":242,"title":{},"name":{},"text":{"4":{},"48":{},"90":{},"137":{}},"component":{}}],["situ",{"_index":5229,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["size",{"_index":774,"title":{},"name":{},"text":{"10":{},"23":{},"28":{},"29":{},"33":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"46":{},"47":{},"49":{},"50":{},"51":{},"53":{},"55":{},"56":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"66":{},"67":{},"69":{},"70":{},"72":{},"73":{},"74":{},"77":{},"80":{},"82":{},"84":{},"86":{},"87":{},"97":{},"111":{},"115":{},"117":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"134":{},"135":{},"136":{},"138":{},"139":{},"143":{},"145":{},"146":{},"147":{},"149":{},"150":{},"151":{},"152":{},"153":{},"156":{},"157":{},"159":{},"160":{},"162":{},"163":{},"164":{},"165":{},"167":{},"171":{},"173":{},"175":{},"177":{},"178":{}},"component":{}}],["size:3",{"_index":3738,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["size{,k,m,g,t",{"_index":3617,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["sjtag",{"_index":3200,"title":{"56-6":{},"147-5":{}},"name":{},"text":{"46":{},"55":{},"56":{},"62":{},"72":{},"134":{},"146":{},"147":{},"152":{},"162":{}},"component":{}}],["sjtag_key",{"_index":4494,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["sjtag_statu",{"_index":4495,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["sjtag_unlock",{"_index":4496,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["skbedit",{"_index":6396,"title":{},"name":{},"text":{"84":{},"85":{},"86":{},"175":{},"176":{},"177":{}},"component":{}}],["skip",{"_index":2600,"title":{},"name":{},"text":{"46":{},"51":{},"59":{},"62":{},"67":{},"80":{},"134":{},"139":{},"149":{},"152":{},"157":{},"171":{}},"component":{}}],["skip_sw",{"_index":360,"title":{},"name":{},"text":{"4":{},"12":{},"22":{},"23":{},"29":{},"81":{},"82":{},"85":{},"86":{},"87":{},"90":{},"98":{},"109":{},"111":{},"117":{},"172":{},"173":{},"176":{},"177":{},"178":{}},"component":{}}],["sku",{"_index":2590,"title":{},"name":{},"text":{"46":{},"61":{},"80":{},"134":{},"171":{}},"component":{}}],["slave",{"_index":431,"title":{},"name":{},"text":{"4":{},"27":{},"90":{},"112":{},"141":{}},"component":{}}],["slaveonli",{"_index":1981,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["slc",{"_index":4038,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["sleep",{"_index":2682,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["slightli",{"_index":1632,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["slim",{"_index":6655,"title":{},"name":{},"text":{"141":{}},"component":{}}],["slot",{"_index":6664,"title":{},"name":{},"text":{"141":{}},"component":{}}],["slow",{"_index":396,"title":{},"name":{},"text":{"4":{},"87":{},"90":{},"178":{}},"component":{}}],["smac",{"_index":407,"title":{},"name":{},"text":{"4":{},"84":{},"85":{},"90":{},"175":{},"176":{}},"component":{}}],["small",{"_index":1022,"title":{},"name":{},"text":{"14":{},"36":{},"55":{},"72":{},"80":{},"101":{},"124":{},"146":{},"162":{},"171":{}},"component":{}}],["smaller",{"_index":4127,"title":{},"name":{},"text":{"55":{},"72":{},"86":{},"146":{},"162":{},"177":{}},"component":{}}],["smbstax",{"_index":1730,"title":{},"name":{},"text":{"18":{},"31":{},"32":{},"34":{},"37":{},"73":{},"103":{},"118":{},"119":{},"120":{},"121":{},"163":{}},"component":{}}],["smc",{"_index":4486,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["smooth",{"_index":6476,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["smp",{"_index":4914,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["sn000000",{"_index":4601,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["snap",{"_index":2110,"title":{},"name":{},"text":{"29":{},"84":{},"87":{},"117":{},"175":{},"178":{}},"component":{}}],["snippet",{"_index":6763,"title":{},"name":{},"text":{"165":{}},"component":{}}],["snoop",{"_index":171,"title":{"4-7":{},"90-6":{}},"name":{},"text":{"4":{},"17":{},"90":{},"106":{}},"component":{}}],["snps,dw",{"_index":5330,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["snps,dwc3",{"_index":5887,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["soc",{"_index":2352,"title":{"45-2":{},"47-2":{},"48-2":{},"49-2":{},"50-2":{},"51-2":{},"52-2":{},"53-2":{},"56-2":{},"57-2":{},"58-2":{},"59-2":{},"60-2":{},"63-2":{},"64-2":{},"65-2":{},"66-2":{},"67-2":{},"68-2":{},"69-2":{},"70-2":{},"71-2":{},"73-2":{},"74-2":{},"75-2":{},"133-1":{},"135-1":{},"136-1":{},"137-1":{},"138-1":{},"139-1":{},"142-1":{},"143-1":{},"145-1":{},"147-1":{},"148-1":{},"149-1":{},"150-1":{},"153-1":{},"154-1":{},"155-1":{},"156-1":{},"157-1":{},"158-1":{},"159-1":{},"160-1":{},"161-1":{},"163-1":{},"164-1":{},"166-1":{}},"name":{},"text":{"38":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"51":{},"54":{},"55":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"67":{},"71":{},"72":{},"73":{},"74":{},"75":{},"79":{},"80":{},"125":{},"130":{},"133":{},"134":{},"135":{},"136":{},"137":{},"139":{},"141":{},"144":{},"145":{},"146":{},"148":{},"149":{},"150":{},"151":{},"152":{},"153":{},"154":{},"155":{},"157":{},"161":{},"162":{},"163":{},"164":{},"166":{},"170":{},"171":{}},"component":{}}],["socket",{"_index":4904,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["soft",{"_index":5353,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["soft=no",{"_index":5399,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["softboot",{"_index":5352,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["softwar",{"_index":970,"title":{},"name":{},"text":{"13":{},"14":{},"17":{},"18":{},"22":{},"23":{},"27":{},"45":{},"46":{},"50":{},"51":{},"55":{},"59":{},"61":{},"62":{},"66":{},"67":{},"72":{},"77":{},"81":{},"86":{},"87":{},"101":{},"102":{},"103":{},"106":{},"109":{},"111":{},"112":{},"133":{},"134":{},"138":{},"139":{},"146":{},"149":{},"151":{},"152":{},"156":{},"157":{},"162":{},"165":{},"167":{},"172":{},"177":{},"178":{}},"component":{}}],["software’",{"_index":1720,"title":{},"name":{},"text":{"18":{},"103":{}},"component":{}}],["solut",{"_index":3114,"title":{},"name":{},"text":{"46":{},"53":{},"62":{},"69":{},"80":{},"134":{},"143":{},"152":{},"159":{},"171":{}},"component":{}}],["someth",{"_index":3008,"title":{},"name":{},"text":{"46":{},"51":{},"62":{},"67":{},"134":{},"139":{},"152":{},"157":{}},"component":{}}],["sometim",{"_index":2783,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"72":{},"84":{},"134":{},"146":{},"152":{},"162":{},"175":{}},"component":{}}],["somewher",{"_index":1195,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["sourc",{"_index":479,"title":{"55-9":{},"72-9":{},"146-8":{},"162-8":{}},"name":{},"text":{"4":{},"12":{},"14":{},"18":{},"23":{},"27":{},"32":{},"46":{},"55":{},"59":{},"62":{},"72":{},"80":{},"82":{},"84":{},"86":{},"87":{},"90":{},"98":{},"101":{},"103":{},"111":{},"112":{},"118":{},"134":{},"146":{},"149":{},"152":{},"162":{},"171":{},"173":{},"175":{},"177":{},"178":{}},"component":{}}],["source.s3",{"_index":1102,"title":{},"name":{},"text":{"14":{},"46":{},"62":{},"101":{},"134":{},"152":{}},"component":{}}],["source/ethtool",{"_index":1213,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["source/ethtool/ethtool",{"_index":1223,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["sp_min",{"_index":4212,"title":{},"name":{},"text":{"55":{},"146":{}},"component":{}}],["space",{"_index":480,"title":{},"name":{},"text":{"4":{},"6":{},"12":{},"14":{},"16":{},"18":{},"32":{},"36":{},"51":{},"53":{},"55":{},"57":{},"67":{},"69":{},"72":{},"74":{},"87":{},"90":{},"94":{},"98":{},"101":{},"103":{},"104":{},"118":{},"124":{},"139":{},"143":{},"146":{},"148":{},"157":{},"159":{},"162":{},"164":{},"178":{}},"component":{}}],["span",{"_index":173,"title":{"4-8":{},"90-7":{}},"name":{},"text":{"4":{},"12":{},"17":{},"90":{},"98":{},"106":{}},"component":{}}],["sparx",{"_index":6078,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["sparx5",{"_index":1631,"title":{"171":{},"36-6":{},"36-7":{},"36-8":{},"36-9":{},"38-7":{},"80-1":{},"80-2":{},"80-5":{},"80-9":{},"82-2":{},"82-3":{},"84-4":{},"86-2":{},"87-2":{},"124-5":{},"124-6":{},"124-7":{},"124-8":{},"125-6":{},"171-1":{},"171-4":{},"171-8":{},"173-1":{},"173-2":{},"175-3":{},"177-1":{},"178-1":{}},"name":{"80":{},"171":{}},"text":{"15":{},"17":{},"28":{},"29":{},"33":{},"35":{},"36":{},"38":{},"40":{},"41":{},"43":{},"62":{},"72":{},"80":{},"81":{},"82":{},"84":{},"86":{},"87":{},"99":{},"106":{},"115":{},"117":{},"122":{},"123":{},"124":{},"125":{},"127":{},"128":{},"130":{},"131":{},"152":{},"162":{},"171":{},"172":{},"173":{},"175":{},"177":{},"178":{}},"component":{}}],["sparx5.itb",{"_index":6204,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["sparx5/lan969x",{"_index":5800,"title":{},"name":{},"text":{"72":{},"131":{},"162":{}},"component":{}}],["sparx5_appl_pcb134.dtb",{"_index":5502,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["sparx5_appl_pcb134_emmc.dtb",{"_index":5501,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["sparx5_appl_pcb135.dtb",{"_index":5504,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["sparx5_appl_pcb135_emmc.dtb",{"_index":5503,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["sparx5_pcb125",{"_index":5977,"title":{},"name":{},"text":{"76":{},"168":{}},"component":{}}],["sparx5_pcb125.dtb",{"_index":5505,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["sparx5_pcb134",{"_index":5979,"title":{},"name":{},"text":{"76":{},"168":{}},"component":{}}],["sparx5_pcb134.dtb",{"_index":5508,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["sparx5_pcb134_emmc",{"_index":5978,"title":{},"name":{},"text":{"76":{},"168":{}},"component":{}}],["sparx5_pcb134_emmc.dtb",{"_index":5507,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["sparx5_pcb134_emmc_switchdev.dtb,pcb134_emmc",{"_index":6249,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["sparx5_pcb134_switchdev.dtb,pcb134",{"_index":6209,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["sparx5_pcb135",{"_index":5981,"title":{},"name":{},"text":{"76":{},"168":{}},"component":{}}],["sparx5_pcb135.dtb",{"_index":5510,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["sparx5_pcb135_emmc",{"_index":5980,"title":{},"name":{},"text":{"76":{},"168":{}},"component":{}}],["sparx5_pcb135_emmc.dtb",{"_index":5509,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["spawn",{"_index":5940,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["spec",{"_index":3583,"title":{},"name":{},"text":{"50":{},"52":{},"66":{},"138":{},"142":{},"156":{}},"component":{}}],["special",{"_index":732,"title":{},"name":{},"text":{"9":{},"46":{},"55":{},"62":{},"72":{},"84":{},"96":{},"134":{},"146":{},"152":{},"162":{},"165":{},"175":{}},"component":{}}],["specif",{"_index":67,"title":{},"name":{},"text":{"1":{},"4":{},"12":{},"15":{},"22":{},"23":{},"26":{},"28":{},"29":{},"32":{},"36":{},"46":{},"49":{},"50":{},"51":{},"52":{},"55":{},"58":{},"59":{},"62":{},"65":{},"66":{},"67":{},"68":{},"70":{},"71":{},"72":{},"73":{},"74":{},"80":{},"81":{},"84":{},"85":{},"86":{},"87":{},"89":{},"90":{},"98":{},"99":{},"109":{},"111":{},"114":{},"115":{},"117":{},"118":{},"124":{},"134":{},"136":{},"138":{},"139":{},"142":{},"145":{},"146":{},"149":{},"152":{},"154":{},"156":{},"157":{},"158":{},"160":{},"161":{},"162":{},"163":{},"164":{},"171":{},"172":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["specifi",{"_index":320,"title":{},"name":{},"text":{"4":{},"6":{},"9":{},"27":{},"28":{},"29":{},"46":{},"47":{},"51":{},"55":{},"60":{},"62":{},"63":{},"67":{},"72":{},"74":{},"75":{},"81":{},"84":{},"85":{},"86":{},"87":{},"90":{},"94":{},"96":{},"112":{},"115":{},"117":{},"134":{},"135":{},"139":{},"146":{},"150":{},"152":{},"153":{},"157":{},"162":{},"164":{},"166":{},"172":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["speed",{"_index":432,"title":{"15-6":{},"38-5":{},"62-9":{},"99-5":{},"125-4":{},"152-8":{}},"name":{},"text":{"4":{},"15":{},"23":{},"33":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"46":{},"50":{},"52":{},"55":{},"57":{},"59":{},"62":{},"66":{},"73":{},"74":{},"80":{},"85":{},"90":{},"99":{},"111":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"134":{},"138":{},"142":{},"146":{},"148":{},"149":{},"152":{},"156":{},"163":{},"164":{},"171":{},"176":{}},"component":{}}],["spf",{"_index":6085,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["spi",{"_index":2342,"title":{"58":{},"71":{},"145":{},"161":{},"38-5":{},"46-10":{},"55-33":{},"58-1":{},"62-10":{},"71-1":{},"80-6":{},"80-7":{},"80-10":{},"80-11":{},"80-13":{},"80-18":{},"80-19":{},"80-20":{},"125-4":{},"134-9":{},"146-32":{},"152-9":{},"171-5":{},"171-6":{},"171-9":{},"171-10":{},"171-12":{},"171-17":{},"171-18":{},"171-19":{}},"name":{"58":{},"71":{},"145":{},"161":{}},"text":{"38":{},"46":{},"47":{},"53":{},"54":{},"55":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"69":{},"71":{},"72":{},"73":{},"77":{},"79":{},"80":{},"125":{},"134":{},"135":{},"143":{},"144":{},"145":{},"146":{},"149":{},"150":{},"151":{},"152":{},"153":{},"159":{},"161":{},"162":{},"163":{},"167":{},"170":{},"171":{}},"component":{}}],["spi(seri",{"_index":3212,"title":{},"name":{},"text":{"47":{},"49":{},"65":{},"135":{},"136":{},"154":{}},"component":{}}],["spi/i2c/can",{"_index":1743,"title":{"21-3":{},"108-2":{}},"name":{},"text":{},"component":{}}],["spi0",{"_index":4670,"title":{},"name":{},"text":{"58":{},"145":{}},"component":{}}],["spi0.0",{"_index":4686,"title":{},"name":{},"text":{"58":{},"59":{},"145":{},"149":{}},"component":{}}],["spi1.0",{"_index":4007,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["spi2",{"_index":5768,"title":{},"name":{},"text":{"71":{},"73":{},"161":{},"163":{}},"component":{}}],["spi:synce_dpl",{"_index":5772,"title":{},"name":{},"text":{"71":{},"161":{}},"component":{}}],["spi@0",{"_index":4676,"title":{},"name":{},"text":{"58":{},"71":{},"73":{},"145":{},"161":{},"163":{}},"component":{}}],["spi@400",{"_index":4671,"title":{},"name":{},"text":{"58":{},"71":{},"73":{},"145":{},"161":{},"163":{}},"component":{}}],["spi@e0804000",{"_index":5718,"title":{},"name":{},"text":{"69":{},"159":{}},"component":{}}],["spi@e0834000",{"_index":3997,"title":{},"name":{},"text":{"53":{},"143":{}},"component":{}}],["spi_clk",{"_index":4669,"title":{},"name":{},"text":{"58":{},"71":{},"145":{},"161":{}},"component":{}}],["spi_device_id",{"_index":5050,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["spi_nand",{"_index":6121,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["spidev",{"_index":4674,"title":{},"name":{},"text":{"58":{},"59":{},"145":{},"149":{}},"component":{}}],["spiflash",{"_index":5859,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["split",{"_index":849,"title":{},"name":{},"text":{"12":{},"85":{},"98":{},"176":{}},"component":{}}],["sport",{"_index":412,"title":{},"name":{},"text":{"4":{},"16":{},"90":{},"104":{}},"component":{}}],["spsr",{"_index":5806,"title":{},"name":{},"text":{"72":{},"162":{}},"component":{}}],["squar",{"_index":6753,"title":{},"name":{},"text":{"165":{}},"component":{}}],["squashf",{"_index":1020,"title":{"46-25":{},"62-25":{},"134-24":{},"152-24":{}},"name":{},"text":{"14":{},"46":{},"59":{},"62":{},"101":{},"134":{},"149":{},"152":{}},"component":{}}],["sram",{"_index":2606,"title":{},"name":{},"text":{"46":{},"55":{},"61":{},"62":{},"72":{},"77":{},"134":{},"146":{},"151":{},"152":{},"162":{},"167":{}},"component":{}}],["src",{"_index":2161,"title":{},"name":{},"text":{"29":{},"117":{},"165":{}},"component":{}}],["src_ip",{"_index":2164,"title":{},"name":{},"text":{"29":{},"82":{},"84":{},"85":{},"86":{},"87":{},"117":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["src_mac",{"_index":6293,"title":{},"name":{},"text":{"82":{},"84":{},"85":{},"86":{},"87":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["src_port",{"_index":6320,"title":{},"name":{},"text":{"82":{},"84":{},"86":{},"87":{},"173":{},"175":{},"177":{},"178":{}},"component":{}}],["srcu",{"_index":4912,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["ssh",{"_index":6699,"title":{},"name":{},"text":{"141":{}},"component":{}}],["sshd",{"_index":5878,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["ssk",{"_index":3201,"title":{},"name":{},"text":{"46":{},"55":{},"56":{},"62":{},"72":{},"134":{},"146":{},"147":{},"152":{},"162":{}},"component":{}}],["ssk.fip",{"_index":2718,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["ssk.fip.gz",{"_index":5480,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["ssk.gpt",{"_index":3136,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["ssk.gpt.gz",{"_index":2719,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["ssport",{"_index":1686,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["sst26vf016b",{"_index":2842,"title":{},"name":{},"text":{"46":{},"58":{},"59":{},"60":{},"61":{},"134":{},"145":{},"149":{},"150":{},"151":{}},"component":{}}],["sst26wf016",{"_index":5515,"title":{},"name":{},"text":{"62":{},"73":{},"152":{},"163":{}},"component":{}}],["sst26wf016b",{"_index":5727,"title":{},"name":{},"text":{"69":{},"159":{}},"component":{}}],["st",{"_index":4055,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["stabl",{"_index":6581,"title":{},"name":{},"text":{"112":{}},"component":{}}],["stack",{"_index":2763,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"72":{},"134":{},"146":{},"152":{},"162":{}},"component":{}}],["stack:off",{"_index":4836,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["stag",{"_index":6405,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["stage",{"_index":2605,"title":{},"name":{},"text":{"46":{},"55":{},"61":{},"62":{},"72":{},"77":{},"80":{},"112":{},"134":{},"141":{},"146":{},"151":{},"152":{},"162":{},"165":{},"167":{},"171":{}},"component":{}}],["stage2",{"_index":1023,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["stall",{"_index":2339,"title":{},"name":{},"text":{"37":{},"120":{}},"component":{}}],["stamp",{"_index":4247,"title":{},"name":{},"text":{"55":{},"72":{},"112":{},"146":{},"162":{}},"component":{}}],["stand",{"_index":6352,"title":{},"name":{},"text":{"84":{},"165":{},"175":{}},"component":{}}],["standalon",{"_index":2204,"title":{"41-6":{},"42-6":{},"43-6":{},"59-10":{},"128-5":{},"129-5":{},"130-5":{},"131-5":{},"131-6":{},"149-9":{}},"name":{},"text":{"31":{},"32":{},"34":{},"37":{},"41":{},"42":{},"43":{},"46":{},"59":{},"62":{},"118":{},"119":{},"120":{},"121":{},"128":{},"129":{},"130":{},"131":{},"134":{},"149":{},"152":{}},"component":{}}],["standard",{"_index":182,"title":{},"name":{},"text":{"4":{},"10":{},"12":{},"15":{},"18":{},"19":{},"27":{},"46":{},"55":{},"62":{},"72":{},"77":{},"80":{},"90":{},"97":{},"98":{},"99":{},"103":{},"105":{},"112":{},"134":{},"141":{},"146":{},"152":{},"162":{},"167":{},"171":{}},"component":{}}],["standbi",{"_index":3276,"title":{},"name":{},"text":{"48":{},"64":{},"137":{},"155":{}},"component":{}}],["start",{"_index":468,"title":{"101":{},"14-1":{},"55-7":{},"72-7":{},"146-6":{},"162-6":{}},"name":{"14":{},"101":{}},"text":{"4":{},"7":{},"10":{},"14":{},"15":{},"16":{},"26":{},"27":{},"45":{},"46":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"58":{},"59":{},"60":{},"61":{},"62":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"75":{},"77":{},"79":{},"80":{},"84":{},"90":{},"92":{},"97":{},"99":{},"101":{},"104":{},"112":{},"114":{},"133":{},"134":{},"136":{},"137":{},"138":{},"139":{},"141":{},"142":{},"143":{},"144":{},"145":{},"146":{},"147":{},"149":{},"150":{},"151":{},"152":{},"154":{},"155":{},"156":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"165":{},"166":{},"167":{},"170":{},"171":{},"175":{}},"component":{}}],["start_kernel+0x40c/0x628",{"_index":4861,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["startch",{"_index":3611,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["startlba",{"_index":3613,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["startup",{"_index":2646,"title":{},"name":{},"text":{"46":{},"57":{},"62":{},"134":{},"148":{},"152":{}},"component":{}}],["stat",{"_index":1449,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["state",{"_index":226,"title":{"15-2":{},"99-1":{}},"name":{},"text":{"4":{},"6":{},"7":{},"15":{},"16":{},"19":{},"23":{},"29":{},"30":{},"46":{},"48":{},"55":{},"62":{},"68":{},"70":{},"72":{},"86":{},"90":{},"92":{},"94":{},"99":{},"104":{},"105":{},"111":{},"116":{},"117":{},"134":{},"137":{},"146":{},"152":{},"158":{},"160":{},"162":{},"177":{}},"component":{}}],["state=initi",{"_index":4945,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["statement",{"_index":6477,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["static",{"_index":326,"title":{},"name":{},"text":{"4":{},"12":{},"46":{},"55":{},"57":{},"59":{},"62":{},"72":{},"90":{},"98":{},"134":{},"146":{},"148":{},"149":{},"152":{},"162":{}},"component":{}}],["statist",{"_index":288,"title":{"15-10":{},"99-9":{}},"name":{},"text":{"4":{},"15":{},"19":{},"22":{},"23":{},"30":{},"51":{},"67":{},"81":{},"86":{},"87":{},"90":{},"99":{},"105":{},"109":{},"111":{},"116":{},"139":{},"157":{},"172":{},"177":{},"178":{}},"component":{}}],["statu",{"_index":259,"title":{"6-16":{},"7-8":{},"15-9":{},"16-8":{},"31-7":{},"33-6":{},"34-7":{},"35-6":{},"36-13":{},"37-7":{},"38-8":{},"39-5":{},"40-7":{},"41-7":{},"42-7":{},"43-9":{},"81-6":{},"86-15":{},"87-16":{},"92-7":{},"94-15":{},"99-8":{},"104-7":{},"119-6":{},"120-6":{},"121-6":{},"122-5":{},"123-5":{},"124-12":{},"125-7":{},"126-4":{},"127-6":{},"128-6":{},"129-6":{},"130-8":{},"131-8":{},"172-5":{},"177-14":{},"178-15":{}},"name":{},"text":{"4":{},"6":{},"7":{},"10":{},"15":{},"16":{},"19":{},"27":{},"35":{},"36":{},"47":{},"48":{},"49":{},"50":{},"52":{},"53":{},"57":{},"58":{},"59":{},"60":{},"63":{},"64":{},"65":{},"66":{},"68":{},"69":{},"70":{},"71":{},"73":{},"74":{},"90":{},"92":{},"94":{},"97":{},"99":{},"104":{},"105":{},"112":{},"123":{},"124":{},"135":{},"136":{},"137":{},"138":{},"142":{},"143":{},"145":{},"148":{},"149":{},"150":{},"153":{},"154":{},"155":{},"156":{},"158":{},"159":{},"160":{},"161":{},"163":{},"164":{}},"component":{}}],["status/statist",{"_index":475,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["status=progress",{"_index":6681,"title":{},"name":{},"text":{"141":{}},"component":{}}],["status_verifi",{"_index":797,"title":{},"name":{},"text":{"10":{},"97":{}},"component":{}}],["stay",{"_index":4134,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["std",{"_index":569,"title":{},"name":{},"text":{"6":{},"26":{},"28":{},"36":{},"85":{},"94":{},"114":{},"115":{},"124":{},"176":{}},"component":{}}],["std::fs::file",{"_index":5949,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["std::io::read",{"_index":5950,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["stderr=serial@600100000",{"_index":6195,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["stdin",{"_index":2512,"title":{},"name":{},"text":{"45":{},"51":{},"67":{},"133":{},"139":{},"157":{}},"component":{}}],["stdin=serial@600100000",{"_index":6196,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["stdout",{"_index":4709,"title":{},"name":{},"text":{"59":{},"73":{},"149":{},"163":{}},"component":{}}],["stdout=serial@600100000",{"_index":6197,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["steer",{"_index":6468,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["step",{"_index":1002,"title":{"14-10":{},"14-11":{},"14-12":{},"101-9":{},"101-10":{},"101-11":{}},"name":{},"text":{"14":{},"27":{},"33":{},"46":{},"50":{},"52":{},"55":{},"62":{},"66":{},"68":{},"72":{},"80":{},"84":{},"101":{},"112":{},"122":{},"134":{},"138":{},"141":{},"142":{},"146":{},"152":{},"156":{},"158":{},"162":{},"165":{},"171":{},"175":{}},"component":{}}],["step/two",{"_index":2260,"title":{},"name":{},"text":{"33":{},"122":{}},"component":{}}],["step_threshold",{"_index":1988,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["step_window",{"_index":6595,"title":{},"name":{},"text":{"112":{}},"component":{}}],["stepsremov",{"_index":2015,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["stick",{"_index":5880,"title":{"74-8":{},"164-7":{}},"name":{},"text":{"74":{},"164":{}},"component":{}}],["sticki",{"_index":6373,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["sticky_width",{"_index":2069,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["still",{"_index":1807,"title":{},"name":{},"text":{"23":{},"31":{},"33":{},"34":{},"35":{},"36":{},"37":{},"51":{},"55":{},"67":{},"72":{},"111":{},"112":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"139":{},"146":{},"157":{},"162":{}},"component":{}}],["stnadardl",{"_index":2317,"title":{},"name":{},"text":{"36":{},"124":{}},"component":{}}],["stone",{"_index":4137,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["stop",{"_index":801,"title":{},"name":{},"text":{"10":{},"15":{},"16":{},"46":{},"55":{},"60":{},"62":{},"72":{},"73":{},"74":{},"75":{},"80":{},"84":{},"97":{},"99":{},"104":{},"134":{},"146":{},"150":{},"152":{},"162":{},"163":{},"164":{},"166":{},"171":{},"175":{}},"component":{}}],["storag",{"_index":2616,"title":{},"name":{},"text":{"46":{},"53":{},"59":{},"62":{},"69":{},"74":{},"80":{},"134":{},"143":{},"149":{},"152":{},"159":{},"164":{},"171":{}},"component":{}}],["store",{"_index":1096,"title":{},"name":{},"text":{"14":{},"46":{},"50":{},"51":{},"54":{},"55":{},"62":{},"67":{},"72":{},"74":{},"79":{},"80":{},"101":{},"112":{},"134":{},"138":{},"139":{},"144":{},"146":{},"152":{},"157":{},"162":{},"164":{},"170":{},"171":{}},"component":{}}],["stori",{"_index":4164,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["stp",{"_index":490,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["stp_state",{"_index":498,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["strap",{"_index":2604,"title":{"55-28":{},"72-28":{},"146-27":{},"162-27":{}},"name":{},"text":{"46":{},"54":{},"55":{},"62":{},"72":{},"79":{},"80":{},"134":{},"141":{},"144":{},"146":{},"152":{},"162":{},"170":{},"171":{}},"component":{}}],["stream",{"_index":552,"title":{"111":{},"12-3":{},"12-5":{},"12-6":{},"23-1":{},"98-2":{},"98-4":{},"98-5":{}},"name":{},"text":{"6":{},"12":{},"17":{},"22":{},"23":{},"31":{},"34":{},"38":{},"55":{},"72":{},"94":{},"98":{},"106":{},"109":{},"111":{},"119":{},"121":{},"125":{},"146":{},"162":{}},"component":{}}],["stream(",{"_index":946,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["strict",{"_index":1706,"title":{"26-2":{},"26-3":{},"114-1":{},"114-2":{}},"name":{},"text":{"17":{},"26":{},"55":{},"59":{},"72":{},"85":{},"106":{},"114":{},"146":{},"149":{},"162":{},"176":{}},"component":{}}],["string",{"_index":2447,"title":{},"name":{},"text":{"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"57":{},"58":{},"59":{},"60":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"71":{},"73":{},"74":{},"75":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"142":{},"143":{},"145":{},"148":{},"149":{},"150":{},"153":{},"154":{},"155":{},"156":{},"157":{},"158":{},"159":{},"161":{},"163":{},"164":{},"166":{}},"component":{}}],["strings/0x409",{"_index":4600,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["strings/0x409/manufactur",{"_index":4603,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["strings/0x409/product",{"_index":4604,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["strings/0x409/serialnumb",{"_index":4602,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["structur",{"_index":999,"title":{"14-7":{},"32-7":{},"101-6":{},"118-6":{}},"name":{},"text":{"46":{},"62":{},"85":{},"101":{},"134":{},"152":{},"165":{},"176":{}},"component":{}}],["stti",{"_index":5321,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["stuff",{"_index":4126,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["sub",{"_index":2231,"title":{},"name":{},"text":{"32":{},"46":{},"51":{},"55":{},"62":{},"67":{},"72":{},"80":{},"118":{},"134":{},"139":{},"146":{},"152":{},"157":{},"162":{},"171":{}},"component":{}}],["subchapt",{"_index":2706,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["subdivid",{"_index":6465,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["subfold",{"_index":1166,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["subimag",{"_index":4780,"title":{},"name":{},"text":{"59":{},"73":{},"149":{},"163":{}},"component":{}}],["subject",{"_index":330,"title":{},"name":{},"text":{"4":{},"26":{},"81":{},"86":{},"87":{},"90":{},"114":{},"172":{},"177":{},"178":{}},"component":{}}],["submit",{"_index":2319,"title":{},"name":{},"text":{"36":{},"124":{}},"component":{}}],["subnet",{"_index":273,"title":{},"name":{},"text":{"4":{},"15":{},"19":{},"46":{},"61":{},"62":{},"80":{},"90":{},"99":{},"105":{},"134":{},"151":{},"152":{},"171":{}},"component":{}}],["subsect",{"_index":4319,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["subset",{"_index":1205,"title":{},"name":{},"text":{"14":{},"17":{},"36":{},"85":{},"101":{},"106":{},"124":{},"176":{}},"component":{}}],["subsi",{"_index":4939,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["subsidiari",{"_index":4449,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["substitut",{"_index":4468,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["subsystem",{"_index":1338,"title":{"46-42":{},"46-43":{},"62-41":{},"62-42":{},"134-41":{},"134-42":{},"152-40":{},"152-41":{}},"name":{},"text":{"15":{},"51":{},"52":{},"55":{},"56":{},"59":{},"67":{},"68":{},"99":{},"139":{},"142":{},"146":{},"147":{},"149":{},"157":{},"158":{}},"component":{}}],["subword",{"_index":866,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["success",{"_index":3037,"title":{},"name":{},"text":{"46":{},"54":{},"56":{},"62":{},"79":{},"80":{},"134":{},"144":{},"147":{},"152":{},"165":{},"170":{},"171":{}},"component":{}}],["successfulli",{"_index":1328,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["such",{"_index":1339,"title":{},"name":{},"text":{"15":{},"18":{},"27":{},"29":{},"46":{},"51":{},"55":{},"61":{},"62":{},"67":{},"72":{},"77":{},"80":{},"85":{},"99":{},"103":{},"112":{},"117":{},"134":{},"139":{},"146":{},"151":{},"152":{},"157":{},"162":{},"165":{},"167":{},"171":{},"176":{}},"component":{}}],["sudo",{"_index":1035,"title":{},"name":{},"text":{"14":{},"101":{},"141":{}},"component":{}}],["suffici",{"_index":3538,"title":{},"name":{},"text":{"50":{},"55":{},"66":{},"72":{},"138":{},"146":{},"156":{},"162":{}},"component":{}}],["suit",{"_index":2167,"title":{},"name":{},"text":{"30":{},"38":{},"116":{},"125":{}},"component":{}}],["suitabl",{"_index":2724,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"134":{},"146":{},"152":{}},"component":{}}],["sum",{"_index":1824,"title":{},"name":{},"text":{"23":{},"45":{},"111":{},"133":{},"165":{}},"component":{}}],["summary_interv",{"_index":1994,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["sun",{"_index":3592,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["sunris",{"_index":3447,"title":{},"name":{},"text":{"49":{},"62":{},"136":{},"152":{}},"component":{}}],["superblock",{"_index":3685,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["superspe",{"_index":5136,"title":{},"name":{},"text":{"59":{},"74":{},"149":{},"164":{}},"component":{}}],["supplement",{"_index":384,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["support",{"_index":64,"title":{"24-2":{},"33-5":{},"36-5":{},"36-6":{},"38-4":{},"38-7":{},"39-4":{},"40-5":{},"41-5":{},"42-5":{},"43-5":{},"43-6":{},"55-27":{},"72-27":{},"110-1":{},"122-4":{},"124-4":{},"124-5":{},"125-3":{},"125-6":{},"126-3":{},"127-4":{},"128-4":{},"129-4":{},"130-4":{},"130-5":{},"131-3":{},"131-4":{},"131-5":{},"131-6":{},"131-7":{},"146-26":{},"162-26":{}},"name":{},"text":{"1":{},"4":{},"6":{},"7":{},"9":{},"10":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"22":{},"23":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"36":{},"37":{},"38":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"55":{},"57":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"72":{},"74":{},"75":{},"77":{},"78":{},"80":{},"81":{},"82":{},"84":{},"85":{},"86":{},"87":{},"89":{},"90":{},"92":{},"94":{},"96":{},"97":{},"98":{},"99":{},"101":{},"102":{},"103":{},"104":{},"106":{},"109":{},"111":{},"112":{},"114":{},"115":{},"116":{},"117":{},"118":{},"119":{},"120":{},"121":{},"122":{},"124":{},"125":{},"127":{},"128":{},"129":{},"130":{},"131":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"140":{},"141":{},"142":{},"143":{},"146":{},"148":{},"149":{},"150":{},"151":{},"152":{},"153":{},"154":{},"155":{},"156":{},"157":{},"158":{},"159":{},"160":{},"162":{},"164":{},"165":{},"166":{},"167":{},"169":{},"171":{},"172":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["suppos",{"_index":6779,"title":{},"name":{},"text":{"165":{}},"component":{}}],["supprot",{"_index":2324,"title":{},"name":{},"text":{"36":{},"124":{}},"component":{}}],["sure",{"_index":1320,"title":{},"name":{},"text":{"14":{},"27":{},"46":{},"51":{},"57":{},"59":{},"61":{},"62":{},"67":{},"80":{},"101":{},"112":{},"134":{},"139":{},"148":{},"149":{},"151":{},"152":{},"157":{},"165":{},"171":{}},"component":{}}],["surfac",{"_index":4284,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{},"165":{}},"component":{}}],["suspend",{"_index":758,"title":{},"name":{},"text":{"10":{},"60":{},"75":{},"97":{},"150":{},"166":{}},"component":{}}],["suunto",{"_index":5185,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["svc",{"_index":4921,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["sw",{"_index":972,"title":{},"name":{},"text":{"13":{},"27":{},"32":{},"55":{},"61":{},"72":{},"80":{},"84":{},"85":{},"102":{},"112":{},"118":{},"146":{},"151":{},"162":{},"171":{},"175":{},"176":{}},"component":{}}],["sw/bsp",{"_index":2347,"title":{},"name":{},"text":{"38":{},"125":{}},"component":{}}],["sw_count",{"_index":2066,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["sw_width",{"_index":2067,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["switch",{"_index":177,"title":{"12-10":{},"12-11":{},"12-12":{},"31-5":{},"34-5":{},"37-5":{},"41-5":{},"42-5":{},"43-6":{},"98-9":{},"98-10":{},"98-11":{},"119-4":{},"120-4":{},"121-4":{},"128-4":{},"129-4":{},"130-5":{},"131-5":{},"131-6":{}},"name":{},"text":{"4":{},"6":{},"7":{},"8":{},"9":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"22":{},"26":{},"29":{},"30":{},"32":{},"41":{},"42":{},"46":{},"55":{},"59":{},"61":{},"62":{},"70":{},"72":{},"77":{},"80":{},"81":{},"84":{},"85":{},"87":{},"90":{},"92":{},"94":{},"96":{},"98":{},"99":{},"101":{},"102":{},"103":{},"104":{},"106":{},"109":{},"112":{},"114":{},"116":{},"117":{},"118":{},"128":{},"129":{},"134":{},"146":{},"149":{},"151":{},"152":{},"160":{},"162":{},"167":{},"171":{},"172":{},"175":{},"176":{},"178":{}},"component":{}}],["switch@0",{"_index":4754,"title":{},"name":{},"text":{"59":{},"60":{},"73":{},"75":{},"149":{},"150":{},"163":{},"166":{}},"component":{}}],["switchcor",{"_index":2239,"title":{},"name":{},"text":{"32":{},"118":{}},"component":{}}],["switchdev",{"_index":176,"title":{},"name":{},"text":{"4":{},"18":{},"31":{},"32":{},"34":{},"37":{},"41":{},"42":{},"43":{},"85":{},"90":{},"103":{},"118":{},"119":{},"120":{},"121":{},"128":{},"129":{},"130":{},"131":{},"141":{},"176":{}},"component":{}}],["switchdev/all/igmp",{"_index":2218,"title":{},"name":{},"text":{"31":{},"33":{},"34":{},"37":{},"119":{},"120":{},"121":{},"122":{}},"component":{}}],["switchdev/dsa",{"_index":6455,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["switchdev/lan966x",{"_index":2214,"title":{},"name":{},"text":{"31":{},"34":{},"119":{},"121":{}},"component":{}}],["switchdev/lan966x/psfp",{"_index":2211,"title":{},"name":{},"text":{"31":{},"34":{},"119":{},"121":{}},"component":{}}],["switchid",{"_index":1439,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["swoftwar",{"_index":4447,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["swp/swpb",{"_index":5253,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["sy",{"_index":3961,"title":{},"name":{},"text":{"52":{},"68":{},"142":{},"158":{}},"component":{}}],["symbol",{"_index":2180,"title":{},"name":{},"text":{"30":{},"116":{}},"component":{}}],["symmetr",{"_index":1366,"title":{},"name":{},"text":{"15":{},"46":{},"55":{},"62":{},"72":{},"99":{},"134":{},"146":{},"152":{},"162":{}},"component":{}}],["symreg",{"_index":2182,"title":{},"name":{},"text":{"30":{},"45":{},"116":{},"133":{}},"component":{}}],["symreg_sparx5",{"_index":2183,"title":{},"name":{},"text":{"30":{},"116":{}},"component":{}}],["sync",{"_index":5354,"title":{},"name":{},"text":{"60":{},"68":{},"74":{},"75":{},"112":{},"150":{},"158":{},"164":{},"166":{}},"component":{}}],["sync=no",{"_index":5397,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["synchron",{"_index":1941,"title":{},"name":{},"text":{"27":{},"47":{},"49":{},"63":{},"65":{},"112":{},"135":{},"136":{},"153":{},"154":{}},"component":{}}],["syncreceipttimeout",{"_index":2005,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["synopsi",{"_index":5327,"title":{},"name":{},"text":{"60":{},"74":{},"75":{},"150":{},"164":{},"166":{}},"component":{}}],["syntax",{"_index":1157,"title":{"84-9":{},"175-8":{}},"name":{},"text":{"14":{},"84":{},"85":{},"101":{},"175":{},"176":{}},"component":{}}],["sys/bus/i2c/devic",{"_index":3426,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["sys/bus/i2c/devices/0",{"_index":3449,"title":{},"name":{},"text":{"49":{},"136":{}},"component":{}}],["sys/bus/i2c/devices/i2c",{"_index":5573,"title":{},"name":{},"text":{"65":{},"154":{}},"component":{}}],["sys/bus/nvmem/devices/lan9662",{"_index":5638,"title":{},"name":{},"text":{"67":{},"157":{}},"component":{}}],["sys/bus/nvmem/devices/microchip",{"_index":3710,"title":{},"name":{},"text":{"51":{},"139":{}},"component":{}}],["sys/bus/spi/devices/spi0.0/modalia",{"_index":5771,"title":{},"name":{},"text":{"71":{},"161":{}},"component":{}}],["sys/class/gpio",{"_index":3962,"title":{},"name":{},"text":{"52":{},"68":{},"142":{},"158":{}},"component":{}}],["sys/class/gpio/export",{"_index":3964,"title":{},"name":{},"text":{"52":{},"68":{},"142":{},"158":{}},"component":{}}],["sys/class/gpio/gpio51/direct",{"_index":3973,"title":{},"name":{},"text":{"52":{},"68":{},"142":{},"158":{}},"component":{}}],["sys/class/gpio/gpio51/valu",{"_index":3972,"title":{},"name":{},"text":{"52":{},"68":{},"142":{},"158":{}},"component":{}}],["sys/class/gpio/gpiox/direct",{"_index":3965,"title":{},"name":{},"text":{"52":{},"68":{},"142":{},"158":{}},"component":{}}],["sys/class/gpio/gpiox/valu",{"_index":3966,"title":{},"name":{},"text":{"52":{},"68":{},"142":{},"158":{}},"component":{}}],["sys/class/gpio/unexport",{"_index":3968,"title":{},"name":{},"text":{"52":{},"68":{},"142":{},"158":{}},"component":{}}],["sys/class/l",{"_index":5752,"title":{},"name":{},"text":{"70":{},"160":{}},"component":{}}],["sys/class/leds/mmc0",{"_index":5761,"title":{},"name":{},"text":{"70":{},"160":{}},"component":{}}],["sys/class/leds/s6:green",{"_index":5760,"title":{},"name":{},"text":{"70":{},"160":{}},"component":{}}],["sys/class/leds/s6:green/bright",{"_index":5763,"title":{},"name":{},"text":{"70":{},"160":{}},"component":{}}],["sys/class/leds/s6:yellow",{"_index":5754,"title":{},"name":{},"text":{"70":{},"160":{}},"component":{}}],["sys/class/leds/s7:green",{"_index":5753,"title":{},"name":{},"text":{"70":{},"160":{}},"component":{}}],["sys/class/leds/s7:yellow",{"_index":5755,"title":{},"name":{},"text":{"70":{},"160":{}},"component":{}}],["sys/class/leds/s8:green",{"_index":5757,"title":{},"name":{},"text":{"70":{},"160":{}},"component":{}}],["sys/class/leds/s8:yellow",{"_index":5756,"title":{},"name":{},"text":{"70":{},"160":{}},"component":{}}],["sys/class/leds/s9:green",{"_index":5759,"title":{},"name":{},"text":{"70":{},"160":{}},"component":{}}],["sys/class/leds/s9:yellow",{"_index":5758,"title":{},"name":{},"text":{"70":{},"160":{}},"component":{}}],["sys/class/misc/tfa_ctl",{"_index":4489,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["sys/class/misc/tfa_ctl/fw_bind_trigg",{"_index":4526,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["sys/class/misc/tfa_ctl/sjtag_statu",{"_index":4502,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["sys/class/misc/tfa_ctl/sjtag_unlock",{"_index":4514,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["sys/class/udc",{"_index":4613,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["sys/kernel/debug",{"_index":2179,"title":{},"name":{},"text":{"30":{},"50":{},"52":{},"66":{},"116":{},"138":{},"142":{},"156":{}},"component":{}}],["sys/kernel/debug/lan966x/eth0/fp",{"_index":821,"title":{},"name":{},"text":{"10":{},"97":{}},"component":{}}],["sys/kernel/debug/lan966x/port",{"_index":2156,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["sys/kernel/debug/lan966x/qos_show",{"_index":1828,"title":{},"name":{},"text":{"23":{},"111":{}},"component":{}}],["sys/kernel/debug/lan966x/vcaps/is1_0",{"_index":2140,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["sys/kernel/debug/lan966x/vcaps/raw_is1_0",{"_index":2145,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["sys/kernel/debug/mmc0/io",{"_index":3547,"title":{},"name":{},"text":{"50":{},"52":{},"66":{},"138":{},"142":{},"156":{}},"component":{}}],["sys/kernel/debug/pinctrl/pinctrl",{"_index":5679,"title":{},"name":{},"text":{"68":{},"70":{},"158":{},"160":{}},"component":{}}],["sys/kernel/debug/usb/300000.usb_dwc3/mod",{"_index":5896,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["sysctl",{"_index":5268,"title":{},"name":{},"text":{"59":{},"73":{},"149":{},"163":{}},"component":{}}],["sysf",{"_index":3706,"title":{"52-10":{},"68-10":{},"142-9":{},"158-9":{}},"name":{},"text":{"51":{},"52":{},"56":{},"67":{},"68":{},"70":{},"71":{},"139":{},"142":{},"147":{},"157":{},"158":{},"160":{},"161":{}},"component":{}}],["syslogd",{"_index":5266,"title":{},"name":{},"text":{"59":{},"73":{},"149":{},"163":{}},"component":{}}],["system",{"_index":325,"title":{"8-3":{},"60-11":{},"60-12":{},"95-2":{},"150-10":{},"150-11":{},"165-8":{}},"name":{},"text":{"4":{},"8":{},"9":{},"13":{},"14":{},"18":{},"27":{},"28":{},"32":{},"43":{},"46":{},"50":{},"52":{},"53":{},"55":{},"57":{},"60":{},"61":{},"62":{},"66":{},"68":{},"69":{},"72":{},"74":{},"75":{},"80":{},"85":{},"90":{},"95":{},"96":{},"101":{},"102":{},"103":{},"112":{},"115":{},"116":{},"118":{},"130":{},"134":{},"138":{},"141":{},"142":{},"143":{},"146":{},"148":{},"150":{},"151":{},"152":{},"156":{},"158":{},"159":{},"162":{},"164":{},"165":{},"166":{},"171":{},"176":{}},"component":{}}],["systemd",{"_index":4638,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["t",{"_index":1393,"title":{},"name":{},"text":{"15":{},"49":{},"50":{},"52":{},"56":{},"57":{},"61":{},"66":{},"77":{},"80":{},"99":{},"136":{},"138":{},"142":{},"147":{},"148":{},"151":{},"156":{},"167":{},"171":{}},"component":{}}],["ta",{"_index":2298,"title":{"36-7":{},"124-6":{}},"name":{},"text":{"36":{},"43":{},"85":{},"124":{},"130":{},"176":{}},"component":{}}],["tab",{"_index":6068,"title":{},"name":{},"text":{"79":{},"170":{}},"component":{}}],["tabl",{"_index":126,"title":{"4-4":{},"90-3":{}},"name":{},"text":{"2":{},"4":{},"46":{},"47":{},"49":{},"50":{},"52":{},"53":{},"54":{},"55":{},"58":{},"59":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"68":{},"69":{},"71":{},"72":{},"73":{},"74":{},"77":{},"78":{},"79":{},"80":{},"81":{},"82":{},"83":{},"84":{},"87":{},"88":{},"90":{},"134":{},"135":{},"136":{},"138":{},"142":{},"143":{},"144":{},"145":{},"146":{},"149":{},"151":{},"152":{},"153":{},"154":{},"155":{},"156":{},"158":{},"159":{},"161":{},"162":{},"163":{},"164":{},"167":{},"169":{},"170":{},"171":{},"172":{},"173":{},"174":{},"175":{},"178":{}},"component":{}}],["tacho_a",{"_index":3844,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["tacho_b",{"_index":3895,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["tag",{"_index":84,"title":{"172":{},"174":{},"2-4":{},"81-1":{},"83-1":{},"83-2":{},"88-3":{},"174-1":{}},"name":{},"text":{"2":{},"4":{},"9":{},"12":{},"15":{},"17":{},"40":{},"41":{},"42":{},"43":{},"51":{},"55":{},"67":{},"72":{},"81":{},"82":{},"83":{},"84":{},"85":{},"86":{},"87":{},"88":{},"90":{},"96":{},"98":{},"99":{},"106":{},"127":{},"128":{},"129":{},"130":{},"131":{},"139":{},"146":{},"157":{},"162":{},"172":{},"173":{},"174":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["tag(",{"_index":6409,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["tag:12",{"_index":3740,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["taglesspacket",{"_index":939,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["tai",{"_index":1813,"title":{},"name":{},"text":{"23":{},"86":{},"111":{},"177":{}},"component":{}}],["tail",{"_index":1171,"title":{},"name":{},"text":{"14":{},"56":{},"59":{},"60":{},"73":{},"75":{},"101":{},"147":{},"149":{},"150":{},"163":{},"166":{}},"component":{}}],["take",{"_index":1298,"title":{},"name":{},"text":{"14":{},"46":{},"50":{},"54":{},"55":{},"56":{},"62":{},"66":{},"74":{},"79":{},"84":{},"101":{},"131":{},"134":{},"138":{},"144":{},"146":{},"147":{},"152":{},"156":{},"164":{},"165":{},"170":{},"175":{}},"component":{}}],["take_no_seq",{"_index":913,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["takenosequ",{"_index":933,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["talk",{"_index":1664,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["tamper",{"_index":4410,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{},"165":{}},"component":{}}],["taprio",{"_index":1898,"title":{"85-7":{},"176-7":{}},"name":{},"text":{"26":{},"28":{},"36":{},"85":{},"114":{},"115":{},"124":{},"176":{}},"component":{}}],["taptio",{"_index":2320,"title":{},"name":{},"text":{"36":{},"124":{}},"component":{}}],["tar",{"_index":1114,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["tar.gz",{"_index":2703,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"141":{},"152":{}},"component":{}}],["tarbal",{"_index":2739,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["target",{"_index":25,"title":{"76-2":{},"76-3":{},"76-4":{},"168-1":{},"168-2":{},"168-3":{}},"name":{},"text":{"1":{},"13":{},"14":{},"46":{},"54":{},"55":{},"57":{},"62":{},"72":{},"76":{},"79":{},"84":{},"89":{},"101":{},"102":{},"134":{},"144":{},"146":{},"148":{},"152":{},"162":{},"168":{},"170":{},"175":{}},"component":{}}],["tb",{"_index":4149,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["tbbr",{"_index":3202,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"72":{},"134":{},"146":{},"152":{},"162":{}},"component":{}}],["tbf",{"_index":2029,"title":{"28-4":{},"36-8":{},"85-10":{},"115-3":{},"124-7":{},"176-10":{}},"name":{},"text":{"28":{},"36":{},"85":{},"115":{},"124":{},"176":{}},"component":{}}],["tc",{"_index":353,"title":{"85":{},"175":{},"176":{},"84-1":{},"84-6":{},"84-7":{},"84-8":{},"84-9":{},"85-2":{},"85-14":{},"175-5":{},"175-6":{},"175-7":{},"175-8":{},"176-2":{},"176-14":{}},"name":{"81":{},"82":{},"83":{},"84":{},"85":{},"86":{},"87":{},"172":{},"173":{},"174":{},"175":{},"176":{},"177":{},"178":{}},"text":{"4":{},"9":{},"12":{},"15":{},"18":{},"22":{},"23":{},"26":{},"28":{},"29":{},"30":{},"36":{},"38":{},"43":{},"81":{},"82":{},"84":{},"85":{},"86":{},"87":{},"90":{},"96":{},"98":{},"99":{},"103":{},"109":{},"111":{},"114":{},"115":{},"116":{},"117":{},"124":{},"125":{},"130":{},"172":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["tc_spanning_tre",{"_index":1993,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["tcam",{"_index":730,"title":{"36-6":{},"124-5":{}},"name":{},"text":{"9":{},"36":{},"43":{},"84":{},"85":{},"96":{},"124":{},"130":{},"175":{},"176":{}},"component":{}}],["tcp",{"_index":4984,"title":{},"name":{},"text":{"59":{},"82":{},"84":{},"85":{},"86":{},"87":{},"149":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["tcp/udp",{"_index":6517,"title":{},"name":{},"text":{"86":{},"87":{},"177":{},"178":{}},"component":{}}],["tcp_flag",{"_index":6317,"title":{},"name":{},"text":{"82":{},"87":{},"173":{},"178":{}},"component":{}}],["tcp_listen_portaddr_hash",{"_index":4981,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["tcpdump",{"_index":2174,"title":{},"name":{},"text":{"30":{},"116":{}},"component":{}}],["technic",{"_index":1711,"title":{},"name":{},"text":{"18":{},"103":{}},"component":{}}],["technolog",{"_index":4280,"title":{},"name":{},"text":{"55":{},"72":{},"73":{},"146":{},"162":{},"163":{}},"component":{}}],["tee",{"_index":4444,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["tell",{"_index":1319,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["temp",{"_index":3170,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["temperatur",{"_index":5376,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["templat",{"_index":873,"title":{},"name":{},"text":{"12":{},"29":{},"51":{},"55":{},"67":{},"72":{},"82":{},"84":{},"85":{},"86":{},"87":{},"98":{},"117":{},"139":{},"146":{},"157":{},"162":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["temporari",{"_index":3016,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"72":{},"134":{},"146":{},"152":{},"162":{}},"component":{}}],["temporarili",{"_index":1374,"title":{},"name":{},"text":{"15":{},"46":{},"62":{},"99":{},"134":{},"152":{}},"component":{}}],["term",{"_index":996,"title":{"14-2":{},"39-4":{},"46-54":{},"55-50":{},"62-53":{},"72-42":{},"101-1":{},"126-3":{},"134-53":{},"146-49":{},"152-52":{},"162-41":{}},"name":{},"text":{"14":{},"46":{},"55":{},"59":{},"62":{},"72":{},"85":{},"101":{},"134":{},"146":{},"149":{},"152":{},"162":{},"176":{}},"component":{}}],["termhub",{"_index":4068,"title":{},"name":{},"text":{"54":{},"79":{},"144":{},"170":{}},"component":{}}],["termin",{"_index":608,"title":{},"name":{},"text":{"6":{},"14":{},"46":{},"55":{},"56":{},"62":{},"94":{},"101":{},"134":{},"146":{},"147":{},"152":{}},"component":{}}],["terminolog",{"_index":1710,"title":{"18-1":{},"85-2":{},"103-1":{},"176-2":{}},"name":{},"text":{"18":{},"46":{},"62":{},"103":{},"134":{},"152":{}},"component":{}}],["ternari",{"_index":6354,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["tesla",{"_index":6055,"title":{},"name":{},"text":{"78":{},"169":{}},"component":{}}],["test",{"_index":635,"title":{"45-12":{},"45-13":{},"48-10":{},"48-11":{},"133-11":{},"133-12":{},"137-9":{},"137-10":{}},"name":{},"text":{"6":{},"10":{},"14":{},"37":{},"45":{},"46":{},"49":{},"50":{},"51":{},"53":{},"55":{},"57":{},"58":{},"59":{},"60":{},"62":{},"66":{},"67":{},"69":{},"72":{},"75":{},"94":{},"97":{},"101":{},"112":{},"120":{},"133":{},"134":{},"136":{},"138":{},"139":{},"143":{},"145":{},"146":{},"148":{},"149":{},"150":{},"152":{},"156":{},"157":{},"159":{},"162":{},"166":{}},"component":{}}],["testptp",{"_index":6580,"title":{"112-11":{}},"name":{},"text":{"112":{}},"component":{}}],["texinfo",{"_index":1081,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["text",{"_index":903,"title":{"59-11":{},"59-12":{},"149-10":{},"149-11":{}},"name":{},"text":{"12":{},"46":{},"55":{},"59":{},"62":{},"72":{},"98":{},"134":{},"146":{},"149":{},"152":{},"162":{}},"component":{}}],["tf",{"_index":2439,"title":{"46-11":{},"46-12":{},"46-13":{},"54-4":{},"55-3":{},"55-4":{},"55-7":{},"55-20":{},"55-27":{},"55-32":{},"62-11":{},"62-12":{},"62-13":{},"72-3":{},"72-4":{},"72-7":{},"72-20":{},"72-27":{},"79-4":{},"134-10":{},"134-11":{},"134-12":{},"144-3":{},"146-2":{},"146-3":{},"146-6":{},"146-19":{},"146-26":{},"146-31":{},"152-10":{},"152-11":{},"152-12":{},"162-2":{},"162-3":{},"162-6":{},"162-19":{},"162-26":{},"170-3":{}},"name":{},"text":{"45":{},"46":{},"51":{},"54":{},"55":{},"62":{},"67":{},"72":{},"79":{},"133":{},"134":{},"139":{},"144":{},"146":{},"152":{},"157":{},"162":{},"170":{}},"component":{}}],["tfa",{"_index":2357,"title":{"46-15":{},"46-18":{},"62-15":{},"62-18":{},"134-14":{},"134-17":{},"152-14":{},"152-17":{}},"name":{"55":{},"72":{},"146":{},"162":{}},"text":{"38":{},"46":{},"54":{},"56":{},"62":{},"125":{},"134":{},"144":{},"147":{},"152":{},"165":{}},"component":{}}],["tfa_ctl",{"_index":4478,"title":{"56":{},"147":{},"56-1":{},"56-5":{},"147-4":{}},"name":{"56":{},"147":{}},"text":{"56":{},"147":{}},"component":{}}],["tftp",{"_index":2766,"title":{},"name":{},"text":{"46":{},"59":{},"61":{},"62":{},"80":{},"134":{},"149":{},"151":{},"152":{},"171":{}},"component":{}}],["tftpboot",{"_index":2853,"title":{},"name":{},"text":{"46":{},"62":{},"80":{},"134":{},"152":{},"171":{}},"component":{}}],["tftproot",{"_index":6211,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["th",{"_index":3417,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"71":{},"136":{},"145":{},"149":{},"161":{}},"component":{}}],["theori",{"_index":4471,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["therebi",{"_index":2641,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["therefor",{"_index":898,"title":{},"name":{},"text":{"12":{},"14":{},"16":{},"26":{},"27":{},"32":{},"46":{},"51":{},"54":{},"55":{},"62":{},"67":{},"72":{},"79":{},"98":{},"101":{},"104":{},"112":{},"114":{},"118":{},"134":{},"139":{},"141":{},"144":{},"146":{},"152":{},"157":{},"162":{},"170":{}},"component":{}}],["third",{"_index":1324,"title":{},"name":{},"text":{"14":{},"29":{},"54":{},"79":{},"84":{},"86":{},"87":{},"101":{},"117":{},"144":{},"170":{},"175":{},"177":{},"178":{}},"component":{}}],["thorough",{"_index":6516,"title":{},"name":{},"text":{"86":{},"87":{},"177":{},"178":{}},"component":{}}],["those",{"_index":1160,"title":{},"name":{},"text":{"14":{},"101":{},"165":{}},"component":{}}],["though",{"_index":3727,"title":{},"name":{},"text":{"51":{},"67":{},"87":{},"139":{},"157":{},"178":{}},"component":{}}],["thread",{"_index":4903,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["three",{"_index":629,"title":{},"name":{},"text":{"6":{},"47":{},"49":{},"53":{},"63":{},"65":{},"84":{},"94":{},"135":{},"136":{},"143":{},"153":{},"154":{},"175":{}},"component":{}}],["threshold",{"_index":1378,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["through",{"_index":714,"title":{},"name":{},"text":{"8":{},"9":{},"13":{},"15":{},"16":{},"18":{},"19":{},"46":{},"57":{},"62":{},"95":{},"99":{},"102":{},"103":{},"104":{},"105":{},"134":{},"148":{},"152":{}},"component":{}}],["throughout",{"_index":1011,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["throughput",{"_index":372,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["thu",{"_index":3636,"title":{},"name":{},"text":{"50":{},"66":{},"84":{},"138":{},"156":{},"175":{}},"component":{}}],["thumbe",{"_index":5251,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["ti",{"_index":6775,"title":{},"name":{},"text":{"165":{}},"component":{}}],["till",{"_index":4082,"title":{},"name":{},"text":{"54":{},"79":{},"144":{},"170":{}},"component":{}}],["time",{"_index":193,"title":{"26-4":{},"114-3":{}},"name":{},"text":{"4":{},"10":{},"14":{},"15":{},"17":{},"19":{},"23":{},"26":{},"27":{},"29":{},"35":{},"36":{},"43":{},"46":{},"50":{},"51":{},"52":{},"55":{},"60":{},"62":{},"65":{},"66":{},"67":{},"72":{},"73":{},"75":{},"77":{},"80":{},"81":{},"85":{},"86":{},"90":{},"97":{},"99":{},"101":{},"105":{},"106":{},"111":{},"112":{},"114":{},"117":{},"123":{},"124":{},"130":{},"134":{},"138":{},"139":{},"142":{},"146":{},"150":{},"152":{},"154":{},"156":{},"157":{},"162":{},"163":{},"166":{},"167":{},"171":{},"172":{},"176":{},"177":{}},"component":{}}],["time=0.257",{"_index":284,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["time=0.266",{"_index":286,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["time=0.270",{"_index":282,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["time=0.325",{"_index":1344,"title":{},"name":{},"text":{"15":{},"19":{},"99":{},"105":{}},"component":{}}],["time=0.334",{"_index":1343,"title":{},"name":{},"text":{"15":{},"19":{},"99":{},"105":{}},"component":{}}],["time=0.337",{"_index":1345,"title":{},"name":{},"text":{"15":{},"19":{},"99":{},"105":{}},"component":{}}],["time=0.629",{"_index":1342,"title":{},"name":{},"text":{"15":{},"19":{},"99":{},"105":{}},"component":{}}],["time=0.700",{"_index":279,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["time_stamp",{"_index":1978,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["timeout",{"_index":2791,"title":{},"name":{},"text":{"46":{},"60":{},"62":{},"75":{},"134":{},"150":{},"152":{},"166":{}},"component":{}}],["timer",{"_index":590,"title":{},"name":{},"text":{"6":{},"46":{},"59":{},"60":{},"62":{},"75":{},"94":{},"134":{},"149":{},"150":{},"152":{},"166":{}},"component":{}}],["timer(",{"_index":4865,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["timescal",{"_index":1900,"title":{},"name":{},"text":{"26":{},"85":{},"114":{},"176":{}},"component":{}}],["timestamp",{"_index":1949,"title":{},"name":{},"text":{"27":{},"31":{},"33":{},"34":{},"37":{},"112":{},"119":{},"120":{},"121":{},"122":{}},"component":{}}],["timestamp_bits=30",{"_index":5007,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["tini",{"_index":809,"title":{},"name":{},"text":{"10":{},"30":{},"97":{},"116":{}},"component":{}}],["tinyf",{"_index":5465,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["tlb",{"_index":4956,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["tlldpd",{"_index":814,"title":{},"name":{},"text":{"10":{},"97":{}},"component":{}}],["tllpd",{"_index":2170,"title":{},"name":{},"text":{"30":{},"116":{}},"component":{}}],["tlv",{"_index":690,"title":{},"name":{},"text":{"7":{},"92":{}},"component":{}}],["tmp",{"_index":4508,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["tmp/config",{"_index":4594,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["tmp/config/usb_gadget/my_gadget",{"_index":4595,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["tmp/ext",{"_index":3632,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["tmp/ext/t1.txt",{"_index":3698,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["tmp/ext/t6.txt",{"_index":3644,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["tmp/key",{"_index":6767,"title":{},"name":{},"text":{"165":{}},"component":{}}],["tmp/keys/dev.crt",{"_index":6740,"title":{},"name":{},"text":{"165":{}},"component":{}}],["tmp/keys/dev.key",{"_index":6736,"title":{},"name":{},"text":{"165":{}},"component":{}}],["tmp/linux.cfg",{"_index":1985,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["tmp/lldpad.conf",{"_index":1389,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tmp/ptp0.cfg",{"_index":2009,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["tmp/ptp1.cfg",{"_index":2011,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["tmp/ptp4l.cfg",{"_index":6597,"title":{},"name":{},"text":{"112":{}},"component":{}}],["tmp/ts2phc.cfg",{"_index":6591,"title":{},"name":{},"text":{"112":{}},"component":{}}],["tmp:exec",{"_index":1277,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["tmpf",{"_index":1276,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["to",{"_index":4151,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["to=root",{"_index":5382,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["toc",{"_index":4551,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["tod",{"_index":6598,"title":{},"name":{},"text":{"112":{}},"component":{}}],["togeth",{"_index":7,"title":{},"name":{},"text":{"1":{},"12":{},"14":{},"18":{},"46":{},"61":{},"62":{},"89":{},"98":{},"101":{},"103":{},"134":{},"151":{},"152":{}},"component":{}}],["token",{"_index":2321,"title":{},"name":{},"text":{"36":{},"85":{},"124":{},"176":{}},"component":{}}],["tool",{"_index":501,"title":{"116":{},"117":{},"12-4":{},"29-1":{},"29-2":{},"30-1":{},"30-2":{},"98-3":{},"116-1":{},"116-2":{},"117-1":{}},"name":{},"text":{"4":{},"10":{},"12":{},"13":{},"14":{},"15":{},"18":{},"29":{},"30":{},"32":{},"36":{},"46":{},"51":{},"54":{},"55":{},"62":{},"65":{},"67":{},"72":{},"79":{},"80":{},"90":{},"97":{},"98":{},"99":{},"101":{},"102":{},"103":{},"116":{},"117":{},"118":{},"124":{},"131":{},"134":{},"139":{},"141":{},"144":{},"146":{},"152":{},"154":{},"157":{},"162":{},"165":{},"170":{},"171":{}},"component":{}}],["toolchain",{"_index":998,"title":{"14-6":{},"14-19":{},"101-5":{},"101-18":{}},"name":{},"text":{"14":{},"18":{},"101":{},"103":{}},"component":{}}],["tools_overview",{"_index":2166,"title":{},"name":{"30":{},"116":{}},"text":{},"component":{}}],["top",{"_index":1944,"title":{},"name":{},"text":{"27":{},"32":{},"112":{},"118":{},"165":{}},"component":{}}],["topic",{"_index":6769,"title":{},"name":{},"text":{"165":{}},"component":{}}],["topolog",{"_index":495,"title":{},"name":{},"text":{"4":{},"6":{},"16":{},"90":{},"94":{},"104":{}},"component":{}}],["topology_change_ack",{"_index":1419,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tort",{"_index":4474,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["total",{"_index":1917,"title":{},"name":{},"text":{"26":{},"46":{},"50":{},"56":{},"59":{},"60":{},"62":{},"73":{},"74":{},"80":{},"85":{},"112":{},"114":{},"134":{},"138":{},"147":{},"149":{},"150":{},"152":{},"163":{},"164":{},"165":{},"171":{},"176":{}},"component":{}}],["touch",{"_index":6701,"title":{},"name":{},"text":{"141":{}},"component":{}}],["toward",{"_index":860,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["tp",{"_index":693,"title":{},"name":{},"text":{"7":{},"15":{},"92":{},"99":{}},"component":{}}],["trace",{"_index":2530,"title":{"46-5":{},"62-5":{},"134-4":{},"152-4":{}},"name":{},"text":{"46":{},"51":{},"55":{},"59":{},"62":{},"67":{},"72":{},"75":{},"134":{},"139":{},"146":{},"149":{},"152":{},"157":{},"162":{},"166":{}},"component":{}}],["tradit",{"_index":6448,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["traffic",{"_index":357,"title":{},"name":{},"text":{"4":{},"6":{},"10":{},"12":{},"15":{},"16":{},"22":{},"26":{},"28":{},"33":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"82":{},"85":{},"86":{},"87":{},"90":{},"94":{},"97":{},"98":{},"99":{},"104":{},"109":{},"114":{},"115":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"173":{},"176":{},"177":{},"178":{}},"component":{}}],["transact",{"_index":4115,"title":{},"name":{},"text":{"55":{},"72":{},"79":{},"146":{},"162":{},"170":{}},"component":{}}],["transceiv",{"_index":1372,"title":{},"name":{},"text":{"15":{},"47":{},"48":{},"49":{},"63":{},"65":{},"99":{},"135":{},"136":{},"137":{},"153":{},"154":{}},"component":{}}],["transfer",{"_index":2872,"title":{},"name":{},"text":{"46":{},"53":{},"55":{},"58":{},"59":{},"62":{},"72":{},"80":{},"134":{},"143":{},"145":{},"146":{},"149":{},"152":{},"162":{},"171":{}},"component":{}}],["transform",{"_index":4138,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["translat",{"_index":4954,"title":{},"name":{},"text":{"59":{},"74":{},"149":{},"164":{}},"component":{}}],["transmiss",{"_index":450,"title":{"7-7":{},"92-6":{}},"name":{},"text":{"4":{},"7":{},"15":{},"26":{},"28":{},"36":{},"46":{},"62":{},"85":{},"90":{},"92":{},"99":{},"114":{},"115":{},"124":{},"134":{},"152":{},"176":{}},"component":{}}],["transmit",{"_index":290,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"10":{},"12":{},"15":{},"19":{},"26":{},"28":{},"46":{},"62":{},"81":{},"84":{},"85":{},"90":{},"92":{},"94":{},"97":{},"98":{},"99":{},"105":{},"114":{},"115":{},"134":{},"152":{},"172":{},"175":{},"176":{}},"component":{}}],["transmitt",{"_index":777,"title":{},"name":{},"text":{"10":{},"12":{},"15":{},"46":{},"55":{},"62":{},"64":{},"72":{},"97":{},"98":{},"99":{},"134":{},"146":{},"152":{},"155":{},"162":{}},"component":{}}],["transpar",{"_index":1933,"title":{"27-5":{},"112-4":{}},"name":{},"text":{"27":{},"55":{},"72":{},"112":{},"146":{},"162":{}},"component":{}}],["transport",{"_index":1950,"title":{},"name":{},"text":{"27":{},"59":{},"112":{},"149":{}},"component":{}}],["transportspecif",{"_index":1998,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["trap",{"_index":6428,"title":{},"name":{},"text":{"84":{},"85":{},"87":{},"175":{},"176":{},"178":{}},"component":{}}],["treat",{"_index":729,"title":{},"name":{},"text":{"9":{},"55":{},"72":{},"84":{},"96":{},"146":{},"162":{},"175":{}},"component":{}}],["tree",{"_index":14,"title":{"4-8":{},"55-15":{},"72-15":{},"90-7":{},"146-14":{},"162-14":{}},"name":{},"text":{"1":{},"4":{},"12":{},"14":{},"17":{},"32":{},"38":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"77":{},"80":{},"85":{},"89":{},"90":{},"98":{},"101":{},"106":{},"118":{},"125":{},"130":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"141":{},"142":{},"143":{},"145":{},"146":{},"147":{},"148":{},"149":{},"150":{},"151":{},"152":{},"153":{},"154":{},"155":{},"156":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"171":{},"176":{}},"component":{}}],["tree(",{"_index":2745,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["tri",{"_index":364,"title":{},"name":{},"text":{"4":{},"14":{},"26":{},"46":{},"52":{},"55":{},"59":{},"62":{},"68":{},"72":{},"73":{},"90":{},"101":{},"114":{},"134":{},"142":{},"146":{},"149":{},"152":{},"158":{},"162":{},"163":{},"165":{}},"component":{}}],["tricki",{"_index":4408,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["trigger",{"_index":4087,"title":{},"name":{},"text":{"54":{},"56":{},"79":{},"144":{},"147":{},"170":{}},"component":{}}],["trim",{"_index":3794,"title":{"55-42":{},"72-34":{},"146-41":{},"162-33":{}},"name":{},"text":{"51":{},"55":{},"67":{},"72":{},"139":{},"146":{},"157":{},"162":{}},"component":{}}],["trivial",{"_index":3205,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["truncat",{"_index":4547,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["trust",{"_index":127,"title":{"55-24":{},"55-25":{},"72-24":{},"72-25":{},"146-23":{},"146-24":{},"162-23":{},"162-24":{},"165-2":{}},"name":{},"text":{"2":{},"38":{},"46":{},"51":{},"55":{},"62":{},"67":{},"72":{},"75":{},"88":{},"125":{},"134":{},"139":{},"146":{},"152":{},"157":{},"162":{},"165":{},"166":{}},"component":{}}],["trusted_boot_fw_cert",{"_index":4215,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["trusted_boot_fw_cert_id",{"_index":4154,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["trusted_key_cert",{"_index":4216,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["trusted_key_cert_id",{"_index":4156,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["trusted_nv_ctr",{"_index":4292,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["trusted_os_fw_content_cert",{"_index":4244,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["trusted_os_fw_content_cert_id",{"_index":4159,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["trusted_os_fw_content_cert_priv_key",{"_index":4228,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["trusted_os_fw_content_cert_pub_key",{"_index":4229,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["trusted_os_fw_key_cert",{"_index":4230,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["trusted_os_fw_key_cert_id",{"_index":4157,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["trusted_world",{"_index":4175,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["trusted_world_key",{"_index":4242,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["trusted|nontrust",{"_index":3716,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["trustzon",{"_index":4112,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["ts2phc",{"_index":1964,"title":{"112-10":{}},"name":{},"text":{"27":{},"112":{}},"component":{}}],["ts2phc.channel",{"_index":6590,"title":{},"name":{},"text":{"112":{}},"component":{}}],["ts2phc.master",{"_index":6589,"title":{},"name":{},"text":{"112":{}},"component":{}}],["ts2phc.pin_index",{"_index":6585,"title":{},"name":{},"text":{"112":{}},"component":{}}],["ts2phc.pulsewidth",{"_index":6584,"title":{},"name":{},"text":{"112":{}},"component":{}}],["tsn",{"_index":2591,"title":{},"name":{},"text":{"46":{},"61":{},"77":{},"134":{},"151":{},"167":{}},"component":{}}],["tsn/qo",{"_index":6615,"title":{},"name":{},"text":{"131":{}},"component":{}}],["tst_trk",{"_index":3785,"title":{},"name":{},"text":{"51":{},"55":{},"67":{},"72":{},"139":{},"146":{},"157":{},"162":{}},"component":{}}],["tti",{"_index":4067,"title":{},"name":{},"text":{"54":{},"57":{},"59":{},"73":{},"79":{},"144":{},"148":{},"149":{},"163":{},"170":{}},"component":{}}],["ttl",{"_index":5275,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["ttl232r",{"_index":5288,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["ttl=64",{"_index":278,"title":{},"name":{},"text":{"4":{},"15":{},"19":{},"90":{},"99":{},"105":{}},"component":{}}],["ttyacm0",{"_index":4633,"title":{},"name":{},"text":{"57":{},"59":{},"148":{},"149":{}},"component":{}}],["ttyacm1",{"_index":5842,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["ttygs0",{"_index":4636,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["ttygs0::respawn:/sbin/getti",{"_index":4635,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["ttys0",{"_index":5033,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["ttys1",{"_index":5042,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["ttyusb1",{"_index":5297,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["ttyusbx",{"_index":5278,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["tune",{"_index":513,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["tunnel",{"_index":5234,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["tuppl",{"_index":319,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["turn",{"_index":2292,"title":{},"name":{},"text":{"35":{},"36":{},"55":{},"70":{},"72":{},"74":{},"123":{},"124":{},"146":{},"160":{},"162":{},"164":{}},"component":{}}],["tweak",{"_index":4171,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["twi",{"_index":3217,"title":{},"name":{},"text":{"47":{},"49":{},"63":{},"68":{},"135":{},"136":{},"153":{},"158":{}},"component":{}}],["twi(two",{"_index":3213,"title":{},"name":{},"text":{"47":{},"49":{},"65":{},"135":{},"136":{},"154":{}},"component":{}}],["twi_slc_gat",{"_index":3889,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["twi_slc_gate_ad",{"_index":3865,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["twice",{"_index":6550,"title":{},"name":{},"text":{"87":{},"178":{}},"component":{}}],["two",{"_index":368,"title":{"48-11":{},"137-10":{}},"name":{},"text":{"4":{},"9":{},"12":{},"16":{},"23":{},"27":{},"28":{},"46":{},"47":{},"48":{},"55":{},"56":{},"62":{},"63":{},"64":{},"66":{},"69":{},"70":{},"72":{},"80":{},"84":{},"85":{},"86":{},"87":{},"90":{},"96":{},"98":{},"101":{},"104":{},"111":{},"112":{},"115":{},"134":{},"135":{},"137":{},"141":{},"146":{},"147":{},"152":{},"153":{},"155":{},"156":{},"159":{},"160":{},"162":{},"165":{},"171":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["twostepflag",{"_index":1984,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["tx",{"_index":650,"title":{},"name":{},"text":{"6":{},"7":{},"10":{},"15":{},"45":{},"48":{},"50":{},"52":{},"53":{},"55":{},"58":{},"62":{},"66":{},"69":{},"70":{},"71":{},"72":{},"73":{},"92":{},"94":{},"97":{},"99":{},"131":{},"133":{},"137":{},"138":{},"141":{},"142":{},"143":{},"145":{},"146":{},"152":{},"156":{},"159":{},"160":{},"161":{},"162":{},"163":{}},"component":{}}],["tx_age",{"_index":1596,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_broadcast",{"_index":1569,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_col",{"_index":1570,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_ct",{"_index":1598,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_drop",{"_index":1571,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_green_prio_0",{"_index":1588,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_green_prio_1",{"_index":1589,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_green_prio_2",{"_index":1590,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_green_prio_3",{"_index":1591,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_green_prio_4",{"_index":1592,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_green_prio_5",{"_index":1593,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_green_prio_6",{"_index":1594,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_green_prio_7",{"_index":1595,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_llct",{"_index":1597,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_merge_frag",{"_index":1600,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_mm_hold",{"_index":1599,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_multicast",{"_index":1567,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_octet",{"_index":1565,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_paus",{"_index":1572,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_pmac_broadcast",{"_index":1604,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_pmac_multicast",{"_index":1603,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_pmac_octet",{"_index":1601,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_pmac_paus",{"_index":1605,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_pmac_sz_1024_1526",{"_index":1611,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_pmac_sz_128_255",{"_index":1608,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_pmac_sz_256_511",{"_index":1609,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_pmac_sz_512_1023",{"_index":1610,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_pmac_sz_64",{"_index":1606,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_pmac_sz_65_127",{"_index":1607,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_pmac_sz_jumbo",{"_index":1612,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_pmac_unicast",{"_index":1602,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_sz_1024_1526",{"_index":1578,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_sz_128_255",{"_index":1575,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_sz_256_511",{"_index":1576,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_sz_512_1023",{"_index":1577,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_sz_64",{"_index":1573,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_sz_65_127",{"_index":1574,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_sz_jumbo",{"_index":1579,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_timestamp_timeout",{"_index":6594,"title":{},"name":{},"text":{"112":{}},"component":{}}],["tx_unicast",{"_index":1566,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_yellow_prio_0",{"_index":1580,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_yellow_prio_1",{"_index":1581,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_yellow_prio_2",{"_index":1582,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_yellow_prio_3",{"_index":1583,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_yellow_prio_4",{"_index":1584,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_yellow_prio_5",{"_index":1585,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_yellow_prio_6",{"_index":1586,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["tx_yellow_prio_7",{"_index":1587,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["txd",{"_index":3347,"title":{},"name":{},"text":{"49":{},"58":{},"59":{},"65":{},"71":{},"73":{},"136":{},"145":{},"149":{},"154":{},"161":{},"163":{}},"component":{}}],["txqueuelen:10",{"_index":3304,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["txqueuelen:1000",{"_index":3298,"title":{},"name":{},"text":{"48":{},"137":{}},"component":{}}],["type",{"_index":156,"title":{},"name":{},"text":{"2":{},"4":{},"6":{},"7":{},"12":{},"14":{},"16":{},"18":{},"22":{},"23":{},"29":{},"32":{},"46":{},"48":{},"50":{},"51":{},"52":{},"55":{},"59":{},"62":{},"66":{},"67":{},"68":{},"72":{},"73":{},"74":{},"77":{},"80":{},"81":{},"82":{},"85":{},"86":{},"87":{},"88":{},"90":{},"92":{},"94":{},"98":{},"101":{},"103":{},"104":{},"109":{},"111":{},"117":{},"118":{},"134":{},"137":{},"138":{},"139":{},"140":{},"141":{},"142":{},"146":{},"149":{},"152":{},"156":{},"157":{},"158":{},"162":{},"163":{},"164":{},"165":{},"167":{},"171":{},"172":{},"173":{},"176":{},"177":{},"178":{}},"component":{}}],["type=2000",{"_index":4943,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["type=linux",{"_index":2904,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["typic",{"_index":751,"title":{},"name":{},"text":{"9":{},"27":{},"46":{},"55":{},"56":{},"62":{},"72":{},"84":{},"85":{},"96":{},"112":{},"134":{},"146":{},"147":{},"152":{},"162":{},"165":{},"175":{},"176":{}},"component":{}}],["u",{"_index":20,"title":{"40-6":{},"127-5":{},"131-4":{},"165-3":{},"165-5":{}},"name":{},"text":{"1":{},"14":{},"27":{},"31":{},"32":{},"34":{},"37":{},"40":{},"43":{},"46":{},"49":{},"55":{},"59":{},"60":{},"62":{},"72":{},"73":{},"75":{},"78":{},"80":{},"89":{},"101":{},"112":{},"118":{},"119":{},"120":{},"121":{},"127":{},"130":{},"131":{},"134":{},"136":{},"140":{},"146":{},"149":{},"150":{},"152":{},"162":{},"163":{},"165":{},"166":{},"169":{},"171":{}},"component":{}}],["u3",{"_index":5909,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["u32",{"_index":2086,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["u45056",{"_index":4828,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["ua",{"_index":1738,"title":{"107":{},"20-1":{}},"name":{},"text":{},"component":{}}],["uart",{"_index":2529,"title":{"46-5":{},"46-9":{},"59-10":{},"62-5":{},"62-8":{},"62-9":{},"134-4":{},"134-8":{},"149-9":{},"152-4":{},"152-7":{},"152-8":{}},"name":{},"text":{"46":{},"54":{},"55":{},"59":{},"62":{},"72":{},"79":{},"134":{},"141":{},"144":{},"146":{},"149":{},"152":{},"162":{},"170":{}},"component":{}}],["uart_2ndstage=1",{"_index":6707,"title":{},"name":{},"text":{"141":{}},"component":{}}],["ubi",{"_index":6114,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["ubi.mtd=boot${nand_cur},2048",{"_index":6180,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["ubi0",{"_index":6216,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["ubi0:rootfs;ubifsload",{"_index":6188,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["ubif",{"_index":1203,"title":{},"name":{},"text":{"14":{},"62":{},"80":{},"101":{},"152":{},"171":{}},"component":{}}],["ubooot",{"_index":2875,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["uboot",{"_index":2252,"title":{"46-41":{},"62-40":{},"80-11":{},"80-15":{},"80-19":{},"134-40":{},"152-39":{},"171-10":{},"171-14":{},"171-18":{}},"name":{},"text":{"33":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"46":{},"51":{},"54":{},"59":{},"62":{},"67":{},"73":{},"79":{},"80":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"134":{},"139":{},"144":{},"149":{},"152":{},"157":{},"163":{},"170":{},"171":{}},"component":{}}],["ubpubkey.pi",{"_index":6746,"title":{},"name":{},"text":{"165":{}},"component":{}}],["ubpubkey/1.0a/1707912564",{"_index":6755,"title":{},"name":{},"text":{"165":{}},"component":{}}],["ubuntu",{"_index":1031,"title":{},"name":{},"text":{"14":{},"54":{},"79":{},"101":{},"144":{},"170":{}},"component":{}}],["ubuntu/l2",{"_index":4804,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["ubupdate=sf",{"_index":6198,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["uc",{"_index":603,"title":{},"name":{},"text":{"6":{},"87":{},"94":{},"178":{}},"component":{}}],["uc/mc",{"_index":6546,"title":{},"name":{},"text":{"87":{},"178":{}},"component":{}}],["ucd",{"_index":4585,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["uclass",{"_index":5858,"title":{},"name":{},"text":{"73":{},"75":{},"163":{},"166":{}},"component":{}}],["udc",{"_index":4581,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["udc_pin",{"_index":4584,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["udev",{"_index":1082,"title":{},"name":{},"text":{"14":{},"74":{},"101":{},"164":{}},"component":{}}],["udp",{"_index":4988,"title":{},"name":{},"text":{"59":{},"82":{},"84":{},"85":{},"86":{},"87":{},"149":{},"173":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["udp/ipv4",{"_index":1951,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["udp/ipv6",{"_index":1952,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["udph",{"_index":4564,"title":{"57":{},"148":{},"57-1":{}},"name":{"57":{},"148":{}},"text":{"57":{},"148":{}},"component":{}}],["udpv4",{"_index":1976,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["udpv6",{"_index":1977,"title":{},"name":{},"text":{"27":{},"112":{}},"component":{}}],["uevent",{"_index":4499,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["uh",{"_index":3657,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["uio",{"_index":2240,"title":{},"name":{},"text":{"32":{},"46":{},"59":{},"62":{},"66":{},"118":{},"134":{},"149":{},"152":{},"156":{}},"component":{}}],["uio_pdrv_genirq.of_id=gener",{"_index":4767,"title":{},"name":{},"text":{"59":{},"62":{},"66":{},"149":{},"152":{},"156":{}},"component":{}}],["uio_sparx5_irqmux",{"_index":5077,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["ulpi",{"_index":5885,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["ultra",{"_index":3648,"title":{},"name":{},"text":{"50":{},"138":{}},"component":{}}],["umount",{"_index":3645,"title":{},"name":{},"text":{"50":{},"66":{},"74":{},"138":{},"156":{},"164":{}},"component":{}}],["un",{"_index":1280,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["unabl",{"_index":1724,"title":{},"name":{},"text":{"18":{},"103":{}},"component":{}}],["unavail",{"_index":4789,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["unawar",{"_index":195,"title":{},"name":{},"text":{"4":{},"12":{},"90":{},"98":{}},"component":{}}],["unchang",{"_index":6781,"title":{},"name":{},"text":{"165":{}},"component":{}}],["uncompress",{"_index":3017,"title":{},"name":{},"text":{"46":{},"59":{},"62":{},"73":{},"134":{},"149":{},"152":{},"163":{}},"component":{}}],["under",{"_index":976,"title":{},"name":{},"text":{"13":{},"14":{},"46":{},"55":{},"62":{},"72":{},"85":{},"101":{},"102":{},"134":{},"146":{},"152":{},"162":{},"165":{},"176":{}},"component":{}}],["understand",{"_index":993,"title":{},"name":{},"text":{"13":{},"18":{},"46":{},"55":{},"62":{},"72":{},"85":{},"102":{},"103":{},"134":{},"146":{},"152":{},"162":{},"165":{},"176":{}},"component":{}}],["understood",{"_index":4146,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["undesir",{"_index":6729,"title":{},"name":{},"text":{"165":{}},"component":{}}],["undon",{"_index":6374,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["unencrypt",{"_index":4299,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["unexp",{"_index":695,"title":{},"name":{},"text":{"7":{},"92":{}},"component":{}}],["unexpect",{"_index":700,"title":{},"name":{},"text":{"7":{},"57":{},"92":{},"148":{}},"component":{}}],["unexport",{"_index":3967,"title":{},"name":{},"text":{"52":{},"68":{},"142":{},"158":{}},"component":{}}],["ung/arm",{"_index":2699,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"72":{},"134":{},"146":{},"152":{},"162":{}},"component":{}}],["ung/cfm",{"_index":580,"title":{},"name":{},"text":{"6":{},"16":{},"94":{},"104":{}},"component":{}}],["ung/dock",{"_index":1285,"title":{},"name":{},"text":{"14":{},"55":{},"72":{},"101":{},"146":{},"162":{}},"component":{}}],["ung/linux",{"_index":2375,"title":{},"name":{},"text":{"40":{},"41":{},"42":{},"127":{},"128":{},"129":{}},"component":{}}],["ung/mrp",{"_index":1662,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["ung/packages/container/package/bsp",{"_index":1315,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["ung8290",{"_index":2197,"title":{"38-5":{},"125-4":{}},"name":{},"text":{"31":{},"33":{},"34":{},"35":{},"37":{},"38":{},"61":{},"119":{},"120":{},"121":{},"122":{},"123":{},"125":{},"151":{}},"component":{}}],["ung8290/evb",{"_index":2201,"title":{},"name":{},"text":{"31":{},"34":{},"37":{},"119":{},"120":{},"121":{}},"component":{}}],["ung8291",{"_index":2198,"title":{},"name":{},"text":{"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"61":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"151":{}},"component":{}}],["ung8291/evb",{"_index":2199,"title":{},"name":{},"text":{"31":{},"34":{},"37":{},"119":{},"120":{},"121":{}},"component":{}}],["ung8309",{"_index":2285,"title":{"36-4":{},"124-3":{}},"name":{},"text":{"35":{},"36":{},"61":{},"123":{},"124":{},"151":{}},"component":{}}],["ung8314",{"_index":6711,"title":{},"name":{},"text":{"151":{}},"component":{}}],["ung8385",{"_index":5436,"title":{},"name":{},"text":{"61":{},"151":{}},"component":{}}],["ung_8291",{"_index":5430,"title":{},"name":{},"text":{"61":{},"151":{}},"component":{}}],["ung_8309",{"_index":5431,"title":{},"name":{},"text":{"61":{},"151":{}},"component":{}}],["unicast",{"_index":6547,"title":{},"name":{},"text":{"87":{},"178":{}},"component":{}}],["uniniti",{"_index":5271,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["uniq",{"_index":3735,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["uniqu",{"_index":562,"title":{},"name":{},"text":{"6":{},"16":{},"55":{},"56":{},"72":{},"84":{},"94":{},"104":{},"146":{},"147":{},"162":{},"175":{}},"component":{}}],["unit",{"_index":1348,"title":{},"name":{},"text":{"15":{},"23":{},"50":{},"66":{},"99":{},"111":{},"112":{},"138":{},"156":{}},"component":{}}],["univers",{"_index":3206,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"63":{},"72":{},"134":{},"146":{},"152":{},"153":{},"162":{}},"component":{}}],["unix",{"_index":4995,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["unknown",{"_index":227,"title":{},"name":{},"text":{"4":{},"7":{},"48":{},"55":{},"72":{},"90":{},"92":{},"137":{},"146":{},"162":{}},"component":{}}],["unless",{"_index":3757,"title":{},"name":{},"text":{"51":{},"67":{},"85":{},"101":{},"139":{},"157":{},"176":{}},"component":{}}],["unlimit",{"_index":6451,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["unlock",{"_index":4101,"title":{},"name":{},"text":{"55":{},"56":{},"72":{},"146":{},"147":{},"162":{}},"component":{}}],["unmount",{"_index":5901,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["unpack",{"_index":1217,"title":{},"name":{},"text":{"14":{},"55":{},"59":{},"72":{},"101":{},"141":{},"146":{},"149":{},"162":{}},"component":{}}],["unplug",{"_index":5951,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["unpredict",{"_index":1717,"title":{},"name":{},"text":{"18":{},"103":{}},"component":{}}],["unrecogn",{"_index":5346,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["unrespons",{"_index":4418,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["unsecur",{"_index":2612,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["untag",{"_index":117,"title":{},"name":{},"text":{"2":{},"4":{},"7":{},"9":{},"12":{},"88":{},"90":{},"92":{},"96":{},"98":{}},"component":{}}],["until",{"_index":619,"title":{},"name":{},"text":{"6":{},"10":{},"46":{},"50":{},"56":{},"66":{},"79":{},"94":{},"97":{},"134":{},"138":{},"147":{},"156":{},"170":{}},"component":{}}],["unus",{"_index":2868,"title":{},"name":{},"text":{"46":{},"59":{},"62":{},"134":{},"149":{},"152":{}},"component":{}}],["unzip",{"_index":2987,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["up",{"_index":206,"title":{"80-13":{},"80-17":{},"80-18":{},"80-20":{},"171-12":{},"171-16":{},"171-17":{},"171-19":{}},"name":{},"text":{"4":{},"6":{},"12":{},"15":{},"16":{},"19":{},"23":{},"26":{},"27":{},"29":{},"35":{},"36":{},"46":{},"48":{},"52":{},"55":{},"59":{},"60":{},"61":{},"62":{},"69":{},"72":{},"73":{},"75":{},"80":{},"84":{},"85":{},"90":{},"94":{},"98":{},"99":{},"104":{},"105":{},"111":{},"112":{},"114":{},"117":{},"123":{},"124":{},"134":{},"137":{},"142":{},"146":{},"149":{},"150":{},"151":{},"152":{},"159":{},"162":{},"163":{},"165":{},"166":{},"171":{},"175":{},"176":{}},"component":{}}],["upcom",{"_index":2594,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["updat",{"_index":676,"title":{"32-6":{},"33-3":{},"35-3":{},"36-3":{},"38-6":{},"39-3":{},"40-4":{},"40-6":{},"41-4":{},"42-4":{},"43-4":{},"46-51":{},"46-52":{},"46-53":{},"62-50":{},"62-51":{},"62-52":{},"118-5":{},"122-2":{},"123-2":{},"124-2":{},"125-5":{},"126-2":{},"127-3":{},"127-5":{},"128-3":{},"129-3":{},"130-3":{},"134-50":{},"134-51":{},"134-52":{},"152-49":{},"152-50":{},"152-51":{}},"name":{},"text":{"7":{},"14":{},"23":{},"27":{},"32":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"46":{},"54":{},"55":{},"59":{},"62":{},"72":{},"77":{},"79":{},"80":{},"83":{},"92":{},"101":{},"111":{},"112":{},"118":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"134":{},"144":{},"146":{},"149":{},"152":{},"162":{},"165":{},"167":{},"170":{},"171":{},"174":{}},"component":{}}],["uplink",{"_index":6013,"title":{},"name":{},"text":{"77":{},"167":{}},"component":{}}],["upload",{"_index":2768,"title":{},"name":{},"text":{"46":{},"54":{},"62":{},"79":{},"134":{},"144":{},"152":{},"170":{}},"component":{}}],["upload/writ",{"_index":4089,"title":{},"name":{},"text":{"54":{},"79":{},"144":{},"170":{}},"component":{}}],["upon",{"_index":625,"title":{},"name":{},"text":{"6":{},"94":{}},"component":{}}],["upstream",{"_index":1733,"title":{},"name":{},"text":{"18":{},"27":{},"36":{},"43":{},"78":{},"103":{},"112":{},"124":{},"130":{},"169":{}},"component":{}}],["uptim",{"_index":5366,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["urandom",{"_index":5272,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["us",{"_index":19,"title":{"14-18":{},"45-11":{},"46-39":{},"48-9":{},"49-9":{},"50-9":{},"51-8":{},"52-9":{},"52-10":{},"53-9":{},"56-5":{},"58-9":{},"59-8":{},"60-9":{},"60-10":{},"62-38":{},"66-9":{},"67-8":{},"68-10":{},"69-9":{},"73-9":{},"75-10":{},"101-17":{},"133-10":{},"134-38":{},"136-8":{},"137-8":{},"138-8":{},"139-7":{},"141-4":{},"142-8":{},"142-9":{},"143-8":{},"145-8":{},"147-4":{},"149-7":{},"150-8":{},"150-9":{},"152-37":{},"156-8":{},"157-7":{},"158-9":{},"159-8":{},"163-8":{},"165-2":{},"166-9":{}},"name":{},"text":{"1":{},"4":{},"6":{},"9":{},"10":{},"12":{},"13":{},"14":{},"15":{},"16":{},"18":{},"19":{},"22":{},"23":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"77":{},"79":{},"80":{},"81":{},"82":{},"83":{},"84":{},"85":{},"86":{},"87":{},"89":{},"90":{},"94":{},"96":{},"97":{},"98":{},"99":{},"101":{},"102":{},"103":{},"104":{},"105":{},"109":{},"111":{},"112":{},"114":{},"115":{},"116":{},"117":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"127":{},"128":{},"129":{},"130":{},"131":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"141":{},"142":{},"143":{},"144":{},"145":{},"146":{},"147":{},"148":{},"149":{},"150":{},"151":{},"152":{},"153":{},"154":{},"155":{},"156":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"170":{},"171":{},"172":{},"173":{},"174":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["usabl",{"_index":2386,"title":{},"name":{},"text":{"40":{},"46":{},"62":{},"127":{},"134":{},"152":{}},"component":{}}],["usag",{"_index":901,"title":{"16-3":{},"104-2":{}},"name":{},"text":{"12":{},"29":{},"41":{},"42":{},"46":{},"47":{},"51":{},"55":{},"60":{},"62":{},"63":{},"67":{},"72":{},"75":{},"85":{},"98":{},"117":{},"128":{},"129":{},"131":{},"134":{},"135":{},"139":{},"146":{},"150":{},"152":{},"153":{},"157":{},"162":{},"166":{},"176":{}},"component":{}}],["usart",{"_index":3211,"title":{"59":{},"73":{},"149":{},"163":{},"59-1":{},"59-9":{},"59-10":{},"59-11":{},"59-12":{},"73-1":{},"73-10":{},"149-8":{},"149-9":{},"149-10":{},"149-11":{},"163-9":{}},"name":{"59":{},"73":{},"149":{},"163":{}},"text":{"47":{},"59":{},"63":{},"65":{},"73":{},"135":{},"149":{},"153":{},"154":{},"163":{}},"component":{}}],["usart(univers",{"_index":3210,"title":{},"name":{},"text":{"47":{},"49":{},"65":{},"135":{},"136":{},"154":{}},"component":{}}],["usart.yaml[usart",{"_index":5822,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["usart0",{"_index":4713,"title":{},"name":{},"text":{"59":{},"73":{},"149":{},"163":{}},"component":{}}],["usart3",{"_index":4715,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["usart_serial.0.auto",{"_index":5303,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["usb",{"_index":1744,"title":{"74":{},"164":{},"21-4":{},"57-4":{},"57-5":{},"57-6":{},"57-13":{},"74-1":{},"74-8":{},"108-3":{},"148-3":{},"148-4":{},"148-5":{},"148-12":{},"164-7":{}},"name":{"74":{},"164":{}},"text":{"46":{},"54":{},"57":{},"59":{},"61":{},"62":{},"73":{},"74":{},"77":{},"79":{},"134":{},"141":{},"144":{},"148":{},"149":{},"151":{},"152":{},"163":{},"164":{},"167":{},"170":{}},"component":{}}],["usb0",{"_index":4591,"title":{},"name":{},"text":{"57":{},"74":{},"148":{},"164":{}},"component":{}}],["usb0_dwc3",{"_index":5890,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["usb1",{"_index":5119,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["usb2",{"_index":5138,"title":{},"name":{},"text":{"59":{},"74":{},"77":{},"149":{},"164":{},"167":{}},"component":{}}],["usb2phy_rst",{"_index":5657,"title":{},"name":{},"text":{"68":{},"74":{},"158":{},"164":{}},"component":{}}],["usb3",{"_index":5882,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["usb@300000",{"_index":5889,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["usb@e0808000",{"_index":4583,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["usb_configfs_acm",{"_index":4573,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["usb_dwc3@300000",{"_index":5891,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["usb_host_a",{"_index":3919,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["usb_host_b",{"_index":3829,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["usb_host_c",{"_index":3843,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["usb_over_detect",{"_index":5659,"title":{},"name":{},"text":{"68":{},"74":{},"158":{},"164":{}},"component":{}}],["usb_over_pin",{"_index":5894,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["usb_pow",{"_index":5651,"title":{},"name":{},"text":{"68":{},"74":{},"158":{},"164":{}},"component":{}}],["usb_power_pin",{"_index":5895,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["usb_rst_pin",{"_index":5893,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["usb_serial_simpl",{"_index":5161,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["usb_slave_a",{"_index":3920,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["usb_slave_b",{"_index":3830,"title":{},"name":{},"text":{"52":{},"57":{},"142":{},"148":{}},"component":{}}],["usb_slave_c",{"_index":3846,"title":{},"name":{},"text":{"52":{},"142":{}},"component":{}}],["usb_ulpi",{"_index":5662,"title":{},"name":{},"text":{"68":{},"74":{},"158":{},"164":{}},"component":{}}],["usb_ulpi_pin",{"_index":5892,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["usbboot",{"_index":6670,"title":{},"name":{},"text":{"141":{}},"component":{}}],["usbcor",{"_index":4960,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["usbf",{"_index":4961,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["usbhid",{"_index":5218,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["usbseri",{"_index":5155,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["usbserial_gener",{"_index":5153,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["usbtest",{"_index":5189,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["usbtmc",{"_index":5150,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["used_hw_stat",{"_index":1773,"title":{},"name":{},"text":{"22":{},"23":{},"81":{},"86":{},"87":{},"109":{},"111":{},"172":{},"177":{},"178":{}},"component":{}}],["user",{"_index":327,"title":{},"name":{},"text":{"4":{},"6":{},"10":{},"12":{},"13":{},"14":{},"16":{},"18":{},"23":{},"31":{},"32":{},"34":{},"36":{},"37":{},"46":{},"51":{},"55":{},"57":{},"59":{},"62":{},"67":{},"72":{},"73":{},"74":{},"81":{},"84":{},"85":{},"86":{},"87":{},"90":{},"94":{},"97":{},"98":{},"101":{},"102":{},"103":{},"104":{},"111":{},"118":{},"119":{},"120":{},"121":{},"124":{},"134":{},"139":{},"140":{},"146":{},"148":{},"149":{},"152":{},"157":{},"162":{},"163":{},"164":{},"165":{},"172":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["user/group",{"_index":2736,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["userspac",{"_index":2435,"title":{"45-9":{},"48-7":{},"49-7":{},"50-7":{},"51-7":{},"52-7":{},"53-7":{},"57-10":{},"58-7":{},"59-6":{},"60-7":{},"65-7":{},"66-7":{},"67-7":{},"68-7":{},"69-7":{},"70-7":{},"71-7":{},"73-7":{},"74-7":{},"75-7":{},"133-8":{},"136-6":{},"137-6":{},"138-6":{},"139-6":{},"142-6":{},"143-6":{},"145-6":{},"148-9":{},"149-5":{},"150-6":{},"154-6":{},"156-6":{},"157-6":{},"158-6":{},"159-6":{},"160-6":{},"161-6":{},"163-6":{},"164-6":{},"166-6":{}},"name":{},"text":{"51":{},"58":{},"67":{},"139":{},"145":{},"157":{}},"component":{}}],["usgmii",{"_index":6014,"title":{},"name":{},"text":{"77":{},"167":{}},"component":{}}],["usr/bin/python",{"_index":1092,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["usr/bin/python3",{"_index":1093,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["usr/local/bin",{"_index":1287,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["usr/local/bin/dr",{"_index":1290,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["usr/local/src/xyz",{"_index":1309,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["usr/local/src/xyz:/usr/local/src/xyz",{"_index":1308,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["usual",{"_index":2770,"title":{},"name":{},"text":{"46":{},"57":{},"62":{},"84":{},"134":{},"148":{},"152":{},"175":{}},"component":{}}],["util",{"_index":1074,"title":{"60-10":{},"75-10":{},"150-9":{},"166-9":{}},"name":{},"text":{"14":{},"36":{},"48":{},"50":{},"53":{},"55":{},"58":{},"60":{},"66":{},"69":{},"72":{},"75":{},"80":{},"101":{},"124":{},"137":{},"138":{},"143":{},"145":{},"146":{},"150":{},"156":{},"159":{},"162":{},"166":{},"171":{}},"component":{}}],["uuid",{"_index":3679,"title":{},"name":{},"text":{"50":{},"138":{},"165":{}},"component":{}}],["uvov:uvov_cfg[0",{"_index":4377,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["uvov:uvov_cfg[1",{"_index":4381,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["uvov:uvov_cfg[4",{"_index":4385,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["uvov:uvov_cfg[5",{"_index":4389,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["uvov_boot",{"_index":4380,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["uvov_boot_trim",{"_index":4379,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["uvov_gpioa",{"_index":4388,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["uvov_gpioa_trim",{"_index":4387,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["uvov_gpiob",{"_index":4376,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["uvov_gpiob_trim",{"_index":4375,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["uvov_rgmii",{"_index":4384,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["uvov_rgmii_trim",{"_index":4383,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["v",{"_index":1274,"title":{},"name":{},"text":{"14":{},"15":{},"29":{},"49":{},"50":{},"52":{},"60":{},"66":{},"75":{},"99":{},"101":{},"117":{},"136":{},"138":{},"142":{},"150":{},"156":{},"165":{},"166":{}},"component":{}}],["v.0.0.0",{"_index":4488,"title":{},"name":{},"text":{"56":{},"147":{}},"component":{}}],["v0.3",{"_index":4926,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["v0.97",{"_index":5004,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["v1",{"_index":4196,"title":{},"name":{},"text":{"55":{},"72":{},"140":{},"146":{},"162":{}},"component":{}}],["v1.11",{"_index":5846,"title":{},"name":{},"text":{"73":{},"163":{}},"component":{}}],["v1.8",{"_index":5249,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["v2.8.8(debug):v2.6",{"_index":5808,"title":{},"name":{},"text":{"72":{},"162":{}},"component":{}}],["v5.01",{"_index":3485,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["v5.10",{"_index":2227,"title":{},"name":{},"text":{"32":{},"118":{}},"component":{}}],["v5.10.0",{"_index":421,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["v5.4.x",{"_index":2226,"title":{},"name":{},"text":{"32":{},"118":{}},"component":{}}],["v7",{"_index":3182,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"72":{},"134":{},"146":{},"152":{},"162":{}},"component":{}}],["v8",{"_index":3181,"title":{},"name":{},"text":{"46":{},"55":{},"62":{},"72":{},"134":{},"146":{},"152":{},"162":{}},"component":{}}],["val",{"_index":1786,"title":{},"name":{},"text":{"22":{},"23":{},"81":{},"86":{},"87":{},"109":{},"111":{},"172":{},"177":{},"178":{}},"component":{}}],["valid",{"_index":782,"title":{},"name":{},"text":{"10":{},"14":{},"23":{},"46":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"58":{},"62":{},"66":{},"67":{},"68":{},"69":{},"72":{},"76":{},"79":{},"80":{},"82":{},"86":{},"87":{},"97":{},"101":{},"111":{},"134":{},"138":{},"139":{},"142":{},"143":{},"144":{},"145":{},"146":{},"152":{},"156":{},"157":{},"158":{},"159":{},"162":{},"168":{},"170":{},"171":{},"173":{},"177":{},"178":{}},"component":{}}],["valid_lft",{"_index":266,"title":{},"name":{},"text":{"4":{},"15":{},"19":{},"90":{},"99":{},"105":{}},"component":{}}],["valu",{"_index":80,"title":{"2-3":{},"88-2":{}},"name":{},"text":{"2":{},"4":{},"6":{},"7":{},"9":{},"10":{},"14":{},"15":{},"23":{},"27":{},"29":{},"30":{},"45":{},"46":{},"50":{},"51":{},"52":{},"54":{},"55":{},"56":{},"57":{},"59":{},"60":{},"62":{},"66":{},"67":{},"68":{},"72":{},"75":{},"79":{},"80":{},"81":{},"82":{},"83":{},"84":{},"85":{},"86":{},"87":{},"88":{},"90":{},"92":{},"94":{},"96":{},"97":{},"99":{},"101":{},"111":{},"112":{},"116":{},"117":{},"133":{},"134":{},"138":{},"139":{},"142":{},"144":{},"146":{},"147":{},"148":{},"149":{},"150":{},"152":{},"156":{},"157":{},"158":{},"162":{},"165":{},"166":{},"170":{},"171":{},"172":{},"173":{},"174":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["value/mask",{"_index":2059,"title":{},"name":{},"text":{"29":{},"84":{},"117":{},"175":{}},"component":{}}],["value:48",{"_index":3741,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["vao",{"_index":6005,"title":{},"name":{},"text":{"77":{},"167":{}},"component":{}}],["var/log/messag",{"_index":5359,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["var/log/messages:10",{"_index":5400,"title":{},"name":{},"text":{"60":{},"150":{}},"component":{}}],["var/log/messages:1500",{"_index":5965,"title":{},"name":{},"text":{"75":{},"166":{}},"component":{}}],["var/log/watchdog",{"_index":5358,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["vari",{"_index":6288,"title":{},"name":{},"text":{"82":{},"87":{},"173":{},"178":{}},"component":{}}],["variabl",{"_index":1306,"title":{},"name":{},"text":{"14":{},"46":{},"59":{},"62":{},"73":{},"80":{},"101":{},"134":{},"140":{},"149":{},"152":{},"163":{},"171":{}},"component":{}}],["variant",{"_index":2752,"title":{},"name":{},"text":{"46":{},"55":{},"59":{},"62":{},"134":{},"146":{},"149":{},"152":{}},"component":{}}],["varieti",{"_index":2233,"title":{},"name":{},"text":{"32":{},"118":{}},"component":{}}],["variou",{"_index":2241,"title":{},"name":{},"text":{"32":{},"36":{},"46":{},"51":{},"55":{},"62":{},"67":{},"72":{},"79":{},"85":{},"118":{},"124":{},"134":{},"139":{},"146":{},"152":{},"157":{},"162":{},"170":{},"176":{}},"component":{}}],["vast",{"_index":6768,"title":{},"name":{},"text":{"165":{}},"component":{}}],["vbus_det",{"_index":4586,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["vcap",{"_index":744,"title":{"117":{},"175":{},"29-1":{},"29-2":{},"43-7":{},"84-1":{},"84-3":{},"84-4":{},"84-5":{},"84-8":{},"117-1":{},"130-6":{},"175-2":{},"175-3":{},"175-4":{},"175-7":{}},"name":{"84":{},"175":{}},"text":{"9":{},"12":{},"22":{},"23":{},"29":{},"30":{},"36":{},"43":{},"82":{},"83":{},"84":{},"86":{},"87":{},"96":{},"98":{},"109":{},"111":{},"116":{},"117":{},"124":{},"130":{},"173":{},"174":{},"175":{},"177":{},"178":{}},"component":{}}],["vcap[4",{"_index":2064,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["vcap_afs_s1",{"_index":2119,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["vcap_kfs_7tupl",{"_index":2118,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["vcap_kfs_arp",{"_index":2082,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["vcap_lookup",{"_index":2053,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["vcap_nam",{"_index":2045,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["vcap_tool",{"_index":2043,"title":{},"name":{"29":{},"117":{}},"text":{},"component":{}}],["vconfig",{"_index":5340,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["vcore",{"_index":6093,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["vcoreiii",{"_index":5879,"title":{},"name":{},"text":{"73":{},"75":{},"80":{},"163":{},"166":{},"171":{}},"component":{}}],["vdd",{"_index":3581,"title":{},"name":{},"text":{"50":{},"52":{},"66":{},"138":{},"142":{},"156":{}},"component":{}}],["vector",{"_index":908,"title":{},"name":{},"text":{"12":{},"84":{},"98":{},"175":{}},"component":{}}],["vendor",{"_index":4365,"title":{},"name":{},"text":{"55":{},"57":{},"146":{},"148":{}},"component":{}}],["ver",{"_index":4968,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["ver=u",{"_index":6199,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["verbos",{"_index":3721,"title":{},"name":{},"text":{"51":{},"60":{},"67":{},"75":{},"139":{},"150":{},"157":{},"166":{}},"component":{}}],["veri",{"_index":1156,"title":{},"name":{},"text":{"14":{},"55":{},"61":{},"72":{},"77":{},"85":{},"101":{},"141":{},"146":{},"151":{},"162":{},"167":{},"176":{}},"component":{}}],["verif",{"_index":779,"title":{"55-24":{},"55-25":{},"72-24":{},"72-25":{},"146-23":{},"146-24":{},"162-23":{},"162-24":{}},"name":{},"text":{"10":{},"97":{}},"component":{}}],["verifi",{"_index":770,"title":{"165":{},"60-11":{},"60-12":{},"150-10":{},"150-11":{},"165-3":{},"165-7":{}},"name":{"165":{}},"text":{"10":{},"14":{},"31":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"46":{},"48":{},"59":{},"60":{},"62":{},"65":{},"73":{},"74":{},"75":{},"97":{},"101":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"134":{},"137":{},"149":{},"150":{},"152":{},"154":{},"163":{},"164":{},"165":{},"166":{}},"component":{}}],["verify_disable_tx",{"_index":769,"title":{},"name":{},"text":{"10":{},"97":{}},"component":{}}],["verify_tim",{"_index":771,"title":{},"name":{},"text":{"10":{},"97":{}},"component":{}}],["veriti",{"_index":6777,"title":{},"name":{},"text":{"165":{}},"component":{}}],["veritysetup",{"_index":6783,"title":{},"name":{},"text":{"165":{}},"component":{}}],["versa",{"_index":3022,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["versatil",{"_index":6353,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["version",{"_index":459,"title":{"33-2":{},"35-2":{},"36-2":{},"38-2":{},"39-2":{},"40-2":{},"41-2":{},"42-2":{},"43-2":{},"122-1":{},"123-1":{},"124-1":{},"125-1":{},"126-1":{},"127-1":{},"128-1":{},"129-1":{},"130-1":{},"131-1":{}},"name":{},"text":{"4":{},"6":{},"7":{},"10":{},"14":{},"29":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"46":{},"49":{},"50":{},"51":{},"55":{},"59":{},"60":{},"62":{},"66":{},"67":{},"69":{},"72":{},"75":{},"78":{},"80":{},"85":{},"90":{},"92":{},"94":{},"97":{},"101":{},"117":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"134":{},"136":{},"138":{},"139":{},"141":{},"146":{},"149":{},"150":{},"152":{},"156":{},"157":{},"159":{},"162":{},"165":{},"166":{},"169":{},"171":{},"176":{}},"component":{}}],["versu",{"_index":5966,"title":{"76-2":{},"76-3":{},"76-4":{},"168-1":{},"168-2":{},"168-3":{}},"name":{},"text":{"82":{},"86":{},"87":{},"173":{},"177":{},"178":{}},"component":{}}],["vertic",{"_index":5902,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["vfat",{"_index":6685,"title":{},"name":{},"text":{"141":{}},"component":{}}],["vfp",{"_index":4925,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["vi",{"_index":5341,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["via",{"_index":761,"title":{"14-9":{},"80-12":{},"80-16":{},"101-8":{},"171-11":{},"171-15":{}},"name":{},"text":{"10":{},"12":{},"14":{},"16":{},"22":{},"23":{},"26":{},"29":{},"32":{},"46":{},"54":{},"55":{},"61":{},"62":{},"65":{},"70":{},"72":{},"77":{},"79":{},"80":{},"83":{},"85":{},"97":{},"98":{},"101":{},"104":{},"109":{},"111":{},"114":{},"117":{},"118":{},"131":{},"134":{},"141":{},"144":{},"146":{},"151":{},"152":{},"154":{},"160":{},"162":{},"167":{},"170":{},"171":{},"174":{},"176":{}},"component":{}}],["vice",{"_index":3021,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["vid",{"_index":302,"title":{"9-2":{},"81-3":{},"96-1":{},"172-2":{}},"name":{},"text":{"4":{},"6":{},"9":{},"12":{},"23":{},"81":{},"84":{},"85":{},"86":{},"90":{},"94":{},"96":{},"98":{},"111":{},"172":{},"175":{},"176":{},"177":{}},"component":{}}],["vid_add_v",{"_index":893,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["vid_replace_ena",{"_index":892,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["vim",{"_index":1083,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["vinst",{"_index":2074,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["violat",{"_index":6480,"title":{},"name":{},"text":{"85":{},"176":{}},"component":{}}],["viper",{"_index":6062,"title":{},"name":{},"text":{"78":{},"169":{}},"component":{}}],["vipt",{"_index":4809,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["virt",{"_index":4867,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["visibl",{"_index":5929,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["vitesse_phi",{"_index":6030,"title":{},"name":{},"text":{"78":{},"169":{}},"component":{}}],["vivopay",{"_index":5175,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["vlan",{"_index":111,"title":{"172":{},"174":{},"4-3":{},"6-8":{},"6-18":{},"12-8":{},"81-1":{},"83-1":{},"90-2":{},"94-7":{},"94-17":{},"98-7":{}},"name":{},"text":{"2":{},"4":{},"6":{},"7":{},"9":{},"12":{},"17":{},"23":{},"31":{},"33":{},"34":{},"37":{},"59":{},"81":{},"82":{},"83":{},"84":{},"85":{},"86":{},"87":{},"88":{},"90":{},"92":{},"94":{},"96":{},"98":{},"106":{},"111":{},"119":{},"120":{},"121":{},"122":{},"149":{},"172":{},"173":{},"174":{},"175":{},"176":{},"177":{},"178":{}},"component":{}}],["vlan_ethtyp",{"_index":881,"title":{},"name":{},"text":{"12":{},"23":{},"81":{},"82":{},"84":{},"86":{},"87":{},"98":{},"111":{},"172":{},"173":{},"175":{},"177":{},"178":{}},"component":{}}],["vlan_filt",{"_index":202,"title":{},"name":{},"text":{"4":{},"6":{},"12":{},"90":{},"94":{},"98":{}},"component":{}}],["vlan_id",{"_index":879,"title":{},"name":{},"text":{"12":{},"23":{},"81":{},"82":{},"84":{},"86":{},"87":{},"98":{},"111":{},"172":{},"173":{},"175":{},"177":{},"178":{}},"component":{}}],["vlan_prio",{"_index":880,"title":{},"name":{},"text":{"12":{},"81":{},"82":{},"84":{},"86":{},"87":{},"98":{},"172":{},"173":{},"175":{},"177":{},"178":{}},"component":{}}],["vlan_tag",{"_index":890,"title":{},"name":{},"text":{"12":{},"98":{}},"component":{}}],["vlan_tunnel",{"_index":1429,"title":{},"name":{},"text":{"15":{},"99":{}},"component":{}}],["vlanif0",{"_index":587,"title":{},"name":{},"text":{"6":{},"94":{}},"component":{}}],["vlanif1",{"_index":588,"title":{},"name":{},"text":{"6":{},"94":{}},"component":{}}],["vlock",{"_index":5342,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["vmlinux.it",{"_index":6766,"title":{},"name":{},"text":{"165":{}},"component":{}}],["volatil",{"_index":3704,"title":{},"name":{},"text":{"51":{},"55":{},"67":{},"72":{},"139":{},"146":{},"157":{},"162":{}},"component":{}}],["voltag",{"_index":3584,"title":{},"name":{},"text":{"50":{},"52":{},"66":{},"68":{},"138":{},"142":{},"156":{},"158":{}},"component":{}}],["volum",{"_index":6218,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["vs",{"_index":6438,"title":{"85-4":{},"176-4":{}},"name":{},"text":{},"component":{}}],["vsc7546",{"_index":6077,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["vsc7549",{"_index":6079,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["vsc7552",{"_index":6080,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["vsc7556",{"_index":6081,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["vsc7558",{"_index":6082,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["vsc8211",{"_index":6029,"title":{},"name":{},"text":{"78":{},"169":{}},"component":{}}],["vsc8221",{"_index":6032,"title":{},"name":{},"text":{"78":{},"169":{}},"component":{}}],["vsc8244",{"_index":6054,"title":{},"name":{},"text":{"78":{},"169":{}},"component":{}}],["vsc8502",{"_index":6051,"title":{},"name":{},"text":{"78":{},"169":{}},"component":{}}],["vsc8504",{"_index":6056,"title":{},"name":{},"text":{"78":{},"169":{}},"component":{}}],["vsc8514",{"_index":6035,"title":{},"name":{},"text":{"78":{},"169":{}},"component":{}}],["vsc8522",{"_index":6026,"title":{},"name":{},"text":{"78":{},"169":{}},"component":{}}],["vsc8530",{"_index":6046,"title":{},"name":{},"text":{"78":{},"169":{}},"component":{}}],["vsc8531",{"_index":6044,"title":{},"name":{},"text":{"78":{},"169":{}},"component":{}}],["vsc8540",{"_index":6049,"title":{},"name":{},"text":{"78":{},"169":{}},"component":{}}],["vsc8541",{"_index":6047,"title":{},"name":{},"text":{"78":{},"169":{}},"component":{}}],["vsc8552",{"_index":6058,"title":{},"name":{},"text":{"78":{},"169":{}},"component":{}}],["vsc8562",{"_index":6064,"title":{},"name":{},"text":{"78":{},"169":{}},"component":{}}],["vsc8564",{"_index":6065,"title":{},"name":{},"text":{"78":{},"169":{}},"component":{}}],["vsc8572",{"_index":6060,"title":{},"name":{},"text":{"78":{},"169":{}},"component":{}}],["vsc8574",{"_index":6061,"title":{},"name":{},"text":{"78":{},"169":{}},"component":{}}],["vsc8575",{"_index":6063,"title":{},"name":{},"text":{"78":{},"169":{}},"component":{}}],["vsc8582",{"_index":6066,"title":{},"name":{},"text":{"78":{},"169":{}},"component":{}}],["vsc8584",{"_index":6067,"title":{},"name":{},"text":{"78":{},"169":{}},"component":{}}],["vsc8662",{"_index":6037,"title":{},"name":{},"text":{"78":{},"169":{}},"component":{}}],["vsel",{"_index":3499,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["vt100",{"_index":4637,"title":{},"name":{},"text":{"57":{},"148":{}},"component":{}}],["vtype",{"_index":2073,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["w",{"_index":3456,"title":{},"name":{},"text":{"49":{},"50":{},"56":{},"60":{},"65":{},"66":{},"75":{},"112":{},"136":{},"138":{},"147":{},"150":{},"154":{},"156":{},"166":{}},"component":{}}],["w1",{"_index":2134,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["w2",{"_index":2131,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["w25n01gv",{"_index":4037,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["w3",{"_index":2135,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["w3m",{"_index":1084,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["w48",{"_index":2128,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["w9",{"_index":2126,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["wafer_jtag",{"_index":3790,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["wafer_trk",{"_index":4343,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["wait",{"_index":780,"title":{},"name":{},"text":{"10":{},"28":{},"46":{},"54":{},"62":{},"66":{},"79":{},"80":{},"97":{},"112":{},"115":{},"134":{},"144":{},"152":{},"156":{},"170":{},"171":{}},"component":{}}],["wake",{"_index":4416,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["want",{"_index":305,"title":{},"name":{},"text":{"4":{},"10":{},"12":{},"14":{},"23":{},"27":{},"29":{},"55":{},"72":{},"84":{},"85":{},"90":{},"97":{},"98":{},"101":{},"111":{},"112":{},"117":{},"141":{},"146":{},"162":{},"175":{},"176":{}},"component":{}}],["warn",{"_index":1322,"title":{},"name":{},"text":{"14":{},"30":{},"46":{},"59":{},"62":{},"65":{},"101":{},"116":{},"134":{},"149":{},"152":{},"154":{}},"component":{}}],["warranti",{"_index":1140,"title":{},"name":{},"text":{"14":{},"55":{},"72":{},"101":{},"146":{},"162":{}},"component":{}}],["watch",{"_index":5343,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["watchdog",{"_index":5324,"title":{"60":{},"75":{},"150":{},"166":{},"60-1":{},"60-10":{},"60-11":{},"60-12":{},"75-1":{},"75-9":{},"75-10":{},"75-11":{},"75-12":{},"150-9":{},"150-10":{},"150-11":{},"166-8":{},"166-9":{},"166-10":{},"166-11":{}},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["watchdog0",{"_index":5336,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["watchdog@e0090000",{"_index":5331,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["watchdog[135",{"_index":5375,"title":{},"name":{},"text":{"60":{},"150":{}},"component":{}}],["watchdog[477",{"_index":5963,"title":{},"name":{},"text":{"75":{},"166":{}},"component":{}}],["watchdogd",{"_index":5362,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["waveform",{"_index":2417,"title":{},"name":{},"text":{"43":{},"130":{}},"component":{}}],["way",{"_index":58,"title":{"14-13":{},"101-12":{}},"name":{},"text":{"1":{},"4":{},"12":{},"14":{},"22":{},"26":{},"28":{},"32":{},"46":{},"51":{},"55":{},"62":{},"67":{},"72":{},"83":{},"85":{},"89":{},"90":{},"98":{},"101":{},"109":{},"114":{},"115":{},"118":{},"134":{},"139":{},"146":{},"152":{},"157":{},"162":{},"174":{},"176":{}},"component":{}}],["wc",{"_index":5344,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["wdt",{"_index":5326,"title":{},"name":{"60":{},"75":{},"150":{},"166":{}},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["web",{"_index":1098,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["websit",{"_index":990,"title":{},"name":{},"text":{"13":{},"14":{},"18":{},"46":{},"62":{},"101":{},"102":{},"103":{},"134":{},"152":{}},"component":{}}],["webstax",{"_index":1729,"title":{"43-5":{},"130-4":{},"131-3":{}},"name":{},"text":{"18":{},"31":{},"32":{},"34":{},"37":{},"103":{},"118":{},"119":{},"120":{},"121":{}},"component":{}}],["weight",{"_index":1891,"title":{},"name":{},"text":{"26":{},"85":{},"114":{},"176":{}},"component":{}}],["welcom",{"_index":3643,"title":{},"name":{},"text":{"50":{},"59":{},"66":{},"73":{},"138":{},"149":{},"156":{},"163":{}},"component":{}}],["well",{"_index":2242,"title":{},"name":{},"text":{"32":{},"46":{},"55":{},"62":{},"72":{},"118":{},"134":{},"146":{},"152":{},"162":{}},"component":{}}],["wellknown",{"_index":5900,"title":{},"name":{},"text":{"74":{},"164":{}},"component":{}}],["west",{"_index":1104,"title":{},"name":{},"text":{"14":{},"46":{},"62":{},"101":{},"134":{},"152":{}},"component":{}}],["wget",{"_index":1085,"title":{},"name":{},"text":{"14":{},"60":{},"75":{},"101":{},"150":{},"166":{}},"component":{}}],["wherea",{"_index":6814,"title":{},"name":{},"text":{"165":{}},"component":{}}],["whether",{"_index":591,"title":{},"name":{},"text":{"6":{},"55":{},"72":{},"83":{},"86":{},"94":{},"146":{},"162":{},"174":{},"177":{}},"component":{}}],["whoami",{"_index":5345,"title":{},"name":{},"text":{"60":{},"75":{},"150":{},"166":{}},"component":{}}],["whole",{"_index":6111,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["wide",{"_index":2137,"title":{},"name":{},"text":{"29":{},"66":{},"81":{},"84":{},"117":{},"156":{},"172":{},"175":{}},"component":{}}],["width",{"_index":2084,"title":{},"name":{},"text":{"29":{},"46":{},"49":{},"50":{},"52":{},"53":{},"62":{},"65":{},"66":{},"69":{},"73":{},"117":{},"134":{},"136":{},"138":{},"142":{},"143":{},"152":{},"154":{},"156":{},"159":{},"163":{}},"component":{}}],["wil",{"_index":2852,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["wildcard",{"_index":1811,"title":{},"name":{},"text":{"23":{},"84":{},"86":{},"111":{},"175":{},"177":{}},"component":{}}],["win",{"_index":6382,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["winbond",{"_index":4008,"title":{},"name":{},"text":{"53":{},"143":{}},"component":{}}],["window",{"_index":1294,"title":{},"name":{},"text":{"14":{},"101":{},"141":{}},"component":{}}],["wipe",{"_index":4413,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["wire",{"_index":3214,"title":{},"name":{},"text":{"47":{},"49":{},"54":{},"63":{},"65":{},"85":{},"135":{},"136":{},"144":{},"153":{},"154":{},"176":{}},"component":{}}],["wise",{"_index":3748,"title":{},"name":{},"text":{"51":{},"67":{},"139":{},"157":{}},"component":{}}],["wit",{"_index":1691,"title":{},"name":{},"text":{"16":{},"104":{}},"component":{}}],["witdh",{"_index":6601,"title":{},"name":{},"text":{"112":{}},"component":{}}],["within",{"_index":691,"title":{},"name":{},"text":{"7":{},"14":{},"15":{},"29":{},"55":{},"72":{},"92":{},"99":{},"101":{},"117":{},"146":{},"162":{}},"component":{}}],["without",{"_index":313,"title":{},"name":{},"text":{"4":{},"6":{},"12":{},"14":{},"18":{},"23":{},"27":{},"32":{},"43":{},"46":{},"49":{},"55":{},"57":{},"62":{},"72":{},"85":{},"86":{},"87":{},"90":{},"94":{},"98":{},"101":{},"103":{},"111":{},"112":{},"118":{},"130":{},"134":{},"136":{},"146":{},"148":{},"152":{},"162":{},"176":{},"177":{},"178":{}},"component":{}}],["won't",{"_index":3597,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["word",{"_index":2353,"title":{},"name":{},"text":{"38":{},"55":{},"85":{},"125":{},"146":{},"176":{}},"component":{}}],["work",{"_index":181,"title":{"46-42":{},"46-43":{},"62-41":{},"62-42":{},"134-41":{},"134-42":{},"152-40":{},"152-41":{}},"name":{},"text":{"4":{},"6":{},"10":{},"13":{},"14":{},"15":{},"18":{},"22":{},"23":{},"27":{},"43":{},"46":{},"54":{},"55":{},"61":{},"62":{},"72":{},"73":{},"79":{},"80":{},"85":{},"90":{},"94":{},"97":{},"99":{},"101":{},"102":{},"103":{},"109":{},"111":{},"112":{},"130":{},"134":{},"144":{},"146":{},"151":{},"152":{},"162":{},"163":{},"165":{},"170":{},"171":{},"176":{}},"component":{}}],["workingset",{"_index":5006,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["workstat",{"_index":2786,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"141":{},"152":{}},"component":{}}],["workstation:/home/knariset",{"_index":5281,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["world",{"_index":1007,"title":{"14-17":{},"101-16":{}},"name":{},"text":{"14":{},"38":{},"55":{},"72":{},"101":{},"125":{},"146":{},"162":{},"165":{}},"component":{}}],["world.c",{"_index":1265,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["world.mk",{"_index":1242,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["world.org/download",{"_index":1247,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["world/cmakelists.txt",{"_index":1260,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["world/config.in",{"_index":1238,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["world/hello",{"_index":1267,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["world/mscc",{"_index":1241,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["world:/home/alice/mscc",{"_index":1282,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["wp",{"_index":2809,"title":{},"name":{},"text":{"46":{},"50":{},"62":{},"66":{},"134":{},"138":{},"152":{},"156":{}},"component":{}}],["wr",{"_index":4033,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["wr1",{"_index":4041,"title":{},"name":{},"text":{"53":{},"69":{},"143":{},"159":{}},"component":{}}],["wrap",{"_index":4879,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["writabl",{"_index":3441,"title":{},"name":{},"text":{"49":{},"52":{},"68":{},"136":{},"142":{},"158":{}},"component":{}}],["write",{"_index":823,"title":{"59-11":{},"59-12":{},"141-5":{},"141-8":{},"149-10":{},"149-11":{}},"name":{},"text":{"10":{},"30":{},"46":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"58":{},"59":{},"62":{},"66":{},"67":{},"68":{},"69":{},"72":{},"74":{},"79":{},"80":{},"97":{},"116":{},"134":{},"138":{},"139":{},"141":{},"142":{},"143":{},"144":{},"145":{},"146":{},"147":{},"149":{},"152":{},"156":{},"157":{},"158":{},"159":{},"162":{},"164":{},"165":{},"170":{},"171":{}},"component":{}}],["writeabl",{"_index":4441,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["writealloc",{"_index":4811,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["written",{"_index":2383,"title":{},"name":{},"text":{"40":{},"46":{},"51":{},"54":{},"55":{},"56":{},"62":{},"67":{},"72":{},"79":{},"80":{},"127":{},"134":{},"139":{},"144":{},"146":{},"147":{},"152":{},"157":{},"162":{},"170":{},"171":{}},"component":{}}],["wrong",{"_index":2425,"title":{},"name":{},"text":{"43":{},"46":{},"50":{},"62":{},"66":{},"130":{},"134":{},"138":{},"152":{},"156":{}},"component":{}}],["wrrel",{"_index":2811,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["ws/mscc",{"_index":6264,"title":{},"name":{},"text":{"80":{},"171":{}},"component":{}}],["wsl2",{"_index":1295,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["wtb",{"_index":610,"title":{},"name":{},"text":{"6":{},"94":{}},"component":{}}],["wtr",{"_index":609,"title":{},"name":{},"text":{"6":{},"94":{}},"component":{}}],["x",{"_index":3190,"title":{},"name":{},"text":{"46":{},"47":{},"48":{},"52":{},"53":{},"55":{},"56":{},"59":{},"60":{},"62":{},"63":{},"64":{},"68":{},"69":{},"72":{},"73":{},"74":{},"75":{},"77":{},"84":{},"134":{},"135":{},"137":{},"142":{},"143":{},"146":{},"147":{},"149":{},"150":{},"152":{},"153":{},"155":{},"158":{},"159":{},"162":{},"163":{},"164":{},"166":{},"167":{},"175":{}},"component":{}}],["x/i",{"_index":6413,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["x1",{"_index":870,"title":{},"name":{},"text":{"12":{},"29":{},"98":{},"117":{}},"component":{}}],["x12",{"_index":2147,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["x16",{"_index":5421,"title":{},"name":{},"text":{"61":{},"151":{}},"component":{}}],["x3",{"_index":2149,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["x4",{"_index":864,"title":{},"name":{},"text":{"12":{},"29":{},"56":{},"98":{},"117":{},"147":{}},"component":{}}],["x509",{"_index":6739,"title":{},"name":{},"text":{"165":{}},"component":{}}],["x6",{"_index":2150,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["x86_64",{"_index":6797,"title":{},"name":{},"text":{"165":{}},"component":{}}],["xdp",{"_index":6613,"title":{},"name":{},"text":{"131":{}},"component":{}}],["xf",{"_index":1115,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["xhci",{"_index":5104,"title":{},"name":{},"text":{"59":{},"74":{},"149":{},"164":{}},"component":{}}],["xhci_hcd",{"_index":4616,"title":{},"name":{},"text":{"57":{},"59":{},"73":{},"148":{},"149":{},"163":{}},"component":{}}],["xmit_hash_polici",{"_index":401,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["xn",{"_index":2151,"title":{},"name":{},"text":{"29":{},"117":{}},"component":{}}],["xor",{"_index":379,"title":{},"name":{},"text":{"4":{},"90":{}},"component":{}}],["xr",{"_index":4493,"title":{},"name":{},"text":{"56":{},"74":{},"147":{},"164":{}},"component":{}}],["xr2druf98mlm4aku0cfndsjiaduuu8pgxq",{"_index":4268,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}],["xstax",{"_index":2237,"title":{},"name":{},"text":{"32":{},"41":{},"42":{},"62":{},"118":{},"128":{},"129":{},"152":{}},"component":{}}],["xt",{"_index":2471,"title":{},"name":{},"text":{"45":{},"133":{}},"component":{}}],["xx",{"_index":6004,"title":{},"name":{},"text":{"77":{},"167":{}},"component":{}}],["xx:xx:xx:xx:xx:xx",{"_index":6410,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["xx:xx:xx:xx:xx:xx/yy:yy:yy:yy:yy:yi",{"_index":6411,"title":{},"name":{},"text":{"84":{},"175":{}},"component":{}}],["xz",{"_index":1086,"title":{},"name":{},"text":{"14":{},"101":{}},"component":{}}],["y",{"_index":1037,"title":{},"name":{},"text":{"14":{},"49":{},"50":{},"65":{},"101":{},"136":{},"138":{},"154":{}},"component":{}}],["y,n",{"_index":3641,"title":{},"name":{},"text":{"50":{},"66":{},"138":{},"156":{}},"component":{}}],["y/n",{"_index":5581,"title":{},"name":{},"text":{"65":{},"154":{}},"component":{}}],["ye",{"_index":1251,"title":{},"name":{},"text":{"14":{},"15":{},"46":{},"55":{},"60":{},"61":{},"62":{},"68":{},"70":{},"72":{},"75":{},"77":{},"78":{},"99":{},"101":{},"134":{},"146":{},"150":{},"151":{},"152":{},"158":{},"160":{},"162":{},"166":{},"167":{},"169":{}},"component":{}}],["yellow",{"_index":5750,"title":{},"name":{},"text":{"70":{},"160":{}},"component":{}}],["yyyy.version.tar.gz",{"_index":2702,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["yyyy.version/arm",{"_index":2704,"title":{},"name":{},"text":{"46":{},"134":{}},"component":{}}],["yyyy.version/arm64",{"_index":5468,"title":{},"name":{},"text":{"62":{},"152":{}},"component":{}}],["z",{"_index":5388,"title":{},"name":{},"text":{"60":{},"75":{},"80":{},"150":{},"166":{},"171":{}},"component":{}}],["z420",{"_index":5280,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["z[1",{"_index":5402,"title":{},"name":{},"text":{"60":{},"150":{}},"component":{}}],["zero",{"_index":2773,"title":{},"name":{},"text":{"46":{},"50":{},"51":{},"52":{},"54":{},"55":{},"56":{},"62":{},"66":{},"67":{},"68":{},"72":{},"79":{},"84":{},"86":{},"134":{},"138":{},"139":{},"142":{},"144":{},"146":{},"147":{},"152":{},"156":{},"157":{},"158":{},"162":{},"170":{},"175":{},"177":{}},"component":{}}],["zio",{"_index":5165,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["zl30732",{"_index":6614,"title":{},"name":{},"text":{"131":{}},"component":{}}],["zlib",{"_index":2741,"title":{},"name":{},"text":{"46":{},"62":{},"134":{},"152":{}},"component":{}}],["zone",{"_index":2607,"title":{},"name":{},"text":{"46":{},"55":{},"59":{},"62":{},"72":{},"134":{},"146":{},"149":{},"152":{},"162":{}},"component":{}}],["zonelist",{"_index":4829,"title":{},"name":{},"text":{"59":{},"149":{}},"component":{}}],["zoom",{"_index":4116,"title":{},"name":{},"text":{"55":{},"72":{},"146":{},"162":{}},"component":{}}]],"pipeline":["stemmer"]},"store":{"documents":{"1":{"id":1,"text":"The purpose of the bootloader is to load the Linux kernel into memory together with any other required data (e.g ramdisk image or device tree) and then execute the kernel with appropriate arguments. Microchip uses the U-Boot bootloader which is an integrated part of Buildroot. Targets have been prepared for each of our reference boards: arm_bootloaders - For use on 32 bit ARM based reference boards. arm_bootloaders_bbb - For use on 32 bit ARM based Beagle Bone Black boards as external CPU. arm64_bootloaders - For use on 64 bit ARM based reference boards. arm64_bootloaders_ls1046 - For use on 64 bit ARM based LS1046 boards as external CPU. arm64_bootloaders_rpi - For use on 64 bit ARM based Raspberry Pi Compute Module 4 boards as external CPU. mipsel_bootloaders - For use on all our 32 bit MIPS based reference boards. These targets can be used as a reference if you need to adapt the bootloader to a different board. A bootloader target can be built in the same way as the other targets as described in the Build section. See the individual sections in Supported HW in order to see how to boot a specific board.","title":"","component":"bsp","version":"2023.12","name":"bootloader","url":"/bsp/2023.12/bootloader.html","titles":[{"text":"1. Bootloader","hash":"_bootloader","id":1}]},"2":{"id":2,"text":"QOS is short for Quality Of Service and covers a range of functionality that determines the handling of a frame at ingress and at egress direction. The handling has impact on the frame on ingress: Give frame classified Priority. Give frame classified DPL (Drop Precedence Level). Give frame classified PCP. Give frame classified DEI. The handling has impact on the frame on egress: Scheduling the frame Shaping the frame Give the PCP and DEI value in the VLAN tag. The consequences of frame classified values are generally described in the Frame Metadata section. Default classified Priority, DPL, PCP and DEI can be configured per bridge device. The default PCP and DEI are only relevant for frames that are classified as untagged. The ingress default value can be given by this command: qos i_def eth0 --prio 5 --pcp 5 --dei 1 --dpl 1 The parameters: eth0 - The device is eth0 prio - The default priority value. pcp - The default PCP value. dei - The default DEI value. dpl - The default Drop Precedence Level value. A frame will get default PCP and DEI classified values. A tagged frame will get Tag PCP and DEI as classified PCP and DEI values. A global table mapping the trusted DSCP value of an IP frame to the classified Priority and DPL can be configured. Per port it can be configured if mapping of DSCP should happen or not. A trusted DSCP value can be inserted in the table by this command: qos i_dscp_map 22 --enable 1 --prio 5 --dpl 1 The parameters: 22 - The inserted trusted DSCP value is 22. enable 1 - The DSCP value is enabled in the table. prio - The mapped to priority value. dpl - The mapped to Drop Precedence Level value. This is overwriting the default classified values. A trusted DSCP value can be removed from the table by this command: qos i_dscp_map 22 --enable 0 The parameters: 22 - The removed trusted DSCP value is 22. enable 0 - The DSCP value is removed from the table. A table per bridge device, mapping the PCP and DEI values from a tagged ingress frame to classified Priority and DPL, can be configured. The ingress tag mapping table can be given by this command: qos i_tag_map eth0 --prio 0123456701234567 --dpl 0000000011111111 The parameters: eth0 - The device is eth0 prio - The map of TAG PCP,DEI to Priority. PCP(0-7)/DEI(0) and PCP(0-7)/DEI(1) dpl - The map of TAG PCP,DEI to (color)DPL. PCP(0-7)/DEI(0) and PCP(0-7)/DEI(1) The above command configures what is default: PCP 0-7 is mapping to Prio 0-7 for both DEI 0 and 1. PCP 0-7 is mapping to DPL 0 for DEI 0 and DPL 1 for DEI 1. qos i_tag_map eth0 --prio 22244477111333666 --dpl 1111111100000000 The above command configures: PCP 0-2 is mapping to Prio 2 for DEI 0, PCP 3-5 is mapping to Prio 4 for DEI 0, PCP 6-7 is mapping to Prio 7 for DEI 0, PCP 0-2 is mapping to Prio 1 for DEI 1, PCP 3-5 is mapping to Prio 3 for DEI 1, PCP 6-7 is mapping to Prio 6 for DEI 1, PCP 0-7 is mapping to DPL 1 for DEI 0 and DPL 0 for DEI 1. The ingress mode per bridge device can be configured. The ingress mode determines how the frame classified Priority and DPL values are given. The ingress mode can be given by this command: qos i_mode eth0 --tag 0 --dscp 0 The parameters: eth0 - The device is eth0 tag - Mapping of TAG PCP/DEI is disabled. dscp - Mapping of trusted DSCP is disabled. The above command gives frame the default Prio/DPL values for the device as both mapping types are disabled. qos i_mode eth0 --tag 1 --dscp 0 The above command gives frames the tag PCP/DEI mapped to classified Prio/DPL values. qos i_mode eth0 --tag 1 --dscp 1 The above command gives frames the tag PCP/DEI mapped to classified Prio/DPL values. Any IP frame with a DSCP value matching an entry in the global DSCP mapping table will get classified Prio/DPL values from the DSCP mapping table.","title":"","component":"bsp","version":"2023.12","name":"basic_qos","url":"/bsp/2023.12/basic_qos.html","titles":[{"text":"1. Basic QoS functional description","hash":"_basic_qos_functional_description","id":1},{"text":"1.1. Bridge device Default Configuration.","hash":"_bridge_device_default_configuration","id":2},{"text":"1.2. Frame DSCP value to Prio/DPL mapping.","hash":"_frame_dscp_value_to_priodpl_mapping","id":3},{"text":"1.3. Tag PCP/DEI to Prio/DPL mapping.","hash":"_tag_pcpdei_to_priodpl_mapping","id":4},{"text":"1.4. Ingress mode.","hash":"_ingress_mode","id":5}]},"3":{"id":3,"text":"","title":"","component":"bsp","version":"2023.12","name":"bridge_overview","url":"/bsp/2023.12/bridge_overview.html","titles":[{"text":"1. Bridge Overview of hardware offload","hash":"_bridge_overview_of_hardware_offload","id":1}]},"4":{"id":4,"text":"A switchdev enabled switch does not contain any bridge by default. All network interfaces works as standard Ethernet devices. Use the ip link add command to create a bridge called br0: # ip link add name br0 type bridge It is not possible to create more than one bridge at a time on Microchip switch products. A bridge is VLAN-unaware by default, which means that it doesn’t recognizes VLAN tags. If the bridge should recognize VLAN tags and be able to insert/remove VLAN tags, it must be configured to be VLAN-aware: # ip link set br0 type bridge vlan_filtering 1 To change the bridge back to be VLAN-unaware: # ip link set br0 type bridge vlan_filtering 0 Add the interfaces that should be part of the bridge: # ip link set eth0 master br0 Enable the interfaces and the bridge: # ip link set eth0 up # ip link set br0 up Use the ip link del command to delete a bridge: # ip link del name br0 The command above removes the interfaces from the bridge automatically but you can also remove them manually: # ip link set dev eth0 nomaster The following commands will create a vlan-aware bridge with four interfaces: # ip link add name br0 type bridge # ip link set br0 type bridge vlan_filtering 1 # ip link set eth0 master br0 # ip link set eth1 master br0 # ip link set eth2 master br0 # ip link set eth3 master br0 # ip link set eth0 up # ip link set eth1 up # ip link set eth2 up # ip link set eth3 up # ip link set br0 up The bridge created above can be illustrated like this: To see information about the interfaces: # ip link show 1: lo: mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 3: eth0: mtu 1500 qdisc mq master br0 state UP mode DEFAULT group default qlen 1000 link/ether 00:40:42:04:98:9b brd ff:ff:ff:ff:ff:ff 4: eth1: mtu 1500 qdisc mq master br0 state UP mode DEFAULT group default qlen 1000 link/ether 00:40:42:04:98:9c brd ff:ff:ff:ff:ff:ff 5: eth2: mtu 1500 qdisc mq master br0 state UP mode DEFAULT group default qlen 1000 link/ether 00:40:42:04:98:9d brd ff:ff:ff:ff:ff:ff 6: eth3: mtu 1500 qdisc mq master br0 state UP mode DEFAULT group default qlen 1000 link/ether 00:40:42:04:98:9e brd ff:ff:ff:ff:ff:ff 7: sit0@NONE: mtu 1480 qdisc noop state DOWN mode DEFAULT group default qlen 1000 link/sit 0.0.0.0 brd 0.0.0.0 8: br0: mtu 1500 qdisc noqueue state UP mode DEFAULT group default qlen 1000 link/ether 00:40:42:04:98:9b brd ff:ff:ff:ff:ff:ff To see information about the bridge: # bridge link show 3: eth0: mtu 1500 master br0 state forwarding priority 32 cost 4 4: eth1: mtu 1500 master br0 state forwarding priority 32 cost 4 5: eth2: mtu 1500 master br0 state forwarding priority 32 cost 4 6: eth3: mtu 1500 master br0 state forwarding priority 32 cost 4 To allow communication between the CPU and hosts on any of the bridge ports, it is necessary to assign an IP address to the bridge itself and NOT to the individual interfaces. To assign an IP address on the bridge itself and check the status: # ip addr set dev br0 192.168.1.1 # ip addr show dev br0 8: br0: mtu 1500 qdisc noqueue state UP group default qlen 1000 link/ether 00:00:00:01:00:00 brd ff:ff:ff:ff:ff:ff inet 192.168.1.1/24 scope global br0 valid_lft forever preferred_lft forever inet6 fe80::cc8f:1ff:fe4b:10c9/64 scope link valid_lft forever preferred_lft forever It is now possible to ping hosts on the same subnet: # ping 192.168.1.2 PING 192.168.1.2 (192.168.1.2) 56(84) bytes of data. 64 bytes from 192.168.1.2: icmp_seq=1 ttl=64 time=0.700 ms 64 bytes from 192.168.1.2: icmp_seq=2 ttl=64 time=0.270 ms 64 bytes from 192.168.1.2: icmp_seq=3 ttl=64 time=0.257 ms 64 bytes from 192.168.1.2: icmp_seq=4 ttl=64 time=0.266 ms ^C --- 192.168.1.2 ping statistics --- 4 packets transmitted, 4 received, 0% packet loss, time 3077ms rtt min/avg/max/mdev = 0.257/0.373/0.700/0.188 ms If a bridge is VLAN-aware it is possible to assign a port to one or more VLANs. By default all ports are member of VLAN 1: # bridge vlan show port vlan-id eth0 1 PVID Egress Untagged eth1 1 PVID Egress Untagged eth2 1 PVID Egress Untagged eth3 1 PVID Egress Untagged br0 1 PVID Egress Untagged A VLAN can be associated with the following flags: PVID - Port VID. Untagged frames received at ingress are assigned to this VLAN. Egress Untagged - Untag on egress. Frames in this VLAN are sent as untagged at egress. Both PVID and Egress Untagged can only be assigned to one VLAN at a time, but it does not need to be the same VLAN. Add VLAN 100 on eth0: # bridge vlan add dev eth0 vid 100 Delete VLAN 100 on eth0: # bridge vlan del dev eth0 vid 100 If you want to assign PVID and/or Egress Untagged to a new VLAN you must first delete the VLAN that currently own the flags. If you want to keep the old VLAN you must add it again without the flags: # bridge vlan del dev eth0 vid 1 # bridge vlan add dev eth0 vid 1 # bridge vlan add dev eth0 vid 100 pvid untagged # bridge vlan del dev eth1 vid 1 # bridge vlan add dev eth1 vid 1 # bridge vlan add dev eth1 vid 100 pvid untagged # bridge vlan show port vlan-id eth0 1 100 PVID Egress Untagged eth1 1 100 PVID Egress Untagged eth2 1 PVID Egress Untagged eth3 1 PVID Egress Untagged br0 1 PVID Egress Untagged If you want the CPU on the switch to be part of a VLAN you must add the VLAN to the bridge interface: # bridge vlan del dev eth0 vid 1 # bridge vlan add dev eth0 vid 1 # bridge vlan add dev eth0 vid 100 pvid untagged # bridge vlan del dev eth1 vid 1 # bridge vlan add dev eth1 vid 1 # bridge vlan add dev eth1 vid 100 pvid untagged # bridge vlan del dev br0 vid 1 self # bridge vlan add dev br0 vid 1 self # bridge vlan add dev br0 vid 100 pvid untagged self # bridge vlan show port vlan-id eth0 1 100 PVID Egress Untagged eth1 1 100 PVID Egress Untagged eth2 1 PVID Egress Untagged eth3 1 PVID Egress Untagged br0 1 100 PVID Egress Untagged You must use the keyword self when assigning a VLAN to a bridge because it’s the bridge itself. The MAC table, also known as the Forwarding Data Base (FDB), contains entries that map the [MAC addresse, VID] tupple to a port. If the bridge is configured to be VLAN-unaware, the VID is 1 by default and does not need to be specified in any of the MAC table commands. The MAC table consists of different kind of entries and will normally be one of: permanent - Assigned by the system - e.g. the MAC address of an interface. static - Assigned by the user. dynamic - Learned on one of the network interfaces and subject to ageing. To add a static MAC entry: # bridge fdb add 00:11:11:11:11:11 dev eth1 vlan 1 master static To delete a static MAC entry: # bridge fdb del 00:11:11:11:11:11 dev eth1 vlan 1 master static Dynamic MAC address entries are removed from the MAC table if the bridge has not seen the MAC address after a specific amount of time. This time is called the ageing time and is 300 seconds by default. To change the ageing time to 600 seconds: # ip link set br0 type bridge ageing_time 600 To show the content of the MAC table: # bridge fdb show 00:22:22:22:22:22 dev eth0 vlan 1 extern_learn offload master br0 00:40:42:04:98:9b dev eth0 master br0 permanent 01:00:5e:00:00:01 dev eth0 self permanent 00:11:11:11:11:11 dev eth1 vlan 1 master br0 static 00:40:42:04:98:9c dev eth1 vlan 1 master br0 permanent 00:40:42:04:98:9c dev eth1 master br0 permanent 01:00:5e:00:00:01 dev eth1 self permanent 00:40:42:04:98:9b dev eth2 vlan 1 offload master br0 00:40:42:04:98:9d dev eth2 vlan 1 master br0 permanent 00:40:42:04:98:9d dev eth2 master br0 permanent 01:00:5e:00:00:01 dev eth2 self permanent 00:40:42:04:98:9e dev eth3 vlan 1 master br0 permanent 00:40:42:04:98:9e dev eth3 master br0 permanent 01:00:5e:00:00:01 dev eth3 self permanent 01:00:5e:00:00:6a dev br0 self permanent 01:00:5e:00:00:01 dev br0 self permanent Static entries are marked as static and dynamic entries are market as extern_learn offload. Mirroring is used to send a copy of received or transmitted frames seen on one or more ports to a monitor port. This is useful for debugging of network problems. Mirroring is controlled by a combination of tc qdisc and tc filter commands. See also the TC Introduction page for a general introduction to tc commands. Mirroring all ingress traffic on port eth0 to monitor port eth3: # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress prio 1 handle 1 matchall skip_sw \\ action mirred egress mirror dev eth3 To delete the mirroring above: # tc filter del dev eth0 ingress prio 1 handle 1 matchall # tc qdisc del dev eth0 clsact Mirroring all egress traffic on port eth1 to monitor port eth3: # tc qdisc add dev eth1 clsact # tc filter add dev eth1 egress prio 1 handle 1 matchall skip_sw \\ action mirred egress mirror dev eth3 To delete the mirroring above: # tc filter del dev eth1 egress prio 1 handle 1 matchall # tc qdisc del dev eth1 clsact It is not possible to use more than one monitor port. The tc filter command will fail if you try to configure a second monitor port. It is also possible to mirror selected ingress traffic on a port and this is described on the ACL (IS2) page. Link Aggregation is a way of combining two or more ports to act as a single port. It can be used to increase the throughput of a link or to provide redundancy. The ports that are combined are called a Link Aggregation Group (LAG). Link Aggregation is implemented by using bond interfaces on Microchip switch products. Two different modes are supported: balance-xor - Select the egress interface by xor-ing different parts of the packet selected by the Transmit Hash Policy 802.3ad - Same as above supplemented with running the LACP protocol which actively checks the connectivity between the links. To create a bond interface called bond0: # ip link add name bond0 type bond Configure the bond interface to check link status on associated links every 100 milliseconds: # ip link set bond0 type bond miimon 100 Configure the bond interface to use balance-xor mode: # ip link set bond0 type bond mode balance-xor Or configure the bond interface to use 802.3ad mode: # ip link set bond0 type bond mode 802.3ad # ip link set bond0 type bond lacp_rate fast The LACP hello rate lacp_rate can be set to one of the following values: slow - Check the link connectivity every 30 seconds. fast - Check the link connectivity every second. Configure the Transmit Hash Policy to use fields from both layer 2 and 3 in the xor algorithm: # ip link set bond0 type bond xmit_hash_policy layer2+3 Supported values are: layer2 - XOR lower 12 bits of DMAC and SMAC. layer2+3 - XOR lower 12 bits of DMAC and SMAC and lower 8 bits of IPv4/IPv6 SIP and DIP. layer3+4 - XOR lower 8 bits of IPv4/IPv6 SIP and DIP and lower 8 bits of SPORT and DPORT. Enable the bond interface: # ip link set bond0 up Add a port to the bond interface (the port must be down before adding it): # ip link set eth0 down # ip link set eth0 master bond0 # ip link set eth0 up The following commands creates a bond interface, bond0, which contains the ports eth0, eth1 and eth2. # ip link add name bond0 type bond # ip link set bond0 type bond miimon 100 # ip link set bond0 type bond mode balance-xor # ip link set bond0 type bond xmit_hash_policy layer2+3 # ip link set bond0 up # ip link set eth0 down # ip link set eth1 down # ip link set eth2 down # ip link set eth0 master bond0 # ip link set eth1 master bond0 # ip link set eth2 master bond0 # ip link set eth0 up # ip link set eth1 up # ip link set eth2 up Now create a bridge with two interfaces - one is the bond interface created above and the other is eth3: # ip link add name br0 type bridge # ip link set dev br0 up # ip link set bond0 master br0 # ip link set eth3 master br0 The bridge/bond combination created above can be illustrated like this: Show the bond status and the bridge: # cat /proc/net/bonding/bond0 Ethernet Channel Bonding Driver: v5.10.0-01203-gb80a6c394df4-dirty Bonding Mode: load balancing (xor) Transmit Hash Policy: layer2+3 (2) MII Status: up MII Polling Interval (ms): 100 Up Delay (ms): 0 Down Delay (ms): 0 Peer Notification Delay (ms): 0 Slave Interface: eth0 MII Status: up Speed: 1000 Mbps Duplex: full Link Failure Count: 0 Permanent HW addr: 00:40:42:04:98:9b Slave queue ID: 0 Slave Interface: eth1 MII Status: up Speed: 1000 Mbps Duplex: full Link Failure Count: 0 Permanent HW addr: 00:40:42:04:98:9c Slave queue ID: 0 Slave Interface: eth2 MII Status: up Speed: 1000 Mbps Duplex: full Link Failure Count: 0 Permanent HW addr: 00:40:42:04:98:9d Slave queue ID: 0 # bridge link show 6: eth3: mtu 1500 master br0 state forwarding priority 32 cost 4 8: bond0: mtu 1500 master br0 state forwarding priority 32 cost 4 IGMP/MLD Snooping is a layer 2 mechanism for reducing multicast traffic in a network. IGMP is for IPv4 and MLD is for IPv6. The switch listens to IGMP/MLD conversations between hosts and routers and remembers the ports that are using IP multicast transmissions. The switch will only forward multicast traffic to ports where an interest has been seen. This will reduce both network traffic and the load on hosts. IGMP/MLD Snooping is enabled by default and ports are configured to automatically detect if a multicast router is present on the port. To disable IGMP/MLD Snooping: # ip link set dev br0 type bridge mcast_snooping 0 To permanently disable multicast routers on a port: # ip link set dev eth0 type bridge_slave mcast_router 0 To let the port detect the presence of multicast routers (default): # ip link set dev eth0 type bridge_slave mcast_router 1 To permanently enable multicast forwarding on a port, even if no multicast router is detected: # ip link set dev eth0 type bridge_slave mcast_router 2 IGMP Snooping supports IGMP version 2 and 3 where version 2 is default. To change to use IGMP version 3: # ip link set dev br0 type bridge mcast_igmp_version 3 MLD Snooping supports MLD version 1 and 2 where version 1 is default. To change to use MLD version 2: # ip link set dev br0 type bridge mcast_mld_version 2 To enable a IGMP/MLD Querier on the bridge (default is disabled): # ip link set dev br0 type bridge mcast_querier 1 To see other IGMP/MLD related configuration options: # ip link help bridge Search for options starting with mcast_ It is possible also to enable/disable IGMP/MLD per vlan. First it is needed to enable mcast_vlan_snooping: # ip link set dev br0 type bridge mcast_vlan_snooping 1 Then all the previous configurations that were added per bridge can be added also per vlan, for example enabling a IGMP/MLD Querier: # bridge vlan global set dev br0 vid 256 mcast_querier 1 To see other IGMP/MLD related configuration options per vlan: # bridge vlan global help To see IGMP status/statistics: # cat /proc/net/igmp To see MLD status/statistics: # cat /proc/net/igmp6 Spanning Tree Protocol is implemented by the open source user-space daemon mstpd which is automatically started when the Spanning Tree Protocol is enabled on a bridge. mstpd supports Rapid Spanning Tree (RSTP) which is defined in IEEE 802.1w. The Linux kernel implementation of the Spanning Tree Protocol has no support for RSTP. RSTP is an improvement of the original Spanning Tree Protocol (STP) defined in IEEE 802.1D. It provides faster recovery in response to changes in the network topology. mstpd runs RSTP by default but falls back to STP if it receives an STP BPDU. To enable Spanning Tree Protocol on a bridge: # ip link set dev br0 type bridge stp_state 1 To disable Spanning Tree Protocol on a bridge: # ip link set dev br0 type bridge stp_state 0 The Spanning Tree Protocol on bridges managed by mstpd cannot be controlled by the brctl tool. Use the mstpctl tool instead! To show the current Spanning Tree Protocol status on a bridge: # mstpctl showbridge # mstpctl showbridge br0 To show the current Spanning Tree Protocol status on one or all port(s): # mstpctl showport br0 eth0 # mstpctl showport br0 To show the current Spanning Tree Protocol statistics on one or all port(s): # mstpctl showportdetail br0 eth0 # mstpctl showportdetail br0 To force STP instead of RSTP: # mstpctl setforcevers br0 stp RSTP normally works 'out of the box' when enabled but it is possible to use mstpctl to fine-tune the spanning tree settings. To see all the supported mstpctl options: # mstpctl","title":"","component":"bsp","version":"2023.12","name":"bridge_configuration","url":"/bsp/2023.12/bridge_configuration.html","titles":[{"text":"1. Bridge Configuration","hash":"_bridge_configuration","id":1},{"text":"1.1. IP address","hash":"_ip_address","id":2},{"text":"1.2. VLAN","hash":"bridge_vlan","id":3},{"text":"1.3. MAC table","hash":"_mac_table","id":4},{"text":"1.4. Mirroring","hash":"_mirroring","id":5},{"text":"1.5. Link Aggregation","hash":"_link_aggregation","id":6},{"text":"1.6. IGMP/MLD Snooping","hash":"_igmpmld_snooping","id":7},{"text":"1.7. Spanning Tree Protocol","hash":"_spanning_tree_protocol","id":8}]},"5":{"id":5,"text":"","title":"","component":"bsp","version":"2023.12","name":"cookbook_examples","url":"/bsp/2023.12/cookbook_examples.html","titles":[{"text":"1. Cookbook Examples","hash":"_cookbook_examples","id":1}]},"6":{"id":6,"text":"Ethernet Ring Protection Switching as described in ITU G.8032 is supported by the BSP. The feature is implemented partly in the Linux kernel and partly in user-space application. The kernel portion is not fully up-streamed, and the associated application will only work with a pre-patched kernel. There is an 'erps_server' that must run in the background. There is a 'erps' user space client application that based on arguments can be used to issue commands to create and configure ERPS instances. Multiple ERPS instances can be created sharing same port as ring link interface. The control VLAN and the protected VLANs must be unique per ERPS instance. There can be a ERPS-MAX number of ERPS instances created. The maximum is 64. There is a number of ERPS user space commands that enables: Create and delete of ERPS instances. Set configuration. Set administrative commands. Get configuration. Get status information. CFM (Connectivity Fault Management) is described in IEEE Std 802.1Q-2018 section 19-21 CFM MIP instances are required to be created on control VLAN interfaces to do the handling of received RAPS frames in the control VLAN. CFM MEP instance can be created on ports to do ring link monitoring based on CCM. CFM can be found here: https://github.com/microchip-ung/cfm This is a model of a ERPS configuration: ERPS Model The below commands are for ERPS currently without interconnected rings. ERPS commands: erps create bridge instance version port0 port1 erps delete bridge instance erps control bridge instance mdlevel vlanif0 vlanif1 erps rpl bridge instance role port erps vlans bridge instance erps node-id bridge instance erps ring-id bridge instance erps command bridge instance command port erps revertive bridge instance timer erps hold bridge instance timer erps guard bridge instance timer erps config-show bridge instance erps status-show bridge instance An ERPS instance is created. bridge: Bridge device name. instance: Instance number. Values . version: Specify whether to use G.8032v1 or G.8032v2 of the RAPS protocol. Values . port0: Ring port0 device name. port1: Ring port1 device name. An ERPS instance is deleted. bridge: Bridge device name. instance: Instance number. Values . The ERPS control VLAN configuration. The OAM level where RAPS frames are transmitted and received and the VLAN interfaces. bridge: Bridge device name. instance: Instance number. Values . mdlevel: The OAM Maintenance Domain level. Values . vlanif0: The Ring port0 control VLAN interface device name. vlanif1: The Ring port1 control VLAN interface device name. Default mdlevel is 7. The ERPS Ring Protection Link role configuration. bridge: Bridge device name. instance: Instance number. Values . role: The RPL role. Values . port: The RPL ring port number. Values Default role is none. The ERPS protected VLANs configuration. ERPS protected VLANs can be added or deleted. The added VLANs can be shown. vlan operation. Values . bridge: Bridge device name. instance: Instance number. Values . The list of VLANs, e.g. 2-10,123-456,4044. Default is no protected VLANs. The ERPS node ID configuration. This is inserted in the RAPS PDU. bridge: Bridge device name. instance: Instance number. Values . The node ID. Values is a UC MAC. Default is the bridge MAC. Configuring 00:00:00:00:00:00 gives the bridge MAC. The ERPS ring ID configuration. This is the last octet in the DMAC of the RAPS frame. bridge: Bridge device name. instance: Instance number. Values . The ring ID. Values . Default ring ID is 1. The ERPS administrative commands. bridge: Bridge device name. instance: Instance number. Values . command: The administrative command. Values . port: The command ring port number. Values The command port is the port where control VLAN and the protected traffic VLANs are blocked. The clear command will clear any manual or forced switch command. The clear command will terminate any running WTR or WTB timer. The ERPS revertive configuration. When revertive is enabled the WTR timer is used to revert ERPS state to IDEL when any switch condition has cleared. Revertive behavior. Values . bridge: Bridge device name. instance: Instance number. Values . timer: WTR timer. Values . Resolution 1min. Default revertive is disable. The ERPS hold-off timer configuration. When a new (or more severe) defect occurs, action will not be executed until the hold-off timer expires. bridge: Bridge device name. instance: Instance number. Values . The hold-off timer. Values . Resolution 1ms. 0 means no holdoff. Default is 0. The hold off timer value must be divisible by 100. The ERPS guard timer configuration. The guard timer is used to prevent ring nodes from acting upon outdated RAPS PDUs upon topology changes. bridge: Bridge device name. instance: Instance number. Values . The guard timer. Values . Resolution 1ms. Default is 500ms. The guard timer value must be divisible by 10. The ERPS configuration is shown. bridge: Bridge device name. instance: Instance number. Values . The ERPS status is shown. bridge: Bridge device name. instance: Instance number. Values . status information to show. Values This section describes how to configure a three node ring with MEPs for ring link monitoring based on CCM-DEFECT detection. The ring link interfaces are eth0 and eth1. The service frame add/drop port is eth3. Protected VLANs are 100, 200, 300. Control VLAN is 400. Control OAM level is 7. Nodes are physically connected like this: It is recommended that the ring protocol functionality is tested before adding protected VLAN to the ring. On all nodes bridge br0 must be created and the Control VLAN interfaces must be added. Bridge configuration: ip link add name br0 type bridge ip link set dev br0 up ip link set dev br0 type bridge vlan_filtering 1 ip link set dev eth0 master br0 ip link set dev eth1 master br0 ip link set dev eth2 master br0 Adding control VLAN interfaces on ring ports: ip link add link eth0 name eth0.400 type vlan id 400 ip link add link eth1 name eth1.400 type vlan id 400 ip link set dev eth0.400 up ip link set dev eth1.400 up Adding RAPS frame handling MIPs on the control VLAN interfaces: cfm mip-create bridge br0 instance 1 direction down port eth0 vlan eth0.400 cfm mip-create bridge br0 instance 2 direction down port eth1 vlan eth1.400 cfm mip-config bridge br0 instance 2 mac 00-00-00-03-00-02 level 4 raps redirect cfm mip-config bridge br0 instance 1 mac 00-00-00-03-00-01 level 4 raps redirect This node is the RPL owner. RPL is on eth0 MEP configuration: cfm mep-create bridge br0 instance 1 domain port direction down port eth0 cfm mep-config bridge br0 instance 1 mac 00-00-00-00-01-00 level 7 mepid 10 cfm cc-config bridge br0 instance 1 enable 1 interval 3ms3 domain-name ABCDEFGHIJ short-name KLMNOPQRST cfm cc-peer bridge br0 instance 1 mepid 31 cfm cc-ccm-tx bridge br0 instance 1 dmac 01-80-C2-00-00-30 period 1000 cfm mep-create bridge br0 instance 2 domain port direction down port eth1 cfm mep-config bridge br0 instance 2 mac 00-00-00-00-01-01 level 7 mepid 11 cfm cc-config bridge br0 instance 2 enable 1 interval 3ms3 domain-name ABCDEFGHIJ short-name KLMNOPQRST cfm cc-peer bridge br0 instance 2 mepid 20 cfm cc-ccm-tx bridge br0 instance 2 dmac 01-80-C2-00-00-30 period 1000 ERPS configuration: erps_server & erps create bridge br0 instance 1 version 1 port0 eth0 port1 eth1 erps ring-id bridge br0 instance 1 11 erps rpl bridge br0 instance 1 role owner port 0 erps control bridge br0 instance 1 mdlevel 4 vlanif0 eth0.400 vlanif1 eth1.400 Note that no protected VLANS are added to the ERPS. This is done when the full ring is enabled and tested for protocol functionality. This node is a normal node - not connected to RPL. MEP configuration: cfm mep-create bridge br0 instance 1 domain port direction down port eth0 cfm mep-config bridge br0 instance 1 mac 00-00-00-00-02-00 level 7 mepid 20 cfm cc-config bridge br0 instance 1 enable 1 interval 3ms3 domain-name ABCDEFGHIJ short-name KLMNOPQRST cfm cc-peer bridge br0 instance 1 mepid 11 cfm cc-ccm-tx bridge br0 instance 1 dmac 01-80-C2-00-00-30 period 1000 cfm mep-create bridge br0 instance 2 domain port direction down port eth1 cfm mep-config bridge br0 instance 2 mac 00-00-00-00-02-01 level 7 mepid 21 cfm cc-config bridge br0 instance 2 enable 1 interval 3ms3 domain-name ABCDEFGHIJ short-name KLMNOPQRST cfm cc-peer bridge br0 instance 2 mepid 30 cfm cc-ccm-tx bridge br0 instance 2 dmac 01-80-C2-00-00-30 period 1000 ERPS configuration: erps create bridge br0 instance 1 version 1 port0 eth0 port1 eth1 erps ring-id bridge br0 instance 1 22 erps control bridge br0 instance 1 mdlevel 4 vlanif0 eth0.400 vlanif1 eth1.400 Note that no protected VLANS are added to the ERPS. This is done when the full ring is enabled at tested for protocol functionality. This node is the RPL neighbor. RPL is on eth1 MEP configuration: cfm mep-create bridge br0 instance 1 domain port direction down port eth0 cfm mep-config bridge br0 instance 1 mac 00-00-00-00-03-00 level 7 mepid 30 cfm cc-config bridge br0 instance 1 enable 1 interval 3ms3 domain-name ABCDEFGHIJ short-name KLMNOPQRST cfm cc-peer bridge br0 instance 1 mepid 21 cfm cc-ccm-tx bridge br0 instance 1 dmac 01-80-C2-00-00-30 period 1000 cfm mep-create bridge br0 instance 2 domain port direction down port eth1 cfm mep-config bridge br0 instance 2 mac 00-00-00-00-03-01 level 7 mepid 31 cfm cc-config bridge br0 instance 2 enable 1 interval 3ms3 domain-name ABCDEFGHIJ short-name KLMNOPQRST cfm cc-peer bridge br0 instance 2 mepid 10 cfm cc-ccm-tx bridge br0 instance 2 dmac 01-80-C2-00-00-30 period 1000 ERPS configuration: erps create bridge br0 instance 1 version 1 port0 eth0 port1 eth1 erps ring-id bridge br0 instance 1 33 erps rpl bridge br0 instance 1 role neighbor port 1 erps control bridge br0 instance 1 mdlevel 4 vlanif0 eth0.400 vlanif1 eth1.400 Note that no protected VLANS are added to the ERPS. This is done when the full ring is enabled at tested for protocol functionality. When the ring is configured, to make it operational protecting VLANs, it must be tested for protocol functionality. When ring has proved able to handle link failure and link restore and is in IDLE state it is ready to add protected VLANs. On all nodes 1-3: Adding protected traffic VLANs to bridge: bridge vlan add dev br0 vid 100 self bridge vlan add dev br0 vid 200 self bridge vlan add dev br0 vid 300 self Protected traffic VLANs on ring ports and traffic port: bridge vlan add dev eth0 vid 100 bridge vlan add dev eth1 vid 100 bridge vlan add dev eth2 vid 100 bridge vlan add dev eth0 vid 200 bridge vlan add dev eth1 vid 200 bridge vlan add dev eth2 vid 200 bridge vlan add dev eth0 vid 300 bridge vlan add dev eth1 vid 300 bridge vlan add dev eth2 vid 300 Adding VLANs to the ERPS instance: erps vlans bridge br0 instance 1 100,200,300","title":"","component":"bsp","version":"2023.12","name":"erps","url":"/bsp/2023.12/erps.html","titles":[{"text":"1. ERPS functional description","hash":"_erps_functional_description","id":1},{"text":"1.1. Introduction","hash":"_introduction","id":2},{"text":"1.2. ERPS commands","hash":"_erps_commands","id":3},{"text":"1.2.1. erps create","hash":"_erps_create","id":4},{"text":"1.2.2. erps delete","hash":"_erps_delete","id":5},{"text":"1.2.3. erps control","hash":"_erps_control","id":6},{"text":"1.2.4. erps rpl","hash":"_erps_rpl","id":7},{"text":"1.2.5. erps vlans","hash":"_erps_vlans","id":8},{"text":"1.2.6. erps node-id","hash":"_erps_node_id","id":9},{"text":"1.2.7. erps ring-id","hash":"_erps_ring_id","id":10},{"text":"1.2.8. erps command","hash":"_erps_command","id":11},{"text":"1.2.9. erps revertive","hash":"_erps_revertive","id":12},{"text":"1.2.10. erps hold","hash":"_erps_hold","id":13},{"text":"1.2.11. erps guard","hash":"_erps_guard","id":14},{"text":"1.2.12. erps config-show","hash":"_erps_config_show","id":15},{"text":"1.2.13. erps status-show","hash":"_erps_status_show","id":16},{"text":"2. ERPS Ring Configuration.","hash":"_erps_ring_configuration","id":17},{"text":"2.1. Control VLAN configuration","hash":"_control_vlan_configuration","id":18},{"text":"2.2. Node 1","hash":"_node_1","id":19},{"text":"2.3. Node 2","hash":"_node_2","id":20},{"text":"2.4. Node 3","hash":"_node_3","id":21},{"text":"2.5. Making ring operational","hash":"_making_ring_operational","id":22}]},"7":{"id":7,"text":"CFM is Connectivity Fault Management as described in 802.1Q section 20. The Microchip switch has a HW Engine that supports a range of functionality that is related to the handling of OAM frames at both ingress and egress directions. What is supported differs depending on the exact platform. If a described functionality is not supported on all platforms it will be stated. Currently, the following is supported: Creating/Deleting a Port domain MEP Enable/Disable CCM PDU handling. Adding/Removing Peer MEPs. CCM PDU handling. The MEP handling has an impact on the frame on ingress: MEG level filtering CCM Frame reception interval monitoring. CCM defect (LOC) generation. The MEP handling has an impact on the frame on egress: MEG level filtering CCM Frame Transmission. CCM Frame updating with RDI. One Down Port domain MEP can be created per bridge device (port). The MEP will prevent any leaking of OAM PDU in and out of the MEG. Ingress CCM frames on the configured MEG level and below will be handled by the MEP. CCM frame will be transmitted with the configured MEG level. This is a model of the possible MEP configuration: MEP Model First a bridge must be created and devices (ports) must be added: ip link add name br0 type bridge ip link set dev eth0 master br0 ip link set dev eth1 master br0 The bridge is br0 with eth0 and eth1 as devices (ports) This is creating a MEP instance: cfm mep-create bridge br0 instance 10 domain port direction down port eth0 The bridge is br0. The device (port) is eth0. Instance number is 10. Domain is port. Direction is down The MEP is in the Port domain meaning OAM frames are untagged and not related to any VLAN. This is deleting a MEP instance: cfm mep-delete bridge br0 instance 10 The bridge is br0. Instance number is 10. When a MEP is created, there are some attributes that can be configured with this command: cfm mep-config bridge br0 instance 10 mac 00-00-00-03-00-00 level 5 mepid 8 The bridge is br0. Instance number is 10. MAC address of the MEP is 00-00-00-03-00-00. MEG Level of the MEP is 5. MEP ID of the MEP is 8. When a MEP is created, Peer MEPs can be added and removed: cfm cc-peer bridge br0 instance 10 mepid 9 cfm cc-peer bridge br0 instance 10 mepid 8 The bridge is br0. Instance number is 10. Peer MEP with ID 8 and 9 are added. cfm cc-peer bridge br0 instance 10 remove 1 mepid 8 The bridge is br0. Instance number is 10. Peer MEP with ID 8 is removed. When a MEP is created, the Continuity Check functionality can be enabled: cfm cc-config bridge br0 instance 10 enable 1 interval 1s domain-name ABCDEFGHIJ short-name KLMNOPQRST The bridge is br0. Instance number is 10. CC is enable. CCM Expected reception interval and transmission interval is 1s - one frame per second. MAID Domain name is ABCDEFGHIJ. MAID Short name is KLMNOPQRST. The MAID Domain name can be omitted to configure MAID with no Domain name. When CC is enabled CCM Frame reception interval is monitored for all add Peer MEPs. When a MEP is created, the Continuity Check functionality can be disabled: cfm cc-config bridge br0 instance 10 enable 0 The bridge is br0. Instance number is 10. CC is not enable. When a MEP is created, transmission of CCM frames can be enabled: cfm cc-ccm-tx bridge br0 instance 10 dmac 01-80-C2-00-00-30 sequence 1 \\ period 5 iftlv 1 iftlv-value 100 porttlv 1 porttlv-value 200 The bridge is br0. Instance number is 10. CCM destination MAC is 01-80-C2-00-00-30. CCM insertion of sequence numbers is enabled. CCM is transmitted for a period of 5 seconds CCM insertion of Interface TLV is enabled and the value is 100. CCM insertion of Port TLV is enabled and the value is 200. Within 5 seconds this function must be called again in order to keep transmission alive. When a MEP is created and transmission of CCM frames is enabled, the state of the inserted RDI can be controlled: cfm cc-rdi bridge br0 instance 10 rdi 1\" The bridge is br0. Instance number is 10. CCM inserted RDI is set tp 1. The below command will show the status for all created MEPs on the bridge. For each MEP it will show the status for all added Peer MEPs. cfm mep-status-show bridge br0 CFM MEP status: Instance 10 Opcode unexp seen 0 Version unexp seen 0 Rx level low seen 0 CFM CC peer status: Instance 10 Peer-mep 9 CCM defect 1 Rdi 0 Port tlv 0 If tlv 0 CCM seen 0 Tlv seen 0 Seq unexp seen 0 The bridge is br0. Instance number is 10. Peer MEP ID is 9. Opcode unexp seen is 1 when OAM PDU with unknown opcode is received. Version unexp seen is 1 when OAM PDU with unknown version is received. Rx level low seen is 1 when OAM PDU with low MEG level is received. CCM defect is 1 when no CCM frame is received for 3,25 * CC interval. Rdi is 1 when CCM frame is received with RDI, Port tlv is the value of the received Port TLV value. If tlv is the value of the received Interface TLV value. CCM seen is 1 when CCM frame is received. Tlv seen is 1 when CCM frame with TLV is received. Seq unexp seen is 1 when CCM frame with an unexpected sequence number is received. All status named \"seen\" will be cleared when the command is called. The below command will show the configuration for all created MEPs on the bridge. cfm mep-config-show bridge br0 The below command will start a NETLINK CFM notification server that will print out Peer MEP CCM defect status change. cfm_server &","title":"","component":"bsp","version":"2023.12","name":"cfm","url":"/bsp/2023.12/cfm.html","titles":[{"text":"1. CFM functional description","hash":"_cfm_functional_description","id":1},{"text":"1.1. Introduction","hash":"_introduction","id":2},{"text":"1.2. MEP Create and Delete","hash":"_mep_create_and_delete","id":3},{"text":"1.3. MEP Configuration","hash":"_mep_configuration","id":4},{"text":"1.4. Peer MEP Add and Remove.","hash":"_peer_mep_add_and_remove","id":5},{"text":"1.5. MEP CC Configuration.","hash":"_mep_cc_configuration","id":6},{"text":"1.6. MEP CCM transmission.","hash":"_mep_ccm_transmission","id":7},{"text":"1.7. MEP and peer MEP show status.","hash":"_mep_and_peer_mep_show_status","id":8},{"text":"1.8. MEP and peer MEP show configuration.","hash":"_mep_and_peer_mep_show_configuration","id":9},{"text":"1.9. MEP notifications.","hash":"_mep_notifications","id":10}]},"8":{"id":8,"text":"The switch has frame forwarding hardware offload capabilities that are divided into ingress, queuing, and egress logical functional blocks. The following will outline what these blocks are and what they basically are doing. For each block, there will be a functional description of how and with which commands it can be configured. The ingress forwarding path is described in the following as a sequence of blocks a frame will pass through. The queue system contains eight egress queues per port - one per priority. The selection of the priority queue is done based on the 'Queue ID' that is classified in the ingress path. The egress forwarding path is described in the following as a sequence of blocks a frame will pass through.","title":"","component":"bsp","version":"2023.12","name":"forwarding_overview","url":"/bsp/2023.12/forwarding_overview.html","titles":[{"text":"1. Overview of frame forwarding","hash":"_overview_of_frame_forwarding","id":1},{"text":"2. Ingress path","hash":"_ingress_path","id":2},{"text":"3. Queue system","hash":"_queue_system","id":3},{"text":"4. Egress path","hash":"_egress_path","id":4}]},"9":{"id":9,"text":"When the frames are forwarded through the switch they carry a set of metadata. First, this metadata is assigned default values and in different blocks, these values can be changed. The values have different purposes that can have an influence on how the frame is treated, like what TCAM entries it hit, how it is policed and shaped, what special function HW resources it will hit, and how the pushed tag will look like on egress In the following, it will be outlined what the metadata is, how it is assigned, and how it is used. List of supported metadata: Classified VID. Classified Priority. Classified DPL (Drop Precedence Level). Classified PCP. Classified DEI. FRER HW pointer. PSFP HW pointer. PSFP policer HW pointer. ACL policer HW pointer. Queue ID. Policy Association Group (PAG) Ingress Service Descriptor (ISDX) Not all metadata is supported in all TCAMs on all switches, so you should consult the datasheet for the details. Assignment: Frames classified as untagged is assigned the bridge device default VID as classified VID. Frames classified as tagged is assigned VID from the tag as classified VID. Frames hitting a TC filter can have the classified VID changed. Use: Frames can hit a TC filter that has classified VID as key. Frames are forwarded in a created bridge VLAN based on classified VID. Frames can have a tag pushed with classified VID as the Tag VID on egress. Assignment: All Frames are assigned the bridge device default Priority as classified Priority. Frames classified as tagged can have PCP from the tag mapped to a classified Priority. IP frames can have PSFP value from frame mapped to a classified Priority. Frames hitting a TC filter can have the classified Priority changed. Use: By default, the classified Priority is set to Queue ID that is used to decide which queue in the Queue System the frame is entering. On egress, frames can be scheduled and shaped based on classified Priority. On egress, a tag pushed can have classified Priority mapped to Tag PCP and DEI. Assignment: All Frames are assigned the bridge device default DPL as classified DPL. Frames classified as tagged can have DEI from the tag mapped to a classified DPL. IP frames can have PSFP value from frame mapped to a classified DPL. Frames hitting a TC filter can have the classified DPL changed. Use: The DPL is used in the queue system to decide what frames to drop when congestion happens. DPL is the color of the frame that can be used by a color aware policer. On egress, a tag pushed can have classified DPL mapped to Tag PCP and DEI. Assignment: All Frames are assigned the bridge device default PCP as classified Priority. Frames classified as tagged will have PCP from the tag as the classified PCP. Use: On egress, a tag pushed can have classified PCP as Tag PCP. Assignment: All Frames are assigned the bridge device default DEI as classified DEI. Frames classified as tagged will have DEI from the tag as the classified DEI. Use: On egress, a tag pushed can have classified DEI as Tag DEI. Assignment: Frames hitting a VCAP rule can have a FRER HW pointer assigned. Use: Frames will be handled by the configured FRER HW instance. Assignment: Frames hitting a VCAP rule can have a PSFP HW pointer assigned. Use: Frames will be handled by the configured PSFP HW instance. Assignment: Frames hitting a VCAP rule can have a PSFP policer HW pointer assigned. Use: Frame will be handled by the configured PSFP policer HW instance. Assignment: Frames can hit a TC filter that has a reference to a separately configured policer configuration. This reference is carried in the metadata as an ACL policer HW pointer. The TC filter can also specify the policer configuration explicitly. In this case, a policer configuration is automatically created and a reference to that is carried in the metadata as an ACL policer HW pointer. Use: Frames will be handled by the policer configuration pointed to by the ACL policer HW instance. Assignment: By default, the classified Priority is set to Queue ID. Change of this by PSFP is currently not supported. Use: In the Queue System, this is used to decide what queue the frame is entering. Assignment: A PAG value may be added/modified by a filter in a TCAM (typically IS2) Use: Can be used for matching in a TCAM filter in an Egress TCAM. This allows two filters to be linked. Assignment: An ISDX value may be added/modified by a filter in a TCAM (typically IS0 or IS1) Use: Can be used for matching in a TCAM filter in an Egress TCAM. This allows two filters to be linked.","title":"","component":"bsp","version":"2023.12","name":"frame_meta_data","url":"/bsp/2023.12/frame_meta_data.html","titles":[{"text":"1. Frame Metadata description","hash":"_frame_metadata_description","id":1},{"text":"1.1. Classified VID.","hash":"_classified_vid","id":2},{"text":"1.2. Classified Priority.","hash":"_classified_priority","id":3},{"text":"1.3. Classified DPL.","hash":"_classified_dpl","id":4},{"text":"1.4. Classified PCP.","hash":"_classified_pcp","id":5},{"text":"1.5. Classified DEI.","hash":"_classified_dei","id":6},{"text":"1.6. FRER HW pointer.","hash":"_frer_hw_pointer","id":7},{"text":"1.7. PSFP HW pointer.","hash":"_psfp_hw_pointer","id":8},{"text":"1.8. PSFP policer HW pointer.","hash":"_psfp_policer_hw_pointer","id":9},{"text":"1.9. ACL policer HW pointer.","hash":"_acl_policer_hw_pointer","id":10},{"text":"1.10. Queue ID.","hash":"_queue_id","id":11},{"text":"1.11. Policy Association Group (PAG)","hash":"_policy_association_group_pag","id":12},{"text":"1.12. Ingress Service Descriptor (ISDX)","hash":"_ingress_service_descriptor_isdx","id":13}]},"10":{"id":10,"text":"Frame preemption is defined in IEEE 802.1Qbu and 802.3br and allows low priority frames to be suspended by time-critical frames of higher priority. Frame preemption is not yet supported via standard Linux user commands but the community is working to include support for frame preemption in ethtool. Until then a proprietary tool called fp is provided: # fp --help options: --dev: dev name --admin_status: admin status --enable_tx: enable tx --verify_disable_tx: verify disable tx --verify_time: verify time --add_frag_size: add frag size --status: status --help: help The parameters are: dev - The device, e.g. eth0. admin_status - Bitmask of priority queues where frame preemption is enabled, e.g. 0x02 enables priority queue 1. enable_tx - Enable frame preemption in the transmitter. Frame preemption is always enabled in the receiver. verify_disable_tx - Disable verification of preemption capabilities of the link if 1. Default is 1 (disabled). verify_time - Number of milliseconds to wait between verification attempts. The valid range is 1..128 and the default is 10. add_frag_size - The minimum fragment size to generate in the transmitter, calculated as (FRAG_SIZE + 1) * 64 octets. The valid range is 0..3 and the default is 0. status - Show frame preemption status. help - Show frame preemption help. Show current configuration: # fp --dev eth0 admin_status: 0x0 enable_tx: 0 verify_disable_tx: 1 verify_time: 10 add_frag_size: 0 The parameters are explained above. Show current status: # fp --dev eth0 --status dev: eth0 hold_advance: 42 release_advance: 84 preemption_active: 0 hold_request: 0 status_verify: Disabled The parameters are: dev - The device, e.g. eth0. hold_advance - The maximum number of nanoseconds from issuing a HOLD request from 802.1Qbv until the traffic stops. Currently not supported. release_advance - The maximum number of nanoseconds from issuing a RELEASE request from 802.1Qbv until the traffic resumes. Currently not supported. preemption_active - 1 if frame preemption is currently active on device. hold_request - 1 if HOLD request is currently active on interface. status_verify - Status of the verification process. Enable frame preemption and verification on eth0: # fp --dev eth0 --enable_tx 1 --verify_disable_tx 0 Enable frame preemption for priority queues 0, 1, and 2 on eth0: # fp --dev eth0 --admin_status 0x07 Some test tools expect to receive LLDP information regarding frame preemption before they attempt to enable their own frame preemption capabilities. A modified version of tiny-lldpd is included in the BSP that is able to transmit an LLDP frame containing the Additional Ethernet capabilities documented in IEEE 802.3br-2016. Start the tiny-lldpd daemon in the background: # tlldpd Starting tiny-lldpd... The LLDP/TLV contains the following values: preemption capability support - Always 1 (supported). preemption capability status - 1 if frame preemption is enabled on device, 0 otherwise. preemption capability active - 1 if frame preemption is active on device, 0 otherwise. additional fragment size - Always 0 as 64 octet fragments are supported by the receiver. The tiny-lldpd daemon uses the following read-only files in debugfs to query the parameters (eth0 is used in the example): /sys/kernel/debug/lan966x/eth0/fp-enabled /sys/kernel/debug/lan966x/eth0/fp-active These files returns either 0 or 1 when read and can be used if you want to write your own LLDP implementation.","title":"","component":"bsp","version":"2023.12","name":"frame_preemption","url":"/bsp/2023.12/frame_preemption.html","titles":[{"text":"1. Frame Preemption functional description","hash":"_frame_preemption_functional_description","id":1}]},"11":{"id":11,"text":"","title":"","component":"bsp","version":"2023.12","name":"g8032","url":"/bsp/2023.12/g8032.html","titles":[{"text":"1. G8032 functional description","hash":"_g8032_functional_description","id":1}]},"12":{"id":12,"text":"Frame Replication and Elimination for Reliability (FRER) is defined in IEEE 802.1CB-2017. FRER reduces the probability of packet loss by replicating packets at the source, transmit these replicas over multiple paths, and finally removing the duplicate packets at the destination. A FRER enabled switch consists of the following building blocks: Stream Identification - Identifies the stream based on and fields from the frame. Sequence Generation - Generates a sequence number for each packet in a Member Stream.. Stream Split - Split a stream into multiple new Member Streams on different egress ports. Individual Recovery - Discards duplicate frames of a Member Stream. Sequence Recovery - Discards duplicate frames of a merged set of Member Streams. Streams are transmitted in a separate VLAN, where forwarding is set up manually and flooding and learning is disabled. Spanning Tree is used to avoid frames looping in other VLANs. The illustration below shows a stream from host A to host B via switches S1-S4. The stream is assigned to VLAN 10: Host A is FRER-unaware and sends an untagged stream (0) with DMAC = MAC address of host B. Switch S1 does the following FRER functions: Stream Identification: The received frame from host A is identified as belonging to Member Stream 0 and is classified to VLAN 10. Sequence Generation: The sequence number for the frame is assigned. Splitting: The frame is forwarded to two Member Streams (1) and (2) using a C-tag with VID 10 and an R-tag with the sequence number. Switch S2 does the following FRER functions: Stream Identification: The received frame from S1 is identified as part of Member Stream 1. The received frame from S3 is identified as part of Member Stream 2. Merge: Member Stream 1 and Member Stream 2 map to the same Compound Stream. Sequence Recovery: One of the received frames in the Compound Stream is discarded. The resulting Member Stream 3 is forwarded towards S4. Switch S3 operates in a similar way as S2. Switch S4 does the following FRER functions: Stream Identification: The received frame from S2 is identified as part of Member Stream 3. The received frame from S3 is identified as part of Member Stream 4. Merge: Member Stream 3 and Member Stream 4 map to the same Compound Stream. Sequence Recovery: One of the received frames in the Compound Stream is discarded. The resulting stream is forwarded towards host B without C-tag and R-tag. Stream Identification configuration uses the vcap tool which is described on the VCAP Tool page. The stream identification can match on every field that is supported by IS1 but in the following examples, we will identify a stream by DMAC and VLAN. This is what is called a Null Stream identification in 802.1CB. We will also need to match on the ingress port because we need to hit a specific ingress flow for each ingress port. All ports generate 'S1_7TUPLE' IS1 keys by default. These keys are of type X4 and occupy 4 subwords in the VCAP. See page Classification (IS1) for more information. As we only need to match on DMAC, VLAN, and port we can use a shorter key called 'S1_DMAC_VID' which is of type X1 and only occupies 1 subword. This saves space in the VCAP that can be used for other purposes. The tc chain template command can be used to change the generated key on a port for a given lookup. To change the generated IS1 key to 'S1_DMAC_VID' in the second lookup for all frames received on eth0 ('chain 11000' denotes the second lookup in IS1): # tc qdisc add dev eth0 clsact # tc chain add dev eth0 ingress chain 11000 protocol 802.1q flower skip_sw \\ dst_mac 00:00:00:00:00:00 \\ vlan_id 0 \\ vlan_prio 0 \\ vlan_ethtype all See the Chain section on the TC Introduction page for more information about tc chain templates. The stream identification configuration depends on where the FRER functionality is located in the network. An example is switch S1 in the illustration above, where the stream transmitter, host A, has no FRER and VLAN functionality. Switch S1 must identify the stream by the ingress port eth0 and DMAC 00:00:00:dd:dd:dd and classify the stream to VLAN 10 and to ISDX 1. We will want to match only on frames that do NOT contain R-tag and C-tag. To configure the above: # vcap add is1 10 0 \\ s1_dmac_vid lookup 0x01 0xff igr_port_mask 0x001 0x1ff \\ r_tagged 0 vlan_tagged 0 l2_dmac 00:00:00:dd:dd:dd ff:ff:ff:ff:ff:ff \\ s1 vid_replace_ena 1 vid_add_val 10 isdx_replace_ena 1 isdx_add_val 1 ISDX is a number between 1 and 255 that identifies the stream for later use. The maximum number if stream identifications in a switch is therefore 255. Another example is switch S2, where we will expect that the stream contains both R-tag and C-tag. Switch S2 must identify the stream by the ingress port eth0, DMAC 00:00:00:dd:dd:dd and VLAN 10 and classify the stream to ISDX 1. We will want to match only on frames that contain R-tag and C-tag. To configure the above: # vcap add is1 10 0 \\ s1_dmac_vid lookup 0x01 0xff igr_port_mask 0x001 0x1ff \\ r_tagged 1 vlan_tagged 1 vid 10 0xfff l2_dmac 00:00:00:dd:dd:dd ff:ff:ff:ff:ff:ff \\ s1 isdx_replace_ena 1 isdx_add_val 1 To delete the stream identification above: # vcap del is1 10 4 FRER is not yet supported via standard Linux user commands and therefore a proprietary tool called frer is provided: $ frer --help Usage: frer cs|msa|msf|ms|iflow|vlan [options] options: --help Show this help text commands: cs: cs cs_id [options] --enable: Enable recovery --alg: frerSeqRcvyAlgorithm (0: Vector, 1: Match) --hlen: frerSeqRcvyHistoryLength --reset_time: frerSeqRcvyResetMSec --take_no_seq: frerSeqRcvyTakeNoSequence --cnt: Show counters --clr: Clear counters --help: Show this help text msa: msa dev1 [dev2] [options] --help: Show this help text msf: msf ms_id [options] --help: Show this help text ms: ms dev ms_id [options] --enable: Enable recovery --alg: frerSeqRcvyAlgorithm (0: Vector, 1: Match) --hlen: frerSeqRcvyHistoryLength --reset_time: frerSeqRcvyResetMSec --take_no_seq: frerSeqRcvyTakeNoSequence --cs_id: Compound stream ID --cnt: Show counters --clr: Clear counters --help: Show this help text iflow: iflow id [options] --ms_enable: Enable member stream --ms_id: Allocated member stream ID --generation: Enable sequence generation --pop: Enable popping of R-tag --dev1: Split device 1 or '-' --dev2: Split device 2 or '-' --help: Show this help text vlan: vlan vid [options] --flood_disable: Disable flooding in VLAN --learn_disable: Disable learning in VLAN --help: Show this help text All frerSeqRcvXXXX parameters are defined and explained in IEEE 802.1CB-2017. The frer cs command is used to configure a compound stream which is needed when you want to merge several member streams into one compound stream. This is needed in switch S2, S3, and S4. A compound stream is identified by a cs_id which is a number between 0 and 255. See the FRER examples below on how to configure each switch. To show compound stream 3 configuration: # frer cs 3 enable: 1 alg: 0 hlen: 4 reset_time: 1000 take_no_seq: 0 Sequence recovery is enabled using Vector algorithm (alg = 0) with history length 4, ResetMSec is 1000 mS and TakeNoSequence is disabled. To show compound stream 3 counters: # frer cs 3 --cnt OutOfOrderPackets : 0 RoguePackets : 0 PassedPackets : 0 DiscardedPackets : 0 LostPackets : 0 TaglessPackets : 0 Resets : 0 To clear compound stream 3 counters: # frer cs 3 --clr You will need a member stream if you want to enable individual recovery on a single stream and/or associate the stream with a compound stream in order to merge this stream with other streams. A member stream is needed for each combination of ingress port/egress port. The ingress port is indirectly given via the ISDX. This is needed in switch S2, S3, and S4. See the FRER examples below on how to configure each switch. A member stream is identified by a number returned by the 'frer msa' command (Member Stream Allocate). To allocate a member stream id for eth1: $ frer msa eth1 0 This command returns the allocated member stream id associated with eth1. In case you will want to split a single stream into two egress ports, you must allocate the two ports together as they will need to be associated with the same ISDX: $ frer msa eth1 eth2 0 This command returns the allocated common member stream id associated with eth1 and eth2. To show member stream 0 configuration associated with eth1: $ frer ms eth1 0 enable: 1 alg: 1 hlen: 2 reset_time: 1000 take_no_seq: 0 cs_id: 3 Individual recovery is enabled using Match algorithm (history length is N/A here), ResetMSec is 1000 mS and TakeNoSequence is disabled. This member stream is associated with compound stream 3. To show member stream 0 counters associated with eth1: $ frer ms eth1 0 --cnt OutOfOrderPackets : 0 RoguePackets : 0 PassedPackets : 0 DiscardedPackets : 0 LostPackets : 0 TaglessPackets : 0 Resets : 0 To clear member stream 0 counters associated with eth1: $ frer ms eth1 0 --clr To free member stream 0: $ frer msf 0 --clr An ingress flow associates an ISDX with member stream(s), controls generation/removal of R-tag, and splitting of streams. There are some restrictions on an ingress flow: If sequence generation is enabled then member stream association and popping of R-tag is not allowed. See the FRER examples below on how to configure each switch. To show ingress flow for ISDX 1: $ frer iflow 1 ms_enable: 1 ms_id: 0 generation: 0 pop: 0 dev1: eth1 dev2: eth2 ISDX 1 is associated with member stream id 0 and the stream is split into eth1 and eth2. Neither sequence generation nor popping of R-tag is enabled. The VLAN configuration allows you to control flooding and learning per VLAN, which is not possible with the current standard Linux bridge vlan API. To show VLAN configuration for VLAN 10: $ frer vlan 10 flood_disable: 1 learn_disable: 1 Both flooding and learning are disabled in VLAN 10. This section described how to configure switch S1, S2, and S4 in the illustration shown above. Switch S3 operates in a similar way as switch S2. All examples require some common setup. Create a VLAN-aware bridge with port eth0, eth1, and eth2: # ip link add name br0 type bridge # ip link set br0 type bridge vlan_filtering 1 # ip link set eth0 master br0 # ip link set eth1 master br0 # ip link set eth2 master br0 # ip link set eth0 up # ip link set eth1 up # ip link set eth2 up # ip link set br0 up Add VLAN 10 to all ports and disable flooding and learning: # bridge vlan add dev eth0 vid 10 # bridge vlan add dev eth1 vid 10 # bridge vlan add dev eth2 vid 10 # frer vlan 10 --flood_disable 1 --learn_disable 1 Create a clsact qdisc and a chain template in order to use short 'S1_DMAC_VID' keys in the second lookup in IS1: # tc qdisc add dev eth0 clsact # tc chain add dev eth0 ingress chain 11000 protocol 802.1q flower skip_sw \\ dst_mac 00:00:00:00:00:00 \\ vlan_id 0 \\ vlan_prio 0 \\ vlan_ethtype all # tc qdisc add dev eth1 clsact # tc chain add dev eth1 ingress chain 11000 protocol 802.1q flower skip_sw \\ dst_mac 00:00:00:00:00:00 \\ vlan_id 0 \\ vlan_prio 0 \\ vlan_ethtype all # tc qdisc add dev eth2 clsact # tc chain add dev eth2 ingress chain 11000 protocol 802.1q flower skip_sw \\ dst_mac 00:00:00:00:00:00 \\ vlan_id 0 \\ vlan_prio 0 \\ vlan_ethtype all This is only necessary on ports where we use stream identification. Now the different switches can be configured. Switch S1 must: Identify the untagged stream as stream 0 and associate it with ISDX 1 and VLAN 10 Generate a sequence number to insert in an R-tag Split the traffic into two egress ports Add C-tag and R-tag on egress Note that individual and sequence recovery is not used in this setup. eth0 is connected to host A. eth1 is connected to switch S2. eth2 is connected to switch S3. Create a VCAP rule with priority 10 and handle 0 for stream identification and VLAN classification: # vcap add is1 10 0 \\ s1_dmac_vid lookup 0x01 0xff igr_port_mask 0x001 0x1ff \\ r_tagged 0 vlan_tagged 0 l2_dmac 00:00:00:dd:dd:dd ff:ff:ff:ff:ff:ff \\ s1 vid_replace_ena 1 vid_add_val 10 isdx_replace_ena 1 isdx_add_val 1 Parameters: s1_dmac_vid - IS1 key lookup 0x01 0xff - Second lookup igr_port_mask 0x001 0x1ff - Match on eth0 (port 0) r_tagged 0 - Frame must be without an R-tag vlan_tagged 0 - Frame must be without a C-tag l2_dmac 00:00:00:dd:dd:dd ff:ff:ff:ff:ff:ff - Match on all bits in host B MAC address s1 - IS1 action vid_replace_ena 1 - Enable replace VID classification vid_add_val 10 - VID to classify to isdx_replace_ena 1 - Enable replace ISDX classification isdx_add_val 1 - ISDX to classify to Setup the stream identified by ISDX 1 to generate R-tag (Sequence Generation) and transmit on eth1 and eth2 (Stream Split): # frer iflow 1 --generation 1 --dev1 eth1 --dev2 eth2 Switch S2 must: Identify the C-tagged and R-tagged stream from switch S1 as part of member stream 1 and associate it with ISDX 1 Identify the C-tagged and R-tagged stream from switch S3 as part of member stream 2 and associate it with ISDX 2 Apply individual recovery to both member streams 1 and 2 Split member stream 1 into two egress ports Merge member streams 1 and 2 by mapping them to the same compound stream Apply sequence recovery to the compound stream consisting of member streams 1 and 2 and discard one of the frames eth0 is connected to switch S1. eth1 is connected to switch S3. eth2 is connected to switch S4. Create a VCAP rule with priority 10 and handle 0 for stream identification of stream (1): # vcap add is1 10 0 \\ s1_dmac_vid lookup 0x01 0xff igr_port_mask 0x001 0x1ff \\ r_tagged 1 vlan_tagged 1 vid 10 0xfff l2_dmac 00:00:00:dd:dd:dd ff:ff:ff:ff:ff:ff \\ s1 isdx_replace_ena 1 isdx_add_val 1 Parameters: s1_dmac_vid - IS1 key lookup 0x01 0xff - Second lookup igr_port_mask 0x001 0x1ff - Match on eth0 (port 0) r_tagged 1 - Frame must contain an R-tag vlan_tagged 0 - Frame must contain a C-tag vid 10 0xfff - VID must be 10 l2_dmac 00:00:00:dd:dd:dd ff:ff:ff:ff:ff:ff - Match on all bits in host B MAC address s1 - IS1 action isdx_replace_ena 1 - Enable replace ISDX classification isdx_add_val 1 - ISDX to classify to Create a VCAP rule with priority 10 and handle 1 for stream identification of stream (2): # vcap add is1 10 1 \\ s1_dmac_vid lookup 0x01 0xff igr_port_mask 0x002 0x1ff \\ r_tagged 1 vlan_tagged 1 vid 10 0xfff l2_dmac 00:00:00:dd:dd:dd ff:ff:ff:ff:ff:ff \\ s1 isdx_replace_ena 1 isdx_add_val 2 Parameters: s1_dmac_vid - IS1 key lookup 0x01 0xff - Second lookup igr_port_mask 0x002 0x1ff - Match on eth1 (port 1) r_tagged 1 - Frame must contain an R-tag vlan_tagged 0 - Frame must contain a C-tag vid 10 0xfff - VID must be 10 l2_dmac 00:00:00:dd:dd:dd ff:ff:ff:ff:ff:ff - Match on all bits in host B MAC address s1 - IS1 action isdx_replace_ena 1 - Enable replace ISDX classification isdx_add_val 2 - ISDX to classify to Configure compound stream 3 with vector algorithm, history length 10, and reset_time 500 milliseconds # frer cs 3 --enable 1 --alg 0 --hlen 10 --reset_time 500 Allocate member stream id for egress on eth1 and eth2: # frer msa eth1 eth2 0 The number returned will later be used as ms_id for member stream 1 Allocate member stream id for egress on eth2 only: # frer msa eth2 2 The number returned will later be used as ms_id for member stream 2 Setup member stream 1 on eth1 (ms_id 0) with match algorithm, reset_time 500 milliseconds: # frer ms eth1 0 --enable 1 --alg 1 --reset_time 500 Setup member stream 1 on eth2 (ms_id 0) with match algorithm, reset_time 500 milliseconds, and compound stream 3: # frer ms eth2 0 --enable 1 --alg 1 --reset_time 500 --cs_id 3 Setup member stream 2 on eth2 (ms_id 2) with match algorithm, reset_time 500 milliseconds, and compound stream 3: # frer ms eth2 2 --enable 1 --alg 1 --reset_time 500 --cs_id 3 Associate ISDX 1 with member stream 1 (ms_id 0) and split the stream into eth1 and eth2: # frer iflow 1 --ms_enable 1 --ms_id 0 --dev1 eth1 --dev2 eth2 Associate ISDX 2 with member stream 2 (ms_id 2) and eth2 only: # frer iflow 2 --ms_enable 1 --ms_id 2 --dev1 eth2 Switch S4 must: Identify the C-tagged and R-tagged stream from switch S2 as part of member stream 3 and associate it with ISDX 3 Identify the C-tagged and R-tagged stream from switch S3 as part of member stream 4 and associate it with ISDX 4 Apply individual recovery to both member stream 3 and 4 Merge member stream 3 and 4 by mapping them to the same compound stream Apply sequence recovery to the compound stream consisting of member stream 3 and 4 and discard one of the frames Remove C-tag and R-tag eth0 is connected to switch S2. eth1 is connected to switch S3. eth2 is connected to host B. Create a VCAP rule with priority 10 and handle 0 for stream identification of stream (3): # vcap add is1 10 0 \\ s1_dmac_vid lookup 0x01 0xff igr_port_mask 0x001 0x1ff \\ r_tagged 1 vlan_tagged 1 vid 10 0xfff l2_dmac 00:00:00:dd:dd:dd ff:ff:ff:ff:ff:ff \\ s1 isdx_replace_ena 1 isdx_add_val 3 Parameters: s1_dmac_vid - IS1 key lookup 0x01 0xff - Second lookup igr_port_mask 0x001 0x1ff - Match on eth0 (port 0) r_tagged 1 - Frame must contain an R-tag vlan_tagged 0 - Frame must contain a C-tag vid 10 0xfff - VID must be 10 l2_dmac 00:00:00:dd:dd:dd ff:ff:ff:ff:ff:ff - Match on all bits in host B MAC address s1 - IS1 action isdx_replace_ena 1 - Enable replace ISDX classification isdx_add_val 3 - ISDX to classify to Create a VCAP rule with priority 10 and handle 1 for stream identification of stream (4): # vcap add is1 10 1 \\ s1_dmac_vid lookup 0x01 0xff igr_port_mask 0x002 0x1ff \\ r_tagged 1 vlan_tagged 1 vid 10 0xfff l2_dmac 00:00:00:dd:dd:dd ff:ff:ff:ff:ff:ff \\ s1 isdx_replace_ena 1 isdx_add_val 4 Parameters: s1_dmac_vid - IS1 key lookup 0x01 0xff - Second lookup igr_port_mask 0x002 0x1ff - Match on eth1 (port 1) r_tagged 1 - Frame must contain an R-tag vlan_tagged 0 - Frame must contain a C-tag vid 10 0xfff - VID must be 10 l2_dmac 00:00:00:dd:dd:dd ff:ff:ff:ff:ff:ff - Match on all bits in host B MAC address s1 - IS1 action isdx_replace_ena 1 - Enable replace ISDX classification isdx_add_val 4 - ISDX to classify to Add static MAC address in VLAN 10 on eth2. This is needed if no splitting is involved: # bridge fdb add 00:00:00:dd:dd:dd dev eth2 static master vlan 10 Configure compound stream 0 with vector algorithm, history length 10, and reset_time 500 milliseconds # frer cs 0 --enable 1 --alg 0 --hlen 10 --reset_time 500 Allocate member stream id for egress on eth2: # frer msa eth2 0 The number returned will later be used as ms_id for member stream 3 Allocate member stream id for egress on eth2: # frer msa eth2 2 The number returned will later be used as ms_id for member stream 4 Setup member stream 3 on eth2 (ms_id 0) with match algorithm, reset_time 500 milliseconds, and compound stream 0: # frer ms eth2 0 --enable 1 --alg 1 --reset_time 500 --cs_id 0 Setup member stream 4 on eth2 (ms_id 2) with match algorithm, reset_time 500 milliseconds, and compound stream 0: # frer ms eth2 2 --enable 1 --alg 1 --reset_time 500 --cs_id 0 Associate ISDX 3 with member stream 3 (ms_id 0), pop R-tag and set egress to eth2: # frer iflow 3 --ms_enable 1 --ms_id 0 --pop 1 --dev1 eth2 Associate ISDX 4 with member stream 4 (ms_id 2), pop R-tag and set egress to eth2: # frer iflow 4 --ms_enable 1 --ms_id 2 --pop 1 --dev1 eth2 Create a VCAP rule with priority 10 and handle 0 to remove the VLAN tag: # vcap add es0 10 0 \\ vid egr_port 2 0xf vid 10 0xfff \\ s0_vid push_outer_tag 3 Parameters: vid - ES0 key egr_port 2 0xf - Match on egress on eth2 (port 2) vid 10 0xfff - VID must be 10 s0_vid - ES0 action push_outer_tag 3 - Force untag","title":"","component":"bsp","version":"2023.12","name":"frer","url":"/bsp/2023.12/frer.html","titles":[{"text":"1. FRER functional description","hash":"_frer_functional_description","id":1},{"text":"1.1. FRER Overview","hash":"_frer_overview","id":2},{"text":"1.2. Stream Identification","hash":"_stream_identification","id":3},{"text":"1.3. FRER tool","hash":"_frer_tool","id":4},{"text":"1.3.1. Compound Stream","hash":"_compound_stream","id":5},{"text":"1.3.2. Member Stream","hash":"_member_stream","id":6},{"text":"1.3.3. Ingress Flow","hash":"_ingress_flow","id":7},{"text":"1.3.4. VLAN Configuration","hash":"_vlan_configuration","id":8},{"text":"1.4. FRER Examples","hash":"_frer_examples","id":9},{"text":"1.4.1. Switch S1","hash":"_switch_s1","id":10},{"text":"1.4.2. Switch S2","hash":"_switch_s2","id":11},{"text":"1.4.3. Switch S4","hash":"_switch_s4","id":12}]},"13":{"id":13,"text":"This document describes the Board Support Package (BSP) that is freely available for developers that wants to build software for Microchip switch products. This material is targeting engineers integrating Microchip switches and the associated SW. A Linux based development environment is assumed and the user should also be familiar with normal application development under Linux before reading this. The BSP is based on Buildroot, which is a simple, efficient and easy-to-use tool to generate embedded Linux systems through cross-compilation. It uses the Linux Kconfig configuration system, allowing easy selection of system content. The Makefile will include a .config file generated by Kconfig. The content of this file will determine what should be built. It is relatively easy from there to add your own programs so your entire build process is automated. Home website : http://www.buildroot.net/ The Buildroot user manual can help you better understand how Buildroot works. Microchip has added packages, patches, setup, and configuration to work with Microchip provided software that is not included in mainline buildroot.","title":"README","component":"bsp","version":"2023.12","name":"index","url":"/bsp/2023.12/index.html","titles":[{"text":"Audience","hash":"_audience","id":1},{"text":"Readers guide","hash":"_readers_guide","id":2}]},"14":{"id":14,"text":"This section describes how to download and build the Microchip BSP from sources. A reference board is required in order to test the resulting artifacts. The following terms are used to describe the generated artifacts throughout this document: ITB - Image Tree Blob. An image using the FIT (Flattened Image Tree) format that can contain the Linux kernel, device tree blob, root file system image etc. ITB-Rootfs - An ITB containing kernel, a number of device trees and a full SquashFS as rootfs. ITB-Initramfs - An ITB containing kernel, a number of device trees and an initramfs containing a small stage2-loader. ITB-Bare - An ITB containing kernel, a number of device trees and no root file system. ext4-ITB-Bare - An ext4 filesystem containing an ITB-Bare in the boot folder. ext4-ITB-Initramfs - An ext4 filesystem containing an ITB-Initramfs in the boot folder. ext4-Bare - An ext4 filesystem without an ITB in the boot folder. The images created by default are ITB_Rootfs and ext4-Bare. The development environment must support at least the packages required by Buildroot: https://buildroot.org/downloads/manual/manual.html#requirement On Ubuntu 20.04 LTS, the required packages can be installed like this: $ sudo apt-get install -y \\ asciidoc \\ astyle \\ autoconf \\ bc \\ bison \\ build-essential \\ ccache \\ cmake \\ cmake-curses-gui \\ cpio \\ dblatex \\ default-jre \\ doxygen \\ file \\ flex \\ gdisk \\ genext2fs \\ gettext-base \\ git \\ graphviz \\ gzip \\ help2man \\ iproute2 \\ iputils-ping \\ libacl1-dev \\ libelf-dev \\ libglade2-0 \\ libgtk2.0-0 \\ libmpc-dev \\ libncurses5 \\ libncurses5-dev \\ libncursesw5-dev \\ libssl-dev \\ libtool \\ locales \\ m4 \\ mtd-utils \\ parted \\ patchelf \\ python3 \\ python3-pip \\ rsync \\ ruby-full \\ ruby-parslet \\ squashfs-tools \\ sudo \\ texinfo \\ tree \\ u-boot-tools \\ udev \\ util-linux \\ vim \\ w3m \\ wget \\ xz-utils \\ # Additional Ruby packages $ sudo gem install nokogiri asciidoctor # Enable use of `python` command instead of `python3` $ sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 100 # Additional Python packages $ sudo python -m pip install matplotlib An alternative is to use the Docker image provided by Microchip which contains Ubuntu 20.04 LTS and all of the necessary packages. See Using Docker, for details on how to configure and use a Docker image. Microchip BSPs are stored in Amazon Web Services (AWS) at this location: http://mscc-ent-open-source.s3-website-eu-west-1.amazonaws.com/?prefix=public_root/bsp/ Download e.g. mscc-brsdk-source-2021.09.tar.gz via browser or wget: $ cd $ wget http://mscc-ent-open-source.s3-eu-west-1.amazonaws.com/public_root/bsp/mscc-brsdk-source-2021.09.tar.gz $ ls mscc-brsdk-source-2021.09.tar.gz When the BSP has been downloaded it must be extracted. $ tar xf mscc-brsdk-source-2021.09.tar.gz $ ls mscc-brsdk-source-2021.09 mscc-brsdk-source-2021.09.tar.gz Microchip BSPs requires an appropriate toolchain. They are stored in Amazon Web Services (AWS) at this location: http://mscc-ent-open-source.s3-website-eu-west-1.amazonaws.com/?prefix=public_root/toolchain/ The toolchains can be downloaded as either binary or source. We always recommend to use the binary toolchain. See Customizing the Toolchain if you want to customize the toolchain. The BSP expects the toolchain to be located in the /opt/mscc/ folder. To identify the toolchain version that matches the BSP: $ cd $ cat ./external/support/misc/mscc-version | grep toolchain toolchain: 2021.02-090 Download mscc-toolchain-bin-2021.02-090.tar.gz via browser or wget: $ wget http://mscc-ent-open-source.s3-eu-west-1.amazonaws.com/public_root/toolchain/mscc-toolchain-bin-2021.02-090.tar.gz $ ls mscc-toolchain-bin-2021.02-090.tar.gz When the toolchain has been downloaded it must be extracted into /opt/mscc: $ sudo mkdir -p /opt/mscc $ sudo tar xf mscc-toolchain-bin-2021.02-090.tar.gz -C /opt/mscc Test the toolchain: $ /opt/mscc/mscc-toolchain-bin-2021.02-090/arm-cortex_a8-linux-gnueabihf/usr/bin/arm-cortex_a8-linux-gnueabihf-gcc --version arm-cortex_a8-linux-gnueabihf-gcc.br_real (Buildroot 2021.02) 8.4.0 Copyright (C) 2018 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. The ./output folder contains predefined build folders for each target. All defconfigs added by Microchip are located in the ./external/configs folder. All packages added by Microchip are located in the ./external/package folder. All source code defined by Buildroot or added by Microchip are located as compressed files in the ./dl folder. Most of the other folders are described here: https://buildroot.org/downloads/manual/manual.html#_developer_guide Building the BSP does not require any other downloads than the BSP and toolchain packages. The BSP can be built by a script provided by Microchip or by the normal Buildroot out-of-tree procedure. Buildroot is designed to be built as non-root. There is no need to be root to configure and build when using Buildroot. The source packet contains a Ruby script called build.rb which makes it very easy to build the BSP for one or more targets. Only targets defined by Microchip can be build with the build.rb script. The syntax is ./build.rb [--configs ], where is one of [ build | pack | relocate | all ] and is a regular expression that will be matched with the defconfigs located in the ./external/configs folder, and only those that match will be built. All targets will be built if the --configs option is omitted. For more options in the ./build.rb script, please use ./build.rb --help Example for build step build with the arm_standalone target: $ ./build.rb build --configs arm_standalone_defconfig Build step build builds from the sources and stores its output in the corresponding target build folder. The output from the build step build command above is therefore located in ./output/build_arm_standalone folder. This folder contains several subfolders that are documented here: https://buildroot.org/downloads/manual/manual.html#_buildroot_quick_start The build process is logged in a file, ./output/build_arm_standalone/arm_standalone_defconfig.log. You can monitor this file from another terminal during the build process using: $ tail -f ./output/build_arm_standalone/arm_standalone_defconfig.log Example for build step pack with the arm_standalone target: $ ./build.rb pack --configs arm_standalone_defconfig Build step pack collects all the results and add them to a folder: ./output/mscc-brsdk--. The output from the build step pack command above is therefore located in folder: ./output/mscc-brsdk-arm-2021.09. Build step pack also saves the log file from the build step in file: ./output/mscc-brsdk-logs-2021.09/arm_standalone_defconfig.log. Example for build step relocate with the arm_standalone target: $ ./build.rb relocate --configs arm_standalone_defconfig [--local] Build step relocate creates an artifact folder, ./output/artifact, that contains all artifacts needed for distribution of the binary BSP. The binary BSP is installed in /opt/mscc on the local PC if the --local option is present. Using build step all executes all the above build steps in the following order: build, pack, relocate. The BSP packet has been designed to work with the Building out-of-tree concept described here: https://buildroot.org/downloads/manual/manual.html#_building_out_of_tree This means that you can switch into the build directory for the actual target and then just run e.g. make menuconfig or make without the need to pass O= and -C : Here is how to build for the same target as when using the build script above: $ cd ./output/build_arm_standalone $ make menuconfig $ make The output from the command above is located in folder: ./output/build_arm_standalone/images: If you want to use another output folder you must prepare it first: $ make BR2_EXTERNAL=./external O=./output/mybuild arm_standalone_defconfig $ cd ./output/mybuild $ make menuconfig $ make When building in this way you cannot use the build script ./build.rb to collect the artifacts. This must be done manually. The artifact ITB-Rootfs is built by default. This is done via a shell script that Buildroot calls after creating filesystem images. The configuration name is BR2_ROOTFS_POST_IMAGE_SCRIPT and is accessible via menuconfig: $ cd ./output/build_arm_standalone $ make menuconfig Select System configuration and Custom scripts to run after creating filesystem images and add the script to run. Most of the targets are initially configured to use a script called post-image.sh that is located somewhere under the ./board folder. In the next field, Extra arguments passed to custom scripts, you can configure which artifacts to build. Valid values are: itb-rootfs - Build fit.itb. itb-initramfs - Build itb-initramfs.itb. itb-bare - Build itb-bare.itb. ext4-itb-bare - Build ext4-itb-bare.ext4. ext4-itb-initramfs - Build ext4-itb-initramfs.ext4. ext4-bare - Build ext4-bare.ext4. ubifs-itb-bare - Build a UBIFS image with a itb-bare.itb. Add the artifacts to build separated by a space. If this field is empty then ITB-Rootfs is built by default. Some targets supports only a subset of the artifacts. The predefined post-image.sh scripts makes use of a helper script called imggen.rb, which is located in the ./external/support/scripts folder. To see how to use this script directly: $ ./external/support/scripts/imggen.rb --help If a new package is needed, it can be added by following the description here: https://buildroot.org/downloads/manual/manual.html#adding-packages If a package needs to be modified, it is recommended to use the procedure described here: https://buildroot.org/downloads/manual/manual.html#_using_buildroot_during_development As an example, we will change the ethtool package in the arm_standalone target. First create a home for the ethtool sources: $ mkdir -p ./source/ethtool Locate the ethtool repo in the ./dl folder: $ ls ./dl/ethtool ethtool-5.10.tar.xz Unpack ethtool into its new home: $ tar xf ./dl/ethtool/ethtool-5.10.tar.xz -C ./source/ethtool Add an override file local.mk in the output folder for the arm_standalone target with the following content: $ echo \"ETHTOOL_OVERRIDE_SRCDIR = ./source/ethtool/ethtool-5.10\" > ./output/build_arm_standalone/local.mk It is possible to override more than one package in local.mk by adding a line for each package. Now do the necessary modifications in ./source/ethtool/ethtool-5.10/…​ The ethtool package must be rebuilt after being modified: $ cd ./output/build_arm_standalone $ make ethtool-rebuild all If the source folders are located outside of the BSP root and you use a Docker image you will have to mount the source folder(s) inside the Docker image. See Using Docker, for details on how to mount other folders inside the Docker image. This is a step by step guide for adding a new CMake-based package called Hello World. More details can be found here: https://buildroot.org/downloads/manual/manual.html#_infrastructure_for_cmake_based_packages The package is as simple as possible and contains only a CMake file and a .c file but the steps are the same for more complicated packages. First create a package directory: $ mkdir ./external/package/mscc-hello-world Create ./external/package/mscc-hello-world/Config.in with the following content: config BR2_PACKAGE_MSCC_HELLO_WORLD bool \"mscc-hello-world\" help Tool for configuring hello-world Create ./external/package/mscc-hello-world/mscc-hello-world.mk with the following content: MSCC_HELLO_WORLD_VERSION = 1.0 MSCC_HELLO_WORLD_SITE = http://www.hello-world.org/download MSCC_HELLO_WORLD_SOURCE = mscc-hello-world-$(MSCC_HELLO_WORLD_VERSION).tar.gz MSCC_HELLO_WORLD_INSTALL_STAGING = YES $(eval $(cmake-package)) The macro assignments needs not to select an existing repository at this point but they must be present. Include the new package directory at the bottom of the existing ./external/Config.in file: . source \"$BR2_EXTERNAL_MSCC_PATH/package/mscc-hello-world/Config.in\" Create a new home for the package sources: mkdir /home/alice/mscc-hello-world Create /home/alice/mscc-hello-world/CMakeLists.txt with the following content: cmake_minimum_required(VERSION 3.4) PROJECT(HelloWorld) add_executable(hello-world hello-world.c) install(TARGETS hello-world DESTINATION bin) Create /home/alice/mscc-hello-world/hello-world.c with the following content: #include int main() { printf(\"Hello, World!\"); return 0; } Create an override file for each target that must include the Hello World application. This example uses the arm_standalone target. Create ./output/build_arm_standalone/local.mk with the following content: MSCC_HELLO_WORLD_OVERRIDE_SRCDIR = /home/alice/mscc-hello-world Change to the target directory in order to use the following make commands: $ cd ./output/build_arm_standalone Enable mscc-hello-world (select External options and check mscc-hello-world): $ make menuconfig To build: $ make Modify source code and rebuild mscc-hello-world only: $ make mscc-hello-world-rebuild all If using Docker the source directory must be mounted in .docker.env: -MCHP_DOCKER_OPTIONS=\"-v $opt:$opt --tmpfs /tmp:exec -e BLD_USER=$(id -un) -e BLD_UID=$(id -u)\" +MCHP_DOCKER_OPTIONS=\"-v $opt:$opt --tmpfs /tmp:exec -e BLD_USER=$(id -un) -e BLD_UID=$(id -u) -v /home/alice/mscc-hello-world:/home/alice/mscc-hello-world\" The Hello World application is now part of the artifacts and can be tested on target. When the application has been tested and added into a repository the following steps must be done: Modify ./external/package/mscc-hello-world/mscc-hello-world.mk to point to the new repository. Remove the ./output/build_arm_standalone/local.mk file. The new application has now been fully added to the Buildroot system. Both the BSP and the toolchain are based on Buildroot which requires a number of mandatory and optional packages installed in the build host. You can avoid installing all of these packages by using a Docker image together with a dr helper script provided by Microchip: https://github.com/microchip-ung/docker-run Clone the repo and copy the dr script into a folder that is within your path, e.g. /usr/local/bin, and make it executable with sudo chmod a+x /usr/local/bin/dr. The dr script requires a configuration file, .docker.env, which is included in the project root of both the BSP and the toolchain sources. This configuration file contains information about which Docker image to run and also a set of options to pass to the Docker image. You will need to install Docker in order to use the dr script. See https://docs.docker.com/engine/install/ for instructions. The Docker image has been verified to work with Ubuntu 20.04 and Windows 10 with WSL2 and Ubuntu 20.04. Change current folder to the project root and try the following command: $ dr bash alice@177ef3776e6a:/home/alice/project/brsdk/mscc-brsdk-source-2021.09$ The Docker image will automatically be downloaded if it is the first time you use the dr script and it can take some time. The new prompt indicates that you are running bash inside the Docker container where all the packages required by Buildroot are available. Note that you are the same user inside the container as outside the container. The current folder is the same inside the container as outside the container. Everything within the project root is accessible inside the container. Type exit to leave the Docker container. It is now possible to run all kinds of commands inside the Docker container just by prepending the command with dr: $ dr ./build.rb -all $ cd ./output/build_arm_standalone $ dr ls -al $ dr make menuconfig $ dr make If you need to mount other folders in the container you can add them in the variable MCHP_DOCKER_OPTIONS in .docker_env: -MCHP_DOCKER_OPTIONS=\"-v $opt:$opt --tmpfs /tmp:exec -e BLD_USER=$(id -un) -e BLD_UID=$(id -u)\" +MCHP_DOCKER_OPTIONS=\"-v $opt:$opt --tmpfs /tmp:exec -e BLD_USER=$(id -un) -e BLD_UID=$(id -u) -v /usr/local/src/xyz:/usr/local/src/xyz\" Now you can access the /usr/local/src/xyz folder both inside and outside the container. The following Docker related repos and corresponding Docker image are public available on GitHub: dr script: https://github.com/microchip-ung/docker-run Dockerfile etc.: https://github.com/microchip-ung/docker-bsp-buildenv Docker image: https://github.com/orgs/microchip-ung/packages/container/package/bsp-buildenv The toolchain contains cross-compilers that are utilized to compile on one architecture and get an output that can run on a different architecture. The toolchain is distributed both in binary and source format. To customize the toolchain, the sources are needed and must be downloaded. See the Toolchain section for details on how to find the correct version of the toolchain. This tells us the toolchain version is 2021.02-090. Get and install toolchain sources: $ cd $ wget http://mscc-ent-open-source.s3-eu-west-1.amazonaws.com/public_root/toolchain/mscc-toolchain-source-2021.02-090.tar.gz $ tar -xf mscc-toolchain-source-2021.02-090.tar.gz Before starting to customize the toolchain, make sure it compiles without any modifications. The build process is automated by the ./build.rb script. Here is how to build all toolchains: $ cd mscc-toolchain-source-2021.02-090 $ ./build.rb all Lots of warnings are printed on the screen when compiling the toolchain. These are warnings in third-party code and can be ignored. For more options in the ./build.rb script, use ./build.rb --help. If the build completes successfully, it stores the resulting binary toolchain in the ./output/artifact folder. $ ls ./output/artifact files.md5 mscc-toolchain-bin-2021.02-090.tar.gz mscc-toolchain-logs-2021.02-090.tar.gz Now the toolchain is ready to be installed in /opt/mscc. See the Toolchain section for details on how to extract and install the toolchain. To alter e.g. the ARM toolchain: $ cd ./output/build_arm_toolchain $ make menuconfig $ cd ../.. The toolchain package only contains the toolchain, so in case you need to add or remove non-toolchain related packages, refer to the Build section. After this, rebuild the toolchain and pack everything to be able to use them: $ ./build.rb build --configs arm_toolchain_defconfig $ ./build.rb pack $ ./build.rb relocate Now, the new toolchain is ready to be installed into /opt/mscc as described in the Toolchain section.","title":"","component":"bsp","version":"2023.12","name":"getting-started","url":"/bsp/2023.12/getting-started.html","titles":[{"text":"1. Getting started","hash":"_getting_started","id":1},{"text":"1.1. Terms","hash":"terms","id":2},{"text":"1.2. Development environment","hash":"_development_environment","id":3},{"text":"1.3. Download","hash":"_download","id":4},{"text":"1.3.1. BSP","hash":"_bsp","id":5},{"text":"1.3.2. Toolchain","hash":"toolchain","id":6},{"text":"1.4. BSP structure","hash":"_bsp_structure","id":7},{"text":"1.5. Build","hash":"build","id":8},{"text":"1.5.1. Building via script","hash":"_building_via_script","id":9},{"text":"Build step build","hash":"_build_step_build","id":10},{"text":"Build step pack","hash":"_build_step_pack","id":11},{"text":"Build step relocate","hash":"_build_step_relocate","id":12},{"text":"1.5.2. Building the Buildroot way","hash":"_building_the_buildroot_way","id":13},{"text":"1.6. Selecting artifacts to build","hash":"selecting_artifacts","id":14},{"text":"1.7. Adding new packages","hash":"_adding_new_packages","id":15},{"text":"1.8. Modifying a package","hash":"_modifying_a_package","id":16},{"text":"1.9. Hello World example","hash":"_hello_world_example","id":17},{"text":"1.10. Using Docker","hash":"using_docker","id":18},{"text":"1.11. Customizing the Toolchain","hash":"customizing_toolchain","id":19},{"text":"1.11.1. Changing config","hash":"_changing_config","id":20}]},"15":{"id":15,"text":"Front ports are represented as standard Ethernet interfaces within the Linux kernel. After a reboot, all interfaces are considered as host interfaces with no bridging involved. Only the CPU Subsystem can send and receive frames through these interfaces: Later it is shown how to configure front ports to be members of bridges or link aggregation groups. Front ports are controlled by either iproute2 or ethtool. iproute2 is a collection of commands such as ip, bridge or tc. This section describes general operations on ports using these tools. The number of front ports depends on the actual switch product. All interfaces are disabled by default and will need to be enabled before they can be used. Enable an interface and check the status: # ip link set dev eth0 up # ip link show dev eth0 4: eth0: mtu 1500 qdisc mq state UP mode DEFAULT group default qlen 1000 link/ether 00:40:42:04:98:9b brd ff:ff:ff:ff:ff:ff Disable an interface and check the status: # ip link set dev eth0 down # ip link show dev eth0 4: eth0: mtu 1500 qdisc mq state DOWN mode DEFAULT group default qlen 1000 link/ether 00:40:42:04:98:9b brd ff:ff:ff:ff:ff:ff It is possible to assign an IP address to an interface and use it as a standard network interface. Assign an IP address and check the status: # ip link set dev eth0 up # ip addr add dev eth0 192.168.1.1 # ip addr show dev eth0 4: eth0: mtu 1500 qdisc mq state UP group default qlen 1000 link/ether 00:40:42:04:98:9b brd ff:ff:ff:ff:ff:ff inet 192.168.1.1/32 scope global eth0 valid_lft forever preferred_lft forever inet6 fe80::240:42ff:fe04:989b/64 scope link valid_lft forever preferred_lft forever It is now possible to ping hosts on the same subnet: # ping 192.168.1.2 PING 192.168.1.2 (192.168.1.2) 56(84) bytes of data. 64 bytes from 192.168.1.2: icmp_seq=1 ttl=64 time=0.629 ms 64 bytes from 192.168.1.2: icmp_seq=2 ttl=64 time=0.334 ms 64 bytes from 192.168.1.2: icmp_seq=3 ttl=64 time=0.325 ms 64 bytes from 192.168.1.2: icmp_seq=4 ttl=64 time=0.337 ms ^C --- 192.168.1.2 ping statistics --- 4 packets transmitted, 4 received, 0% packet loss, time 3076ms rtt min/avg/max/mdev = 0.325/0.406/0.629/0.128 ms Delete an IP address and check the status: # ip addr del dev eth0 192.168.1.1/24 # ip addr show dev eth0 4: eth0: mtu 1500 qdisc mq state UP group default qlen 1000 link/ether 00:40:42:04:98:9b brd ff:ff:ff:ff:ff:ff inet6 fe80::240:42ff:fe04:989b/64 scope link valid_lft forever preferred_lft forever Do not assign IP addresses to interfaces that will be used in bridges or link aggregation groups. Change the Maximum Transmission Unit (MTU) on a port and check the status: # ip link set dev eth0 mtu 1600 # ip link show dev eth0 4: eth0: mtu 1600 qdisc mq state UP mode DEFAULT group default qlen 1000 link/ether 00:40:42:04:98:9b brd ff:ff:ff:ff:ff:ff Change the Ethernet MAC Address on a port and check the status: # ip link set dev eth0 address 00:00:00:22:22:22 # ip link show dev eth0 4: eth0: mtu 1500 qdisc mq state UP mode DEFAULT group default qlen 1000 link/ether 00:00:00:22:22:22 brd ff:ff:ff:ff:ff:ff permaddr 00:40:42:04:98:9b Auto-negotiation of speed and duplex settings is enabled by default. It is a requirement that the link partner also supports auto-negotiation. If a port is connected to equipment that does not support auto-negotiation, auto-negotiation must be disabled and speed and duplex must be set manually. Change the speed and duplex on a port and check the status: # ethtool -s eth0 speed 100 duplex half autoneg off # ethtool eth0 Settings for eth0: Supported ports: [ TP MII ] Supported link modes: 10baseT/Half 10baseT/Full 100baseT/Half 100baseT/Full 1000baseT/Half 1000baseT/Full Supported pause frame use: Symmetric Supports auto-negotiation: Yes Supported FEC modes: Not reported Advertised link modes: 100baseT/Half Advertised pause frame use: No Advertised auto-negotiation: No Advertised FEC modes: Not reported Speed: 100Mb/s Duplex: Half Port: MII PHYAD: 0 Transceiver: internal Auto-negotiation: off Link detected: yes Flow Control is a mechanism to temporarily stop transmission of traffic and works by letting the receiver send a pause control frame back to the transmitter when a certain buffer threshold has been reached. Flow Control was defined by the IEEE 802.3x standard and is disabled by default. Send pause control frames when reaching buffer threshold: # ethtool -A eth0 tx on Do not send pause control frames when reaching buffer threshold: # ethtool -A eth0 tx off Obey received pause control frames: # ethtool -A eth0 rx on Ignore received pause control frames: # ethtool -A eth0 rx off Show flow control configuration: # ethtool -a eth0 Pause parameters for eth0: Autonegotiate: off RX: off TX: off Autonegotiation of flow control is not supported. Flow Control and Priority Flow Control must not be enabled simultaneously. On a per-port basis, the Priority Flow Control as defined in 802.1Qbb can be configured. This requires that Port Flow Control (802.3x) is not enabled on the same port. By default, Priority Flow Control is disabled. First mapping of frames into priority must be configured. The following will enable frames to be mapped to priority based on the PCP value in the tag: qos i_tag_map eth0 --prio 0123456701234567 --dpl 0000000011111111 qos i_mode eth0 --tag 1 --dscp 0 The device (port) is eth0. Secondly, the LLDP protocol must be enabled: lldpad -d -f /tmp/lldpad.conf & lldptool set-lldp -i eth0 adminStatus=rxtx The device (port) is eth0. The lldpad is started in background. This command will enable PFC in selected priorities. lldptool -T -i eth0 -V PFC enabled=1,5,7 The device (port) is eth0. The PFC enabled priorities are 1,5,7 Show the basic configuration and status for a port with ip link: # ip link show dev eth0 4: eth0: mtu 1500 qdisc mq master br0 state UP mode DEFAULT group default qlen 1000 link/ether 00:00:00:01:00:00 brd ff:ff:ff:ff:ff:ff permaddr 00:40:42:04:98:e1 Show detailed configuration and status for a port with ip -d link: # ip -d link show dev eth0 4: eth0: mtu 1500 qdisc mq master br0 state UP mode DEFAULT group default qlen 1000 link/ether 00:00:00:01:00:00 brd ff:ff:ff:ff:ff:ff permaddr 00:40:42:04:98:e1 promiscuity 1 minmtu 68 maxmtu 65535 bridge_slave state forwarding priority 32 cost 4 hairpin off guard off root_block off fastleave off learning on flood on port_id 0x8001 port_no 0x1 designated_port 32769 designated_cost 0 designated_bridge 8000.0:0:0:1:0:0 designated_root 8000.0:0:0:1:0:0 hold_timer 0.00 message_age_timer 0.00 forward_delay_timer 0.00 topology_change_ack 0 config_pending 0 proxy_arp off proxy_arp_wifi off mcast_router 1 mcast_fast_leave off mcast_flood on mcast_to_unicast off neigh_suppress off group_fwd_mask 0 group_fwd_mask_str 0x0 vlan_tunnel off isolated off addrgenmode eui64 numtxqueues 8 numrxqueues 1 gso_max_size 65536 gso_max_segs 65535 portname p0 switchid 0040420498e0 Show standard information for a port with ethtool: # ethtool eth0 Settings for eth0: Supported ports: [ TP MII ] Supported link modes: 10baseT/Half 10baseT/Full 100baseT/Half 100baseT/Full 1000baseT/Half 1000baseT/Full Supported pause frame use: Symmetric Supports auto-negotiation: Yes Supported FEC modes: Not reported Advertised link modes: 10baseT/Half 10baseT/Full 100baseT/Half 100baseT/Full 1000baseT/Half 1000baseT/Full Advertised pause frame use: No Advertised auto-negotiation: Yes Advertised FEC modes: Not reported Link partner advertised link modes: 10baseT/Half 10baseT/Full 100baseT/Half 100baseT/Full 1000baseT/Full Link partner advertised pause frame use: Symmetric Receive-only Link partner advertised auto-negotiation: Yes Link partner advertised FEC modes: Not reported Speed: 1000Mb/s Duplex: Full Port: MII PHYAD: 0 Transceiver: internal Auto-negotiation: on Link detected: yes Show statistics for a port with ip link: # ip -s link show dev eth0 4: eth0: mtu 1500 qdisc mq master br0 state UP mode DEFAULT group default qlen 1000 link/ether 00:00:00:01:00:00 brd ff:ff:ff:ff:ff:ff permaddr 00:40:42:04:98:e1 RX: bytes packets errors dropped missed mcast 0 0 0 0 0 0 TX: bytes packets errors dropped carrier collsns 2558 29 0 0 0 0 Show standard group statistics for a port with ethtool: # ethtool -S eth0 --all-groups Standard stats for eth0: eth-mac-FramesTransmittedOK: 114 eth-mac-SingleCollisionFrames: 0 eth-mac-MultipleCollisionFrames: 0 eth-mac-FramesReceivedOK: 160 eth-mac-FrameCheckSequenceErrors: 0 eth-mac-AlignmentErrors: 0 eth-mac-OctetsTransmittedOK: 11368 eth-mac-FramesWithDeferredXmissions: 0 eth-mac-LateCollisions: 0 eth-mac-FramesAbortedDueToXSColls: 0 eth-mac-FramesLostDueToIntMACXmitError: 0 eth-mac-CarrierSenseErrors: 0 eth-mac-OctetsReceivedOK: 14941 eth-mac-FramesLostDueToIntMACRcvError: 0 eth-mac-MulticastFramesXmittedOK: 10 eth-mac-BroadcastFramesXmittedOK: 1 eth-mac-FramesWithExcessiveDeferral: 0 eth-mac-MulticastFramesReceivedOK: 54 eth-mac-BroadcastFramesReceivedOK: 2 eth-mac-InRangeLengthErrors: 0 eth-mac-OutOfRangeLengthField: 0 eth-mac-FrameTooLongErrors: 0 rmon-etherStatsUndersizePkts: 0 rmon-etherStatsOversizePkts: 0 rmon-etherStatsFragments: 0 rmon-etherStatsJabbers: 0 rx-rmon-etherStatsPkts64Octets: 49 rx-rmon-etherStatsPkts65to127Octets: 106 rx-rmon-etherStatsPkts128to255Octets: 5 rx-rmon-etherStatsPkts256to511Octets: 0 rx-rmon-etherStatsPkts512to1023Octets: 0 rx-rmon-etherStatsPkts1024to1518Octets: 0 rx-rmon-etherStatsPkts1519to10239Octets: 0 tx-rmon-etherStatsPkts64Octets: 2 tx-rmon-etherStatsPkts65to127Octets: 112 tx-rmon-etherStatsPkts128to255Octets: 0 tx-rmon-etherStatsPkts256to511Octets: 0 tx-rmon-etherStatsPkts512to1023Octets: 0 tx-rmon-etherStatsPkts1024to1518Octets: 0 tx-rmon-etherStatsPkts1519to10239Octets: 0 This output consists of the 4 groups eth-phy, eth-mac, eth-ctrl and rmon. It is also possible to get these individually with the --groups option. Besides these statistics you can get port specific statistics counters, which will differ between switches. On a LAN966x you will get this output: # ethtool -S eth0 NIC statistics: rx_octets: 0 rx_unicast: 0 rx_multicast: 0 rx_broadcast: 0 rx_short: 0 rx_frag: 0 rx_jabber: 0 rx_crc: 0 rx_symbol_err: 0 rx_sz_64: 0 rx_sz_65_127: 0 rx_sz_128_255: 0 rx_sz_256_511: 0 rx_sz_512_1023: 0 rx_sz_1024_1526: 0 rx_sz_jumbo: 0 rx_pause: 0 rx_control: 0 rx_long: 0 rx_cat_drop: 0 rx_red_prio_0: 0 rx_red_prio_1: 0 rx_red_prio_2: 0 rx_red_prio_3: 0 rx_red_prio_4: 0 rx_red_prio_5: 0 rx_red_prio_6: 0 rx_red_prio_7: 0 rx_yellow_prio_0: 0 rx_yellow_prio_1: 0 rx_yellow_prio_2: 0 rx_yellow_prio_3: 0 rx_yellow_prio_4: 0 rx_yellow_prio_5: 0 rx_yellow_prio_6: 0 rx_yellow_prio_7: 0 rx_green_prio_0: 0 rx_green_prio_1: 0 rx_green_prio_2: 0 rx_green_prio_3: 0 rx_green_prio_4: 0 rx_green_prio_5: 0 rx_green_prio_6: 0 rx_green_prio_7: 0 rx_assembly_err: 0 rx_smd_err: 0 rx_assembly_ok: 0 rx_merge_frag: 0 rx_pmac_octets: 0 rx_pmac_unicast: 0 rx_pmac_multicast: 0 rx_pmac_broadcast: 0 rx_pmac_short: 0 rx_pmac_frag: 0 rx_pmac_jabber: 0 rx_pmac_crc: 0 rx_pmac_symbol_err: 0 rx_pmac_sz_64: 0 rx_pmac_sz_65_127: 0 rx_pmac_sz_128_255: 0 rx_pmac_sz_256_511: 0 rx_pmac_sz_512_1023: 0 rx_pmac_sz_1024_1526: 0 rx_pmac_sz_jumbo: 0 rx_pmac_pause: 0 rx_pmac_control: 0 rx_pmac_long: 0 tx_octets: 2558 tx_unicast: 2 tx_multicast: 27 tx_broadcast: 0 tx_col: 0 tx_drop: 0 tx_pause: 0 tx_sz_64: 0 tx_sz_65_127: 27 tx_sz_128_255: 2 tx_sz_256_511: 0 tx_sz_512_1023: 0 tx_sz_1024_1526: 0 tx_sz_jumbo: 0 tx_yellow_prio_0: 0 tx_yellow_prio_1: 0 tx_yellow_prio_2: 0 tx_yellow_prio_3: 0 tx_yellow_prio_4: 0 tx_yellow_prio_5: 0 tx_yellow_prio_6: 0 tx_yellow_prio_7: 0 tx_green_prio_0: 22 tx_green_prio_1: 0 tx_green_prio_2: 0 tx_green_prio_3: 0 tx_green_prio_4: 0 tx_green_prio_5: 0 tx_green_prio_6: 0 tx_green_prio_7: 7 tx_aged: 0 tx_llct: 0 tx_ct: 0 tx_mm_hold: 0 tx_merge_frag: 0 tx_pmac_octets: 0 tx_pmac_unicast: 0 tx_pmac_multicast: 0 tx_pmac_broadcast: 0 tx_pmac_pause: 0 tx_pmac_sz_64: 0 tx_pmac_sz_65_127: 0 tx_pmac_sz_128_255: 0 tx_pmac_sz_256_511: 0 tx_pmac_sz_512_1023: 0 tx_pmac_sz_1024_1526: 0 tx_pmac_sz_jumbo: dr_local: 0 dr_tail: 0 dr_yellow_prio_0: 0 dr_yellow_prio_1: 0 dr_yellow_prio_2: 0 dr_yellow_prio_3: 0 dr_yellow_prio_4: 0 dr_yellow_prio_5: 0 dr_yellow_prio_6: 0 dr_yellow_prio_7: 0 dr_green_prio_0: 0 dr_green_prio_1: 0 dr_green_prio_2: 0 dr_green_prio_3: 0 dr_green_prio_4: 0 dr_green_prio_5: 0 dr_green_prio_6: 0 dr_green_prio_7: 0 The output for a port on Sparx5 will be slightly different as it has a different set of counters. Show all options with ip: # ip help # ip link help # ip addr help Show all options with ethtool: # ethtool -h Not all options are supported!","title":"","component":"bsp","version":"2023.12","name":"front_ports","url":"/bsp/2023.12/front_ports.html","titles":[{"text":"1. Front Ports","hash":"_front_ports","id":1},{"text":"1.1. Interface state","hash":"_interface_state","id":2},{"text":"1.2. IP address","hash":"_ip_address","id":3},{"text":"1.3. MTU","hash":"_mtu","id":4},{"text":"1.4. MAC Address","hash":"_mac_address","id":5},{"text":"1.5. Speed and Duplex","hash":"_speed_and_duplex","id":6},{"text":"1.6. Flow Control","hash":"_flow_control","id":7},{"text":"1.7. Priority Flow Control","hash":"_priority_flow_control","id":8},{"text":"1.8. Show Configuration and Status","hash":"_show_configuration_and_status","id":9},{"text":"1.9. Show Statistics","hash":"_show_statistics","id":10},{"text":"1.10. References","hash":"_references","id":11}]},"16":{"id":16,"text":"MRP is Media Redundancy Protocol as described in IEC 62439-2. The Microchip HW Engine supports the following roles: Media Redundancy Manager(MRM), Media Redundancy Client(MRC), Media Redundancy Auto-Manager(MRA), Media Redundancy Interconnection Manager(MIM) and Media Redundancy Interconnection Client(MIC). In a MRP ring, each node needs to support MRP and in a ring can be only one MRM and multiple MRC. It is possible to have multiple instances of MRP on a single node. But a port can be part of only one MRP instance. In an Interconnect MRP ring, there are only 4 nodes where one node is MIM and the other 3 nodes are MIC. The MRM is responsible for detecting when there is a loop in the ring. It is sending the frame MRP_Test to detect the loops. It would send MRP_Test on both ports in the ring and if the frame is received at the other end, then the ring is closed. Meaning that there is a loop. In this case, it sets the port state to BLOCKED, not allowing traffic to pass through except MRP frames. In case it stops receiving MRP_Test frames from itself, then the MRM will detect that the ring is open, therefor it would notify the other nodes of this change and will set the state of the port to be FORWARDING. The MRC is responsible for forwarding MRP_Test frames between the ring ports (and not to flood on other ports) and to listen when there is a change in the network to clear the FDB. Similar with the MRP ring, in the interconnect ring, MIM sends MRP_InTest frames on all 3 ports and expects to receive at least on one port the MRP_InTest frames. The MIM can operate in a different mode where it sends CFM frames on the interconnect port. The MIM is responsible for forwarding MRP_Test frames between ring ports and MRP_InTest frames between all ports. The MIC is responsible for forwarding MRP_InTest frames on all ports. To be able to configure the switch, the following user space application is required: https://github.com/microchip-ung/mrp The model of this application is a server that implements the MRP state machine which talks with the kernel via netlink interface and a client which talks only to the server to apply different configurations. This is an example of topology. .MRP Topology Before doing any configuration it is required to start the server which needs to run background because the user will use mrp application to talk with it. mrp_server & After that is possible to create the bridge and assign the front ports to it ip link set dev eth0 up ip link set dev eth1 up ip link set dev eth2 up ip link set dev eth3 up ip link add name br0 type bridge ip link set dev eth0 master br0 ip link set dev eth1 master br0 ip link set dev eth2 master br0 ip link set dev eth3 master br0 The bridge is not set up yet because that could cause loops in the network. Once all MRP instances are created the bridge can be set up to forward also non MRP traffic. ip link set dev br0 up Now we can create MRP instances using this command: mrp addmrp bridge br0 ring_nr 1 pport eth0 sport eth1 ring_role mrm Where: bridge represents the bridge on which to create the MRP instance. ring_nr represents the ring id of which this MRP instance is part of. This id needs to be unique on each bridge. It is used to differentiate MRP instances. pport represents the primary port sport represents the secondary port ring_role represents the role of the node. This can be mrm,mrc,mra, mim,mic It is possible to create multiple MRP instances: mrp addmrp bridge br0 ring_nr 2 pport eth2 sport eth3 ring_role mrm Where: ring_nr needs to be unique pport and sport can be part of an existing ring. To see the current status of MRP instances it is possible to use this command: mrp getmrp bridge: br0 ring_nr: 1 pport: eth0 sport: eth1 ring_role: MRM ring_state: CHK_RO bridge: br0 ring_nr: 2 pport: eth2 sport: eth3 ring_role: MRM ring_state: CHK_RC Where: bridge represents the bridge on which the MRP instance exists pport and sport represents the MRP ports of the instance ring_role represents the role ring_state represents the state of the state machine. In this case first MRP instance is in open state CHK_RO and the second is in closed state CHK_RC. To delete an MRP instance: mrp delmrp bridge br0 ring_nr 1 Where: bridge represents the bridge on which MRP instance exists ring_nr represents the ring id of MRP instance It possible for a node to have also the interconnect role. But this role can be set on only when the MRP instance is created. The interconnect mode has two modes of operating: RC_MODE - where it is using MRP_InTest frames to detect if the ring is open/closed LC_MODE - where it is using CFM frames on the interconnect ports to detect if the links go down By default MRP instance with interconnect role will use RC_MODE mrp addmrp bridge br0 ring_nr 3 pport eth0 ssport eth1 ring_role mrc in_role mim in_id 1 iport eth3 Where: in_role represents the interconnect role. This can be mim or mic. id_id represents the id of the interconnect node. This id needs to be the same wit the other nodes in the interconnect ring. iport represents the interconnect port. To create MRP instance with interconnect role that use LC_MODE the following command can be used: mrp addmrp bridge br0 ring_nr 3 pport eth0 ssport eth1 ring_role mrc in_role mim in_id 1 iport eth3 in_mode lc cfm_instance 1 cfm_level 7 cfm_mepid 2 cfm_peer_mepid 1 cfm_dmac 00:00:00:00:00:02 cfm_maid ABCD Where: in_mode represents the operation mode. This can be lc or rc. cfm_instance represents the id of the cfm instance cfm_level represents MEG level cfm_mepid represents the MEP id of the MEP cfm_peer_mepid represents the MRP id of the peer MEP cfm_dmac represents the MAC address of the MEP cfm_maid represents the MAID domain name More information about CFM can be found here: https://github.com/microchip-ung/cfm","title":"","component":"bsp","version":"2023.12","name":"mrp","url":"/bsp/2023.12/mrp.html","titles":[{"text":"1. MRP functional description","hash":"_mrp_functional_description","id":1},{"text":"2. Introduction","hash":"_introduction","id":2},{"text":"3. Usage","hash":"_usage","id":3},{"text":"3.1. Server","hash":"_server","id":4},{"text":"3.2. Bridge","hash":"_bridge","id":5},{"text":"3.3. Client","hash":"_client","id":6},{"text":"3.3.1. Add MRM/MRC","hash":"_add_mrmmrc","id":7},{"text":"3.3.2. Get status","hash":"_get_status","id":8},{"text":"3.3.3. Delete MRP","hash":"_delete_mrp","id":9},{"text":"3.3.4. Add MIM/MIC","hash":"_add_mimmic","id":10}]},"17":{"id":17,"text":"The different switch chips have different hardware features, and the software provided with the switch may implement a subset of these features, so here is an overview of what is provided for the different platforms: Feature LAN966x Support Sparx5 Support LAN969x Support Priority Flow Control ✔ · · Mirroring ✔ ✔ ✔ Link Aggregation ✔ · · IGMP/MLD Snooping ✔ · · Spanning Tree Protocol ✔ ✔ ✔ Shared Filter Blocks ✔ · · Basic Ingress QoS ✔ ✔ ✔ Port Policer ✔ ✔ ✔ ACL Policer ✔ ✔ ✔ PSFP Policer ✔ ✔ ✔ Strict and DWRR scheduling ✔ ✔ ✔ Time-Aware Scheduling ✔ ✔ · Frame Preemption ✔ ✔ ✔ Port Shaping ✔ ✔ ✔ Priority Shaping ✔ ✔ ✔ Basic Egress VLAN Tagging ✔ ✔ ✔ VLAN tagging ✔ ✔ ✔ Per Stream Filtering and Policing (PSFP) ✔ ✔ ✔ Frame Replication and Elimination for Reliability (FRER) ✔ · · Media Redundancy Protocol (MRP) ✔ · · Connectivity Fault Management ✔ · · Precision Time Protocol (PTP) ✔ ✔ ·","title":"","component":"bsp","version":"2023.12","name":"network_overview","url":"/bsp/2023.12/network_overview.html","titles":[{"text":"1. Networking Overview","hash":"_networking_overview","id":1}]},"18":{"id":18,"text":"Microchip is aware that some terminology used in this technical document is antiquated and inappropriate. As a result of the complex nature of software where seemingly simple changes have unpredictable, and often far-reaching negative results on the software’s functionality (requiring extensive retesting and revalidation) we are unable to make the desired changes in all legacy systems without compromising our product or our clients' products. The Microchip BSP is based on Buildroot, which is a simple, efficient and easy-to-use tool to generate embedded Linux systems through cross-compilation. It uses the Linux Kconfig configuration system, allowing easy selection of system content. The Makefile will include a .config file generated by Kconfig. The content of this file will determine what should be built. It is relatively easy from there to add your own programs so your entire build process is automated. Home website: http://www.buildroot.net/ The Buildroot user manual can help you better understand how Buildroot works. Microchip has added packages, patches, setup, and configuration to work with Microchip provided software that is not included in mainline buildroot. The Microchip BSP is used together with other Microchip products, such as MESA, WebStaX, SMBStaX and IStaX, but can also be used for development of Switchdev based applications, which is the main focus of this document. If a switch chip supports Switchdev, all the necessary drivers are part of the upstream kernel and it is possible to use standard Linux user-space tools to configure the switch. Examples of such user-space tools are ip, bridge and tc from the iproute2 package. The BSPs can be found here: AWS BSPs Here you can find several package types: mscc-brsdk---*: The BSP for the architecture named for the named release. mscc-brsdk-source--*: The BSP source files for the release. mscc-brsdk-logs--* : The log files from the BSP build for the release. mscc-brsdk-doc--* : The one-file documentation for the release. This is only available for the older releases The toolchains that can be used to build the BSPs from source can be found here: AWS Toolchains","title":"Introduction to BSP","component":"bsp","version":"2023.12","name":"introduction","url":"/bsp/2023.12/introduction.html","titles":[{"text":"Terminology","hash":"_terminology","id":1},{"text":"Introduction","hash":"_introduction","id":2},{"text":"Repository","hash":"_repository","id":3}]},"19":{"id":19,"text":"After a reboot all interfaces can be considered as standard Ethernet interfaces with no bridging involved. Only the CPU can send and receive frames through these interfaces. All interfaces are disabled by default and will need to be enabled before they can be used. To enable an interface and check the status: # ip link set dev eth0 up # ip link show dev eth0 4: eth0: mtu 1500 qdisc mq state UP mode DEFAULT group default qlen 1000 link/ether 00:40:42:04:98:9b brd ff:ff:ff:ff:ff:ff To disable an interface and check the status: # ip link set dev eth0 down # ip link show dev eth0 4: eth0: mtu 1500 qdisc mq state DOWN mode DEFAULT group default qlen 1000 link/ether 00:40:42:04:98:9b brd ff:ff:ff:ff:ff:ff It is possible to assign an IP address to an interface and use it as a standard network interface. To assign an IP address and check the status: # ip link set dev eth0 up # ip addr set dev eth0 192.168.1.1 # ip addr show dev eth0 4: eth0: mtu 1500 qdisc mq state UP group default qlen 1000 link/ether 00:40:42:04:98:9b brd ff:ff:ff:ff:ff:ff inet 192.168.1.1/24 scope global eth0 valid_lft forever preferred_lft forever inet6 fe80::240:42ff:fe04:989b/64 scope link valid_lft forever preferred_lft forever It is now possible to ping hosts on the same subnet: # ping 192.168.1.2 PING 192.168.1.2 (192.168.1.2) 56(84) bytes of data. 64 bytes from 192.168.1.2: icmp_seq=1 ttl=64 time=0.629 ms 64 bytes from 192.168.1.2: icmp_seq=2 ttl=64 time=0.334 ms 64 bytes from 192.168.1.2: icmp_seq=3 ttl=64 time=0.325 ms 64 bytes from 192.168.1.2: icmp_seq=4 ttl=64 time=0.337 ms ^C --- 192.168.1.2 ping statistics --- 4 packets transmitted, 4 received, 0% packet loss, time 3076ms rtt min/avg/max/mdev = 0.325/0.406/0.629/0.128 ms To delete an IP address and check the status: # ip addr del dev eth0 192.168.1.1/24 # ip addr show dev eth0 4: eth0: mtu 1500 qdisc mq state UP group default qlen 1000 link/ether 00:40:42:04:98:9b brd ff:ff:ff:ff:ff:ff inet6 fe80::240:42ff:fe04:989b/64 scope link valid_lft forever preferred_lft forever #","title":"","component":"bsp","version":"2023.12","name":"network_host_mode","url":"/bsp/2023.12/network_host_mode.html","titles":[{"text":"1. Network Host Mode functional description","hash":"_network_host_mode_functional_description","id":1},{"text":"1.1. Interface mode","hash":"_interface_mode","id":2},{"text":"1.2. IP address","hash":"_ip_address","id":3}]},"20":{"id":20,"text":"","title":"","component":"bsp","version":"2023.12","name":"opc_ua_pub_sub","url":"/bsp/2023.12/opc_ua_pub_sub.html","titles":[{"text":"1. OPC-UA Pub/Sub functional description","hash":"_opc_ua_pubsub_functional_description","id":1}]},"21":{"id":21,"text":"","title":"","component":"bsp","version":"2023.12","name":"peripherals","url":"/bsp/2023.12/peripherals.html","titles":[{"text":"1. Peripherals functional description","hash":"_peripherals_functional_description","id":1},{"text":"1.1. Flexcomm","hash":"_flexcomm","id":2},{"text":"1.2. SPI/I2c/CAN","hash":"_spii2ccan","id":3},{"text":"1.3. USB","hash":"_usb","id":4},{"text":"1.3.1. Host","hash":"_host","id":5},{"text":"1.3.2. Device","hash":"_device","id":6}]},"22":{"id":22,"text":"Policing is used to limit the bandwidth of traffic that enters the switch at ingress. Traffic that exceeds the configured bandwidth is dropped. A policer is configured by using rate and burst parameters, where rate is the maximum traffic rate in bits per second and burst is the maximum allowed burst in bytes. Policers are implemented using a tc filter containing a police action. The tc filter is attached to a clsact qdisc which must be created first: # tc qdisc add dev eth0 clsact See the TC Introduction page for a general introduction to tc commands. A port policer limits the bandwidth of traffic that enters the port at ingress and is implemented by a tc matchall filter. Setup a port policer with a rate of 100 Megabits per second and a burst of 4096 bytes: # tc filter add dev eth0 ingress prio 100 handle 200 matchall skip_sw \\ action police rate 100000000 burst 4096 The skip_sw flag signals that hardware offload is required. Show port policer statistics: # tc -s filter show dev eth0 ingress filter protocol all pref 100 matchall chain 0 filter protocol all pref 100 matchall chain 0 handle 0xc8 skip_sw in_hw (rule hit 0) action order 1: police 0x1 rate 100Mbit burst 4075b mtu 2Kb action reclassify overhead 0b ref 1 bind 1 installed 0 sec used 0 sec Action statistics: Sent 1004000 bytes 1000 pkt (dropped 893, overlimits 0 requeues 0) Sent software 0 bytes 0 pkt Sent hardware 1004000 bytes 1000 pkt backlog 0b 0p requeues 0 used_hw_stats immediate Here it is shown that 893 packets out of 1000 packets are dropped. Delete the port policer created above: # tc filter del dev eth0 ingress prio 100 handle 200 matchall An ACL policer makes it possible to limit the bandwidth of a specific incoming traffic stream. ACL policers are implemented by a tc flower filter that is hardware offloaded via VCAP IS2. See the TC and VCAP page for more information about how to configure VCAPs by using tc commands. Setup an ACL policer with a rate of 100 Megabits per second and a burst of 4096 bytes that polices all traffic containing destination IP address 10.10.10.10: # tc filter add dev eth0 ingress chain 20000 prio 100 handle 200 protocol ip flower skip_sw \\ dst_ip 10.10.10.10 \\ action police rate 100000000 burst 4096 \\ action goto chain 21000 The skip_sw flag signals that hardware offload is required. Show ACL policer statistics: # tc -s filter show dev eth0 ingress filter protocol ip pref 100 flower chain 20000 filter protocol ip pref 100 flower chain 20000 handle 0xc8 eth_type ipv4 dst_ip 10.10.10.10 skip_sw in_hw in_hw_count 1 action order 1: police 0x1 rate 100Mbit burst 4075b mtu 2Kb action reclassify overhead 0b ref 2 bind 1 installed 8 sec used 8 sec Action statistics: Sent 0 bytes 10000 pkt (dropped 0, overlimits 0 requeues 0) Sent software 0 bytes 0 pkt Sent hardware 0 bytes 10000 pkt backlog 0b 0p requeues 0 used_hw_stats immediate action order 2: gact action goto chain 21000 random type none pass val 0 index 2 ref 1 bind 1 installed 8 sec used 8 sec Action statistics: Sent 0 bytes 10000 pkt (dropped 0, overlimits 0 requeues 0) Sent software 0 bytes 0 pkt Sent hardware 0 bytes 10000 pkt backlog 0b 0p requeues 0 used_hw_stats immediate Here it is shown that the filter was hit by 10000 packets. ACL policers do not support count of dropped frames. Delete the ACL policer created above: # tc filter del dev eth0 ingress chain 20000 prio 100 handle 200 protocol ip flower A PSFP policer works in much the same way as an ACL policer and is explained in detail on the PSFP page.","title":"","component":"bsp","version":"2023.12","name":"policing","url":"/bsp/2023.12/policing.html","titles":[{"text":"1. Policing","hash":"_policing","id":1},{"text":"1.1. Port Policer","hash":"_port_policer","id":2},{"text":"1.2. ACL Policer","hash":"_acl_policer","id":3},{"text":"1.3. PSFP Policer","hash":"_psfp_policer","id":4}]},"23":{"id":23,"text":"PSFP works on ingress and allows filtering and policing on a per-stream basis. PSFP was originally defined in 802.1Qci-2017 but is now part of 802.1Q-2018. PSFP is implemented by a tc flower filter that is hardware offloaded via the IS1 VCAP. See the TC Introduction page for a general introduction to tc commands and the TC and VCAP page for more information about how to configure VCAPs by using tc commands. The examples shown here will match on destination MAC address and VLAN ID, also known as a Null Stream identification function as defined in 802.1CB-2017. The stream filter implementation is able to match on everything that is supported in the IS1 VCAP and this includes the other two passive stream identification functions defined in 802.1CB-2017: Source MAC and VLAN Stream identification function IP Stream identification Just like with any other tc filter command, you must create a 'clsact' qdisc: # tc qdisc add dev eth0 clsact To setup a stream filter with a stream gate and a flow meter: # tc filter add dev eth0 ingress chain 10000 prio 1 handle 2 protocol 802.1q flower skip_sw \\ dst_mac 00:00:00:00:00:11 \\ vlan_id 100 \\ vlan_ethtype all \\ action gate base-time 0 sched-entry open 10000000 3 8m sched-entry close 90000000 \\ action police rate 100000000 burst 15000 mtu 1200 \\ action goto chain 11000 All packets with DMAC 00:00:00:00:00:11 and VID 100 are matched. Gate is open in 10mS and closed in 90mS. Cycle time is implicit at 100mS. Frames that pass the gate are assigned an internal priority value of 3. A maximum of 8 megabytes can pass the gate during open time. Policer rate is 100 mbps and burst size is 15000 bytes. Frames larger than 1200 bytes are discarded. It is possible to create a stream filter with only a stream gate or a flow meter by removing the line with 'gate' or 'police'. If you want to limit the max sdu without policing, you must still create a flow meter but with a rate that exceeds the line speed. If you want to use the stream gate or flow meter in several stream filters, you can create them explicitly and giving them an index: # tc actions add action gate base-time 0 sched-entry open 10000000 3 8m sched-entry close 90000000 index 42 # tc actions add action police rate 100000000 burst 15000 mtu 1200 index 20 Then use the same indexes in several stream filters: # tc filter add dev eth0 ingress chain 10000 prio 1 handle 2 protocol 802.1q flower skip_sw \\ dst_mac 00:00:00:00:00:11 \\ vlan_id 100 \\ vlan_ethtype all \\ action gate index 42 \\ action police index 20 \\ action goto chain 11000 # tc filter add dev eth0 ingress chain 10000 prio 1 handle 3 protocol 802.1q flower skip_sw \\ dst_mac 00:00:00:00:00:22 \\ vlan_id 200 \\ vlan_ethtype all \\ action gate index 42 \\ action police index 20 \\ action goto chain 11000 Use the 'tc filter show' command to see the statistics: # tc -s filter show dev eth0 ingress filter protocol 802.1Q pref 1 flower chain 10000 filter protocol 802.1Q pref 1 flower chain 10000 handle 0x2 vlan_id 100 vlan_ethtype all dst_mac 00:00:00:00:00:22 eth_type 0003 skip_sw in_hw in_hw_count 1 action order 1: priority wildcard clockid TAI flags 0 base-time 0ns cycle-time 100ms cycle-time-ext 0ns schedule: number 0 gate-state open interval 10ms ipv 3 max-octets 8Mb number 1 gate-state close interval 90ms ipv wildcard max-octets wildcard pipe index 42 ref 2 bind 1 installed 9 sec used 2 sec Action statistics: Sent 0 bytes 10000 pkt (dropped 9849, overlimits 0 requeues 0) Sent software 0 bytes 0 pkt Sent hardware 0 bytes 10000 pkt backlog 0b 0p requeues 0 used_hw_stats immediate action order 2: police 0x14 rate 100Mbit burst 15000b mtu 1200b action reclassify overhead 0b ref 2 bind 1 installed 8 sec used 2 sec Action statistics: Sent 0 bytes 10000 pkt (dropped 9849, overlimits 0 requeues 0) Sent software 0 bytes 0 pkt Sent hardware 0 bytes 10000 pkt backlog 0b 0p requeues 0 used_hw_stats immediate action order 3: gact action goto chain 11000 random type none pass val 0 index 1 ref 1 bind 1 installed 7 sec used 2 sec Action statistics: Sent 0 bytes 10000 pkt (dropped 9849, overlimits 0 requeues 0) Sent software 0 bytes 0 pkt Sent hardware 0 bytes 10000 pkt backlog 0b 0p requeues 0 used_hw_stats immediate As seen above, it is not possible to see all the PSFP specific counters. The \"10000 pkt\" corresponds to the matching_frames_count The \"dropped 9849\" is the sum of not_passing_frames_count, not_passing_sdu_count and red_frames_count. In order to see all the PSFP counters you can use a debug command: # cat /sys/kernel/debug/lan966x/qos_show PSFP Stream Filter Pool: ix 0: mfc: 10000 pfc: 866 npfc: 9134 psc: 866 npsc: 0 rfc: 715 lu: 17179620 PSFP Stream Gate Pool: ix 0: user 1 id 42 ref_cnt 1 PSFP and ACL Policer Pool: ix 81: user 1 id 20 ref_cnt 1 ptp current time : 52.109889569 sec Here the PSFP counters are shown as: mfc - matching_frames_count pfc - passing_frames_count npfc - not_passing_frames_count psc - passing_sdu_count npsc - not_passing_sdu_count rfc - red_frames_count lu - last update time in jiffies Up to 256 stream filters are supported and each stream filter can have its own stream gate and flow meter. The valid values for open and close time in a stream gate are >= 1uS and < 1S. Maximum number of scheduler entries in a stream gate is 4. The unit for rate is bits per second and valid values are from 100000 to 1000000000. The resolution in hardware is 33 1/3 kbps and the value is rounded up to the nearest next supported value. The unit for burst is bytes and valid values are from 4096 to 245760 bytes. The resolution in hardware is 4096 bytes and the value is rounded up to the nearest next supported value.","title":"","component":"bsp","version":"2023.12","name":"psfp","url":"/bsp/2023.12/psfp.html","titles":[{"text":"1. PSFP (Per Stream Filtering and Policing)","hash":"psfp","id":1}]},"24":{"id":24,"text":"","title":"","component":"bsp","version":"2023.12","name":"profinet","url":"/bsp/2023.12/profinet.html","titles":[{"text":"1. Profinet functional description","hash":"_profinet_functional_description","id":1},{"text":"1.1. p-net support","hash":"_p_net_support","id":2}]},"25":{"id":25,"text":"","title":"","component":"bsp","version":"2023.12","name":"rte_mera","url":"/bsp/2023.12/rte_mera.html","titles":[{"text":"1. RTE/MERA functional description","hash":"_rtemera_functional_description","id":1}]},"26":{"id":26,"text":"Scheduling is done at egress and is based on the classified priority of the frame. The classified priority is a number from 0 to 7 where 0 is the lowest priority and 7 is the highest priority. Strict scheduling is the default behaviour at egress. A port has eight priority queues and frames in the highest priority queue are always transmitted before frames in lower priority queues. If shapers are needed on one or more of these eight priority queues then the mqprio qdisc can be used. The mqprio qdisc does nothing by itself but serves as an attachment point for shapers. To create an mqprio qdisc on eth0 and attach a cbs shaper on priority queue 4: # tc qdisc add dev eth0 root handle 1:0 mqprio # tc qdisc replace dev eth0 parent 1:5 handle 2 cbs \\ idleslope 10000 sendslope -990000 hicredit 15 locredit -990 offload 1 The mqprio handle is 1:0 and the major part is 1. The minor part of a qdisc handle must always be 0. The cbs parent is 1:5 where the major part (1) must match the major part of the mqprio handle and the minor part (5) designates priority queue 4. The minor part is always offset by one and minor part 5, therefore, corresponds to priority queue 4. See the Priority Shaping section on the Shaping page for a description of the supported shapers and their parameters. Default is that the frames are subject to the strict priority shaper algorithm. It can be configured that priorities are subject to Enhanced Transmission Selection (ETS). These are the lowest priorities so that transmission from strict priorities are always done first. Configuration is done using the tc qdisc add ets command. This command configures bands as either strict or bandwidth-sharing (DWRR). According to tc-ets(8) man page: When dequeuing, strict bands are tried first, if there are any. Band 0 is tried first. This means that the first band - band 0 - has the highest priority. In the Microchip switch, there are 8 priorities 0-7 and it is priority 7 that has the highest priority. This is not configurable. This means that Band 0 always equals to Priority 7. This command configures a mix of strict and ETS priorities: tc qdisc add dev eth0 handle 1: root ets bands 8 strict 5 quanta 1000 1000 1000 priomap 7 6 5 4 3 2 1 0 The device (port) is eth0. The handle for this tc is 1: There are (always) 8 bands The first 5 bands are strict. The next 3 bands have an equal quanta of 1000. The priomap is (always) 7 6 5 4 3 2 1 0 The quanta parameter gives the DWRR weight for each band. In this case 1/3 of the bandwidth to each band. The priomap is configuring per priority what the related band is - Priority 0 is the first in the list. As Priority 0 has the lowest priority it maps to band 7 that is the band with the lowest priority. The priomap must always be configured as shown above. This command changes the quantum parameter for a specific band. tc qdisc add dev eth0 handle 1: root ets bands 8 strict 5 quanta 600 300 100 priomap 7 6 5 4 3 2 1 0 tc class change dev eth0 classid 1:6 ets quantum 800 The device (port) is eth0. The classid is 1:6 the quantum is 800 According to tc-ets(8) man page: The minor number of `classid` to use when referring to a band is the band number increased by one. So in this case the changed band is 5 - the first bandwidth-sharing band. Time-aware scheduling, as described in IEEE Std 802.1Q-2018 Section 8.6.8.4, is implemented using the taprio qdisc. A cyclic schedule opens and closes each priority queue relative to a known timescale, e.g. controlled via PTP. When a queue is closed all frames are held back in the queue and when it opens again the frames are transmitted again in priority order. A taprio qdisc is created using the tc qdisc command. # tc qdisc add dev eth0 root handle 1:0 taprio \\ num_tc 8 queues 1@0 1@1 1@2 1@3 1@4 1@5 1@6 1@7 map 0 1 2 3 4 5 6 7 \\ flags 2 base-time 0 cycle-time 50000000 \\ sched-entry S 0x80 10000000 \\ sched-entry S 0x7f 40000000 The taprio qdisc is a little more complicated to set up as the tc taprio command does not (yet) support the same defaults as the tc mqprio command. Here you must manually set up the number of traffic classes, the mapping from traffic class to priority, and flags that indicates HW offload. The rest of the parameters are for the time-aware scheduler configuration: base-time - The PTP time when the cycle should start. Set to 0 if the cycle should start immediately. cycle-time - The total cycle-time in nanoseconds. sched-entry - A single entry in the schedule where S is the command 'SetGateStates' followed by a mask that selects the queues to open (LSB is the lowest priority queue) and finally the duration of the entry in nanoseconds. In the example above the cycle-time is 50 milliseconds, queue 7 is open for 10 milliseconds and all other queues are open for 40 milliseconds. This cycle repeats forever. It is possible to add a shaper on one or more of the eight priority queues in the same way as on the mqprio qdisc. See the Priority Shaping section on the Shaping page for a description of the supported shapers and their parameters.","title":"","component":"bsp","version":"2023.12","name":"scheduling","url":"/bsp/2023.12/scheduling.html","titles":[{"text":"1. Scheduling","hash":"_scheduling","id":1},{"text":"1.1. Strict scheduling.","hash":"mqprio_qdisc","id":2},{"text":"1.2. Strict and DWRR scheduling.","hash":"ets_qdisc","id":3},{"text":"1.3. Time-Aware Scheduling","hash":"taprio_qdisc","id":4}]},"27":{"id":27,"text":"PTP is Precision Time Protocol as described by IEEE standard 1588. The purpose of this application is to allow to synchronize multiple clocks in the network. This software is based on the open source project linuxptp. On top of which were added patches to add support for Relay as described in 8021.AS 2020. The plan is to have these patches upstream to the linuxptp project. The application that is part of the BSP has these extra patches. This project can be found here ptp4l Ptp4l supports the following: hardware and software timestamping: 1-step and 2-step implements: ordinary, boundary, transparent clocks and AS bridge transport over UDP/IPv4, UDP/IPv6, raw Ethernet supports multiple servos: pi, linreq, ntpshm, nullf There are multiple executable that are are used: ptp4l: this is the daemon that adjusted the PHC(Physical Hardware Clock) such offset from master is 0. pmc: short live application to interact with ptp4l to inspect status and allow certain configurations attributes to be updated without restarting the daemon phc2sys: this is a daemon which is used to synchronize two or more clocks in the system. Typically is used to synchronize the system clock with a PTP hardware clock which itself is synchronized using ptp4l daemon. ts2phc: this is a daemon which is used to synchronize a PTP hardware clock to GPS and or 1PPS. It is possible to pass the following arguments to ptp4l to the command line. The most important arguments are: -l: to set the log level -m: to print message to standard output -i: interface on which to run -f: to set the configuration file -p: specify directly the PHC device When ptp4l is started, it has an option to read the configuration from a file. The most important configurations options are: delay_mechanism: which can be P2P, Auto or E2E. network_transport: which can be L2, UDPv4 or UDPv6. time_stamping: which can be: hardware, software or legacy. clock_type: which can be OC, BC or Relay slaveOnly: force the node to behave as a slave only domainNumber: represents the PTP domain number. Default is 0. twoStepFlag: a value of 1 uses 2-step timestamping, while a value of 0 uses 1-step timestamping For more details about ptp4l run: man ptp4l Ptp4l is works on the physical interfaces and not on the bridge interface, so before starting the daemon, make sure that the interface is up using the command: ip link set dev eth0 up To run ptp4l as ordinary clock, the following configuration is needed: cat > /tmp/linux.cfg [global] clock_type OC delay_mechanism E2E network_transport L2 time_stamping hardware first_step_threshold 0.000001 step_threshold 0.000001 [eth0] And start ptp4l as: ptp4l -f /tmp/linux.cfg & For the boundary clock, it is required at least 2 network interfaces. Because it is required have 1 slave and at least 1 master. Therefore the configuration file can look like this: cat > /tmp/linux.cfg [global] clock_type BC delay_mechanism E2E network_transport L2 time_stamping hardware first_step_threshold 0.000001 step_threshold 0.000001 [eth0] [eth1] And start ptp4l as: ptp4l -f /tmp/linux.cfg & For the transparent clock, it is required at least 2 network interfaces. The frames will be forward in SW by the ptp4l application but the timestamps will be do by the HW. The configuration file can look like this: [global] priority1 254 free_running 1 freq_est_interval 3 tc_spanning_tree 1 summary_interval 1 clock_type P2P_TC network_transport L2 delay_mechanism P2P [eth0] [eth1] And start ptp4l as: ptp4l -f /tmp/linux.cfg & The support for this feature is not part of the upstream project. Therefore the implementation and the configuration might changed based on the requests received when this feature will be upstream. The relay behaves similar to the transparent clock and to boundary clock. The ptp4l configuration for relay can be the following: cat > /tmp/linux.cfg [global] priority1 254 priority2 254 clock_type RELAY network_transport L2 delay_mechanism P2P path_trace_enabled 1 transportSpecific 1 follow_up_info 1 ptp_dst_mac 01:80:C2:00:00:0E gmCapable 1 logAnnounceInterval 0 logSyncInterval -3 syncReceiptTimeout 3 free_running 1 summary_interval 1 [eth0] [eth1] [eth2] And start ptp4l as: ptp4l -f /tmp/linux.cfg & It is possible to run multiple ptp4l instances and each of them to control a different PHC. For example, let’s say that we want to control PHC0 and PHC1 and they have the PTP domains 0 and 20. cat > /tmp/ptp0.cfg [global] clock_type OC delay_mechanism E2E network_transport L2 time_stamping hardware first_step_threshold 0.000001 step_threshold 0.000001 And start the first ptp4l using: ptp4l -p /dev/ptp0 -f /tmp/ptp0.cfg & And the second ptp4l will have the configuration: cat > /tmp/ptp1.cfg [global] clock_type OC delay_mechanism E2E network_transport L2 time_stamping hardware first_step_threshold 0.000001 step_threshold 0.000001 domainNumber 20 And start the second ptp4l using: ptp4l -p /dev/ptp1 -f /tmp/ptp0.cfg & If multiple ptp4l instances need to access the same PHC then it is possible and recommended to use the option -i instead of -p. To be able to see the current status of the ptp4l daemon, it is possible to use the pmc application. For example to read the offset from master: pmc -u -b 0 'GET CURRENT_DATA_SET' sending: GET CURRENT_DATA_SET a0369f.fffe.67c4e6-0 seq 0 RESPONSE MANAGEMENT CURRENT_DATA_SET stepsRemoved 1 offsetFromMaster 10.0 meanPathDelay 252.0 For more details about pmc run: man pmc To synchronize the system clock to one of the PHC, the following command can be used: phc2sys -s /dev/ptp0 -c CLOCK_REALTIME -O 0 Also it is possible to synchronize 2 PHC using the command: phc2sys -s /dev/ptp0 -c /dev/ptp1 -O 0 Where: -s: represents the master clock -c: represents the slave clock -O: represents the offset between the slave and master times in seconds. For more details about phc2sys run: man phc2sys IEEE1588 over Ethernet boundary clock: [global] delay_mechanism E2E network_transport L2 time_stamping hardware first_step_threshold 0.000001 step_threshold 0.000001 clock_type BC logAnnounceInterval 0 logSyncInterval -4 logMinDelayReqInterval -2 [eth0] [eth1] IEEE1588 over Ethernet ordinary clock: [global] delay_mechanism E2E network_transport L2 time_stamping hardware first_step_threshold 0.000001 step_threshold 0.000001 logAnnounceInterval 0 logSyncInterval -4 logMinDelayReqInterval -2 [eth0] IEEE1588 over IPv4 boundary clock: [global] delay_mechanism E2E network_transport UDPv4 time_stamping hardware first_step_threshold 0.000001 step_threshold 0.000001 clock_type BC logAnnounceInterval 0 logSyncInterval -4 logMinDelayReqInterval -2 [eth0] [eth1] IEEE1588 over IPv4 ordinary clock: [global] delay_mechanism E2E network_transport UDPv4 time_stamping hardware first_step_threshold 0.000001 step_threshold 0.000001 logAnnounceInterval 0 logSyncInterval -4 logMinDelayReqInterval -2 [eth0] IEEE1588 over IPv6 boundary clock: [global] delay_mechanism E2E network_transport UDPv6 time_stamping hardware first_step_threshold 0.000001 step_threshold 0.000001 clock_type BC logAnnounceInterval 0 logSyncInterval -4 logMinDelayReqInterval -2 [eth0] [eth1] IEEE1588 over IPv6 ordinary clock: [global] delay_mechanism E2E network_transport UDPv6 time_stamping hardware first_step_threshold 0.000001 step_threshold 0.000001 logAnnounceInterval 0 logSyncInterval -4 logMinDelayReqInterval -2 [eth0] IEEE802.1AS Relay [global] priority1 254 priority2 254 clock_type RELAY network_transport L2 delay_mechanism P2P path_trace_enabled 1 transportSpecific 1 follow_up_info 1 ptp_dst_mac 01:80:C2:00:00:0E gmCapable 1 logAnnounceInterval 0 logSyncInterval -3 syncReceiptTimeout 3 free_running 1 summary_interval 1 tc_spanning_tree 1 [eth0] [eth1] IEEE802.1AS End-node [global] gmCapable 1 priority1 248 priority2 248 logAnnounceInterval 0 logSyncInterval -3 syncReceiptTimeout 3 neighborPropDelayThresh 800 min_neighbor_prop_delay -20000000 assume_two_step 1 path_trace_enabled 1 follow_up_info 1 transportSpecific 0x1 ptp_dst_mac 01:80:C2:00:00:0E network_transport L2 delay_mechanism P2P [eth0]","title":"","component":"bsp","version":"2023.12","name":"ptp","url":"/bsp/2023.12/ptp.html","titles":[{"text":"1. PTP functional description","hash":"_ptp_functional_description","id":1},{"text":"1.1. PTP4L","hash":"_ptp4l","id":2},{"text":"1.1.1. Ordinary clock(OC)","hash":"_ordinary_clockoc","id":3},{"text":"1.1.2. Boundary clock(BC)","hash":"_boundary_clockbc","id":4},{"text":"1.1.3. Transparent clock(TC)","hash":"_transparent_clocktc","id":5},{"text":"1.1.4. AS Bridge(Relay)","hash":"_as_bridgerelay","id":6},{"text":"1.1.5. Multiple PTP instances","hash":"_multiple_ptp_instances","id":7},{"text":"1.2. PMC","hash":"_pmc","id":8},{"text":"1.3. PHC2SYS","hash":"_phc2sys","id":9},{"text":"1.4. Default configurations","hash":"_default_configurations","id":10}]},"28":{"id":28,"text":"Shaping is used to limit the bandwidth of traffic at egress. Traffic that exceeds the configured bandwidth is buffered in the queue system. Shapers are implemented by using a tc qdisc. A port shaper limits the bandwidth of all traffic that is egressing at a port and is implemented by a tbf qdisc. A tbf qdisc that implements a port shaper must be attached to the root: # tc qdisc add dev eth0 root handle 1:0 tbf \\ rate 10000000 burst 8192 limit 1m The parameters have the following meaning: rate - The bitrate is specified in bits per second. burst - The burst size in bytes. limit - Buffer size. This parameter is not offloaded (and ignored) but is required by the tc command. In the example above a tbf qdisc is created with a rate of 10 megabits per second and a burst size of 8192 bytes. A priority shaper limits the bandwidth of a specific priority that is egressing at a port and is implemented by either a tbf qdisc or a cbs qdisc. The main difference between these two is the way that bursts are handled. The tbf qdisc is continuously assigned new credit according to the configured shaper rate. This implies that after an idle period a burst of data is allowed when there are again data to transmit. The cbs qdisc implements the shaper algorithm described in IEEE Std 802.1Q-2018 Section 8.6.8.2, and is only assigned new credit when there is data to send. This lowers the possibility of large bursts. A tbf qdisc that implements a priority shaper must be attached to one of the classes on a parent qdisc, which can be either mqprio, taprio or ets: # tc qdisc replace dev eth0 parent 1:5 handle 2:0 tbf \\ rate 10000000 burst 8192 limit 1m The parameters have the same meaning as in the port shaper. In the example above a tbf qdisc is created in traffic class 1:5 of the parent, which corresponds to priority queue 4. Sparx5: does currently not support the credit based shaper. This will be added in a future release. A cbs qdisc must always be attached to one of the classes on a parent qdisc, which can be either mqprio, taprio or ets: # tc qdisc replace dev eth0 parent 1:5 handle 2:0 cbs \\ idleslope 10000 sendslope -990000 hicredit 15 locredit -990 offload 1 The parameters have the following meaning: idleslope - The rate of credits accumulated (in kilobits per second) when there is at least one frame waiting for transmission. sendslope - The rate of credits depleted when a transmission is occurring. hicredit - The maximum amount of credits (in bytes) that can be accumulated. locredit - The minimum amount of credits (in bytes) that can be reached. offload - Set to 1 to enable HW offload. In the example above a cbs qdisc is created in traffic class 1:5 of the parent, which corresponds to priority queue 4. The interface runs at 1 Gbps and the bit rate is 10000 kbps. Please see IEEE Std 802.1Q-2018 Section 8.6.8.2 and Annex L on how to calculate the parameters.","title":"","component":"bsp","version":"2023.12","name":"shaping","url":"/bsp/2023.12/shaping.html","titles":[{"text":"1. Shaping","hash":"_shaping","id":1},{"text":"1.1. Port Shaping","hash":"_port_shaping","id":2},{"text":"1.2. Priority Shaping","hash":"priority_shaping","id":3},{"text":"1.2.1. tbf","hash":"_tbf","id":4},{"text":"1.2.2. cbs","hash":"_cbs","id":5}]},"29":{"id":29,"text":"The VCAP tool is a low-level interface that can be used to configure and query the VCAPs. With this tool, it is possible to configure all key and action fields in the VCAPs. This is needed in cases where a specific VCAP configuration is not possible via the tc commands, such as IEEE 802.1CB Frame Replication and Elimination for Reliability (FRER). The layout of the VCAPs depends on the actual hardware. Please consult the datasheet for details. The following examples are for the LAN966X platform. Use vcap -h to see the usage: Create, modify, get and delete VCAP rules Usage: vcap [options] [command] [arguments] Options: -h This help -p Get platform information -v VCAP_NAME Get vcap information -o VCAP_NAME Get vcap port information -l LEVEL Rule information level: 3=FULL, 2=SOME, 1=MINIMAL, 0=NONE Command: add RULE_ID Add a new rule with id, keys and actions del RULE_ID Delete an existing get RULE_ID Get and display an existing rule mod RULE_ID Modify keys and actions of an existing rule reset RULE_ID Reset the counter of an existing rule list List all known rules Arguments to the add or mod commands: VCAP_NAME Name of VCAP. Found in platform information PRIORITY Rule priority VCAP_LOOKUP VCAP lookup index KEYSET_NAME Found in vcap information (KEY_NAME key_value key_mask)* Found in vcap keyset information A '=' value/mask sets all bits [-] Get a list of possible actionsets or actions ACTIONSET_NAME Found in vcap information (ACTION_NAME action_value)* Found in vcap actionset information It is possible to query the platform information, like e.g. showing the supported VCAPs: Use vcap -p to get the platform information: Platform: lan966x - [0]: es0 - [3]: is1 - [4]: is2 More details are available for each of the VCAP, by getting the VCAP information: Use vcap -v is2 to get the IS2 VCAP information: VCAP[4]: is2 instance: 0 name: is2 rows: 64 sw_count: 4 sw_width: 96 sticky_width: 32 act_width: 31 default_cnt: 11 require_cnt_dis: 1 version: 1 vtype: 4 vinst: 0 first_cid: 8000000 last_cid: 8199999 lookups: 2 first_valid_addr: 0 last_valid_addr: 255 last_used_addr: 256 keyset: [4]: VCAP_KFS_ARP key: [5]: 8021Q_DEI_CLS, type: BIT, width: 1 key: [9]: 8021Q_PCP_CLS, type: U32, width: 3 key: [17]: 8021Q_VID_CLS, type: U32, width: 12 key: [19]: 8021Q_VLAN_TAGGED_IS, type: BIT, width: 1 key: [21]: ARP_ADDR_SPACE_OK_IS, type: BIT, width: 1 key: [22]: ARP_LEN_OK_IS, type: BIT, width: 1 key: [23]: ARP_OPCODE, type: U32, width: 2 key: [24]: ARP_OPCODE_UNKNOWN_IS, type: BIT, width: 1 key: [25]: ARP_PROTO_SPACE_OK_IS, type: BIT, width: 1 key: [26]: ARP_SENDER_MATCH_IS, type: BIT, width: 1 key: [27]: ARP_TGT_MATCH_IS, type: BIT, width: 1 key: [31]: HOST_MATCH, type: BIT, width: 1 key: [35]: IF_IGR_PORT_MASK, type: U32, width: 9 key: [46]: ISDX_GT0_IS, type: BIT, width: 1 key: [47]: L2_BC_IS, type: BIT, width: 1 ... Each port on the switch has its keyset configuration per lookup. You can inspect this information. Use vcap -o is2 to get the port configuration for IS2: is2: port[00] (eth2): state: on L:0: snap: mac_snap arp: arp oam: oam ipv4_tcp_udp: ipv4_tcp_udp ipv4_other: ipv4_other ipv6: ipv6_tcp_udp or ipv6_other L:1: snap: mac_snap arp: arp oam: oam ipv4_tcp_udp: ipv4_tcp_udp ipv4_other: ipv4_other ipv6: ipv6_tcp_udp or ipv6_other ... To add a rule in IS1: # vcap add 1 is1 10 0 \\ VCAP_KFS_7TUPLE L2_DMAC 00:00:00:00:00:11 = \\ VCAP_AFS_S1 QOS_ENA 1 QOS_VAL 5 The second line defines the keys and the third line defines the actions. The = is a shorthand notation that set the mask to all ones (all bits in the key value is used for matching) To modify the above rule in IS1: # vcap mod 1 L2_DMAC 00:00:00:00:00:22 = Note that the rule must exist and you cannot change the size of the key and action. To read the hit counter in the above rule in IS1: # vcap get 1 Rule: 1, is1, priority: 10, lookup: 0, address: 764-767 (X4), Counter: 42, Hit: 1 Keyset: VCAP_KFS_7TUPLE KEY: IF_IGR_PORT_MASK: W9, 0x000/0x1fe KEY: L2_DMAC: W48, 0:0:0:0:0:22/ff:ff:ff:ff:ff:ff KEY: LOOKUP_INDEX: W2, 0x0/0x3 KEY: TYPE: W2, 0x1/0x3 Actionset: VCAP_AFS_S1 ACTION: QOS_ENA: W1, 1 ACTION: QOS_VAL: W3, 0x5 ACTION: TYPE: W1, 0 This shows that the rule have been hit 42 times. Some counters are only one bit wide, so you can only see if they have been hit or not. See VCAP Information You can reset the counter with: # vcap reset 1 Rule 1 counter reset To delete the above rule in IS1: # vcap del 1 Besides the vcap tool you can also dump VCAP specific information in debugfs. Show administration info for IS1 on LAN966x: # cat /sys/kernel/debug/lan966x/vcaps/is1_0 name: is1 rows: 192 sw_count: 4 sw_width: 96 sticky_width: 32 act_width: 123 default_cnt: 0 require_cnt_dis: 1 version: 1 vtype: 3 vinst: 0 first_cid: 1000000 last_cid: 1299999 lookups: 3 first_valid_addr: 0 last_valid_addr: 767 last_used_addr: 767 # If there are rules present in the IS1 VCAP they will also be listed in a format like shown with the vcap tool. It is also possible to see the raw rule data, and in this case just one line is printed per rule. # cat /sys/kernel/debug/lan966x/vcaps/raw_is1_0 addr: 760, X4 rule, keyset: VCAP_KFS_7TUPLE (3) A VCAP rule occupies 1, 2, 3, 4, 6 or 12 addresses and is called and X1 to X12 correspondingly. Only Sparx5 uses the X3, X6 and X12 size rules. X1 rules can be located on any address Xn rules can only be located on address values modulo n You cannot specify the address when you add a rule. The location depends on the size and the priority. The rules are added in size order, so that larger rules are added first (on the higher number addresses). Rules with a priority of low numerical value have the highest priority and are located first within their size group. If you add a rule with the same priority, the last added rule has the highest priority (located first). The LAN966x IS1 VCAP generates an 7TUPLE keyset on all combinations of ports and lookups by default. If you want to use another keyset on a specific combination of port and lookup you must change the generated key by using a tc chain template. See the Chain section on the TC Introduction page on how to set up a tc chain template. To see the current mapping from frame type to keys in LAN966x IS1: # cat /sys/kernel/debug/lan966x/ports ... is1: ... port[02] (eth0): state: on L:0: other: 7tuple ipv4: 7tuple ipv6: 7tuple rt: follow_other L:1: other: 7tuple ipv4: 7tuple ipv6: 7tuple rt: follow_other L:2: other: 7tuple ipv4: 7tuple ipv6: 7tuple rt: follow_other .... To change the IPv4 keyset generation for IS1 Lookup 0, you can add a chain that selects this protocol, where the src and dst IP keys will ensure that a different keyset will be selected. tc chain add dev eth0 ingress chain 1000000 prio 10000 handle 10000 protocol ipv4 flower skip_sw \\ src_ip 0.0.0.0 dst_ip 0.0.0.0 Looking at the mapping again shows that the keyset has changed to 5tuple_ipv4: # cat /sys/kernel/debug/lan966x/ports ... is1: ... port[02] (eth0): state: on L:0: other: 7tuple ipv4: 5tuple_ipv4 ipv6: 7tuple rt: follow_other L:1: other: 7tuple ipv4: 7tuple ipv6: 7tuple rt: follow_other L:2: other: 7tuple ipv4: 7tuple ipv6: 7tuple rt: follow_other It is not necessary to use tc chain templates on Sparx5 ES0 and LAN966x IS2 and ES0 VCAPs as the keys generated here only depends on the frame type.","title":"","component":"bsp","version":"2023.12","name":"vcap_tool","url":"/bsp/2023.12/vcap_tool.html","titles":[{"text":"1. VCAP Tool","hash":"vcap_tool","id":1},{"text":"2. VCAP Debugging tools","hash":"vcap_debug","id":2}]},"30":{"id":30,"text":"The following tools can be used for controlling the network features of a switch: Name Description Origin Example IProute2 Suite Manages network interfaces and shows state and statistics Linux community ip, bridge, tc ethtool Controls network interface configuration Linux community ethtool ptp4l Service that participates in a PTP network Linux community ptp4l tiny-lldpd Service that supports the LLC protocol Linux community tllpd QoS Tool Configures the aspects of interface ingress and egress service quality Microchip qos VCAP Tool Provides low-level access to the switch VCAP rules Microchip vcap FP Tool Controls Frame Preemption Microchip fp FRER Tool Controls the Frame Reliability and Elimination feature Microchip frer The following tools can be used for debugging the behavior of the switch: Name Description Origin Example Debug Messages Dumps the kernel log with Error, Warning etc. messages Linux community dmesg Packet Capture Dumps network packets sent on an interface Linux community tcpdump Packet Injection/Capturing Injects network frames into an interface (and/or receives them) Microchip ef, ef-loop DebugFS Dumps debug information from a framework or a driver Linux community Microchip cat /sys/kernel/debug/…​ Symbolic Register Access Dumps register values or writes to registers using the register names Microchip symreg or symreg_sparx5","title":"","component":"bsp","version":"2023.12","name":"tools_overview","url":"/bsp/2023.12/tools_overview.html","titles":[{"text":"1. Networking Tools","hash":"tool_overview","id":1},{"text":"2. Debugging Tools","hash":"_debugging_tools","id":2}]},"31":{"id":31,"text":"Version: BSP-2021.09 Previous Version: BSP-2021.06 Date: 2021-10-08 Description: Roadmap release The BSP level documentation is still incomplete and considered in BETA quality. Currently the BSP-Doc only covers LAN9662 and LAN9668 (using EVB: UNG8290 and UNG8291). The basic features of LAN8814 is included in this release but considered in BETA. This release has BETA support for LAN9662 and LAN9668 using the UNG8291/EVB-LAN9662-EndNode and UNG8290/EVB-LAN9668-8Port evaluation boards. Support has been added in U-Boot and Linux kernel. The BSP supports both standalone users where network support is provided using the SwitchDev driver in the kernel, or by using MESA, WebStaX, SMBStaX or IStaX. The EVB-LAN9668-8Port Eval board uses 2 LAN8814 QSGMII PHYs. This is a PTP/TimeStamp capable PHY, but this release only offers support for the basic features. This means that timestamping will be done in the MAC. This is likely to change in future releases. Fixed None Fixed but not verified: MAS_SW-317: SwitchDev/LAN966x/PSFP: When gate instance and flow meter are configured in different stream filter instances, \"not_passing_frames_count\" counter is incremented for the stream filter attached with the flow meter. Known issues: MAS_SW-318: SwitchDev/LAN966x: Not all multicast frames go to CPU by default. This breaks IPv6 and others. MAS_SW-260: SwitchDev/All/IGMP: IGMP implementation is not VLAN aware","title":"BSP-2021.09","component":"bsp","version":"2023.12","name":"bsp-2021.09","url":"/bsp/2023.12/release-notes/bsp-2021.09.html","titles":[{"text":"BSP-2021.09","hash":"_bsp_2021_09","id":1},{"text":"Disclaimers","hash":"_disclaimers","id":2},{"text":"BSP-Doc in BETA","hash":"_bsp_doc_in_beta","id":3},{"text":"LAN8814 PHY in BETA","hash":"_lan8814_phy_in_beta","id":4},{"text":"LAN9662 and LAN9668 switches in BETA","hash":"_lan9662_and_lan9668_switches_in_beta","id":5},{"text":"General","hash":"_general","id":6},{"text":"Bug Status","hash":"_bug_status","id":7}]},"32":{"id":32,"text":"Version: BSP-2021.06 Previous Version: BSP-2021.03 Date: 2021-07-09 Description: Roadmap release This release adds BSP level of documentation, available in the bsp-doc.html file, which can be found in the root of the BSP sources. The documentation included in this release focus mostly on the LAN9662 chip and associated evaluation boards. This release introduce support for LAN9662 including the UNG8291 EVB-LAN9662-EndNode board. Support has been added in U-Boot and Linux kernel. The BSP supports both standalone users where network support is provided using the SwitchDev driver in the kernel, or by using MESA, WebStaX, SMBStaX or IStaX. This release updates the Linux kernel from v5.4.x to v5.10, so for all supported boards, both IStaX and Standalone support has been updated. The BSP offers source and binary artifacts. The binaries are distributed in 3 packages: arm, arm64 and mipsel. The binaries are organized in the following way: mscc-brsdk--//// : Is the chip architecture (arm, arm64 or mipsel) : Version of the release (2021.06) : Sub-architecture (arm-cortex_a8-linux-gnu) : The BSP provides images for a variety of different use-cases, this is where we branch out on use cases. Following is a listing of the different supported types: standalone: Here the kernel is compiled with SwitchDev support, complete port map is in the DT (this is therefore board specific) and the rootfs includes the common Linux network related tools. This build can be used to configure the switch without needing any other SW components (but more can be added on top). xstax: This is a configuration optimized for MESA, WebStaX, SMBStaX and IStaX users. Here the kernel only supports the CPU and the CPU peripherals, but not the switchcore. The switch registers can be reached via an UIO driver, and user-space drivers needs to configure the switch. bootloaders: This is U-Boot for the various boards. The same bootloaders are used with both standalone and IStaX. : In this release, only release builds are provided. Later releases may add debug builds as well. : Kernel, root file system and device-trees.","title":"BSP-2021.06","component":"bsp","version":"2023.12","name":"bsp-2021.06","url":"/bsp/2023.12/release-notes/bsp-2021.06.html","titles":[{"text":"BSP-2021.06","hash":"_bsp_2021_06","id":1},{"text":"Disclaimers","hash":"_disclaimers","id":2},{"text":"BSP-Doc in BETA","hash":"_bsp_doc_in_beta","id":3},{"text":"LAN9662 in BETA","hash":"_lan9662_in_beta","id":4},{"text":"General","hash":"_general","id":5},{"text":"Linux kernel updated to 5.10.x","hash":"_linux_kernel_updated_to_5_10_x","id":6},{"text":"Change of directory structure in binary releases","hash":"_change_of_directory_structure_in_binary_releases","id":7}]},"33":{"id":33,"text":"Version: BSP-2022.03 Previous Version: BSP-2021.12-1 Date: 2022-04-01 Description: Roadmap release Component Version Linux kernel: 5.15.25 GCC: 10.3.0 Buildroot: 2021.02.7 UBoot-LAN966x: 2019.04 UBoot-MIPSEL: 2019.10 UBoot-ARM64: 2019.10 UBoot-LS1046: 2016.09 The BSP level documentation is still incomplete and considered in BETA quality. Currently the BSP-Doc covers LAN9662, LAN9668 (using EVB: UNG8290 and UNG8291) and Sparx5 (using EVB PCB134 and PCB135). Support in the Linux PHY-Lib for LAN8814 has been added. The current driver support the basic functionallity, PTP-TimeStamping (one-step/two-step, peer2peer, end2end, eth/ipv4/ipv6) and it exposes a single PHC (Physical Hardware Clock). Fixed MAS_SW-260: SwitchDev/All/IGMP: IGMP implementation is not VLAN aware MAS_SW-390: MRP: MRP ring with ring_role MRA configured with mra priority is not forming MRP ring all devices Fixed but not verified: None Known issues: MAS_SW-393: PFC:Pause frames counters are not incrementing on ingress port of DUT-1 MAS_SW-424: PFC: Even when the traffic rate is less than the egress port speed, DUT is generating PFC pause frames when frames with size more than 1380Bytes are received.","title":"BSP-2022.03","component":"bsp","version":"2023.12","name":"bsp-2022.03","url":"/bsp/2023.12/release-notes/bsp-2022.03.html","titles":[{"text":"BSP-2022.03","hash":"_bsp_2022_03","id":1},{"text":"Version of major components","hash":"_version_of_major_components","id":2},{"text":"Feature update","hash":"_feature_update","id":3},{"text":"BSP-Doc in BETA","hash":"_bsp_doc_in_beta","id":4},{"text":"LAN8814: 4x1Gbit QSGMII CU-PHY support added","hash":"_lan8814_4x1gbit_qsgmii_cu_phy_support_added","id":5},{"text":"Bug Status","hash":"_bug_status","id":6}]},"34":{"id":34,"text":"Version: BSP-2021.12 Previous Version: BSP-2021.09 Date: 2022-01-07 Description: Roadmap release The BSP level documentation is still incomplete and considered in BETA quality. Currently the BSP-Doc only covers LAN9662 and LAN9668 (using EVB: UNG8290 and UNG8291). The basic features of LAN8814 is included in this release but considered in BETA. This release has BETA support for LAN9662 and LAN9668 using the UNG8291/EVB-LAN9662-EndNode and UNG8290/EVB-LAN9668-8Port evaluation boards. Support has been added in U-Boot and Linux kernel. The BSP supports both standalone users where network support is provided using the SwitchDev driver in the kernel, or by using MESA, WebStaX, SMBStaX or IStaX. The EVB-LAN9668-8Port Eval board uses 2 LAN8814 QSGMII PHYs. This is a PTP/TimeStamp capable PHY, but this release only offers support for the basic features. This means that timestamping will be done in the MAC. This is likely to change in future releases. Fixed MAS_SW-317: SwitchDev/LAN966x/PSFP: When gate instance and flow meter are configured in different stream filter instances, \"not_passing_frames_count\" counter is incremented for the stream filter attached with the flow meter. MAS_SW-318: SwitchDev/LAN966x: Not all multicast frames go to CPU by default. This breaks IPv6 and others. Fixed but not verified: None Known issues: MAS_SW-260: SwitchDev/All/IGMP: IGMP implementation is not VLAN aware MAS_SW-390: MRP: MRP ring with ring_role MRA configured with mra priority is not forming MRP ring all devices","title":"BSP-2021.12","component":"bsp","version":"2023.12","name":"bsp-2021.12","url":"/bsp/2023.12/release-notes/bsp-2021.12.html","titles":[{"text":"BSP-2021.12","hash":"_bsp_2021_12","id":1},{"text":"Disclaimers","hash":"_disclaimers","id":2},{"text":"BSP-Doc in BETA","hash":"_bsp_doc_in_beta","id":3},{"text":"LAN8814 PHY in BETA","hash":"_lan8814_phy_in_beta","id":4},{"text":"LAN9662 and LAN9668 switches in BETA","hash":"_lan9662_and_lan9668_switches_in_beta","id":5},{"text":"General","hash":"_general","id":6},{"text":"Bug Status","hash":"_bug_status","id":7}]},"35":{"id":35,"text":"Version: BSP-2022.06 Previous Version: BSP-2022.03 Date: 2022-07-06 Description: Roadmap release Component Version Linux kernel: 5.15.41 GCC: 10.3.0 Buildroot: 2022.02.2 UBoot-LAN966x: 2019.04 UBoot-MIPSEL: 2019.10 UBoot-ARM64: 2019.10 UBoot-LS1046: 2016.09 The BSP level documentation is still incomplete and considered in BETA quality. Currently the BSP-Doc covers LAN9662, LAN9668 (using EVB: UNG8290 and UNG8291), Sparx5 (using EVB PCB134 and PCB135) and peripheral devices found LAN966X boards like: I2C, MCAN, MMC, OTP, etc.. Profinet and MERA(Microchip Ethernet RTE API) packages were added in buildroot. This is possible to run only on UNG8309. Fixed Fixed but not verified: None Known issues: MAS_SW-393: PFC:Pause frames counters are not incrementing on ingress port of DUT-1 MAS_SW-424: PFC: Even when the traffic rate is less than the egress port speed, DUT is generating PFC pause frames when frames with size more than 1380Bytes are received. MAS_SW-430: PTP4l_INDY: peer delay time out messages are reporting and making ptp port restart when configured with 802.1AS profile MAS_SW-420: 2.5G_Port: When speed is configured to forced, only auto-negotiation is turned off and port is always advertising 2.5G and 1G speeds, also port status is always UP with 2.5G irrespective of the configured forced speed.","title":"BSP-2022.06","component":"bsp","version":"2023.12","name":"bsp-2022.06","url":"/bsp/2023.12/release-notes/bsp-2022.06.html","titles":[{"text":"BSP-2022.06","hash":"_bsp_2022_06","id":1},{"text":"Version of major components","hash":"_version_of_major_components","id":2},{"text":"Feature update","hash":"_feature_update","id":3},{"text":"BSP-Doc in BETA","hash":"_bsp_doc_in_beta","id":4},{"text":"P-NET and MERA","hash":"_p_net_and_mera","id":5},{"text":"Bug Status","hash":"_bug_status","id":6}]},"36":{"id":36,"text":"Version: BSP-2022.09 Previous Version: BSP-2022.06 Date: 2022-09-30 Description: Roadmap release Component Version Linux kernel: 5.15.63 GCC: 10.3.0 Buildroot: 2022.02.5 UBoot-LAN966x: 2019.04 UBoot-MIPSEL: 2019.10 UBoot-ARM64: 2019.10 UBoot-LS1046: 2016.09 UNG8309 is a carrier board for UNG8291 expanding the connectivity using the edge connector. The UNG8309 is supported by the lan966x_pcb8309.dts file. The UNG8291 includes 2 SFP ports, and this release also includes the needed fixes to use SFPs at speed up to 2.5Gb/s. The LAN966x driver has been expanded with RGMII support. RGMII can be enabled in the devicetrees using existing DT-bindings. TCAM support has been added to the Sparx5 driver. The driver supports the following HW resoruces: IS0/CLM, IS2, ES0 and ES2 (see the datasheet for details). This feature can be utilized by using following user-space tools: - tc filter: Part of the tc-flower feature set. - vcap: user-space tool. The vcap user-space tool is an extended feature using its own netlink interface and will not be upstream. vcap aims for supporting all features supported by HW. The tc filter is a stnadardlized interface supporting a subset of the features, and will eventually be submitted to the upstream kernel. TAS - Time Aware Shaper support has been implemented in the Sparx5 driver. The TAS implementation can be configured using the taptio qdisc part of tc (see Time-Aware Scheduling section in the BSP-Doc or the tc-taprio man-page. TAS is in IEEE Std 802.1Q-2018 called Scheduled Traffic. The Sparx5 driver has added support for the following schedullers and shapers: TBF - Token Bucket Filter MQPRIO - Multiqueue Priority Qdisc ETS - Enhanced Transmission Selection scheduler FramePreemption supprot has been added. See the BSP-Doc page for details: Frame Preemption for details. A new driver supporting the LAN8841 1G RGMII/GMII PHY is added. The driver has support for basic features, Link change interrupts, PTP/Timestamping, 1pps output and 1pps input. The BSP-Doc covering LAN966x is now feature complete and ready for use. This release includes a new section on secure boot, and various small fixes in the existing content. Sparx5 documentation is still in beta. The general network section is still LAN966x specific. Part of this may apply to Sparx5. Fixed MAS_SW-430: PTP4l_INDY: peer delay time out messages are reporting and making ptp port restart when configured with 802.1AS profile MAS_SW-429: 2.5G_Port: When speed is configured to forced, only auto-negotiation is turned off and port is always advertising 2.5G and 1G speeds, also port status is always UP with 2.5G irrespective of the configured forced speed. Fixed but not verified: None Known issues: MAS_SW-393: PFC:Pause frames counters are not incrementing on ingress port of DUT-1 MAS_SW-424: PFC: Even when the traffic rate is less than the egress port speed, DUT is generating PFC pause frames when frames with size more than 1380Bytes are received.","title":"BSP-2022.09","component":"bsp","version":"2023.12","name":"bsp-2022.09","url":"/bsp/2023.12/release-notes/bsp-2022.09.html","titles":[{"text":"BSP-2022.09","hash":"_bsp_2022_09","id":1},{"text":"Version of major components","hash":"_version_of_major_components","id":2},{"text":"Feature update","hash":"_feature_update","id":3},{"text":"LAN9662 New EVB UNG8309 added","hash":"_lan9662_new_evb_ung8309_added","id":4},{"text":"LAN966x RGMII support added","hash":"_lan966x_rgmii_support_added","id":5},{"text":"Sparx5 TCAM support","hash":"_sparx5_tcam_support","id":6},{"text":"Sparx5 TAS","hash":"_sparx5_tas","id":7},{"text":"Sparx5 MQPRIO + ETS + TBF","hash":"_sparx5_mqprio_ets_tbf","id":8},{"text":"Sparx5 FramePreemption","hash":"_sparx5_framepreemption","id":9},{"text":"PHY/LAN8841 driver added","hash":"_phylan8841_driver_added","id":10},{"text":"BSP-Doc/LAN966x","hash":"_bsp_doclan966x","id":11},{"text":"BSP-Doc/Sparx5","hash":"_bsp_docsparx5","id":12},{"text":"Bug Status","hash":"_bug_status","id":13}]},"37":{"id":37,"text":"Version: BSP-2021.12-1 Previous Version: BSP-2021.12 Date: 2022-01-31 Description: Roadmap release The BSP level documentation is still incomplete and considered in BETA quality. Currently the BSP-Doc only covers LAN9662 and LAN9668 (using EVB: UNG8290 and UNG8291). The basic features of LAN8814 is included in this release but considered in BETA. This release has BETA support for LAN9662 and LAN9668 using the UNG8291/EVB-LAN9662-EndNode and UNG8290/EVB-LAN9668-8Port evaluation boards. Support has been added in U-Boot and Linux kernel. The BSP supports both standalone users where network support is provided using the SwitchDev driver in the kernel, or by using MESA, WebStaX, SMBStaX or IStaX. The EVB-LAN9668-8Port Eval board uses 2 LAN8814 QSGMII PHYs. This is a PTP/TimeStamp capable PHY, but this release only offers support for the basic features. This means that timestamping will be done in the MAC. This is likely to change in future releases. Fixed APPL-4259: In PCB-134 timestamp accuracy testing after around 1hr getting rcu_sched self-detected stall Fixed but not verified: None Known issues: MAS_SW-260: SwitchDev/All/IGMP: IGMP implementation is not VLAN aware MAS_SW-390: MRP: MRP ring with ring_role MRA configured with mra priority is not forming MRP ring all devices","title":"BSP-2021.12-1","component":"bsp","version":"2023.12","name":"bsp-2021.12-1","url":"/bsp/2023.12/release-notes/bsp-2021.12-1.html","titles":[{"text":"BSP-2021.12-1","hash":"_bsp_2021_12_1","id":1},{"text":"Disclaimers","hash":"_disclaimers","id":2},{"text":"BSP-Doc in BETA","hash":"_bsp_doc_in_beta","id":3},{"text":"LAN8814 PHY in BETA","hash":"_lan8814_phy_in_beta","id":4},{"text":"LAN9662 and LAN9668 switches in BETA","hash":"_lan9662_and_lan9668_switches_in_beta","id":5},{"text":"General","hash":"_general","id":6},{"text":"Bug Status","hash":"_bug_status","id":7}]},"38":{"id":38,"text":"Version: BSP-2022.12 Previous Version: BSP-2022.09 Date: 2023-01-06 Description: Roadmap release Component Version Linux kernel: 5.15.63 GCC: 10.3.0 Buildroot: 2022.02.5 UBoot-LAN966x: 2019.04 UBoot-MIPSEL: 2019.10 UBoot-ARM64: 2019.10 UBoot-LS1046: 2016.09 The current version of LAN9662 and LAN9668 is Rev-B, which is also the revision which will be manufactured. Rev-A is good for evaluation, but not recommended for future production use. From a SW/BSP perspective the main difference between Rev-A and Rev-B is the bootrom which has changed significantly. Rev-B has introduced Arm trusted firmware, the SoC is configured with a secure-word and a non-secure-world, and secure boot is now fully supported. As part of this change, the DDR initialization has been moved from UBoot into BL2 (updatable part of TFA). Due to this architectural update, rev-A and rev-B need a different UBoot binary. The BSP-2022.09 release offered a UBoot for both rev-A and rev-B, this version and future versions will only offer UBoot updates for rev-B. Customer can continue their rev-A boards with the Linux kernel and RootFS from new BSP release, but with the 2022.09 version of UBoot. The UNG8290-RevA board has a minor design flaw causing the highest SPI bus speed to be 10MHz. This has been fixed on Rev-B boards, and the default device tree will set a clock speed at 100MHz. To continue using UNG8290-RevA boards, the frequency must be lowered in the device-tree. Per-Stream Filtering and Policing support has been added for the sparx5 driver. Streams are added and deleted using the 'tc' command suite (please see PSFP (Per-Stream Filtering and Policing) for details). Fixed None Fixed but not verified: None Known issues: MAS_SW-393: PFC:Pause frames counters are not incrementing on ingress port of DUT-1 MAS_SW-424: PFC: Even when the traffic rate is less than the egress port speed, DUT is generating PFC pause frames when frames with size more than 1380Bytes are received.","title":"BSP-2022.12","component":"bsp","version":"2023.12","name":"bsp-2022.12","url":"/bsp/2023.12/release-notes/bsp-2022.12.html","titles":[{"text":"BSP-2022.12","hash":"_bsp_2022_12","id":1},{"text":"Version of major components","hash":"_version_of_major_components","id":2},{"text":"Disclaimers","hash":"_disclaimers","id":3},{"text":"LAN9662 and LAN9668 Rev-A support removed","hash":"_lan9662_and_lan9668_rev_a_support_removed","id":4},{"text":"SPI-NOR speed on LAN9668 on UNG8290 boards","hash":"_spi_nor_speed_on_lan9668_on_ung8290_boards","id":5},{"text":"Feature update","hash":"_feature_update","id":6},{"text":"Sparx5 PSFP support added","hash":"_sparx5_psfp_support_added","id":7},{"text":"Bug Status","hash":"_bug_status","id":8}]},"39":{"id":39,"text":"Version: BSP-2023.03 Previous Version: BSP-2022.12 Date: 2023-03-30 Description: Roadmap release Component Version Linux kernel: 6.1.3 GCC: 10.3.0 Buildroot: 2022.02.8 UBoot-LAN966x: 2019.04 UBoot-MIPSEL: 2019.10 UBoot-ARM64: 2019.10 UBoot-LS1046: 2016.09 The Linux Kernel has been updated to the latest LTS version: 6.1 Fixed None Fixed but not verified: None Known issues: MAS_SW-393: PFC:Pause frames counters are not incrementing on ingress port of DUT-1 MAS_SW-424: PFC: Even when the traffic rate is less than the egress port speed, DUT is generating PFC pause frames when frames with size more than 1380Bytes are received.","title":"BSP-2023.03","component":"bsp","version":"2023.12","name":"bsp-2023.03","url":"/bsp/2023.12/release-notes/bsp-2023.03.html","titles":[{"text":"BSP-2023.03","hash":"_bsp_2023_03","id":1},{"text":"Version of major components","hash":"_version_of_major_components","id":2},{"text":"Feature update","hash":"_feature_update","id":3},{"text":"New Long Term Supported (LTS) Linux Kernel","hash":"_new_long_term_supported_lts_linux_kernel","id":4},{"text":"Bug Status","hash":"_bug_status","id":5}]},"40":{"id":40,"text":"Version: BSP-2023.06 Previous Version: BSP-2023.03 Date: 2023-06-30 Description: Roadmap release Component Version Linux kernel: 6.1.22 GCC: 10.3.0 Buildroot: 2023.02 UBoot-LAN966x: 2023.04 UBoot-MIPSEL: 2019.10 UBoot-ARM64: 2023.04 UBoot-LS1046: 2016.09 The Linux Kernel is now available as a GitHub repository. You can find it here: https://github.com/microchip-ung/linux The Linux LTS is made available as branch: bsp-6.1-2023 The minor update available with this BSP release will be added with a tag: bsp-6.1-2023.06 The support for RPI4 CM as an external CPU for the LAN966x PCIe NIC card has been updated so eMMC bases RPI 4 CM versions can also be used. The image generation provides a image file that can be written directly onto the SD card (or eMMC devices) and is immediately usable. See the README.adoc in the image output folder for more information. There is a new u-boot version for architectures arm and arm64. These affects the lan966x chip and sparx5 chip. Fixed None Fixed but not verified: None Known issues: MAS_SW-393: PFC:Pause frames counters are not incrementing on ingress port of DUT-1 MAS_SW-424: PFC: Even when the traffic rate is less than the egress port speed, DUT is generating PFC pause frames when frames with size more than 1380Bytes are received.","title":"BSP-2023.06","component":"bsp","version":"2023.12","name":"bsp-2023.06","url":"/bsp/2023.12/release-notes/bsp-2023.06.html","titles":[{"text":"BSP-2023.06","hash":"_bsp_2023_06","id":1},{"text":"Version of major components","hash":"_version_of_major_components","id":2},{"text":"Availability","hash":"_availability","id":3},{"text":"Feature update","hash":"_feature_update","id":4},{"text":"Raspberry PI 4 Compute Module External CPU support","hash":"_raspberry_pi_4_compute_module_external_cpu_support","id":5},{"text":"Update u-boot for arm and arm64","hash":"_update_u_boot_for_arm_and_arm64","id":6},{"text":"Bug Status","hash":"_bug_status","id":7}]},"41":{"id":41,"text":"Version: BSP-2023.09-1 Previous Version: BSP-2023.09 Date: 2023-09-30 Description: Roadmap release Component Version Linux kernel: 6.1.35 GCC: 10.3.0 Buildroot: 2023.02.2 UBoot-LAN966x: 2023.04 UBoot-MIPSEL: 2019.10 UBoot-ARM64: 2023.04 UBoot-LS1046: 2016.09 The Linux Kernel is available as a GitHub repository. You can find it here: https://github.com/microchip-ung/linux The Linux LTS is made available as branch: bsp-6.1-2023 The minor update available with this BSP release will be added with a tag: bsp-6.1-2023.09-1 The LAN969x Switch is now supported with both an XStaX and a Standalone configuration. The standalone configuration (SwitchDev) has some limitations in the current release: The switch calendar configuration is fixed to use the EVB-LAN9696-24port configuration The copper port LED usage is reversed Fixed SPARX5: Failed to read the NAND Fixed but not verified: None Known issues: MAS_SW-393: PFC:Pause frames counters are not incrementing on ingress port of DUT-1 MAS_SW-424: PFC: Even when the traffic rate is less than the egress port speed, DUT is generating PFC pause frames when frames with size more than 1380Bytes are received.","title":"BSP-2023.09-1","component":"bsp","version":"2023.12","name":"bsp-2023.09-1","url":"/bsp/2023.12/release-notes/bsp-2023.09-1.html","titles":[{"text":"BSP-2023.09-1","hash":"_bsp_2023_09_1","id":1},{"text":"Version of major components","hash":"_version_of_major_components","id":2},{"text":"Availability","hash":"_availability","id":3},{"text":"Feature update","hash":"_feature_update","id":4},{"text":"LAN969x Switch Support","hash":"_lan969x_switch_support","id":5},{"text":"Standalone Limitations","hash":"_standalone_limitations","id":6},{"text":"Bug Status","hash":"_bug_status","id":7}]},"42":{"id":42,"text":"Version: BSP-2023.09 Previous Version: BSP-2023.06 Date: 2023-09-30 Description: Roadmap release Component Version Linux kernel: 6.1.35 GCC: 10.3.0 Buildroot: 2023.02 UBoot-LAN966x: 2023.04 UBoot-MIPSEL: 2019.10 UBoot-ARM64: 2023.04 UBoot-LS1046: 2016.09 The Linux Kernel is available as a GitHub repository. You can find it here: https://github.com/microchip-ung/linux The Linux LTS is made available as branch: bsp-6.1-2023 The minor update available with this BSP release will be added with a tag: bsp-6.1-2023.09 The LAN969x Switch is now supported with both an XStaX and a Standalone configuration. The standalone configuration (SwitchDev) has some limitations in the current release: The switch calendar configuration is fixed to use the EVB-LAN9696-24port configuration The copper port LED usage is reversed Fixed None Fixed but not verified: None Known issues: MAS_SW-393: PFC:Pause frames counters are not incrementing on ingress port of DUT-1 MAS_SW-424: PFC: Even when the traffic rate is less than the egress port speed, DUT is generating PFC pause frames when frames with size more than 1380Bytes are received.","title":"BSP-2023.09","component":"bsp","version":"2023.12","name":"bsp-2023.09","url":"/bsp/2023.12/release-notes/bsp-2023.09.html","titles":[{"text":"BSP-2023.09","hash":"_bsp_2023_09","id":1},{"text":"Version of major components","hash":"_version_of_major_components","id":2},{"text":"Availability","hash":"_availability","id":3},{"text":"Feature update","hash":"_feature_update","id":4},{"text":"LAN969x Switch Support","hash":"_lan969x_switch_support","id":5},{"text":"Standalone Limitations","hash":"_standalone_limitations","id":6},{"text":"Bug Status","hash":"_bug_status","id":7}]},"43":{"id":43,"text":"Version BSP-2023.12 Previous Version BSP-2023.09-1 Date 2024-01-05 Description Roadmap release Component Host Version Linux kernel All 6.1.55 GCC All 10.3.0 Buildroot All 2023.02.4 U-Boot Sparx5 2023.04 LAN969x 2023.04 LAN966x 2023.04 RPi4CM 2021.04 MIPSEL 2019.10 LS1046 2016.09 The Linux Kernel is available as a GitHub repository. You can find it here: GitHub Linux The Linux LTS is made available as branch: bsp-6.1-2023 The minor update available with this BSP release will be added with a tag: bsp-6.1-2023.12 New Frame DMA based IFH Driver U-Boot support Single NOR bootstrap option, without eMMC The Standalone (SwitchDev) configuration now supports the following features: PTP (Precision Time Protocol) TAS (Time Aware Shaper) CBS (Credit Based Shaper) The VCAP implementation (TCAM engine) has been aligned with the upstream Linux Kernel, so that VCAP instances need to be enabled before they can be used. This is done using tc matchall rules from chain 0 to the appropriate chain for the VCAP lookup. The Raspberry PI image provided in the BSP now supports both the LAN966x and the LAN969x, but you need to actively select the correct device tree using the configuration name in the FIT image, as the bootloader (U-Boot) cannot know in advance which SoC is available in the other end of the PCIe connection. Fixed DBB-594: LAN969x - Linux-RPi4 - PostSi - Busybox missing in root file system DBB-582: PTP 1PPS - Waveform high period is incorrect. DBB-580: PTP \"PHASE_DETECTOR_CTRL PHAD_CTRL DIV_CFG 0\" (Auto detect) is not working DBB-546: Wrong chip_id numbers for SparX5 DBB-420: Indy LAN8814/8804 basic support in Linux PHY drivers needs updating Fixed but not verified: None Known issues: MAS_SW-393: PFC:Pause frames counters are not incrementing on ingress port of DUT-1 MAS_SW-424: PFC: Even when the traffic rate is less than the egress port speed, DUT is generating PFC pause frames when frames with size more than 1380Bytes are received.","title":"BSP-2023.12","component":"bsp","version":"2023.12","name":"bsp-2023.12","url":"/bsp/2023.12/release-notes/bsp-2023.12.html","titles":[{"text":"BSP-2023.12","hash":"_bsp_2023_12","id":1},{"text":"Version of major components","hash":"_version_of_major_components","id":2},{"text":"Availability","hash":"_availability","id":3},{"text":"Feature update","hash":"_feature_update","id":4},{"text":"WebStaX Support","hash":"_webstax_support","id":5},{"text":"LAN969x Standalone Switch Support","hash":"_lan969x_standalone_switch_support","id":6},{"text":"VCAP changes","hash":"_vcap_changes","id":7},{"text":"Raspberry PI 4 Compute Module as external CPU","hash":"_raspberry_pi_4_compute_module_as_external_cpu","id":8},{"text":"Bug Status","hash":"_bug_status","id":9}]},"44":{"id":44,"text":"Here are the release notes for the latest BSP releases: BSP-2023.12 BSP-2023.09-1 BSP-2023.09 BSP-2023.06 BSP-2023.03 BSP-2022.12 BSP-2022.09 BSP-2022.06 BSP-2022.03 BSP-2021.12-1 BSP-2021.12 BSP-2021.09","title":"Release Notes","component":"bsp","version":"2023.12","name":"nav","url":"/bsp/2023.12/release-notes/nav.html","titles":[]},"45":{"id":45,"text":"LAN966x SoC supports cryptographic hardware accelerators - AES and SHA. Hardware accelerators perform cryptographic operations faster than they can be performed in software. The AES and SHA resources are configured as secure in the TF-A/BL2 by default. This means that they cannot be used from Linux. If these HW resources are needed in Linux, then they need to be de-activated TF-A, and in BL2 re-configured as non-secure peripherals. Due to this, these drivers are disabled in the default LAN966x device-trees. Following kernel config options should be enabled to use AES and SHA: CONFIG_CRYPTO_AES - AES driver config option. CONFIG_CRYPTO_DEV_ATMEL_AES - Atmel AES hw accelerator config option. CONFIG_CRYPTO_DEV_ATMEL_SHA - Atmel SHA hw accelerator config option. To enable AES block, following configurations are required in device tree: compatible string must be set to atmel,at91sam9g46-aes. reg property must be set to . interrupts property must be set with interrupt details as . Peripheral Shared Peripheral Interrupt CPU INTR aes 85 53 Note Shared peripheral interrupt lines start at index ID32. So, CPU INTR must be calculated as [Shared peripheral interrupt number - 32]. clocks property must be set to . clock-names must be set to aes_clk. dmas property must be set to and . dma-names must be set to rx and tx. To enable SHA block, following configurations are required in device tree: compatible string must be set to atmel,at91sam9g46-sha. reg property must be set to . interrupts property must be set with interrupt details as . Peripheral Shared Peripheral Interrupt CPU INTR sha 89 57 Note Shared peripheral interrupt lines start at index ID32. So, CPU INTR must be calculated as [Shared peripheral interrupt number - 32]. clocks property must be set to . clock-names must be set to _clk. dmas property must be set to . dma-names must be set to tx. https://elixir.bootlin.com/linux/latest/source/Documentation/devicetree/bindings/crypto/atmel,at91sam9g46-aes.yaml Following example shows how AES and SHA should be defined in DT: aes: crypto@e004c000 { compatible = \"atmel,at91sam9g46-aes\"; reg = ; interrupts = ; dmas = , ; dma-names = \"rx\", \"tx\"; clocks = ; clock-names = \"aes_clk\"; }; sha: crypto@e006c000 { compatible = \"atmel,at91sam9g46-sha\"; reg = ; interrupts = ; dmas = ; dma-names = \"tx\"; clocks = ; clock-names = \"sha_clk\"; }; Check if AES and SHA algorithms are registered in Crypto framework using cat /proc/crypto | grep atmel. # cat /proc/crypto | grep atmel driver : atmel-hmac-sha512 driver : atmel-hmac-sha384 driver : atmel-hmac-sha256 driver : atmel-hmac-sha224 driver : atmel-hmac-sha1 driver : atmel-sha512 driver : atmel-sha384 driver : atmel-sha224 driver : atmel-sha256 driver : atmel-sha1 driver : atmel-xts-aes driver : atmel-gcm-aes driver : atmel-cfb64-aes driver : atmel-ctr-aes driver : atmel-cfb8-aes driver : atmel-cfb16-aes driver : atmel-cfb32-aes driver : atmel-cfb-aes driver : atmel-ofb-aes driver : atmel-cbc-aes driver : atmel-ecb-aes Enable cryptodev-linux and openssl buildroot packages. Run modprobe cryptodev.ko to load cryptodev module. Encrypt 6bc1bee22e409f96e93d7e117393172a using below commands python -c \"print '6bc1bee22e409f96e93d7e117393172a'.decode('hex')\" > plaintext openssl enc -aes-128-ecb -engine devcrypto -nosalt -K 2b7e151628aed2a6abf7158809cf4f3c -in plaintext -out ciphertext hexdump -C ciphertext Read the encoder hex from ciphertext. Observe that first 16 bytes in file is equivalent to expected encrypted value 3ad77bb40d7a3660a89ecaf32466ef97 Run below command to test the sha sum of abc. Replace $i with 1 or 224 or 256 or 384 or 512, based on SHA used. echo -n \"abc\" | shasum -a $i or use below commands: Enable cryptodev-linux and openssl buildroot packages. Run modprobe cryptodev.ko to load cryptodev module. echo -n 'abc' | openssl dgst -sha$i -engine devcrypto # echo -n 'abc' | openssl dgst -shal -engine devcrypto engine \"devcrypto\" set (stdin) = a9993e364706816aba3e25717850c26c9cd0d89d # symreg *SHA_IODATAR0* SHA_SHA_IODATAR0 = 0x363e99a9 # symreg *SHA_IODATAR1 SHA_SHA_IODATARl = 0x6a810647 # symreg *SHA IODATAR2 SHA_SHA_IODATAR2 = 0x71253eba # symreg *SHA_IODATAR3 SHA_SHA_IODATAR3 = 0x6cc25078 # symreg *SHA_IODATAR4 SHA_SHA_IODATAR4 = 0x9dd8d09c","title":"LAN966x Crypto HW Accelerators","component":"bsp","version":"2023.12","name":"lan966x-aes-sha","url":"/bsp/2023.12/supported-hw/lan966x-aes-sha.html","titles":[{"text":"LAN966x Crypto HW Accelerators","hash":"_lan966x_crypto_hw_accelerators","id":1},{"text":"SoC Resources","hash":"_soc_resources","id":2},{"text":"Kernel configurations","hash":"_kernel_configurations","id":3},{"text":"Devicetree Configuration","hash":"_devicetree_configuration","id":4},{"text":"ATMEL AES","hash":"_atmel_aes","id":5},{"text":"ATMEL SHA","hash":"_atmel_sha","id":6},{"text":"References","hash":"_references","id":7},{"text":"Example","hash":"_example","id":8},{"text":"UserSpace","hash":"_userspace","id":9},{"text":"Confirm instances are created","hash":"_confirm_instances_are_created","id":10},{"text":"Example on how to use","hash":"_example_on_how_to_use","id":11},{"text":"AES testing","hash":"_aes_testing","id":12},{"text":"SHA testing","hash":"_sha_testing","id":13}]},"46":{"id":46,"text":"The LAN966x family comprises the following SKUs: LAN9662 - 2 port end-node TSN Gigabit Ethernet switch device. LAN9668 - 8 port TSN Gigabit Ethernet switch device. This document will focus on the LAN966x SoCs, but to fully explain the boot process and boot facilities it is also necessary to consider the flash memories available on the board. The upcoming sections will briefly describe the boot media supported by the LAN966x, and then describe which of these media is available on the various evaluation boards offered by Microchip. This document uses many abbreviations, see the terms and abbreviations section for details. This document is specific to the B0 revision of LAN966x. A A0 revision also exists, but is not considered here. LAN966x offers secure boot, which is based on ARM Trusted Firmware (TF-A). The TF-A architecture heavily influence the boot-sequence, and to understand how LAN966x boots, a bit of TF-A understanding is also needed. Following is an illustration of a typical lan966x boot sequence using UBoot and Linux: It is possible to skip UBoot, if this case the boot sequence will look like this: TF-A and LAN966x goes through the following boot steps: TF-A/BL1 This is ROM code embedded inside the chip. LAN966x always start by boot TF-A/BL1 from ROM. TF-A/BL1 loads the next bootloader (BL2) from one of the support boot-medias. The strapping pins are used to configure which of the supported boot-media to use. BL2 This is a second stage boot-loader also part of TF-A. This bootloader runs from an on-chip SRAM, it setup the trust-zones, configure DDR memory and other basic platform initialization. Once the platform is initialized, it will load BL32 and BL33 from the configured boot-media into DDR memory. BL32 This is a called \"EL3 Runtime Software\", also part of TF-A. This stage does not influence the boot-flow directly, and will not be covered here. BL33 In TF-A terminology, this is the unsecure firmware. It is not part of the TF-A project, but is signed and distributed together with TF-A. TF-A imports this as a BLOB. Typically this is either UBoot or a special version of the kernel which can run without UBoot. The above list of update-able images (BL2, BL32 and BL33), plus relevant certificates and relevant support files are packed in a FIP (Firmware Image Packet), which is a storage format defined by TF-A. The FIP containing these images must be stored raw in the designed boot-media. In some cases it must be put at a specific address, while in other it is stored in a partition with a predefined name. This document will not go into the details of TF-A, but just assume that the FIP is available and describe where and how it can be programmed. Two different FIPs will be used, one with UBoot as BL33, and another one with Linux-kernel as BL33. The strapping pins are configuring the initial boot mode. The table below lists the supported modes: Strapping Pins LAN966x B0 0000 (0x0) eMMC + FC3 (for trace) 0001 (0x1) QSPI0 + FC3 (for trace) 0010 (0x2) SDCard + FC3 (for trace) 0011 (0x3) eMMC 0100 (0x4) QSPI0 0101 (0x5) SDCard 0110 (0x6) PCIe EndPoint 0111 (0x7) Reserved 1000 (0x8) UART Monitor at FC3 + QSPI0 1001 (0x9) Reserved 1010 (0xa) Reserved 1011 (0xb) Reserved 1100 (0xc) Reserved 1101 (0xd) Reserved 1110 (0xe) Reserved 1111 (0xf) SPI Client The strapping configuration is read by TF-A/BL1, which uses it to select select the boot-media, and thereby determinate where the FIP is loaded from. UBoot will also use the strapping pins to determinate which flash to load the environment configuration from. When booting from flash the TF-A loaders can be configured to emit trace messages on the UART provided by FlexCom3. The following table show the strapping configurations with and without traces enables. Trace enable Trace disable Flash type 0000 0011 eMMC 0001 0100 QSPI/NOR 0010 0101 SDCard Boards which do not have a compatible HW configuration shall avoid this strap mode. Be aware that traces to the UART impact boot time and should only be activated when debugging is needed or the startup time is not important. When booting from eMMC/SDCard, a valid GUID Partition Table (GPT) must be used. The TF-A/BL1 ROM will look for a partition called fip and fip.bak and use then accordingly. The table below provide an example of a partition table. The page size for the eMMC/SDCard device is 0x200/512 bytes. Type Part-idx Part-name Offset/name Partition size GPT (PartTable) n/a n/a Page 0x0 0x40 (32kb) TF-A FIP 1 fip Page 0x40 0x40000 (128mb) TF-A FIP 2 fip.bak Page 0x40040 0x40000 (128mb) UBoot (Env) 3 Env Page 0x80040 0x1000 (2mb) UBoot (Env) 4 Env.bak Page 0x81040 0x1000 (2mb) ext4 (rootfs) 5 Boot0 Page 0x82040 0x200000 (1gb) ext4 (rootfs) 6 Boot1 Page 0x282040 0x200000 (1gb) ext4 (data) 7 Data Page 0x482040 until end SDCard doesn’t support redundant environment. The bold parts are the items which is hard-coded in either TF-A/BL1 or in UBoot. If it relates to UBoot then it can be changed, but requires changes to UBoot as well. Everything else is just an example which can be changed according to customer needs. The following table contains the offsets used by TF-A and UBoot when booting from QSPI/NOR: Type Offset/name Max size TF-A FIP 0x0 0x00180000 (1536kb) UBoot (Env) 0x180000 0x00040000 (256kb) UBoot (Env-bak) 0x1C0000 0x00040000 (256kb) This mode is used to initialize the SoC as a PCIe end-point. This mode can pull certain configuration options from OTP. Using this mode does not require any flash or DDR memory to be mounted at the board. After the PCIe end-point is configured the internal CPU will go to sleep. This mode will boot into a UART monitor using FlexCom3. This can be used to program the OTP and to load firmware into flash. This mode can be used without any valid content in the flash, and is therefore useful for de-brick or even production scenarios. The UART Monitor implement a machine interface and should not be used interactively with a terminal. Instead use the HTML5 client provided as part of the TF-A project. For any other use-case, the UART console terminal needs to be configured to 115200/8/N/1 In this strapping mode, the CPU is not booting at all. This means the (TF-A is not running. A SPI client will be initialized instead. This SPI interface allows a host CPU to read/write register in the switch-core. So far we have concentrated on configuring the HW and boot media. Once put in place, TF-A/BL2, BL2 and BL32 will boot, and eventually reach TF-A/BL33. TF-A/BL33 is the boot-step after TF-A, and can be UBoot, Linux kernel or some other OS. The following chapters covers this in more details. In this mode the UBoot binary is embedded in into the FIP as TF-A/BL33. TF-A will do the platform initialization, load images (and authenticate them), DDR initialization etc. Once done, it will boot UBoot, which then control the next steps in boot flow. UBoot will take care of loading the ITB and the rootfs and boot up into the Linux. This is the so called normal-boot mode. In this mode a Linux kernel binary is embedded in into the FIP as TF-A/BL33. TF-A will do the platform initialization, load images (and authenticate them), DDR initialization etc. Once done, it will boot the Linux kernel directly. This is the so called fast-boot mode. The referenced images and archives can all found on public servers. Therefore, the following description will provide all needed information. The TFA (FIPs) images can be found under following link: https://github.com/microchip-ung/arm-trusted-firmware/releases The build artifacts (UBoot, kernel, rootfs etc.) can be found on following public server: http://mscc-ent-open-source.s3-website-eu-west-1.amazonaws.com/?prefix=public_root/bsp Download the proper architecture and build version. For example: mscc-brsdk-arm-yyyy.version.tar.gz After extracting the *.tar.gz file, all rootfs and ITB related files can be found inside following folder: mscc-brsdk-arm-yyyy.version/arm-cortex_a8-linux-gnu/standalone/release The following subchapter gives a rough overview of the common used terms in the context of the available images and build artifacts. The upcoming table is describing the most important files extracted from the TFA artifacts archive: File name File type BL33 data Flash Description fwu.html HTML5 n.a. n/a Firmware update tool for MS Edge or Chrome lan966x_a0-release-bl2normal-auth.fip FIP file UBoot NOR RAW Plain text FIP (not encrypted) lan966x_b0-release-bl2normal-auth.gpt.gz GPT image UBoot MMC Compressed GPT image with embedded Plain text FIP lan966x_b0-release-bl2normal-ssk.fip FIP file UBoot NOR RAW encrypted FIP lan966x_b0-release-bl2normal-ssk.gpt.gz GPT image UBoot MMC Compressed GPT image with embedded encrypted FIP lan966x_b0-release-bl33linux-auth.fip FIP file Linux NOR RAW Plain text FIP (not encrypted) lan966x_b0-release-bl33linux-auth.gpt.gz GPT image Linux MMC Compressed GPT image with embedded Plain text FIP lan966x_b0-release-bl33linux-ssk.fip FIP file Linux NOR RAW encrypted FIP lan966x_b0-release-bl33linux-ssk.gpt.gz GPT image Linux MMC Compressed GPT image with embedded encrypted FIP Following table is describing the available ITB and filesystem related binaries inside the buildroot artifacts archive: File name Description brsdk_standalone_arm.ext4.gz ext4 rootfs with ITB, located in the root directory. brsdk_standalone_arm.itb ITB only, used in the *.gz file. fit.itb ITB with Kernel and squashfs filesystem. Suitable for network boot. rootfs.ext2 ext2 rootfs standalone rootfs.ext4 ext4 rootfs standalone rootfs.squashfs squashfs filesystem standalone rootfs.tar rootfs/tar standalone The ITB files from the build artifacts archive including always the latest available kernel files. The device tree sources are a set of text files in the Linux kernel source tree. They describe the hardware properties for a specific platform. For processing the DTS, a Device Tree Compiler is used. Mainly, the compiler takes as input a device-tree in a given format and outputs a device-tree in another format. Since the DTS represents the device-tree data in a human readable format, it is the preferred input format. The output result of the DTC results is a .dtb file. Various types of root filesystem builds are provided inside the build artifact archive. The rootfs/tar is accumulating a large collection of files into a single archive file, while preserving filesystem informations such as user/group permissions, dates, files, inodes and directory structures. There is no tarball compression method used. A tarball build of the rootfs/tar can be found inside the build artifacts archive. Please have a look for a binary which is named to rootfs.tar. The squashfs filesystem is a zlib compressed read-only filesystem (e.g. files, inodes and directories) for Linux. SquashFS gives more flexibility and performance speed than a tarball archive. The rootfs.squashfs based build can be found inside the build artifacts archive. The ext4 filesystem is also supported by the LAN966x system. There are different flavours of the ext4 builds inside the build artifacts archive available. The Flattened Image Tree is a format for combining different binary elements such as the kernel, initramfs and DTB into a single .itb file. Bootloaders like e.g. UBoot can read and process the FIT metadata to boot an embedded Linux system. This type of the FIT is containing the kernel files, device tree(s) and a root filesystem. Beside the FIP file, only one further single binary needs to be maintained and flashed to the target system. The drawback is the longer bootup time, caused by the the bigger image size. The according binary, which includes a 'squashfs' root filesystem, can be found in the build artifacts archive named by 'fit.itb'. Beside of the rootfs/tar and the squashfs, there is also the usage of an ext4 root filesystem possible. The following section should give a rough overview about some ext4 based use-cases. This variant of the ext4 build is containing the ext4 filesystem and additionally an ITB located inside root directory of the ext4 filesystem. For example, UBoot is capable to load filesystem and execute the ITB found in the root directory. This build variant is available inside the build artifacts archive. It is named to 'brsdk_standalone_arm.ext4.gz'. The FIP binary, so called 'fip.bin', is containing all parts of the TF-A firmware build. Basically, following components can be found there: BL2 BL32 or BL33 certificates support files The different FIP builds can be found inside the build artifacts archive. The GPT image is used for configuring basically the flash device structure. This means writing the GPT, creating all needed partitions and do some further setup work. The boot partition named to 'fip' will contain afterwards a 'fip.bin' file for the first system startup. The following table is showing the default partition scheme for the MMC flash devices. This means this table is valid for the eMMC and the SDCard device. offset (pages) size (pages) Name/desc ============== =============== ===================== 0x0 0x40 (32kb) GPT (partition table) 0x40 0x40000 (128mb) fip 0x40040 0x40000 (128mb) fip.bak 0x80040 0x1000 (2mb) Env 0x81040 0x1000 (2mb) Env.bak 0x82040 0x200000 (1gb) Boot0 0x282040 0x200000 (1gb) Boot1 0x482040 0x300000 (1.5gb) Data When eMMC or SDCard is selected as boot media, the TF-A expects in the first 32kb of the flash pages a GPT. The ROM code will look for a partition called fip. It will now try to boot from this partition. If the booting from the fip partition fails, it will try to load the firmware image from the fip.bak recovery partition. If the boot attempt from the recovery partition is failing, no fallback approach is offered here. Possible boot methods will be described in the upcoming sections. Before using the network boot feature, it needs to be ensured that the UBoot bootlader is made available inside the BL33. After startup and entering UBoot console, the network stack on the target needs to be configured. This can be done by using static network settings or using a dynamic ip address provisioning like DHCP. On the host system a TFTP server needs to be established. Host and target needs to be located in the same subnet. Afterwards the files can be transmitted over network to the target system memory. For the network boot scenario a 'fit.itb' file needs to be provisioned by the TFTP server. After configuration of the UBoot, the file can be uploaded to the platform and will be executed directly from the target memory. When QSPI/NOR is selected as boot media, the TF-A expect that the NOR flash is used in raw mode. This means in comparison to the eMMC/SDCard approach, there is no filesystem applied here. The NOR flash device can usually programmed with a standard SPI flash programmer. Before attaching the programmer, check the usage of the proper pin header and use the correct SPI pins on the eval board. But here, there is also another further way for updating the NOR flash device possible. This will be described in the upcoming chapters. Take care to write the 'fip.bin' file to a NOR memory address of 0x0 (zero).+ Because of the NOR size limitation on the LAN966x eval boards, only the 'fip.bin' file can be stored. For a full booting Linux system, the missing ITB and the rootfs needs to be stored on an additionally flash device. Afterwards the bootloader needs to be configured properly for recognizing the FS and the ITB. For the eMMC boot operation mode, the 'fip.bin' file needs to be located mandatory on a partition section named to 'fip' or 'fip.bak'. In this example, the UBoot needs to be part of the 'fip.bin'. This is required for uploading and writing the ITB and FS data via DHCP/TFTP to the correct eMMC partition sections. Afterwards the environment variables of UBoot needs to be setup properly for a full boot. This is the so called fast-boot mode. TF-A is loading in the BL33 stage directly the rootfs and ITB file. After the kernel is up and running, the FS will be mounted. In this mode, there is no further bootstage (like UBoot) involved here. This will decrease the bootup time in comparison to the previously described scenarios. In case of a blank eMMC or NOR device, following the instructions in Restore SecureBoot Images According the flashed FIP or GPT file, UBoot is available during system boot and can be used for customizing e.g. the ITB and rootfs related components. Furthermore, it can be used for updating existing GPT images or FIP files on the flash device. The string of '-bl2normal-' in the FIP or GPT filename identifies the availability of the UBoot feature. For example: lan966x_b0-release-bl2normal-auth.gpt or lan966x_b0-release-bl2normal-ssk.fip Sometimes it makes also to use the command of 'help', which provides a huge collection of all available commands and features. For example, the command of 'env print' can be used for dumping all available and initialized variables on the system. For setting up the UBoot mode, following steps needs to be applied: Set the strapping mode to 0x0 (eMMC + FC3). See Boot media configuration. Attach the board via usb cable to the host workstation Configure a serial console application like e.g. putty (settings 115200/8/N/1) Attach console application to /dev/ttyACM0 Reset the board and interrupt the UBoot autoboot before timeout. On UBoot console, the command 'mmc info' will return the emmc device properties. m => mmc info Device: sdhci-host@e0830000 Manufacturer ID: 9d OEM: 101 Name: IS008 Bus Speed: 30000000 Mode : MMC High Speed (52MHz) Rd Block Len: 512 MMC version 5.0 High Capacity: Yes Capacity: 7.3 GiB Bus Width: 4-bit Erase Group Size: 512 KiB HC WP Group Size: 8 MiB User Capacity: 7.3 GiB WRREL Boot Capacity: 4 MiB ENH RPMB Capacity: 4 MiB ENH The UBoot command of 'mmc help' will provide an overview of all available mmc sub system related commands. m => mmc help mmc - MMC sub system Usage: mmc info - display info of the current MMC device mmc read addr blk# cnt mmc write addr blk# cnt mmc erase blk# cnt mmc rescan mmc part - lists available partition on current mmc device mmc dev [dev] [part] - show or set current mmc device [partition] mmc list - lists available devices mmc hwpartition [args...] - does hardware partitioning arguments (sizes in 512-byte blocks): [user [enh start cnt] [wrrel {on|off}]] - sets user data area attributes [gp1|gp2|gp3|gp4 cnt [enh] [wrrel {on|off}]] - general purpose partition [check|set|complete] - mode, complete set partitioning completed WARNING: Partitioning is a write-once setting once it is set to complete. Power cycling is required to initialize partitions after set to complete. mmc bootbus dev boot_bus_width reset_boot_bus_width boot_mode - Set the BOOT_BUS_WIDTH field of the specified device mmc bootpart-resize - Change sizes of boot and RPMB partitions of specified device mmc partconf dev [boot_ack boot_partition partition_access] - Show or change the bits of the PARTITION_CONFIG field of the specified device mmc rst-function dev value - Change the RST_n_FUNCTION field of the specified device WARNING: This is a write-once field and 0 / 1 / 2 are the only valid values. mmc setdsr - set DSR register value For example, the MMC command of 'mmc write' will primarily used for storing the data content on the flash device. For setting up the UBoot mode, following steps needs to be applied: Set the strapping mode to 0x1 (QSPI + FC3). See Boot media configuration. Attach the board via usb cable to the host workstation Configure a serial console application like e.g. putty (settings 115200/8/N/1) Attach putty to /dev/ttyACM0 Reset the board and interrupt the UBoot autoboot before timeout On the UBoot console, the command 'sf probe' will return the spi flash device properties m => sf probe SF: Detected sst26vf016b with page size 256 Bytes, erase size 4 KiB, total 2 MiB The UBoot command of 'sf help' will provide an overview of all available spi flash related sub system commands. m => sf help sf - SPI flash sub-system Usage: sf probe [[bus:]cs] [hz] [mode] - init flash device on given SPI bus and chip select sf read addr offset|partition len - read `len' bytes starting at `offset' or from start of mtd `partition'to memory at `addr' sf write addr offset|partition len - write `len' bytes from memory at `addr' to flash at `offset' or to start of mtd `partition' sf erase offset|partition [+]len - erase `len' bytes from `offset' or from start of mtd `partition' `+len' round up `len' to block size sf update addr offset|partition len - erase and write `len' bytes from memory at `addr' to flash at `offset' or to start of mtd `partition' sf protect lock/unlock sector len - protect/unprotect 'len' bytes starting at address 'sector' The SPI flash command of 'sf write' or 'sf update' will primarily used for storing FIP data content on the SPI flash device. UBoot can also configured for using the network stack for file transmission. A common practice is to enable the DHCP server on the host and using the UBoot 'dhcp' command. After recognizing a valid IP address, a file transmission using TFTP wil be established. In case of using a static IP setup on the target, the following example can be applied via UBoot console. Adjust the values to the individual network environment. The command of 'tftpboot' can be used then afterwards on the UBoot console. env set 'ipaddr 192.168.0.10' env set 'netmask 255.255.255.0' env set 'serverip 192.168.0.1' saveenv m => help tftp tftpboot - boot image via network using TFTP protocol Usage: tftpboot [loadAddress] [[hostIPaddr:]bootfilename] In case of a available DHCP server in the network, the UBoot command of 'dhcp' can be used. It will setup the network configuration and establish afterwards the TFTP based file transmission. m => help dhcp dhcp - boot image via network using DHCP/TFTP protocol Usage: dhcp [loadAddress] [[hostIPaddr:]bootfilename] The DHCP server, TFTP server and the target needs to be reside in the same network. Hereby, a test binary called 'fip.bin' will be now transmitted from the TFTP server via network to the target device memory. The used address of 0x64000000 is chosen randomly and points to an unused DDR memory section. m => dhcp 0x64000000 fip.bin port0 Waiting for PHY auto negotiation to complete........ done Using port0 device TFTP from server 192.168.0.1; our IP address is 192.168.0.20 Filename 'fip.bin'. Load address: 0x64000000 Loading: ###################################### 106.4 KiB/s done Bytes transferred = 553376 (871a0 hex) Now, the 'fip.bin' data is copied the target memory and can be e.g. written into an eMMC partition or in NOR flash device. This chapter shows some update examples. In the first step, we have to check the UBoot environment variables inside the UBoot console. Therefore enter UBooot console by following routine: Reset the board and wait for the UBoot autoboot stage Press any key to stop autoboot timer in order to get a U-Boot console prompt. Make sure that following environment variables are available as shown. m => env print fdt_high=0xffffffff initrd_high=0xffffffff baudrate=115200 bootdelay=3 bootcmd=run mmc_boot loadaddr=0x64000000 mmc_unzip_loadaddr=0x80000000 mmc_bak=6 mmc_boot=run mmc_tryboot; run mmc_swap; run mmc_tryboot mmc_cur=5 mmc_dev=mmc 0 mmc_format=gpt guid ${mmc_dev} mmc_guid; gpt write ${mmc_dev} ${mmc_part}; env save mmc_part=uuid_disk=${mmc_guid}; name=fip,start=32K,size=128MiB,type=system; name=fip.bak,size=128MiB,type=system; name=Env,size=2MiB,type=data; name=Env.bak,size=2MiB,type=data; name=Boot0,size=1GiB,type=linux; name=Boot1,size=1GiB,type=linux; name=Data,size=-,type=linux; mmc_swap=env set _mmc_tmp ${mmc_bak}; env set mmc_bak ${mmc_cur}; env set mmc_cur ${_mmc_tmp}; env set _mmc_tmp; env save mmc_tryboot=run mmc_load; if test $? = 0; then setenv mtdroot root_next=/dev/mmcblk0p${mmc_cur}; run ramboot; fi; mmc_load=ext4load ${mmc_dev}:${mmc_cur} ${loadaddr} Image.itb ramboot=bootm start ${loadaddr}#${pcb}; bootm loados ${loadaddr}#${pcb}; bootm ramdisk ${loadaddr}#${pcb}; run set_rootargs; run setup; bootm fdt ${loadaddr}#${pcb}; bootm prep ${loadaddr}#${pcb}; bootm go ${loadaddr}#${pcb} setup=setenv bootargs console=${console} ${mtdparts} ${rootargs} ${mtdroot} fis_act=${active} ${bootargs_extra} rootargs_mmc=setenv rootargs root=/dev/mmcblk0p${mmc_cur} ro rootwait rootargs_ram=setenv rootargs root=/dev/ram0 ro rootwait set_rootargs=if test $initrd_start = 0; then run rootargs_mmc; else; run rootargs_ram; fi; div_512=setexpr _tmp_ ${filesize} + 0x1ff; setexpr filesize_512 ${_tmp_} / 0x200; env set _tmp_ fip_fw=lan966x_b0.fip fip_fw_dl=dhcp ${loadaddr} ${fip_fw} nor_boot=sf probe; env set active linux; run nor_tryboot; env set active linux.bk; run nor_tryboot nor_dlup=dhcp ${nor_image}; run nor_update nor_fip_upd=sf probe; sf update ${loadaddr} 0 ${filesize} nor_fip_dlup=run fip_fw_dl; run nor_fip_upd nor_image=brsdk_standalone_arm.itb nor_only=env set mtdparts mtdparts=${nor_parts};env set bootcmd run nor_boot;env save nor_parts=spi0:1536k(fip),256k(Env),256k(Env.bk),25m(linux),25m(linux.bk),12m(rootfs_data) nor_tryboot=sf read ${loadaddr} 200000 1900000; run ramboot nor_update=sf probe; sf update ${fileaddr} 200000 ${filesize} mmc_fip0_upd=run div_512; mmc write ${loadaddr} ${mmc_offset_fip0} ${filesize_512} mmc_fip0_dlup=run fip_fw_dl; run mmc_fip0_upd mmc_fip1_upd=run div_512; mmc write ${loadaddr} ${mmc_offset_fip1} ${filesize_512} mmc_fip1_dlup=run fip_fw_dl; run mmc_fip1_upd mmc_fip01_dlup=run fip_fw_dl; run mmc_fip0_upd; run mmc_fip1_upd mmc_fw=brsdk_standalone_arm.ext4.gz mmc_dl=dhcp ${loadaddr} ${mmc_fw}; unzip ${loadaddr} ${mmc_unzip_loadaddr} mmc_boot0_upd=run div_512; mmc write ${mmc_unzip_loadaddr} ${mmc_offset_boot0} ${filesize_512} mmc_boot0_dlup=run mmc_dl; run mmc_boot0_upd mmc_boot1_upd=run div_512; mmc write ${mmc_unzip_loadaddr} ${mmc_offset_boot1} ${filesize_512} mmc_boot1_dlup=run mmc_dl; run mmc_boot1_upd mmc_boot01_dlup=run mmc_dl; run mmc_boot0_upd; run mmc_boot1_upd mmc_offset_fip0=0x40 mmc_offset_fip1=0x40040 mmc_offset_boot0=0x82040 mmc_offset_boot1=0x282040 mmc_offset_data=0x482040 console=ttyS0,115200n8 mtdparts=mtdparts=spi0:1536k(fip),256k(Env),256k(Env.bak) bootargs_extra=uio_pdrv_genirq.of_id=generic-uio loglevel=1 Use the env set command if something is wrong or missing and remember to use the env save command when you are done. There might be other environment variables defined, but you can safely ignore them. Some explanation for the predefined environment variables and for what they are used for: fdt_high - The value 0xffffffff prevents an extra copy of the flattened device tree. initrd_high - The value 0xffffffff prevents an extra copy of the ramdisk. baudrate - U-Boot console baudrate. bootdelay - Number of seconds to wait for user input before running bootcmd. bootcmd - Command to run automatically at boot. Default is set to run mmc_boot. loadaddr - Temporary address to use when loading images via TFTP or from eMMC. mmc_unzip_loadaddr - Temporarily used address for uncompressing images mmc_bak - The backup partition index for boot1 mmc_boot - Try first to load 'brsdk_standalone_arm.ext4.gz' from active partition. If failing then backup partition will be tried mmc_cur - The default partition index for boot0 mmc_dev - eMMC device to use in read/write commands. mmc_format - Format eMMC device according defined partition layout mmc_part - Partition layout definitions to use in 'mmc_format'. mmc_swap - Change active partition from 'Boot0' to 'Boot1' and vice versa mmc_tryboot - Seeking for available boot images mmc_load - Try to load an ITB image from the active partition ramboot - Try to load an run an ITB image from memory setup - Configuring bootargs environment variable rootargs_mmc - Configuration for rootfs in eMMC rootargs_ram- Configuration for rootfs in ram set_rootargs - Set correct configuration for root file system div_512 - Calculates the number of required flash pages (512 bytes) fip_fw - Defines the name of the FIP file used for eMMC and NOR update fip_fw_dl - Configuring and starting the DHCP request for file download nor_fip_upd - Writes the FIP data to the NOR flash device nor_fip_dlup - Download and write the FIP data to NOR flash device mmc_fip0_upd - Writes FIP data to the eMMC device in partition 'fip' mmc_fip_dlup - Download and write the FIP data to eMMC device mmc_fip1_upd - Writes FIP data to the eMMC device in partition 'fip.bak' mmc_fip1_dlup - Download and write the FIP data to eMMC device mmc_fip01_dlup - Download FIP and write data to partition 'fip0' and 'fip1' mmc_fw - Defines the name of the ext4.gz file for eMMC update mmc_dl - Download ext4.gz file and uncompress data into target memory mmc_boot0_upd - Writes the uncompressed data to the eMMC device in partition 'boot0' mmc_boot0_dlup - Download, uncompress and write the image data to eMMC device mmc_boot1_upd - Writes the uncompressed data to the eMMC device in partition 'boot1' mmc_boot1_dlup - Download, uncompress and write the image data to eMMC device mmc_boot01_dlup - Download, uncompress and write data to partition 'boot0' and 'boot1' mmc_offset_fip0 - GPT address offset of the 'fip' partition mmc_offset_fip1 - GPT address offset of the 'fip.bak' partition mmc_offset_boot0 - GPT address offset of the 'boot0' partition mmc_offset_boot1 - GPT address offset of the 'boot1' partition mmc_offset_data - GPT address offset of the 'data' partition console - Configuration settings for the console terminal mtdparts - NOR flash partition configuration bootargs_extra - Additional UBoot arguments The following examples assumes that the build artifacts of brsdk_standalone_arm.ext4.gz and/or lan966x_b0.fip are available on the TFTP server. For a successful eMMC boot, a special partition layout needs to be make available on the flash device. This can be achieved by following two approaches: Use the already defined UBoot console command of 'mmc_format': m => run mmc_format success! Writing GPT: success! Saving Environment to MMC... Writing to redundant MMC(0)... OK or Write a GPT image directly to the blank eMMC device, like described in the eMMC GPT section. For checking the partition layout, use the UBoot command of 'mmc part'.This is the expected partition layout here: m => mmc part Partition Map for MMC device 0 -- Partition Type: EFI Part Start LBA End LBA Name Attributes Type GUID Partition GUID 1 0x00000040 0x0004003f \"fip\" attrs: 0x0000000000000000 type: ebd0a0a2-b9e5-4433-87c0-68b6b72699c7 guid: 00042021-0408-4601-9dcc-a8c51255994f 2 0x00040040 0x0008003f \"fip.bak\" attrs: 0x0000000000000000 type: ebd0a0a2-b9e5-4433-87c0-68b6b72699c7 guid: 8ef917d1-2c6f-4bd0-a5b2-331a19f91cb2 3 0x00080040 0x0008103f \"Env\" attrs: 0x0000000000000000 type: ebd0a0a2-b9e5-4433-87c0-68b6b72699c7 guid: 77877125-add0-4374-9e60-02cb591c9737 4 0x00081040 0x0008203f \"Env.bak\" attrs: 0x0000000000000000 type: ebd0a0a2-b9e5-4433-87c0-68b6b72699c7 guid: b4b84b8a-04e3-48ae-8536-aff5c9c495b1 5 0x00082040 0x0028203f \"Boot0\" attrs: 0x0000000000000000 type: ebd0a0a2-b9e5-4433-87c0-68b6b72699c7 guid: 35219908-c613-4b08-9322-3391ff571e19 6 0x00282040 0x0048203f \"Boot1\" attrs: 0x0000000000000000 type: ebd0a0a2-b9e5-4433-87c0-68b6b72699c7 guid: 8e123a33-e3d3-4db9-92f4-d3ebd9b3224f 7 0x00482040 0x00e8ffde \"Data\" attrs: 0x0000000000000000 type: ebd0a0a2-b9e5-4433-87c0-68b6b72699c7 guid: 02a90af2-5d1c-4a29-9177-97a513e3cae4 Verify that Start LBA in each partition equals the partition addresses in the corresponding environment variable mmc_p. Please see also chapter eMMC/SDCard default partition schema. The following scenario will now upload an brsdk_standalone_arm.ext4.gz file, which is containing an ext4 rootfs and including an ITB in the root directory. Following steps needs to be applied therefore: Run the mmc_boot0_dlup command to load the brsdk_standalone_arm.ext4.gz file via DHCP to the target memory. Afterwards, the file will be uncompressed and written into the eMMC partition 'Boot0'. m => run mmc_boot0_dlup port0 Waiting for PHY auto negotiation to complete........ done Using port0 device TFTP from server 192.168.0.1; our IP address is 192.168.0.10 Filename 'brsdk_standalone_arm.ext4.gz'. Load address: 0x64000000 Loading: ################################################################# ###### ........... ################################################################# ######################### 6.2 MiB/s done Bytes transferred = 106115072 (6533000 hex) MMC write: dev # 0, block # 8192, count 208960 ... 208960 blocks written: OK If UBoot run in its default configuration, it will do now all needed actions, and make the rootfs and ITB available in the expected eMMC partition. Running the fip_fw_dl command will upload the lan966x_b0.fip file using the DHCP/TFTP connection. m => fip_fw_dl port0 Waiting for PHY auto negotiation to complete........ done Using port0 device TFTP from server 192.168.0.1; our IP address is 192.168.0.10 Filename 'lan966x_b0.fip'. Load address: 0x64000000 Loading: ################################################################# ###### ........... ################################################################# ######################################### 2.9 MiB/s done Bytes transferred = 22538412 (157e8ac hex) Afterwards the command of ramboot will execute the image inside the memory. For example: ## Loading kernel from FIT Image at 64000000 ... Using Device Tree in place at 67d00000, end 67d07977 Starting kernel ... For configuring the device permanently to the network boot mode, set the environment variable of bootcmd as shown below: m => setenv bootcmd 'run fip_fw_dl; run ramboot' m => saveenv m => reset After reset, UBoot will run the sequence of bootcmd on every target startup. No matter if you have a eMMC equipped evaluation board you can also select to store the boot image in SPI NOR flash only and use this image as the boot media. This will not be as fast as booting from eMMC but can be used as a fallback solution in case the first option is not available for some other reason. To set the u-boot env to boot from nor it is required to run this command: m => run nor_only This will partitioned the NOR like this: m => mtd list List of MTD devices: * nor0 - device: spi-flash@0 - parent: qspi@e0834000 - driver: jedec_spi_nor - path: /ahb/apb/qspi@e0834000/spi-flash@0 - type: NOR flash - block size: 0x1000 bytes - min I/O: 0x1 bytes - 0x000000000000-0x000000200000 : \"nor0\" - 0x000000000000-0x000000180000 : \"fip\" - 0x000000180000-0x0000001c0000 : \"Env\" - 0x0000001c0000-0x000000200000 : \"Env.bk\" - 0x000000200000-0x000001a00000 : \"linux\" - 0x000001a00000-0x000003400000 : \"linux.bk\" - 0x000003400000-0x000004000000 : \"rootfs_data\" As you can see there are two 25MB linux partitions (a main and a backup) that can be used to store a FIT image. To add an image in the NOR flash it is required to download the image and write it in the NOR using the command: m => run nor_dlup You can boot the system with the run nor_boot command. The UBoot console can also be used for programming a new image. This can be the case for some update reasons. But therefore, a running system with UBoot needs to be available on the target. In the first step, we have to boot into UBoot console like following description: Reset the board and wait for the UBoot autoboot stage Press any key to stop autoboot timer in order to get a U-Boot console prompt. Now we will upload a GPT image like e.g. lan966x_b0-release-bl2normal-ssk.gpt to the target memory. m => dhcp 0x64000000 lan966x_b0-release-bl2normal-ssk.gpt port0 Waiting for PHY auto negotiation to complete........ done Using port0 device TFTP from server 192.168.0.1; our IP address is 192.168.0.10 Filename 'lan966x_b0-release-bl2normal-ssk.gpt'. Load address: 0x64000000 Loading: ################################################################# ################################################################# ###### ........... ################################################################# ####### 6.1 MiB/s done Bytes transferred = 104890368 (6408000 hex) Now the image data is uploaded to the target memory and can be written to the flash device. Lets focus on the next two upcoming commands. The first command converts the uploaded filesize to the required number of flash pages (512 byte). The second command is writing the image data to the eMMC flash device. Important is here, to set the write offset address of 0x0 (zero) for the flash. m => run div_512 m => mmc write ${loadaddr} 0x0 ${filesize_512} MMC write: dev # 0, block # 0, count 208960 ... 208960 blocks written: OK A running Linux system on the target can also be used for image update purpose. Therefore a network connection from the target to the host system needs to be established first. Afterwards a working TFTP server needs to make available in the same network. Using the fdisk command will dump the available partitions on the eMMC. This is useful for checking the proper partition index identifier. The device /dev/mmcblk0p corresponds to partition . # fdisk -l Found valid GPT with protective MBR; using GPT Disk /dev/mmcblk0: 15269888 sectors, 3360M Logical sector size: 512 Disk identifier (GUID): 671e9526-c34a-4bc9-9670-bfebb6dba410 Partition table holds up to 128 entries First usable sector is 34, last usable sector is 15269854 Number Start (sector) End (sector) Size Name 1 64 262207 128M fip 2 262208 524351 128M fip.bak 3 524352 528447 2048K Env 4 528448 532543 2048K Env.bak 5 532544 2629695 1024M Boot0 6 2629696 4726847 1024M Boot1 7 4726848 15269854 5147M Data One way to upload the e.g. lan966x_b0-release-bl2normal-ssk.fip file, is to use a TFTP client inside the running Linux. Therefore attach the putty console to the target and upload the FIP file using the 'dhcp' or 'tftp' command in an e.g. /temp folder on the target. Afterwards the file can be written by using the dd command into the proper device partition. In this example, we will write the data into the partition named to fip which can be mapped to /dev/mmcblk0p1. dd if=/temp/lan966x_b0-release-bl2normal-ssk.fip of=/dev/mmcblk0p1 After rebooting of the target, the updated file will be executed now. The same approach as described before, can be applied also for updating the brsdk_standalone_arm.ext4.gz binary. Upload the file using e.g. TFTP to a /temp folder or to a destination folder of your preference. In this folder, it needs to be unzipped first. Afterwards write the file by using the dd command to the proper device partition. In this example, we will write the data into the partition named to Boot0 which can be mapped to /dev/mmcblk0p5. dd if=/temp/ext4-itb-bare.ext4 of=/dev/mmcblk0p5 After rebooting of the target, the updated file will be executed now. BL1 Boot Loader 1: In secure immutable ROM (Trusted ROM Firmware) BL2 Boot Loader 2: In secure on-chip RAM, temporary (Trusted Boot Firmware) BL31 Boot Loader 31: Resident secure services (ARM v8) BL32 Boot Loader 32: Resident secure services (ARM v7) BL33 Boot Loader 33: Typically U-Boot. BSSK Binding Secret Symmetric Key CLI Command line interface DDR Double Data Rate, memory type DHCP Dynamic Host Configuration Protocol DTB Device Tree Blob DTC Device Tree Compiler DTS Device Tree Source files eMMC Embedded MultiMediaCard FCx Flex Com Interface #x FIP Firmware Image Package FIT Flattened Image Tree FS Filesystem FW Firmware GPT GUID Partition Table JTAG Joint Test Action Group, interface for testing and debugging KERNEL The Linux kernel LBA Logical Block Address OTP One-Time-Programmable Memory PCIe Peripheral Component Interconnect Express PSCI Power State Coordination Interface ROOTFS ROOT File System, used in Linux context ROT Root of Trust ROT-PK Root of Trust Public Key ROT-PK-SHA Root of Trust Public Key SHA (SHA of the public key of the ROT) ROT-PRIVATE Root of Trust Private Key SDCard Secure Digital Card SJTAG Secure JTAG SoC System on Chip SPI Serial Peripheral Interface SRAM Secure Ram SSK Secret Symmetric Key TBBR Trusted Board Boot Requirements TF-A Trusted Firmware for ARMv7 and ARMv8 TFTP Trivial File Transfer Protocol UART Universal Asynchronous Receiver-Transmitter","title":"Booting LAN966x","component":"bsp","version":"2023.12","name":"lan966x-boot","url":"/bsp/2023.12/supported-hw/lan966x-boot.html","titles":[{"text":"1. Booting LAN966x","hash":"_booting_lan966x","id":1},{"text":"1.1. Introduction","hash":"_introduction","id":2},{"text":"1.2. Overview","hash":"_overview","id":3},{"text":"1.3. Boot media configuration","hash":"pin_modes","id":4},{"text":"1.3.1. UART Traces","hash":"_uart_traces","id":5},{"text":"1.3.2. Booting from eMMC/SDCard (0000, 0010, 0011 or 0101)","hash":"_booting_from_emmcsdcard_0000_0010_0011_or_0101","id":6},{"text":"1.3.3. Booting from NOR (0001 or 0100)","hash":"_booting_from_nor_0001_or_0100","id":7},{"text":"1.3.4. PCIe End Point (0110)","hash":"_pcie_end_point_0110","id":8},{"text":"1.3.5. UART Monitor (1000)","hash":"uart_monitor","id":9},{"text":"1.3.6. SPI Client (pin mode 1111)","hash":"_spi_client_pin_mode_1111","id":10},{"text":"2. Beyond TF-A","hash":"_beyond_tf_a","id":11},{"text":"2.1. TF-A/UBoot/Linux","hash":"_tf_aubootlinux","id":12},{"text":"2.2. TF-A/Linux","hash":"_tf_alinux","id":13},{"text":"3. Images and artifacts","hash":"_images_and_artifacts","id":14},{"text":"3.1. TFA images","hash":"_tfa_images","id":15},{"text":"3.2. Buildroot artifacts","hash":"_buildroot_artifacts","id":16},{"text":"3.3. Artifacts","hash":"_artifacts","id":17},{"text":"3.3.1. TFA images","hash":"_tfa_images_2","id":18},{"text":"3.3.2. Buildroot artifacts","hash":"_buildroot_artifacts_2","id":19},{"text":"3.3.3. Kernel","hash":"_kernel","id":20},{"text":"3.3.4. DTS","hash":"_dts","id":21},{"text":"3.3.5. DTB","hash":"_dtb","id":22},{"text":"3.3.6. rootfs","hash":"_rootfs","id":23},{"text":"3.3.7. rootfs/tar","hash":"_rootfstar","id":24},{"text":"3.3.8. squashfs","hash":"_squashfs","id":25},{"text":"3.3.9. ext4","hash":"_ext4","id":26},{"text":"3.4. FIT","hash":"_fit","id":27},{"text":"3.4.1. ITB full","hash":"_itb_full","id":28},{"text":"3.5. ext4","hash":"_ext4_2","id":29},{"text":"3.5.1. ext4 with embedded ITB bare on FS","hash":"_ext4_with_embedded_itb_bare_on_fs","id":30},{"text":"3.6. FIP","hash":"_fip","id":31},{"text":"3.7. GPT image","hash":"_gpt_image","id":32},{"text":"3.8. eMMC/SDCard default partition schema","hash":"part_table","id":33},{"text":"4. Boot configurations","hash":"_boot_configurations","id":34},{"text":"4.1. Network-boot","hash":"_network_boot","id":35},{"text":"4.2. NOR","hash":"_nor","id":36},{"text":"4.3. eMMC","hash":"_emmc","id":37},{"text":"4.4. Linux@BL33","hash":"_linuxbl33","id":38},{"text":"5. Use-cases","hash":"_use_cases","id":39},{"text":"5.1. Debrick or blank flash","hash":"_debrick_or_blank_flash","id":40},{"text":"5.2. UBoot","hash":"_uboot","id":41},{"text":"5.2.1. Working with MMC subsystem","hash":"_working_with_mmc_subsystem","id":42},{"text":"5.2.2. Working with NOR subsystem","hash":"_working_with_nor_subsystem","id":43},{"text":"5.2.3. Loading files from network","hash":"load_files_network","id":44},{"text":"5.2.4. Boot image","hash":"_boot_image","id":45},{"text":"5.2.4.1. from eMMC","hash":"_from_emmc","id":46},{"text":"5.2.4.2. from network","hash":"_from_network","id":47},{"text":"5.2.4.3. from NOR","hash":"_from_nor","id":48},{"text":"5.2.5. Program image","hash":"_program_image","id":49},{"text":"5.2.5.1. to eMMC","hash":"_to_emmc","id":50},{"text":"5.3. Update image from Linux","hash":"_update_image_from_linux","id":51},{"text":"5.3.1. Update FIP","hash":"_update_fip","id":52},{"text":"5.3.2. Update ext4-img","hash":"_update_ext4_img","id":53},{"text":"6. TERMS and ABBREVIATIONS","hash":"term","id":54}]},"47":{"id":47,"text":"LAN966X SoC have 5 FLEXCOMs(Flexible Serial Communication Controller). Each flexcom supports three serial communication protocols that includes USART(Universal Synchronous Asynchronous Receiver Transceiver). Refer USART documentation SPI(Serial Peripheral Interface). Refer SPI documentation TWI(Two-wire Interface) or I2C(Inter Integrated Circuit). Refer TWI documentation Each flexcom has two optional I/O lines. Namely, CS0 and CS1 in flexcom SPI mode. CTS and RTS in flexcom USART mode. These chip-selects can be mapped to lan966x FLEXCOM_SHARED[0-20] pins and usage depends on functions being configured. Following kernel config options should be enabled to use LAN966x Flexcom interface: CONFIG_MFD_ATMEL_FLEXCOM - Flexcom driver config option. Following configurations are required to define a flexcom in device tree: compatible string must be set to atmel,sama5d2-flexcom or set to microchip,lan966x-flexcom in case flexcom chip-select configurations are required. Flexcom reg property must be set with register address and length. Refer table below: FLEXCOM ID Flexcom base registers map flx0 flx1 flx2 flx3 flx4 clocks property must be set to where x is flexcom ID. #address-cells must be set to 1. #size-cells must be set to 1. ranges must be set to one range for the full I/O register region. Optional flexcom chip-select configurations: In order to map flexcom USART cts, rts lines or flexcom SPI cs0, cs1 lines to flexcom shared pins, use below properties: Append flexcom shared register address and length to reg property. Refer table below: microchip,flx-shrd-pins - Specify the flexcom shared pins to be mapped to chip-select line. Possible flexcom shared pins are [0-20]. microchip,flx-cs - Specify chip-selects to be configured. 0 for cts line in USART mode, cs0 in SPI mode. 1 for rts line in USART mode, cs1 in SPI mode. FLEXCOM ID Flexcom shared registers map flx0 flx1 flx2 flx3 flx4 https://elixir.bootlin.com/linux/latest/source/Documentation/devicetree/bindings/mfd/atmel-flexcom.txt Following example shows how a flexcom should be defined in device tree. Example to configure flexcom2 in TWI mode: dtsi file: flx2: flexcom@e0060000 { compatible = \"atmel,sama5d2-flexcom\"; reg = ; clocks = ; #address-cells = ; #size-cells = ; ranges = ; status = \"disabled\"; }; dts file: &flx2 { atmel,flexcom-mode = ; status = \"okay\"; }; Example to configure flexcom3 in SPI mode and map cs0 to flexcom shared pin 4: dtsi file: flx3: flexcom@e0064000 { compatible = \"microchip,lan966x-flexcom\"; reg = , ; clocks = ; #address-cells = ; #size-cells = ; ranges = ; status = \"disabled\"; }; dts file: &flx3 { atmel,flexcom-mode = ; microchip,flx-shrd-pins = ; microchip,flx-cs = ; status = \"okay\"; };","title":"LAN966x FLEXCOM","component":"bsp","version":"2023.12","name":"lan966x-flexcom","url":"/bsp/2023.12/supported-hw/lan966x-flexcom.html","titles":[{"text":"LAN966x FLEXCOM","hash":"_lan966x_flexcom","id":1},{"text":"SoC Resources","hash":"_soc_resources","id":2},{"text":"Kernel configurations","hash":"_kernel_configurations","id":3},{"text":"Devicetree Configuration","hash":"_devicetree_configuration","id":4},{"text":"References","hash":"_references","id":5},{"text":"Example","hash":"_example","id":6}]},"48":{"id":48,"text":"LAN966x SoC supports two instances of CAN-FD(Control Area Network with Flexible Data-Rate) which is compliant with CAN 2.0 Part A and 2.0 Part B. Following kernel config options should be enabled to use LAN966x MCAN: CONFIG_CAN - CAN driver config option. CONFIG_CAN_M_CAN - Bosch MCAN config option. CONFIG_CAN_M_CAN_PLATFORM - Bosch M_CAN support for io-mapped devices. To enable MCAN interface, following configurations are required in device tree: compatible string must be set to bosch,m_can. reg property must be set to and for mcan0, and for mcan1. reg-names must be set to m_can and message_ram. interrupts property must be set with interrupt details as and . MCAN ID Shared Peripheral Interrupt(int0) CPU INTR(int0) Shared Peripheral Interrupt(int1) CPU INR(int1) mcan0 104 72 106 74 mcan1 105 73 107 75 Note Shared peripheral interrupt lines start at index ID32. So, CPU INTR must be calculated as [Shared peripheral interrupt number - 32]. interrupt-names must be set to int0 and int1. clocks property must be set to , , where x is MCAN ID (0-1). clock-names must be set to hclk and cclk. bosch,mram-cfg property must be set to for mcan0 and for mcan1. Verify that CAN_STBY pin of transceiver is set to low. If not, set the GPIO pin mapped to CAN_STBY to low using standby-gpios property as . MCAN DT Documentation CAN driver implementation Following example shows how a CAN controller should be defined in DT: dtsi file: can0: can@e081c000 { compatible = \"bosch,m_can\"; reg = , ; reg-names = \"m_can\", \"message_ram\"; interrupts = , ; interrupt-names = \"int0\", \"int1\"; clocks = , ; clock-names = \"hclk\", \"cclk\"; assigned-clocks = ; assigned-clock-rates = ; bosch,mram-cfg = ; status = \"disabled\"; }; dts file changes: &can0 { pinctrl-0 = ; pinctrl-names = \"default\"; standby-gpios = ; status = \"okay\"; }; Check if can interface is created using ifconifg -a command. Enable can-utils to send/receive data on CAN interface. Use candump to show received message from the CAN bus and cansend to send message on CAN bus. # ifconfig -a bond0 Link encap:Ethernet HWaddr 92:0D:C6:5E:32:18 BROADCAST MASTER MULTICAST MTU:1500 Metric:1 RX packets:0 errors:0 dropped:0 overruns:0 frame:0 TX packets:0 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:1000 RX bytes:0 (0.0 B) TX bytes:0 (0.0 B) can0 Link encap:UNSPEC HWaddr 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00 NOARP MTU:16 Metric:1 RX packets:0 errors:0 dropped:0 overruns:0 frame:0 TX packets:0 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:10 RX bytes:0 (0.0 B) TX bytes:0 (0.0 B) Interrupt:36 lo Link encap:Local Loopback inet addr:127.0.0.1 Mask:255.0.0.0 inet6 addr: ::1/128 Scope:Host UP LOOPBACK RUNNING MTU:65536 Metric:1 RX packets:0 errors:0 dropped:0 overruns:0 frame:0 TX packets:0 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:1000 RX bytes:0 (0.0 B) TX bytes:0 (0.0 B) sit0 Link encap:IPv6-in-IPv4 NOARP MTU:1480 Metric:1 RX packets:0 errors:0 dropped:0 overruns:0 frame:0 TX packets:0 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:1000 RX bytes:0 (0.0 B) TX bytes:0 (0.0 B) # ip link show 1: lo: mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 2: bond0: mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000 link/ether 92:0d:c6:5e:32:18 brd ff:ff:ff:ff:ff:ff 3: can0: mtu 16 qdisc noop state DOWN mode DEFAULT group default qlen 10 link/can 4: sit0@NONE: mtu 1480 qdisc noop state DOWN mode DEFAULT group default qlen 1000 link/sit 0.0.0.0 brd 0.0.0.0 # # ip link set can0 type can loopback on # # ip link show can0 3: can0: mtu 16 qdisc noop state DOWN mode DEFAULT group default qlen 10 link/can # # ip link set can0 up type can bitrate 1000000 [ 450.113274] IPv6: ADDRCONF(NETDEV_CHANGE): can0: link becomes ready # # # ifconfig can0 can0 Link encap:UNSPEC HWaddr 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00 UP RUNNING NOARP MTU:16 Metric:1 RX packets:0 errors:0 dropped:0 overruns:0 frame:0 TX packets:0 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:10 RX bytes:0 (0.0 B) TX bytes:0 (0.0 B) Interrupt:36 # candump can0 & # # # ip link show can0 3: can0: mtu 16 qdisc pfifo_fast state UP mode DEFAULT group default qlen 10 link/can # cansend can0 123#1122334455667788 can0 123 [8] 11 22 33 44 55 66 77 88 can0 123 [8] 11 22 33 44 55 66 77 88 # # # cansend can0 123#1234123412341234 can0 123 [8] 12 34 12 34 12 34 12 34 can0 123 [8] 12 34 12 34 12 34 12 34 # Following example is demostrated on Carrier boards(pcb8309). On Sender DUT Set bitrate of can0 interface. Check if can0 interface is up. Use cansend to send message on CAN bus. # ifconfig can0 can0 Link encap:UNSPEC HWaddr 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00 NOARP MTU:16 Metric:1 RX packets:0 errors:0 dropped:0 overruns:0 frame:0 TX packets:0 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:10 RX bytes:0 (0.0 B) TX bytes:0 (0.0 B) Interrupt:36 # # ip link show 1: lo: mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 2: bond0: mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000 link/ether 5e:a3:1f:b8:c5:e3 brd ff:ff:ff:ff:ff:ff 3: can0: mtu 16 qdisc noop state DOWN mode DEFAULT group default qlen 10 link/can 4: eth0: mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000 link/ether fe:13:e4:88:b1:21 brd ff:ff:ff:ff:ff:ff 5: eth1: mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000 link/ether fe:13:e4:88:b1:22 brd ff:ff:ff:ff:ff:ff 6: eth2: mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000 link/ether fe:13:e4:88:b1:23 brd ff:ff:ff:ff:ff:ff 7: eth3: mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000 link/ether fe:13:e4:88:b1:24 brd ff:ff:ff:ff:ff:ff 8: sit0@NONE: mtu 1480 qdisc noop state DOWN mode DEFAULT group default qlen 1000 link/sit 0.0.0.0 brd 0.0.0.0 # # ip link set can0 up type can bitrate 1000000 [ 1282.198583] IPv6: ADDRCONF(NETDEV_CHANGE): can0: link becomes ready # ip link show can0 3: can0: mtu 16 qdisc pfifo_fast state UP mode DEFAULT group default qlen 10 link/can # # cansend can0 5A1#11.22.33.44.55.66.77.88 # # cansend can0 123#1122334455667788 # # ifconfig can0 can0 Link encap:UNSPEC HWaddr 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00 UP RUNNING NOARP MTU:16 Metric:1 RX packets:0 errors:0 dropped:0 overruns:0 frame:0 TX packets:2 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:10 RX bytes:0 (0.0 B) TX bytes:16 (16.0 B) Interrupt:36 On Receiver DUT Set bitrate of can0 interface. Check if can0 interface is up. Use candump to receive message sent from Sender on CAN bus. # ip link set can0 up type can bitrate 1000000 [ 174.322126] IPv6: ADDRCONF(NETDEV_CHANGE): can0: link becomes ready # # ip link show can0 3: can0: mtu 16 qdisc pfifo_fast state UP mode DEFAULT group default qlen 10 link/can # # # candump can0 can0 5A1 [8] 11 22 33 44 55 66 77 88 can0 123 [8] 11 22 33 44 55 66 77 88 ^C# # ifconfig can0 can0 Link encap:UNSPEC HWaddr 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00 UP RUNNING NOARP MTU:16 Metric:1 RX packets:2 errors:0 dropped:0 overruns:0 frame:0 TX packets:0 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:10 RX bytes:16 (16.0 B) TX bytes:0 (0.0 B) Interrupt:36 Verify that message received on Receiver DUT is same as sent from Sender DUT.","title":"LAN966x MCAN","component":"bsp","version":"2023.12","name":"lan966x-mcan","url":"/bsp/2023.12/supported-hw/lan966x-mcan.html","titles":[{"text":"LAN966x MCAN","hash":"_lan966x_mcan","id":1},{"text":"SoC Resources","hash":"_soc_resources","id":2},{"text":"Kernel configurations","hash":"_kernel_configurations","id":3},{"text":"Devicetree Configuration","hash":"_devicetree_configuration","id":4},{"text":"References","hash":"_references","id":5},{"text":"Example","hash":"_example","id":6},{"text":"UserSpace","hash":"_userspace","id":7},{"text":"Confirm instances are created","hash":"_confirm_instances_are_created","id":8},{"text":"Example on how to use","hash":"_example_on_how_to_use","id":9},{"text":"Loopback test","hash":"_loopback_test","id":10},{"text":"Two DUT test","hash":"_two_dut_test","id":11}]},"49":{"id":49,"text":"LAN966X SoC have 5 FLEXCOMs(Flexible Serial Communication Controller). Each flexcom supports three serial communication protocols that includes USART(Universal Synchronous Asynchronous Receiver Transceiver). SPI(Serial Peripheral Interface). TWI(Two-wire Interface) or I2C(Inter Integrated Circuit). In order to use a I2C interface, a specific flexcom should be configured in I2C mode. Following kernel config options should be enabled to use LAN966x I2C interface: CONFIG_MFD_ATMEL_FLEXCOM - Flexcom driver config option. CONFIG_I2C_AT91 - I2C driver config option. Corresponding flash driver should be enabled. Below example explains I2C with a EEPROM device for which CONFIG_EEPROM_AT24 config option is required. To use I2C interface, following configurations are required in device tree. Each of the flexcom flx0, flx1, flx2, flx3 and flx4 nodes can be configured in I2C mode ATMEL_FLEXCOM_MODE_TWI to use I2C interface. compatible string must be set to microchip,sam9x60-i2c. reg property must be set with register address and length as GPIO pins for TXD, RXD should be configured to pinctrl-0 property.. List of possible pin mappings are as in below table: FLEXCOM Node DT RXD node RXD pin DT TXD node TXD pin flx0 fc0_a_rxd_pins GPIO9 fc0_a_txd_pins GPIO10 flx0 fc0_b_rxd_pins GPIO25 fc0_b_txd_pins GPIO26 flx0 fc0_c_rxd_pins GPIO62 fc0_c_txd_pins GPIO63 flx1 fc1_a_rxd_pins GPIO12 fc1_a_txd_pins GPIO13 flx1 fc1_b_rxd_pins GPIO34 fc1_b_txd_pins GPIO35 flx1 fc1_c_rxd_pins GPIO47 fc1_c_txd_pins GPIO48 flx2 fc2_a_rxd_pins GPIO15 fc2_a_txd_pins GPIO16 flx2 fc2_b_rxd_pins GPIO44 fc2_b_txd_pins GPIO45 flx3 fc3_a_rxd_pins GPIO18 fc3_a_txd_pins GPIO19 flx3 fc3_b_rxd_pins GPIO52 fc3_b_txd_pins GPIO53 flx3 fc3_c_rxd_pins GPIO31 fc3_c_txd_pins GPIO32 flx4 fc4_a_rxd_pins GPIO21 fc4_a_txd_pins GPIO22 flx4 fc4_b_rxd_pins GPIO57 fc4_b_txd_pins GPIO58 flx4 fc4_c_rxd_pins GPIO65 fc4_c_txd_pins GPIO66 interrupts property must set with interrupt details. Interrupt lines[CPU INTR] corresponding to a flexcom must be configured as defined in below table: FLEXCOM ID Shared Peripheral Interrupt CPU INTR flx0 80 48 flx1 81 49 flx2 82 50 flx3 83 51 flx4 84 52 Note that Shared peripheral interrupt lines start at index ID32. So, CPU INTR must be calculated as [Shared peripheral interrupt number - 32]. Input clock clocks property must be set to &nic_clk. Note that NIC clock(200Mhz) is clock used by AXI, AHB fabric and APB bridges which connects all th peripherals. I2C driver implementation Flexcom DT documentation I2C DT documentation Following example shows how a flexcom I2C should be defined in DT to use EEPROM device present on it: &flx2 { atmel,flexcom-mode = ; status = \"okay\"; i2c0: i2c@600 { compatible = \"microchip,sam9x60-i2c\"; reg = ; interrupts = ; #address-cells = ; #size-cells = ; clocks = ; pinctrl-0 = , ; pinctrl-names = \"default\"; atmel,fifo-size = ; i2c-analog-filter; i2c-digital-filter; i2c-digital-filter-width-ns = ; status = \"okay\"; eeprom: eeprom@50 { compatible = \"atmel,24c512\"; reg = ; pagesize = ; status = \"okay\"; }; }; }; To confirm if i2c flash is created: Check if flash device is created in /sys/bus/i2c/devices/ directory. Following example shows how to read/write to I2C eeprom device: # dmesg | grep i2c [ 5.749296] at91_i2c e0060600.i2c: can't get DMA channel, continue without DMA support [ 5.757431] at91_i2c e0060600.i2c: Using FIFO (32 data) [ 5.763341] at91_i2c e0060600.i2c: recovery information incomplete [ 5.782333] at91_i2c e0060600.i2c: AT91 i2c bus driver (hw version: 0x820). # # dmesg | grep EEPROM [ 5.774793] at24 0-0050: 65536 byte 24c512 EEPROM, writable, 128 bytes/write # # cat /proc/interrupts | grep i2c 32: 65538 GIC-0 82 Level e0060600.i2c # # echo \"02_09: Sunrise: Testing TWI on Drop_7C. I2C EEPROM is detected and able to read it\" > /sys/bus/i2c/devices/0-0050/eeprom # # # more /sys/bus/i2c/devices/0-0050/eeprom | od -c 0000000 0 2 _ 0 9 : S u n r i s e : 0000020 T e s t i n g T W I o n D 0000040 r o p _ 7 C . I 2 C E E P R 0000060 O M i s d e t e c t e d a 0000100 n d a b l e t o r e a d 0000120 i t \\n K b i t ) S e r i a l 0000140 E l e c t r i c a l l y E r a 0000160 s a b l e P R O M \\n 377 377 377 377 377 0000200 377 377 377 377 377 377 377 377 377 377 377 377 377 377 377 377 * 0010400 377 377 377 377 377 V 377 377 377 377 377 377 377 377 377 377 0010420 377 377 377 377 377 377 377 377 377 377 377 377 377 377 377 377 * 0011000 377 T h i s i s C P U T W I 0011020 M a s t e r m o d e t e s 0011040 t \\0 377 377 377 377 377 377 377 377 377 377 377 377 377 377 0011060 377 377 377 377 377 377 377 377 377 377 377 377 377 377 377 377 * 0011400 \\0 021 \" 3 D U f w 210 231 252 273 314 335 356 377 0011420 377 377 377 377 377 377 377 377 377 377 377 377 377 377 377 377 * 0200000 #","title":"LAN966x I2C","component":"bsp","version":"2023.12","name":"lan966x-i2c","url":"/bsp/2023.12/supported-hw/lan966x-i2c.html","titles":[{"text":"LAN966x I2C","hash":"_lan966x_i2c","id":1},{"text":"SoC Resources","hash":"_soc_resources","id":2},{"text":"Kernel configurations","hash":"_kernel_configurations","id":3},{"text":"Devicetree Configuration","hash":"_devicetree_configuration","id":4},{"text":"References","hash":"_references","id":5},{"text":"Example","hash":"_example","id":6},{"text":"UserSpace","hash":"_userspace","id":7},{"text":"Confirm instances are created","hash":"_confirm_instances_are_created","id":8},{"text":"Example on how to use","hash":"_example_on_how_to_use","id":9}]},"50":{"id":50,"text":"LAN966x SDMMC controller supports the embedded Multimedia Card (e.MMC) Specification (v5.01) and the SD Memory Card(v3.0). Following kernel config options should be enabled to use LAN966x SDMMC: CONFIG_MMC_SDHCI - SD Host controller config option. CONDFIG_MMC - MMC interface config option CONFIG_MMC_SDHCI_OF_AT91 - SDHCI OF support (for the Atmel SDMMC controller) config option. To use SDMMC interface, following configurations are required in device tree. compatible string must be set to microchip,lan966x-sdhci. reg property must be set with base register address and length. pinctrl-0 property must be set to , to use SD Card interface. , to use eMMC interface. Note emmc_sd_pins includes CMD, CLK, D0, D1, D2, D3, RSTN pins for both SD and eMMC, sdmmc_pins includes VSEL, WP, CD, LED pins for SD interface only and emmc_pins includes D4, D5, D6, D7 pins for eMMC interface only. sdmmc_pins and emmc_pins pin numbers are same but driver will take care of configuring different ALT modes for SD and eMMC pins. pinctrl node CMD pin CLK pin D0 D1 D2 D3 RSTN emmc_sd_pins GPIO67 GPIO68 GPIO69 GPIO70 GPIO71 GPIO72 GPIO77 pinctrl node DT Func VSEL pin WP pin CD pin LED pin sdmmc_pins sd GPIO73 GPIO74 GPIO75 GPIO76 pinctrl node DT Func D4 D5 D6 D7 emmc_pins emmc GPIO73 GPIO74 GPIO75 GPIO76 interrupts property must set with interrupt details. Interrupt number[CPU INTR] corresponding to a sdmmc must be configured as defined below: SDMMC ID Shared Peripheral Interrupt CPU INTR sdmmc0 98 66 Note Shared peripheral interrupt lines start at index ID32. So, CPU INTR must be calculated as [Shared peripheral interrupt number - 32]. Input clock clocks property must be set to GCK clock using phandle and GCK ID as . clock-names must be set to hclock and multclk assigned-clocks must be set to . assigned-clock-rates must be set to 45Mhz. Note While operating as eMMC interface, tx-phase property must be set to zero. Possible phase shift values are 0 for 180degrees, c for 90 degrees, 4 for 270 degrees, 8 for 360 degrees. 180 degress phase shift is considered as best chioce for generating phase difference between data/command bus and output clock. It provides sufficient time limit to compensate for any board delays/skew and provides sufficient time margin for setup/hold time requirements. SDHCI DT Documentation MMC DT Documentation Following example shows how a SD/eMMC should be defined in DT: dtsi file: sdmmc0: sdio-host@e0830000 { compatible = \"microchip,lan966x-sdhci\"; reg = ; interrupts = ; clocks = , ; clock-names = \"hclock\", \"multclk\"; assigned-clocks = ; assigned-clock-rates = ; status = \"disabled\"; }; dts file changes for eMMC: &sdmmc0 { bus-width = ; cap-mmc-highspeed; cap-mmc-hw-reset; non-removable; pinctrl-0 = , ; pinctrl-names = \"default\"; no-1-8-v; tx-phase = ; /* 180 degrees phase shift */ status = \"okay\"; }; dts file changes for SD Card: &sdmmc0 { bus-width = ; pinctrl-0 = , ; pinctrl-names = \"default\"; no-1-8-v; status = \"okay\"; }; Steps to Format, Create partitions and Mount SD/eMMC To confirm if mmc device is created: Check if a mmc device is created in /dev directory. To check card details, mount debugfs using command mount -t debugfs none /sys/kernel/debug/ and then use command cat /sys/kernel/debug/mmc0/ios to get IOs debugging information. eMMC Interface testing: # ls -l /dev/mmc* brw------- 1 root root 179, 0 Jan 1 00:00 /dev/mmcblk0 brw------- 1 root root 179, 8 Jan 1 00:00 /dev/mmcblk0boot0 brw------- 1 root root 179, 16 Jan 1 00:00 /dev/mmcblk0boot1 crw------- 1 root root 247, 0 Jan 1 00:00 /dev/mmcblk0rpmb # # # dmesg | grep mmc [ 3.154864] mmc0: SDHCI controller on e0830000.sdio-host [e0830000.sdio-host] using ADMA [ 3.355470] mmc0: new high speed MMC card at address 0001 [ 3.365870] mmcblk0: mmc0:0001 IS004G 3.64 GiB [ 3.369463] mmcblk0boot0: mmc0:0001 IS004G partition 1 2.00 MiB [ 3.373726] mmcblk0boot1: mmc0:0001 IS004G partition 2 2.00 MiB [ 3.386894] mmcblk0rpmb: mmc0:0001 IS004G partition 3 512 KiB, chardev (247:0) [ 3.397439] mmcblk0: p1 p2 # # mount -t debugfs none /sys/kernel/debug/ # cat /sys/kernel/debug/mmc0/ios clock: 46000000 Hz actual clock: 46000000 Hz vdd: 21 (3.3 ~ 3.4 V) bus mode: 2 (push-pull) chip select: 0 (don't care) power mode: 2 (on) bus width: 3 (8 bits) timing spec: 1 (mmc high-speed) signal voltage: 0 (3.30 V) driver type: 0 (driver type B) # dd if=/dev/zero of=/dev/mmcblk0 bs=10M count=1 1+0 records in 1+0 records out # # fdisk /dev/mmcblk0 Device contains neither a valid DOS partition table, nor Sun, SGI, OSF or GPT disklabel Building a new DOS disklabel. Changes will remain in memory only, until you decide to write them. After that the previous content won't be recoverable. The number of cylinders for this disk is set to 119296. There is nothing wrong with that, but this is larger than 1024, and could in certain setups cause problems with: 1) software that runs at boot time (e.g., old versions of LILO) 2) booting and partitioning software from other OSs (e.g., DOS FDISK, OS/2 FDISK) Command (m for help): p Disk /dev/mmcblk0: 3728 MB, 3909091328 bytes, 7634944 sectors 119296 cylinders, 4 heads, 16 sectors/track Units: sectors of 1 * 512 = 512 bytes Device Boot StartCHS EndCHS StartLBA EndLBA Sectors Size Id Type Command (m for help): n Partition type p primary partition (1-4) e extended 1 Invalid partition number for type '1' Partition type p primary partition (1-4) e extended p Partition number (1-4): 1 First sector (16-7634943, default 16): Using default value 16 Last sector or +size{,K,M,G,T} (16-7634943, default 7634943): +64M Command (m for help): t Selected partition 1 Hex code (type L to list codes): 6 Changed system type of partition 1 to 6 (FAT16) Command (m for help): n Partition type p primary partition (1-4) e extended p Partition number (1-4): 2 First sector (131088-7634943, default 131088): Using default value 131088 Last sector or +size{,K,M,G,T} (131088-7634943, default 7634943): +1500M Command (m for help): p Disk /dev/mmcblk0: 3728 MB, 3909091328 bytes, 7634944 sectors 119296 cylinders, 4 heads, 16 sectors/track Units: sectors of 1 * 512 = 512 bytes Device Boot StartCHS EndCHS StartLBA EndLBA Sectors Size Id Type /dev/mmcblk0p1 0,1,1 1023,3,16 16 131087 131072 64.0M 6 FAT16 /dev/mmcblk0p2 1023,3,16 1023,3,16 131088 3203087 3072000 1500M 83 Linux Command (m for help): w The partition table has been altered. Calling ioctl() to re-read partition table [ 44.720213] mmcblk0: p1 p2 # # mkdir /tmp/ext # mkfs.ext2 /dev/mmcblk0p2 mke2fs 1.45.5 (07-Jan-2020) /dev/mmcblk0p2 contains a ext2 file system last mounted on /tmp/ext on Thu Jan 1 00:02:16 1970 Proceed anyway? (y,N) # mount -t ext2 /dev/mmcblk0p2 /tmp/ext # # # echo \"Hello_World: Welcome\" > /tmp/ext/t6.txt # # cat /tmp/ext/t6.txt Hello_World: Welcome # # # umount /tmp/ext/ SD Card Interface testing: # dmesg | grep mmc [ 1.305841] mmc0: SDHCI controller on e0830000.sdio-host [e0830000.sdio-host] using ADMA [ 1.459624] mmc0: new ultra high speed DDR50 SDHC card at address aaaa [ 1.610121] mmcblk0: mmc0:aaaa SC32G 29.7 GiB [ 1.683630] mmcblk0: p1 p2 # # # mount -t debugfs none /sys/kernel/debug/ # cat /sys/kernel/debug/mmc0/ios clock: 50000000 Hz actual clock: 50000000 Hz vdd: 21 (3.3 ~ 3.4 V) bus mode: 2 (push-pull) chip select: 0 (don't care) power mode: 2 (on) bus width: 2 (4 bits) timing spec: 7 (sd uhs DDR50) signal voltage: 1 (1.80 V) driver type: 0 (driver type B) # # ls -l /dev/mmc* brw------- 1 root root 179, 0 Jan 1 00:00 /dev/mmcblk0 brw------- 1 root root 179, 1 Jan 1 00:00 /dev/mmcblk0p1 brw------- 1 root root 179, 2 Jan 1 00:00 /dev/mmcblk0p2 # # cat /proc/interrupts | grep mmc 43: 89 GIC-0 98 Level mmc0 # # dd if=/dev/zero of=/dev/mmcblk0 bs=10M count=1 1+0 records in 1+0 records out # fdisk /dev/mmcblk0 Device contains neither a valid DOS partition table, nor Sun, SGI, OSF or GPT disklabel Building a new DOS disklabel. Changes will remain in memory only, until you decide to write them. After that the previous content won't be recoverable. The number of cylinders for this disk is set to 973968. There is nothing wrong with that, but this is larger than 1024, and could in certain setups cause problems with: 1) software that runs at boot time (e.g., old versions of LILO) 2) booting and partitioning software from other OSs (e.g., DOS FDISK, OS/2 FDISK) Command (m for help): p Disk /dev/mmcblk0: 30 GB, 31914983424 bytes, 62333952 sectors 973968 cylinders, 4 heads, 16 sectors/track Units: sectors of 1 * 512 = 512 bytes Device Boot StartCHS EndCHS StartLBA EndLBA Sectors Size Id Type Command (m for help): n Partition type p primary partition (1-4) e extended p Partition number (1-4): 1 First sector (16-62333951, default 16): Using default value 16 Last sector or +size{,K,M,G,T} (16-62333951, default 62333951): +64M Command (m for help): t Selected partition 1 Hex code (type L to list codes): 6 Changed system type of partition 1 to 6 (FAT16) Command (m for help): n Partition type p primary partition (1-4) e extended p Partition number (1-4): 2 First sector (131088-62333951, default 131088): Using default value 131088 Last sector or +size{,K,M,G,T} (131088-62333951, default 62333951): +1500M Command (m for help): p Disk /dev/mmcblk0: 30 GB, 31914983424 bytes, 62333952 sectors 973968 cylinders, 4 heads, 16 sectors/track Units: sectors of 1 * 512 = 512 bytes Device Boot StartCHS EndCHS StartLBA EndLBA Sectors Size Id Type /dev/mmcblk0p1 0,1,1 1023,3,16 16 131087 131072 64.0M 6 FAT16 /dev/mmcblk0p2 1023,3,16 1023,3,16 131088 3203087 3072000 1500M 83 Linux Command (m for help): w The partition table has been altered. Calling ioctl() to re-read partition table [ 63.250316] mmcblk0: p1 p2 # # ls -l /dev/mmc* brw------- 1 root root 179, 0 Jan 1 00:01 /dev/mmcblk0 brw------- 1 root root 179, 1 Jan 1 00:01 /dev/mmcblk0p1 brw------- 1 root root 179, 2 Jan 1 00:01 /dev/mmcblk0p2 # mkdir /tmp/ext # mount -t ext2 /dev/mmcblk0p2 /tmp/ext # # mkfs.ext2 /dev/mmcblk0p2 mke2fs 1.45.6 (20-Mar-2020) /dev/mmcblk0p2 contains a ext2 file system last mounted on /media/vishnu/842a0c11-7809-4b40-a98f-25bae7c7d16c on Thu Aug 5 11:23:26 2021 Proceed anyway? (y,N) y Discarding device blocks: done Creating filesystem with 384000 4k blocks and 96000 inodes Filesystem UUID: b2dde0d3-5b02-458d-9893-07a876e5a6bf Superblock backups stored on blocks: 32768, 98304, 163840, 229376, 294912 Allocating group tables: done Writing inode tables: done Writing superblocks and filesystem accounting information: done # # # # # mkdir /tmp/ext # # mount -t ext2 /dev/mmcblk0p2 /tmp/ext # ls -l /tmp/ext/ total 16 drwx------ 2 root root 16384 Jan 1 00:02 lost+found # # # # echo \"3-9-2021: Testing SD card at HS 50Mhz\" > /tmp/ext/t1.txt # # # # cat /tmp/ext/t1.txt 3-9-2021: Testing SD card at HS 50Mhz # # # umount /tmp/ext/ Note Enable e2fsprogs utility from buildroot to use ext2,ext3,ext4 filesystems.","title":"LAN966x SDMMC","component":"bsp","version":"2023.12","name":"lan966x-mmc","url":"/bsp/2023.12/supported-hw/lan966x-mmc.html","titles":[{"text":"LAN966x SDMMC","hash":"_lan966x_sdmmc","id":1},{"text":"SoC Resources","hash":"_soc_resources","id":2},{"text":"Kernel configurations","hash":"_kernel_configurations","id":3},{"text":"Devicetree Configuration","hash":"_devicetree_configuration","id":4},{"text":"References","hash":"_references","id":5},{"text":"Example","hash":"_example","id":6},{"text":"UserSpace","hash":"_userspace","id":7},{"text":"Confirm instances are created","hash":"_confirm_instances_are_created","id":8},{"text":"Example on how to use","hash":"_example_on_how_to_use","id":9}]},"51":{"id":51,"text":"LAN966X SoC has 8K of internal OTP(One time programmable). Following kernel config options should be enabled to enable the LAN966X OTP driver and to be able to access the OTP from userspace. CONFIG_NVMEM_MICROCHIP_OTP - None volatile memory driver config option. CONFIG_NVMEM_SYSFS - Config option to enable access to OTP using sysfs. To enable LAN966X OTP, following configurations are required in device tree: compatible - string must be set to microchip,lan966x-otp. reg - property must be set to . Following example shows how the OTP should be defined in DT: otp0: etp@e0021000 { compatible = \"microchip,lan966x-otp\"; reg = ; }; NVMEM Subsystem Before using the userspace application to configure the OTP, make sure that the OTP device is created. If the device is created, the following file should exist: /sys/bus/nvmem/devices/microchip-otp0/nvmem The userspace application otp it is used to read/write the OTP. It has the following help: # otp --help This tool can be used to access and modify the OTP in the following SoCs: - LAN9662 - LAN9668 Usage: otp field list otp field get [] otp field set [--merge] (ascii|hex|dec|3ascii-dec) otp addr get otp addr set [--merge] (ascii|hex|dec) otp tag list-tag-names otp tag print otp tag info otp tag get (|) otp tag del (|) otp tag set (|) (ascii|hex|dec) otp nvcnt get (trusted|nontrusted) otp nvcnt set (trusted|nontrusted) otp import-keys [--no-randomize-huk] otp region show otp region write-protect otp init serial partid ethaddr (random-ethaddr|) ethaddr_count Options: -h --help Show this screen. --version Show version. --verbose Enable verbose traces on console -d DEV --device=DEV NVRAM device [default: /dev/nvram0] This can also be a normal block device, or even a file. --chip-id=ID Specify OTP layout coresponding to the given chip ID. NOTE: This setting is only allowed on devices where the part-ID at byte address 0x5-0x6 is not programmed, or if the programmed part-ID matches the provided ID. --chip-id-force Force usage of the ID given with --chip-id=ID, even though a different part ID is programmed in the OTP. --no-confirm Do not require the user to confirm write operations. General: The OTP in these products are accessed by various elements including: discrete logic in the chip, TF-A bootrom (BL1), Secure Boot loader (BL2), EL3 Runtime software (BL31/BL32), UBoot, Linux kernel and this user-space application. The OTP has a concept of regions, which can be used to configure access control (read and write protection). The regions and write protect mask is in the OTP it self and need to be provisioned. This tool support 3 different kind of content: Fields: This is fixed-length data at fixed positions in the OTP. The tool has a build in template for each of the supported SoC with name, address, length and description. Non volatile counters: This is counters which can only be incremented. This is used to do rollback protection. This is implemented as a bitfields, and the max value is therefore the number of allocated bits for a given counter. Tagged data: This is semi-one-time-programmable data. The purpose of this is to allow store various data such as: mac-addresses, board-ID, ECO level, uniq default password which may be printed on the device, etc. This is implemented as an array of 64-bits records with the following layout: +--------+--------+--------+----------+ | size:3 | cont:1 | tag:12 | value:48 | +--------+--------+--------+----------+ Where: size: specify the number of valid bytes in value. 0 and 0b111 (7) are invalid. If a record needs to be invalidated, then it is a matter of writing 0b111 in this field. cont: specify that the content continues in the next valid record with the given tag value. tag: This is a number from 0-2047 specifying the type of data (the implementation has a list of named tags which may be used). value: Value associated to the tag. Note: All commands writing ('field set', 'addr set', 'tag del|set') to OTP shall do: - Read out existing content. - If '--merge' flag is not set, confirm that the specified value is possible to set. Abort if not. - Print in hex what is about the be written where - Let use user confirm. Command details: otp help: Print this message otp field list: List all fields recognized by the implementation template. otp field get [] Get the content of a specific fields, or all fields if non is provided. NOTE: This shall skip fields in areas being read-protected, but will happily print secrets if not proper protected. otp field set [--merge] (ascii|hex|dec) Set the content of a given field. - If the --merge option is provided, then the content is bit-wised OR with what is in the OTP field already. If not, a check is performed to confirm that the desired value can be written as-is. - The value can either be provided in ascii format, or as a hex-string. - A hex string must always provide an equal number of chars (no half bytes). - The length of the value must match what is find in the template. otp addr get Read the raw content in OTP. If the requested area is (partly) read-protected, then return error. otp addr set [--merge] (ascii|hex|dec) Write raw content in the OTP. If the requested area is (partly) write-protected, then return error before any content is written. otp nvcnt (trusted|nontrusted) get otp nvcnt (trusted|nontrusted) set Get/set the value of either the trusted or nontrusted non-volatile-ever-incrementing-counter. This is implemented as a bit-field, and a given implementation will have limited capacity. NOTE: This is used by the secure boot-ROM to implement rollback protection. otp tag list-tag-names List all the tag names and associated numbers know by the implementation. otp tag info Print statistics on tag usages. otp tag print Print all valid tags in the otp. otp tag get (bin|hex) [(|)] Read out the value of a given tag (either by name or by number) or dump all tags if no name/number is provided. If no valid tag with matching name/number was found, then return an error. otp tag [--merge] set (|) (ascii|hex) Set a tagged value. If the --merge flag was set, then the content provided must be of exact same length as the length of existing content in the OTP. If this tag already exists, then it shall be replaced (meaning invalidating the existing tag). otp tag append (|) Append more data to a tag. This will always create a new record and set the 'cont' flag in existing tags. otp tag del (|) Invalidate an existing tag in the OTP. otp import-keys [--no-randomize-huk] : This shall read the content from a file (or stdin if '-' is provided as file-name). The content is binary and length must match the platform expected length. It can only be used to program the region with TF-A keys (on LAN966x this is region 4). The region will not be defined when the tool is called, and a per platform hard-coded offset/size will be used. Unless the --no-randomize-huk flag is set, then the OTP_TBBR_HUK field will be set with randomized content using /dev/random. otp region show: Show the start-address, end-address and write-protect bit of all regions. Some regions may be displayed with start- and end-address equal to 0, which means that this region is still not defiend. otp region write-protect : This shall check if the region is defined (in `PROTECT_REGION_ADDR`). If not, the region shall be defined using the per-chip-id defined template. Once the region is defined it shall be marked as write-protected in `PROTECT_OTP_WRITE`. otp init partid serial pcb ethaddr (random-ethaddr|) ethaddr_count NOTE: This shall only be called during board manufacturing! Do not call more than once. This sub-command will do the following: - If the PARTID in OTP is not zero - check that it matches , if not report an error. - If the PARTID in OTP is zero, assume the value is right and use this to select the per-part-id templates. Also, the PARTID shall be programmed in OTP. - Do the equivalent of: $ opt field set SERIAL_NUMBER 3ascii-dec The 3ascii-dec format is interpretted like, the first 3 letters are ascii values while the rest is a decimal number - Do the equivalent of: $ opt tag set pcb dec - Do the equivalent of: $ opt tag set ethaddr_count dec - Do the equivalent of: $ opt tag set ethaddr ascii - If the ethaddr-address is `random-ethaddr`, then generate a random ETHADDR with the following limitation: - Broadcast bit is 0 - Local-administrated bit is 1 - It must not be all zero and not all ff. Here are some examples on how to use it Once something is written in the OTP this can’t be erased. So make sure you can write the right command. You can test the command by running the same command on a file. How to initialize the board: otp -d /sys/bus/nvmem/devices/microchip-otp0/nvmem init partid 9662 serial pcb 8291 ethaddr random-ethaddr ethaddr_count 16 This command will do the following: set the field partid to 9668 set the field serial_number to set the tag pcb to 8290 set the tag ethaddr to a random generated eth addr where bit 1 in MSB is set to 1 and bit 0 in MSB is set to 0. set the tag ethaddr_count to 16 meaning that it would reserve 16 addresses Here is a way to read back a field: otp -d /sys/bus/nvmem/devices/microchip-otp0/nvmem field get PARTID 2 be25|.%| The first value of the output represents the number of bytes the field it has, second represents the value in little endian in hex and the last value represents the ascii characters of the value. To see the available fields the following command can be used: otp -d /sys/bus/nvmem/devices/microchip-otp0/nvmem field list Field: OTP_PRG offset: 0x0000 length: 04 Field: FEAT_IDS offset: 0x0004 length: 01 Field: PARTID offset: 0x0005 length: 02 Field: TST_TRK offset: 0x0007 length: 01 Field: SERIAL_NUMBER offset: 0x0008 length: 08 Field: SECURE_JTAG offset: 0x0010 length: 04 Field: WAFER_JTAG offset: 0x0014 length: 07 Field: JTAG_UUID offset: 0x0020 length: 10 Field: TRIM offset: 0x0030 length: 08 Field: PROTECT_OTP_WRITE offset: 0x0040 length: 04 Field: PROTECT_REGION_ADDR offset: 0x0044 length: 32 Field: OTP_PCIE_FLAGS offset: 0x0064 length: 04 Field: OTP_PCIE_DEV offset: 0x0068 length: 04 Field: OTP_PCIE_ID offset: 0x006c length: 08 Field: OTP_PCIE_BARS offset: 0x0074 length: 40 Field: OTP_TBBR_ROTPK offset: 0x0100 length: 32 Field: OTP_TBBR_HUK offset: 0x0120 length: 32 Field: OTP_TBBR_EK offset: 0x0140 length: 32 Field: OTP_TBBR_SSK offset: 0x0160 length: 32 Field: OTP_SJTAG_SSK offset: 0x0180 length: 32 Field: OTP_STRAP_DISABLE_MASK offset: 0x01a4 length: 02 Here is a way to read back a tag: otp -d /sys/bus/nvmem/devices/microchip-otp0/nvmem tag list-tag-names Tag: password, id: 1 Tag: pcb, id: 2 Tag: revision, id: 3 Tag: ethaddr, id: 4 Tag: ethaddr_count, id: 5 Tag: fit_config, id: 6","title":"LAN966x OTP","component":"bsp","version":"2023.12","name":"lan966x-otp","url":"/bsp/2023.12/supported-hw/lan966x-otp.html","titles":[{"text":"LAN966x OTP","hash":"_lan966x_otp","id":1},{"text":"SoC Resources","hash":"_soc_resources","id":2},{"text":"Kernel configurations","hash":"_kernel_configurations","id":3},{"text":"Devicetree Configuration","hash":"_devicetree_configuration","id":4},{"text":"Example","hash":"_example","id":5},{"text":"References","hash":"_references","id":6},{"text":"UserSpace","hash":"_userspace","id":7},{"text":"Example on how to use","hash":"_example_on_how_to_use","id":8}]},"52":{"id":52,"text":"LAN966x GPIO controller supports 78 gpio pins. Most of the GPIO pins have alternate functions which will be handled by linux driver. Following kernel config options should be enabled to use LAN966x GPIO Controller: CONFIG_PINCTRL_OCELOT - GPIO controller config option. To use GPIO pins of a specific peripheral, configure following properties in device tree: compatible string must be set to microchip,lan966x-pinctrl. reg property must be set with and . gpio-controller property must be added. #gpio-cells property must be set to 2 gpio-ranges property must be set to interrupts property must be set with GPIO block interrupt details as . Peripheral Shared Peripheral Interrupt CPU INTR gpio 49 17 Note Shared peripheral interrupt lines start at index ID32. So, CPU INTR must be calculated as [Shared peripheral interrupt number - 32]. pins must be set with list of GPIO pins required. For example for mcan0, it should be set as \"GPIO_35\", \"GPIO_36\". function must be set to function name corresponding to GPIO pins and the peripheral we are trying to enable. Refer below table for function names: GPIO Pin FUNC1 FUNC2 FUNC3 FUNC4 FUNC5 FUNC6 0 - - - - - - 1 - - - - - - 2 - - - - - - 3 - - - - - - 4 - - - - - - 5 - - - - - - 6 - - - - - - 7 - - - - - - 8 fc0_a usb_host_b - usb_slave_b - - 9 fc0_a usb_host_b - - - - 10 fc0_a - - - - - 11 fc1_a - - - - - 12 fc1_a - - - - - 13 fc1_a - - - - - 14 fc2_a - - - - - 15 fc2_a - - - - - 16 fc2_a ib_trig_a - ob_trig_a irq_in_c irq_out_c 17 fc3_a ib_trig_a - ob_trig_a irq_in_c irq_out_c 18 fc3_a ib_trig_a - ob_trig_a irq_in_c irq_out_c 19 fc3_a ib_trig_a - ob_trig_a irq_in_c irq_out_c 20 fc4_a ib_trig_a - ob_trig_a irq_in_c - 21 fc4_a - - ob_trig_a - - 22 fc4_a - - ob_trig_a - - 23 - - - ob_trig_a - - 24 fc0_b ib_trig_a usb_host_c ob_trig_a irq_in_c tacho_a 25 fc0_b ib_trig_a usb_host_c ob_trig_a irq_out_c sfp_sd 26 fc0_b ib_trig_a usb_slave_c ob_trig_a can0_a sfp_sd 27 - - - ob_trig_a can0_a - 28 miim_a - - ob_trig_a irq_out_c sfp_sd 29 miim_a - - ob_trig_a - - 30 fc3_c can1 - ob_trig reco_b - 31 fc3_c can1 - ob_trig reco_b - 32 fc3_c - sgpio_a - miim_slave_a - 33 fc1_b - sgpio_a - miim_slave_a miim_b 34 fc1_b - sgpio_a - miim_slave_a miim_b 35 fc1_b ptpsync_0 sgpio_a can0_b - - 36 - ptpsync_1 - can0_b - - 37 fc_shrd0 ptpsync_2 twi_slc_gate_ad - - - 38 - ptpsync_3 - - - - 39 - ptpsync_4 - - - - 40 fc_shrd1 ptpsync_5 - - - - 41 fc_shrd2 ptpsync_6 twi_slc_gate_ad - - - 42 fc_shrd3 ptpsync_7 twi_slc_gate_ad - - - 43 fc2_b ob_trig_b ib_trig_b irq_out_a reco_a irq_in_a 44 fc2_b ob_trig_b ib_trig_b irq_out_a reco_a irq_in_a 45 fc2_b ob_trig_b ib_trig_b irq_out_a - irq_in_a 46 fc1_c ob_trig_b ib_trig_b irq_out_a fc_shrd4 irq_in_a 47 fc1_c ob_trig_b ib_trig_b irq_out_a fc_shrd5 irq_in_a 48 fc1_c ob_trig_b ib_trig_b irq_out_a fc_shrd6 irq_in_a 49 fc_shrd7 ob_trig_b ib_trig_b irq_out_a twi_slc_gate irq_in_a 50 fc_shrd16 ob_trig_b ib_trig_b irq_out_a twi_slc_gate - 51 fc3_b ob_trig_b ib_trig_c irq_out_b - irq_in_b 52 fc3_b ob_trig_b ib_trig_c irq_out_b tacho_b irq_in_b 53 fc3_b ob_trig_b ib_trig_c irq_out_b - irq_in_b 54 fc_shrd8 ob_trig_b ib_trig_c irq_out_b twi_slc_gate irq_in_b 55 fc_shrd9 ob_trig_b ib_trig_c irq_out_b twi_slc_gate irq_in_b 56 fc4_b ob_trig_b ib_trig_c irq_out_b fc_shrd10 irq_in_b 57 fc4_b twi_slc_gate ib_trig_c irq_out_b fc_shrd11 irq_in_b 58 fc4_b twi_slc_gate ib_trig_c irq_out_b fc_shrd12 irq_in_b 59 qspi1 miim_c - - miim_slaveb - 60 qspi1 miim_c - - miim_slaveb - 61 qspi1 - sgpio_b fc0_c miim_slaveb - 62 qspi1 fc_shrd13 sgpio_b fc0_c twi_slc_gate sfp_sd 63 qspi1 fc_shrd14 sgpio_b fc0_c twi_slc_gate sfp_sd 64 qspi1 fc4_c sgpio_b fc_shrd15 twi_slc_gate sfp_sd 65 usb_host_a fc4_c - irq_out_c twi_slc_gate_ad - 66 usb_host_a fc4_c usb_slave_a irq_out_c irq_in_c - 67 emmc_sd - qspi2 - - - 68 emmc_sd - qspi2 - - - 69 emmc_sd - qspi2 - - - 70 emmc_sd - qspi2 - - - 71 emmc_sd - qspi2 - - - 72 emmc_sd - qspi2 - - - 73 emmc - - sd - - 74 emmc - fc_shrd17 sd twi_slc_gate - 75 emmc - fc_shrd18 sd twi_slc_gate - 76 emmc - fc_shrd19 sd twi_slc_gate - 77 emmc_sd - fc_shrd20 - twi_slc_gate - Note LAN966x GPIO controller supports 8 Alternate functions. FUNC0 is GPIO mode and FUNC7 is Reserved. Function names for FUNC1-FUNC6 alternate modes are listed above. pinctrl DT Documentation Following example shows how a GPIO controller should be defined in DT to enable GPIO pins for eMMC interface: dtsi file: gpio: pinctrl@e2004070 { compatible = \"microchip,lan966x-pinctrl\"; reg = , ; gpio-controller; #gpio-cells = ; gpio-ranges = ; interrupt-controller; interrupts = ; #interrupt-cells = ; emmc_sd_pins: emmc-sd-pins { /* eMMC_SD - CMD, CLK, D0, D1, D2, D3, RSTN */ pins = \"GPIO_67\", \"GPIO_68\", \"GPIO_69\", \"GPIO_70\", \"GPIO_71\", \"GPIO_72\", \"GPIO_77\"; function = \"emmc_sd\"; }; emmc_pins: emmc-pins { /* eMMC - D4, D5, D6, D7 */ pins = \"GPIO_73\", \"GPIO_74\", \"GPIO_75\", \"GPIO_76\"; function = \"emmc\"; }; }; dts file changes: &sdmmc0 { bus-width = ; cap-mmc-highspeed; cap-mmc-hw-reset; non-removable; pinctrl-0 = , ; pinctrl-names = \"default\"; no-1-8-v; tx-phase = ; /* 180 degrees phase shift */ status = \"okay\"; }; Check if pinctrl driver is registered and respective peripheral is up or not. Checking if the pinctrl driver is registered and respective peripheral(here emmc with above dt example) is created or not. # dmesg | grep pinctrl [ 0.014851] pinctrl core: initialized pinctrl subsystem [ 0.109830] gpio gpiochip0: (ocelot-gpio): created GPIO range 0->77 ==> e2004064.pinctrl PIN 0->77 [ 0.111131] pinctrl-ocelot e2004064.pinctrl: driver registered # dmesg | grep mmc [ 0.722586] mmc0: SDHCI controller on e0830000.sdio-host [e0830000.sdio-host] using ADMA [ 2.373076] mmc0: new high speed MMC card at address 0001 [ 2.378776] mmcblk0: mmc0:0001 IS004G 3.64 GiB [ 2.387639] mmcblk0: [ 2.388324] mmcblk0boot0: mmc0:0001 IS004G 2.00 MiB [ 2.399663] mmcblk0boot1: mmc0:0001 IS004G 2.00 MiB [ 2.410084] mmcblk0rpmb: mmc0:0001 IS004G 512 KiB, chardev (247:0) # mount -t debugfs none /sys/kernel/debug/ cat /sys/kernel/debug/mmc0/ios# cat /sys/kernel/debug/mmc0/ios clock: 46000000 Hz actual clock: 46000000 Hz vdd: 21 (3.3 ~ 3.4 V) bus mode: 2 (push-pull) chip select: 0 (don't care) power mode: 2 (on) bus width: 3 (8 bits) timing spec: 1 (mmc high-speed) signal voltage: 0 (3.30 V) driver type: 0 (driver type B) Mounting Sysfs The root file system being used may not have sysfs mounted and it cannot be used if it’s not mounted. The directory /sys is also needed to mount the sysfs on. The root file system must be writable to do the following steps. Identify the GPIO chips Use command ls /sys/class/gpio/ to list all the gpio chips. Steps to configure a GPIO pin Export a GPIO pin using command echo X > /sys/class/gpio/export. Read direction and value from GPIO pin using command cat /sys/class/gpio/gpioX/direction for direction and cat /sys/class/gpio/gpioX/value for value, where X is pin number. If direction of a pin is out, we can write 0 or 1 to value file of pin and also can read its value. If direction of a pin is in, we can only read its value but cannot write to it, we would get an error because it is not valid to set the value of an input pin. Unexport a GPIO pin using command echo X > /sys/class/gpio/unexport. Following example configures GPIO pin 51(physical pin number 32) and validates voltage on pin using a multimeter: # ls /sys/class/gpio/ export gpiochip0 unexport Export GPIO pin 51: # echo 51 > /sys/class/gpio/export # ls /sys/class/gpio/ export gpio51 gpiochip0 unexport Check default direction and value: # cat /sys/class/gpio/gpio51/value 1 # # cat /sys/class/gpio/gpio51/direction in # Now, measure voltage on physical pin number 32 and you should see voltage of approximately 3.3v. Change direction of GPIO pin 51 to out and set value to zero: # echo out > /sys/class/gpio/gpio51/direction # # # cat /sys/class/gpio/gpio51/value 0 # Again measure voltage on physical pin number 32 and you should see voltage close to zero.","title":"LAN966x GPIO","component":"bsp","version":"2023.12","name":"lan966x-pinctrl","url":"/bsp/2023.12/supported-hw/lan966x-pinctrl.html","titles":[{"text":"LAN966x GPIO","hash":"_lan966x_gpio","id":1},{"text":"SoC Resources","hash":"_soc_resources","id":2},{"text":"Kernel configurations","hash":"_kernel_configurations","id":3},{"text":"Devicetree Configuration","hash":"_devicetree_configuration","id":4},{"text":"References","hash":"_references","id":5},{"text":"Example","hash":"_example","id":6},{"text":"UserSpace","hash":"_userspace","id":7},{"text":"Confirm instances are created","hash":"_confirm_instances_are_created","id":8},{"text":"Example on how to use","hash":"_example_on_how_to_use","id":9},{"text":"Configuring GPIO pin using Sysfs interface","hash":"_configuring_gpio_pin_using_sysfs_interface","id":10}]},"53":{"id":53,"text":"LAN966x supports three QSPI interfaces - QSPI0, QSPI1 and QSPI2. Following kernel config options should be enabled to use LAN966x QSPI interface: CONFIG_SPI_ATMEL_QUADSPI - QSPI driver config option. CONFIG_MTD, CONFIG_MTD_SPI_NOR or CONFIG_MTD_SPI_NAND based on NOR/NAND flash present. To use QSPI interface, following configurations are required in device tree. compatible string must be set to microchip,lan966x-qspi. reg property must be set with base register address, AHB register address and their lengths. reg-names must be set to qspi_base and qspi_mmap. pinctrl-0 property must be set with SCK, NCS, IO0, IO1, IO2, IO3 GPIO pins. Refer datasheet for QSPIx [where x is QSPI index (0-2)] pin details. interrupts property must set with interrupt details. Interrupt number[CPU INTR] corresponding to QSPI index must be configured as defined in below table: QSPI ID Shared Peripheral Interrupt CPU INTR qspi0 77 45 qspi1 97 65 qspi2 100 68 Note Shared peripheral interrupt lines start at index ID32. So, CPU INTR must be calculated as [Shared peripheral interrupt number - 32]. Input clock clocks property must be set to GCK clock using phandle and GCK ID as , where x is QSPI index (0-2). clock-names must be set to pclk and gclk assigned-clocks must be set to , where x is QSPI index (0-2). assigned-clock-rates must be set to 20Mhz. dmas must be set to phandle dma0 and Peripheral ID as listed below: QSPI ID Rx channel PerID Tx channel PerID qspi0 0 1 qspi1 15 16 qspi2 17 18 For example, dmas should be configured as for Rx channel and for Tx channel. * dma-names must be set to rx and tx respectively. Note dmas and dma-names are optional properties. QSPI DT documentation Following example shows how a QSPI should be defined in DT to use a SPI-NAND flash present on it: dtsi file: qspi2: spi@e0834000 { compatible = \"microchip,lan966x-qspi\"; reg = , ; reg-names = \"qspi_base\", \"qspi_mmap\"; interrupts = ; clocks = , ; clock-names = \"pclk\", \"gclk\"; assigned-clocks = ; assigned-clock-rates = ; dmas = , ; dma-names = \"rx\", \"tx\"; #address-cells = ; #size-cells = ; status = \"disabled\"; }; dts file: &qspi2 { pinctrl-0 = ; pinctrl-names = \"default\"; status = \"okay\"; spi-flash@0 { compatible = \"spi-nand\"; reg = ; spi-max-frequency = ; #address-cells = ; #size-cells = ; spi-tx-bus-width = ; spi-rx-bus-width = ; }; }; MTD utility in buildroot provides rich set of tests for validating QSPI NOR/NAND flashes. To confirm if qspi flash is created: Check if a mtd device is created in /dev directory. Run mtd_debug info /dev/mtdx (where x is index of mtd device) command to check flash details. # dmesg | grep spi [ 1.258369] atmel_qspi e0834000.spi: Using dma0chan1 (tx) and dma0chan0 (rx) for DMA transfers [ 1.284563] spi-nand spi1.0: Winbond SPI NAND was found. [ 1.289435] spi-nand spi1.0: 128 MiB, block size: 128 KiB, page size: 2048, OOB size: 64 # mtd_debug info /dev/mtd1 mtd.type = MTD_NANDFLASH mtd.flags = MTD_CAP_NANDFLASH mtd.size = 134217728 (128M) mtd.erasesize = 131072 (128K) mtd.writesize = 2048 (2K) mtd.oobsize = 64 regions = 0 Erase/Read/Write test: # flash_erase /dev/mtd1 0 0x10 Erasing 128 Kibyte @ 1e0000 -- 100 % complete # # # mtd_debug read /dev/mtd1 0x1e0000 0x10 rd Copied 16 bytes from address 0x001e0000 in flash to rd # hexdump rd -C 00000000 ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff |................| 00000010 # echo \"lan966x\" > wr # # # mtd_debug write /dev/mtd1 0x1e0000 0x8 wr Copied 8 bytes from wr to address 0x001e0000 in flash # # # mtd_debug read /dev/mtd1 0x1e0000 0x10 rd Copied 16 bytes from address 0x001e0000 in flash to rd # # # hexdump rd -C 00000000 6c 61 6e 39 36 36 78 0a ff ff ff ff ff ff ff ff |lan966x.........| 00000010 # # flash_erase /dev/mtd1 0 0x10 Erasing 128 Kibyte @ 1e0000 -- 100 % complete # mtd_debug read /dev/mtd1 0x1e0000 0x10 rd Copied 16 bytes from address 0x001e0000 in flash to rd # # # hexdump rd -C 00000000 ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff |................| 00000010 # # echo \"The W25N01GV (1G-bit) Serial SLC NAND Flash Memory provides a storage so lution for system with lmtd space\" > wr1 # ls -l wr1 -rw-r--r-- 1 root root 106 Jan 1 00:17 wr1 # # mtd_debug write /dev/mtd1 0x1e0000 106 wr1 Copied 106 bytes from wr1 to address 0x001e0000 in flash # # # mtd_debug read /dev/mtd1 0x1e0000 106 rd Copied 106 bytes from address 0x001e0000 in flash to rd # hexdump rd -C 00000000 54 68 65 20 57 32 35 4e 30 31 47 56 20 28 31 47 |The W25N01GV (1G| 00000010 2d 62 69 74 29 20 53 65 72 69 61 6c 20 53 4c 43 |-bit) Serial SLC| 00000020 20 4e 41 4e 44 20 46 6c 61 73 68 20 4d 65 6d 6f | NAND Flash Memo| 00000030 72 79 20 70 72 6f 76 69 64 65 73 20 61 20 73 74 |ry provides a st| 00000040 6f 72 61 67 65 20 73 6f 6c 75 74 69 6f 6e 20 66 |orage solution f| 00000050 6f 72 20 73 79 73 74 65 6d 20 77 69 74 68 20 6c |or system with l| 00000060 6d 74 64 20 73 70 61 63 65 0a |mtd space.| 0000006a # # flash_erase /dev/mtd1 0 0x10 Erasing 128 Kibyte @ 1e0000 -- 100 % complete # mtd_debug read /dev/mtd1 0x1e0000 0x106 rd Copied 262 bytes from address 0x001e0000 in flash to rd # hexdump rd -C 00000000 ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff |................| * 00000100 #","title":"LAN966x QSPI","component":"bsp","version":"2023.12","name":"lan966x-qspi","url":"/bsp/2023.12/supported-hw/lan966x-qspi.html","titles":[{"text":"LAN966x QSPI","hash":"_lan966x_qspi","id":1},{"text":"SoC Resources","hash":"_soc_resources","id":2},{"text":"Kernel configurations","hash":"_kernel_configurations","id":3},{"text":"Devicetree Configuration","hash":"_devicetree_configuration","id":4},{"text":"References","hash":"_references","id":5},{"text":"Example","hash":"_example","id":6},{"text":"UserSpace","hash":"_userspace","id":7},{"text":"Confirm instances are created","hash":"_confirm_instances_are_created","id":8},{"text":"Example on how to use","hash":"_example_on_how_to_use","id":9}]},"54":{"id":54,"text":"In case of a blank eMMC or NOR device, the following instructions can be applied for the initial bringup of the LAN966x SoC. The procedure described here will not work for the PCB8290, as this board is using a USB device as console and TFA monitor for lan966x it is using FlexCom3 which is a different device. For this board you will have to use a flash programmer. An alternative would be to wire cables to the board to get access to FlexCom3 to use the method described here. This is where you can find more details about enabling EVB image restoration: SoC Name Strapping Pins Monitor Mode LAN966x LAN966x Strapping Pins LAN966x UART Monitor This section will give an overview on how the TF-A monitor can be loaded to the SoC and used for e.g. writing a FIP or a GPT image on a flash device. The following description is based on a host PC running Ubuntu Linux: Set the strapping mode on the eval board to the \"Monitor Mode\" to enabling the UART monitor mode. See previous section for the details. Connect the eval board via USB cable to the host PC. The host machine should now enumerate a new TTY device like e.g. '/dev/ttyACM0'. From now on, no other application should be attached to this port (e.g. Putty or Termhub). Use a Chrome or MS Edge browser and open the fwu.html file in the address bar. This file can be found inside the artifacts archive. Please follow the instructions and the red markers, illustrated on the previous screenshot. Arrow #1, Press the [Connect Device] button Arrow #2, Choose the appropriate console interface in the dropdown menu Arrow #3, Press [Connect] button After successful connection, the 'BL1 bootstrap' page should be loaded. Arrow #1, Press the [Download BL2U] button After uploading and execution, the 'BL2U bootstrap' screen should be appear. The main purpose of this description is to a write a FIP file to a blank NOR device. Be aware, that only a FIP file format can be written to the NOR flash. Using a GPT file will not work here. When writing a FIP to the NOR, following methods can be used: Attach a SPI flasher to the board and write the FIP to the memory address offset of 0x0 (zero). Use the HTML5 based firmware update browser tool (fwu.html). This section will describe, how to proceed with the second approach here. Therefore no further programmer hardware is required. The following description assumes that the TF-A monitor mode has been started. Please follow according the instructions and the red markers, illustrated on the previous screenshot. Arrow #1, Choose now the proper .fip file [Choose File]. Arrow #2, Upload the file by pressing the [Upload file] button. Arrow #3, If the upload is finished, change dropdown value to [NOR Flash] device. Arrow #3, Afterwards the [Write FIP Image] button can be pressed. Wait till the write NOR procedure is completed. The process can take a few minutes. The progress can be checked anytime inside the [Log:] field. Change the strapping mode back to 0x1 or 0x4 for the NOR boot mode. See Reference Information Reset the board The main purpose of this description is to a write a GPT image to a blank eMMC or SDCard device. Writing this image will trigger following actions to the device: Create a GPT based partition table and all required partitions. Store a FIP file inside the 'fip' named partition. According the chosen GPT image, the BL33 can contain an 'UBoot' or a 'Linux' as data payload. A simple file copy of the GPT image to the eMMC or SDCard device will not work here ! A raw byte copy needs to be established here. The GPT image can be written to the eMMC device using following methods: Using UBoot with network and upload/write the GPT image with mmc commands Using external programmers and write the GPT image to the eMMC address offset of 0x0 (zero). Use the HTML5 based firmware update browser tool (fwu.html). This section will describe, how to proceed with the third approach here. Therefore no further programmer hardware is required. First boot into the TF-A monitor using the correct strapping pin setting. See Reference Information Please follow the instructions and the red markers, illustrated on the previous screenshot. Arrow #1, Choose now the proper .gpt file [Choose File] Arrow #2, Upload the file by pressing the [Upload file] button Arrow #3, If the upload is finished, check dropdown value is set to [eMMC] device Arrow #3, Afterwards the [Write Flash Image] button can be pressed Wait till the write procedure is completed. This process can take a few minutes. The progress can be checked anytime inside the [Log:] field. Change the strapping mode back to 0x0 or 0x3 for the eMMC boot mode. See the reference section for more info. Reset the board A FIP file can only be programmed, if the eMMC device is already partitioned. If not please follow the description of: Program eMMC with GPT Image This description is also valid for updating an existing FIP on the target. The FIP file can be written by using one of this following methods. Using UBoot console with network and upload/write the FIP using mmc commands Use the HTML5 based firmware update browser tool (fwu.html). We will focus here on the second approach. First Boot into the TF-A monitor using the correct strapping pin setting. See Reference Information Afterwards follow the description based on the BL2U bootstrap monitor page: The following instructions and the red markers illustrating the needed actions. Arrow #1, Choose now the proper .fip file [Choose File] Arrow #2, Upload the file by pressing the [Upload file] button Arrow #3, If the upload is finished, check dropdown value is set to [eMMC] device Arrow #3, Afterwards the [Write FIP Image] button can be pressed Wait till the write eMMC procedure is completed. This process can take a few minutes. The progress can be checked anytime inside the [Log:] field. Change the strapping mode back to 0x0 or 0x3 for the eMMC boot mode. See Reference Information Reset the board","title":"","component":"bsp","version":"2023.12","name":"lan966x-restore-secureboot","url":"/bsp/2023.12/supported-hw/lan966x-restore-secureboot.html","titles":[{"text":"1. Restoring SecureBoot Images","hash":"_restoring_secureboot_images","id":1},{"text":"1.1. Reference information","hash":"ref_info","id":2},{"text":"1.2. How to restore an image","hash":"_how_to_restore_an_image","id":3},{"text":"1.3. Enable TF-A-Monitor at FC3","hash":"tfa_monitor","id":4},{"text":"1.3.1. Program NOR with FIP","hash":"program_nor","id":5},{"text":"1.3.2. Program eMMC with GPT image","hash":"emmc_gpt","id":6},{"text":"1.3.3. Programm eMMC with FIP","hash":"_programm_emmc_with_fip","id":7}]},"55":{"id":55,"text":"The LAN966x SoC contains an internal CPU which has secure boot capabilities with an implementation based on TF-A (Trusted Firmware for ARM). This document uses many abbreviations, see the terms and abbreviations section for details. The BootROM in LAN966x offers the following high-level features: Boot firmware from: SPI-NOR SD-Card eMMC Firmware authentication based on public key ECSDA algorithm Firmware encryption using AES encryption with Secret Symmetric Key (SSK) Per-device unique key (BSSK) A bootrom UART monitor (fwu.html) with support for: Secure JTAG unlock Firmware update over UART OTP programming PCIe end-point initialization LAN966x always boots from the BootROM using the TF-A based boot stages. This is the case regardless of if secure boot is needed (enabled) or not. This means that it will be the TF-A Bootloaders that boots either U-Boot, the Linux kernel or another OS directly. This document, and the referenced sources are provided under the BSD-3-Clause license. This means that the content is provided as-is, and that Microchip cannot be held liable. See the License section for details. In LAN996x the DDR initialization is done as part of TF-A/BL2 and not in U-Boot. If you need to change DDR settings, then this shall be done in TF-A. The sources and binaries provided to enable secure boot contains demo keys which are not handled in a secure way. The symmetric shared keys, and the private keys are publicly available. If any of the advertised security features in this document are needed, then the demo keys must be replaced with new keys which shall then be kept confidential. The Trusted Firmware-A (TF-A) SW project is a multi-stage bootloader which utilizes the ARM TrustZone feature in ARM CPUs as an important part of the security concept. The TrustZone feature in ARM CPUs introduce the concept of a Secure-World (S) and Non-Secure-World (NS) and the ability to switch between these worlds. The various CPU peripherals inside the SoC, or connected to the SoC, are then classified as secure or non-secure. Secure-World has access to everything, while Non-Secure world only has access to the non-secure peripherals. In HW this is implemented as an additional bit in the address bus to specify the Secure/Non-Secure mode. Only Secure-World bus controllers can issue transactions with the Secure-Bit set. | S-Peripheral NS-Peripheral --------------------------+--------------------------------- S-World Bus Controller | Access Access NS-World Bus Controller | No Access Access When zooming in on the CPU, the S/NS worlds are often seen as an additional dimension to the exception levels (EL3 - EL0). This is illustrated below: The CPU can jump between the secure and non-secure worlds, and the two worlds can communicate with each other by using a shared buffer. This allows the same kind of application and use-cases as when having a dedicated security processor. The TF-A framework provides a multi-stage bootloader concept. There are many good reasons to go with a multi stage approach. To name a few points: Make the amount of code/functionality in the ROM as small as possible. Make components running within a given exception level (or having different life-time) self-contained. TF-A provides different bootloader stages for the different levels. Breaking complex stuff into smaller problems is always a good idea. Here is a list with an explanation of the different boot-loader stages: Trusted ROM Firmware (BL1) This is a binary built from the TF-A sources. Embedded as ROM code in the chip, execute in secure world EL3/SVC-MON. Purpose: Do basic platform initialization Read BL2 from boot media into secure memory, authenticate it, run it. Trusted Boot Firmware (BL2) This is a binary built from the TF-A sources. Loaded from a FIP (see below), and runs from on-chip secure memory, execute in secure world EL1/SVC-MON. Purpose: Will do additional platform initialization including: TrustZone configuration DDR initialization Load BL3x images into DDR memory, authenticate, decrypt etc. Run EL3 Runtime Software EL3 Runtime Software (BL32) This is a binary built from the TF-A sources. Loaded from from a FIP and runs as Secure EL3/SVC. This firmware stays resident in memory, and the services offered here can be called later on. Purpose: Initialize the secure run-time service, typically PSCI and Trusted HW RNG. Authenticate, decrypt and run BL33. Non-trusted Firmware (BL33) BL33 is not built from the TF-A sources, but is a binary which is stored in a FIP and will be loaded (and executed) by TF-A. This is typically U-Boot, a direct booting Linux kernel or some other OS. Runs from DDR memory in non-secure world as EL1/SVC Firmware update image (BL2u) This is a binary built from the TF-A sources. Compared to the other images, this is special, as it is not used during normal boot, and it is not loaded from a FIP stored in flash. This image replaces the normal BL2. It is loaded by BL1 via the UART-monitor using a Serial port. Like BL2, it is authenticated by BL1 before it is being executed. Purpose: Provide an updateable stepping stone for board provisioning. The FIP or Firmware Image Package is the file format TF-A uses to contain all the artifacts. This includes the BL2 and BL3x images, certificates, and configuration files. The FIP is generated as part of the build process. It is written in flash in binary format without any transformation, and the BL1 ROM knows how to locate and load a particular image type in the FIP. It can be compared to a very simple read-only file-system, as it contains only very basic information of the individual files: type, offset and size. The TF-A project includes 2 host tools: fiptool: which makes it easy to perform common operations (create, display, add/del/mod individual images) in fip files. cert_create: which makes it easy to generate the keys and certificates needed to establish the chain of trust. In the build process the make target is called certtool, but the resulting binary is called cert_create. The FIP generation process where the fiptool and cert_create are used is shown below: As shown above, the cert_create tool reads the BLOBs as input, it reads the keys from the disk (or generate them on the fly), and creates the needed certificates. Once the certificates have been generated, the normal fiptool can bundle both the original BLOBs and the associated certificates into the FIP which can then be authenticated. To bind devices to this chain of trust, the SHA or the public root key needs to be written into OTP. When reading console output, browsing the source code, or when using the fiptool or the cert_create tool, it is often necessary to reference the individual images. The table below provide the mapping between the defines used in the C code, the numeric values as they will appear in the trace output, and finally the command-line argument which is understood by the fiptool (and cert_create). C-Define Num fiptool arg BL2_IMAGE_ID 1 --tb-fw BL32_IMAGE_ID 4 --tos-fw BL33_IMAGE_ID 5 --nt-fw TRUSTED_BOOT_FW_CERT_ID 6 --tb-fw-cert TRUSTED_KEY_CERT_ID 7 --trusted-key-cert TRUSTED_OS_FW_KEY_CERT_ID 10 --tos-fw-key-cert NON_TRUSTED_FW_KEY_CERT_ID 11 --nt-fw-key-cert TRUSTED_OS_FW_CONTENT_CERT_ID 14 --tos-fw-cert NON_TRUSTED_FW_CONTENT_CERT_ID 15 --nt-fw-cert FW_CONFIG_ID 31 --fw-config This section provides the hands-on steps needed to build TF-A for LAN966x. Most modern Linux distributions can be used for building TF-A, but to ensure consistent results a docker image can be used for running all the build-commands. This project provides a dr (docker run) script to make it easy to run a command in the desired docker container. The dr script is provided by the https://github.com/microchip-ung/docker-run project which also offers more details on how it works. The folder /opt/mscc must exist before you can use the dr script. This folder is used for caching BSP packages. The short story is that prefixing a command with dr will cause it to run in a docker container. You can test if it works just by typing dr ls and check the result. Sources can be obtained from https://github.com/microchip-ung/arm-trusted-firmware using git clone. A release with both source packages and binaries are provided as release artifacts and can be found at https://github.com/microchip-ung/arm-trusted-firmware/releases. To build the TF-A binaries for LAN966x, navigate to the root of the project and run the following command: $ dr ./scripts/build.rb -p lan966x_b0 This will by default do incremental builds. The --clean flag will delete the artifacts for a given platform/variant and cause the next build to be complete rebuild. This will use the demo keys from the ./keys folder, which are not kept confidential. Any secure products must generate new keys and keep them secret. By default the build script will load a pre-build U-Boot binary into the BL33 blob. The build.rb script offers a set of options to tweak the default settings. The --help option shown below provides an overview of possible options, and the following sub-sections provides some additional details. $ dr ./scripts/build.rb --help Usage: build.rb [options] -p, --platform Build for given platform -r, --root-of-trust Set ROT key file --create_keys Create new keys --bl31-key Set BL31 key --bl32-key Set BL32 key --bl33-key Set BL33 key --non_trusted_world-key Set non_trusted_world key --scp_bl2-key Set scp_bl2 key --trusted_world-key Set trusted_world key --encrypt-images List of encrypted images, eg BL2,BL32,BL33 --encrypt-ssk Enable encryption with SSK --encrypt-bssk Enable encryption with BSSK --fw-nvctr Set Secure FW NV counter for FIP --ntfw-nvctr Set Non-trusted FW NV counter for FIP -x, --variant X BL2 variant (noop) -l, --linux-as-bl33 Enable direct Linux booting --bl33-blob BL33 binary -d, --debug Enable DEBUG --release Disable DEBUG -n, --[no-]norimg Create a NOR image file with the FIP (lan966x_a0 only) -g, --[no-]gptimg Create a GPT image file with the FIP -c, --clean Do a 'make clean' instead of normal build -C, --coverity stream Enable coverity scan -R, --[no-]ramusage Report RAM usage --extra1 Add BL32 EXTRA1 image to FIP --extra2 Add BL32 EXTRA2 image to FIP The --platform option is used to select the desired platform. This argument must be provided, and when building for LAN966x it must be set to: lan966x_b0: By default the U-Boot binary provided by the BSP will be used as BL33 content. As an alternative to U-Boot, the --linux-as-bl33 option can be used which will cause the BSP provided brsdk_standalone_arm.itb blob to be used as BL33 content. This itb file contains a Linux kernel and a Device Tree, and will allow the system to boot Linux without U-Boot. Sometimes it is desirable to provide the BL33 content directly, this can be done using --bl33-blob . The blob can be either a itb/fit image or a executable binary. If it is not a fit then it will be relocated to address 0x60200000 (in DDR) and once authenticated the BL32 will do a memory-jump to that address. If it is a fit then is is handled as described in the following section. Be aware that the BL33 blob will be aggregated into the FIP, and if the blob is sufficiently large the resulting image may not fit into the NOR flash (in this case eMMC can be used for storing the FIP). When using a fit image, the FIT image is placed in DDR NS start (0x60200000), just like the \"flat\" binary type image. When the fit image is parsed, individual components are identified in this order: Device tree Root fs (optional) Kernel The two first components need to be moved to an area outside where the fit image itself resides - i.e. the load address cannot overwrite the fit image itself. The kernel (being loaded last) is allowed to overwrite the fit image itself, so the load address will typically be the NS DDR start. Apart from the above guides, the following fit image restrictions apply: Compression is not supported for any data (the kernel loader itself may use compression). A load address outside NS DDR area is not allowed. If the fit image contain more than one configuration node, the fit_config OTP tag can be use to name the fit configuration node to use. Otherwise, the default config will be used - as is custom with fit images. Once the device tree according to the chosen configuration is loaded into the proper place, the device tree is \"fixed up\" with these changes: A /memory node is added/modified to containing the memory size according to the platform NS DDR location and size. If the device tree property /chosen/bootargs is not present, a default command line according to the platform is added. (LAN966X: console=ttyS0,115200 root=/dev/mmcblk0p4 rw rootwait loglevel=8). FIT example /dts-v1/; / { description = \"Image Tree Source file for lan966x direct BL33 boot\"; #address-cells = ; images { kernel { description = \"Kernel\"; data = /incbin/(\"arch/arm/boot/zImage\"); type = \"kernel\"; arch = \"arm\"; os = \"linux\"; compression = \"none\"; load = ; entry = ; }; fdt_lan9662_ung8291_0_at_lan966x { description = \"Flattened Device Tree\"; data = /incbin/(\"arch/arm/boot/dts/lan966x_pcb8291.dtb\"); type = \"flat_dt\"; arch = \"arm\"; load = ; compression = \"none\"; }; fdt_lan9662_ung8290_0_at_lan966x { description = \"Flattened Device Tree\"; data = /incbin/(\"arch/arm/boot/dts/lan966x_pcb8290.dtb\"); type = \"flat_dt\"; arch = \"arm\"; load = ; compression = \"none\"; }; ... more device trees ... ramdisk { description = \"Ramdisk\"; data = /incbin/(\"rootfs.squashfs\"); type = \"ramdisk\"; arch = \"arm\"; os = \"linux\"; compression = \"none\"; load = ; }; }; configurations { default = \"lan9662_ung8291_0_at_lan966x\"; lan9662_ung8291_0_at_lan966x { description = \"Kernel with DT fdt_lan9662_ung8291_0_at_lan966x\"; kernel = \"kernel\"; fdt = \"fdt_lan9662_ung8291_0_at_lan966x\"; ramdisk = \"ramdisk\"; }; lan9662_ung8290_0_at_lan966x { description = \"Kernel with DT fdt_lan9662_ung8290_0_at_lan966x\"; kernel = \"kernel\"; fdt = \"fdt_lan9662_ung8290_0_at_lan966x\"; ramdisk = \"ramdisk\"; }; ... more configuration nodes for other device trees ... }; }; The unpacking of the fit image will display trace log messages if trace is enabled. And example is shown here. FIT boot trace log INFO: Unpacking FIT image @ 0x60200000 INFO: fit: Looking for 'default' config INFO: fit: Using 'lan9662_ung8291_0_at_lan966x' config INFO: fit: Loading fdt from 0x6063c340 to 0x67e00000, 13615 bytes INFO: fit: Loading kernel from 0x602000c8 to 0x60200000, 4440496 bytes INFO: fit: Adding DT bootargs 'console=ttyS0,115200 root=/dev/mmcblk0p4 rw rootwait loglevel=8' INFO: Preparing to boot 32-bit Linux kernel INFO: SP_MIN: Preparing exit to normal world INFO: Enabling SRAM NS access [ 0.000000] Booting Linux on physical CPU 0x0 By default the keys used for authentication are loaded from the files in the ./keys folder. The following table provides an overview of the command-line options, the default file and a description of its usage: CMD-option Default value Description --rot keys/rotprivk_ecdsa.pem Confidential key used to sign the TRUSTED_BOOT_FW_CERT and the TRUSTED_KEY_CERT. This file contains the ROT_PRIV_KEY and the ROT_PUB_KEY. The public key is embedded into the both the TRUSTED_BOOT_FW_CERT and the TRUSTED_KEY_CERT - which makes these certificates self-signed. --rot_pub keys/rotpk_ecdsa.der Non-confidential public key derived from keys/rotprivk_ecdsa.pem. --rot_sha keys/rotpk_ecdsa_sha256.bin Non-confidential SHA of the public key. This is the key which needs to be loaded into the OTP_TBBR_ROTPK otp field. --bl31_key keys/bl31_ecdsa.pem Not in use for LAN966x, but part of TF-A framework. --bl32_key keys/bl32_ecdsa.pem Confidential key used to sign the bl32 blob (BL32_IMAGE_ID). This file contains the TRUSTED_OS_FW_CONTENT_CERT_PRIV_KEY and the TRUSTED_OS_FW_CONTENT_CERT_PUB_KEY. The public key is embedded into the TRUSTED_OS_FW_KEY_CERT. --bl33_key keys/bl33_ecdsa.pem Confidential key used to sign the bl33 blob (BL33_IMAGE_ID). This file contains the NON_TRUSTED_FW_CONTENT_CERT_PRIV_KEY and the NON_TRUSTED_FW_CONTENT_CERT_PUB_KEY. The public key is embedded into the NON_TRUSTED_FW_KEY_CERT. --non_trusted_world_key keys/non_trusted_world_ecdsa.pem Confidential key used to sign the NON_TRUSTED_FW_KEY_CERT certificate. This file contains the NON_TRUSTED_WORLD_PRIV_KEY and the NON_TRUSTED_WORLD_PUB_KEY. The public key is embedded into the TRUSTED_KEY_CERT. --scp_bl2_key keys/scp_bl2_ecdsa.pem Not in use for LAN966x, but part of TF-A framework. --trusted_world_key keys/trusted_world_ecdsa.pem Confidential key used to sign the TRUSTED_OS_FW_CONTENT_CERT certificate. The list of keys above are provided in demo versions as part of the sources and build artifacts. The demo keys are not kept confidential (in fact they are published), and must be replaced with a new set of keys. To generate new keys, delete they above keys in the ./keys folder, and run the build script with the --create_keys options, like show below: $ dr ./scripts/build.rb --create_keys The tool will not update existing keys. Existing keys must be deleted before new keys can be generated. Check the time stamp and the content of the newly generated keys to confirm that they have been updated. The key content can be show using the openssl command: $ dr openssl ec -in ./keys/rotprivk_ecdsa.pem -text read EC key Private-Key: (256 bit) priv: cb:eb:29:43:74:12:54:96:43:e6:42:48:13:8f:5b: cf:8d:c7:8b:da:b8:c8:64:ae:f7:43:c1:94:ce:a6: 11:fb pub: 04:02:a6:68:7e:f2:fe:c9:07:1a:2c:a9:c2:33:b4: bb:89:34:99:7d:b6:30:f9:1f:6c:a8:ae:5c:6d:c5: 28:04:48:47:66:1e:e4:36:26:ad:5d:1d:83:45:41: 7d:f2:62:e6:e1:a9:2e:d1:c7:cd:0e:c2:62:01:db: 94:53:ca:46:c5 ASN1 OID: prime256v1 NIST CURVE: P-256 writing EC key -----BEGIN EC PRIVATE KEY----- MHcCAQEEIMvrKUN0ElSWQ+ZCSBOPW8+Nx4vauMhkrvdDwZTOphH7oAoGCCqGSM49 AwEHoUQDQgAEAqZofvL+yQcaLKnCM7S7iTSZfbYw+R9sqK5cbcUoBEhHZh7kNiat XR2DRUF98mLm4aku0cfNDsJiAduUU8pGxQ== -----END EC PRIVATE KEY----- By default the build script is using the default trusted and non-trusted counters for the platform. (2 and 3 for LAN966X). In order to create a new firmware version that cannot be downgraded, you can set the specifically by incrementing the counter for the environment that has been fixed. Use --fw-nvctr to explicitly set the \"Trusted FW NV counter\" --ntfw-nvctr to explicitly set the \"Non-Trusted FW NV counter\" to explictly set the version counter embedded in the FIP. Example: $ dr ./scripts/build.rb -p lan966x_b0 --fw-nvctr 3 --ntfw-nvctr 4 By default images are signed but not encrypted. Image encryption can be enabled using the --encrypt-images argument. The listed images will then be encrypted using the key provided with --encrypt-ssk . Example: $ dr ./scripts/build.rb -p lan966x_b0 \\ --encrypt-images BL2,BL32,BL33 \\ --encrypt-ssk ./keys/ssk.bin The ssk key is symmetric, which means that the same key used for encryption must also be programmed into the OTP (OTP_TBBR_SSK) where it is used for decryption. The key can be any 32byte value, and is typically randomly generated. The build.rb tool offer a --encrypt-bssk flag. This is for debug/development usage and should never be used in production. Instead the image should be bound by the bl2u utility or via bl32 using the HUK generated in OTP. The build.rb script will always build a FIP image. This FIP can be programmed directly into the NOR image, but to be able to boot from eMMC, the eMMC image needs to be prepared with a partition table (gpt) , and the FIP needs to be written into a partition (as opposed to being written to a fixed offset in the eMMC). The build script can prepare a complete image file with gpt partition table and the FIP image filled in the fip and the fip.bak partition. the -n, --[no-]norimg is only for internal prototypes and should not be used. This chapter provides a more in-depth description of TF-A technology used in LAN966x. Understanding these details are the essential prerequisites to design secure products based on LAN966x, and to understand the following sections with LAN966x specific implementation. TF-A uses a hierarchy of certificates to authenticate the different images in the FIP. This hierarchy is shown at the following image: As shown on the drawing, BL2 is authenticated by TRUSTED_BOOT_FW_CERT. TRUSTED_BOOT_FW_CERT is authenticated by the root of trust (the ROT_PUB_KEY). And the ROT_PUB_KEY is finally authenticated by the OTP SHA provided by the platform. The key hierarchy limits the usage of the root key, and therefore also the attack surface. If one of the downstream keys is leaked, it is possible to do key revocation. Besides the certificate based authentication, the authentication framework will also check the version number of the certificates against a non-volatile counter, provided by the platform. The version number in the certificate is covered by the signature which ensures the integrity, and the platform provides non-volatile counters that are created in such way that they can only increment. The authentication process will first validate the signature and then continue to compare the version of the certificate against the platform counter. Here is how the comparison is performed: certificate_version == platform_counter: All is good: The boot process can continue. certificate_version > platform_counter: The platform_counter will be incremented to the value of certificate_version: The boot process can continue. certificate_version < platform_counter: Fail as this is considered a rollback attack: The boot process will stop here, and the system needs to be updated with a new image matching the version of the platform counter. The purpose of this mechanism is to have a way of performing revocation of certificates. If one of the private keys has been revealed, new certificates needs to be issued and provisioned. But the old firmware will still pass the public key authentication, and the only way to prevent an attacker from rolling back the firmware, is to have such a counter. The ROT (root of trust) key does not have any version numbers as it cannot be updated. TF-A uses 2 none-volatile counters: trusted_nv_ctr and non_trusted_nv_ctr. The non_trusted_fw_key_cert and non_trusted_fw_content_cert certificates are checked against the non_trusted_nv_ctr, all other (except ROT) are evaluated against trusted_nv_ctr. To sign a certificate the private key is needed, but to authenticate a certificate only the public key is needed. The cert_create tool needs access to both the public and private keys. The public keys are needed, because they are aggregated into the certificates, and the private keys are needed to do the signing. The following picture illustrates the entire signing process done by cert_create. The green boxes are binaries generated by the compiler. cert_create will calculate the SHA, feed the SHA into the certificate, and sign the certificate. The trusted and non-trusted counters is version numbers. These version numbers are given at the command-line, and will be stored in the certificates as well. The trust hierarchy is created by feeding the SHA of 1 public key, into a parent certificate. The 2 certificates: TRUSTED_BOOT_FW_CERT and TRUSTED_KEY_CERT are authenticated by the root-of-trust public certificate. When BL1 loads the BL2 and the FW_CONFIG images from the FIP, it needs to authenticate the images, and the related certificates to establish a chain of trust. This is shown in the image below: When BL2 loads the BL32 and BL33 images from the FIP, it needs to authenticate the images, and the related certificates to establish a chain of trust. This is shown in the image below: Firmware encryption can be used to keep the firmware confidential, and protect against an attacker reading the content of the flash devices and extracting information from that. When enabled, firmware will be encrypted using AES-128-GCM, which uses symmetric keys. Two types of firmware keys are supported: ssk (secret symmetric key): Here the same key is used to encrypt the firmware (when creating the FIP image) and decrypting the firmware when loading running on the target. bssk (binding secret symmetric key): Here the ssk is used when encrypting the image and generating the FIP. But when the image is loaded on the board, it is bound to the board before it is being programmed to the flash. The binding operation will use the ssk to decrypt the image in memory, and then encrypt the image using a key derived from the huk (hardware unique key). When the system is booting, the BL1/BL2 will decrypt the image using the key derived from the huk. Only the individual images are encrypted, but the FIP container stays unencrypted. This is not a security risk, as the FIP is just a container that does not have any sensitive information. When images are encrypted an encryption header is prepended to the image. This header contains a flag indicating if the image has been bound or not. (Indicating using ssk or bssk). Using bssk for firmware encryption instead of ssk have the following advantages: Firmware cannot be copied/cloned from one board to another using an external flash programmer. If the firmware are licensed to a specific board, then it is an advantage to ensure that board firmware cannot be copied. If the ssk is leaked, an attacker cannot decrypt the image found in the flash memory of a board - the attacker will have to find another way to get the image before it is programmed (intercept an update session). If a bssk key is leaked, it will only impact one board. The disadvantage of using bssk is the additional complications of manufacturing the boards, as it is not possible to do this with pre-programmed images. Firmware binding can be done from the fwu.html tool or from Linux following the guide here. The core of TF-A is platform independent, and each platform needs to provide the platform specific implementation and drivers. The platform specific layer defines how the SW (and ROM) interface with the hardware, and how the keys in the system are kept safe. LAN966x offers 4 strapping pins which is the most fundamental configuration interface of the device. The values of the strapping pins are sampled by the boot process to decide what features to enable and use. Strapping Pins LAN966x B0 ============== ========== 0000 (0x0) eMMC + FC3 (for trace) 0001 (0x1) QSPI0 + FC3 (for trace) 0010 (0x2) SDCard + FC3 (for trace) 0011 (0x3) eMMC 0100 (0x4) QSPI0 0101 (0x5) SDCard 0110 (0x6) PCIe EndPoint 0111 (0x7) Reserved 1000 (0x8) TF-A Monitor at FC3 1001 (0x9) Reserved 1010 (0xa) Reserved 1011 (0xb) Reserved 1100 (0xc) Reserved 1101 (0xd) Reserved 1110 (0xe) Reserved 1111 (0xf) SPI Client In this table FC3 means FlexCOM3, running in UART mode configured as 115200/8/N/1 with the RX signal at GPIO52/Alt-1 and TX signal at GPIO53/Alt-1. For modes 0000-0010 the FC3 terminal is used as to emit debug traces, and in mode 1000 a bidirectional machine interface is implemented. Mode 0011 to 0101 perform the same boot procedure, but with trace disabled to improve performance. When booting from MMC, the ROM code will look for a GPT (GUID Partition Table). The partition table is parsed, and the code will look for a partition called fip which is assumed to contain the FIP. If booting from the fip partition fails, the fip.bak partition will be attempted as a fallback. When booting from NOR, the FIP is expected to be located at offset 0 (zero). No fallback is offered. This mode is used to initialize the SoC as a PCIe end-point. This mode can read certain configuration options from OTP. This mode does not require any flash memory to be available on the board. This strapping mode will cause the BootROM to start a machine friendly UART protocol at FC3. The fwu.html tool is offered as a client tool using this mode. The features offered by the ROM monitor is very limited, and in most cases a bl2u image is downloaded via the UART and once authenticated it will take over the console and will offer an extended feature set. The fwu.html tool can facilitate OTP access (this depends on what functionality is embedded in the bl2u blob), which can reveal secret keys. In this strapping mode, the CPU is not booting at all (the BootROM is not executed), and a SPI client interface is initialized at pin A14, B14 and B15. This SPI interface allows a host CPU to read/write register in the switch-core. The one-time-programmable memory provided by the SoC is an important source of configuration data. It is the only persistent memory not depending on any external components and it is used for many different purposes. The OTP can be divided into regions, and each region can be write protected, and if write-protected, also read-protected. The OTP contains secret keys, which must be protected to keep firmware confidential. The offered mechanism to keep such keys confidential is the read-protect setting on the given region. The region containing the keys must be marked as read-protected by the BL2 before it hands over control to BL32. Each OTP region contains a number of OTP attributes, which may then contain a number of OTP fields. This is all covered in the following subsections. The OTP shall be divided into the following 8 regions: REG. START END Secure Emu Description ---- ------ ------ ------ --- ----------------------------------------- 0 0x0000 0x003F No No Manufacturing data 1 0x0040 0x0043 No No OTP Write protect 2 0x0044 0x0063 No No OTP Region Definitions 3 0x0064 0x00FF No No Insecure configuration without emulation 4 0x0100 0x01FF Yes Yes Keys and other security related 5 0x0200 0x023F No Yes Non-volatile secure counters 6 0x0240 0x07FF No No Fixed position user-space / custom usage 7 0x0800 0x2000 No No Key-value store (semi-updateable) The secure flag indicates if the area contains secret information, and hence must be configured to remove read access before leaving the BL2. The Emu flag indicate if OTP emulation can be supported. The following sub-section documents the intended use of the regions, and highlights some important points for each of these. The configuration of OTP-regions are kept in the OTP itself. It is the customer responsibility to program the regions. The Linux user-space otp tool can be used for this purpose. The following OTP table shows the pre-defined OTP attributes, used by either HW, BL1 and/or BL2. BL3x, U-Boot, Linux or other clients can also access the OTP, if the access control of the given regions allow it. Begin End Size RTL EMU REG. Name ------ ------ ---- --- --- ---- ---------------- 0x0000 0x0003 4 X 0 OTP_PRG 0x0004 0x0004 1 X 0 FEAT_DIS 0x0005* 0x0006 2 X 0 PARTID 0x0007 0x0007 1 0 TST_TRK 0x0008 0x000f 8 0 SERIAL_NUMBER 0x0010 0x0013 4 X 0 SECURE_JTAG 0x0014 0x001a 7 0 WAFER_TRK reserved 5 bytes 0x0020 0x0029 10 X 0 JTAG_UUID reserved 6 bytes 0x0030 0x0037 8 0 TRIM reserved 8 bytes 0x0040 0x0043 4 X 1 PROTECT_OTP_WRITE 0x0044 0x0063 32 X 2 PROTECT_REGION_ADDR 0x0064 0x0067 4 3 OTP_PCIE_FLAGS 0x0068 0x006B 4 3 OTP_PCIE_DEV 0x006c 0x0073 8 3 OTP_PCIE_ID 0x0074 0x009b 40 3 OTP_PCIE_BARS reserved 100 bytes 0x0100 0x011f 32 X 4 OTP_TBBR_ROTPK 0x0120 0x013f 32 X 4 OTP_TBBR_HUK 0x0140 0x015f 32 X 4 OTP_TBBR_EK 0x0160 0x017f 32 X 4 OTP_TBBR_SSK 0x0180 0x019f 32 X 4 OTP_SJTAG_SSK reserved 4 bytes 0x01a4 0x01a5 2 X 4 OTP_STRAP_DISABLE_MASK reserved 90 bytes 0x0200 0x021f 32 X 5 OTP_TBBR_NTNVCT 0x0220 0x023f 32 X 5 OTP_TBBR_TNVCT In the above table the RTL column indicate that the OTP value is read and used by the digital HW in the SoC before SW is running (under reset). This attribute is a 16 bit mask. Each bit in the mask corresponds to one of the strapping modes. By default the mask is set to all zeroes which means that all strapping modes are allowed. If a customer wants to disable one or more strapping modes the corresponding bits can be set in the mask and the ROM code will refuse to boot into the indicated modes. This attribute sets the maximum supported link speed 1 = 2.5 GT/s 2 = 5.0 GT/s Any higher value will automatically be downgraded to 5.0 GT/s This attribute sets the basic PCIe device information. See https://pcisig.com/sites/default/files/files/PCI_Code-ID_r_1_11__v24_Jan_2019.pdf for details on the fields. It is a 32 bit word that consists of 4 fields of 8 bit each that encodes: device base class code (at bit offset 24) device sub class code (at bit offset 16) device programming interface (at bit offset 8) device programming interface revision id (at bit offset 0) This attribute sets the PCIe device ID information. It consists of a 64 bit word that hold 4 16 bit fields: device id (bit offset 0) vendor id (bit offset 16) subsystem device id (bit offset 32) subsystem vendor id (bit offset 48) This attribute sets the PCIe device Base Address Register information. The layout consists of 10 32 bit words like this: bar0 address bar1 address bar2 address bar3 address bar4 address bar5 address bar0 size bar1 size bar2 size bar3 size bar4 size bar5 size If both BAR address and size are 0 then a suitable default will be used instead. If a BAR address is non-zero and the size is zero then the BAR is disabled. If a BAR address and size both are non-zero then these will configure the BAR. This 8 byte attribute consists of a set of bitfields that are programmed in the factory at production time, based on measurements on the device. These values will be read at boot and applied as 'corrections' to various hardware features. This is the table of bitfields in the TRIM attribute: Bits Name Description 63:43 Reserved Not programmed 42:37 UVOV_GPIOB_TRIM Trimming value for UVOV_GPIOB. Corresponding register: UVOV:UVOV_CFG[0] 36:31 UVOV_BOOT_TRIM Trimming value for UVOV_BOOT. Corresponding register: UVOV:UVOV_CFG[1] 30:25 UVOV_RGMII_TRIM Trimming value for UVOV_RGMII. Corresponding register: UVOV:UVOV_CFG[4] 24:19 UVOV_GPIOA_TRIM Trimming value for UVOV_GPIOA. Corresponding register: UVOV:UVOV_CFG[5] In LAN966x FW_CONFIG is a binary blob, created during firmware compilation. The format of the blob is as follows: Byte range Size Description =========== ====== ================== 0x000-0x17F 0x0180 OTP-Emulation data 0x180-0x1FF 0x0080 Config space The image must at-least be at 512 (0x200) bytes. Only the first 512 bytes are used by BL1. The image can be extended at a later point in time, but this will only affect the BL2 usage. The OTP Emulation portion is covered in details in the OTP Emulation section. The content of the configuration space is generated based on the content from the scripts/fw_data.yaml file. - field: LAN966X_FW_CONF_MMC_CLK_RATE size: 32 value: 25000000 - field: LAN966X_FW_CONF_MMC_BUS_WIDTH size: 8 value: 0 # MMC_BUS_WIDTH_4 - field: LAN966X_FW_CONF_QSPI_CLK size: 8 value: 30 - field: LAN966X_FW_CONF_MMC_SPEED_MODE size: 8 value: 3 # SDMMC_TIMING_HS - field: LAN966X_FW_CONF_MMC_TX_TUNING_PHASE size: 8 value: 12 # Maserati HW Tx phase default value OTP Emulation is a facility to experiment with OTP settings, without making them permanent. The settings are stored in flash memory, and logical or-ed with the data from the HW OTP. If the HW OTP is empty (all zeros), then all bits can be emulated. The OTP emulation loads data from the FW_CONFIG_ID image. This feature is intended for 2 scenarios: Developers wanting to try out many different OTP configurations, but only having a limited amount of boards: OTP emulation makes it possible to test many new sets of configurations before selecting the optimal set. Users that are about to program the OTP, but want to test out the settings before committing changes that cannot be reversed. The OTP emulation data can be comitted using the fwu.html tool, or manually applied using the Linux otp command. Only the fields marked in the EMU column in the OTP attributes table can be emulated. Loading the FW_CONFIG_ID image is tricky because: When the board is provisioned for secure boot, this image must be authenticated. This image includes OTP emulation data, which may influence if the board shall be considered as provisioned for secure boot. The procedure to load this image is illustrated at the figure below: To ensure that keys are kept private, and that the execution of BL1, BL2 and BL32 cannot be tampered with these images must be run from secure memory. LAN966x have 128kb of on-chip SRAM (Secure RAM), and on-the-fly DDR memory encryption. BL1 executes from ROM directly, but uses the SRAM for static RW data and stack. BL1 will then load BL2 from flash memory into SRAM, and BL2 will then execute from SRAM and also use it for its static RW data and stack. BL2 will initialize the DDR memory, and setup a secure and a non-secure partition. The secure partition uses on-the-fly DDR encryption, and can only be accessed from the secure world. Once completed the BL2 loads the BL32 from flash memory into the secure DDR memory. DDR encryption causes a longer latency to the DDR memory, and is therefore not used for the entire DDR memory. BL32, which is executing from secure DDR memory, will then wipe the contents of the SRAM, and reconfigure the Trust Zone Controller to let all of the SRAM be accessible from the Non-Secure world. This is important for users of the RTE, as the RTE feature needs access to the SRAM. LAN966x supports a secure JTAG port which is configured via the SECURE_JTAG OTP attribute. The data-sheet documents the encoding of SECURE_JTAG. Once programmed the JTAG port HW will wake up in one of the following modes: Open: The JTAG port is operating normally. Secure mode 1: The JTAG port will respond to a boundary scan, but is otherwise unresponsive (locked down). In this mode it is possible to unlock the port (move the JTAG port to the open state) using a challenge-response mechanism running over JTAG. Secure mode 2: The JTAG port will be completely unresponsive (locked down). In this mode it is possible to unlock it (move it to open state) using a challenge-response mechanism running over JTAG. Closed: The JTAG port is disabled and cannot be enabled. If one of the secure-modes is enabled, then the JTAG port can be unlocked using a challenge/response. The challenges is a random 32 byte blob generated by the LAN996x device, and the response to unlock is a sha256(challenge-data OTP_SJTAG_SSK) (where OTP_SJTAG_SSK is the content of the OTP field, and + is a concatenation of the 2 blobs). The scripts/sjtag-challenge.rb in the TF-A repository can be used to calculate the response to a challenge. The fwu.html tool can be used to generate the challenge and unlock the JTAG port if the correct response is given. Unlock from Linux can be done using the instructions here. The TF-A project for LAN966x provides a template to lower the effort to build a set of secure artifacts. But the deliverables from Microchip are from an open and transparent system, which with a few changes can be turned into a secure set of artifacts. Following is a set of guidelines on how to turn the open-system into a set of secure boot artifacts: Understand what you are doing, and do not blindly trust us. Generate new keys and keep the private and the shared/symmetric keys secret (but still available as they will be needed to build potential new versions). Review how keys are generated, and evaluate if the methods provided in here are good enough for you need. How to keep keys secret is beyond the scope of this document, but look for good praxis in the industry. Use the certificate hierarchy to limit the exposure of the private keys. The root-of-trust should only be used very rarely and can be kept offline. Only increment the NV counters when a released version poses a security breach. The BL2U functionality provided in this project is a potential security breach, as it can expose the content of the OTP. Do one of the following: Change it to make it such that it will not be able to dump the OTP content. Do not generate it (delete it after each build). Treat it as a shared/symmetric key as it can be used to read out the keys from OTP. Do not give it to anyone who do not have these keys already. To build a secure product the manufacturing procedure must include the steps to program the OTP with needed keys and settings. A pre-request for this is to generate the keys and secure artifacts as explained in Secure artifacts Move to a trusted environment, where private and shared keys can be handled without risk of leaks. Initialize the OTP with the following content (either via BL2U / fwu.html or my using the otp Linux user-space utility. Regions must be defined (program PROTECT_REGION_ADDR) Following keys shall be programmed with the prepared content: OTP_TBBR_ROTPK, OTP_TBBR_SSK and OTP_SJTAG_SSK. Enable secure JTAG by programming SECURE_JTAG. Program the OTP_TBBR_HUK with unknown random data. Optional: disable any strap modes not needed by writing OTP_STRAP_DISABLE_MASK. Write protect region 4 by updating the content of PROTECT_OTP_WRITE. IMPORTANT: This is not only for write-protect, this is also needed to prevent non-secure read-access of region 4. NOTE: Additional regions can be write protected, but region 5 must remain writeable! Provision the firmware image in flash as needed. AES Advanced Encryption Standards ATE Automatic Test Equipment. Device used in SoC production and test. BL1 Boot Loader 1: In secure immutable ROM (Trusted ROM Firmware) BL2 Boot Loader 2: In secure on-chip RAM, temporary (Trusted Boot Firmware) BL31 Boot Loader 31: Resident secure services (ARM v8) BL32 Boot Loader 32: Resident secure services (ARM v7) BL33 Boot Loader 33: Typically U-Boot. trusted Firmware) BSSK Binding Secret Symmetric Key DT Device Tree eMMC Embedded MultiMediaCard FIP Firmware Image Package FIT Flattened Image Tree GPT GUID Partition Table HUK Hardware Unique Key JTAG Joint Test Action Group, interface for testing and debugging NS Non-Secure World OP-TEE Open Portable Trusted Execution Environment OS Operation System OTP One-Time-Programmable Memory PCIe Peripheral Component Interconnect Express PSCI Power State Coordination Interface RNG Random Number Generator ROT Root of Trust RTE Real-Time Engine. Device used for real-time equipment control. RTL Register-Transfer Level S Secure World SD-Card Secure Digital Card SHA Secure Hash Algorithm family SJTAG Secure JTAG SPI Serial Peripheral Interface SRAM Secure Ram SSK Secret Symmetric Key TBBR Trusted Board Boot Requirements TF-A Trusted Firmware for ARM UART Universal Asynchronous Receiver-Transmitter This document is provided under the BSP-3-Clause license (where swoftware is replaced with document). The BSD-3-Clause license has been chosen here as it is the same license used by the TF-A project. Here is the license covering this file/document: Copyright (c) 2022, Microchip Technology Inc. and its subsidiaries. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. - Neither the name of Arm nor the names of its contributors may be used to endorse or promote products derived from this document without specific prior written permission. THIS DOCUMENT IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS DOCUMENT, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"LAN966x Secure Boot","component":"bsp","version":"2023.12","name":"lan966x-tfa","url":"/bsp/2023.12/supported-hw/lan966x-tfa.html","titles":[{"text":"LAN966x Secure Boot","hash":"_lan966x_secure_boot","id":1},{"text":"Introduction","hash":"_introduction","id":2},{"text":"TF-A architecture","hash":"_tf_a_architecture","id":3},{"text":"TF-A Bootloaders (BLx)","hash":"_tf_a_bootloaders_blx","id":4},{"text":"Firmware Image Package (FIP)","hash":"_firmware_image_package_fip","id":5},{"text":"FIP Image IDs","hash":"_fip_image_ids","id":6},{"text":"Getting started with TF-A for LAN966x","hash":"_getting_started_with_tf_a_for_lan966x","id":7},{"text":"Build environment","hash":"_build_environment","id":8},{"text":"Getting sources and releases","hash":"_getting_sources_and_releases","id":9},{"text":"Building","hash":"_building","id":10},{"text":"Platform selection","hash":"_platform_selection","id":11},{"text":"BL33 content","hash":"_bl33_content","id":12},{"text":"Loading FIT/ITBs as BL33","hash":"_loading_fititbs_as_bl33","id":13},{"text":"Configuration selection","hash":"_configuration_selection","id":14},{"text":"Device Tree modifications","hash":"_device_tree_modifications","id":15},{"text":"Authentication keys","hash":"_authentication_keys","id":16},{"text":"Rollback protection (NV-Counters)","hash":"_rollback_protection_nv_counters","id":17},{"text":"Image encryption","hash":"_image_encryption","id":18},{"text":"Image generation","hash":"_image_generation","id":19},{"text":"TF-A in Details","hash":"_tf_a_in_details","id":20},{"text":"Certificate hierarchy","hash":"_certificate_hierarchy","id":21},{"text":"Revocation and Rollback protection","hash":"_revocation_and_rollback_protection","id":22},{"text":"Image signing in details","hash":"_image_signing_in_details","id":23},{"text":"BL1 Chain of Trust verification","hash":"_bl1_chain_of_trust_verification","id":24},{"text":"BL2 Chain of Trust verification","hash":"_bl2_chain_of_trust_verification","id":25},{"text":"Firmware encryption","hash":"_firmware_encryption","id":26},{"text":"LAN966x TF-A Platform support","hash":"_lan966x_tf_a_platform_support","id":27},{"text":"Strapping modes","hash":"_strapping_modes","id":28},{"text":"Booting from MMC (0000, 0010, 0011  and 0101)","hash":"_booting_from_mmc_0000_0010_0011_and_0101","id":29},{"text":"Booting from NOR (0001 and 0100)","hash":"_booting_from_nor_0001_and_0100","id":30},{"text":"PCIe End Point (0101)","hash":"_pcie_end_point_0101","id":31},{"text":"TF-A Monitor (1000)","hash":"_tf_a_monitor_1000","id":32},{"text":"SPI Client (1111)","hash":"_spi_client_1111","id":33},{"text":"OTP","hash":"_otp","id":34},{"text":"OTP Regions","hash":"_otp_regions","id":35},{"text":"OTP attributes","hash":"_otp_attributes","id":36},{"text":"OTP attribute: OTP_STRAP_DISABLE_MASK","hash":"_otp_attribute_otp_strap_disable_mask","id":37},{"text":"OTP attribute: OTP_PCIE_FLAGS","hash":"_otp_attribute_otp_pcie_flags","id":38},{"text":"OTP attribute: OTP_PCIE_DEV","hash":"_otp_attribute_otp_pcie_dev","id":39},{"text":"OTP attribute: OTP_PCIE_ID","hash":"_otp_attribute_otp_pcie_id","id":40},{"text":"OTP attribute: OTP_PCIE_BARS","hash":"_otp_attribute_otp_pcie_bars","id":41},{"text":"OTP attribute: TRIM","hash":"_otp_attribute_trim","id":42},{"text":"Firmware Config (FW_CONFIG)","hash":"_firmware_config_fw_config","id":43},{"text":"OTP Emulation","hash":"_otp_emulation","id":44},{"text":"Loading of FW_CONFIG_ID","hash":"_loading_of_fw_config_id","id":45},{"text":"Secure RAM","hash":"_secure_ram","id":46},{"text":"Secure JTAG","hash":"_secure_jtag","id":47},{"text":"Guidelines for preparing secure artifacts","hash":"secureartifacts","id":48},{"text":"Guideline Secure provisioning","hash":"_guideline_secure_provisioning","id":49},{"text":"TERMS and ABBREVIATIONS","hash":"term","id":50},{"text":"License","hash":"_license","id":51}]},"56":{"id":56,"text":"Using the PSCI/SMCCC interface available in Linux along with the mchp_tfa_ctl driver, it is possible to control the following features of TFA firmware: Secure JTAG Firmware encryption with BSSK key See also PSCI documentation Following kernel config options should be enabled to use TFA_CTL interface CONFIG_MCHP_TFA_CTL - tfa_ctl driver config option. The option is enabled by default. The option will select these related kernel options CONFIG_ARM_PSCI CONFIG_CRYPTO_SHA256 There is no device tree node for the driver itself, but it requires that the psci node is present. / { ... psci { compatible = \"arm,psci-1.0\"; method = \"smc\"; }; ... }; First, you should ensure you have booted a Linux kernel with the mchp_tfa_ctl driver. You can do so by grepping the dmesg kernel log and/or querying sysfs: # dmesg | grep tfa_ctl [ 0.148936] tfa_ctl: PSCI driver v.0.0.0 # ls -l /sys/class/misc/tfa_ctl/ total 0 -r--r--r-- 1 root root 4096 Jan 1 00:01 dev -rw-r--r-- 1 root root 0 Jan 1 00:01 fw_bind --w------- 1 root root 0 Jan 1 00:01 fw_bind_trigger drwxr-xr-x 2 root root 0 Jan 1 00:01 power --w------- 1 root root 32 Jan 1 00:01 sjtag_key -r--r--r-- 1 root root 8 Jan 1 00:01 sjtag_status --w------- 1 root root 0 Jan 1 00:01 sjtag_unlock lrwxrwxrwx 1 root root 0 Jan 1 00:01 subsystem -> ../../../../class/misc -rw-r--r-- 1 root root 4096 Jan 1 00:01 uevent A good place to start is to ensure that SJTAG is enabled. You can do so by reading the sjtag_status file. It contains the two SJTAG registers: CTL and INT_STATUS: # od -t x4 /sys/class/misc/tfa_ctl/sjtag_status 0000000 0000024d 00000000 0000010 Here, the 0x24d value (b'001001001101') is a typical value for when SJTAG is enabled in mode 1. Refer to the register list for details. To do a proper unlock, you must provide the (binary) 32-byte SJTAG key in the write-only file sjtag_key. The default value is all zeroes. After writing the key, you can trigger an unlock by writing (anything) to the sjtag_unlock file, as below. The return value from the write signal the result of the unlock operation. # cd /tmp # dd if=/dev/zero of=key count=1 bs=32 1+0 records in 1+0 records out # dd if=key of=/sys/class/misc/tfa_ctl/sjtag_key 0+1 records in 0+1 records out # echo 1 > /sys/class/misc/tfa_ctl/sjtag_unlock # # od -t x4 /sys/class/misc/tfa_ctl/sjtag_status 0000000 00000847 00000000 0000010 After unlocking, the value 0x847 indicates that the SJTAG is now unlocked. You should now be able to attach a JTAG interface. In this context Firmware Binding descibes the operation of taking a firmware image encrypted with the SSK key, decrypting and re-encrypting with the BSSK instead. As the BSSK is a device-local, unique key, this ensures that the firmware cannot be reproduced. (Note that the BSSK is derived from the HUK key). The firmware binding process is able to use OTP emulation data, if this is deployed. If not, the binding will use the OTP data directly. Firmware binding requires the SSK and BSSK for decryption and encryption. These may be any binary value (32 bytes long). The firmware binding is done using a sysfs file as holding bay for the image, and a sysfs to trigger the actual bind operation. The commands below illustrate taking an SSK encrypted image off the MMC and re-encrypting with the BSSK key. # cd /tmp # dd if=/dev/mmcblk0p1 of=data sha256sum data dd if=data of=/sys/class/misc/tfa_ctl/fw_bind bs=1k echo 1 > /sys/class/misc/tfa_ctl/fw_bind_trigger dd if=/sys/class/misc/tfa_ctl/fw_bind of=bound bs=1k 2048+0 records in 2048+0 records out # sha256sum data sha256sum bound 559a603550297e47a83fa2a9a42c4cb3216e8588d68ae488dc511abc6025ca88 data # dd if=data of=/sys/class/misc/tfa_ctl/fw_bind bs=1k 1024+0 records in 1024+0 records out # echo 1 > /sys/class/misc/tfa_ctl/fw_bind_trigger # dd if=/sys/class/misc/tfa_ctl/fw_bind of=bound bs=1k 1024+0 records in 1024+0 records out # sha256sum bound 41d6f577e343c81cbd05552c8bc2408e99815d41683e98873acedbe7b8f197ca bound As can be seen, the firmware binding will not change the size of the image, but it will change the image data. After a successful operation, the image may now be written to the boot media of choice. If the operation fails, the fw_bind_trigger write will fail. The kernel log will provide information about the problem. # echo 1 > /sys/class/misc/tfa_ctl/fw_bind_trigger sh: write error: Input/output error # dmesg | tail -1 [ 3357.425863] misc tfa_ctl: tfa_ctl: Bind failed: 0xffffffec The error codes are described here: 0xfffffff0 FW_FIP_HDR Header check of FIP failed 0xffffffef FW_FIP_ALIGN FIP needs to be produced with FIP_ALIGN 0xffffffee FW_FIP_INCOMPLETE FIP is incomplete (truncated, garbled) 0xffffffed FW_TOC_TERM_MISSING FIP does not have a ToC terminator entry 0xffffffec FW_NOT_SSK_ENCRYPTED FIP must be encrypted with SSK 0xffffffeb FW_SSK_FAILURE Failed to obtain SSK key 0xffffffea FW_DECRYPT Failed to decrypt FIP image 0xffffffe9 FW_BSSK_FAILURE Failed to obtain BSSK key 0xffffffe8 FW_ENCRYPT Failed to encrypt FIP image The firmware image use memory resources until purged from the fw_bind sysfs file. The purge is done by writing an empty image to the file. # dd if=/dev/null of=/sys/class/misc/tfa_ctl/fw_bind 0+0 records in 0+0 records out","title":"LAN966x TFA_CTL","component":"bsp","version":"2023.12","name":"lan966x-tfa_ctl","url":"/bsp/2023.12/supported-hw/lan966x-tfa_ctl.html","titles":[{"text":"LAN966x TFA_CTL","hash":"_lan966x_tfa_ctl","id":1},{"text":"SoC Resources","hash":"_soc_resources","id":2},{"text":"Kernel configurations","hash":"_kernel_configurations","id":3},{"text":"Devicetree Configuration","hash":"_devicetree_configuration","id":4},{"text":"Using the TFA_CTL driver","hash":"_using_the_tfa_ctl_driver","id":5},{"text":"Controlling SJTAG","hash":"_controlling_sjtag","id":6},{"text":"Firmware Binding","hash":"_firmware_binding","id":7}]},"57":{"id":57,"text":"LAN966x SoC supports one instance of the UDPHS (USB High Speed Device Port) controller. Following kernel config options should be enabled to use LAN966x UDPHS: CONFIG_USB_GADGET - USB gadget config option CONFIG_USB_ATMEL_USBA - LAN966x USB device driver config option If using a static built-in gadget, the gadget choosen from a precomposed one provided by the kernel must be enabled. For instance, if you need the serial over USB gadget: CONFIG_USB_G_SERIAL - USB serial gadget config option This is the default option used by the kernels that are provided by the BSP. If using a gadget configured from the user-space using ConfigFS. The USB functions used must be enabled. CONFIG_USB_CONFIGFS - USB ConfigFS config option USB_CONFIGFS_ACM - USB CDC-ACM (serial overs USB) config option When a built-in gadget is used, it cannot be overriden from the user-space by an ConfigFS one. The Serial USB gadget can be used as a kernel console. CONFIG_U_SERIAL_CONSOLE - USB serial as a kernel console config option To activate the console on the USB serial gadget the kernel parameter console=ttyGS0,115200 must be present. Kernel messages can be available on the USB serial gadget with CONFIG_U_SERIAL_CONSOLE enabled. Kernel boot messages are only available if the built-in gadget is used. If a ConfigFS gadget is used, only messages sent by the Kernel after the ConfigFS setup from user-space will be available. Make sure that on the Host PC, ModemManager daemon is disabled, otherwise on the console will be printed some unexpected characters. To enable LAN966x UDPHS, following configurations are required in device tree: compatible string must be set to microchip,lan9662-udc and atmel,sama5d3-udc as a fallback. reg property must be set to and . interrupts property must be set to . clocks property must be set to , . clock-names must be set to pclk and hclk. Atmel High-Speed USB device controller DT Documentation Following example shows how the LAN966x UDPHS controller should be defined in DT: dtsi file: udc: usb@e0808000 { compatible = \"microchip,lan9662-udc\", \"atmel,sama5d3-udc\"; reg = , ; interrupts = ; clocks = , ; clock-names = \"pclk\", \"hclk\"; status = \"disabled\"; }; dts file changes: &gpio { udc_pins: ucd-pins { /* VBUS_DET B */ pins = \"GPIO_8\"; function = \"usb_slave_b\"; }; }; &udc { pinctrl-0 = ; pinctrl-names = \"default\"; atmel,vbus-gpio = ; status = \"okay\"; }; If a built-in USB gadget is used, the USB gadget functionnality is present without particular settings. For instance, with the Serial USB gadget, /dev/ttyGS0 is available on the target. With the Ethernet USB gadget, ip link command lists the interface, usually usb0. On the host side, the USB device is enumerated and available. For instance, with the Serial USB gadget, /dev/ttyACM0 is present. Using a ConfigFS gadget needs some settings from the user-space. Here is a example showing how to setup the CDC-ACM (serial over USB) gadget. # load libcomposite module. modprobe libcomposite # mount configfs mkdir -p /tmp/config mount none -t configfs /tmp/config # Create gadget mkdir /tmp/config/usb_gadget/my_gadget cd /tmp/config/usb_gadget/my_gadget # Set Vendor and Product IDs (Should be set to real values) echo \"0xabcd\" > idVendor echo \"0x1234\" > idProduct # Set serial number, manufacturer and product string mkdir strings/0x409 echo SN000000 > strings/0x409/serialnumber echo Microchip > strings/0x409/manufacturer echo LAN966x > strings/0x409/product # Create the configuration mkdir configs/c.1 mkdir configs/c.1/strings/0x409 echo Configuration > configs/c.1/strings/0x409/configuration # Set some configuration attributes echo 120 > configs/c.1/MaxPower # Create the function mkdir functions/acm.usb0 # Associate the function with the configuration ln -s functions/acm.usb0 configs/c.1 # Enable the gadget echo 200000.usb > UDC The available UDC devices that can be used to enable the gadget can be found using ls /sys/class/udc/. After the execution of these commands, the '/dev/ttyGS0' appears on the target. On the host side, the device is enumerated. $ dmesg ... [349700.188862] usb 3-4.4.3: new high-speed USB device number 64 using xhci_hcd [349700.266456] usb 3-4.4.3: New USB device found, idVendor=abcd, idProduct=1234, bcdDevice= 5.17 [349700.266468] usb 3-4.4.3: New USB device strings: Mfr=1, Product=2, SerialNumber=3 [349700.266471] usb 3-4.4.3: Product: LAN966x [349700.266474] usb 3-4.4.3: Manufacturer: Microchip [349700.266476] usb 3-4.4.3: SerialNumber: SN000000 [349700.273296] cdc_acm 3-4.4.3:1.0: ttyACM0: USB ACM device ... Linux USB gadget configured through configfs Gadget Testing At startup a shell can be attached to the USB serial device. This can be done adding the following line in /etc/inittab ttyGS0::respawn:/sbin/getty -L ttyGS0 0 vt100 or any other configuration settings depending on your init system (busybox init, systemd, …​) related to TTY shell configuration.","title":"LAN966x UDPHS","component":"bsp","version":"2023.12","name":"lan966x-udphs","url":"/bsp/2023.12/supported-hw/lan966x-udphs.html","titles":[{"text":"LAN966x UDPHS","hash":"_lan966x_udphs","id":1},{"text":"SoC Resources","hash":"_soc_resources","id":2},{"text":"Kernel configurations","hash":"_kernel_configurations","id":3},{"text":"Built-in USB gadget","hash":"_built_in_usb_gadget","id":4},{"text":"ConfigFS USB gadget","hash":"_configfs_usb_gadget","id":5},{"text":"Kernel console on Serial USB gadget","hash":"_kernel_console_on_serial_usb_gadget","id":6},{"text":"Devicetree Configuration","hash":"_devicetree_configuration","id":7},{"text":"References","hash":"_references","id":8},{"text":"Example","hash":"_example","id":9},{"text":"UserSpace","hash":"_userspace","id":10},{"text":"ConfigFS gadget","hash":"_configfs_gadget","id":11},{"text":"References","hash":"_references_2","id":12},{"text":"Attach a shell to the USB serial device.","hash":"_attach_a_shell_to_the_usb_serial_device","id":13}]},"58":{"id":58,"text":"LAN966X SoC have 5 FLEXCOMs(Flexible Serial Communication Controller). In order to use flexcom SPI interface, a specific flexcom should be configured in SPI mode. Following kernel config options should be enabled to use LAN966x flexcom SPI interface: CONFIG_SPI_ATMEL - SPI driver config option. CONFIG_MTD, CONFIG_MTD_SPI_NOR or CONFIG_MTD_SPI_NAND based on NOR/NAND flash present. To use Flexcom SPI interface, following configurations are required in device tree. Each of the flexcom flx0, flx1, flx2, flx3 and flx4 nodes can be configured in SPI mode ATMEL_FLEXCOM_MODE_SPI to use SPI interface. compatible string must be set to atmel,at91rm9200-spi. reg property must be set with register address and length as . GPIO pins for TXD, RXD and SCK should be configured to pinctrl-0 property. Also add cs0 and cs1 pins, if present. List of possible pin mappings are as in below table: FLEXCOM Node DT SCK node SCK pin DT RXD node RXD pin DT TXD node TXD pin flx0 fc0_a_sck_pins GPIO8 fc0_a_rxd_pins GPIO9 fc0_a_txd_pins GPIO10 flx0 fc0_b_sck_pins GPIO24 fc0_b_rxd_pins GPIO25 fc0_b_txd_pins GPIO26 flx0 fc0_c_sck_pins GPIO61 fc0_c_rxd_pins GPIO62 fc0_c_txd_pins GPIO63 flx1 fc1_a_sck_pins GPIO11 fc1_a_rxd_pins GPIO12 fc1_a_txd_pins GPIO13 flx1 fc1_b_sck_pins GPIO33 fc1_b_rxd_pins GPIO34 fc1_b_txd_pins GPIO35 flx1 fc1_c_sck_pins GPIO46 fc1_c_rxd_pins GPIO47 fc1_c_txd_pins GPIO48 flx2 fc2_a_sck_pins GPIO14 fc2_a_rxd_pins GPIO15 fc2_a_txd_pins GPIO16 flx2 fc2_b_sck_pins GPIO43 fc2_b_rxd_pins GPIO44 fc2_b_txd_pins GPIO45 flx3 fc3_a_sck_pins GPIO17 fc3_a_rxd_pins GPIO18 fc3_a_txd_pins GPIO19 flx3 fc3_b_sck_pins GPIO51 fc3_b_rxd_pins GPIO52 fc3_b_txd_pins GPIO53 flx3 fc3_c_sck_pins GPIO30 fc3_c_rxd_pins GPIO31 fc3_c_txd_pins GPIO32 flx4 fc4_a_sck_pins GPIO20 fc4_a_rxd_pins GPIO21 fc4_a_txd_pins GPIO22 flx4 fc4_b_sck_pins GPIO56 fc4_b_rxd_pins GPIO57 fc4_b_txd_pins GPIO58 flx4 fc4_c_sck_pins GPIO64 fc4_c_rxd_pins GPIO65 fc4_c_txd_pins GPIO66 interrupts property must set with interrupt details. Interrupt number[CPU INTR] corresponding to a flexcom must be configured as defined in below table: FLEXCOM ID Shared Peripheral Interrupt CPU INTR flx0 80 48 flx1 81 49 flx2 82 50 flx3 83 51 flx4 84 52 Note that Shared peripheral interrupt lines start at index ID32. So, CPU INTR must be calculated as [Shared peripheral interrupt number - 32]. Input clock clocks property must be set to &nic_clk. Note that NIC clock(200Mhz) is clock used by AXI, AHB fabric and APB bridges which connects all th peripherals. clock-names must be set to spi_clk. SPI driver Implementation Flexcom DT documentation SPI DT documentation Following example explains how a flexcom SPI should be defined in DT to use a SPI-NOR flash present on it: &flx3 { atmel,flexcom-mode = ; microchip,flx-shrd-pins = ; microchip,flx-cs = ; status = \"okay\"; spi0: spi@400 { compatible = \"atmel,at91rm9200-spi\"; reg = ; interrupts = ; #address-cells = ; #size-cells = ; clocks = ; clock-names = \"spi_clk\"; pinctrl-0 = , , , ; pinctrl-names = \"default\"; dmas = , ; dma-names = \"rx\", \"tx\"; atmel,use-dma-rx; atmel,use-dma-tx; atmel,fifo-size = ; status = \"okay\"; flash: flash@0 { compatible = \"jedec,spi-nor\"; reg = ; spi-max-frequency = ; }; }; }; Following example explains how to use SPI from linux userspace with spidev: Enable CONFIG_SPI_SPIDEV kernel configuration. &flx3 { atmel,flexcom-mode = ; microchip,flx-shrd-pins = ; microchip,flx-cs = ; status = \"okay\"; spi0: spi@400 { compatible = \"atmel,at91rm9200-spi\"; reg = ; interrupts = ; #address-cells = ; #size-cells = ; clocks = ; clock-names = \"spi_clk\"; pinctrl-0 = , , , ; pinctrl-names = \"default\"; dmas = , ; dma-names = \"rx\", \"tx\"; atmel,use-dma-rx; atmel,use-dma-tx; atmel,fifo-size = ; status = \"okay\"; spi@0 { compatible = \"spidev\"; reg = ; spi-max-frequency = ; }; }; }; MTD utility in buildroot provides rich set of tests for validating SPI NOR/NAND flashes. To confirm if spi flash is created: Check if a mtd device is created in /dev directory. Run mtd_debug info /dev/mtd0 command to check flash details. To confirm if spidev device is created: Check if spidev device is created in /dev directory as /dev/spidev0.0. # ls -l /dev/spi* crw------- 1 root root 153, 0 Jan 1 00:00 /dev/spidev0.0 # dmesg | grep spi [ 4.678015] atmel_spi e0064400.spi: Using dma0chan0 (tx) and dma0chan1 (rx) for DMA transfers [ 4.686861] atmel_spi e0064400.spi: Using FIFO (32 data) [ 4.703046] spi-nor spi0.0: sst26vf016b (2048 Kbytes) # mtd_debug info /dev/mtd0 mtd.type = MTD_NORFLASH mtd.flags = MTD_CAP_NORFLASH mtd.size = 2097152 (2M) mtd.erasesize = 4096 (4K) mtd.writesize = 1 mtd.oobsize = 0 regions = 0 Block erase/read/write test: # mtd_debug erase /dev/mtd0 0 65536 Erased 65536 bytes from address 0x00000000 in flash # mtd_debug read /dev/mtd0 0 65536 read # Copied 65536 bytes from address 0x00000000 in flash to read # # dd if=/dev/urandom of=64k bs=64k count=1 1+0 records in 1+0 records out # # mtd_debug write /dev/mtd0 0 65536 64k Copied 65536 bytes from 64k to address 0x00000000 in flash # # mtd_debug read /dev/mtd0 0 65536 read Copied 65536 bytes from address 0x00000000 in flash to read # # sha1sum read 64k a3e850ee411aeec2a47c409d866a33a49771a76e read a3e850ee411aeec2a47c409d866a33a49771a76e 64k Command to list all the available mtd devices: # cat /proc/mtd dev: size erasesize name mtd0: 00200000 00001000 \"spi0.0\"","title":"LAN966x SPI","component":"bsp","version":"2023.12","name":"lan966x-spi","url":"/bsp/2023.12/supported-hw/lan966x-spi.html","titles":[{"text":"LAN966x SPI","hash":"_lan966x_spi","id":1},{"text":"SoC Resources","hash":"_soc_resources","id":2},{"text":"Kernel configurations","hash":"_kernel_configurations","id":3},{"text":"Devicetree Configuration","hash":"_devicetree_configuration","id":4},{"text":"References","hash":"_references","id":5},{"text":"Example","hash":"_example","id":6},{"text":"UserSpace","hash":"_userspace","id":7},{"text":"Confirm instances are created","hash":"_confirm_instances_are_created","id":8},{"text":"Example on how to use","hash":"_example_on_how_to_use","id":9}]},"59":{"id":59,"text":"LAN966X SoC have 5 FLEXCOMs(Flexible Serial Communication Controller). In order to use flexcom USART interface, a specific flexcom should be configured in USART mode. Following kernel config options should be enabled to use LAN966x flexcom USART interface: CONFIG_MFD_AT91_USART - USART driver config option. To use Flexcom USART interface, following configurations are required in device tree. Each of the flexcom flx0, flx1, flx2, flx3 and flx4 nodes can be configured in USART mode ATMEL_FLEXCOM_MODE_USART to use USART interface. compatible string must be set to atmel,at91sam9260-usart. reg property must be set with register address and length as . GPIO pins for TXD and RXD pins should be configured to pinctrl-0 property. Also add cts and rts pins, if present. List of possible TXD and RXD pin mappings are as in below table: FLEXCOM Node DT RXD node RXD pin DT TXD node TXD pin flx0 fc0_a_rxd_pins GPIO9 fc0_a_txd_pins GPIO10 flx0 fc0_b_rxd_pins GPIO25 fc0_b_txd_pins GPIO26 flx0 fc0_c_rxd_pins GPIO62 fc0_c_txd_pins GPIO63 flx1 fc1_a_rxd_pins GPIO12 fc1_a_txd_pins GPIO13 flx1 fc1_b_rxd_pins GPIO34 fc1_b_txd_pins GPIO35 flx1 fc1_c_rxd_pins GPIO47 fc1_c_txd_pins GPIO48 flx2 fc2_a_rxd_pins GPIO15 fc2_a_txd_pins GPIO16 flx2 fc2_b_rxd_pins GPIO44 fc2_b_txd_pins GPIO45 flx3 fc3_a_rxd_pins GPIO18 fc3_a_txd_pins GPIO19 flx3 fc3_b_rxd_pins GPIO52 fc3_b_txd_pins GPIO53 flx3 fc3_c_rxd_pins GPIO31 fc3_c_txd_pins GPIO32 flx4 fc4_a_rxd_pins GPIO21 fc4_a_txd_pins GPIO22 flx4 fc4_b_rxd_pins GPIO57 fc4_b_txd_pins GPIO58 flx4 fc4_c_rxd_pins GPIO65 fc4_c_txd_pins GPIO66 interrupts property must set with interrupt details. Interrupt number[CPU INTR] corresponding to a flexcom must be configured as defined in below table: FLEXCOM ID Shared Peripheral Interrupt CPU INTR flx0 80 48 flx1 81 49 flx2 82 50 flx3 83 51 flx4 84 52 Note that Shared peripheral interrupt lines start at index ID32. So, CPU INTR must be calculated as [Shared peripheral interrupt number - 32]. Input clock clocks property must be set to &nic_clk. Note that NIC clock(200Mhz) is clock used by AXI, AHB fabric and APB bridges which connects all th peripherals. clock-names must be set to usart. GPIO flexcom shared pins should be configured as per board design. Following example shows how a flexcom USART should be defined in PCB8291 DT. On PCB8291, Flexcom3 USART is used as console. chosen { stdout-path = \"serial1:115200n8\"; }; aliases { serial0 = &usart0; serial1 = &usart3; }; &flx0 { atmel,flexcom-mode = ; status = \"okay\"; usart0: serial@200 { compatible = \"atmel,at91sam9260-usart\"; reg = ; interrupts = ; clocks = ; clock-names = \"usart\"; pinctrl-0 = , ; pinctrl-names = \"default\"; atmel,fifo-size = ; status = \"okay\"; }; }; &flx3 { atmel,flexcom-mode = ; status = \"okay\"; usart3: serial@200 { compatible = \"atmel,at91sam9260-usart\"; reg = ; interrupts = ; clocks = ; clock-names = \"usart\"; pinctrl-0 = , ; pinctrl-names = \"default\"; atmel,fifo-size = ; status = \"okay\"; }; }; Check if a tty device is created in /dev/ directory. This can be also be verified by executing dmesg | tail (on host PC) once the board is powered-up. Connect to console using minicom -s /dev/ttyACM0 Following demonstrates above DT flexcom examples on PCB8291 board: . Flexcom3, which is being used as console. . Flexcom0, which is standalone uart device. In order to use flexcom3 USART as console, add console=ttyS1,115200 to uboot bootargs environment variable and pass it to the kernel, then this usart will become the console. First identify and connect to /dev/ttyACMx (Here x is port number) on Host machine. For Linux users, minicom application can be used to connect to console. # dmesg | tail [1043817.472935] usb 3-9: USB disconnect, device number 33 [1043817.762295] debugfs: Directory '09' with parent 'devices' already present! [1043817.890248] usb 3-9: new high-speed USB device number 35 using xhci_hcd [1043818.038704] usb 3-9: New USB device found, idVendor=03eb, idProduct=6124, bcdDevice= 1.10 [1043818.038707] usb 3-9: New USB device strings: Mfr=0, Product=0, SerialNumber=0 [1043818.039989] cdc_acm 3-9:1.0: ttyACM0: USB ACM device [1043818.230372] igb 0000:01:00.0 eth10: igb: eth10 NIC Link is Down [1043822.614597] igb 0000:01:00.0 eth10: igb: eth10 NIC Link is Up 1000 Mbps Full Duplex, Flow Control: RX/TX # # minicom -s /dev/ttyACM0 [? Trying to boot from SPI U-Boot 2019.04-linux4sam_6.2-icp-00228-g2bdd7b58fc-dirty (Apr 28 2021 - 08:28:52 +0200) CPU: SAMA7 Crystal frequency: 0 MHz CPU clock : 0 MHz Master clock : 0 MHz DRAM: 1 GiB lan966x_pinctrl_probe done 0 MMC: sdhci-host@e0830000: 0, emmc@e0830000: 1 Loading Environment from SPI Flash... SF: Detected sst26vf016b with page size 256 Bytes, erase size 4 KiB, total 2 MiB OK In: serial Out: serial Err: serial Net: Warning: switch@0 (eth0) using random MAC address - a2:17:30:13:8a:46 eth0: switch@0 m => dhcp 0x64000000 fit_icpu.itb BOOTP broadcast 1 BOOTP broadcast 2 BOOTP broadcast 3 DHCP client bound to address 10.99.10.174 (940 ms) Using switch@0 device TFTP from server 10.99.10.1; our IP address is 10.99.10.174 Filename 'fit_icpu.itb'. Load address: 0x64000000 LoadingiB/s done Bytes transferred = 17356055 (108d517 hex) m => printenv baudrate=115200 bootargs=console=ttyS1,115200 root=/dev/ram0 loglevel=7 uio_pdrv_genirq.of_id=generic-uio bootdelay=3 bootfile=fit_icpu_build_623.itb dnsip=10.99.10.1 ethact=switch@0 fdt_high=0xffffffff fdtcontroladdr=9fb7e068 fileaddr=64000000 filesize=108d517 gatewayip=10.99.10.1 initrd_high=0xffffffff ipaddr=10.99.10.174 netmask=255.255.255.0 serverip=10.99.10.1 Environment size: 369/65532 bytes m => bootm 0x64000000#lan9662_ung8291_0_at_lan966x ## Loading kernel from FIT Image at 64000000 ... Using 'lan9662_ung8291_0_at_lan966x' configuration Trying 'kernel' kernel subimage Description: Kernel Type: Kernel Image Compression: gzip compressed Data Start: 0x640000c8 Data Size: 4114018 Bytes = 3.9 MiB Architecture: ARM OS: Linux Load Address: 0x60208000 Entry Point: 0x60208000 Verifying Hash Integrity ... OK ## Loading ramdisk from FIT Image at 64000000 ... Using 'lan9662_ung8291_0_at_lan966x' configuration Trying 'ramdisk' ramdisk subimage Description: Ramdisk Type: RAMDisk Image Compression: uncompressed Data Start: 0x64404c74 Data Size: 13139968 Bytes = 12.5 MiB Architecture: ARM OS: Linux Load Address: 0x68000000 Entry Point: unavailable Verifying Hash Integrity ... OK Loading ramdisk from 0x64404c74 to 0x68000000 ## Loading fdt from FIT Image at 64000000 ... Using 'lan9662_ung8291_0_at_lan966x' configuration Trying 'fdt_lan9662_ung8291_0_at_lan966x' fdt subimage Description: Flattened Device Tree Type: Flat Device Tree Compression: uncompressed Data Start: 0x643ec7f4 Data Size: 18808 Bytes = 18.4 KiB Architecture: ARM Load Address: 0x67e00000 Verifying Hash Integrity ... OK Loading fdt from 0x643ec7f4 to 0x67e00000 Booting using the fdt blob at 0x67e00000 Uncompressing Kernel Image ... OK Using Device Tree in place at 67e00000, end 67e07977 Starting kernel ... [ 0.000000] Booting Linux on physical CPU 0x0 [ 0.000000] Linux version 5.15.25-18810-g70353fd4af6b-dirty (root@kavya-HP-Compaq-6000-Pro-SFF-PC) (arm-linux-gnueabi-gcc (Ubuntu/L2 [ 0.000000] CPU: ARMv7 Processor [410fc075] revision 5 (ARMv7), cr=10c5387d [ 0.000000] CPU: div instructions available: patching division code [ 0.000000] CPU: PIPT / VIPT nonaliasing data cache, VIPT aliasing instruction cache [ 0.000000] OF: fdt: Machine model: Microchip EVB - LAN9662 [ 0.000000] Memory policy: Data cache writealloc [ 0.000000] cma: Reserved 128 MiB at 0x98000000 [ 0.000000] Zone ranges: [ 0.000000] Normal [mem 0x0000000060000000-0x000000008fffffff] [ 0.000000] HighMem [mem 0x0000000090000000-0x000000009fffffff] [ 0.000000] Movable zone start for each node [ 0.000000] Early memory node ranges [ 0.000000] node 0: [mem 0x0000000060000000-0x000000009fffffff] [ 0.000000] Initmem setup node 0 [mem 0x0000000060000000-0x000000009fffffff] [ 0.000000] percpu: Embedded 11 pages/cpu s14668 r8192 d22196 u45056 [ 0.000000] Built 1 zonelists, mobility grouping on. Total pages: 260608 [ 0.000000] Kernel command line: console=ttyS1,115200 root=/dev/ram0 loglevel=7 uio_pdrv_genirq.of_id=generic-uio [ 0.000000] Dentry cache hash table entries: 131072 (order: 7, 524288 bytes, linear) [ 0.000000] Inode-cache hash table entries: 65536 (order: 6, 262144 bytes, linear) [ 0.000000] mem auto-init: stack:off, heap alloc:off, heap free:off [ 0.000000] Memory: 888780K/1048576K available (8192K kernel code, 608K rwdata, 2928K rodata, 1024K init, 185K bss, 28724K reserved) [ 0.000000] rcu: Hierarchical RCU implementation. [ 0.000000] rcu: RCU event tracing is enabled. [ 0.000000] rcu: RCU restricting CPUs from NR_CPUS=4 to nr_cpu_ids=1. [ 0.000000] rcu: RCU calculated value of scheduler-enlistment delay is 10 jiffies. [ 0.000000] rcu: Adjusting geometry for rcu_fanout_leaf=16, nr_cpu_ids=1 [ 0.000000] NR_IRQS: 16, nr_irqs: 16, preallocated irqs: 16 [ 0.000000] random: get_random_bytes called from start_kernel+0x40c/0x628 with crng_init=0 [ 0.000000] arch_timer: cp15 timer(s) running at 37.50MHz (virt). [ 0.000000] clocksource: arch_sys_counter: mask: 0xffffffffffffff max_cycles: 0x8a60dd6a9, max_idle_ns: 440795204056 ns [ 0.000002] sched_clock: 56 bits at 37MHz, resolution 26ns, wraps every 2199023255540ns [ 0.000030] Switching to timer-based delay loop, resolution 26ns [ 0.001238] Console: colour dummy device 80x30 [ 0.001319] Calibrating delay loop (skipped), value calculated using timer frequency.. 75.00 BogoMIPS (lpj=375000) [ 0.001351] pid_max: default: 32768 minimum: 301 [ 0.001578] Mount-cache hash table entries: 2048 (order: 1, 8192 bytes, linear) [ 0.001613] Mountpoint-cache hash table entries: 2048 (order: 1, 8192 bytes, linear) [ 0.002610] CPU: Testing write buffer coherency: ok [ 0.002979] CPU0: update cpu_capacity 1024 [ 0.003007] CPU0: thread -1, cpu 0, socket 0, mpidr 80000000 [ 0.003788] Setting up static identity map for 0x60100000 - 0x60100078 [ 0.003978] rcu: Hierarchical SRCU implementation. [ 0.005018] smp: Bringing up secondary CPUs ... [ 0.005048] smp: Brought up 1 node, 1 CPU [ 0.005068] SMP: Total of 1 processors activated (75.00 BogoMIPS). [ 0.005085] CPU: All CPU(s) started in SVC mode. [ 0.005721] devtmpfs: initialized [ 0.011129] VFP support v0.3: implementor 41 architecture 2 part 30 variant 7 rev 5 [ 0.011480] clocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 19112604462750000 ns [ 0.011523] futex hash table entries: 256 (order: 2, 16384 bytes, linear) [ 0.018739] pinctrl core: initialized pinctrl subsystem [ 0.020545] NET: Registered PF_NETLINK/PF_ROUTE protocol family [ 0.038201] DMA: preallocated 256 KiB pool for atomic coherent allocations [ 0.039214] audit: initializing netlink subsys (disabled) [ 0.056097] No ATAGs? [ 0.068134] audit: type=2000 audit(0.030:1): state=initialized audit_enabled=0 res=1 [ 0.071785] at_xdmac e0068000.dma-controller: 16 channels, mapped at 0x(ptrval) [ 0.073849] iommu: Default domain type: Translated [ 0.073876] iommu: DMA domain TLB invalidation policy: strict mode [ 0.074680] SCSI subsystem initialized [ 0.074984] usbcore: registered new interface driver usbfs [ 0.075068] usbcore: registered new interface driver hub [ 0.075146] usbcore: registered new device driver usb [ 0.075686] pps_core: LinuxPPS API ver. 1 registered [ 0.075706] pps_core: Software ver. 5.3.6 - Copyright 2005-2007 Rodolfo Giometti [ 0.075745] PTP clock support registered [ 0.077565] clocksource: Switched to clocksource arch_sys_counter [ 0.089125] NET: Registered PF_INET protocol family [ 0.089426] IP idents hash table entries: 16384 (order: 5, 131072 bytes, linear) [ 0.091357] tcp_listen_portaddr_hash hash table entries: 512 (order: 0, 6144 bytes, linear) [ 0.091434] TCP established hash table entries: 8192 (order: 3, 32768 bytes, linear) [ 0.091574] TCP bind hash table entries: 8192 (order: 4, 65536 bytes, linear) [ 0.091773] TCP: Hash tables configured (established 8192 bind 8192) [ 0.091925] UDP hash table entries: 512 (order: 2, 16384 bytes, linear) [ 0.092011] UDP-Lite hash table entries: 512 (order: 2, 16384 bytes, linear) [ 0.092282] NET: Registered PF_UNIX/PF_LOCAL protocol family [ 0.093295] RPC: Registered named UNIX socket transport module. [ 0.093332] RPC: Registered udp transport module. [ 0.093346] RPC: Registered tcp transport module. [ 0.093357] RPC: Registered tcp NFSv4.1 backchannel transport module. [ 0.093736] NetWinder Floating Point Emulator V0.97 (double precision) [ 0.094901] workingset: timestamp_bits=30 max_order=18 bucket_order=0 [ 0.095596] squashfs: version 4.0 (2009/01/31) Phillip Lougher [ 0.096286] Trying to unpack rootfs image as initramfs... [ 0.109411] bounce: pool size: 64 pages [ 0.109541] Block layer SCSI generic (bsg) driver version 0.4 loaded (major 250) [ 0.109563] io scheduler mq-deadline registered [ 0.109579] io scheduler kyber registered [ 0.116059] pinctrl-ocelot e2004064.pinctrl: driver registered [ 0.131516] brd: module loaded [ 0.149642] loop: module loaded [ 0.151731] atmel_usart_serial atmel_usart_serial.0.auto: Using FIFO (32 data) [ 0.152052] atmel_usart_serial.0.auto: ttyS0 at MMIO 0xe0040200 (irq = 43, base_baud = 12500000) is a ATMEL_SERIAL [ 0.160318] atmel_usart_serial atmel_usart_serial.1.auto: Using FIFO (32 data) [ 0.160646] atmel_usart_serial.1.auto: ttyS1 at MMIO 0xe0064200 (irq = 44, base_baud = 12500000) is a ATMEL_SERIAL [ 0.988484] Freeing initrd memory: 5504K [ 1.196259] printk: console [ttyS1] enabled [ 1.202400] SPI driver spidev has no spi_device_id for mchp,synce_builtin [ 1.209227] SPI driver spidev has no spi_device_id for mchp,synce_dpll [ 1.215711] SPI driver spidev has no spi_device_id for mchp,cpld [ 1.221749] SPI driver spidev has no spi_device_id for mchp,cpld_fifo [ 1.228197] SPI driver spidev has no spi_device_id for mchp,t1e1j1 [ 1.234372] SPI driver spidev has no spi_device_id for spidev [ 1.245566] spi-nor spi0.0: sst26vf016b (2048 Kbytes) [ 1.270532] CAN device driver interface [ 1.275507] lan966x-switch e2000000.switch: Use register extraction [ 1.281833] MAC addr was not set, use random MAC [ 1.298073] pps pps0: new PPS source ptp0 [ 1.302487] pps pps1: new PPS source ptp1 [ 1.306830] pps pps2: new PPS source ptp2 [ 1.321451] uio_sparx5_irqmux e0000000.mscc_switch: IO is enabled [ 1.327624] uio_sparx5_irqmux e0000000.mscc_switch: Mapped 0 irqs [ 1.335771] uio_sparx5_irqmux e0000000.mscc_switch: Mapping [mem 0xe0000000-0xe3ffffff] [ 1.344024] uio_sparx5_irqmux 100000.mscc_sram: IO is enabled [ 1.349790] uio_sparx5_irqmux 100000.mscc_sram: Mapped 0 irqs [ 1.355788] uio_sparx5_irqmux 100000.mscc_sram: Mapping [mem 0x00100000-0x0011ffff] [ 1.365823] dwc3 300000.usb_dwc3: Configuration mismatch. dr_mode forced to host [ 1.374036] ehci_hcd: USB 2.0 'Enhanced' Host Controller (EHCI) Driver [ 1.380611] ehci-atmel: EHCI Atmel driver [ 1.384741] ohci_hcd: USB 1.1 'Open' Host Controller (OHCI) Driver [ 1.390928] ohci-platform: OHCI generic platform driver [ 1.396271] ohci-atmel: OHCI Atmel driver [ 1.400953] xhci-hcd xhci-hcd.2.auto: xHCI Host Controller [ 1.406430] xhci-hcd xhci-hcd.2.auto: new USB bus registered, assigned bus number 1 [ 1.414869] xhci-hcd xhci-hcd.2.auto: hcc params 0x0220fe6c hci version 0x110 quirks 0x0000000000010010 [ 1.424392] xhci-hcd xhci-hcd.2.auto: irq 45, io mem 0x00300000 [ 1.430830] usb usb1: New USB device found, idVendor=1d6b, idProduct=0002, bcdDevice= 5.15 [ 1.439110] usb usb1: New USB device strings: Mfr=3, Product=2, SerialNumber=1 [ 1.446313] usb usb1: Product: xHCI Host Controller [ 1.451216] usb usb1: Manufacturer: Linux 5.15.25-18810-g70353fd4af6b-dirty xhci-hcd [ 1.458973] usb usb1: SerialNumber: xhci-hcd.2.auto [ 1.464744] hub 1-0:1.0: USB hub found [ 1.468595] hub 1-0:1.0: 1 port detected [ 1.473078] xhci-hcd xhci-hcd.2.auto: xHCI Host Controller [ 1.478607] xhci-hcd xhci-hcd.2.auto: new USB bus registered, assigned bus number 2 [ 1.486250] xhci-hcd xhci-hcd.2.auto: Host supports USB 3.0 SuperSpeed [ 1.492940] usb usb2: We don't know the algorithms for LPM for this host, disabling LPM. [ 1.501392] usb usb2: New USB device found, idVendor=1d6b, idProduct=0003, bcdDevice= 5.15 [ 1.509668] usb usb2: New USB device strings: Mfr=3, Product=2, SerialNumber=1 [ 1.516876] usb usb2: Product: xHCI Host Controller [ 1.521776] usb usb2: Manufacturer: Linux 5.15.25-18810-g70353fd4af6b-dirty xhci-hcd [ 1.529545] usb usb2: SerialNumber: xhci-hcd.2.auto [ 1.535227] hub 2-0:1.0: USB hub found [ 1.539058] hub 2-0:1.0: config failed, hub doesn't have any ports! (err -19) [ 1.546594] usbcore: registered new interface driver usbtmc [ 1.552306] usbcore: registered new interface driver usb-storage [ 1.558447] usbcore: registered new interface driver usbserial_generic [ 1.564974] usbserial: USB Serial support registered for generic [ 1.571042] usbcore: registered new interface driver ftdi_sio [ 1.576779] usbserial: USB Serial support registered for FTDI USB Serial Device [ 1.584252] usbcore: registered new interface driver usb_serial_simple [ 1.590802] usbserial: USB Serial support registered for carelink [ 1.596882] usbserial: USB Serial support registered for zio [ 1.602596] usbserial: USB Serial support registered for funsoft [ 1.608608] usbserial: USB Serial support registered for flashloader [ 1.614951] usbserial: USB Serial support registered for google [ 1.620901] usbserial: USB Serial support registered for libtransistor [ 1.627421] usbserial: USB Serial support registered for vivopay [ 1.633458] usbserial: USB Serial support registered for moto_modem [ 1.639750] usbserial: USB Serial support registered for motorola_tetra [ 1.646351] usbserial: USB Serial support registered for novatel_gps [ 1.652739] usbserial: USB Serial support registered for hp4x [ 1.658492] usbserial: USB Serial support registered for suunto [ 1.664411] usbserial: USB Serial support registered for siemens_mpi [ 1.670937] usbcore: registered new interface driver usbtest [ 1.676707] i2c_dev: i2c /dev entries driver [ 1.682931] sdhci: Secure Digital Host Controller Interface driver [ 1.689159] sdhci: Copyright(c) Pierre Ossman [ 1.693462] sdhci-pltfm: SDHCI platform and OF driver helper [ 1.700925] atmel_aes e004c000.aes: version: 0x702 [ 1.743909] mmc0: SDHCI controller on e0830000.sdio-host [e0830000.sdio-host] using ADMA [ 1.755492] atmel_aes e004c000.aes: Atmel AES - Using dma0chan0, dma0chan1 for DMA transfers [ 1.764722] atmel_sha e006c000.sha: version: 0x700 [ 1.770160] atmel_sha e006c000.sha: using dma0chan2 for DMA transfers [ 1.812938] atmel_sha e006c000.sha: Atmel SHA1/SHA256/SHA224/SHA384/SHA512 [ 1.820576] hid: raw HID events driver (C) Jiri Kosina [ 1.825872] usbcore: registered new interface driver usbhid [ 1.831462] usbhid: USB HID core driver [ 1.836710] GACT probability NOT on [ 1.840241] Mirror/redirect action on [ 1.844374] NET: Registered PF_INET6 protocol family [ 1.851579] Segment Routing with IPv6 [ 1.855245] In-situ OAM (IOAM) with IPv6 [ 1.859386] sit: IPv6, IPv4 and MPLS over IPv4 tunneling driver [ 1.866229] NET: Registered PF_PACKET protocol family [ 1.871416] Bridge firewalling registered [ 1.875396] can: controller area network core [ 1.879842] NET: Registered PF_CAN protocol family [ 1.884589] can: raw protocol [ 1.887586] can: broadcast manager protocol [ 1.891749] can: netlink gateway - max_hops=1 [ 1.896163] 8021q: 802.1Q VLAN Support v1.8 [ 1.900630] ThumbEE CPU extension supported. [ 1.904863] Registering SWP/SWPB emulation handler [ 1.913635] of_cfs_init [ 1.916173] of_cfs_init: OK [ 1.921314] Freeing unused kernel image (initmem) memory: 1024K [ 1.937894] Run /init as init process [ 1.939755] mmc0: new high speed MMC card at address 0001 [ 1.948336] mmcblk0: mmc0:0001 IS004G 3.64 GiB [ 1.958150] mmcblk0: [ 1.958863] mmcblk0boot0: mmc0:0001 IS004G 2.00 MiB [ 1.970417] mmcblk0boot1: mmc0:0001 IS004G 2.00 MiB [ 1.979285] mmcblk0rpmb: mmc0:0001 IS004G 512 KiB, chardev (247:0) Starting syslogd: OK Starting klogd: OK Running sysctl: OK Saving random seed: [ 2.165688] random: dd: uninitialized urandom read (512 bytes read) OK Starting rngd: OK Starting network: OK Welcome to Buildroot buildroot login: root This example is demonstrated by using TTL-232R-3V3 cable which is connected from Linux host to flexcom0 USART. Any other UART converter cables can be used. Make sure that pin connections of TTL-232R-3V3 to DUT flexcom0 USART are as below: Once connections are done, verify that ttyUSBx interface is identified on Host machine as below: root@swlab-HP-Z420-Workstation:/home/knariset# dmesg | tail [611319.667065] usb 3-1: new full-speed USB device number 4 using xhci_hcd [611319.861370] usb 3-1: New USB device found, idVendor=0403, idProduct=6001 [611319.861373] usb 3-1: New USB device strings: Mfr=1, Product=2, SerialNumber=3 [611319.861376] usb 3-1: Product: TTL232R-3V3 [611319.861379] usb 3-1: Manufacturer: FTDI [611319.861381] usb 3-1: SerialNumber: FTBR6A83 [611319.872422] ftdi_sio 3-1:1.0: FTDI USB Serial Device converter detected [611319.872470] usb 3-1: Detected FT232RL [611319.877470] usb 3-1: FTDI USB Serial Device converter now attached to ttyUSB1 [611420.396414] usb 2-1.1: USB disconnect, device number 27 On DUT side, flexcom0 USART will be identified as ttyS0 interface: # dmesg | grep usart [ 0.151931] atmel_usart_serial atmel_usart_serial.0.auto: Using FIFO (32 data) [ 0.151989] atmel_usart_serial atmel_[ 8.717907] random: fast init done usart_serial.0.auto: GPIO lookup for consumer rs485-term [ 0.152007] atmel_usart_serial atmel_usart_serial.0.auto: using device tree for GPIO lookup [ 0.152152] atmel_usart_serial atmel_usart_serial.0.auto: using lookup tables for GPIO lookup [ 0.152169] atmel_usart_serial atmel_usart_serial.0.auto: No GPIO consumer rs485-term found [ 0.152257] atmel_usart_serial.0.auto: ttyS0 at MMIO 0xe0040200 (irq = 43, base_baud = 12500000) is a ATMEL_SERIAL [ 0.160529] atmel_usart_serial atmel_usart_serial.1.auto: Using FIFO (32 data) [ 0.160591] atmel_usart_serial atmel_usart_serial.1.auto: GPIO lookup for consumer rs485-term [ 0.160608] atmel_usart_serial atmel_usart_serial.1.auto: using device tree for GPIO lookup [ 0.160755] atmel_usart_serial atmel_usart_serial.1.auto: using lookup tables for GPIO lookup [ 0.160771] atmel_usart_serial atmel_usart_serial.1.auto: No GPIO consumer rs485-term found [ 0.160858] atmel_usart_serial.1.auto: ttyS1 at MMIO 0xe0064200 (irq = 44, base_baud = 12500000) is a ATMEL_SERIAL # # # dmesg | grep ttyS [ 0.000000] Kernel command line: console=ttyS1,115200 root=/dev/ram0 loglevel=7 uio_pdrv_genirq.of_id=generic-uio [ 0.152257] atmel_usart_serial.0.auto: ttyS0 at MMIO 0xe0040200 (irq = 43, base_baud = 12500000) is a ATMEL_SERIAL [ 0.160858] atmel_usart_serial.1.auto: ttyS1 at MMIO 0xe0064200 (irq = 44, base_baud = 12500000) is a ATMEL_SERIAL [ 1.196296] printk: console [ttyS1] enabled # # ls -l /dev/ttyS* crw------- 1 root root 4, 64 Jan 1 00:00 /dev/ttyS0 crw------- 1 root root 4, 65 Jan 1 00:00 /dev/ttyS1 Before running serial tests, make sure baudrate is set to 115200 on both sides using command stty -F /dev/ttyX 115200 Run stty -F /dev/ttyUSB1 115200 command on Host machine and stty -F /dev/ttyS0 115200 command on DUT. Use echo command to write some text to /dev/ttyS0 interface on DUT: # # echo \"writing to ttyS0 USART0 on DUT\" > /dev/ttyS0 Run cat command to read from /dev/ttyUSB1 on Host: root@swlab-HP-Z420-Workstation:/home/knariset# cat /dev/ttyUSB1 writing to ttyS0 USART0 on DUT Use echo command to write some text to /dev/ttyUSB1 interface on Host: root@swlab-HP-Z420-Workstation:/home/knariset# echo \"writing to USB1 on Host machine\" > /dev/ttyUSB1 root@swlab-HP-Z420-Workstation:/home/knariset# Run cat command to read from /dev/ttyS0 on DUT: # cat /dev/ttyS0 writing to USB1 on Host machine","title":"LAN966x USART","component":"bsp","version":"2023.12","name":"lan966x-usart","url":"/bsp/2023.12/supported-hw/lan966x-usart.html","titles":[{"text":"LAN966x USART","hash":"_lan966x_usart","id":1},{"text":"SoC Resources","hash":"_soc_resources","id":2},{"text":"Kernel configurations","hash":"_kernel_configurations","id":3},{"text":"Devicetree Configuration","hash":"_devicetree_configuration","id":4},{"text":"Example","hash":"_example","id":5},{"text":"UserSpace","hash":"_userspace","id":6},{"text":"Confirm instances are created","hash":"_confirm_instances_are_created","id":7},{"text":"Example on how to use","hash":"_example_on_how_to_use","id":8},{"text":"FLEXCOM USART as console","hash":"_flexcom_usart_as_console","id":9},{"text":"FLEXCOM USART as standalone uart device","hash":"_flexcom_usart_as_standalone_uart_device","id":10},{"text":"Write text to flexcom0 USART and read from Host machine interface","hash":"_write_text_to_flexcom0_usart_and_read_from_host_machine_interface","id":11},{"text":"Write text to Host interface and read from flexcom0 USART","hash":"_write_text_to_host_interface_and_read_from_flexcom0_usart","id":12}]},"60":{"id":60,"text":"LAN966x SoC supports one instance of Watchdog Timer from Synopsys DW. Following kernel config options should be enabled to use LAN966x WDT: CONFIG_DW_WATCHDOG - Synopsys Watchdog driver config option. To enable Watchdog timer, following configurations are required in device tree: compatible string must be set to snps,dw-wdt. reg property must be set to . interrupts property must be set with interrupt details as . Peripheral Shared Peripheral Interrupt CPU INTR watchdog 70 38 Note Shared peripheral interrupt lines start at index ID32. So, CPU INTR must be calculated as [Shared peripheral interrupt number - 32]. clocks property must be set to . WDT DT Documentation Watchdog Driver API Following example shows how a Watchdog timer should be defined in DT: dtsi file: watchdog: watchdog@e0090000 { compatible = \"snps,dw-wdt\"; reg = ; interrupts = ; clocks = ; status = \"disabled\"; }; dts file changes: &watchdog { status = \"okay\"; }; Check for /dev/watchdog. If this file is present, that means the watchdog kernel device driver is loaded. Run cat /dev/watchdog0 and you see linux reboots in 30-40secs. # cat /dev/watchdog0 [ 7879.765752] watchdog: watchdog0: watchdog did not stop! # # # U-Boot 2019.04-linux4sam_6.2-icp (Sep 24 2021 - 09:49:43 +0200) CPU: SAMA7 Crystal frequency: 0 MHz CPU clock : 0 MHz Master clock : 0 MHz DRAM: 1 GiB MMC: sdhci-host@e0830000: 0, emmc@e0830000: 1 Loading Environment from SPI Flash... SF: Detected sst26vf016b with page size 256 Bytes, erase size 4 KiB, total 2 MiB OK In: serial Out: serial Err: serial Net: eth0: switch@0 Hit any key to stop autoboot: 0 m => Configure buildroot and install Watchdog utility provided by Busybox. The main watchdog configuration file is /etc/watchdog.conf. # busybox | grep watchdog vconfig, vi, vlock, w, watch, watchdog, wc, wget, which, who, whoami, # # watchdog --help watchdog: unrecognized option `--help' watchdog version 5.16, usage: watchdog [options] options: -c | --config-file specify location of config file -f | --force don't sanity-check config or use PID file -F | --foreground run in foreground -X | --loop-exit run a fixed number of loops then exit -q | --no-action do not reboot or halt -b | --softboot soft-boot on error -s | --sync sync filesystem -v | --verbose verbose messages # ls -l /etc/watchdog.conf -rw-r--r-- 1 root root 6102 May 18 2022 /etc/watchdog.conf Add watchdog configurations to /etc/watchdog.conf file. Run command watchdog -c /etc/watchdog.conf. By default, Busybox watchdog command runs in background. Check for Hardware watchdog process ID. Kill the watchdog process. Verify that system is rebooted after watchdog-timeout value. # cat /etc/watchdog.conf watchdog-device = /dev/watchdog watchdog-timeout = 20 log-dir = /var/log/watchdog file = /var/log/messages change = 1500 realtime = yes priority = 1 # # ps -ef | grep watchdog 22 root [watchdogd] 131 root grep watchdog # # # watchdog -c /etc/watchdog.conf # # # ps -ef | grep watchdog 22 root [watchdogd] 135 root watchdog -c /etc/watchdog.conf 140 root grep watchdog # # # uptime 00:09:09 up 9 min, load average: 0.00, 0.03, 0.03 # # # kill -9 135 ; uptime; tail -f /var/log/messages [ 580.280482] watchdog: watchdog0: watchdog did not stop! 00:09:40 up 9 min, load average: 0.00, 0.02, 0.03 Jan 1 00:08:36 buildroot daemon.info watchdog[135]: interface: no interface to check Jan 1 00:08:36 buildroot daemon.info watchdog[135]: temperature: no sensors to check Jan 1 00:08:36 buildroot daemon.info watchdog[135]: no test binary files Jan 1 00:08:36 buildroot daemon.info watchdog[135]: no repair binary files Jan 1 00:08:36 buildroot daemon.info watchdog[135]: error retry time-out = 60 seconds Jan 1 00:08:36 buildroot daemon.info watchdog[135]: repair attempts = 1 Jan 1 00:08:36 buildroot daemon.info watchdog[135]: alive=/dev/watchdog heartbeat=[none] to=root no_act=no force=no Jan 1 00:08:36 buildroot daemon.info watchdog[135]: watchdog now set to 20 seconds Jan 1 00:08:36 buildroot daemon.info watchdog[135]: hardware watchdog identity: Synopsys DesignWare Watchdog Jan 1 00:09:40 buildroot kern.crit kernel: [ 580.280482] watchdog: watchdog0: watchdog did not stop! U-Boot 2019.04-linux4sam_6.2-icp (Sep 24 2021 - 09:49:43 +0200) CPU: SAMA7 Crystal frequency: 0 MHz CPU clock : 0 MHz Master clock : 0 MHz DRAM: 1 GiB MMC: sdhci-host@e0830000: 0, emmc@e0830000: 1 Loading Environment from SPI Flash... SF: Detected sst26vf016b with page size 256 Bytes, erase size 4 KiB, total 2 MiB OK In: serial Out: serial Err: serial Net: eth0: switch@0 Hit any key to stop autoboot: 0 m => Add watchdog configurations to /etc/watchdog.conf file. Run watchdog in foregroung using '-F' option in Busybox watchdog command as watchdog -c /etc/watchdog.conf -F. Press CTRL + z to suspend system. In this case, the Watchdog device is enabled but is no longer fed. After watchdog-timeout seconds, the system is reset by the Watchdog device. # ls -l /dev/watchdog crw------- 1 root root 10, 130 Jan 1 00:00 /dev/watchdog # # uptime 00:04:29 up 4 min, load average: 0.02, 0.11, 0.06 # # # ps -ef | grep watchdog 22 root [watchdogd] 132 root grep watchdog # # cat /etc/watchdog.conf watchdog-device = /dev/watchdog watchdog-timeout = 20 log-dir = /var/log/watchdog file = /var/log/messages change = 10 realtime = yes priority = 1 # # watchdog -c /etc/watchdog.conf -F watchdog: starting daemon (5.16): watchdog: int=1s realtime=no sync=no load=0,0,0 soft=no watchdog: memory not checked watchdog: ping: no machine to check watchdog: file: /var/log/messages:10 watchdog: pidfile: no server process to check watchdog: interface: no interface to check watchdog: temperature: no sensors to check watchdog: no test binary files watchdog: no repair binary files watchdog: error retry time-out = 60 seconds watchdog: repair attempts = 1 watchdog: alive=/dev/watchdog heartbeat=[none] to=root no_act=no force=no watchdog: watchdog now set to 20 seconds watchdog: hardware watchdog identity: Synopsys DesignWare Watchdog watchdog: file /var/log/messages was not changed in 11 seconds (more than 10) watchdog: file /var/log/messages was not changed in 11 seconds (more than 10) watchdog: file /var/log/messages was not changed in 11 seconds (more than 10) ^Z[1]+ Stopped watchdog -c /etc/watchdog.conf -F # U-Boot 2019.04-linux4sam_6.2-icp (Sep 24 2021 - 09:49:43 +0200) CPU: SAMA7 Crystal frequency: 0 MHz CPU clock : 0 MHz Master clock : 0 MHz DRAM: 1 GiB MMC: sdhci-host@e0830000: 0, emmc@e0830000: 1 Loading Environment from SPI Flash... SF: Detected sst26vf016b with page size 256 Bytes, erase size 4 KiB, total 2 MiB OK In: serial Out: serial Err: serial Net: eth0: switch@0 Hit any key to stop autoboot: 0 m =>","title":"LAN966x Watchdog","component":"bsp","version":"2023.12","name":"lan966x-wdt","url":"/bsp/2023.12/supported-hw/lan966x-wdt.html","titles":[{"text":"LAN966x Watchdog","hash":"_lan966x_watchdog","id":1},{"text":"SoC Resources","hash":"_soc_resources","id":2},{"text":"Kernel configurations","hash":"_kernel_configurations","id":3},{"text":"Devicetree Configuration","hash":"_devicetree_configuration","id":4},{"text":"References","hash":"_references","id":5},{"text":"Example","hash":"_example","id":6},{"text":"UserSpace","hash":"_userspace","id":7},{"text":"Confirm instances are created","hash":"_confirm_instances_are_created","id":8},{"text":"Example on how to use","hash":"_example_on_how_to_use","id":9},{"text":"Example using Busybox watchdog utility:","hash":"_example_using_busybox_watchdog_utility","id":10},{"text":"Verify system reboot by running watchdog in background:","hash":"_verify_system_reboot_by_running_watchdog_in_background","id":11},{"text":"Verify system reboot by running watchdog in foreground:","hash":"_verify_system_reboot_by_running_watchdog_in_foreground","id":12}]},"61":{"id":61,"text":"The LAN966x family comprises the following SKUs: LAN9662 - 2 port end-node TSN Gigabit Ethernet switch device. LAN9668 - 8 port TSN Gigabit Ethernet switch device. When dealing with low-level SW, it is piratical to know the physical hardware addresses of the memory-mapped areas. The table below show the relevant areas. Please note that off-chip resources such as flash and DDR, depends on board design, be sure to check the schematics. Name On-Chip Start Max size Size eval board ======= ======= ========== ==================== =================== BOOTROM Yes 0x00000000 0x00014000 (80KB) 0x00014000 (80KB) SRAM Yes 0x00100000 0x00020000 (128KB) 0x00020000 (128KB) QSPI0-NOR No 0x20000000 0x10000000 (256MB) 0x2000000 (2MB) DDR No 0x60000000 0x80000000 (2048MB) 0x80000000 (2048MB) This chapter describes the different LAN966x Reference Boards. All examples assume that there is a working TFTP and DHCP server on the same subnet. This is the 8 port eval board using the LAN9668 SoC. This PCB has the following features: LAN9668 switch device SST26VF016B SPI NOR boot flash 4GB eMMC NAND flash 512MB DDR3L-1333 x16 RAM (Optional 1GB or 2GB) 2x LAN8814 (Indy) quad 1000BASE-T PHY USB 2.0 device Local management via USB port Power from either 12V or 48V DC From a software perspective there is only one difference compared with the EVB-LAN9662 board. This is the 2 port eval board using a LAN9662 SoC. This PCB has the following features: LAN9662 switch device SST26VF016B SPI NOR boot flash 4GB eMMC NAND flash 512MB DDR3L-1333 x16 RAM (Optional 1GB or 2GB) 2x 1000BASE-T ports using internal LAN9662 PHYs USB 2.0 host Local management via USB port Power from either USB port or expansion connector This is a carrier board used together with UNG_8291 to expose more interfaces and functionality. If higher performance is needed, UNG_8309 supports mounting a Raspberry Pi 4 Compute Module to be used as an external CPU system. This PCB has the option to plug different PHY modules boards. Meaning that it can support a different number of ports depending on the inserted PHY modules. It can have up to 8 ports including the 2 internal PHYs. It has the following features: LAN9668 switch device SST26VF016B SPI NOR boot flash 4GB eMMC NAND flash 512MB DDR3L-1333 x16 RAM (Optional 1GB or 2GB) 2x 1000BASE-T ports using internal LAN9662 PHYs USB 2.0 device Local management via USB port Power from either 12V or 48V DC The name used in the device trees for the Linux Kernel is the internal product name, as this has been created at a very early stage of the project. To allow you to move between the different names that are in use, you can use the table found below: Internal Board Name Board Order No Board Name UNG8290 EV18W53A EVB-LAN9668 UNG8291 EV09D37A EVB-LAN9662 UNG8309 EV44Z97A EVB-LAN9662-Carrier UNG8385 EV83E85A EVB-LAN9668-EDS2","title":"LAN966x","component":"bsp","version":"2023.12","name":"lan966x","url":"/bsp/2023.12/supported-hw/lan966x.html","titles":[{"text":"1. LAN966x Family overview","hash":"_lan966x_family_overview","id":1},{"text":"2. Memory map","hash":"_memory_map","id":2},{"text":"3. EVB Overview:","hash":"refboards","id":3},{"text":"3.1. EVB-LAN9668","hash":"_evb_lan9668","id":4},{"text":"3.2. EVB-LAN9662","hash":"_evb_lan9662","id":5},{"text":"3.3. EVB-LAN9662-Carrier","hash":"_evb_lan9662_carrier","id":6},{"text":"3.4. EVB-LAN9668-EDS2","hash":"_evb_lan9668_eds2","id":7},{"text":"4. Board Name Overview","hash":"_board_name_overview","id":8}]},"62":{"id":62,"text":"This document will focus on the LAN969x SoC, but to fully explain the boot process and boot facilities it is also necessary to consider the flash memories available on the board. The upcoming sections will briefly describe the boot media supported by the LAN969x, and then describe which of these media is available on the various evaluation boards offered by Microchip. This document uses many abbreviations, see the terms and abbreviations section for details. LAN969x offers secure boot, which is based on ARM Trusted Firmware (TF-A). The TF-A architecture heavily influences the boot-sequence, and to understand how LAN969x boots, a bit of TF-A understanding is also needed. Following is an illustration of a typical lan969x boot sequence using UBoot and Linux: It is possible to skip UBoot, if this case the boot sequence will look like this: TF-A and LAN969x goes through the following boot steps: TF-A/BL1 This is ROM code embedded inside the chip. LAN969x always start by booting TF-A/BL1 from ROM. TF-A/BL1 loads the next bootloader (BL2) from one of the support boot-medias. The strapping pins are used to configure which of the supported boot-media to use. BL2 This is a second stage boot-loader also part of TF-A. This bootloader runs from an on-chip SRAM, it setup the trust-zones, configure DDR memory and other basic platform initialization. Once the platform is initialized, it will load BL31 and BL33 from the configured boot-media into SRAM memory. BL31 This is a called \"EL3 Runtime Software\", also part of TF-A. This stage does not influence the boot-flow directly, and will not be covered here. BL33 In TF-A terminology, this is the unsecure firmware. It is not part of the TF-A project, but is signed and distributed together with TF-A. TF-A imports this as a BLOB. Typically this is either UBoot, LMStaX or a special version of the kernel which can run without UBoot. The above list of update-able images (BL2, BL31 and BL33), plus relevant certificates and relevant support files are packed in a FIP (Firmware Image Packet), which is a storage format defined by TF-A. The FIP containing these images must be stored raw in the designed boot-media. In some cases it must be put at a specific address, while in other it is stored in a partition with a predefined name. This document will not go into the details of TF-A, but just assume that the FIP is available and describe where and how it can be programmed. Two different FIPs will be used, one with UBoot as BL33, and another one with Linux-kernel as BL33. The strapping pins are configuring the initial boot mode. The table below lists the supported modes: Strapping Pins LAN969x A0 0000 (0x0) eMMC + FC0 (for trace) 0001 (0x1) QSPI0 + FC0 (for trace) 0010 (0x2) SDCard + FC0 (for trace) 0011 (0x3) eMMC 0100 (0x4) QSPI0 0101 (0x5) SDCard 0110 (0x6) Reserved 0111 (0x7) Reserved 1000 (0x8) QSPI0-HS + FC0 1001 (0x9) Reserved 1010 (0xa) TF-A Monitor at FC0 1011 (0xb) TF-A Monitor at FC0-HS 1100 (0xc) Reserved 1101 (0xd) QSPI0-HS 1110 (0xe) Reserved 1111 (0xf) SPI Client The strapping configuration is read by TF-A/BL1, which uses it to select select the boot-media, and thereby determinate where the FIP is loaded from. UBoot will also use the strapping pins to determinate which flash to load the environment configuration from. In the above table FC0 means FlexCOM0, running in UART mode configured as 115200/8/N/1 with the RX signal at GPIO52/Alt-1 and TX signal at GPIO53/Alt-1. For modes 0000-0010 the FC0 terminal is used as to emit debug traces Mode 0011 to 0101 perform the same boot procedure, but with trace disabled to improve performance. In mode 1010 and 1011 a bidirectional machine interface is implemented. When booting from flash the TF-A loaders can be configured to emit trace messages on the UART provided by FlexCom0. The following table show the strapping configurations with and without traces enables. Trace enable Trace disable Flash type 0000 0011 eMMC 0001 0100 QSPI/NOR 0002 0101 SDCard Boards which do not have a compatible HW configuration shall avoid this strap mode. Be aware that traces to the UART impact boot time and should only be activated when debugging is needed or the startup time is not important. When booting from eMMC/SDCard, a valid GUID Partition Table (GPT) must be used. The TF-A/BL1 ROM will look for a partition called fip and fip.bak and use then accordingly. The table below provide an example of a partition table. The page size for the eMMC/SDCard device is 0x200/512 bytes. Type Partition id Partition Name Offset Partition size GPT (PartTable) n/a n/a 0x00000000 0x00008000 (32kb) TF-A FIP 1 fip 0x00100000 0x08000000 (128mb) TF-A FIP 2 fip.bak 0x08100000 0x08000000 (128mb) UBoot (Env) 3 Env 0x10100000 0x00200000 (2mb) UBoot (Env) 4 Env.bak 0x10300000 0x00200000 (2mb) ext4 (rootfs) 5 Boot0 0x10500000 0x40000000 (1gb) ext4 (rootfs) 6 Boot1 0x50500000 0x40000000 (1gb) ext4 (data) 7 Data 0x90500000 0x6fa00000 (1.74gb) SDCard doesn’t support redundant environment. The bold partitions are the items which is hard-coded in either TF-A/BL1 or in UBoot. If it relates to UBoot then it can be changed, but requires changes to UBoot as well. Everything else is just an example which can be changed according to customer needs. The following table contains the offsets used by TF-A and LMStaX when booting from QSPI/NOR: Type Partition id Partition Name Offset Partition size GPT (PartTable) n/a n/a 0x00000000 0x00001000 (4KB) TF-A FIP 1 fip 0x00001000 0x0001e000 (120KB) TF-A FIP 2 img-sel 0x0001f000 0x00002000 (8KB) LMSTAX 3 img-a 0x00021000 0x000cf800 (830KB) LMSTAX 4 img-b 0x000f0800 0x000cf800 (830KB) TinyFS 5 data 0x001c0000 0x00040000 (256KB) This mode will boot into a UART monitor using FlexCom0. This can be used to program the OTP and to load firmware into flash. This mode can be used without any valid content in the flash, and is therefore useful for de-brick or even production scenarios. The UART Monitor implement a machine interface and should not be used interactively with a terminal. Instead use the HTML5 client provided as part of the TF-A project. For any other use-case, the UART console terminal needs to be configured to 115200/8/N/1 This mode is identical to the previous mode except that the default speed is configured to be 921600/8/N/1. This allow faster downloads when updating the firmware images. In this strapping mode, the CPU is not booting at all. This means the (TF-A is not running. A SPI client will be initialized instead. This SPI interface allows a host CPU to read/write registers in the switch-core. So far we have concentrated on configuring the HW and boot media. Once put in place, TF-A/BL2, BL2 and BL31 will boot, and eventually reach TF-A/BL33. TF-A/BL33 is the boot-step after TF-A, and can be UBoot, Linux kernel or some other OS. The following chapters covers this in more details. In this mode the UBoot binary is embedded in into the FIP as TF-A/BL33. TF-A will do the platform initialization, load images (and authenticate them), DDR initialization etc. Once done, it will boot UBoot, which then control the next steps in boot flow. UBoot will take care of loading the ITB and the rootfs and boot up into the Linux. This is the so called normal-boot mode. In this mode a Linux kernel binary is embedded in into the FIP as TF-A/BL33. TF-A will do the platform initialization, load images (and authenticate them), DDR initialization etc. Once done, it will boot the Linux kernel directly. This is the so called fast-boot mode. The referenced images and archives can all found on public servers. Therefore, the following description will provide all needed information. The TFA (FIPs) images can be found under following link: https://github.com/microchip-ung/arm-trusted-firmware/releases The build artifacts (UBoot, kernel, rootfs etc.) can be found on following public server: http://mscc-ent-open-source.s3-website-eu-west-1.amazonaws.com/?prefix=public_root/bsp Download the proper architecture and build version. For example: mscc-brsdk-arm64-yyyy.version.tar.gz After extracting the *.tar.gz file, all rootfs and ITB related files can be found inside following folder: mscc-brsdk-arm64-yyyy.version/arm64-armv8_a-linux-gnu/standalone/release The following subchapter gives a rough overview of the common used terms in the context of the available images and build artifacts. The upcoming table is describing the most important files extracted from the TFA artifacts archive: File name File type BL33 data Flash Description fwu-lan969x_a0-release.html HTML5 n/a n/a Firmware update tool for MS Edge or Chrome lan969x_a0-release-fwu_fip.bin BIN image n/a n/a Firmware update binary lan969x_a0-release.fip.gz FIP file UBoot NOR/MMC Compressed RAW Plain text FIP (not encrypted) lan969x_a0-release-linux.fip.gz FIP file Linux NOR/MMC Compressed RAW Plain text FIP (not encrypted) lan969x_a0-release-mmc.gpt.gz GPT image UBoot MMC Compressed GPT image with embedded Plain text FIP lan969x_a0-release-mmc-linux.gpt.gz GPT image Linux MMC Compressed GPT image with embedded Plain text FIP lan969x_a0-release-nor.gpt.gz GPT image UBoot NOR Compressed GPT image with embedded Plain text FIP lan969x_a0-release-ssk.fip.gz FIP file UBoot NOR/MMC Compressed RAW encrypted FIP (not encrypted) lan969x_a0-release-ssk-linux.fip.gz FIP file Linux NOR/MMC Compressed RAW encrypted FIP (not encrypted) lan969x_a0-release-ssk-mmc.gpt.gz GPT image UBoot MMC Compressed GPT image with embedded encrypted FIP lan969x_a0-release-ssk-mmc-linux.gpt.gz GPT image Linux MMC Compressed GPT image with embedded encrypted FIP lan969x_a0-release-ssk-nor.gpt.gz GPT image UBoot NOR Compressed GPT image with embedded encrypted FIP Following table is describing the available ITB and filesystem related binaries inside the buildroot artifacts archive: File name Description brsdk_standalone_arm64.ext4.gz ext4 rootfs with ITB, located in the root directory. brsdk_standalone_arm64.itb ITB only, used in the *.gz file. brsdk_standalone_arm64.its ITB with Kernel and squashfs filesystem. Suitable for network boot. fit.itb Standalone ITB (also usable for Sparx5) fit.its Standalone FIT Source fwu.html Firmware update tool for MS Edge or Chrome lan969x_appl_ev23x71a.dtb Device Tree Blob for EV23x71a for XStaX lan969x_ev23x71a.dtb Device Tree Blob for EV23x71a for Standalone lan969x_pcb10001.dtb Device Tree Blob for PCB10001 Modular Test Board lan969x_sr.dtb Device Tree Blob for Sunrise FPGA Test Platform ls1046_pcb110.dtb Device Tree Blob for LS1046 used with PCB110 for Standalone ls1046_pcb121.dtb Device Tree Blob for LS1046 used with PCB121 for Standalone ls1046_pcb134.dtb Device Tree Blob for LS1046 used with PCB134 for Standalone mscc-linux-kernel.bin Linux Kernel Binary mscc-linux-kernel.bin.gz Compressed Linux Kernel Binary mscc-linux-kernel.bin.xz Compressed Linux Kernel Binary rootfs.ext2 ext2 rootfs standalone rootfs.ext4 ext4 rootfs standalone rootfs.squashfs squashfs filesystem standalone rootfs.tar rootfs/tar standalone sparx5_appl_pcb134_emmc.dtb Device Tree Blob for PCB134 with eMMC for XStaX sparx5_appl_pcb134.dtb Device Tree Blob for PCB134 for XStaX sparx5_appl_pcb135_emmc.dtb Device Tree Blob for PCB135 with eMMC for XStaX sparx5_appl_pcb135.dtb Device Tree Blob for PCB135 for XStaX sparx5_pcb125.dtb Device Tree Blob for PCB125 Modular Test Board sparx5_pcb134_emmc.dtb Device Tree Blob for PCB134 with eMMC for Standalone sparx5_pcb134.dtb Device Tree Blob for PCB134 for Standalone sparx5_pcb135_emmc.dtb Device Tree Blob for PCB135 with eMMC for Standalone sparx5_pcb135.dtb Device Tree Blob for PCB135 for Standalone ubifs-itb-bare.itb ITB without a rootfs ubifs-itb-bare.its Source file for ITB without a rootfs ubifs-itb-bare.ubifs ITB without a rootfs in UBIFS format The ITB files from the build artifacts archive including always the latest available kernel files. The device tree sources are a set of text files in the Linux kernel source tree. They describe the hardware properties for a specific platform. For processing the DTS, a Device Tree Compiler is used. The compiler takes a device-tree source as input and outputs a device-tree in a machine readable format. Since the DTS represents the device-tree data in a human readable format, it is the preferred input format. The output result of the DTC results is a .dtb file. Various types of root filesystem builds are provided inside the build artifact archive. The rootfs/tar is accumulating a large collection of files into a single archive file, while preserving filesystem information such as user/group permissions, dates, files, inodes and directory structures. There is no tarball compression method used. A tarball build of the rootfs/tar can be found inside the build artifacts archive. Please have a look for a binary which is named to rootfs.tar. The squashfs filesystem is a zlib compressed read-only filesystem (e.g. files, inodes and directories) for Linux. SquashFS gives more flexibility and performance than a tarball archive. The rootfs.squashfs based build can be found inside the build artifacts archive. The ext4 filesystem is also supported by the LAN969x system. There are different flavors of the ext4 builds inside the build artifacts archive available. The Flattened Image Tree is a format for combining different binary elements such as the kernel, initramfs and DTB into a single .itb file. Bootloaders like e.g. UBoot can read and process the FIT metadata to boot an embedded Linux system. This type of the FIT is containing the kernel files, device tree(s) and a root filesystem. Besides the FIP file, only one further single binary needs to be maintained and flashed to the target system. The drawback is the longer bootup time, caused by the larger image size. The according binary, which includes a 'squashfs' root filesystem, can be found in the build artifacts archive named by 'fit.itb'. Beside of the rootfs/tar and the squashfs, there is also the usage of an ext4 root filesystem possible. The following section should give a rough overview about some ext4 based use-cases. This variant of the ext4 build is containing the ext4 filesystem and additionally an ITB located inside root directory of the ext4 filesystem. For example, UBoot is capable to load filesystem and execute the ITB found in the root directory. This build variant is available inside the build artifacts archive. It is named to 'brsdk_standalone_arm64.ext4.gz'. The FIP binary, so called 'fip.bin', is containing all parts of the TF-A firmware build. Basically, following components can be found there: BL2 BL31 or BL33 certificates support files The different FIP builds can be found inside the build artifacts archive. The GPT image is used for configuring basically the flash device structure. This means writing the GPT, creating all needed partitions and do some further setup work. The boot partition named to 'fip' will contain afterwards a 'fip.bin' file for the first system startup. The following table is showing the default partition scheme for the MMC flash devices. This means this table is valid for the eMMC and the SDCard device. offset size Name/desc ============== =============== ===================== 0x00000000 0x00008000 GPT 0x00100000 0x08000000 fip 0x08100000 0x08000000 fip.bk 0x10100000 0x00200000 Env 0x10300000 0x00200000 Env.bak 0x10500000 0x40000000 Boot0 0x50500000 0x40000000 Boot1 0x90500000 0x6fa00000 Data When eMMC or SDCard is selected as boot media, the TF-A expects a GPT in the first 32kb of the flash memory. The ROM code will look for a partition called fip. It will now try to boot from this partition. If the booting from the fip partition fails, it will try to load the firmware image from the fip.bak recovery partition. If the boot attempt from the recovery partition is failing, no fallback approach is offered here. Possible boot methods will be described in the upcoming sections. Before using the network boot feature, it needs to be ensured that the UBoot bootlader is made available inside the BL33. After startup and entering UBoot console, the network stack on the target needs to be configured. This can be done by using static network settings or using a dynamic IP address provisioning like DHCP. On the host system a TFTP server needs to be established. Host and target needs to be located in the same subnet. Afterwards the files can be transmitted over network to the target system memory. For the network boot scenario a 'fit.itb' file needs to be provisioned by the TFTP server. After configuration of the UBoot, the file can be uploaded to the platform and will be executed directly from the target memory. When QSPI/NOR is selected as boot media, the TF-A expect that the NOR flash is used in raw mode. This means in comparison to the eMMC/SDCard approach, there is no filesystem applied here. The NOR flash device can usually programmed with a standard SPI flash programmer. Before attaching the programmer, check the usage of the proper pin header and use the correct SPI pins on the eval board. But here, there is also another further way for updating the NOR flash device possible. This will be described in the upcoming chapters. Take care to write the 'fip.bin' file to a NOR memory address of 0x0 (zero).+ Because of the NOR size limitation on the LAN969x eval boards, only the 'fip.bin' file can be stored. For the eMMC boot operation mode, the 'fip.bin' file must to be located in a partition named 'fip' or 'fip.bak'. In this example, the UBoot needs to be part of the 'fip.bin'. This is required for uploading and writing the ITB and FS data via DHCP/TFTP to the correct eMMC partition sections. Afterwards the environment variables of UBoot needs to be setup properly for a full boot. In case of a blank eMMC or NOR device, following the instructions in Restore SecureBoot Images According the flashed FIP or GPT file, UBoot is available during system boot and can be used for customizing e.g. the ITB and rootfs related components. Furthermore, it can be used for updating existing GPT images or FIP files on the flash device. The table above lists the FIP or GPT images that contains a UBoot binary. Sometimes it makes also to use the command of 'help', which provides a huge collection of all available commands and features. For example, the command of 'env print' can be used for dumping all available and initialized variables on the system. For setting up the UBoot mode, following steps needs to be applied: Set the strapping mode to 0x0 (eMMC + FC0). See LAN969x Strapping Pins. Attach the board via usb cable to the host workstation Configure a serial console application like e.g. putty (settings 115200/8/N/1) Attach console application to /dev/ttyACM0 Reset the board and interrupt the UBoot autoboot before timeout. On UBoot console, the command 'mmc info' will return the emmc device properties. m => mmc info Device: sdhci-host@e0830000 Manufacturer ID: 9d OEM: 101 Name: IS008 Bus Speed: 30000000 Mode : MMC High Speed (52MHz) Rd Block Len: 512 MMC version 5.0 High Capacity: Yes Capacity: 7.3 GiB Bus Width: 4-bit Erase Group Size: 512 KiB HC WP Group Size: 8 MiB User Capacity: 7.3 GiB WRREL Boot Capacity: 4 MiB ENH RPMB Capacity: 4 MiB ENH The UBoot command of 'mmc help' will provide an overview of all available mmc sub system related commands. m => mmc help mmc - MMC sub system Usage: mmc info - display info of the current MMC device mmc read addr blk# cnt mmc write addr blk# cnt mmc erase blk# cnt mmc rescan mmc part - lists available partition on current mmc device mmc dev [dev] [part] - show or set current mmc device [partition] mmc list - lists available devices mmc hwpartition [args...] - does hardware partitioning arguments (sizes in 512-byte blocks): [user [enh start cnt] [wrrel {on|off}]] - sets user data area attributes [gp1|gp2|gp3|gp4 cnt [enh] [wrrel {on|off}]] - general purpose partition [check|set|complete] - mode, complete set partitioning completed WARNING: Partitioning is a write-once setting once it is set to complete. Power cycling is required to initialize partitions after set to complete. mmc bootbus dev boot_bus_width reset_boot_bus_width boot_mode - Set the BOOT_BUS_WIDTH field of the specified device mmc bootpart-resize - Change sizes of boot and RPMB partitions of specified device mmc partconf dev [boot_ack boot_partition partition_access] - Show or change the bits of the PARTITION_CONFIG field of the specified device mmc rst-function dev value - Change the RST_n_FUNCTION field of the specified device WARNING: This is a write-once field and 0 / 1 / 2 are the only valid values. mmc setdsr - set DSR register value For example, the MMC command of 'mmc write' will primarily used for storing the data content on the flash device. For setting up the UBoot mode, following steps needs to be applied: Set the strapping mode to 0x1 (QSPI + FC0). See LAN969x Strapping Pins. Attach the board via usb cable to the host workstation Configure a serial console application like e.g. putty (settings 115200/8/N/1) Attach putty to /dev/ttyACM0 Reset the board and interrupt the UBoot autoboot before timeout On the UBoot console, the command 'sf probe' will return the spi flash device properties m => sf probe SF: Detected sst26wf016 with page size 256 Bytes, erase size 4 KiB, total 2 MiB The UBoot command of 'sf help' will provide an overview of all available spi flash related sub system commands. m => sf help sf - SPI flash sub-system Usage: sf probe [[bus:]cs] [hz] [mode] - init flash device on given SPI bus and chip select sf read addr offset|partition len - read `len' bytes starting at `offset' or from start of mtd `partition'to memory at `addr' sf write addr offset|partition len - write `len' bytes from memory at `addr' to flash at `offset' or to start of mtd `partition' sf erase offset|partition [+]len - erase `len' bytes from `offset' or from start of mtd `partition' `+len' round up `len' to block size sf update addr offset|partition len - erase and write `len' bytes from memory at `addr' to flash at `offset' or to start of mtd `partition' sf protect lock/unlock sector len - protect/unprotect 'len' bytes starting at address 'sector' The SPI flash command of 'sf write' or 'sf update' will primarily used for storing FIP data content on the SPI flash device. UBoot can also configured for using the network stack for file transmission. A common practice is to enable the DHCP server on the host and using the UBoot 'dhcp' command. After recognizing a valid IP address, a file transmission using TFTP wil be established. In case of using a static IP setup on the target, the following example can be applied via UBoot console. Adjust the values to the individual network environment. The command of 'tftpboot' can be used then afterwards on the UBoot console. env set 'ipaddr 192.168.0.10' env set 'netmask 255.255.255.0' env set 'serverip 192.168.0.1' saveenv m => help tftp tftpboot - boot image via network using TFTP protocol Usage: tftpboot [loadAddress] [[hostIPaddr:]bootfilename] In case of a available DHCP server in the network, the UBoot command of 'dhcp' can be used. It will setup the network configuration and establish afterwards the TFTP based file transmission. m => help dhcp dhcp - boot image via network using DHCP/TFTP protocol Usage: dhcp [loadAddress] [[hostIPaddr:]bootfilename] The DHCP server, TFTP server and the target needs to be reside in the same network. Hereby, a test binary called 'fip.bin' will be now transmitted from the TFTP server via network to the target device memory. The used address of 0x64000000 is chosen randomly and points to an unused DDR memory section. m => dhcp 0x64000000 fip.bin port0 Waiting for PHY auto negotiation to complete........ done Using port0 device TFTP from server 192.168.0.1; our IP address is 192.168.0.20 Filename 'fip.bin'. Load address: 0x64000000 Loading: ###################################### 106.4 KiB/s done Bytes transferred = 553376 (871a0 hex) Now, the 'fip.bin' data is copied the target memory and can be e.g. written into an eMMC partition or in NOR flash device. This chapter shows some update examples. In the first step, we have to check the UBoot environment variables inside the UBoot console. Therefore enter UBooot console by following routine: Reset the board and wait for the UBoot autoboot stage Press any key to stop autoboot timer in order to get a U-Boot console prompt. Make sure that following environment variables are available as shown. m => env print baudrate=115200 bootargs=console=ttyAT0,115200 root=/dev/ram0 loglevel=4 uio_pdrv_genirq.of_id=generic-uio bootargs_extra=uio_pdrv_genirq.of_id=generic-uio loglevel=1 bootcmd=run mmc_boot bootdelay=3 console=ttyAT0,115200n8 div_512=setexpr _tmp_ ${filesize} + 0x1ff; setexpr filesize_512 ${_tmp_} / 0x200; env set _tmp_ fdt_high=0xffffffff fdt_update=fdt addr ${loadaddr}; fdt set /images/kernel/ entry ; fdt set /images/kernel/ load fip_fw=lan969x_a0.fip fip_fw_dl=dhcp ${loadaddr} ${fip_fw} initrd_high=0xffffffff loadaddr=0x64000000 mmc_bak=6 mmc_boot=run mmc_tryboot;run mmc_swap; run mmc_tryboot mmc_boot01_dlup=run mmc_dl; run mmc_boot0_upd; run mmc_boot1_upd mmc_boot0_dlup=run mmc_dl; run mmc_boot0_upd mmc_boot0_upd=run div_512; gpt setenv mmc 0 Boot0; mmc write ${mmc_unzip_loadaddr} ${gpt_partition_addr} ${filesize_512} mmc_boot1_dlup=run mmc_dl; run mmc_boot1_upd mmc_boot1_upd=run div_512; gpt setenv mmc 0 Boot1; mmc write ${mmc_unzip_loadaddr} ${gpt_partition_addr} ${filesize_512} mmc_cur=5 mmc_dev=mmc 0 mmc_dl=dhcp ${loadaddr} ${mmc_fw}; unzip ${loadaddr} ${mmc_unzip_loadaddr} mmc_fip01_dlup=run fip_fw_dl; if test $? = 0; then run mmc_fip0_upd; run mmc_fip1_upd; fi mmc_fip0_dlup=run fip_fw_dl; if test $? = 0; then run mmc_fip0_upd; fi; mmc_fip0_upd=run div_512; gpt setenv mmc 0 fip; mmc write ${loadaddr} ${gpt_partition_addr} ${filesize_512} mmc_fip1_dlup=run fip_fw_dl; if test $? = 0; then run mmc_fip1_upd; fi; mmc_fip1_upd=run div_512; gpt setenv mmc 0 fip.bak; mmc write ${loadaddr} ${gpt_partition_addr} ${filesize_512} mmc_format=gpt guid ${mmc_dev} mmc_guid; gpt write ${mmc_dev} ${mmc_part}; env save mmc_fw=brsdk_standalone_arm64.ext4.gz mmc_load=ext4load ${mmc_dev}:${mmc_cur} ${loadaddr} Image.itb mmc_part=uuid_disk=${mmc_guid};name=fip,start=1MiB,size=128MiB,type=system;name=fip.bak,size=128MiB,type=system;name=Env,size=2MiB,type=data;name=Env.bak,size=2MiB,type=data;name=Boot0,size=1GiB,type=linux;name=Boot1,size=1GiB,type=linux;name=Data,size=-,type=linux mmc_swap=env set _mmc_tmp ${mmc_bak}; env set mmc_bak ${mmc_cur}; env set mmc_cur ${_mmc_tmp}; env set _mmc_tmp; env save mmc_tryboot=run mmc_load; if test $? = 0; then run fdt_update; setenv mtdroot root_next=/dev/mmcblk0p${mmc_cur}; run ramboot; fi; mmc_unzip_loadaddr=0x80000000 mtdparts=mtdparts=spi0:-(fip) nor_boot=sf probe; env set active linux; run nor_tryboot; env set active linux.bk; run nor_tryboot nor_dlup=dhcp ${nor_image}; run nor_update nor_fip_dlup=run fip_fw_dl; if test $? = 0; then run nor_fip_upd; fi; nor_fip_upd=sf probe; sf update ${loadaddr} 0 ${filesize} nor_image=brsdk_standalone_arm64.itb nor_only=env set mtdparts mtdparts=${nor_parts};env set bootcmd run nor_boot;env save nor_parts=spi0:1920k(fip),64k(Env),64k(Env.bk),25m(linux),25m(linux.bk),12m(rootfs_data) nor_tryboot=mtd read ${active} ${loadaddr}; run ramboot nor_update=sf probe; sf update ${fileaddr} linux ${filesize} ramboot=bootm start ${loadaddr}#${pcb}; bootm loados ${loadaddr}#${pcb}; bootm ramdisk ${loadaddr}#${pcb}; run set_rootargs; run setup; bootm fdt ${loadaddr}#${pcb}; bootm prep ${loadaddr}#${pcb}; bootm go ${loadaddr}#${pcb} rootargs_mmc=setenv rootargs root=/dev/mmcblk0p${mmc_cur} rw rootwait rootargs_ram=setenv rootargs root=/dev/ram0 ro rootwait set_rootargs=if test $initrd_start = 0; then run rootargs_mmc; else; run rootargs_ram; fi; setup=setenv bootargs console=${console} ${mtdparts} ${rootargs} ${mtdroot} fis_act=${active} boot_source=${boot_source} ${bootargs_extra} Environment size: 3056/65531 bytes Use the env set command if something is wrong or missing and remember to use the env save command when you are done. There might be other environment variables defined, but you can safely ignore them. Some explanation for the predefined environment variables and for what they are used for: fdt_high - The value 0xffffffff prevents an extra copy of the flattened device tree. initrd_high - The value 0xffffffff prevents an extra copy of the ramdisk. baudrate - U-Boot console baudrate. bootdelay - Number of seconds to wait for user input before running bootcmd. bootcmd - Command to run automatically at boot. Default is set to run mmc_boot. loadaddr - Temporary address to use when loading images via TFTP or from eMMC. mmc_unzip_loadaddr - Temporarily used address for uncompressing images mmc_bak - The backup partition index for boot1 mmc_boot - Try first to load 'brsdk_standalone_arm64.ext4.gz' from active partition. If failing then backup partition will be tried mmc_cur - The default partition index for boot0 mmc_dev - eMMC device to use in read/write commands. mmc_format - Format eMMC device according defined partition layout mmc_part - Partition layout definitions to use in 'mmc_format'. mmc_swap - Change active partition from 'Boot0' to 'Boot1' and vice versa mmc_tryboot - Seeking for available boot images mmc_load - Try to load an ITB image from the active partition ramboot - Try to load an run an ITB image from memory setup - Configuring bootargs environment variable rootargs_mmc - Configuration for rootfs in eMMC rootargs_ram- Configuration for rootfs in ram set_rootargs - Set correct configuration for root file system div_512 - Calculates the number of required flash pages (512 bytes) fip_fw - Defines the name of the FIP file used for eMMC and NOR update fip_fw_dl - Configuring and starting the DHCP request for file download nor_fip_upd - Writes the FIP data to the NOR flash device nor_fip_dlup - Download and write the FIP data to NOR flash device mmc_fip0_upd - Writes FIP data to the eMMC device in partition 'fip' mmc_fip_dlup - Download and write the FIP data to eMMC device mmc_fip1_upd - Writes FIP data to the eMMC device in partition 'fip.bak' mmc_fip1_dlup - Download and write the FIP data to eMMC device mmc_fip01_dlup - Download FIP and write data to partition 'fip0' and 'fip1' mmc_fw - Defines the name of the ext4.gz file for eMMC update mmc_dl - Download ext4.gz file and uncompress data into target memory mmc_boot0_upd - Writes the uncompressed data to the eMMC device in partition 'boot0' mmc_boot0_dlup - Download, uncompress and write the image data to eMMC device mmc_boot1_upd - Writes the uncompressed data to the eMMC device in partition 'boot1' mmc_boot1_dlup - Download, uncompress and write the image data to eMMC device mmc_boot01_dlup - Download, uncompress and write data to partition 'boot0' and 'boot1' console - Configuration settings for the console terminal mtdparts - NOR flash partition configuration bootargs_extra - Additional UBoot arguments The following examples assumes that the build artifacts of brsdk_standalone_arm64.ext4.gz and/or lan969x_a0.fip are available on the TFTP server. For a successful eMMC boot, a special partition layout needs to be make available on the flash device. This can be achieved by following two approaches: Use the already defined UBoot console command of 'mmc_format': m => run mmc_format success! Writing GPT: success! Saving Environment to MMC... Writing to redundant MMC(0)... OK or Write a GPT image directly to the blank eMMC device, like described in the eMMC GPT section. For checking the partition layout, use the UBoot command of 'mmc part'.This is the expected partition layout here: m => mmc part Partition Map for MMC device 0 -- Partition Type: EFI Part Start LBA End LBA Name Attributes Type GUID Partition GUID 1 0x00000040 0x0004003f \"fip\" attrs: 0x0000000000000000 type: ebd0a0a2-b9e5-4433-87c0-68b6b72699c7 guid: 00042021-0408-4601-9dcc-a8c51255994f 2 0x00040040 0x0008003f \"fip.bak\" attrs: 0x0000000000000000 type: ebd0a0a2-b9e5-4433-87c0-68b6b72699c7 guid: 8ef917d1-2c6f-4bd0-a5b2-331a19f91cb2 3 0x00080040 0x0008103f \"Env\" attrs: 0x0000000000000000 type: ebd0a0a2-b9e5-4433-87c0-68b6b72699c7 guid: 77877125-add0-4374-9e60-02cb591c9737 4 0x00081040 0x0008203f \"Env.bak\" attrs: 0x0000000000000000 type: ebd0a0a2-b9e5-4433-87c0-68b6b72699c7 guid: b4b84b8a-04e3-48ae-8536-aff5c9c495b1 5 0x00082040 0x0028203f \"Boot0\" attrs: 0x0000000000000000 type: ebd0a0a2-b9e5-4433-87c0-68b6b72699c7 guid: 35219908-c613-4b08-9322-3391ff571e19 6 0x00282040 0x0048203f \"Boot1\" attrs: 0x0000000000000000 type: ebd0a0a2-b9e5-4433-87c0-68b6b72699c7 guid: 8e123a33-e3d3-4db9-92f4-d3ebd9b3224f 7 0x00482040 0x00e8ffde \"Data\" attrs: 0x0000000000000000 type: ebd0a0a2-b9e5-4433-87c0-68b6b72699c7 guid: 02a90af2-5d1c-4a29-9177-97a513e3cae4 Verify that Start LBA in each partition equals the partition addresses in the corresponding environment variable mmc_p. Please also see the Partition table section. The following scenario will now upload an brsdk_standalone_arm64.ext4.gz file, which is containing an ext4 rootfs and including an ITB in the root directory. Following steps needs to be applied therefore: Run the mmc_boot0_dlup command to load the brsdk_standalone_arm64.ext4.gz file via DHCP to the target memory. Afterwards, the file will be uncompressed and written into the eMMC partition 'Boot0'. m => run mmc_boot0_dlup port0 Waiting for PHY auto negotiation to complete........ done Using port0 device TFTP from server 192.168.0.1; our IP address is 192.168.0.10 Filename 'brsdk_standalone_arm64.ext4.gz'. Load address: 0x64000000 Loading: ################################################################# ###### ........... ################################################################# ######################### 6.2 MiB/s done Bytes transferred = 106115072 (6533000 hex) MMC write: dev # 0, block # 8192, count 208960 ... 208960 blocks written: OK If UBoot run in its default configuration, it will do now all needed actions, and make the rootfs and ITB available in the expected eMMC partition. Running the fip_fw_dl command will upload the lan969x_a0.fip file using the DHCP/TFTP connection. m => fip_fw_dl port0 Waiting for PHY auto negotiation to complete........ done Using port0 device TFTP from server 192.168.0.1; our IP address is 192.168.0.10 Filename 'lan969x_a0.fip'. Load address: 0x64000000 Loading: ################################################################# ###### ........... ################################################################# ######################################### 2.9 MiB/s done Bytes transferred = 22538412 (157e8ac hex) Afterwards the command of ramboot will execute the image inside the memory. For example: ## Loading kernel from FIT Image at 64000000 ... Using Device Tree in place at 67d00000, end 67d07977 Starting kernel ... For configuring the device permanently to the network boot mode, set the environment variable of bootcmd as shown below: m => setenv bootcmd 'run fip_fw_dl; run ramboot' m => saveenv m => reset After reset, UBoot will run the sequence of bootcmd on every target startup. No matter if you have a eMMC equipped evaluation board you can also select to store the boot image in SPI NOR flash only and use this image as the boot media. This will not be as fast as booting from eMMC but can be used as a fallback solution in case the first option is not available for some other reason. To set the u-boot env to boot from nor it is required to run this command: m => run nor_only This will partitioned the NOR like this: m => mtd list List of MTD devices: * nor0 - device: spi-flash@0 - parent: qspi@e0834000 - driver: jedec_spi_nor - path: /ahb/apb/qspi@e0834000/spi-flash@0 - type: NOR flash - block size: 0x1000 bytes - min I/O: 0x1 bytes - 0x000000000000-0x000000200000 : \"nor0\" - 0x000000000000-0x0000001e0000 : \"fip\" - 0x0000001e0000-0x0000001f0000 : \"Env\" - 0x0000001f0000-0x000000200000 : \"Env.bk\" - 0x000000200000-0x000001a00000 : \"linux\" - 0x000001a00000-0x000003400000 : \"linux.bk\" - 0x000003400000-0x000004000000 : \"rootfs_data\" As you can see there are two 25MB linux partitions (a main and a backup) that can be used to store a FIT image. To add an image in the NOR flash it is required to download the image and write it in the NOR using the command: m => run nor_dlup You can boot the system with the run nor_boot command. The UBoot console can also be used for programming a new image. This can be the case for some update reasons. But therefore, a running system with UBoot needs to be available on the target. In the first step, we have to boot into UBoot console like following description: Reset the board and wait for the UBoot autoboot stage Press any key to stop autoboot timer in order to get a U-Boot console prompt. Now we will upload a GPT image like e.g. lan969x_a0-release-ssk-mmc.gpt to the target memory. m => dhcp 0x64000000 lan969x_a0-release-ssk-mmc.gpt port0 Waiting for PHY auto negotiation to complete........ done Using port0 device TFTP from server 192.168.0.1; our IP address is 192.168.0.10 Filename 'lan969x_a0-release-ssk-mmc.gpt'. Load address: 0x64000000 Loading: ################################################################# ################################################################# ###### ........... ################################################################# ####### 6.1 MiB/s done Bytes transferred = 104890368 (6408000 hex) Now the image data is uploaded to the target memory and can be written to the flash device. Lets focus on the next two upcoming commands. The first command converts the uploaded filesize to the required number of flash pages (512 byte). The second command is writing the image data to the eMMC flash device. Important is here, to set the write offset address of 0x0 (zero) for the flash. m => run div_512 m => mmc write ${loadaddr} 0x0 ${filesize_512} MMC write: dev # 0, block # 0, count 208960 ... 208960 blocks written: OK A running Linux system on the target can also be used for image update purpose. Therefore a network connection from the target to the host system needs to be established first. Afterwards a working TFTP server needs to make available in the same network. Using the fdisk command will dump the available partitions on the eMMC. This is useful for checking the proper partition index identifier. The device /dev/mmcblk0p corresponds to partition . # fdisk -l Found valid GPT with protective MBR; using GPT Disk /dev/mmcblk0: 15269888 sectors, 3360M Logical sector size: 512 Disk identifier (GUID): 671e9526-c34a-4bc9-9670-bfebb6dba410 Partition table holds up to 128 entries First usable sector is 34, last usable sector is 15269854 Number Start (sector) End (sector) Size Name 1 2048 264191 128M fip 2 264192 526335 128M fip.bak 3 526336 530431 2048K Env 4 530432 534527 2048K Env.bak 5 534528 2631679 1024M Boot0 6 2631680 4728831 1024M Boot1 7 4728832 7634910 1418M Data One way to upload the e.g. lan969x_a0-release-ssk.fip file, is to use a TFTP client inside the running Linux. Therefore attach the putty console to the target and upload the FIP file using the 'dhcp' or 'tftp' command in an e.g. /temp folder on the target. Afterwards the file can be written by using the dd command into the proper device partition. In this example, we will write the data into the partition named to fip which can be mapped to /dev/mmcblk0p1. dd if=/temp/lan969x_a0-release-ssk.fip of=/dev/mmcblk0p1 After rebooting of the target, the updated file will be executed now. The same approach as described before, can be applied also for updating the brsdk_standalone_arm64.ext4.gz binary. Upload the file using e.g. TFTP to a /temp folder or to a destination folder of your preference. In this folder, it needs to be unzipped first. Afterwards write the file by using the dd command to the proper device partition. In this example, we will write the data into the partition named to Boot0 which can be mapped to /dev/mmcblk0p5. dd if=/temp/ext4-itb-bare.ext4 of=/dev/mmcblk0p5 After rebooting of the target, the updated file will be executed now. BL1 Boot Loader 1: In secure immutable ROM (Trusted ROM Firmware) BL2 Boot Loader 2: In secure on-chip RAM, temporary (Trusted Boot Firmware) BL31 Boot Loader 31: Resident secure services (ARM v8) BL32 Boot Loader 32: Resident secure services (ARM v7) BL33 Boot Loader 33: Typically U-Boot. BSSK Binding Secret Symmetric Key CLI Command line interface DDR Double Data Rate, memory type DHCP Dynamic Host Configuration Protocol DTB Device Tree Blob DTC Device Tree Compiler DTS Device Tree Source files eMMC Embedded MultiMediaCard FCx Flex Com Interface #x FIP Firmware Image Package FIT Flattened Image Tree FS Filesystem FW Firmware GPT GUID Partition Table JTAG Joint Test Action Group, interface for testing and debugging KERNEL The Linux kernel LBA Logical Block Address OTP One-Time-Programmable Memory PCIe Peripheral Component Interconnect Express PSCI Power State Coordination Interface ROOTFS ROOT File System, used in Linux context ROT Root of Trust ROT-PK Root of Trust Public Key ROT-PK-SHA Root of Trust Public Key SHA (SHA of the public key of the ROT) ROT-PRIVATE Root of Trust Private Key SDCard Secure Digital Card SJTAG Secure JTAG SoC System on Chip SPI Serial Peripheral Interface SRAM Secure Ram SSK Secret Symmetric Key TBBR Trusted Board Boot Requirements TF-A Trusted Firmware for ARMv7 and ARMv8 TFTP Trivial File Transfer Protocol UART Universal Asynchronous Receiver-Transmitter","title":"Booting LAN969x","component":"bsp","version":"2023.12","name":"lan969x-boot","url":"/bsp/2023.12/supported-hw/lan969x-boot.html","titles":[{"text":"1. Booting LAN969x","hash":"_booting_lan969x","id":1},{"text":"1.1. Introduction","hash":"_introduction","id":2},{"text":"1.2. Overview","hash":"_overview","id":3},{"text":"1.3. Boot media configuration","hash":"pin_modes","id":4},{"text":"1.3.1. UART Traces","hash":"_uart_traces","id":5},{"text":"1.3.2. Booting from eMMC/SDCard (0000, 0010, 0011 or 0101)","hash":"_booting_from_emmcsdcard_0000_0010_0011_or_0101","id":6},{"text":"1.3.3. Booting from NOR (0001 or 0100)","hash":"booting","id":7},{"text":"1.3.4. UART Monitor (1010)","hash":"uart_monitor","id":8},{"text":"1.3.5. High-Speed UART Monitor (1011)","hash":"_high_speed_uart_monitor_1011","id":9},{"text":"1.3.6. SPI Client (pin mode 1111)","hash":"_spi_client_pin_mode_1111","id":10},{"text":"2. Beyond TF-A","hash":"_beyond_tf_a","id":11},{"text":"2.1. TF-A/UBoot/Linux","hash":"_tf_aubootlinux","id":12},{"text":"2.2. TF-A/Linux","hash":"_tf_alinux","id":13},{"text":"3. Images and artifacts","hash":"_images_and_artifacts","id":14},{"text":"3.1. TFA images","hash":"_tfa_images","id":15},{"text":"3.2. Buildroot artifacts","hash":"_buildroot_artifacts","id":16},{"text":"3.3. Artifacts","hash":"_artifacts","id":17},{"text":"3.3.1. TFA images","hash":"_tfa_images_2","id":18},{"text":"3.3.2. Buildroot artifacts","hash":"_buildroot_artifacts_2","id":19},{"text":"3.3.3. Kernel","hash":"_kernel","id":20},{"text":"3.3.4. DTS","hash":"_dts","id":21},{"text":"3.3.5. DTB","hash":"_dtb","id":22},{"text":"3.3.6. rootfs","hash":"_rootfs","id":23},{"text":"3.3.7. rootfs/tar","hash":"_rootfstar","id":24},{"text":"3.3.8. squashfs","hash":"_squashfs","id":25},{"text":"3.3.9. ext4","hash":"_ext4","id":26},{"text":"3.4. FIT","hash":"_fit","id":27},{"text":"3.4.1. ITB full","hash":"_itb_full","id":28},{"text":"3.5. ext4","hash":"_ext4_2","id":29},{"text":"3.5.1. ext4 with embedded ITB bare on FS","hash":"_ext4_with_embedded_itb_bare_on_fs","id":30},{"text":"3.6. FIP","hash":"_fip","id":31},{"text":"3.7. GPT image","hash":"_gpt_image","id":32},{"text":"3.8. eMMC/SDCard default partition schema","hash":"part_table","id":33},{"text":"4. Boot configurations","hash":"_boot_configurations","id":34},{"text":"4.1. Network-boot","hash":"_network_boot","id":35},{"text":"4.2. NOR","hash":"_nor","id":36},{"text":"4.3. eMMC","hash":"_emmc","id":37},{"text":"5. Use-cases","hash":"_use_cases","id":38},{"text":"5.1. Debrick or blank flash","hash":"_debrick_or_blank_flash","id":39},{"text":"5.2. UBoot","hash":"_uboot","id":40},{"text":"5.2.1. Working with MMC subsystem","hash":"_working_with_mmc_subsystem","id":41},{"text":"5.2.2. Working with NOR subsystem","hash":"_working_with_nor_subsystem","id":42},{"text":"5.2.3. Loading files from network","hash":"load_files_network","id":43},{"text":"5.2.4. Boot image","hash":"_boot_image","id":44},{"text":"5.2.4.1. from eMMC","hash":"_from_emmc","id":45},{"text":"5.2.4.2. from network","hash":"_from_network","id":46},{"text":"5.2.4.3. from NOR","hash":"_from_nor","id":47},{"text":"5.2.5. Program image","hash":"_program_image","id":48},{"text":"5.2.5.1. to eMMC","hash":"_to_emmc","id":49},{"text":"5.3. Update image from Linux","hash":"_update_image_from_linux","id":50},{"text":"5.3.1. Update FIP","hash":"_update_fip","id":51},{"text":"5.3.2. Update ext4-img","hash":"_update_ext4_img","id":52},{"text":"6. TERMS and ABBREVIATIONS","hash":"term","id":53}]},"63":{"id":63,"text":"LAN969X SoC have 4 FLEXCOMs (Flexible Serial Communication Controller). Each flexcom supports three serial communication protocols that includes USART (Universal Synchronous Asynchronous Receiver Transceiver). See USART documentation SPI (Serial Peripheral Interface). See SPI documentation TWI (Two-wire Interface) or I2C (Inter Integrated Circuit). See TWI documentation Each flexcom has two optional I/O lines. Namely, CS0 and CS1 in flexcom SPI mode. CTS and RTS in flexcom USART mode. These chip-selects can be mapped to lan969x FLEXCOM_SHARED[0-20] pins and usage depends on functions being configured. Following kernel config options should be enabled to use LAN969x Flexcom interface: CONFIG_MFD_ATMEL_FLEXCOM - Flexcom driver config option. Following configurations are required to define a flexcom in device tree: compatible string must be set to atmel,sama5d2-flexcom or set to microchip,lan969x-flexcom in case flexcom chip-select configurations are required. Flexcom reg property must be set with register address and length. Refer table below: FLEXCOM ID Flexcom base registers map flx0 flx1 flx2 flx3 clocks property must be set to where x is flexcom ID. #address-cells must be set to 1. #size-cells must be set to 1. ranges must be set to one range for the full I/O register region. Optional flexcom chip-select configurations: In order to map flexcom USART cts, rts lines or flexcom SPI cs0, cs1 lines to flexcom shared pins, use below properties: Append flexcom shared register address and length to reg property. Refer table below: microchip,flx-shrd-pins - Specify the flexcom shared pins to be mapped to chip-select line. Possible flexcom shared pins are [0-20]. microchip,flx-cs - Specify chip-selects to be configured. 0 for cts line in USART mode, cs0 in SPI mode. 1 for rts line in USART mode, cs1 in SPI mode. FLEXCOM ID Flexcom shared registers map flx0 flx1 flx2 flx3 flx4 Flexcom Documentation Following example shows how a flexcom should be defined in device tree. Example to configure flexcom2 in TWI mode: dtsi file: flx2: flexcom@e0060000 { compatible = \"atmel,sama5d2-flexcom\"; reg = ; clocks = ; #address-cells = ; #size-cells = ; ranges = ; status = \"disabled\"; }; dts file: &flx2 { atmel,flexcom-mode = ; status = \"okay\"; }; Example to configure flexcom3 in SPI mode and map cs0 to flexcom shared pin 4: dtsi file: flx3: flexcom@e0064000 { compatible = \"microchip,lan969x-flexcom\"; reg = , ; clocks = ; #address-cells = ; #size-cells = ; ranges = ; status = \"disabled\"; }; dts file: &flx3 { atmel,flexcom-mode = ; microchip,flx-shrd-pins = ; microchip,flx-cs = ; status = \"okay\"; };","title":"LAN969x FLEXCOM","component":"bsp","version":"2023.12","name":"lan969x-flexcom","url":"/bsp/2023.12/supported-hw/lan969x-flexcom.html","titles":[{"text":"1. LAN969x FLEXCOM","hash":"_lan969x_flexcom","id":1},{"text":"1.1. SoC Resources","hash":"_soc_resources","id":2},{"text":"1.2. Kernel configurations","hash":"_kernel_configurations","id":3},{"text":"1.3. Devicetree Configuration","hash":"_devicetree_configuration","id":4},{"text":"1.3.1. References","hash":"_references","id":5},{"text":"1.3.2. Example","hash":"_example","id":6}]},"64":{"id":64,"text":"LAN969x SoC supports two instances of CAN-FD (Control Area Network with Flexible Data-Rate) which is compliant with CAN 2.0 Part A and 2.0 Part B. Following kernel config options should be enabled to use LAN969x MCAN: CONFIG_CAN - CAN driver config option. CONFIG_CAN_M_CAN - Bosch MCAN config option. CONFIG_CAN_M_CAN_PLATFORM - Bosch M_CAN support for io-mapped devices. To enable MCAN interface, following configurations are required in device tree: compatible string must be set to bosch,m_can. reg property must be set to and for mcan0, and and for mcan1. reg-names must be set to m_can and message_ram. interrupts property must be set with interrupt details as show in the table: MCAN ID Shared Peripheral Interrupt (int0) CPU INTR (int0) Shared Peripheral Interrupt (int1) CPU INTR (int1) mcan0 102 70 103 71 mcan1 104 72 105 73 Note Shared peripheral interrupt lines start at index ID32. So, CPU INTR must be calculated as [Shared peripheral interrupt number - 32]. interrupt-names must be set to int0 and int1. clocks property must be set to , , where x is MCAN ID (0-1). clock-names must be set to hclk and cclk. bosch,mram-cfg property must be set to for mcan0 and standby-gpios property is optional and defines a regular GPIO line that is used to mute the transmitter and block the receiver if the line is high. MCAN DT Documentation CAN driver implementation Following example shows how a CAN controller should be defined in DT: dtsi file: can0: can@e081c000 { compatible = \"bosch,m_can\"; reg = , ; reg-names = \"m_can\", \"message_ram\"; interrupts = , ; interrupt-names = \"int0\", \"int1\"; clocks = , ; clock-names = \"hclk\", \"cclk\"; assigned-clocks = ; assigned-clock-rates = ; bosch,mram-cfg = ; status = \"disabled\"; }; dts file changes: &can0 { pinctrl-0 = ; pinctrl-names = \"default\"; standby-gpios = ; status = \"okay\"; }; The standby-gpios shown above is just an example and must match the actual board design. The EVB-LAN9696-24port EVB does not have any CAN devices, so please refer to the LAN966x MCAN page for more details.","title":"LAN969x MCAN","component":"bsp","version":"2023.12","name":"lan969x-mcan","url":"/bsp/2023.12/supported-hw/lan969x-mcan.html","titles":[{"text":"1. LAN969x MCAN","hash":"_lan969x_mcan","id":1},{"text":"1.1. SoC Resources","hash":"_soc_resources","id":2},{"text":"1.2. Kernel configurations","hash":"_kernel_configurations","id":3},{"text":"1.3. Devicetree Configuration","hash":"_devicetree_configuration","id":4},{"text":"1.3.1. References","hash":"_references","id":5},{"text":"1.3.2. Example","hash":"_example","id":6}]},"65":{"id":65,"text":"LAN969X SoC have 4 FLEXCOMs (Flexible Serial Communication Controller). Each flexcom supports three serial communication protocols that includes USART(Universal Synchronous Asynchronous Receiver Transceiver). SPI(Serial Peripheral Interface). TWI(Two-wire Interface) or I2C(Inter Integrated Circuit). In order to use a I2C interface, a specific flexcom should be configured in I2C mode. Following kernel config options should be enabled to use LAN969x I2C interface: CONFIG_MFD_ATMEL_FLEXCOM - Flexcom driver config option. CONFIG_I2C_AT91 - I2C driver config option. Corresponding flash driver should be enabled. Below example explains I2C with a EEPROM device for which CONFIG_EEPROM_AT24 config option is required. To use I2C interface, following configurations are required in device tree. Each of the flexcom flx0, flx1, flx2 and flx3 nodes can be configured in I2C mode ATMEL_FLEXCOM_MODE_TWI to use I2C interface. compatible string must be set to microchip,sam9x60-i2c. reg property must be set with register address and length as GPIO pins for TXD, RXD should be configured to pinctrl-0 property.. List of possible pin mappings are as in below table: FLEXCOM ID ALT Mode RXD pin TXD pin flx0 ALT 2 GPIO3 GPIO4 flx2 ALT 3 GPIO15 GPIO16 flx1 ALT 2 GPIO28 GPIO29 flx3 ALT 2 GPIO55 GPIO56 flx2 ALT 1 GPIO65 GPIO66 interrupts property must set with interrupt details. Interrupt lines[CPU INTR] corresponding to a flexcom must be configured as defined in below table: FLEXCOM ID Shared Peripheral Interrupt CPU INTR flx0 78 46 flx1 79 47 flx2 80 48 flx3 81 49 Note that Shared peripheral interrupt lines start at index ID32. So, CPU INTR must be calculated as [Shared peripheral interrupt number - 32]. Input clock clocks property must be set to &fabric_clk. Note that Fabric clock (250Mhz) is clock used by AXI, AHB fabric and APB bridges which connects all peripherals. clock-names must be set to usart. GPIO flexcom shared pins should be configured as per board design. I2C driver implementation Flexcom DT documentation I2C DT documentation Following example shows how a flexcom I2C should be defined in DT to use SFP devices via an i2c MUX on the EVB-LAN9696-24port board: / { &flx3 { atmel,flexcom-mode = ; status = \"okay\"; i2c3: i2c@600 { pinctrl-0 = ; pinctrl-names = \"default\"; i2c-analog-filter; i2c-digital-filter; i2c-digital-filter-width-ns = ; i2c-sda-hold-time-ns = ; status = \"okay\"; }; }; &gpio { fc3_pins: fc3-pins { pins = \"GPIO_55\", \"GPIO_56\"; function = \"fc\"; }; }; The SFP devices are assigned each to a separate channel by the I2C controller, so you will be able to see 4 devices besides the 2c controller and the i2c mux. # cat /sys/bus/i2c/devices/i2c-0/i2c-1/name i2c-0-mux (chan_id 0) The i2cdetect tool will also list all the devices: # i2cdetect -l i2c-3 i2c i2c-0-mux (chan_id 2) I2C adapter i2c-1 i2c i2c-0-mux (chan_id 0) I2C adapter i2c-4 i2c i2c-0-mux (chan_id 3) I2C adapter i2c-2 i2c i2c-0-mux (chan_id 1) I2C adapter i2c-0 i2c AT91 I2C adapter i2c-5 i2c i2c-0-mux (chan_id 7) I2C adapter This dumps the content of one of the SFP eeproms, to verify that the device is accessible: # i2cdump 0 0x50 i2cdump: WARNING! This program can confuse your I2C bus Continue? [y/N] y 0 1 2 3 4 5 6 7 8 9 a b c d e f 0123456789abcdef 00: 03 04 21 01 00 00 00 00 04 00 00 00 67 00 00 00 ??!?....?...g... 10: 00 00 01 00 46 53 20 20 20 20 20 20 20 20 20 20 ..?.FS 20: 20 20 20 20 00 00 40 20 53 46 50 50 2d 50 43 30 ..@ SFPP-PC0 30: 31 20 20 20 20 20 20 20 41 20 20 20 00 00 00 29 1 A ...) 40: 00 00 00 00 46 32 30 31 31 31 33 35 31 39 36 2d ....F2011135196- 50: 31 20 20 20 32 30 30 39 32 39 20 20 00 00 00 77 1 200929 ...w 60: 37 34 30 2d 30 33 31 38 35 32 20 52 45 56 20 30 740-031852 REV 0 70: 31 20 ff ff ff ff ff ff ff ff ff ff ff ff ff 00 1 .............. 80: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ................ 90: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ................ a0: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ................ b0: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ................ c0: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ................ d0: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ................ e0: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ................ f0: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ................ #","title":"LAN969x I2C","component":"bsp","version":"2023.12","name":"lan969x-i2c","url":"/bsp/2023.12/supported-hw/lan969x-i2c.html","titles":[{"text":"1. LAN969x I2C","hash":"_lan969x_i2c","id":1},{"text":"1.1. SoC Resources","hash":"_soc_resources","id":2},{"text":"1.2. Kernel configurations","hash":"_kernel_configurations","id":3},{"text":"1.3. Devicetree Configuration","hash":"_devicetree_configuration","id":4},{"text":"1.3.1. References","hash":"_references","id":5},{"text":"1.3.2. Example","hash":"_example","id":6},{"text":"1.4. UserSpace","hash":"_userspace","id":7},{"text":"1.4.1. Confirm instances are created","hash":"_confirm_instances_are_created","id":8},{"text":"1.4.2. Show the SFP eeprom","hash":"_show_the_sfp_eeprom","id":9}]},"66":{"id":66,"text":"LAN969x SDMMC controller supports the embedded Multimedia Card (e.MMC) Specification (v5.01) and the SD Memory Card(v3.0). LAN969x has two SDMMC controller instances. SDMMC controller 0 can operate in 4bit or 8bit wide bus mode, and controller 1 can operate in 4 bit mode. It is only possible t use both controllers at the same time if they are both configured for 4bit wide mode as some of the pins would overlap otherwise. Following kernel config options should be enabled to use LAN969x SDMMC: CONFIG_MMC_SDHCI - SD Host controller config option. CONDFIG_MMC - MMC interface config option CONFIG_MMC_SDHCI_OF_AT91 - SDHCI OF support (for the Atmel SDMMC controller) config option. To use SDMMC interface, following configurations are required in device tree. reg property must be set with register address and length. Refer table below: FLEXCOM ID Flexcom base registers map sdmmc0 sdmmc1 compatible string must be set to microchip,lan966x-sdhci. pinctrl-0 property must be set to , to use SD Card interface. , to use eMMC interface. Note emmc_sd_pins includes CMD, CLK, D0, D1, D2, D3, RSTN pins for both SD and eMMC, sdmmc_pins includes VSEL, WP, CD, LED pins for SD interface only and emmc_pins includes D4, D5, D6, D7 pins for eMMC interface only. sdmmc_pins and emmc_pins pin numbers are same but driver will take care of configuring different ALT modes for SD and eMMC pins. pinctrl node CMD pin CLK pin D0 D1 D2 D3 RSTN emmc_sd_pins GPIO14 GPIO15 GPIO16 GPIO17 GPIO18 GPIO19 GPIO24 pinctrl node DT Func VSEL pin WP pin CD pin LED pin sdmmc_pins sd GPIO20 GPIO21 GPIO22 GPIO23 pinctrl node DT Func D4 D5 D6 D7 emmc_pins emmc GPIO20 GPIO21 GPIO22 GPIO23 interrupts property must set with interrupt details. Interrupt number[CPU INTR] corresponding to a sdmmc must be configured as defined below: SDMMC ID Shared Peripheral Interrupt CPU INTR sdmmc0 96 64 sdmmc1 82 50 Note Shared peripheral interrupt lines start at index ID32. So, CPU INTR must be calculated as [Shared peripheral interrupt number - 32]. Input clock clocks property must be set to GCK clock using phandle and GCK ID as . clock-names must be set to hclock and multclk assigned-clocks must be set to . assigned-clock-rates must be set to 45Mhz. Note While operating as eMMC interface, tx-phase property must be set to zero. Possible phase shift values are 0 for 180degrees, c for 90 degrees, 4 for 270 degrees, 8 for 360 degrees. 180 degress phase shift is considered as best chioce for generating phase difference between data/command bus and output clock. It provides sufficient time limit to compensate for any board delays/skew and provides sufficient time margin for setup/hold time requirements. SDHCI DT Documentation MMC DT Documentation Following example shows how a 8bit bus eMMC should be defined in DT: dtsi file: sdmmc0: sdhci-host@e0830000 { compatible = \"microchip,lan966x-sdhci\"; reg = ; interrupts = ; clocks = , ; clock-names = \"hclock\", \"multclk\"; assigned-clocks = ; assigned-clock-rates = ; status = \"disabled\"; }; dts file changes for eMMC: &gpio { emmc_sd_pins: emmc-sd-pins { /* eMMC_SD - CMD, CLK, D0, D1, D2, D3, D4, D5, D6, D7, RSTN */ pins = \"GPIO_14\", \"GPIO_15\", \"GPIO_16\", \"GPIO_17\", \"GPIO_18\", \"GPIO_19\", \"GPIO_20\", \"GPIO_21\", \"GPIO_22\", \"GPIO_23\", \"GPIO_24\"; function = \"emmc_sd\"; }; }; &sdmmc0 { pinctrl-0 = ; pinctrl-names = \"default\"; max-frequency = ; bus-width = ; non-removable; no-1-8-v; disable-wp; status = \"okay\"; }; Steps to Format, Create partitions and Mount SD/eMMC To confirm if mmc device is created: Check if a mmc device is created in /dev directory. To check card details, mount debugfs using command mount -t debugfs none /sys/kernel/debug/ and then use command cat /sys/kernel/debug/mmc0/ios to get IOs debugging information. eMMC Interface testing: # ls -l /dev/mmc* brw------- 1 root root 179, 0 Jan 1 00:00 /dev/mmcblk0 brw------- 1 root root 179, 8 Jan 1 00:00 /dev/mmcblk0boot0 brw------- 1 root root 179, 16 Jan 1 00:00 /dev/mmcblk0boot1 brw------- 1 root root 179, 1 Jan 1 00:00 /dev/mmcblk0p1 brw------- 1 root root 179, 2 Jan 1 00:00 /dev/mmcblk0p2 brw------- 1 root root 179, 3 Jan 1 00:00 /dev/mmcblk0p3 brw------- 1 root root 179, 4 Jan 1 00:00 /dev/mmcblk0p4 brw------- 1 root root 179, 5 Jan 1 00:00 /dev/mmcblk0p5 brw------- 1 root root 179, 6 Jan 1 00:00 /dev/mmcblk0p6 brw------- 1 root root 179, 7 Jan 1 00:00 /dev/mmcblk0p7 crw------- 1 root root 247, 0 Jan 1 00:00 /dev/mmcblk0rpmb # dmesg | grep mmc [ 0.000000] Kernel command line: console=ttyAT0,115200 root=/dev/mmcblk0p5 noinitrd rootwait rw loglevel=9 uio_pdrv_genirq.of_id=generic-uio [ 2.396863] mmc0: SDHCI controller on e0830000.sdhci-host [e0830000.sdhci-host] using ADMA [ 2.534391] Waiting for root device /dev/mmcblk0p5... [ 2.537072] mmc0: new high speed MMC card at address 0001 [ 2.542775] mmcblk0: mmc0:0001 eMMC 3.63 GiB [ 2.550291] mmcblk0: p1 p2 p3 p4 p5 p6 p7 [ 2.552831] mmcblk0boot0: mmc0:0001 eMMC 16.0 MiB [ 2.557425] mmcblk0boot1: mmc0:0001 eMMC 16.0 MiB [ 2.562100] mmcblk0rpmb: mmc0:0001 eMMC 512 KiB, chardev (247:0) [ 2.620999] EXT4-fs (mmcblk0p5): recovery complete [ 2.623655] EXT4-fs (mmcblk0p5): mounted filesystem with ordered data mode. Quota mode: disabled. [ 2.738213] EXT4-fs (mmcblk0p5): re-mounted. Quota mode: disabled. # mount -t debugfs none /sys/kernel/debug/ # cat /sys/kernel/debug/mmc0/ios clock: 44000000 Hz actual clock: 44000000 Hz vdd: 21 (3.3 ~ 3.4 V) bus mode: 2 (push-pull) chip select: 0 (don't care) power mode: 2 (on) bus width: 3 (8 bits) timing spec: 1 (mmc high-speed) signal voltage: 0 (3.30 V) driver type: 0 (driver type B) # dd if=/dev/zero of=/dev/mmcblk0 bs=10M count=1 1+0 records in 1+0 records out # # fdisk /dev/mmcblk0 Device contains neither a valid DOS partition table, nor Sun, SGI, OSF or GPT disklabel Building a new DOS disklabel. Changes will remain in memory only, until you decide to write them. After that the previous content won't be recoverable. The number of cylinders for this disk is set to 119296. There is nothing wrong with that, but this is larger than 1024, and could in certain setups cause problems with: 1) software that runs at boot time (e.g., old versions of LILO) 2) booting and partitioning software from other OSs (e.g., DOS FDISK, OS/2 FDISK) Command (m for help): p Disk /dev/mmcblk0: 3728 MB, 3909091328 bytes, 7634944 sectors 119296 cylinders, 4 heads, 16 sectors/track Units: sectors of 1 * 512 = 512 bytes Device Boot StartCHS EndCHS StartLBA EndLBA Sectors Size Id Type Command (m for help): n Partition type p primary partition (1-4) e extended 1 Invalid partition number for type '1' Partition type p primary partition (1-4) e extended p Partition number (1-4): 1 First sector (16-7634943, default 16): Using default value 16 Last sector or +size{,K,M,G,T} (16-7634943, default 7634943): +64M Command (m for help): t Selected partition 1 Hex code (type L to list codes): 6 Changed system type of partition 1 to 6 (FAT16) Command (m for help): n Partition type p primary partition (1-4) e extended p Partition number (1-4): 2 First sector (131088-7634943, default 131088): Using default value 131088 Last sector or +size{,K,M,G,T} (131088-7634943, default 7634943): +1500M Command (m for help): p Disk /dev/mmcblk0: 3728 MB, 3909091328 bytes, 7634944 sectors 119296 cylinders, 4 heads, 16 sectors/track Units: sectors of 1 * 512 = 512 bytes Device Boot StartCHS EndCHS StartLBA EndLBA Sectors Size Id Type /dev/mmcblk0p1 0,1,1 1023,3,16 16 131087 131072 64.0M 6 FAT16 /dev/mmcblk0p2 1023,3,16 1023,3,16 131088 3203087 3072000 1500M 83 Linux Command (m for help): w The partition table has been altered. Calling ioctl() to re-read partition table [ 44.720213] mmcblk0: p1 p2 # # mkdir /tmp/ext # mkfs.ext2 /dev/mmcblk0p2 mke2fs 1.45.5 (07-Jan-2020) /dev/mmcblk0p2 contains a ext2 file system last mounted on /tmp/ext on Thu Jan 1 00:02:16 1970 Proceed anyway? (y,N) # mount -t ext2 /dev/mmcblk0p2 /tmp/ext # # # echo \"Hello_World: Welcome\" > /tmp/ext/t6.txt # # cat /tmp/ext/t6.txt Hello_World: Welcome # # # umount /tmp/ext/ Note Enable e2fsprogs utility from buildroot to use ext2,ext3,ext4 filesystems.","title":"LAN969x SDMMC","component":"bsp","version":"2023.12","name":"lan969x-mmc","url":"/bsp/2023.12/supported-hw/lan969x-mmc.html","titles":[{"text":"1. LAN969x SDMMC","hash":"_lan969x_sdmmc","id":1},{"text":"1.1. SoC Resources","hash":"_soc_resources","id":2},{"text":"1.2. Kernel configurations","hash":"_kernel_configurations","id":3},{"text":"1.3. Devicetree Configuration","hash":"_devicetree_configuration","id":4},{"text":"1.3.1. References","hash":"_references","id":5},{"text":"1.3.2. Example","hash":"_example","id":6},{"text":"1.4. UserSpace","hash":"_userspace","id":7},{"text":"1.4.1. Confirm instances are created","hash":"_confirm_instances_are_created","id":8},{"text":"1.4.2. Example on how to use","hash":"_example_on_how_to_use","id":9}]},"67":{"id":67,"text":"LAN969X SoC has 8K of internal OTP(One time programmable). Following kernel config options should be enabled to enable the LAN969X OTP driver and to be able to access the OTP from userspace. CONFIG_NVMEM_MICROCHIP_OTP - None volatile memory driver config option. CONFIG_NVMEM_SYSFS - Config option to enable access to OTP using sysfs. To enable LAN969X OTP, following configurations are required in device tree: compatible - string must be set to microchip,lan969x-otp. reg - property must be set to . Following example shows how the OTP should be defined in DT: otp0: otp@e0021000 { compatible = \"microchip,lan969x-otp\"; reg = ; }; NVMEM Subsystem Before using the userspace application to configure the OTP, make sure that the OTP device is created. If the device is created, the following file should exist: /sys/bus/nvmem/devices/lan9662-otp0/nvmem # ll /sys/bus/nvmem/devices/lan9662-otp0/nvmem -rw-r--r-- 1 root root 16.0K Jan 1 00:41 /sys/bus/nvmem/devices/lan9662-otp0/nvmem The userspace application otp it is used to read/write the OTP. It has the following help: # otp --help This tool can be used to access and modify the OTP in the following SoCs: - LAN9662 - LAN9668 - LAN969X Usage: otp field list otp field get [] otp field set [--merge] (ascii|hex|dec|3ascii-dec) otp addr get otp addr set [--merge] (ascii|hex|dec) otp tag list-tag-names otp tag print otp tag info otp tag get (|) otp tag del (|) otp tag set (|) (ascii|hex|dec) otp nvcnt get (trusted|nontrusted) otp nvcnt set (trusted|nontrusted) otp import-keys [--no-randomize-huk] otp region show otp region write-protect otp region non-secure otp init pcb ethaddr (random-ethaddr|) ethaddr_count Options: -h --help Show this screen. --version Show version. --verbose Enable verbose traces on console -d DEV --device DEV NVRAM device This can also be a normal block device, or even a file. -i ID --chip-id ID Specify OTP layout coresponding to the given chip ID. NOTE: This setting is only allowed on devices where the part-ID at byte address 0x5-0x6 is not programmed, or if the programmed part-ID matches the provided ID. --chip-id-force Force usage of the ID given with --chip-id=ID, even though a different part ID is programmed in the OTP. --no-confirm Do not require the user to confirm write operations. General: The OTP in these products are accessed by various elements including: discrete logic in the chip, TF-A bootrom (BL1), Secure Boot loader (BL2), EL3 Runtime software (BL31/BL32), UBoot, Linux kernel and this user-space application. The OTP has a concept of regions, which can be used to configure access control (read and write protection). The regions and write protect mask is in the OTP it self and need to be provisioned. This tool support 3 different kind of content: Fields: This is fixed-length data at fixed positions in the OTP. The tool has a build in template for each of the supported SoC with name, address, length and description. Non volatile counters: This is counters which can only be incremented. This is used to do rollback protection. This is implemented as a bitfields, and the max value is therefore the number of allocated bits for a given counter. Tagged data: This is semi-one-time-programmable data. The purpose of this is to allow store various data such as: mac-addresses, board-ID, ECO level, uniq default password which may be printed on the device, etc. This is implemented as an array of 64-bits records with the following layout: +--------+--------+--------+----------+ | size:3 | cont:1 | tag:12 | value:48 | +--------+--------+--------+----------+ Where: size: specify the number of valid bytes in value. 0 and 0b111 (7) are invalid. If a record needs to be invalidated, then it is a matter of writing 0b111 in this field. cont: specify that the content continues in the next valid record with the given tag value. tag: This is a number from 0-2047 specifying the type of data (the implementation has a list of named tags which may be used). value: Value associated to the tag. Note: All commands writing ('field set', 'addr set', 'tag del|set') to OTP shall do: - Read out existing content. - If '--merge' flag is not set, confirm that the specified value is possible to set. Abort if not. - Print in hex what is about the be written where - Let use user confirm. Command details: otp help: Print this message otp field list: List all fields recognized by the implementation template. otp field get [] Get the content of a specific fields, or all fields if non is provided. NOTE: This shall skip fields in areas being read-protected, but will happily print secrets if not proper protected. otp field set [--merge] (ascii|hex|dec) Set the content of a given field. - If the --merge option is provided, then the content is bit-wised OR with what is in the OTP field already. If not, a check is performed to confirm that the desired value can be written as-is. - The value can either be provided in ascii format, or as a hex-string. - A hex string must always provide an equal number of chars (no half bytes). - The length of the value must match what is find in the template. otp addr get Read the raw content in OTP. If the requested area is (partly) read-protected, then return error. otp addr set [--merge] (ascii|hex|dec) Write raw content in the OTP. If the requested area is (partly) write-protected, then return error before any content is written. otp nvcnt (trusted|nontrusted) get otp nvcnt (trusted|nontrusted) set Get/set the value of either the trusted or nontrusted non-volatile-ever-incrementing-counter. This is implemented as a bit-field, and a given implementation will have limited capacity. NOTE: This is used by the secure boot-ROM to implement rollback protection. otp tag list-tag-names List all the tag names and associated numbers know by the implementation. otp tag info Print statistics on tag usages. otp tag print Print all valid tags in the otp. otp tag get (bin|hex) [(|)] Read out the value of a given tag (either by name or by number) or dump all tags if no name/number is provided. If no valid tag with matching name/number was found, then return an error. otp tag [--merge] set (|) (ascii|hex) Set a tagged value. If the --merge flag was set, then the content provided must be of exact same length as the length of existing content in the OTP. If this tag already exists, then it shall be replaced (meaning invalidating the existing tag). otp tag append (|) Append more data to a tag. This will always create a new record and set the 'cont' flag in existing tags. otp tag del (|) Invalidate an existing tag in the OTP. otp import-keys [--no-randomize-huk] : This shall read the content from a file (or stdin if '-' is provided as file-name). The content is binary and length must match the platform expected length. It can only be used to program the region with TF-A keys (on LAN966x this is region 4). The region will not be defined when the tool is called, and a per platform hard-coded offset/size will be used. Unless the --no-randomize-huk flag is set, then the OTP_TBBR_HUK field will be set with randomized content using /dev/random. otp region show: Show the start-address, end-address and write-protect bit of all regions. Some regions may be displayed with start- and end-address equal to 0, which means that this region is still not defiend. otp region write-protect : This shall check if the region is defined (in `PROTECT_REGION_ADDR`). If not, the region shall be defined using the per-chip-id defined template. Once the region is defined it shall be marked as write-protected in `PROTECT_OTP_WRITE`. otp init pcb ethaddr (random-ethaddr|) ethaddr_count NOTE: This shall only be called during board manufacturing! Do not call more than once. This sub-command will do the following: - Do the equivalent of: $ opt tag set pcb dec - Do the equivalent of: $ opt tag set ethaddr_count dec - Do the equivalent of: $ opt tag set ethaddr ascii - If the ethaddr-address is `random-ethaddr`, then generate a random ETHADDR with the following limitation: - Broadcast bit is 0 - Local-administrated bit is 1 - It must not be all zero and not all ff. Here are some examples on how to use it Once something is written in the OTP this can’t be erased. So make sure you can write the right command. You can test the command by running the same command on a file. If the chip id has not been programmed into the OTP you can provide it on the command line and this use the tool correctly. How to initialize the board: otp -d /sys/bus/nvmem/devices/lan9662-otp0/nvmem init partid 9698 serial pcb 9300 ethaddr random-ethaddr ethaddr_count 16 This command will do the following: set the field partid to 9698 set the field serial_number to set the tag pcb to 9300 set the tag ethaddr to a random generated eth addr where bit 1 in MSB is set to 1 and bit 0 in MSB is set to 0. set the tag ethaddr_count to 16 meaning that it would reserve 16 addresses Here is a way to read back a field: otp -d /sys/bus/nvmem/devices/lan9662-otp0/nvmem field get PARTID 2 be25|.%| The first value of the output represents the number of bytes the field it has, second represents the value in little endian in hex and the last value represents the ascii characters of the value. To see the available fields the following command can be used: # otp -d /sys/bus/nvmem/devices/lan9662-otp0/nvmem --chip-id 9692 field list Field: OTP_PRG offset: 0x0000 length: 04 Field: FEAT_IDS offset: 0x0004 length: 01 Field: PARTID offset: 0x0005 length: 02 Field: TST_TRK offset: 0x0007 length: 01 Field: SERIAL_NUMBER offset: 0x0008 length: 08 Field: SECURE_JTAG offset: 0x0010 length: 04 Field: WAFER_JTAG offset: 0x0014 length: 07 Field: JTAG_UUID offset: 0x0020 length: 10 Field: TRIM offset: 0x0030 length: 08 Field: PROTECT_OTP_WRITE offset: 0x0040 length: 04 Field: PROTECT_REGION_ADDR offset: 0x0044 length: 32 Field: OTP_PCIE_FLAGS offset: 0x0064 length: 04 Field: OTP_PCIE_DEV offset: 0x0068 length: 04 Field: OTP_PCIE_ID offset: 0x006c length: 08 Field: OTP_PCIE_BARS offset: 0x0074 length: 40 Field: OTP_TBBR_ROTPK offset: 0x0100 length: 32 Field: OTP_TBBR_HUK offset: 0x0120 length: 32 Field: OTP_TBBR_EK offset: 0x0140 length: 32 Field: OTP_TBBR_SSK offset: 0x0160 length: 32 Field: OTP_SJTAG_SSK offset: 0x0180 length: 32 Field: OTP_STRAP_DISABLE_MASK offset: 0x01a4 length: 02 Here is a way to list all tags: # otp -d /sys/bus/nvmem/devices/lan9662-otp0/nvmem --chip-id 9692 tag list-tag-names Tag: password, id: 1 Tag: pcb, id: 2 Tag: revision, id: 3 Tag: ethaddr, id: 4 Tag: ethaddr_count, id: 5 Tag: fit_config, id: 6","title":"LAN969x OTP","component":"bsp","version":"2023.12","name":"lan969x-otp","url":"/bsp/2023.12/supported-hw/lan969x-otp.html","titles":[{"text":"1. LAN969x OTP","hash":"_lan969x_otp","id":1},{"text":"1.1. SoC Resources","hash":"_soc_resources","id":2},{"text":"1.2. Kernel configurations","hash":"_kernel_configurations","id":3},{"text":"1.3. Devicetree Configuration","hash":"_devicetree_configuration","id":4},{"text":"1.3.1. Example","hash":"_example","id":5},{"text":"1.3.2. References","hash":"_references","id":6},{"text":"1.4. UserSpace","hash":"_userspace","id":7},{"text":"1.4.1. Example on how to use","hash":"_example_on_how_to_use","id":8}]},"68":{"id":68,"text":"LAN969x GPIO controller supports 67 gpio pins. Most of the GPIO pins have alternate functions which will be handled by the Linux driver. Following kernel config options should be enabled to use LAN969x GPIO Controller: CONFIG_PINCTRL_OCELOT - GPIO controller config option. To use GPIO pins of a specific peripheral, configure following properties in device tree: compatible string must be set to microchip,lan969x-pinctrl. reg property must be set to and . gpio-controller property must be added. interrupt-controller property mus be added. #gpio-cells property must be set to 2 gpio-ranges property must be set to interrupts property must be set with GPIO block interrupt details as . Peripheral Shared Peripheral Interrupt CPU INTR gpio 47 15 Note Shared peripheral interrupt lines start at index ID32. So, CPU INTR must be calculated as [Shared peripheral interrupt number - 32]. pins must be set with list of GPIO pins required. For example for mcan0, it should be set as \"GPIO_35\", \"GPIO_36\". function must be set to function name corresponding to GPIO pins and the peripheral we are trying to enable. Refer below table for function names: Pin FUNC0 FUNC1 FUNC2 FUNC3 FUNC4 FUNC5 FUNC6 0 GPIO irq0 fc_shrd pcie_perst none none none 1 GPIO irq1 fc_shrd usb_power none none none 2 GPIO fc none none none none none 3 GPIO fc none none none none none 4 GPIO fc none none none none none 5 GPIO sgpio_A none clkmon none none none 6 GPIO sgpio_A none clkmon none none none 7 GPIO sgpio_A none clkmon none none none 8 GPIO sgpio_A none clkmon none none none 9 GPIO miim miim_sA clkmon none none none 10 GPIO miim miim_sA clkmon none none none 11 GPIO miim_irq miim_sA clkmon none none none 12 GPIO irq3 fc_shrd usb2phy_rst none none none 13 GPIO irq4 fc_shrd usb_over_detect none none none 14 GPIO emmc_sd qspi1 fc none none none 15 GPIO emmc_sd qspi1 fc none none none 16 GPIO emmc_sd qspi1 fc none none none 17 GPIO emmc_sd qspi1 ptpsync_0 usb_power none none 18 GPIO emmc_sd qspi1 ptpsync_1 usb2phy_rst none none 19 GPIO emmc_sd qspi1 ptpsync_2 usb_over_detect none none 20 GPIO emmc_sd none fc_shrd none none none 21 GPIO emmc_sd none fc_shrd none none none 22 GPIO emmc_sd none fc_shrd none none none 23 GPIO emmc_sd none fc_shrd none none none 24 GPIO emmc_sd none none none none none 25 GPIO fan fusa can0_A qspi1 none none 26 GPIO fan fusa can0_A qspi1 none none 27 GPIO synce fc miim qspi1 none none 28 GPIO synce fc miim qspi1 none none 29 GPIO synce fc miim_irq qspi1 none none 30 GPIO ptpsync_0 usb_ulpi fc_shrd qspi1 none none 31 GPIO ptpsync_1 usb_ulpi fc_shrd none none none 32 GPIO ptpsync_2 usb_ulpi fc_shrd none none none 33 GPIO sd usb_ulpi fc_shrd none none none 34 GPIO sd usb_ulpi can1 fc_shrd none none 35 GPIO sd usb_ulpi can1 fc_shrd none none 36 GPIO sd usb_ulpi pcie_perst fc_shrd none none 37 GPIO sd usb_ulpi can0_B none none none 38 GPIO sd usb_ulpi can0_B none none none 39 GPIO sd usb_ulpi miim none none none 40 GPIO sd usb_ulpi miim none none none 41 GPIO sd usb_ulpi miim_irq none none none 42 GPIO ptpsync_3 can1 none none none none 43 GPIO ptpsync_4 can1 none none none none 44 GPIO ptpsync_5 sfp_sd none none none none 45 GPIO ptpsync_6 sfp_sd none none none none 46 GPIO ptpsync_7 sfp_sd none none none none 47 GPIO none sfp_sd none none none none 48 GPIO none sfp_sd none none none none 49 GPIO none sfp_sd none none none none 50 GPIO none sfp_sd none none none none 51 GPIO none sfp_sd none none none none 52 GPIO fan sfp_sd none none none none 53 GPIO fan sfp_sd none none none none 54 GPIO synce fc none none none none 55 GPIO synce fc none none none none 56 GPIO synce fc none none none none 57 GPIO sfp_sd fc_shrd twi ptpsync_3 none none 58 GPIO sfp_sd fc_shrd twi ptpsync_4 none none 59 GPIO sfp_sd fc_shrd twi ptpsync_5 none none 60 GPIO sfp_sd fc_shrd twi ptpsync_6 none none 61 GPIO miim fc_shrd twi none none none 62 GPIO miim fc_shrd twi none none none 63 GPIO miim_irq fc_shrd twi none none none 64 GPIO fc fc_shrd twi none none none 65 GPIO fc fc_shrd twi none none none 66 GPIO fc fc_shrd twi none none none Note LAN969x GPIO controller supports 8 Alternate functions. FUNC0 is GPIO mode and FUNC7 is Reserved. Function names for FUNC1-FUNC6 alternate modes are listed above. pinctrl DT Documentation Following example shows how a GPIO controller should be defined in DT to enable GPIO pins for a fan and an MDIO bus: dtsi file: / { axi: axi { gpio: pinctrl@e20100d4 { compatible = \"microchip,lan969x-pinctrl\"; reg = , ; gpio-controller; #gpio-cells = ; gpio-ranges = ; interrupt-controller; interrupts = ; #interrupt-cells = ; #address-cells = ; }; }; fan_pins: fan-pins { pins = \"GPIO_25\", \"GPIO_26\"; function = \"fan\"; }; mdio_pins: mdio-pins { pins = \"GPIO_9\", \"GPIO_10\"; function = \"miim\"; }; mdio_irq_pins: mdio-irq-pins { pins = \"GPIO_11\"; function = \"miim_irq\"; }; }; dts file changes to use the defined pincontrol: &hwmon { pinctrl-0 = ; pinctrl-names = \"default\"; }; &mdio0 { pinctrl-0 = , ; pinctrl-names = \"default\"; reset-gpios = ; status = \"okay\"; Checking if the pinctrl driver is registered and respective peripheral is created or not. # dmesg | grep pinctrl [ 0.009597] pinctrl core: initialized pinctrl subsystem [ 0.093905] pinctrl-ocelot e20100d4.pinctrl: driver registered You can list the pinctrl devices in the system with # cat /sys/kernel/debug/pinctrl/pinctrl-devices name [pinmux] [pinconf] lan969x-pinctrl yes yes e2010230.gpio-input yes yes e2010230.gpio-output yes yes Here the lan969x-pinctrl is the device described on this page, and the e2010230.gpio-input and e2010230.gpio-output is the Serial GPIO Controller described here. Then you can list the groups of pinctrls using: # cat /sys/kernel/debug/pinctrl/pinctrl-handles Requested pin control handlers their pinmux maps: device: e0040200.serial current state: default state: default type: MUX_GROUP controller lan969x-pinctrl group: GPIO_3 (3) function: fc (6) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_4 (4) function: fc (6) device: e0064600.i2c current state: default state: default type: MUX_GROUP controller lan969x-pinctrl group: GPIO_55 (55) function: fc (6) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_56 (56) function: fc (6) device: e0060400.spi current state: default state: default type: MUX_GROUP controller lan969x-pinctrl group: GPIO_64 (64) function: fc (6) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_65 (65) function: fc (6) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_66 (66) function: fc (6) device: e20101a8.mdio current state: default state: default type: MUX_GROUP controller lan969x-pinctrl group: GPIO_9 (9) function: miim (63) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_10 (10) function: miim (63) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_11 (11) function: miim_irq (69) device: e00c0000.switch current state: default state: default type: MUX_GROUP controller lan969x-pinctrl group: GPIO_58 (58) function: ptpsync_4 (85) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_59 (59) function: ptpsync_5 (86) device: axi:usb@300000 current state: default state: default type: MUX_GROUP controller lan969x-pinctrl group: GPIO_30 (30) function: usb_ulpi (130) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_31 (31) function: usb_ulpi (130) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_32 (32) function: usb_ulpi (130) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_33 (33) function: usb_ulpi (130) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_34 (34) function: usb_ulpi (130) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_35 (35) function: usb_ulpi (130) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_36 (36) function: usb_ulpi (130) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_37 (37) function: usb_ulpi (130) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_38 (38) function: usb_ulpi (130) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_39 (39) function: usb_ulpi (130) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_40 (40) function: usb_ulpi (130) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_41 (41) function: usb_ulpi (130) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_12 (12) function: usb2phy_rst (128) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_13 (13) function: usb_over_detect (129) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_1 (1) function: usb_power (127) device: e2020100.hwmon current state: default state: default type: MUX_GROUP controller lan969x-pinctrl group: GPIO_25 (25) function: fan (5) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_26 (26) function: fan (5) device: e0830000.sdhci-host current state: default state: default type: MUX_GROUP controller lan969x-pinctrl group: GPIO_14 (14) function: emmc_sd (133) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_15 (15) function: emmc_sd (133) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_16 (16) function: emmc_sd (133) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_17 (17) function: emmc_sd (133) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_18 (18) function: emmc_sd (133) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_19 (19) function: emmc_sd (133) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_20 (20) function: emmc_sd (133) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_21 (21) function: emmc_sd (133) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_22 (22) function: emmc_sd (133) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_23 (23) function: emmc_sd (133) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_24 (24) function: emmc_sd (133) device: e2010230.gpio current state: default state: default type: MUX_GROUP controller lan969x-pinctrl group: GPIO_5 (5) function: sgpio_a (104) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_6 (6) function: sgpio_a (104) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_7 (7) function: sgpio_a (104) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_8 (8) function: sgpio_a (104) device: e2010230.gpio current state: none device: e2010230.gpio current state: none Mounting Sysfs The root file system being used may not have sysfs mounted and it cannot be used if it’s not mounted. The directory /sys is also needed to mount the sysfs on. The root file system must be writable to do the following steps. Identify the GPIO chips Use command ls /sys/class/gpio/ to list all the gpio chips. Steps to configure a GPIO pin Export a GPIO pin using command echo X > /sys/class/gpio/export. Read direction and value from GPIO pin using command cat /sys/class/gpio/gpioX/direction for direction and cat /sys/class/gpio/gpioX/value for value, where X is pin number. If direction of a pin is out, we can write 0 or 1 to value file of pin and also can read its value. If direction of a pin is in, we can only read its value but cannot write to it, we would get an error because it is not valid to set the value of an input pin. Unexport a GPIO pin using command echo X > /sys/class/gpio/unexport. Following example configures GPIO pin 51(physical pin number 32) and validates voltage on pin using a multimeter: # ls /sys/class/gpio/ export gpiochip0 unexport Export GPIO pin 51: # echo 51 > /sys/class/gpio/export # ls /sys/class/gpio/ export gpio51 gpiochip0 unexport Check default direction and value: # cat /sys/class/gpio/gpio51/value 1 # # cat /sys/class/gpio/gpio51/direction in # Now, measure voltage on physical pin number 32 and you should see voltage of approximately 3.3v. Change direction of GPIO pin 51 to out and set value to zero: # echo out > /sys/class/gpio/gpio51/direction # # # cat /sys/class/gpio/gpio51/value 0 # Again measure voltage on physical pin number 32 and you should see voltage close to zero.","title":"LAN969x GPIO","component":"bsp","version":"2023.12","name":"lan969x-pinctrl","url":"/bsp/2023.12/supported-hw/lan969x-pinctrl.html","titles":[{"text":"1. LAN969x GPIO","hash":"_lan969x_gpio","id":1},{"text":"1.1. SoC Resources","hash":"_soc_resources","id":2},{"text":"1.2. Kernel configurations","hash":"_kernel_configurations","id":3},{"text":"1.3. Devicetree Configuration","hash":"_devicetree_configuration","id":4},{"text":"1.3.1. References","hash":"_references","id":5},{"text":"1.3.2. Example","hash":"_example","id":6},{"text":"1.4. UserSpace","hash":"_userspace","id":7},{"text":"1.4.1. Confirm instances are created","hash":"_confirm_instances_are_created","id":8},{"text":"1.4.2. Displaying pin control configuration","hash":"_displaying_pin_control_configuration","id":9},{"text":"1.4.3. Configuring GPIO pin using Sysfs interface","hash":"_configuring_gpio_pin_using_sysfs_interface","id":10}]},"69":{"id":69,"text":"LAN969x supports two QSPI interfaces - QSPI0 and QSPI2. Following kernel config options should be enabled to use LAN969x QSPI interface: CONFIG_SPI_ATMEL_QUADSPI - QSPI driver config option. CONFIG_MTD, CONFIG_MTD_SPI_NOR or CONFIG_MTD_SPI_NAND based on NOR/NAND flash present. To use QSPI interface, following configurations are required in device tree. compatible string must be set to microchip,lan966x-qspi. reg property must be set with base register address, AHB register address and their lengths. reg-names must be set to qspi_base and qspi_mmap. pinctrl-0 property must be set with SCK, NCS, IO0, IO1, IO2, IO3 GPIO pins. Refer to the datasheet for QSPIx [where x is QSPI index (0 or 2)] pin details. interrupts property must set with interrupt details. Interrupt number[CPU INTR] corresponding to QSPI index must be configured as defined in below table: QSPI ID Shared Peripheral Interrupt CPU INTR qspi0 75 43 qspi2 98 66 Note Shared peripheral interrupt lines start at index ID32. So, CPU INTR must be calculated as [Shared peripheral interrupt number - 32]. Input clock clocks property must be set to GCK clock using phandle and GCK ID as , where x is QSPI index (0-2). clock-names must be set to pclk and gclk assigned-clocks must be set to , where x is QSPI index (0-2). spi-max-frequency must be set to 100Mhz. assigned-clock-rates can be set up to 100Mhz. dmas must be set to phandle dma0 and Peripheral ID as listed below: QSPI ID Rx channel PerID Tx channel PerID qspi0 0 1 qspi1 15 16 qspi2 17 18 For example, dmas should be configured as for Rx channel and for Tx channel. * dma-names must be set to rx and tx respectively. Note dmas and dma-names are optional properties. QSPI DT documentation Following example shows how a QSPI should be defined in DT to use a SPI-NAND flash present on it: dtsi file: qspi0: spi@e0804000 { compatible = \"microchip,lan966x-qspi\"; reg = , ; reg-names = \"qspi_base\", \"qspi_mmap\"; interrupts = ; clocks = , ; clock-names = \"pclk\", \"gclk\"; assigned-clocks = ; assigned-clock-rates = ; spi-max-frequency = ; #address-cells = ; #size-cells = ; status = \"disabled\"; }; dts file: &qspi0 { status = \"okay\"; spi-flash@0 { compatible = \"jedec,spi-nor\"; reg = ; spi-max-frequency = ; #address-cells = ; #size-cells = ; spi-tx-bus-width = ; spi-rx-bus-width = ; m25p,fast-read; }; }; MTD utility in buildroot provides rich set of tests for validating QSPI NOR/NAND flashes. To confirm if qspi flash is created: Check if a mtd device is created in /dev directory. Run mtd_debug info /dev/mtdx (where x is index of mtd device) command to check flash details. # dmesg | grep spi [ 0.954840] atmel_spi e0060400.spi: Atmel SPI Controller using PIO only [ 0.961449] atmel_spi e0060400.spi: Using FIFO (32 data) [ 0.967421] atmel_spi e0060400.spi: Atmel SPI Controller version 0x401 at 0xe0060400 (irq 19) [ 0.976848] spi-nor spi1.0: sst26wf016b (2048 Kbytes) # mtd_debug info /dev/mtd0 mtd.type = MTD_NORFLASH mtd.flags = MTD_CAP_NORFLASH mtd.size = 2097152 (2M) mtd.erasesize = 4096 (4K) mtd.writesize = 1 mtd.oobsize = 0 regions = 0 Erase/Read/Write test: # flash_erase /dev/mtd0 0 0x10 Erasing 128 Kibyte @ 1e0000 -- 100 % complete # # # mtd_debug read /dev/mtd0 0x1e0000 0x10 rd Copied 16 bytes from address 0x001e0000 in flash to rd # hexdump rd -C 00000000 ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff |................| 00000010 # echo \"lan969x\" > wr # # # mtd_debug write /dev/mtd0 0x1e0000 0x8 wr Copied 8 bytes from wr to address 0x001e0000 in flash # # # mtd_debug read /dev/mtd0 0x1e0000 0x10 rd Copied 16 bytes from address 0x001e0000 in flash to rd # # # hexdump rd -C 00000000 6c 61 6e 39 36 36 78 0a ff ff ff ff ff ff ff ff |lan969x.........| 00000010 # # flash_erase /dev/mtd0 0 0x10 Erasing 128 Kibyte @ 1e0000 -- 100 % complete # mtd_debug read /dev/mtd0 0x1e0000 0x10 rd Copied 16 bytes from address 0x001e0000 in flash to rd # # # hexdump rd -C 00000000 ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff |................| 00000010 # # echo \"The W25N01GV (1G-bit) Serial SLC NAND Flash Memory provides a storage so lution for system with lmtd space\" > wr1 # ls -l wr1 -rw-r--r-- 1 root root 106 Jan 1 00:17 wr1 # # mtd_debug write /dev/mtd0 0x1e0000 106 wr1 Copied 106 bytes from wr1 to address 0x001e0000 in flash # # # mtd_debug read /dev/mtd0 0x1e0000 106 rd Copied 106 bytes from address 0x001e0000 in flash to rd # hexdump rd -C 00000000 54 68 65 20 57 32 35 4e 30 31 47 56 20 28 31 47 |The W25N01GV (1G| 00000010 2d 62 69 74 29 20 53 65 72 69 61 6c 20 53 4c 43 |-bit) Serial SLC| 00000020 20 4e 41 4e 44 20 46 6c 61 73 68 20 4d 65 6d 6f | NAND Flash Memo| 00000030 72 79 20 70 72 6f 76 69 64 65 73 20 61 20 73 74 |ry provides a st| 00000040 6f 72 61 67 65 20 73 6f 6c 75 74 69 6f 6e 20 66 |orage solution f| 00000050 6f 72 20 73 79 73 74 65 6d 20 77 69 74 68 20 6c |or system with l| 00000060 6d 74 64 20 73 70 61 63 65 0a |mtd space.| 0000006a # # flash_erase /dev/mtd0 0 0x10 Erasing 128 Kibyte @ 1e0000 -- 100 % complete # mtd_debug read /dev/mtd0 0x1e0000 0x106 rd Copied 262 bytes from address 0x001e0000 in flash to rd # hexdump rd -C 00000000 ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff |................| * 00000100 #","title":"LAN969x QSPI","component":"bsp","version":"2023.12","name":"lan969x-qspi","url":"/bsp/2023.12/supported-hw/lan969x-qspi.html","titles":[{"text":"1. LAN969x QSPI","hash":"_lan969x_qspi","id":1},{"text":"1.1. SoC Resources","hash":"_soc_resources","id":2},{"text":"1.2. Kernel configurations","hash":"_kernel_configurations","id":3},{"text":"1.3. Devicetree Configuration","hash":"_devicetree_configuration","id":4},{"text":"1.3.1. References","hash":"_references","id":5},{"text":"1.3.2. Example","hash":"_example","id":6},{"text":"1.4. UserSpace","hash":"_userspace","id":7},{"text":"1.4.1. Confirm instances are created","hash":"_confirm_instances_are_created","id":8},{"text":"1.4.2. Example on how to use","hash":"_example_on_how_to_use","id":9}]},"70":{"id":70,"text":"The Serial GPIO Controller for LAN969x supports as many Serial GPIOs as configured in the device tree. The EVB-LAN9696-24port EVB has 128 input and 128 output. Following kernel config options should be enabled to use LAN969x GPIO Controller: CONFIG_PINCTRL_MICROCHIP_SGPIO - Serial GPIO controller config option. To use SGPIO pins of a specific peripheral, configure following properties in the device tree: compatible must be set to \"microchip,sparx5-sgpio\". reg must be set to . clocks must refer to the 320MHz core clock . reset-names must be set to \"switch\". resets must refer to the switch reset controllers reset signal, e.g. . #address-cells must be 1. #size-cells must be 0. For each direction there must be a child node. For the IN direction the following properties must be provided: compatible must be set to \"microchip,sparx5-sgpio-bank\". reg must be set to . gpio-controller must be set. #gpio-cells must be set to 3. interrupts must be set to . Peripheral Shared Peripheral Interrupt CPU INTR sgpio 48 16 Note Shared peripheral interrupt lines start at index ID32. So, CPU INTR must be calculated as [Shared peripheral interrupt number - 32]. interrupt-controller must be set. #interrupt-cells must be set to 3. #address-cells must be set to 0. For the OUT direction the following properties must be provided: compatible must be set to \"microchip,sparx5-sgpio-bank\". reg must be set to 1. gpio-controller must be set. #gpio-cells must be set to 3. SGPIO DT Documentation Following example shows how an SGPIO controller should be defined in the DT to enable SGPIO pins for a mux controller and an SFP. The clients refer to the IN and OUT directions to get the appropriate SGPIOs. dtsi file: sgpio: gpio@e2010230 { compatible = \"microchip,sparx5-sgpio\"; reg = ; clocks = ; resets = ; reset-names = \"switch\"; #address-cells = ; #size-cells = ; status = \"disabled\"; sgpio_in: gpio@0 { compatible = \"microchip,sparx5-sgpio-bank\"; reg = ; gpio-controller; #gpio-cells = ; interrupts = ; interrupt-controller; #interrupt-cells = ; #address-cells = ; }; sgpio_out: gpio@1 { compatible = \"microchip,sparx5-sgpio-bank\"; reg = ; gpio-controller; #gpio-cells = ; }; }; dts file changes to use the SGPIO: &gpio { sgpio_pins: sgpio-pins { /* SCK, D0, D1, LD */ pins = \"GPIO_5\", \"GPIO_6\", \"GPIO_7\", \"GPIO_8\"; function = \"sgpio_a\"; }; }; &sgpio { pinctrl-0 = ; pinctrl-names = \"default\"; microchip,sgpio-port-ranges = , ; status = \"okay\"; gpio@0 { ngpios = ; }; gpio@1 { ngpios = ; }; }; / { mux-controller { compatible = \"gpio-mux\"; #mux-control-cells = ; mux-gpios = , ; }; sfp0: sfp0 { compatible = \"sff,sfp\"; i2c-bus = ; tx-disable-gpios = ; los-gpios = ; mod-def0-gpios = ; tx-fault-gpios = ; }; }; Checking if the SGPIO driver is registered: # cat /sys/kernel/debug/pinctrl/pinctrl-devices name [pinmux] [pinconf] lan969x-pinctrl yes yes e2010230.gpio-input yes yes e2010230.gpio-output yes yes Here the lan969x-pinctrl is the device described on this page, and the e2010230.gpio-input and e2010230.gpio-output are the Serial GPIO Controllers two direction nodes - each of them being its own pin controller device. The LEDs for the SFP cages are available via SGPIOs: leds { compatible = \"gpio-leds\"; led-s6-green { label = \"s6:green\"; gpios = ; default-state = \"off\"; }; led-s6-yellow { label = \"s6:yellow\"; gpios = ; default-state = \"off\"; }; ... more LED nodes follows... }; You can locate the LEDs in sysfs with: # find /sys/class/leds/ /sys/class/leds/ /sys/class/leds/s7:green /sys/class/leds/s6:yellow /sys/class/leds/s7:yellow /sys/class/leds/s8:yellow /sys/class/leds/s8:green /sys/class/leds/s9:yellow /sys/class/leds/s9:green /sys/class/leds/s6:green /sys/class/leds/mmc0:: Now you can turn on the green LED of the Serdes 6 SFP using: # echo 1 > /sys/class/leds/s6:green/brightness And you can turn it off again using; # echo 0 > /sys/class/leds/s6:green/brightness","title":"LAN969x SGPIO","component":"bsp","version":"2023.12","name":"lan969x-sgpio","url":"/bsp/2023.12/supported-hw/lan969x-sgpio.html","titles":[{"text":"1. LAN969x SGPIO","hash":"_lan969x_sgpio","id":1},{"text":"1.1. SoC Resources","hash":"_soc_resources","id":2},{"text":"1.2. Kernel configurations","hash":"_kernel_configurations","id":3},{"text":"1.3. Devicetree Configuration","hash":"_devicetree_configuration","id":4},{"text":"1.3.1. References","hash":"_references","id":5},{"text":"1.3.2. Example","hash":"_example","id":6},{"text":"1.4. UserSpace","hash":"_userspace","id":7},{"text":"1.4.1. Confirm instances are created","hash":"_confirm_instances_are_created","id":8},{"text":"1.4.2. Setting the SFP LEDs","hash":"_setting_the_sfp_leds","id":9}]},"71":{"id":71,"text":"LAN969X SoC have 4 FLEXCOMs (Flexible Serial Communication Controller). In order to use flexcom SPI interface, a specific flexcom should be configured in SPI mode. Following kernel config options should be enabled to use LAN969x flexcom SPI interface: CONFIG_SPI_ATMEL - SPI driver config option. CONFIG_MTD, CONFIG_MTD_SPI_NOR or CONFIG_MTD_SPI_NAND based on NOR/NAND flash present. To use Flexcom SPI interface, following configurations are required in device tree. Each of the flexcom flx0, flx1, flx2 and flx3 nodes can be configured in SPI mode ATMEL_FLEXCOM_MODE_SPI to use SPI interface. compatible string must be set to atmel,at91rm9200-spi. reg property must be set with register address and length as . GPIO pins for TXD, RXD and SCK should be configured to pinctrl-0 property. Also add cs0 and cs1 pins, if present. List of possible pin mappings are as in below table: FLEXCOM ID ALT Mode SCK pin RXD pin TXD pin flx0 ALT 2 GPIO2 GPIO3 GPIO4 flx2 ALT 3 GPIO14 GPIO15 GPIO16 flx1 ALT 2 GPIO27 GPIO28 GPIO29 flx3 ALT 2 GPIO54 GPIO55 GPIO56 flx2 ALT 1 GPIO64 GPIO65 GPIO66 interrupts property must set with interrupt details. Interrupt number[CPU INTR] corresponding to a flexcom must be configured as defined in below table: FLEXCOM ID Shared Peripheral Interrupt CPU INTR flx0 78 46 flx1 79 47 flx2 80 48 flx3 81 49 Note that Shared peripheral interrupt lines start at index ID32. So, CPU INTR must be calculated as [Shared peripheral interrupt number - 32]. Input clock clocks property must be set to &fabric_clk. Note that Fabric clock (250Mhz) is clock used by AXI, AHB fabric and APB bridges which connects all th peripherals. clock-names must be set to spi_clk. dmas must be set to phandle dma0 and Peripheral ID as listed below: FLEXCOM ID Tx channel PerID Rx channel PerID flx0 3 2 flx1 3 2 flx2 7 6 flx3 9 8 SPI driver Implementation Flexcom DT documentation SPI DT documentation Following example explains how a flexcom SPI should be defined in DT to use a DPLL device. &flx2 { atmel,flexcom-mode = ; status = \"okay\"; spi2: spi@400 { pinctrl-0 = ; pinctrl-names = \"default\"; cs-gpios = ; status = \"okay\"; spi@0 { compatible = \"mchp,synce_dpll\"; reg = ; spi-max-frequency = ; }; }; }; &gpio { fc2_pins: fc2-pins { pins = \"GPIO_64\", \"GPIO_65\", \"GPIO_66\"; function = \"fc\"; }; A SPI device like the DPLL shown above will be listed in the sysfs like this: # cat /sys/bus/spi/devices/spi0.0/modalias spi:synce_dpll","title":"LAN969x SPI","component":"bsp","version":"2023.12","name":"lan969x-spi","url":"/bsp/2023.12/supported-hw/lan969x-spi.html","titles":[{"text":"1. LAN969x SPI","hash":"_lan969x_spi","id":1},{"text":"1.1. SoC Resources","hash":"_soc_resources","id":2},{"text":"1.2. Kernel configurations","hash":"_kernel_configurations","id":3},{"text":"1.3. Devicetree Configuration","hash":"_devicetree_configuration","id":4},{"text":"1.3.1. References","hash":"_references","id":5},{"text":"1.3.2. Example","hash":"_example","id":6},{"text":"1.4. UserSpace","hash":"_userspace","id":7}]},"72":{"id":72,"text":"The LAN969x SoC contains an internal CPU which has secure boot capabilities with an implementation based on TF-A (Trusted Firmware for ARM). This document uses many abbreviations, see the terms and abbreviations section for details. The BootROM in LAN969x offers the following high-level features: Boot firmware from: SPI-NOR SD-Card eMMC Firmware authentication based on public key ECSDA algorithm Firmware encryption using AES encryption with Secret Symmetric Key (SSK) Per-device unique key (BSSK) A bootrom UART monitor (fwu.html) with support for: Secure JTAG unlock Firmware update over UART OTP programming LAN969x always boots from the BootROM using the TF-A based boot stages. This is the case regardless of if secure boot is needed (enabled) or not. This means that it will be the TF-A Bootloaders that boots either U-Boot, the Linux kernel or another OS directly. This document, and the referenced sources are provided under the BSD-3-Clause license. This means that the content is provided as-is, and that Microchip cannot be held liable. See the License section for details. In LAN969x the DDR initialization is done as part of TF-A/BL2 and not in U-Boot. If you need to change DDR settings, then this shall be done in TF-A. The sources and binaries provided to enable secure boot contains demo keys which are not handled in a secure way. The symmetric shared keys, and the private keys are publicly available. If any of the advertised security features in this document are needed, then the demo keys must be replaced with new keys which shall then be kept confidential. The Trusted Firmware-A (TF-A) SW project is a multi-stage bootloader which utilizes the ARM TrustZone feature in ARM CPUs as an important part of the security concept. The TrustZone feature in ARM CPUs introduce the concept of a Secure-World (S) and Non-Secure-World (NS) and the ability to switch between these worlds. The various CPU peripherals inside the SoC, or connected to the SoC, are then classified as secure or non-secure. Secure-World has access to everything, while Non-Secure world only has access to the non-secure peripherals. In HW this is implemented as an additional bit in the address bus to specify the Secure/Non-Secure mode. Only Secure-World bus controllers can issue transactions with the Secure-Bit set. | S-Peripheral NS-Peripheral --------------------------+--------------------------------- S-World Bus Controller | Access Access NS-World Bus Controller | No Access Access When zooming in on the CPU, the S/NS worlds are often seen as an additional dimension to the exception levels (EL3 - EL0). This is illustrated below: The CPU can jump between the secure and non-secure worlds, and the two worlds can communicate with each other by using a shared buffer. This allows the same kind of application and use-cases as when having a dedicated security processor. The TF-A framework provides a multi-stage bootloader concept. There are many good reasons to go with a multi stage approach. To name a few points: Make the amount of code/functionality in the ROM as small as possible. Make components running within a given exception level (or having different life-time) self-contained. TF-A provides different bootloader stages for the different levels. Breaking complex stuff into smaller problems is always a good idea. Here is a list with an explanation of the different boot-loader stages: Trusted ROM Firmware (BL1) This is a binary built from the TF-A sources. Embedded as ROM code in the chip, execute in secure world EL3/SVC-MON. Purpose: Do basic platform initialization Read BL2 from boot media into secure memory, authenticate it, run it. Trusted Boot Firmware (BL2) This is a binary built from the TF-A sources. Loaded from a FIP (see below), and runs from on-chip secure memory, execute in secure world EL1/SVC-MON. Purpose: Will do additional platform initialization including: TrustZone configuration DDR initialization Load BL3x images into DDR memory, authenticate, decrypt etc. Run EL3 Runtime Software EL3 Runtime Software (BL31) This is a binary built from the TF-A sources. Loaded from from a FIP and runs as Secure EL3/SVC. This firmware stays resident in memory, and the services offered here can be called later on. Purpose: Initialize the secure run-time service, typically PSCI and Trusted HW RNG. Authenticate, decrypt and run BL33. Non-trusted Firmware (BL33) BL33 is not built from the TF-A sources, but is a binary which is stored in a FIP and will be loaded (and executed) by TF-A. This is typically U-Boot, a direct booting Linux kernel or some other OS. Runs from DDR memory in non-secure world as EL1/SVC Firmware update image (BL2u) This is a binary built from the TF-A sources. Compared to the other images, this is special, as it is not used during normal boot, and it is not loaded from a FIP stored in flash. This image replaces the normal BL2. It is loaded by BL1 via the UART-monitor using a Serial port. Like BL2, it is authenticated by BL1 before it is being executed. Purpose: Provide an updateable stepping stone for board provisioning. The FIP or Firmware Image Package is the file format TF-A uses to contain all the artifacts. This includes the BL2 and BL3x images, certificates, and configuration files. The FIP is generated as part of the build process. It is written in flash in binary format without any transformation, and the BL1 ROM knows how to locate and load a particular image type in the FIP. It can be compared to a very simple read-only file-system, as it contains only very basic information of the individual files: type, offset and size. The TF-A project includes 2 host tools: fiptool: which makes it easy to perform common operations (create, display, add/del/mod individual images) in fip files. cert_create: which makes it easy to generate the keys and certificates needed to establish the chain of trust. In the build process the make target is called certtool, but the resulting binary is called cert_create. The FIP generation process where the fiptool and cert_create are used is shown below: As shown above, the cert_create tool reads the BLOBs as input, it reads the keys from the disk (or generate them on the fly), and creates the needed certificates. Once the certificates have been generated, the normal fiptool can bundle both the original BLOBs and the associated certificates into the FIP which can then be authenticated. To bind devices to this chain of trust, the SHA or the public root key needs to be written into OTP. When reading console output, browsing the source code, or when using the fiptool or the cert_create tool, it is often necessary to reference the individual images. The table below provide the mapping between the defines used in the C code, the numeric values as they will appear in the trace output, and finally the command-line argument which is understood by the fiptool (and cert_create). C-Define Num fiptool arg BL2_IMAGE_ID 1 --tb-fw BL31_IMAGE_ID 3 --tos-fw BL33_IMAGE_ID 5 --nt-fw TRUSTED_BOOT_FW_CERT_ID 6 --tb-fw-cert TRUSTED_KEY_CERT_ID 7 --trusted-key-cert TRUSTED_OS_FW_KEY_CERT_ID 10 --tos-fw-key-cert NON_TRUSTED_FW_KEY_CERT_ID 11 --nt-fw-key-cert TRUSTED_OS_FW_CONTENT_CERT_ID 14 --tos-fw-cert NON_TRUSTED_FW_CONTENT_CERT_ID 15 --nt-fw-cert FW_CONFIG_ID 31 --fw-config This section provides the hands-on steps needed to build TF-A for LAN969x. Most modern Linux distributions can be used for building TF-A, but to ensure consistent results a docker image can be used for running all the build-commands. This project provides a dr (docker run) script to make it easy to run a command in the desired docker container. The dr script is provided by the https://github.com/microchip-ung/docker-run project which also offers more details on how it works. The folder /opt/mscc must exist before you can use the dr script. This folder is used for caching BSP packages. The short story is that prefixing a command with dr will cause it to run in a docker container. You can test if it works just by typing dr ls and check the result. Sources can be obtained from https://github.com/microchip-ung/arm-trusted-firmware using git clone. A release with both source packages and binaries are provided as release artifacts and can be found at https://github.com/microchip-ung/arm-trusted-firmware/releases. To build the TF-A binaries for LAN969x, navigate to the root of the project and run the following command: $ dr ./scripts/build.rb -p lan969x_a0 This will by default do incremental builds. The --clean flag will delete the artifacts for a given platform/variant and cause the next build to be complete rebuild. This will use the demo keys from the ./keys folder, which are not kept confidential. Any secure products must generate new keys and keep them secret. By default the build script will load a pre-build U-Boot binary into the BL33 blob. The build.rb script offers a set of options to tweak the default settings. The --help option shown below provides an overview of possible options, and the following sub-sections provides some additional details. $ dr ./scripts/build.rb --help Usage: build.rb [options] -p, --platform Build for given platform: lan966x_b0, lan966x_lm, lan969x_sr, lan969x_a0, lan969x_svb, lan969x_lm, lan969x_pcie -r, --root-of-trust Set ROT key file --create_keys Create new keys --bl31-key Set BL31 key --bl32-key Set BL32 key --bl33-key Set BL33 key --non_trusted_world-key Set non_trusted_world key --scp_bl2-key Set scp_bl2 key --trusted_world-key Set trusted_world key --encrypt-images List of encrypted images, eg BL2,BL32,BL33 --encrypt-ssk Enable encryption with SSK --encrypt-bssk Enable encryption with BSSK --fw-nvctr Set Secure FW NV counter for FIP --ntfw-nvctr Set Non-trusted FW NV counter for FIP --bl33_blob BL33 binary -d, --debug Enable DEBUG --release Disable DEBUG -g, --[no-]gptimg Create a GPT image file with the FIP (obsoleted) --gpt-data Add GPT payload -c, --clean Do a 'make clean' instead of normal build -C, --coverity stream Enable coverity scan -R, --[no-]ramusage Report RAM usage --extra1 Add BL32 EXTRA1 image to FIP --extra2 Add BL32 EXTRA2 image to FIP The --platform option is used to select the desired platform. This argument must be provided, and when building for LAN969x it must be set to: lan969x_a0: By default the U-Boot binary provided by the BSP will be used as BL33 content. This is available as the fip.bin image file in the output folder of the build. Likewise the build also produces a fip_linux.bin image file where the BSP provided brsdk_standalone_arm.itb blob from the BSP is used as the BL33. This itb file contains a Linux kernel and a Device Tree, and will allow the system to boot Linux without U-Boot. Sometimes it is desirable to provide the BL33 content directly, this can be done using --bl33-blob . The blob can be either a itb/fit image or a executable binary. If it is not a fit then it will be relocated to address 0x60200000 (in DDR) and once authenticated the BL31 will do a memory-jump to that address. If it is a fit then is is handled as described in the following section. Be aware that the BL33 blob will be aggregated into the FIP, and if the blob is sufficiently large the resulting image may not fit into the NOR flash (in this case eMMC can be used for storing the FIP). When using a fit image, the FIT image is placed in DDR NS start (0x60200000), just like the \"flat\" binary type image. When the fit image is parsed, individual components are identified in this order: Device tree Root FS (optional) Kernel The two first components need to be moved to an area outside where the fit image itself resides - i.e. the load address cannot overwrite the fit image itself. The kernel (being loaded last) is allowed to overwrite the fit image itself, so the load address will typically be the NS DDR start. Apart from the above guides, the following fit image restrictions apply: Compression is not supported for any data (the kernel loader itself may use compression). A load address outside NS DDR area is not allowed. If the fit image contain more than one configuration node, the fit_config OTP tag can be use to name the fit configuration node to use. Otherwise, the default config will be used - as is custom with fit images. Once the device tree according to the chosen configuration is loaded into the proper place, the device tree is \"fixed up\" with these changes: A /memory node is added/modified to containing the memory size according to the platform NS DDR location and size. If the device tree property /chosen/bootargs is not present, a default command line according to the platform is added. (LAN969X: console=ttyAT0,115200 root=/dev/mmcblk0p5 rw rootwait loglevel=8). The load and entry address information in the kernel node is changed to match the current SoC. This is needed as the FIT image produced by the BSP supports both the Sparx5 and LAN969x SoCs. FIT example /dts-v1/; / { description = \"Image Tree Source file for Sparx5/LAN969x\"; #address-cells = ; images { kernel { description = \"Kernel\"; data = /incbin/(\"images/mscc-linux-kernel.bin.gz\"); type = \"kernel\"; arch = \"arm64\"; os = \"linux\"; compression = \"gzip\"; load = /bits/ 64 /* Change this to 0x60000000 for lan969x */; entry = /bits/ 64 /* Change this to 0x60000000 for lan969x */; }; fdt_pcb134 { description = \"Flattened Device Tree\"; data = /incbin/(\"images/sparx5_pcb134.dtb\"); type = \"flat_dt\"; arch = \"arm64\"; compression = \"none\"; }; ... more device trees ... ramdisk { description = \"Ramdisk\"; data = /incbin/(\"rootfs.squashfs\"); type = \"ramdisk\"; arch = \"arm64\"; os = \"linux\"; compression = \"none\"; }; }; configurations { default = \"pcb134\"; pcb134 { description = \"Kernel with DT fdt_pcb134\"; kernel = \"kernel\"; fdt = \"fdt_pcb134\"; ramdisk = \"ramdisk\"; }; lan9698_ev23x71a_0_at_lan969x { description = \"Kernel with DT fdt_lan9698_ev23x71a_0_at_lan969x\"; kernel = \"kernel\"; fdt = \"fdt_lan9698_ev23x71a_0_at_lan969x\"; ramdisk = \"ramdisk\"; }; ... more configuration nodes for other device trees ... }; }; The unpacking of the fit image will display trace log messages if trace is enabled. And example is shown here. FIT boot trace log NOTICE: BL1: Booting BL31 INFO: Entry point address = 0x200000 INFO: SPSR = 0x3cd NOTICE: BL31: lts-v2.8.8(debug):v2.6-mchp1-2067-g2609d6b5a NOTICE: BL31: Built : 11:36:08, Dec 4 2023 NOTICE: Preparing to boot 64-bit Linux kernel [ 0.000000] Booting Linux on physical CPU 0x0000000000 [0x410fd034] By default the keys used for authentication are loaded from the files in the ./keys folder. The following table provides an overview of the command-line options, the default file and a description of its usage: CMD-option Default value Description --rot keys/rotprivk_ecdsa.pem Confidential key used to sign the TRUSTED_BOOT_FW_CERT and the TRUSTED_KEY_CERT. This file contains the ROT_PRIV_KEY and the ROT_PUB_KEY. The public key is embedded into the both the TRUSTED_BOOT_FW_CERT and the TRUSTED_KEY_CERT - which makes these certificates self-signed. --rot_pub keys/rotpk_ecdsa.der Non-confidential public key derived from keys/rotprivk_ecdsa.pem. --rot_sha keys/rotpk_ecdsa_sha256.bin Non-confidential SHA of the public key. This is the key which needs to be loaded into the OTP_TBBR_ROTPK otp field. --bl31_key keys/bl31_ecdsa.pem Confidential key used to sign the bl31 blob (BL31_IMAGE_ID). This file contains the TRUSTED_OS_FW_CONTENT_CERT_PRIV_KEY and the TRUSTED_OS_FW_CONTENT_CERT_PUB_KEY. The public key is embedded into the TRUSTED_OS_FW_KEY_CERT. --bl32_key keys/bl32_ecdsa.pem Not in use for LAN969x, but part of TF-A framework. --bl33_key keys/bl33_ecdsa.pem Confidential key used to sign the bl33 blob (BL33_IMAGE_ID). This file contains the NON_TRUSTED_FW_CONTENT_CERT_PRIV_KEY and the NON_TRUSTED_FW_CONTENT_CERT_PUB_KEY. The public key is embedded into the NON_TRUSTED_FW_KEY_CERT. --non_trusted_world_key keys/non_trusted_world_ecdsa.pem Confidential key used to sign the NON_TRUSTED_FW_KEY_CERT certificate. This file contains the NON_TRUSTED_WORLD_PRIV_KEY and the NON_TRUSTED_WORLD_PUB_KEY. The public key is embedded into the TRUSTED_KEY_CERT. --scp_bl2_key keys/scp_bl2_ecdsa.pem Not in use for LAN969x, but part of TF-A framework. --trusted_world_key keys/trusted_world_ecdsa.pem Confidential key used to sign the TRUSTED_OS_FW_CONTENT_CERT certificate. The list of keys above are provided in demo versions as part of the sources and build artifacts. The demo keys are not kept confidential (in fact they are published), and must be replaced with a new set of keys. To generate new keys, delete they above keys in the ./keys folder, and run the build script with the --create_keys options, like show below: $ dr ./scripts/build.rb --create_keys The tool will not update existing keys. Existing keys must be deleted before new keys can be generated. Check the time stamp and the content of the newly generated keys to confirm that they have been updated. The key content can be show using the openssl command: $ dr openssl ec -in ./keys/rotprivk_ecdsa.pem -text read EC key Private-Key: (256 bit) priv: cb:eb:29:43:74:12:54:96:43:e6:42:48:13:8f:5b: cf:8d:c7:8b:da:b8:c8:64:ae:f7:43:c1:94:ce:a6: 11:fb pub: 04:02:a6:68:7e:f2:fe:c9:07:1a:2c:a9:c2:33:b4: bb:89:34:99:7d:b6:30:f9:1f:6c:a8:ae:5c:6d:c5: 28:04:48:47:66:1e:e4:36:26:ad:5d:1d:83:45:41: 7d:f2:62:e6:e1:a9:2e:d1:c7:cd:0e:c2:62:01:db: 94:53:ca:46:c5 ASN1 OID: prime256v1 NIST CURVE: P-256 writing EC key -----BEGIN EC PRIVATE KEY----- MHcCAQEEIMvrKUN0ElSWQ+ZCSBOPW8+Nx4vauMhkrvdDwZTOphH7oAoGCCqGSM49 AwEHoUQDQgAEAqZofvL+yQcaLKnCM7S7iTSZfbYw+R9sqK5cbcUoBEhHZh7kNiat XR2DRUF98mLm4aku0cfNDsJiAduUU8pGxQ== -----END EC PRIVATE KEY----- By default the build script is using the default trusted and non-trusted counters for the platform. (2 and 3 for LAN969X). In order to create a new firmware version that cannot be downgraded, you can set the specifically by incrementing the counter for the environment that has been fixed. Use --fw-nvctr to explicitly set the \"Trusted FW NV counter\" --ntfw-nvctr to explicitly set the \"Non-Trusted FW NV counter\" to explictly set the version counter embedded in the FIP. Example: $ dr ./scripts/build.rb -p lan969x_a0 --fw-nvctr 3 --ntfw-nvctr 4 By default images are signed but not encrypted. Image encryption can be enabled using the --encrypt-images argument. The listed images will then be encrypted using the key provided with --encrypt-ssk . Example: $ dr ./scripts/build.rb -p lan969x_a0 \\ --encrypt-images BL2,BL32,BL33 \\ --encrypt-ssk ./keys/ssk.bin The ssk key is symmetric, which means that the same key used for encryption must also be programmed into the OTP (OTP_TBBR_SSK) where it is used for decryption. The key can be any 32byte value, and is typically randomly generated. The build.rb tool offer a --encrypt-bssk flag. This is for debug/development usage and should never be used in production. Instead the image should be bound by the bl2u utility or via bl32 using the HUK generated in OTP. The build.rb script will always build a FIP image. This FIP can be programmed directly into the NOR image, but to be able to boot from eMMC, the eMMC image needs to be prepared with a partition table (gpt) , and the FIP needs to be written into a partition (as opposed to being written to a fixed offset in the eMMC). The build script can prepare a complete image file with gpt partition table and the FIP image filled in the fip and the fip.bak partition. the -n, --[no-]norimg is only for internal prototypes and should not be used. This chapter provides a more in-depth description of TF-A technology used in LAN969x. Understanding these details are the essential prerequisites to design secure products based on LAN969x, and to understand the following sections with LAN969x specific implementation. TF-A uses a hierarchy of certificates to authenticate the different images in the FIP. This hierarchy is shown at the following image: As shown on the drawing, BL2 is authenticated by TRUSTED_BOOT_FW_CERT. TRUSTED_BOOT_FW_CERT is authenticated by the root of trust (the ROT_PUB_KEY). And the ROT_PUB_KEY is finally authenticated by the OTP SHA provided by the platform. The key hierarchy limits the usage of the root key, and therefore also the attack surface. If one of the downstream keys is leaked, it is possible to do key revocation. Besides the certificate based authentication, the authentication framework will also check the version number of the certificates against a non-volatile counter, provided by the platform. The version number in the certificate is covered by the signature which ensures the integrity, and the platform provides non-volatile counters that are created in such way that they can only increment. The authentication process will first validate the signature and then continue to compare the version of the certificate against the platform counter. Here is how the comparison is performed: certificate_version == platform_counter: All is good: The boot process can continue. certificate_version > platform_counter: The platform_counter will be incremented to the value of certificate_version: The boot process can continue. certificate_version < platform_counter: Fail as this is considered a rollback attack: The boot process will stop here, and the system needs to be updated with a new image matching the version of the platform counter. The purpose of this mechanism is to have a way of performing revocation of certificates. If one of the private keys has been revealed, new certificates needs to be issued and provisioned. But the old firmware will still pass the public key authentication, and the only way to prevent an attacker from rolling back the firmware, is to have such a counter. The ROT (root of trust) key does not have any version numbers as it cannot be updated. TF-A uses 2 none-volatile counters: trusted_nv_ctr and non_trusted_nv_ctr. The non_trusted_fw_key_cert and non_trusted_fw_content_cert certificates are checked against the non_trusted_nv_ctr, all other (except ROT) are evaluated against trusted_nv_ctr. To sign a certificate the private key is needed, but to authenticate a certificate only the public key is needed. The cert_create tool needs access to both the public and private keys. The public keys are needed, because they are aggregated into the certificates, and the private keys are needed to do the signing. The following picture illustrates the entire signing process done by cert_create. The green boxes are binaries generated by the compiler. cert_create will calculate the SHA, feed the SHA into the certificate, and sign the certificate. The trusted and non-trusted counters is version numbers. These version numbers are given at the command-line, and will be stored in the certificates as well. The trust hierarchy is created by feeding the SHA of 1 public key, into a parent certificate. The 2 certificates: TRUSTED_BOOT_FW_CERT and TRUSTED_KEY_CERT are authenticated by the root-of-trust public certificate. When BL1 loads the BL2 and the FW_CONFIG images from the FIP, it needs to authenticate the images, and the related certificates to establish a chain of trust. This is shown in the image below: When BL2 loads the BL31 and BL33 images from the FIP, it needs to authenticate the images, and the related certificates to establish a chain of trust. This is shown in the image below: Firmware encryption can be used to keep the firmware confidential, and protect against an attacker reading the content of the flash devices and extracting information from that. When enabled, firmware will be encrypted using AES-128-GCM, which uses symmetric keys. Two types of firmware keys are supported: ssk (secret symmetric key): Here the same key is used to encrypt the firmware (when creating the FIP image) and decrypting the firmware when loading running on the target. bssk (binding secret symmetric key): Here the ssk is used when encrypting the image and generating the FIP. But when the image is loaded on the board, it is bound to the board before it is being programmed to the flash. The binding operation will use the ssk to decrypt the image in memory, and then encrypt the image using a key derived from the huk (hardware unique key). When the system is booting, the BL1/BL2 will decrypt the image using the key derived from the huk. Only the individual images are encrypted, but the FIP container stays unencrypted. This is not a security risk, as the FIP is just a container that does not have any sensitive information. When images are encrypted an encryption header is prepended to the image. This header contains a flag indicating if the image has been bound or not. (Indicating using ssk or bssk). Using bssk for firmware encryption instead of ssk have the following advantages: Firmware cannot be copied/cloned from one board to another using an external flash programmer. If the firmware are licensed to a specific board, then it is an advantage to ensure that board firmware cannot be copied. If the ssk is leaked, an attacker cannot decrypt the image found in the flash memory of a board - the attacker will have to find another way to get the image before it is programmed (intercept an update session). If a bssk key is leaked, it will only impact one board. The disadvantage of using bssk is the additional complications of manufacturing the boards, as it is not possible to do this with pre-programmed images. Firmware binding can be done from the fwu.html tool. The core of TF-A is platform independent, and each platform needs to provide the platform specific implementation and drivers. The platform specific layer defines how the SW (and ROM) interface with the hardware, and how the keys in the system are kept safe. See table in LAN969x Strapping Pins See this section and the following. The one-time-programmable memory provided by the SoC is an important source of configuration data. It is the only persistent memory not depending on any external components and it is used for many different purposes. The OTP can be divided into regions, and each region can be write protected, and if write-protected, also read-protected. The OTP contains secret keys, which must be protected to keep firmware confidential. The offered mechanism to keep such keys confidential is the read-protect setting on the given region. The region containing the keys must be marked as read-protected by the BL2 before it hands over control to BL31. Each OTP region contains a number of OTP attributes, which may then contain a number of OTP fields. This is all covered in the following subsections. The OTP shall be divided into the following 8 regions: REG. START END Secure Emu Description ---- ------ ------ ------ --- ----------------------------------------- 0 0x0000 0x003F No No Manufacturing data 1 0x0040 0x0043 No No OTP Write protect 2 0x0044 0x0063 No No OTP Region Definitions 3 0x0064 0x00FF No No Insecure configuration without emulation 4 0x0100 0x01FF Yes Yes Keys and other security related 5 0x0200 0x023F No Yes Non-volatile secure counters 6 0x0240 0x07FF No No Fixed position user-space / custom usage 7 0x0800 0x2000 No No Key-value store (semi-updateable) The secure flag indicates if the area contains secret information, and hence must be configured to remove read access before leaving the BL2. The Emu flag indicate if OTP emulation can be supported. The following sub-section documents the intended use of the regions, and highlights some important points for each of these. The configuration of OTP-regions are kept in the OTP itself. It is the customer responsibility to program the regions. The Linux user-space otp tool can be used for this purpose. The following OTP table shows the pre-defined OTP attributes, used by either HW, BL1 and/or BL2. BL3x, U-Boot, Linux or other clients can also access the OTP, if the access control of the given regions allow it. Begin End Size RTL EMU REG. Name ------ ------ ---- --- --- ---- ---------------- 0x0000 0x0003 4 X 0 OTP_PRG 0x0004 0x0004 1 X 0 FEAT_DIS 0x0005* 0x0006 2 X 0 PARTID 0x0007 0x0007 1 0 TST_TRK 0x0008 0x000f 8 0 SERIAL_NUMBER 0x0010 0x0013 4 X 0 SECURE_JTAG 0x0014 0x001a 7 0 WAFER_TRK reserved 5 bytes 0x0020 0x0029 10 X 0 JTAG_UUID reserved 6 bytes 0x0030 0x0037 8 0 TRIM reserved 8 bytes 0x0040 0x0043 4 X 1 PROTECT_OTP_WRITE 0x0044 0x0063 32 X 2 PROTECT_REGION_ADDR 0x0064 0x0067 4 3 Reserved 0x0068 0x006B 4 3 Reserved 0x006c 0x0073 8 3 Reserved 0x0074 0x009b 40 3 Reserved reserved 100 bytes 0x0100 0x011f 32 X 4 OTP_TBBR_ROTPK 0x0120 0x013f 32 X 4 OTP_TBBR_HUK 0x0140 0x015f 32 X 4 OTP_TBBR_EK 0x0160 0x017f 32 X 4 OTP_TBBR_SSK 0x0180 0x019f 32 X 4 OTP_SJTAG_SSK reserved 4 bytes 0x01a4 0x01a5 2 X 4 OTP_STRAP_DISABLE_MASK reserved 90 bytes 0x0200 0x021f 32 X 5 OTP_TBBR_NTNVCT 0x0220 0x023f 32 X 5 OTP_TBBR_TNVCT In the above table the RTL column indicate that the OTP value is read and used by the digital HW in the SoC before SW is running (under reset). This attribute is a 16 bit mask. Each bit in the mask corresponds to one of the strapping modes. By default the mask is set to all zeroes which means that all strapping modes are allowed. If a customer wants to disable one or more strapping modes the corresponding bits can be set in the mask and the ROM code will refuse to boot into the indicated modes. This 8 byte attribute consists of a set of bitfields that are programmed in the factory at production time, based on measurements on the device. These values will be read at boot and applied as 'corrections' to various hardware features. This is the table of bitfields in the TRIM attribute: Bits Name Description 63:43 Reserved Not programmed 42:37 UVOV_GPIOB_TRIM Trimming value for UVOV_GPIOB. Corresponding register: UVOV:UVOV_CFG[0] 36:31 UVOV_BOOT_TRIM Trimming value for UVOV_BOOT. Corresponding register: UVOV:UVOV_CFG[1] 30:25 UVOV_RGMII_TRIM Trimming value for UVOV_RGMII. Corresponding register: UVOV:UVOV_CFG[4] 24:19 UVOV_GPIOA_TRIM Trimming value for UVOV_GPIOA. Corresponding register: UVOV:UVOV_CFG[5] In LAN969x FW_CONFIG is a binary blob, created during firmware compilation. The format of the blob is as follows: Byte range Size Description =========== ====== ================== 0x000-0x17F 0x0180 OTP-Emulation data 0x180-0x1FF 0x0080 Config space The image must at-least be at 512 (0x200) bytes. Only the first 512 bytes are used by BL1. The image can be extended at a later point in time, but this will only affect the BL2 usage. The OTP Emulation portion is covered in details in the OTP Emulation section. The content of the configuration space is generated based on the content from the scripts/fw_data.yaml file. - field: LAN969X_FW_CONF_MMC_CLK_RATE size: 32 value: 25000000 - field: LAN969X_FW_CONF_MMC_BUS_WIDTH size: 8 value: 0 # MMC_BUS_WIDTH_4 - field: LAN969X_FW_CONF_QSPI_CLK size: 8 value: 30 - field: LAN969X_FW_CONF_MMC_SPEED_MODE size: 8 value: 3 # SDMMC_TIMING_HS - field: LAN969X_FW_CONF_MMC_TX_TUNING_PHASE size: 8 value: 12 # Maserati HW Tx phase default value OTP Emulation is a facility to experiment with OTP settings, without making them permanent. The settings are stored in flash memory, and logical or-ed with the data from the HW OTP. If the HW OTP is empty (all zeros), then all bits can be emulated. The OTP emulation loads data from the FW_CONFIG_ID image. This feature is intended for 2 scenarios: Developers wanting to try out many different OTP configurations, but only having a limited amount of boards: OTP emulation makes it possible to test many new sets of configurations before selecting the optimal set. Users that are about to program the OTP, but want to test out the settings before committing changes that cannot be reversed. The OTP emulation data can be comitted using the fwu.html tool, or manually applied using the Linux otp command. Only the fields marked in the EMU column in the OTP attributes table can be emulated. Loading the FW_CONFIG_ID image is tricky because: When the board is provisioned for secure boot, this image must be authenticated. This image includes OTP emulation data, which may influence if the board shall be considered as provisioned for secure boot. The procedure to load this image is illustrated at the figure below: To ensure that keys are kept private, and that the execution of BL1, BL2 and BL31 cannot be tampered with these images must be run from secure memory. LAN969x have 2MB of on-chip SRAM (Secure RAM), and on-the-fly DDR memory encryption. BL1 executes from ROM directly, but uses the SRAM for static RW data and stack. BL1 will then load BL2 from flash memory into SRAM, and BL2 will then execute from SRAM and also use it for its static RW data and stack. BL2 will initialize the DDR memory, and setup a secure and a non-secure partition. The secure partition uses on-the-fly DDR encryption, and can only be accessed from the secure world. Once completed the BL2 loads the BL31 from flash memory into the secure DDR memory. DDR encryption causes a longer latency to the DDR memory, and is therefore not used for the entire DDR memory. BL31, which is executing from secure DDR memory, will then wipe the contents of the SRAM, and reconfigure the Trust Zone Controller to let all of the SRAM be accessible from the Non-Secure world. This is important for users of the RTE, as the RTE feature needs access to the SRAM. LAN969x supports a secure JTAG port which is configured via the SECURE_JTAG OTP attribute. The data-sheet documents the encoding of SECURE_JTAG. Once programmed the JTAG port HW will wake up in one of the following modes: Open: The JTAG port is operating normally. Secure mode 1: The JTAG port will respond to a boundary scan, but is otherwise unresponsive (locked down). In this mode it is possible to unlock the port (move the JTAG port to the open state) using a challenge-response mechanism running over JTAG. Secure mode 2: The JTAG port will be completely unresponsive (locked down). In this mode it is possible to unlock it (move it to open state) using a challenge-response mechanism running over JTAG. Closed: The JTAG port is disabled and cannot be enabled. If one of the secure-modes is enabled, then the JTAG port can be unlocked using a challenge/response. The challenges is a random 32 byte blob generated by the LAN996x device, and the response to unlock is a sha256(challenge-data OTP_SJTAG_SSK) (where OTP_SJTAG_SSK is the content of the OTP field, and + is a concatenation of the 2 blobs). The scripts/sjtag-challenge.rb in the TF-A repository can be used to calculate the response to a challenge. The fwu.html tool can be used to generate the challenge and unlock the JTAG port if the correct response is given. The TF-A project for LAN969x provides a template to lower the effort to build a set of secure artifacts. But the deliverables from Microchip are from an open and transparent system, which with a few changes can be turned into a secure set of artifacts. Following is a set of guidelines on how to turn the open-system into a set of secure boot artifacts: Understand what you are doing, and do not blindly trust us. Generate new keys and keep the private and the shared/symmetric keys secret (but still available as they will be needed to build potential new versions). Review how keys are generated, and evaluate if the methods provided in here are good enough for you need. How to keep keys secret is beyond the scope of this document, but look for good praxis in the industry. Use the certificate hierarchy to limit the exposure of the private keys. The root-of-trust should only be used very rarely and can be kept offline. Only increment the NV counters when a released version poses a security breach. The BL2U functionality provided in this project is a potential security breach, as it can expose the content of the OTP. Do one of the following: Change it to make it such that it will not be able to dump the OTP content. Do not generate it (delete it after each build). Treat it as a shared/symmetric key as it can be used to read out the keys from OTP. Do not give it to anyone who do not have these keys already. To build a secure product the manufacturing procedure must include the steps to program the OTP with needed keys and settings. A pre-request for this is to generate the keys and secure artifacts as explained in Secure artifacts Move to a trusted environment, where private and shared keys can be handled without risk of leaks. Initialize the OTP with the following content (either via BL2U / fwu.html or my using the otp Linux user-space utility. Regions must be defined (program PROTECT_REGION_ADDR) Following keys shall be programmed with the prepared content: OTP_TBBR_ROTPK, OTP_TBBR_SSK and OTP_SJTAG_SSK. Enable secure JTAG by programming SECURE_JTAG. Program the OTP_TBBR_HUK with unknown random data. Optional: disable any strap modes not needed by writing OTP_STRAP_DISABLE_MASK. Write protect region 4 by updating the content of PROTECT_OTP_WRITE. IMPORTANT: This is not only for write-protect, this is also needed to prevent non-secure read-access of region 4. NOTE: Additional regions can be write protected, but region 5 must remain writeable! Provision the firmware image in flash as needed. AES Advanced Encryption Standards ATE Automatic Test Equipment. Device used in SoC production and test. BL1 Boot Loader 1: In secure immutable ROM (Trusted ROM Firmware) BL2 Boot Loader 2: In secure on-chip RAM, temporary (Trusted Boot Firmware) BL31 Boot Loader 31: Resident secure services (ARM v8) BL32 Boot Loader 32: Resident secure services (ARM v7) BL33 Boot Loader 33: Typically U-Boot. trusted Firmware) BSSK Binding Secret Symmetric Key DT Device Tree eMMC Embedded MultiMediaCard FIP Firmware Image Package FIT Flattened Image Tree GPT GUID Partition Table HUK Hardware Unique Key JTAG Joint Test Action Group, interface for testing and debugging NS Non-Secure World OP-TEE Open Portable Trusted Execution Environment OS Operation System OTP One-Time-Programmable Memory PCIe Peripheral Component Interconnect Express PSCI Power State Coordination Interface RNG Random Number Generator ROT Root of Trust RTE Real-Time Engine. Device used for real-time equipment control. RTL Register-Transfer Level S Secure World SD-Card Secure Digital Card SHA Secure Hash Algorithm family SJTAG Secure JTAG SPI Serial Peripheral Interface SRAM Secure Ram SSK Secret Symmetric Key TBBR Trusted Board Boot Requirements TF-A Trusted Firmware for ARM UART Universal Asynchronous Receiver-Transmitter This document is provided under the BSP-3-Clause license (where swoftware is replaced with document). The BSD-3-Clause license has been chosen here as it is the same license used by the TF-A project. Here is the license covering this file/document: Copyright (c) 2022, Microchip Technology Inc. and its subsidiaries. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. - Neither the name of Arm nor the names of its contributors may be used to endorse or promote products derived from this document without specific prior written permission. THIS DOCUMENT IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS DOCUMENT, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"LAN969x Secure Boot","component":"bsp","version":"2023.12","name":"lan969x-tfa","url":"/bsp/2023.12/supported-hw/lan969x-tfa.html","titles":[{"text":"1. LAN969x Secure Boot","hash":"_lan969x_secure_boot","id":1},{"text":"1.1. Introduction","hash":"_introduction","id":2},{"text":"1.1.1. TF-A architecture","hash":"_tf_a_architecture","id":3},{"text":"1.1.2. TF-A Bootloaders (BLx)","hash":"_tf_a_bootloaders_blx","id":4},{"text":"1.1.3. Firmware Image Package (FIP)","hash":"_firmware_image_package_fip","id":5},{"text":"1.1.3.1. FIP Image IDs","hash":"_fip_image_ids","id":6},{"text":"1.2. Getting started with TF-A for LAN969x","hash":"_getting_started_with_tf_a_for_lan969x","id":7},{"text":"1.2.1. Build environment","hash":"_build_environment","id":8},{"text":"1.2.2. Getting sources and releases","hash":"_getting_sources_and_releases","id":9},{"text":"1.2.3. Building","hash":"_building","id":10},{"text":"1.2.3.1. Platform selection","hash":"_platform_selection","id":11},{"text":"1.2.3.2. BL33 content","hash":"_bl33_content","id":12},{"text":"1.2.3.2.1. Loading FIT/ITBs as BL33","hash":"_loading_fititbs_as_bl33","id":13},{"text":"Configuration selection","hash":"_configuration_selection","id":14},{"text":"Device Tree modifications","hash":"_device_tree_modifications","id":15},{"text":"1.2.3.3. Authentication keys","hash":"_authentication_keys","id":16},{"text":"1.2.3.4. Rollback protection (NV-Counters)","hash":"_rollback_protection_nv_counters","id":17},{"text":"1.2.3.5. Image encryption","hash":"_image_encryption","id":18},{"text":"1.2.3.6. Image generation","hash":"_image_generation","id":19},{"text":"1.3. TF-A in Details","hash":"_tf_a_in_details","id":20},{"text":"1.3.1. Certificate hierarchy","hash":"_certificate_hierarchy","id":21},{"text":"1.3.2. Revocation and Rollback protection","hash":"_revocation_and_rollback_protection","id":22},{"text":"1.3.3. Image signing in details","hash":"_image_signing_in_details","id":23},{"text":"1.3.4. BL1 Chain of Trust verification","hash":"_bl1_chain_of_trust_verification","id":24},{"text":"1.3.5. BL2 Chain of Trust verification","hash":"_bl2_chain_of_trust_verification","id":25},{"text":"1.3.6. Firmware encryption","hash":"_firmware_encryption","id":26},{"text":"1.4. LAN969x TF-A Platform support","hash":"_lan969x_tf_a_platform_support","id":27},{"text":"1.4.1. Strapping modes","hash":"_strapping_modes","id":28},{"text":"1.4.2. Booting","hash":"_booting","id":29},{"text":"1.4.3. OTP","hash":"_otp","id":30},{"text":"1.4.3.1. OTP Regions","hash":"_otp_regions","id":31},{"text":"1.4.3.2. OTP attributes","hash":"_otp_attributes","id":32},{"text":"1.4.3.3. OTP attribute: OTP_STRAP_DISABLE_MASK","hash":"_otp_attribute_otp_strap_disable_mask","id":33},{"text":"1.4.3.4. OTP attribute: TRIM","hash":"_otp_attribute_trim","id":34},{"text":"1.4.4. Firmware Config (FW_CONFIG)","hash":"_firmware_config_fw_config","id":35},{"text":"1.4.4.1. OTP Emulation","hash":"_otp_emulation","id":36},{"text":"1.4.4.2. Loading of FW_CONFIG_ID","hash":"_loading_of_fw_config_id","id":37},{"text":"1.4.5. Secure RAM","hash":"_secure_ram","id":38},{"text":"1.4.6. Secure JTAG","hash":"_secure_jtag","id":39},{"text":"1.5. Guidelines for preparing secure artifacts","hash":"secureartifacts","id":40},{"text":"1.6. Guideline Secure provisioning","hash":"_guideline_secure_provisioning","id":41},{"text":"1.7. TERMS and ABBREVIATIONS","hash":"term","id":42},{"text":"1.8. License","hash":"_license","id":43}]},"73":{"id":73,"text":"LAN969X SoC have 4 FLEXCOMs (Flexible Serial Communication Controller). In order to use flexcom USART interface, a specific flexcom should be configured in USART mode. Following kernel config options should be enabled to use LAN969x flexcom USART interface: CONFIG_MFD_AT91_USART - USART driver config option. To use Flexcom USART interface, following configurations are required in device tree. Each of the flexcom flx0, flx1, flx2 and flx3 nodes can be configured in USART mode ATMEL_FLEXCOM_MODE_USART to use USART interface. compatible string must be set to atmel,at91sam9260-usart. reg property must be set with register address and length as . GPIO pins for TXD and RXD pins should be configured to pinctrl-0 property. Also add cts and rts pins, if present. List of possible TXD and RXD pin mappings are as in below table: FLEXCOM ID ALT Mode RXD pin TXD pin flx0 ALT 2 GPIO3 GPIO4 flx2 ALT 3 GPIO15 GPIO16 flx1 ALT 2 GPIO28 GPIO29 flx3 ALT 2 GPIO55 GPIO56 flx2 ALT 1 GPIO65 GPIO66 interrupts property must set with interrupt details. Interrupt number[CPU INTR] corresponding to a flexcom must be configured as defined in below table: FLEXCOM ID Shared Peripheral Interrupt CPU INTR flx0 78 46 flx1 79 47 flx2 80 48 flx3 81 49 Note that Shared peripheral interrupt lines start at index ID32. So, CPU INTR must be calculated as [Shared peripheral interrupt number - 32]. Input clock clocks property must be set to &fabric_clk. Note that Fabric clock (250Mhz) is clock used by AXI, AHB fabric and APB bridges which connects all peripherals. clock-names must be set to usart. GPIO flexcom shared pins should be configured as per board design. dmas must be set to phandle dma0 and Peripheral ID as listed below: FLEXCOM ID Tx channel PerID Rx channel PerID flx0 3 2 flx1 3 2 flx2 7 6 flx3 9 8 Flexcom Documentation https://elixir.bootlin.com/linux/latest/source/Documentation/devicetree/bindings/serial/atmel,at91-usart.yaml[USART Documentation} Following example shows how a flexcom USART should be defined in a EVB-LAN9696-24port DT. Here Flexcom0 is used as the console. / { model = \"lan969x ev23x71a (pcb8398)\"; aliases { serial0 = &usart0; }; chosen { stdout-path = \"serial0:115200n8\"; }; &flx0 { atmel,flexcom-mode = ; status = \"okay\"; usart0: serial@200 { pinctrl-0 = ; pinctrl-names = \"default\"; status = \"okay\"; }; }; &flx2 { atmel,flexcom-mode = ; status = \"okay\"; spi2: spi@400 { pinctrl-0 = ; pinctrl-names = \"default\"; cs-gpios = ; status = \"okay\"; spi@0 { compatible = \"mchp,synce_dpll\"; reg = ; spi-max-frequency = ; }; }; }; &flx3 { atmel,flexcom-mode = ; status = \"okay\"; i2c3: i2c@600 { pinctrl-0 = ; pinctrl-names = \"default\"; i2c-analog-filter; i2c-digital-filter; i2c-digital-filter-width-ns = ; i2c-sda-hold-time-ns = ; status = \"okay\"; }; }; &gpio { fc0_pins: fc0-pins { pins = \"GPIO_3\", \"GPIO_4\"; function = \"fc\"; }; fc2_pins: fc2-pins { pins = \"GPIO_64\", \"GPIO_65\", \"GPIO_66\"; function = \"fc\"; }; fc3_pins: fc3-pins { pins = \"GPIO_55\", \"GPIO_56\"; function = \"fc\"; }; }; Check if a tty device is created in /dev/ directory. This can be also be verified by executing dmesg | tail (on host PC) once the board is powered-up. Connect to console using minicom -s /dev/ttyACM0 Following demonstrates above DT flexcom examples on EVB-LAN9696-24port board: In order to use flexcom0 USART as console, add console=ttyAT0,115200n8 to uboot bootargs environment variable and pass it to the kernel, then this usart will become the console. First identify and connect to /dev/ttyACMx (Here x is port number) on Host machine. For Linux users, minicom application can be used to connect to console. # dmesg | tail [1124607.685978] usb 1-6.1.4: USB disconnect, device number 27 [1124610.736013] usb 1-6.1.4: new full-speed USB device number 122 using xhci_hcd [1124610.852447] usb 1-6.1.4: New USB device found, idVendor=04d8, idProduct=00df, bcdDevice= 1.01 [1124610.852451] usb 1-6.1.4: New USB device strings: Mfr=1, Product=2, SerialNumber=3 [1124610.852452] usb 1-6.1.4: Product: MCP2200 USB Serial Port Emulator [1124610.852453] usb 1-6.1.4: Manufacturer: Microchip Technology Inc. [1124610.852454] usb 1-6.1.4: SerialNumber: 0013263668 [1124610.866007] cdc_acm 1-6.1.4:1.0: ttyACM1: USB ACM device [1124610.867021] hid-generic 0003:04D8:00DF.0012: hiddev1,hidraw2: USB HID v1.11 Device [Microchip Technology Inc. MCP2200 USB Serial Port Emulator] on usb-0000:00:14.0-6.1.4/input2 [1124613.768165] usb 1-4.1: reset high-speed USB device number 118 using xhci_hcd # # minicom -s /dev/ttyACM1 U-Boot 2023.04 (Nov 07 2023 - 14:41:53 +0100) CPU: ARM A53 Model: lan969x ev23x71a (pcb8398) DRAM: 896 MiB (effective 897.9 MiB) Core: 27 devices, 16 uclasses, devicetree: fit MMC: emmc@e0830000: 0 Loading Environment from SPIFlash... SF: Detected sst26wf016 with page size 256 Bytes, erase size 4 KiB, total 2 MiB OK In: serial Out: serial Err: serial Net: eth0: switch@0 Hit any key to stop autoboot: 0 7168283 bytes read in 163 ms (41.9 MiB/s) Working FDT set to 64000000 ## Loading kernel from FIT Image at 64000000 ... Using 'lan9698_ev23x71a_0_at_lan969x' configuration Trying 'kernel' kernel subimage Description: Kernel Type: Kernel Image Compression: gzip compressed Data Start: 0x640000c8 Data Size: 6976499 Bytes = 6.7 MiB Architecture: AArch64 OS: Linux Load Address: 0x60000000 Entry Point: 0x60000000 Verifying Hash Integrity ... OK ## Loading fdt from FIT Image at 64000000 ... Using 'lan9698_ev23x71a_0_at_lan969x' configuration Trying 'fdt_lan9698_ev23x71a_0_at_lan969x' fdt subimage Description: Flattened Device Tree Type: Flat Device Tree Compression: uncompressed Data Start: 0x646cb5fc Data Size: 27258 Bytes = 26.6 KiB Architecture: AArch64 Verifying Hash Integrity ... OK Booting using the fdt blob at 0x646cb5fc Working FDT set to 646cb5fc Uncompressing Kernel Image Loading Device Tree to 0000000096b22000, end 0000000096b2ba79 ... OK Working FDT set to 96b22000 Loading Device Tree to 0000000096b15000, end 0000000096b21a79 ... OK Working FDT set to 96b15000 Starting kernel ... Starting syslogd: OK Starting klogd: OK Running sysctl: OK Seeding 256 bits and crediting Saving 256 bits of creditable seed for next boot Starting iptables: OK Starting network: OK Starting dropbear sshd: OK Welcome to SMBStaX vcoreiii login: root #","title":"LAN969x USART","component":"bsp","version":"2023.12","name":"lan969x-usart","url":"/bsp/2023.12/supported-hw/lan969x-usart.html","titles":[{"text":"1. LAN969x USART","hash":"_lan969x_usart","id":1},{"text":"1.1. SoC Resources","hash":"_soc_resources","id":2},{"text":"1.2. Kernel configurations","hash":"_kernel_configurations","id":3},{"text":"1.3. Devicetree Configuration","hash":"_devicetree_configuration","id":4},{"text":"1.3.1. References","hash":"_references","id":5},{"text":"1.3.2. Example","hash":"_example","id":6},{"text":"1.4. UserSpace","hash":"_userspace","id":7},{"text":"1.4.1. Confirm instances are created","hash":"_confirm_instances_are_created","id":8},{"text":"1.4.2. Example on how to use","hash":"_example_on_how_to_use","id":9},{"text":"1.4.2.1. FLEXCOM USART as console","hash":"_flexcom_usart_as_console","id":10}]},"74":{"id":74,"text":"LAN969x SoC supports one instance of the Dual Role SuperSpeed DesignWare USB3 controller. The current implementation supports only the host mode part of dual role Following kernel config options should be enabled to use LAN969x USB in host mode: CONFIG_USB_DWC3 - DesignWare USB Controller support CONFIG_USB_DWC3_ULPI - Using an ULPI type PHY on the USB controller Atmel High-Speed USB device controller DT Documentation dwc3-of-simple To enable LAN969x USB, following configurations are required in device tree: compatible string must be set to \"microchip,lan966x-dwc3\" clocks property must be set to #address-cells must be set to 1. #size-cells must be set to 1. ranges property must be present (this is an empty address translation) This node must have a child node that specifies the glue for the DWC3 controller: compatible string must be set to = \"snps,dwc3\". reg property must be set to . interrupts must be set to Peripheral Shared Peripheral Interrupt CPU INTR USB Host 112 80 dr_mode property must be set to \"host\". clocks property must be set to . clock-names property must be set to \"ref\". assigned-clocks property must be set to . assigned-clock-rates property must be set to 60Mhz. maximum-speed property must be set to \"full-speed\". phy-names property must be set to \"usb2-phy\" and \"usb3-phy\" DWC3 Controller Synopsis DWC3 Glue Following example shows how the LAN969x USB controller should be defined in DT: dtsi file: usb0: usb@300000 { compatible = \"microchip,lan966x-dwc3\"; clocks = ; #address-cells = ; #size-cells = ; ranges; status = \"disabled\"; usb0_dwc3: usb_dwc3@300000 { compatible = \"snps,dwc3\"; reg = ; interrupts = ; dr_mode = \"host\"; clocks = ; clock-names = \"ref\"; assigned-clocks = ; assigned-clock-rates = ; maximum-speed = \"full-speed\"; phy-names = \"usb2-phy\", \"usb3-phy\"; status = \"okay\"; }; }; dts file changes: &gpio { usb_ulpi_pins: usb-ulpi-pins { pins = \"GPIO_30\", \"GPIO_31\", \"GPIO_32\", \"GPIO_33\", \"GPIO_34\", \"GPIO_35\", \"GPIO_36\", \"GPIO_37\", \"GPIO_38\", \"GPIO_39\", \"GPIO_40\", \"GPIO_41\"; function = \"usb_ulpi\"; }; usb_rst_pins: usb-rst-pins { pins = \"GPIO_12\"; function = \"usb2phy_rst\"; }; usb_over_pins: usb-over-pins { pins = \"GPIO_13\"; function = \"usb_over_detect\"; }; usb_power_pins: usb-power-pins { pins = \"GPIO_1\"; function = \"usb_power\"; }; }; &usb0 { status = \"okay\"; pinctrl-0 = , , , ; pinctrl-names = \"default\"; }; You can verify that the driver is available by checking its mode setting is host, like this: # cat /sys/kernel/debug/usb/300000.usb_dwc3/mode host Prepare a USB Memory Stick with the following properties on a Linux Desktop: Make a GTP partition table Add one primary partition using the EXT4 filesystem that uses the total USB Memory Stick space. Format the partition with the ext4 formatter Mount the partition on an empty folder Copy a wellknown file to the mounted folder Sync and unmount the folder Now insert the memory stick in the USB vertical USB port on the EVB-LAN9696-24port and check the logs: # [ 382.641801] usb 1-1: new high-speed USB device number 2 using xhci-hcd [ 382.790319] usb 1-1: New USB device found, idVendor=0781, idProduct=5406, bcdDevice= 2.00 [ 382.795753] usb 1-1: New USB device strings: Mfr=1, Product=2, SerialNumber=3 [ 382.803050] usb 1-1: Product: U3 Cruzer Micro [ 382.807278] usb 1-1: Manufacturer: SanDisk [ 382.811348] usb 1-1: SerialNumber: 194253029D50FD3B [ 382.817444] usb-storage 1-1:1.0: USB Mass Storage device detected [ 382.822855] scsi host0: usb-storage 1-1:1.0 [ 383.842201] scsi 0:0:0:0: Direct-Access SanDisk Cruzer 8.02 PQ: 0 ANSI: 0 CCS [ 383.848550] sd 0:0:0:0: [sda] Media removed, stopped polling [ 383.854874] sd 0:0:0:0: [sda] Attached SCSI removable disk # ls /dev/sda* /dev/sda The log announces a new sda block device which is visible in the /dev folder, but what about the partition that we created? Here you need to probe the new device for partition information: # partprobe /dev/sda [ 405.656881] sd 0:0:0:0: [sda] 15704063 512-byte logical blocks: (8.04 gb/7.49 gib) [ 405.662434] sda: detected capacity change from 0 to 15704063 [ 405.693476] sda: sda1 [ 405.720651] sda: sda1 Partprobe informs the kernel about the partitions on device sda which in turn causes the kernel to create a new sda1 block device that represents the first (and only) partition on sda. On Desktop Linux systems it is common to run the udev daemon that takes care of retrieving partition information and spawn process that will mount these partitions with specific user rights, but udev and its helpers are not always available on embedded systems. Now you can mount the sda1 partition to access the file that was stored there: # mount /dev/sda1 /mnt/ [ 421.617746] EXT4-fs (sda1): mounted filesystem with ordered data mode. Quota mode: disabled. # ls -l /mnt/ total 28K drwxr-xr-x 3 root root 4.0K Dec 12 2023 . drwxr-xr-x 19 1001 1001 4.0K Sep 28 2023 .. drwx------ 2 root root 16.0K Dec 12 2023 lost+found -rw-r--r-- 1 root root 1.4K Dec 12 2023 main.rs # cat /mnt/main.rs use std::fs::File; use std::io::Read; ... file listing continues... # You can now read and write to the folder as you please, and the changes will be stored in the first partition of the USB Memory Stick. Remember to sync and unmount the device before unplugging it. # sync # umount /mnt/ [ 897.689004] EXT4-fs (sda1): unmounting filesystem. #","title":"LAN969x USB","component":"bsp","version":"2023.12","name":"lan969x-usb","url":"/bsp/2023.12/supported-hw/lan969x-usb.html","titles":[{"text":"1. LAN969x USB","hash":"_lan969x_usb","id":1},{"text":"1.1. SoC Resources","hash":"_soc_resources","id":2},{"text":"1.2. Kernel configurations","hash":"_kernel_configurations","id":3},{"text":"1.3. Devicetree Configuration","hash":"_devicetree_configuration","id":4},{"text":"1.3.1. References","hash":"_references","id":5},{"text":"1.3.2. Example","hash":"_example","id":6},{"text":"1.4. UserSpace","hash":"_userspace","id":7},{"text":"1.4.1. Mounting a USB Memory Stick","hash":"_mounting_a_usb_memory_stick","id":8}]},"75":{"id":75,"text":"LAN969x SoC supports one instance of Watchdog Timer from Synopsys DW. Following kernel config options should be enabled to use LAN969x WDT: CONFIG_DW_WATCHDOG - Synopsys Watchdog driver config option. To enable the Watchdog timer, following configurations are required in device tree: compatible string must be set to snps,dw-wdt. reg property must be set to . interrupts property must be set with interrupt details as . Peripheral Shared Peripheral Interrupt CPU INTR watchdog 68 36 Note Shared peripheral interrupt lines start at index ID32. So, CPU INTR must be calculated as [Shared peripheral interrupt number - 32]. clocks property must be set to . WDT DT Documentation Watchdog Driver API Following example shows how a Watchdog timer should be defined in DT: dtsi file: watchdog: watchdog@e0090000 { compatible = \"snps,dw-wdt\"; reg = ; interrupts = ; clocks = ; }; Check for /dev/watchdog. If this file is present, that means the watchdog kernel device driver is loaded. Run cat /dev/watchdog0 and you see linux reboots in 30-40secs. # cat /dev/watchdog0 [ 7879.765752] watchdog: watchdog0: watchdog did not stop! # # # U-Boot 2023.04 (Nov 07 2023 - 14:41:53 +0100) CPU: ARM A53 Model: lan969x ev23x71a (pcb8398) DRAM: 896 MiB (effective 897.9 MiB) Core: 27 devices, 16 uclasses, devicetree: fit MMC: emmc@e0830000: 0 Loading Environment from MMC... OK In: serial Out: serial Err: serial Net: eth0: switch@0 Hit any key to stop autoboot: 0 Configure buildroot and install Watchdog utility provided by Busybox. The main watchdog configuration file is /etc/watchdog.conf. # busybox | grep watchdog vconfig, vi, vlock, w, watch, watchdog, wc, wget, which, who, whoami, # # watchdog --help watchdog: unrecognized option `--help' watchdog version 5.16, usage: watchdog [options] options: -c | --config-file specify location of config file -f | --force don't sanity-check config or use PID file -F | --foreground run in foreground -X | --loop-exit run a fixed number of loops then exit -q | --no-action do not reboot or halt -b | --softboot soft-boot on error -s | --sync sync filesystem -v | --verbose verbose messages # ls -l /etc/watchdog.conf -rw-r--r-- 1 root root 6102 May 18 2022 /etc/watchdog.conf Add watchdog configurations to /etc/watchdog.conf file. Run command watchdog -c /etc/watchdog.conf. By default, Busybox watchdog command runs in background. Check for Hardware watchdog process ID. Kill the watchdog process. Verify that system is rebooted after watchdog-timeout value. # cat /etc/watchdog.conf watchdog-device = /dev/watchdog watchdog-timeout = 20 log-dir = /var/log/watchdog file = /var/log/messages change = 1500 realtime = yes priority = 1 # watchdog -c /etc/watchdog.conf # ps -ef | grep watchdog 28 root [watchdogd] 477 root watchdog -c /etc/watchdog.conf 481 root grep watchdog # kill -9 477 ; uptime ; tail -f /var/log/messages [ 2933.075931] watchdog: watchdog0: watchdog did not stop! 00:48:53 up 48 min, load average: 0.00, 0.00, 0.00 Jan 1 00:48:38 vcoreiii daemon.info watchdog[477]: interface: no interface to check Jan 1 00:48:38 vcoreiii daemon.info watchdog[477]: temperature: no sensors to check Jan 1 00:48:38 vcoreiii daemon.info watchdog[477]: no test binary files Jan 1 00:48:38 vcoreiii daemon.info watchdog[477]: no repair binary files Jan 1 00:48:38 vcoreiii daemon.info watchdog[477]: error retry time-out = 60 seconds Jan 1 00:48:38 vcoreiii daemon.info watchdog[477]: repair attempts = 1 Jan 1 00:48:38 vcoreiii daemon.info watchdog[477]: alive=/dev/watchdog heartbeat=[none] to=root no_act=no force=no Jan 1 00:48:38 vcoreiii daemon.info watchdog[477]: watchdog now set to 20 seconds Jan 1 00:48:38 vcoreiii daemon.info watchdog[477]: hardware watchdog identity: Synopsys DesignWare Watchdog Jan 1 00:48:53 vcoreiii kern.crit kernel: [ 2933.075931] watchdog: watchdog0: watchdog did not stop! NOTICE: Booting Trusted Firmware ...More trace... U-Boot 2023.04 (Nov 07 2023 - 14:41:53 +0100) CPU: ARM A53 Model: lan969x ev23x71a (pcb8398) DRAM: 896 MiB (effective 897.9 MiB) Core: 27 devices, 16 uclasses, devicetree: fit MMC: emmc@e0830000: 0 Loading Environment from MMC... OK In: serial Out: serial Err: serial Net: eth0: switch@0 Hit any key to stop autoboot: 0 Add watchdog configurations to the /etc/watchdog.conf file. Run the watchdog in foreground using the '-F' option. Press CTRL + z to suspend the watchdog process. In this case, the watchdog device is enabled but is no longer fed. After watchdog-timeout seconds, the system is reset by the Watchdog device. # watchdog -c /etc/watchdog.conf -F watchdog: starting daemon (5.16): watchdog: int=1s realtime=yes sync=no load=0,0,0 soft=no watchdog: memory not checked watchdog: ping: no machine to check watchdog: file: /var/log/messages:1500 watchdog: pidfile: no server process to check watchdog: interface: no interface to check watchdog: temperature: no sensors to check watchdog: no test binary files watchdog: no repair binary files watchdog: error retry time-out = 60 seconds watchdog: repair attempts = 1 watchdog: alive=/dev/watchdog heartbeat=[none] to=root no_act=no force=no watchdog: watchdog now set to 20 seconds watchdog: hardware watchdog identity: Synopsys DesignWare Watchdog [1]+ Stopped watchdog -c /etc/watchdog.conf -F # NOTICE: Booting Trusted Firmware ...More traces... NOTICE: Direct boot of BL33 binary image U-Boot 2023.04 (Nov 07 2023 - 14:41:53 +0100) CPU: ARM A53 Model: lan969x ev23x71a (pcb8398) DRAM: 896 MiB (effective 897.9 MiB) Core: 27 devices, 16 uclasses, devicetree: fit MMC: emmc@e0830000: 0 Loading Environment from MMC... OK In: serial Out: serial Err: serial Net: eth0: switch@0 Hit any key to stop autoboot: 0","title":"LAN969x Watchdog","component":"bsp","version":"2023.12","name":"lan969x-wdt","url":"/bsp/2023.12/supported-hw/lan969x-wdt.html","titles":[{"text":"1. LAN969x Watchdog","hash":"_lan969x_watchdog","id":1},{"text":"1.1. SoC Resources","hash":"_soc_resources","id":2},{"text":"1.2. Kernel configurations","hash":"_kernel_configurations","id":3},{"text":"1.3. Devicetree Configuration","hash":"_devicetree_configuration","id":4},{"text":"1.3.1. References","hash":"_references","id":5},{"text":"1.4. Example","hash":"_example","id":6},{"text":"1.4.1. UserSpace","hash":"_userspace","id":7},{"text":"1.4.1.1. Confirm instances are created","hash":"_confirm_instances_are_created","id":8},{"text":"1.4.1.2. Direct activation of the watchdog","hash":"_direct_activation_of_the_watchdog","id":9},{"text":"1.4.1.3. Using the watchdog utility","hash":"_using_the_watchdog_utility","id":10},{"text":"1.4.1.4. Running the watchdog in the background","hash":"_running_the_watchdog_in_the_background","id":11},{"text":"1.4.1.5. Running the watchdog in the foreground","hash":"_running_the_watchdog_in_the_foreground","id":12}]},"76":{"id":76,"text":"This section describes the relationship between reference boards and BSP targets. Valid combinations of ARM64 based boards and BSP targets are: Board\\BSP arm64_bootloaders arm64_bootloaders_ls1046 arm64_bootloaders_rpi arm64_standalone arm64_xstax arm64_standalone_rpi bcm_2711-rpi-cm4 ✘ ✘ ✔ ✘ ✘ ✔ ls1046_pcb110 ✘ ✔ ✘ ✘ ✔ ✘ ls1046_pcb121 ✘ ✔ ✘ ✘ ✔ ✘ ls1046_pcb134 ✘ ✔ ✘ ✘ ✔ ✘ sparx5_pcb125 ✔ ✘ ✘ ✔ ✔ ✘ sparx5_pcb134_emmc ✔ ✘ ✘ ✔ ✔ ✘ sparx5_pcb134 ✔ ✘ ✘ ✔ ✔ ✘ sparx5_pcb135_emmc ✔ ✘ ✘ ✔ ✔ ✘ sparx5_pcb135 ✔ ✘ ✘ ✔ ✔ ✘ Valid combinations of ARM based boards and BSP targets are: Board\\BSP arm_bootloaders_bbb arm_bootloaders arm_standalone arm_xstax lan966x_pcb8291 ✘ ✔ ✔ ✔ lan966x_pcb8290 ✘ ✔ ✔ ✔ lan966x_pcb8281 ✘ ✔ ✔ ✔ lan966x_pcb8309 ✘ ✔ ✔ ✔ lan966x_pcb8385 ✘ ✔ ✔ ✔ am335-boneblack ✔ ✘ ✔ ✔ Valid combinations of MIPS based boards and BSP targets are: Board\\BSP mipsel_bootloaders mipsel_standalone mipsel_xstax mipsel_xstax_loader jaguar2_pcb110 ✔ ✘ ✔ ✔ jaguar2_pcb111 ✔ ✘ ✔ ✔ jaguar2_pcb118 ✔ ✘ ✔ ✔ luton_pcb090 ✔ ✘ ✔ ✔ luton_pcb091 ✔ ✘ ✔ ✔ ocelot_pcb120 ✔ ✔ ✔ ✔ ocelot_pcb123 ✔ ✔ ✔ ✔ serval_pcb105 ✔ ✘ ✔ ✔ serval_pcb106 ✔ ✘ ✔ ✔ serval2_pcb112 ✔ ✘ ✔ ✔ servalt_pcb116 ✔ ✘ ✔ ✔","title":"","component":"bsp","version":"2023.12","name":"other","url":"/bsp/2023.12/supported-hw/other.html","titles":[{"text":"1. Other","hash":"_other","id":1},{"text":"1.1. Boards versus 64 bit ARM targets","hash":"_boards_versus_64_bit_arm_targets","id":2},{"text":"1.2. Boards versus 32 bit ARM targets","hash":"_boards_versus_32_bit_arm_targets","id":3},{"text":"1.3. Boards versus 32 bit MIPS targets","hash":"_boards_versus_32_bit_mips_targets","id":4}]},"77":{"id":77,"text":"The LAN969x product consists of 4 product families: LAN969x-XX family with basic switch support LAN969x-XX-VAO family with automotive features added LAN9691, LAN9692, LAN9693 LAN969x-XX-TSN family with industrial features added LAN969x-XX-RED family with redundancy features added The XX in the above list is selected from this list: 100 Gbps switch capacity: LAN9698 / LAN9693 60 Gbps switch capacity: LAN9696 / LAN9692 40 Gbps switch capacity: LAN9694 / LAN9691 The table below show the relevant areas of physical memory for the LAN969x. Please note that off-chip resources such as flash and DDR, depends on board design, so you must also check the schematics. Name On-Chip Start Max size Size eval board ======= ======= ========== ==================== =================== BOOTROM Yes 0x00000000 0x00014000 (80KB) 0x00014000 (80KB) SRAM Yes 0x00100000 0x00200000 (2MB) 0x00200000 (2MB) QSPI0-NOR No 0x20000000 0x10000000 (256MB) 0x2000000 (2MB) DDR No 0x60000000 0x80000000 (2048MB) 0x80000000 (2048MB) This chapter describes the different LAN969x Reference Boards. The EVB-LAN9696-24port is a 24 port evaluation board with 4 x 10GE SFP+ uplinks. The board features: LAN9698 switch device 24 x 1000BASE-T ports using 6 x LAN8814 PHYs via Q-USGMII (PCH/MCH) 4 x 10G SFP+ ports directly connected to LAN9698 1 x 1000BASE-T Network management port using LAN8841 RGMII PHY Internal CPU running Linux/IStaX/SwitchDev/MESA Local management via USB2 serial port PTP input/outputs Time input/output (G.8275/RS422) USB type A Host port (for memory key - software updates) Option for external CPU via PCIe cable or SPI Option for MCHP IEEE 802.3bt/UPoE add-on modules (EV14Y36A using PD69208T4, PD69210, IEEE 802.3af/at/bt Type 4 standard compliant) The name used in the device trees for the Linux Kernel is the board order no, as this has been created at a very early stage of the project. To allow you to move between the different names that are in use, you can use the table found below: Board Order No Board Name EV23x71a EVB-LAN9696-24port","title":"LAN969x","component":"bsp","version":"2023.12","name":"lan969x","url":"/bsp/2023.12/supported-hw/lan969x.html","titles":[{"text":"1. LAN969x Family overview","hash":"_lan969x_family_overview","id":1},{"text":"2. Memory map","hash":"_memory_map","id":2},{"text":"3. EVB Overview:","hash":"refboards","id":3},{"text":"3.1. EVB-LAN9696-24port","hash":"_evb_lan9696_24port","id":4},{"text":"4. Board Name Overview","hash":"_board_name_overview","id":5}]},"78":{"id":78,"text":"The following table describes the Microchip supported PHYs in linux kernel: Name ID Kernel Config Interface Kernel Upstream Version U-boot support Atom12 VSC8522 MICROSEMI_PHY QSGMII Yes No Cobra VSC8211 VITESSE_PHY SGMII/GMII/MII/RGMII Yes No Cobra VSC8221 VITESSE_PHY SGMII Yes No Elise VSC8514 MICROSEMI_PHY QSGMII Yes No Enzo VSC8662 VITESSE_PHY SGMII Yes No Indy LAN8814 MICREL_PHY QSGMII/QUSGMII Yes Yes Pheiffer LAN8841 MICREL_PHY RGMII/GMII Yes No Lan966x Internal PHY LAN8804 MICREL_PHY GMII Yes Yes Mini VSC8531 MICROSEMI_PHY RGMII/RMII Yes Yes Mini VSC8530 MICROSEMI_PHY RGMII/RMII Yes Yes Mini VSC8541 MICROSEMI_PHY GMII/MII/RGMII/MII Yes Yes Mini VSC8540 MICROSEMI_PHY GMII/MII/RGMII/MII Yes Yes Nano VSC8502 MICROSEMI_PHY GMII/MII/RGMII Yes No Quattro VSC8244 VITESSE_PHY RGMII Yes No Tesla VSC8504 MICROSEMI_PHY QSGMII/SGMII Yes No Tesla VSC8552 MICROSEMI_PHY QSGMII/SGMII/RGMII Yes No Tesla VSC8572 MICROSEMI_PHY QSGMII/SGMII Yes No Tesla VSC8574 MICROSEMI_PHY QSGMII/SGMII Yes Yes Viper VSC8575 MICROSEMI_PHY QSGMII/SGMII Yes No Viper VSC8562 MICROSEMI_PHY QSGMII/SGMII Yes No Viper VSC8564 MICROSEMI_PHY QSGMII/SGMII Yes No Viper VSC8582 MICROSEMI_PHY QSGMII/SGMII Yes No Viper VSC8584 MICROSEMI_PHY QSGMII/SGMII Yes Yes","title":"","component":"bsp","version":"2023.12","name":"phy","url":"/bsp/2023.12/supported-hw/phy.html","titles":[{"text":"1. PHY","hash":"_phy","id":1}]},"79":{"id":79,"text":"In case of a blank eMMC or NOR device, the following instructions can be applied for the initial bringup of the LAN969x SoC. This is where you can find more details about enabling EVB image restoration: SoC Name Strapping Pins Monitor Mode LAN969x LAN969x Strapping Pins LAN969x UART Monitor This section will give an overview on how the TF-A monitor can be loaded to the SoC and used for e.g. writing a FIP or a GPT image on a flash device. The following description is based on a host PC running Ubuntu Linux: Set the strapping mode on the eval board to the \"Monitor Mode\" to enabling the UART monitor mode. See previous section for the details. Connect the eval board via USB cable to the host PC. The host machine should now enumerate a new TTY device like e.g. '/dev/ttyACM0'. From now on, no other application should be attached to this port (e.g. Putty or Termhub). Use a Chrome or MS Edge browser and open the fwu.html file in the address bar. This file can be found inside the artifacts archive. Please follow the instructions and the red arrows, illustrated on the previous screenshot. Arrow #1, Press the [Connect Device] button Arrow #2, Choose the appropriate console interface in the dropdown menu Arrow #3, Press [Connect] button After successful connection, the 'BL1 bootstrap' page should be loaded. This downloads and runs the BL2U image embedded in the fwu.html page. This image will allow other firmware images to be updated and various other maintenance operations. Arrow #1, Press the [Download BL2U] button After download and execution, the 'BL2U bootstrap' screen should be appear. Notice the \"BL2U operational\" information. The main purpose of this description is to a write a FIP file to a blank NOR device. Be aware, that only a FIP file format can be written to the NOR flash. Using a GPT file will not work here. When writing a FIP to the NOR, following methods can be used: Attach a SPI flasher to the board and write the FIP to the memory address offset of 0x0 (zero). Use the HTML5 based firmware update browser tool (fwu.html). This section will describe, how to proceed with the second approach here. Therefore no further programmer hardware is required. The following description assumes that the TF-A monitor mode has been started. Please follow the instructions and the red arrows, shown on the previous screenshot. Arrow #1, Choose the proper .fip file [Choose File]. Arrow #2, Upload the file by pressing the [Upload file] button. Arrow #3, When the upload has finished, press the 'Write Image' tab Arrow #1, Change dropdown value to [NOR Flash] device. Arrow #2, Press the [Write Flash Image] button. Arrow #3, Press the [OK] button to confirm the operation. Wait until the write operation is completed. The process can take a few minutes. The progress can followed in the [Transaction Log:] field. Change the strapping mode back to normal the NOR boot mode. See Reference Information Reset the board The main purpose of this description is to a write a GPT image to a blank eMMC device. Writing this image will trigger following actions to the device: Creates a GPT based partition table and all required partitions. Stores a FIP file inside the 'fip' named partition. According the chosen GPT image, the BL33 can contain an 'UBoot' or a 'Linux' image as payload. A simple file copy of the GPT image to the eMMC device will not work! Only a raw byte copy will work correctly. The GPT image can be written to the eMMC device using following methods: Using UBoot with network and upload/write the GPT image with mmc commands Using external programmer and write the GPT image to the eMMC address offset of 0x0 (zero). Use the HTML5 based firmware update browser tool (fwu.html). This section will describe, how to proceed with the third approach here. Therefore no further programmer hardware is required. First boot into the TF-A monitor using the correct strapping pin setting. See Reference Information Then follow the instructions and the red arrows, illustrated on the previous screenshot. Arrow #1, Choose now the proper .gpt file [Choose File] Arrow #2, Upload the file by pressing the [Upload file] button Arrow #3, When the upload has finished, press the 'Write Image' tab Arrow #1, Change dropdown value to [eMMC] device. Arrow #2, Press the [Write Flash Image] button. Arrow #3, Press the [OK] button to confirm the operation. Wait till the write procedure has completed. This process can take a few minutes. The progress can followed in the [Transaction Log:] field. Change the strapping mode back normal eMMC boot mode. See Reference Information Reset the board A FIP file can only be programmed, if the eMMC device is already partitioned. If not please follow the description in the previous section. This description is also valid for updating an existing FIP on the target. The FIP file can be written by using one of this following methods. Using UBoot console with network and upload/write the FIP using mmc commands Use the HTML5 based firmware update browser tool (fwu.html). We will focus here on the second approach. First Boot into the TF-A monitor using the correct strapping pin setting. See Reference Information Then follow the description for the BL2U bootstrap monitor page. Please follow the instructions and the red arrows, shown in the previous screenshot. Arrow #1, Choose the proper .fip file [Choose File]. Arrow #2, Upload the file by pressing the [Upload file] button. Arrow #3, When the upload has finished, press the 'Write Image' tab Arrow #1, Change dropdown value to [eMMC] device. Arrow #2, Press the [Write FIP Image] button to start the operation. Wait until the write operation has completed. The process can take a few minutes. The progress can followed in the [Transaction Log:] field. Change the strapping mode back to normal the eMMC boot mode. See Reference Information Reset the board","title":"","component":"bsp","version":"2023.12","name":"restore-secureboot","url":"/bsp/2023.12/supported-hw/restore-secureboot.html","titles":[{"text":"1. Restoring SecureBoot Images","hash":"_restoring_secureboot_images","id":1},{"text":"1.1. Reference information","hash":"ref_info","id":2},{"text":"1.2. How to restore an image","hash":"_how_to_restore_an_image","id":3},{"text":"1.2.1. Enable TF-A-Monitor on the default console","hash":"tfa_monitor","id":4},{"text":"1.2.2. Download BL2U","hash":"download_bl2u","id":5},{"text":"1.2.3. Program NOR with FIP","hash":"program_nor","id":6},{"text":"1.2.4. Program eMMC with GPT image","hash":"emmc_gpt","id":7},{"text":"1.2.5. Program eMMC with FIP","hash":"_program_emmc_with_fip","id":8}]},"80":{"id":80,"text":"The Sparx5 family consists of the following SKUs: VSC7546 - SparX-5-64 supports up to 64 Gbps of switch core bandwidth VSC7549 - SparX-5-90 supports up to 90 Gbps of switch core bandwidth VSC7552 - SparX-5-128 supports up to 128 Gbps of switch core bandwidth VSC7556 - SparX-5-160 supports up to 160 Gbps of switch core bandwidth VSC7558 - SparX-5-200 supports up to 200 Gbps of switch core bandwidth This section describes the Sparx5 boot sequence including the relevant HW and SW facilities. The behavior of the Sparx5 CPU system after reset is determined by four strapping pins that are overlaid on GPIO pins. The value of these GPIOs is sampled shortly after releasing reset to the device. This allows the Sparx5 system to decide the boot mode: Main CPU booting from SPI Interface (CPU is SPI controller) Sub CPU booting from SPI Interface (Sub CPU is SPI controller) SPI device mode, Main CPU and Sub CPU are stopped SPI device mode, MIIM device mode, Main CPU and Sub CPU are stopped In the first listed mode Sparx5 can boot from an external boot media such as SPI NOR flash and load a boot loader image such as UBoot. UBoot can then load drivers for other external media such as SPI NAND or eMMC and continue the boot process after having loaded final images from these media. It is also possible to load all images from SPI NOR flash, but this is not as fast as using SPI NAND or eMMC. During boot Sparx5s PCIe controller will also be enabled in device mode. This document will focus on the Sparx5 SoCs, but to fully explain the boot process and boot facilities, it is also necessary to consider the flash memories available on the board. The section will briefly describe the boot media supported by the Sparx5, and then describe which of these media is available on the Sparx5 evaluation boards offered by Microchip. There are currently two Sparx5 evaluation boards available: PCB134 - Providing 20 SPF+ ports with 10Gbps speed. PCB135 - Providing 64 1Gbps Ethernet PHY ports and 4 25Gbps SFP+ ports The two boards can be mounted with either SPI NAND or eMMC enabled (but not both). To utilize the Main CPU of the Sparx5, the correct boot mode must be selected and a SPI NOR device with a boot image must be available at the SPI NOR memory address found in the memory map below: Name Start Size ====================== ========== ================= Mirror SPI NOR Flash 0x000000000 0x100000000 (4GB) Mirror SPI NAND Flash 0x100000000 0x100000000 (4GB) SPI NOR Flash 0x400000000 0x100000000 (4GB) SPI NAND Flash 0x500000000 0x100000000 (4GB) Vcore Chip Regs 0x610000000 0x10000000 (256MB) CSR Chip Regs 0x620000000 0x10000000 (256MB) PCIe outbound 0x630000000 0x10000000 (256MB) Sub CPU system 0x640000000 0x10000000 (256MB) DDR Memory 0x800000000 0x200000000 (8GB) Figure 1: Sparx5 Boot Mode memory map. The bootloader will switch the Sparx5 from Boot mode to Normal mode which will remap the DDR memory down to address 0. During the boot process, the boot loader will read configuration from its environment partition in the SPI NOR device. Based on the configuration it will decide where to find and load the next stage image. The following table shows the offset and name of where the different components are expected to be found when using the SPI NOR device. MEDIA Partition No Name Size Offset ======= ============ =========== ================== ========== SPI NOR 0 UBoot 0x00100000 (1MB) 0x00000000 SPI NOR 1 Env 0x00040000 (256KB) 0x00100000 SPI NOR 2 Env.bk 0x00040000 (256KB) 0x00140000 SPI NOR 3 linux 0x01400000 (20MB) 0x00180000 SPI NOR 4 linux.bk 0x01400000 (20MB) 0x01580000 SPI NOR 5 rootfs_data 0x02000000 (32MB) 0x01580000 Figure 2: Partitions in the SPI NOR only boot mode. The above partition table is used in a system that has only a SPI NOR media, so all images will be stored in this partition table. For a system using a SPI NAND device only the first 3 partitions are needed. The content of the linux and linux.bk partition is the raw binary FIT image that is used by UBoot when booting from NOR only. This mode is explained later in this document. A SPI NAND device uses a block design which does not allow it to be used as an execute-in-place device. Instead the bootloader will read the content of the device in blocks and execute the image from DDR memory once the whole image has been loaded. Here is the partition table for the Sparx5 SPI NAND device. MEDIA Partition No Name Size Offset ======= ============ =========== ================== ========== SPI NAND 0 Boot0 0x04000000 (64MB) 0x00000000 SPI NAND 1 Boot1 0x04000000 (64MB) 0x04000000 SPI NAND 2 rootfs_data 0x08000000 (128MB) 0x08000000 Figure 3: SPI NAND Partitions The Boot0 and Boot1 partitions contain a UBI filesystem with a FIT image file in the root of the filesystem. The UBI filesystem also contains the Linux root filesystem that the kernel mounts during boot. The BSP contains a root filesystem that can be used for this purpose. The rootfs_data partition can be used for storage when the Linux Kernel have booted. The partitions of both the SPI NOR and the SPI NAND devices can be shown with the mtd list command in the UBoot shell. => mtd list List of MTD devices: * nor0 - type: NOR flash - block size: 0x1000 bytes - min I/O: 0x1 bytes - 0x000000000000-0x000008000000 : \"nor0\" - 0x000000000000-0x000000100000 : \"UBoot\" - 0x000000100000-0x000000140000 : \"Env\" - 0x000000140000-0x000000180000 : \"Env.bk\" * spi-nand0 - device: spi-nand@e - parent: spi-master@600104000 - driver: spi_nand - type: NAND flash - block size: 0x20000 bytes - min I/O: 0x800 bytes - OOB size: 128 bytes - OOB available: 62 bytes - 0x000000000000-0x000010000000 : \"spi-nand0\" - 0x000000000000-0x000004000000 : \"Boot0\" - 0x000004000000-0x000008000000 : \"Boot1\" - 0x000008000000-0x000010000000 : \"rootfs_data\" => Figure 4: SPI Device Partitions An eMMC device is essentially a faster version of a SPI NAND device. It may use more that one data line and may also provide DMA functionality to increase the transfer rate compared to a SPI NAND type of device. The partitions of the eMMC device can be inspected with the mmc tool: => mmc part Partition Map for MMC device 0 -- Partition Type: EFI Part Start LBA End LBA Name Attributes Type GUID Partition GUID 1 0x00000022 0x00200021 \"Boot0\" attrs: 0x0000000000000000 type: 0fc63daf-8483-4772-8e79-3d69d8477de4 type: linux guid: 0e036503-0cc3-46c3-9790-1e65b9589954 2 0x00200022 0x00400021 \"Boot1\" attrs: 0x0000000000000000 type: 0fc63daf-8483-4772-8e79-3d69d8477de4 type: linux guid: 758a6c00-643e-4eb5-9561-f226556ade32 3 0x00400022 0x00700021 \"Data\" attrs: 0x0000000000000000 type: 0fc63daf-8483-4772-8e79-3d69d8477de4 type: linux guid: 1be9268f-39a3-4112-929a-04fc915b9b87 Figure 5: eMMC Device Partitions There are 3 partition in a GPT (GUID Partition Table) and all 3 are linux type which means that the type is recognizable by the Linux Kernel’s filesystem drivers and in this case this means that the EXT4 filesystem is used in these partitions. The Boot0 (and Boot1) partitions will need to contain a EXT4 filesystem image containing a root filesystem and a UBoot FIT image. The UBoot FIT image must called Image.itb and must be placed in the root folder of the filesystem. The FIT image must contain a Linux kernel and device trees. The Data partition can be used for storage when the Linux Kernel have booted. The next sections describes the different Sparx5 Reference Boards. All examples assume that there is a working TFTP and DHCP server on the same subnet as the evaluation board. The SPI NOR MX66L1G45G flash can be programmed with a standard SPI flash programmer. Find the appropriate u-boot-fireant_pcb*.bin UBoot image file in the arm64-armv8_a-linux-gnu/bootloaders/release BSP folder. Reset the board and eventually press any key to stop autoboot in order to get a U-Boot prompt. First make sure that the following environment variables are defined as shown: => env print baudrate=115200 bootargs_extra=loglevel=4 bootcmd=run nand_boot bootdelay=3 console=ttyS0,115200n8 fdtcontroladdr=77ffd0310 loadaddr=740000000 mtdids=nor0=spi0.0,spi-nand0=spi0.14 mtdparts=mtdparts=spi0.0:1m(UBoot),256k(Env),256k(Env.bk);spi0.14:64m(Boot0),64m(Boot1),-(rootfs_data) nand_bak=1 nand_boot=run nand_tryboot;env set nand_cur ${nand_bak};run nand_tryboot nand_cur=0 nand_dlup=dhcp ${nand_image};run nand_update nand_image=new.ubifs nand_mtdroot=root=ubi0:rootfs ro rootfstype=ubifs nand_swap=env set nand_cur ${nand_bak}; env save nand_tryboot=run nandload;setenv mtdroot ubi.mtd=Boot${nand_cur},2048 ${nand_mtdroot};run ramboot nand_update=sf probe;mtd erase Boot${nand_cur};ubi part Boot${nand_cur};ubi create rootfs -;ubi write ${fileaddr} rootfs ${filesize} nandload=sf probe;ubi part Boot${nand_cur};ubifsmount ubi0:rootfs;ubifsload - /Image.itb nor_boot=sf probe; env set active linux; run nor_tryboot; env set active linux.bk; run nor_tryboot nor_dlup=dhcp ${nor_image}; run nor_update nor_image=new.itb nor_only=env set mtdparts mtdparts=${nor_parts};env set bootcmd run nor_boot;env save nor_parts=spi0.0:1m(UBoot),256k(Env),256k(Env.bk),20m(linux),20m(linux.bk),32m(rootfs_data) nor_tryboot=mtd read ${active} ${loadaddr}; run ramboot nor_update=sf probe; sf update ${fileaddr} linux ${filesize} pcb=pcb134 ramboot=run setup; bootm #${pcb} rootargs=root=/dev/ram0 rw rootfstype=squashfs setup=setenv bootargs console=${console} ${mtdparts} ${rootargs} ${mtdroot} fis_act=${active} ${bootargs_extra} stderr=serial@600100000 stdin=serial@600100000 stdout=serial@600100000 ubupdate=sf probe; sf update ${fileaddr} 0 ${filesize} ver=U-Boot 2019.10 (Mar 09 2022 - 12:41:04 +0100)fireant Environment size: 1705/8187 bytes Figure 6: SPI NAND UBoot default environment Some of these environment variables are command macros that can be used to simplify the boot process. If there is a difference you should reset the environment, save it and restart the board to use the default environment. This can be done with these 3 commands: => env default -a -f ... => saveenv ... => reset ... Hit any key to stop autoboot: 0 => During development, it is often advantageous to load and execute the image via DHCP instead of loading it from flash. The ramboot setting above supports that, if you have a FIT image on the TFTP server. Here are the commands to run to load a fit-sparx5.itb file from the root of the TFTP server: => dhcp fit-sparx5.itb NPI Port: Up ... => run ramboot ## Loading kernel from FIT Image at 740000000 ... Using 'pcb134' configuration ... When this works satisfactorily you can commit this to the SPI NAND memory and update UBoot to use this media for booting. As UBoot expects a UBIFS image in the SPI NAND partition Boot0 (or Boot1) you need to produce a UBIFS image file and place it in your TFTP server. If you have the Linux kernel, the device tree binary files and the rootfile system file then you can create a UBIFS image file for a PCB134 evaluation board by running the imggen.rb script like this: $ external/support/scripts/imggen.rb -s sparx5 -o /tftpboot/ -k mscc-linux-kernel.bin.gz -d sparx5_pcb134_switchdev.dtb,pcb134 -r rootfs.squashfs -t ubifs-itb-bare -n new Note that the device tree configuration is renamed by adding a ,pcb134 element to the device tree binary file references. Also note that the resulting file is generated in the /tftproot folder (used by the TFTP server in this case) and has the name new so that the folder will contain the file new.ubifs which is what the UBoot environment macros expect by default. Now you can load the image and write it to SPI NAND with this command: => run nand_dlup ... Filename 'new.ubifs'. ... Bytes transferred = 30601216 (1d2f000 hex) ... ubi0: attached mtd5 (name \"Boot0\", size 64 MiB) ... Creating dynamic volume rootfs of size 59170816 30601216 bytes written to volume rootfs => With the image in Boot0 time has now come to boot this image. This involve loading the Image.itb file from the UBIFS image and booting this as a FIT image containing a Linux kernel and a device tree. Note that the UBoot environment expects a device tree configuration with the name found in the pcb environment variable. This was the reason for adding the ,pcb134 to the imggen.rb scripts device tree reference. As mentioned above the UBoot FIT image does not contain a root filesystem, so the root filesystem is mounted as the content of the Boot0 partition. Now boot the image with this command: => run nand_boot SF: Detected mx66l1g45g with page size 256 Bytes, erase size 4 KiB, total 128 MiB ... ubi0: attached mtd5 (name \"Boot0\", size 64 MiB) ... Loading file '/Image.itb' to addr 0x740000000... ... Starting kernel ... ... vcoreiii login: The kernel boots and show the Linux command shell. Now you are ready to use your system. If this works as expected you can change the UBoot bootcmd setting to use the run nand_boot command permanently. The SPI NOR MX66L1G45G flash can be programmed with a standard SPI flash programmer. Find the appropriate u-boot-fireant_pcb*.bin UBoot image file in the arm64-armv8_a-linux-gnu/bootloaders/release BSP folder. Reset the board and press any key to stop autoboot in order to get a U-Boot prompt. First make sure that the following environment variables are defined as shown: => env print baudrate=115200 bootargs_extra=loglevel=4 bootcmd=run mmc_boot bootdelay=3 console=ttyS0,115200n8 fdtcontroladdr=77ffce2d0 loadaddr=740000000 mmc_bak=2 mmc_boot=run mmc_tryboot;env set mmc_cur ${mmc_bak};run mmc_tryboot mmc_cur=1 mmc_dev=mmc 0 mmc_dlup=dhcp ${mmc_image};unzip ${fileaddr} ${mmcaddr};run mmc_update mmc_format=gpt guid ${mmc_dev} mmc_guid;gpt write ${mmc_dev} ${mmc_part}; env save mmc_image=new.ext4.gz mmc_part=uuid_disk=${mmc_guid};name=Boot0,size=1024MiB,type=linux;name=Boot1,size=1024MiB,type=linux;name=Data,size=1536MiB,type=linux mmc_swap=env set mmc_cur ${mmc_bak}; env save mmc_tryboot=run mmcload;setenv mtdroot root_next=/dev/mmcblk0p${mmc_cur}; run ramboot mmc_update=run mmcgetoffset;mmc write ${mmcaddr} ${mmc_start} ${filesize_512} mmcaddr=760000000 mmcgetoffset=part start ${mmc_dev} ${mmc_cur} mmc_start mmcload=ext4load ${mmc_dev}:${mmc_cur} ${loadaddr} Image.itb mtdids=nor0=spi0.0 mtdparts=mtdparts=spi0.0:1m(UBoot),256k(Env),256k(Env.bk),20m(linux),20m(linux.bk) nor_boot=sf probe; env set active linux; run nor_tryboot; env set active linux.bk; run nor_tryboot nor_dlup=dhcp ${nor_image}; run nor_update nor_image=new.itb nor_only=env set mtdparts mtdparts=${nor_parts};env set bootcmd run nor_boot;env save nor_parts=spi0.0:1m(UBoot),256k(Env),256k(Env.bk),20m(linux),20m(linux.bk),32m(rootfs_data) nor_tryboot=mtd read ${active} ${loadaddr}; run ramboot nor_update=sf probe; sf update ${fileaddr} linux ${filesize} pcb=pcb134_emmc ramboot=run setup; bootm #${pcb} rootargs=root=/dev/ram0 rw rootfstype=squashfs setup=setenv bootargs console=${console} ${mtdparts} ${rootargs} ${mtdroot} fis_act=${active} ${bootargs_extra} stderr=serial@600100000 stdin=serial@600100000 stdout=serial@600100000 ubupdate=sf probe; sf update ${fileaddr} 0 ${filesize} ver=U-Boot 2019.10 (Mar 09 2022 - 12:41:16 +0100)fireant Environment size: 1849/8187 bytes Figure 7: eMMC UBoot default environment As in the SPI NAND case some of these environment variables are command macros that can be used to simplify the eMMC boot process. If you do not see the above environment you have either used the UBoot image when flashing, or you need to reset the environment. Resetting the UBoot environment is done with the following commands: => env default -a -f ... => saveenv ... => reset ... Hit any key to stop autoboot: 0 => Like described in the SPI NAND boot section of this document it is recommended to do a network boot of your images before writing the image to the eMMC device. Start by formatting the eMMC device with a GPT partition. You only need to do this once before writing images to the eMMC. Use the mmc_format command: m => run mmc_format Writing GPT: success! This creates a mmc_guid setting in the UBoot environment for the eMMC device, that is used in the GUID Partition Table. As UBoot expects an EXT4 image in the eMCC partition Boot0 (or Boot1) you need to produce a EXT4 image file and place it in your TFTP server. If you have the Linux kernel, the device tree binary files and the rootfile system file then you can create a EXT4 image file for a PCB134 evaluation board by running the imggen.rb script like this: $ external/support/scripts/imggen.rb -s sparx5 -o /tftpboot/ -k mscc-linux-kernel.bin.gz -d sparx5_pcb134_emmc_switchdev.dtb,pcb134_emmc -r rootfs.squashfs -t ext4-itb-bare -n new -z Note that the device tree configuration is renamed by adding a ,pcb134_emmc element to the device tree binary file references. Also note that the resulting file is generated in the /tftproot folder (used by the TFTP server in this case) and has the name new so that the folder will contain the file new.ext4.gz which is what the UBoot environment macros expect by default. Now you can load the image and write it to eMMC with this command: => run mmc_dlup ... Filename 'new.ext4.gz'. Load address: 0x740000000 ... MMC write: dev # 0, block # 34, count 213808 ... 213808 blocks written: OK => Before you can boot the eMMC disk image, you need to make two small changes in the UBoot environment. First delete the rootargs setting => setenv rootargs Next change the mmc_tryboot environment variable to use the root argument instead of the next_root argument and to wait 1s for the eMMC filesystem to be mounted. This is done fairly easy by using the editenv command like this: => editenv mmc_tryboot When the setting looks like this: run mmcload;setenv mtdroot root=/dev/mmcblk0p${mmc_cur} rootdelay=1; run ramboot you can save the changes that you have made permanently with the command: => saveenv Saving Environment to SPI Flash... Erasing SPI flash...Writing to SPI flash...done Valid environment: 2 OK => You can now boot the system with the run mmc_boot command. If this works as expected you can change the bootcmd setting to use the run mmc_boot command permanently. No matter if you have a SPI NAND or a eMMC equipped evaluation board you can also select to store the boot image in SPI NOR flash only and use this image as the boot media. This will not be as fast as booting SPI NAND or eMMC, but can be used as a fallback solution in case the first two options are not available for some other reason. As the first step you should reset the environment, save it and restart the board to use the initialized environment. This can be done with these 3 commands: => env default -a -f ... => saveenv ... => reset ... Hit any key to stop autoboot: 0 => Now switch the to the SPI NOR only partition configuration with this command: => run nor_only ... => The SPI NOR flash is partitioned like this: => mtd list List of MTD devices: * nor0 - type: NOR flash - block size: 0x1000 bytes - min I/O: 0x1 bytes - 0x000000000000-0x000008000000 : \"nor0\" - 0x000000000000-0x000000100000 : \"UBoot\" - 0x000000100000-0x000000140000 : \"Env\" - 0x000000140000-0x000000180000 : \"Env.bk\" - 0x000000180000-0x000001580000 : \"linux\" - 0x000001580000-0x000002980000 : \"linux.bk\" - 0x000002980000-0x000004980000 : \"rootfs_data\" => boot As you can see there are two 20MB Linux partitions (a main and a backup) that can be used to store a UBoot FIT image. The UBoot environment settings that begin with nor_ allows you to store and load images in these partitions. When using the SPI NOR boot method the FIT image that you provide must have both the Linux Kernel, device trees and the root file system. To generate that you can use the imggen.rb tool like this: $ external/support/scripts/imggen.rb -s sparx5 -o /tftpboot/ -k mscc-linux-kernel.bin.gz -d sparx5_pcb134_emmc_switchdev.dtb,pcb134_emmc -r ws/mscc-brsdk-source-2021.02.7-999/output/build_arm64_standalone/images/rootfs.squashfs -t itb-rootfs -n new Note that the device tree configuration is renamed by adding a ,pcb134_emmc element to the device tree binary file references. Here you need to choose the one that fits with your evaluation board and more specifically the pcb setting in the UBoot environment. Also note that the resulting file is generated in the /tftproot folder (used by the TFTP server in this case) and has the name new so that the folder will contain the file new.itb which is what the UBoot environment nor_ macros expect by default. Now you can load the image and write it to SPI NOR with this command: => run nor_dlup ... Filename 'new.itb'. Load address: 0x740000000 ... SF: Detected mx66l1g45g with page size 256 Bytes, erase size 4 KiB, total 128 MiB device 0 offset 0x180000, size 0x11fc663 18859619 bytes written, 0 bytes skipped in 222.855s, speed 86910 B/s => You can now boot the system with the run nor_boot command. If this works as expected you can change the bootcmd setting to use the run nor_boot command permanently.","title":"","component":"bsp","version":"2023.12","name":"sparx5","url":"/bsp/2023.12/supported-hw/sparx5.html","titles":[{"text":"1. Sparx5","hash":"_sparx5","id":1},{"text":"1.1. Booting Sparx5","hash":"_booting_sparx5","id":2},{"text":"1.1.1. Overview","hash":"_overview","id":3},{"text":"1.1.2. HW Facilities","hash":"_hw_facilities","id":4},{"text":"1.1.3. Sparx5 boot media","hash":"bootmedia","id":5},{"text":"1.2. SPI NOR","hash":"_spi_nor","id":6},{"text":"1.3. SPI NAND","hash":"_spi_nand","id":7},{"text":"1.4. eMMC","hash":"_emmc","id":8},{"text":"1.5. Sparx5 Reference Boards","hash":"refboards","id":9},{"text":"1.6. Bootstrapping a SPI NAND Evaluation Board","hash":"_bootstrapping_a_spi_nand_evaluation_board","id":10},{"text":"1.6.1. UBoot environment for SPI NAND boot","hash":"_uboot_environment_for_spi_nand_boot","id":11},{"text":"1.6.2. Boot via Network","hash":"_boot_via_network","id":12},{"text":"1.6.3. Setting up SPI NAND boot","hash":"_setting_up_spi_nand_boot","id":13},{"text":"1.7. Bootstrapping a eMMC Evaluation Board","hash":"_bootstrapping_a_emmc_evaluation_board","id":14},{"text":"1.7.1. UBoot environment for eMMC boot","hash":"_uboot_environment_for_emmc_boot","id":15},{"text":"1.7.2. Boot via Network","hash":"_boot_via_network_2","id":16},{"text":"1.7.3. Setting up eMMC boot","hash":"_setting_up_emmc_boot","id":17},{"text":"1.8. Setting up SPI NOR only boot","hash":"_setting_up_spi_nor_only_boot","id":18},{"text":"1.8.1. UBoot environment for SPI NOR only boot","hash":"_uboot_environment_for_spi_nor_only_boot","id":19},{"text":"1.8.2. Setting up SPI NOR only boot","hash":"_setting_up_spi_nor_only_boot_2","id":20}]},"81":{"id":81,"text":"Before a frame is transmitted on a port it is subject to one ES0 lookup. ES0 is intended for VLAN tag manipulations and is controlled by the tc flower filter command. ES0 supports only one keyset on each switch: Switch Keyset Sparx5 ISDX LAN966x VID A keyset is an internal value used by the hardware. A flower key is what the user specifies in the tc flower filter command. The ISDX keyset is used for all lookups and matches on the following flower keys: Flower key Value Example Description vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 The classified VID to match. vlan_ethtype vlan_ethtype all Only 'all' is allowed here as ES0 cannot match on a specific protocol. The VID keyset is used for all lookups and matches on the following flower keys: Flower key Value Example Description vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 The classified VID to match. vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 The classified PCP to match. vlan_ethtype vlan_ethtype all Only 'all' is allowed here as ES0 cannot match on a specific protocol. This filter matches on the classified VID and PCP and pops the VLAN tag: # tc qdisc add dev eth0 clsact # tc filter add dev eth0 egress chain 30000 prio 10 handle 42 protocol 802.1q flower skip_sw \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype all \\ action vlan pop \\ action goto chain 30001 Sparx5: Does not support vlan_prio, the vlan actions (will be added in a future release). This filter matches on the classified VID and PCP and modifies the VLAN tag: # tc qdisc add dev eth0 clsact # tc filter add dev eth0 egress chain 30000 prio 10 handle 42 protocol 802.1q flower skip_sw \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype all \\ action vlan modify id 200 priority 2 \\ action goto chain 30001 This filter matches on the classified VID and PCP and adds an outermost VLAN service tag: # tc qdisc add dev eth0 clsact # tc filter add dev eth0 egress chain 30000 prio 10 handle 42 protocol 802.1q flower skip_sw \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype all \\ action vlan push protocol 802.1ad id 200 priority 2 \\ action goto chain 30001 The ES0 lookup supports the actions shown in this table: Flower action Example Description Sparx5 LAN966x pass action pass This is a no-op action. ✔ ✔ vlan pop action vlan pop Pops the outermost VLAN tag. · ✔ vlan modify [protocol ] id priority action vlan modify id 100 priority 3 Modifies the frame to a specific VID, PCP, and optionally VLAN protocol of 802.1Q or 802.1ad. Default is 802.1Q. · ✔ vlan push [protocol ] id priority action vlan push protocol 802.1ad id 100 priority 3 Add an outermost VLAN tag with specific VID, PCP, and optionally VLAN protocol of 802.1Q or 802.1ad. Default is 802.1Q. · ✔ goto chain action goto chain 30001 Which chain to go to after this match. A required no-op action where the chain number must be higher than the ES0 chain number (30000). ✔ ✔ Use the tc filter show command to see the filter configuration for a specific port. Add -s to also see the statistics: # tc -s filter show dev eth3 egress filter protocol 802.1Q pref 100 flower chain 30000 filter protocol 802.1Q pref 100 flower chain 30000 handle 0xc8 vlan_id 3857 vlan_prio 1 vlan_ethtype all eth_type 0003 skip_sw in_hw in_hw_count 1 action order 1: vlan push id 3874 protocol 802.1ad priority 2 pipe index 1 ref 1 bind 1 installed 0 sec used 0 sec Action statistics: Sent 0 bytes 1 pkt (dropped 0, overlimits 0 requeues 0) Sent software 0 bytes 0 pkt Sent hardware 0 bytes 1 pkt backlog 0b 0p requeues 0 used_hw_stats immediate action order 2: gact action goto chain 30001 random type none pass val 0 index 1 ref 1 bind 1 installed 0 sec used 0 sec Action statistics: Sent 0 bytes 1 pkt (dropped 0, overlimits 0 requeues 0) Sent software 0 bytes 0 pkt Sent hardware 0 bytes 1 pkt backlog 0b 0p requeues 0 used_hw_stats immediate First comes information about the filter, then the match and finally the actions including statistics. The number of frames that has his the filter is shown as Sent hardware 0 bytes 1 pkt. Note that the hardware does not support counting the number of bytes and that the counter in ES0 is only 1 bit wide. This means that the pkt counter shown here will only increment by one each time the tc -s filter show command is executed. In the current kernel the same statistics are shown for all actions in a filter. This might change in the future.","title":"","component":"bsp","version":"2023.12","name":"tc-es0","url":"/bsp/2023.12/tc/tc-es0.html","titles":[{"text":"1. Rewriter VLAN Tagging (ES0)","hash":"tag_es0","id":1},{"text":"2. ISDX","hash":"_isdx","id":2},{"text":"3. VID","hash":"_vid","id":3},{"text":"4. Filter examples","hash":"_filter_examples","id":4},{"text":"4.1. ES0 Actions","hash":"es0-actions","id":5},{"text":"5. ES0 Status","hash":"_es0_status","id":6}]},"82":{"id":82,"text":"The ES2 VCAP is part of EACL and enables egress access control lists using VCAP functionality. The LAN966x does not have an ES2 VCAP. When a frame is egressing on a port it is classified into one of the following traffic types by the ES2 VCAP: Traffic Type Sparx5 LAN966x IPv4 ✔ · IPv6 ✔ · Other ✔ · The valid combinations of Sparx5 ES2 lookup keyset versus Traffic Type are: Sparx5 ES2 keyset - Traffic Type Size IPv4 IPv6 Other ARP 6 · · ✔ IP4_OTHER 6 ✔ ✔ · IP4_TCP_UDP 6 ✔ ✔ · MAC_ETYPE 6 ✔ ✔ ✔ IP_7TUPLE 12 ✔ ✔ · In this release the Sparx5s port keyset configuration varies for the 2 ES2 lookups: Sparx5 IS2 Lookup - Traffic Type IPv4 IPv6 Other Lookup 0 MAC_ETYPE MAC_ETYPE MAC_ETYPE Lookup 1 IP4_TCP_UDP IP4_OTHER IP_7TUPLE ARP This will most likely be changed so that both lookups use the same configuration in a future release, as it is possible to change the configuration by using a template. This keyset is generated when Ethertype is 0x0806 (ARP) or 0x8035 (RARP). Flower key Value Example vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 vlan_ethtype vlan_ethtype arp or vlan_ethtype rarp src_mac or / src_mac 00:33:33:33:33:33 or src_mac 00:33:33:00:00:00/ff:ff:ff:00:00:00 arp_tip or / arp_tip 10.10.10.10 or arp_tip 10.10.0.0/255.255.0.0 arp_sip or / arp_sip 10.10.10.10 or arp_sip 10.10.0.0/255.255.0.0 arp_op request or reply arp_op request or arp_op reply The filter below matches on classified VLAN tag, and all supported IPv4 fields. The filter in inserted into chain 20100000 (lookup 1), as this is were the ARP keyset is configured currently. # tc qdisc add dev eth12 clsact # tc filter add dev eth12 egress chain 20100000 prio 10 handle 42 protocol 802.1q flower skip_sw \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype arp \\ src_mac 00:33:33:33:33:33 \\ arp_tip 10.10.10.10 \\ arp_sip 20.20.20.20/255.255.0.0 \\ arp_op reply \\ action pass This keyset is generated when Ethertype is 0x0800 and IP protocol is neither TCP (6) nor UDP (17). Flower key Value Example vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 vlan_ethtype vlan_ethtype ipv4 ip_tos or / ip_tos 0x12 or ip_tos 0x4/0x3f ip_flags [/] ip_flags { [no]frag | [no]firstfrag } src_ip or / src_ip 10.10.10.10 or src_ip 10.10.0.0/255.255.0.0 dst_ip or / dst_ip 20.20.20.20, dst_ip 20.20.0.0/255.255.0.0 ip_proto ip_proto 1 or ip_proto icmp. This filter matches on classified VLAN tag, and all supported IPv4 fields. The filter in inserted into chain 20100000 (lookup 1), as this is were the IP4_OTHER keyset is configured currently. # tc qdisc add dev eth49 clsact # tc filter add dev eth49 egress chain 20100000 prio 10 handle 42 protocol 802.1q flower skip_sw \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype ipv4 \\ ip_tos 0xf/0x3f \\ ip_flags frag/nofirstfrag \\ src_ip 10.10.10.10 \\ dst_ip 20.20.20.20/255.255.0.0 \\ ip_proto icmp \\ action pass This keyset is generated when Ethertype is 0x0800 and IP protocol is either TCP (6) or UDP (17). Flower key Value Example vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 vlan_ethtype vlan_ethtype ipv4 ip_tos or / ip_tos 0x12 or ip_tos 0x4/0x3f ip_flags [/] ip_flags { [no]frag | [no]firstfrag } src_ip or / src_ip 10.10.10.10 or src_ip 10.10.0.0/255.255.0.0 dst_ip or / dst_ip 20.20.20.20, dst_ip 20.20.0.0/255.255.0.0 ip_proto ip_proto 6, ip_proto tcp, ip_proto 17 or ip_proto udp. tcp_flags or / tcp_flags 0x1a or tcp_flags 0x10/0x3f src_port or / src_port 1000 or src_port 0x200/0xff0 dst_port or / dst_port 2000 or dst_port 0x100/0xff0 NOTE: Sparx5: Use Lookup 1 as this is configured with the IP4_TCP_UDP keyset. This filter matches on classified VLAN tag, and all supported IPv4/TCP fields. The filter in inserted into chain 20100000 (lookup 1), as this is were the IP4_TCP_UDP keyset is configured currently. # tc qdisc add dev eth12 clsact # tc filter add dev eth12 egress chain 20100000 prio 10 handle 42 protocol 802.1q flower skip_sw \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype ipv4 \\ ip_tos 0xf/0x3f \\ ip_flags frag/nofirstfrag \\ src_ip 10.10.10.10 \\ dst_ip 20.20.20.20/255.255.0.0 \\ ip_proto tcp \\ tcp_flags 0x10/0x3f \\ src_port 1000 \\ dst_port 2000 \\ action pass This keyset is generated when frame is not classified to one of the above keys. Flower key Value Example vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 vlan_ethtype vlan_ethtype 0x892f or vlan_ethtype hsr src_mac or / src_mac 00:33:33:33:33:33 or src_mac 00:33:33:00:00:00/ff:ff:ff:00:00:00 dst_mac or / dst_mac 00:44:44:44:44:44 or dst_mac 00:44:44:00:00:00/ff:ff:ff:00:00:00 This filter matches on classified VLAN tag, and all supported ETYPE fields. The filter in inserted into chain 8000000 (first lookup), drops all matching packets and goes to second lookup in IS2 (chain 8100000). # tc qdisc add dev eth0 clsact # tc filter add dev eth0 egress chain 20000000 prio 10 handle 42 protocol 802.1q flower skip_sw \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype 0xdeed \\ src_mac 00:33:33:33:33:33 \\ dst_mac 00:44:44:44:00:00/ff:ff:ff:ff:00:00 \\ action pass This keyset matches both IPv4 and IPv6 traffic. It does not have IPv4 source and destination address keys. Flower key Value Example src_mac or / src_mac 00:33:33:33:33:33 or src_mac 00:33:33:00:00:00/ff:ff:ff:00:00:00 dst_mac or / dst_mac 00:44:44:44:44:44 or dst_mac 00:44:44:00:00:00/ff:ff:ff:00:00:00 vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 vlan_ethtype vlan_ethtype 802.1q or vlan_ethtype ip Note: Supports the same values as in tc filter protocol field. ip_flags [/] ip_flags { [no]frag | [no]firstfrag } ip_tos or / ip_tos 0x12 or ip_tos 0x4/0x3f. Note: Only the 6 LSBs can be matched in IS1 (The DSCP part). src_ip src_ip 2001:0:0:0:e1de:2244:0ff8:0123 dst_ip dst_ip 2001:0:0:0:e1de:2244:0ff8:4567 ip_proto ip_proto 6, ip_proto tcp, ip_proto 17 or ip_proto udp. src_port or / src_port 1000 or src_port 0x200/0xff0 dst_port or / dst_port 2000 or dst_port 0x100/0xff0 This filter matches on classified VLAN tag, and all supported IPv6/TCP fields. The filter in inserted into chain 20100000 (lookup 1) as this is where the IP_7TUPLE keyset is currently configured. # tc qdisc add dev eth48 clsact # tc filter add dev eth48 egress chain 20100000 prio 10 handle 42 protocol 802.1q flower skip_sw \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype ipv6 \\ ip_tos 0xf/0x3f \\ src_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:0123 \\ dst_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:4567/64 \\ ip_proto tcp \\ tcp_flags 0x10/0x3f \\ src_port 1000 \\ dst_port 2000 \\ action pass The ES2 lookups supports the actions shown in this table. Flower action Example Description Sparx5 LAN966x pass action pass This is a no-op action. ✔ · goto chain action goto chain 20100000 Which chain to go to after this match. Not needed for the last lookup. ✔ · NOTE: More actions are to be added in future releases.","title":"","component":"bsp","version":"2023.12","name":"tc-es2","url":"/bsp/2023.12/tc/tc-es2.html","titles":[{"text":"1. Egress ACL","hash":"tag_es2","id":1},{"text":"2. Sparx5 IS2 ACL frame classification","hash":"_sparx5_is2_acl_frame_classification","id":2},{"text":"3. Sparx5 Keysets","hash":"_sparx5_keysets","id":3},{"text":"3.1. ARP","hash":"_arp","id":4},{"text":"3.2. IP4_OTHER","hash":"_ip4_other","id":5},{"text":"3.3. IP4_TCP_UDP","hash":"_ip4_tcp_udp","id":6},{"text":"3.4. MAC_ETYPE","hash":"_mac_etype","id":7},{"text":"3.5. IP_7TUPLE","hash":"_ip_7tuple","id":8},{"text":"3.6. ES2 Actions","hash":"es2-actions","id":9}]},"83":{"id":83,"text":"Whether a VLAN tag by default is added or not is a function of the VLAN configuration explained in the VLAN section on the Bridge Configuration page. By using Basic Tagging it is possible to modify the value of the PCP and DEI in the VLAN tag. By using ES0 Tagging it is possible to pop, modify or push a VLAN tag. When a VLAN tag is added at egress the PCP and DEI values can be assigned in different ways: Use the PCP and DEI values classified at ingress (default setting) Use default port PCP and DEI values Map Priority and DPL to PCP and DEI values via a configurable table To use the PCP and DEI values classified at ingress on eth0 (this is the default setting): # qos e_mode eth0 --classified 1 To assign default port PCP value to 5 and default port DEI value to 1 on eth0: # qos e_def eth0 --pcp 5 --dei 1 To use the default port PCP and DEI values assigned above on eth0: # qos e_mode eth0 --default 1 To configure the [Priority, DPL] to [PCP, DEI] mapping table on eth0: # qos e_tag_map eth0 --pcp 0123456701234567 --dei 0000000011111111 The command above sets the mapping table to its default values. The pcp and dei parameters consist of 16 values where the leftmost value corresponds to index 0 and the rightmost value corresponds to index 15. The index can be calculated as (priority + (DPL * 8)). If priority is 6 and DPL is 1 then index is 14 and PCP will be assigned to 6 and DEI to 1. To use the mapping table defined above on eth0: # qos e_mode eth0 --mapped 1 Besides this tagging the rewriter can update tags based on rules in the ES0 VCAP. See Rewriter VLAN Tagging.","title":"","component":"bsp","version":"2023.12","name":"tc-etag","url":"/bsp/2023.12/tc/tc-etag.html","titles":[{"text":"1. Basic Egress VLAN Tagging","hash":"etagging","id":1},{"text":"1.1. Basic Tagging","hash":"_basic_tagging","id":2}]},"84":{"id":84,"text":"The abbreviation VCAP stands for Versatile Content-Aware Processor. A VCAP is approximately the same as a TCAM (ternary content-addressable memory) with configurable key, action and a counter. A VCAP is used to match frames using a selection of keys and then execute one or more actions on the matched frames. Each VCAP may have one or more lookups that can be used individually. The lookups are typically serviced in order of increasing lookup id. Here is an overview of which VCAPs are supported on the different switches, where each (VCAP, lookup) combination is assigned to a specific chain index: VCAP Name Description Sparx5 Addresses LAN969x Addresses Counter Lookups Chain Ids IS0 Ingress Classification 18432 9216 1 bit 6 L0: 1000000 L1: 1100000 L2: 1200000 L3: 1300000 L4: 1400000 L5: 1500000 IS2 Ingress Access Control 12288 9216 Ext 32 bit 4 L0: 8000000 L1: 8100000 L2: 8200000 L3: 8300000 ES0 Egress Rewriter 4096 1536 1 bit 1 L0: 10000000 ES2 Egress Access Control 12288 1024 Ext 32 bit 2 L0: 20000000 L1: 20100000 The 6 lookups in IS0 are done serially and returns an action for each enabled VCAP lookup. If the lookup matches an entry in the IS0 VCAP, the associated action is returned. For IS2 the first and the third lookups are done in parallel. The same applies to the second and the fourth lookups. Consequently, the actions from the first and the third lookups are processed before the actions from the second and the fourth lookups. Most actions are ordered so that the last action processed takes precedence, but some are sticky meaning they cannot be undone. The datasheet contains a list of these actions in section 4.20.1.7 Processing of VCAP IS2 Actions. For ES2 the two lookups are done in parallel. If both result in an action then the second takes precedence, but there is a FWD_MODE action that has a special resolution table, and there are actions that a sticky meaning they cannot be overwritten by later actions. Section 4.25.1.5 Processing Actions in the datasheet contains the details. All counters in the 4 VCAPs have 1 bit counters, but it is possible to use external 32 bit counters in IS2 and ES2, so this is what is currently being configured. Each rule in all VCAPs is given a unique rule id, which also serves as a counter id for the external counters. The IS0 VCAP is sometimes referred to as CLM in the datasheet. The LAN969x switch provides the same VCAPs with the same number of lookups, but have fewer address blocks for the VCAP instances. VCAP Name Description Addresses Counter Lookups Chain Ids IS1 Ingress Classification 768 32 bit 3 L0: 1000000 L1: 1100000 L2: 1200000 IS2 Ingress Access Control 256 32 bit 2 L0: 8000000 L1: 8100000 ES0 Egress Rewriter 64 1 bit 1 L0: 10000000 The three lookups in IS1 are done simultaneously and the potentially three IS1 action vectors are applied in three steps. If the actions overlap the last lookup wins. Then the two lookups in IS2 are done simultaneously and the potentially two IS2 action vectors are applied in two steps. Consult the datasheet to see how the two lookups are combined. When the switch has selected on which port(s) to forward the packet, a single lookup in ES0 is done and the potential action vectors are applied before the packet is transmitted on the egress port(s). Here we will show how to use a combination of tc commands to configure VCAPs. The examples in the remainder of this section uses the LAN966x VCAP as examples. You can perform the same operations on Sparx5 but the VCAPs have other names and in some cases the key support is different. Figure 1. Ingress pipeline for LAN966x IS1 and IS2: Figure 2. Egress pipeline for LAN966x ES0: Tc rules operate in general on a single interface only. Microchip switches support Shared Filter Blocks on the ingress side but for now, we will use eth0 as the single interface. Start by creating a clsact qdisc: $ tc qdisc add dev eth0 clsact This is the qdisc where all filters are attached. A filter refers to this qdisc by using the keyword 'ingress' or 'egress'. In order to simulate the VCAP functionality on a SW target you must create the following default rules: Create a default lowest priority matchall rule in chain 0, which is the default chain, with a goto chain 1000000 (IS1 lookup 0) as the only action: $ tc filter add dev eth0 ingress protocol all prio 0xffff handle 0 matchall \\ action goto chain 1000000 Create a default lowest priority flower rule in chain 1000000 (IS1 lookup 0) with a goto chain 1100000 (IS1 lookup 1) as the only action: $ tc filter add dev eth0 ingress protocol all prio 0xffff handle 0 chain 1000000 flower \\ action goto chain 1100000 Create a default lowest priority flower rule in chain 1100000 (IS1 lookup 1) with a goto chain 1200000 (IS1 lookup 2) as the only action: $ tc filter add dev eth0 ingress protocol all prio 0xffff handle 0 chain 1100000 flower \\ action goto chain 1200000 Create a default lowest priority flower rule in chain 1200000 (IS1 lookup 2) with a goto chain 8000000 (IS2 lookup 0) as the only action: $ tc filter add dev eth0 ingress protocol all prio 0xffff handle 0 chain 1200000 flower \\ action goto chain 8000000 Create a default lowest priority flower rule in chain 8000000 (IS2 lookup 0) with a goto chain 8100000 (IS2 lookup 1) as the only action: $ tc filter add dev eth0 ingress protocol all prio 0xffff handle 0 chain 8000000 flower \\ action goto chain 8100000 Create a default lowest priority flower rule in every chain you plan to use from 8000001 to 8000255 (IS2 lookup 0) with a goto chain 8100000 (IS2 lookup 1) as the only action: $ tc filter add dev eth0 ingress protocol all prio 0xffff handle 0 chain 8000001 flower \\ action goto chain 8100000 $ tc filter add dev eth0 ingress protocol all prio 0xffff handle 0 chain 800007 flower \\ action goto chain 8100000 $ tc filter add dev eth0 ingress protocol all prio 0xffff handle 0 chain 800042 flower \\ action goto chain 8100000 It is not necessary to create a default rule in chain 8100000 (IS2 lookup 1) as the VCAP stops processing after this lookup. All user-defined flower rules must end with a goto action in order to stop further processing if there is a match. The switch allows filters to be linked between the IS0/IS1 and the other VCAPs by specifying a 'offset' to the usual chain value. In the source filter the goto action must specify the lookup chain id plus an offset value from 1 to 255 (larger values are available for other chains) and similarly the destination filter must be added on the same chain id. Example of a source filter action specification using an offset of 21: action goto chain 8000021 Example of a destination filter chain specification using the same offset as above: tc filter add dev eth12 ingress chain 8000021 ... In e.g the IS0/IS1 VCAP this is done by adding an action in the source filter that sets the 8 bit wide PAG (Policy Association Group) value in the frame metadata when the filter matches the frame, and then add a key match on the same PAG value in the destination filter in the IS2 VCAP, so the second filter only matches if also the first (source) filter was matched. Here is an overview of the link keys between the VCAPs: Source Destination Key Size Sparx5 LAN966x IS0/IS1 IS2 PAG 8 bit ✔ ✔ IS0 ES0 ISDX 12 bit ✔ · IS0 ES2 ISDX 12 bit ✔ · Here is an example of a source filter that uses chain 1200000 (IS1 lookup 2) and chains to IS2 lookup 0 with PAG 1: $ tc filter add dev eth0 ingress protocol ip prio 10 handle 0 chain 1200000 flower \\ dst_mac 00:11:22:33:44:55 \\ dst_ip 10.10.0.42 \\ action skbedit priority 6\\ action goto chain 8000001 This example assigns priority 6 to all ipv4 packets that match dst_mac and dst_ip and then go to chain 8000001 which corresponds to PAG 1. When running on the target, the PAG is derived from the goto chain number and assigned as a VCAP action in IS1 lookup 2, The PAG is assigned as a key in IS2 lookup 0 and depends on the selected chain. Currently, it is not enforced that you set up all the default chains when running on target but it is expected that we will enforce this going forward. The tc filter and flower syntax can be shown with these commands: $ tc filter help $ tc filter add flower help If you want to modify an existing filter you can use the 'change' or 'replace' option: $ tc filter add dev eth0 ingress protocol ip prio 10 handle 0 chain 1200000 flower \\ dst_mac 00:11:22:33:44:55 \\ dst_ip 10.10.0.42 \\ action skbedit priority 6 \\ action goto chain 8000001 $ tc filter change dev eth0 ingress protocol ip prio 10 handle 0 chain 1200000 flower \\ dst_mac 00:11:22:33:44:55 \\ dst_ip 10.10.0.84 \\ action skbedit priority 6 \\ action goto chain 8000001 In this example, dst_ip was changed from 10.10.0.42 to 10.10.0.84. Each VCAP supports different protocols, keys, and actions which will be explained in the following sections. The following options are common for all flower filters: prio (or pref ) sets the sequence of filters. Filters with lower numbers are examined first and thus have higher priority. PRIO is a number from 0 to 0xffff. handle is a reference to the filter. Use this is if you need to reference the filter later. FILTERID is a number from 0 to 0xffffffff. chain is the chain to use for this filter. Chain 0 is the default chain if this option is missing. CHAIN_INDEX is a number from 0 to 0xffffffff. All three IS1 lookups generate by default an S1_7TUPLE key which defines the possible match keys. If another key than S1_7TUPLE is needed, a chain template must be used. See page Classification (IS1), where the different IS1 keys are documented. protocol is the protocol to match. PROTO can be one of: all, 802_2 (LLC), snap, 802.1q (ctag), 802.1ad (stag), 0xf1c1 (rtag), arp, ip, ipv6, or a 16-bit number >= 0x0600 for EtherType. protocol is always the EtherType after mac addresses or vlan tag(s). Set protocol to all if you want to match on all kind of packets. Setting protocol to other than all limits the matches to the specific kind of packets. Most match keys can be specified as a value or a value/mask. A missing match key is the same as a wildcard (mask is all zeros). The following match keys are supported in all protocols: dst_mac - Match on DMAC. Value only: xx:xx:xx:xx:xx:xx or value/mask: xx:xx:xx:xx:xx:xx/yy:yy:yy:yy:yy:yy. src_mac - Match on SMAC. Same as dst_mac. The following match keys are supported when protocol is 802.1q (ctag) or 802.1ad (stag). They match on the outer VLAN tag: vlan_id - Match on outer VLAN ID. Value only: x or value/mask: x/y. vlan_prio - Match on outer VLAN PCP. Value only: x or value/mask: x/y. vlan_ethtype - Match on EtherType after outer VLAN. Some of the IS1 keys support matching a second VLAN tag. The match keys for the second VLAN tag are: cvlan_id - Match on inner VLAN ID. Value only: x or value/mask: x/y. cvlan_prio - Match on inner VLAN PCP. Value only: x or value/mask: x/y. cvlan_ethtype - Match on EtherType after inner VLAN. See page Classification (IS1) for documentation regarding supported match keys in the different IS1 keys. The supported actions in IS1 are: pass - a do-nothing action used to stop lookup in the VCAP. vlan modify id [priority ] - set the classified VID and PCP. Classified PCP is set to 0 if priority is not present. skbedit priority - set the classified priority to PRIO goto chain Every flower filter requires a goto as the last action and this is enforced by the driver. On a SW target, these goto’s are needed in order to simulate the behaviour of the VCAP, where the search stops after the first match. On the HW target, these goto’s are actually only needed in IS1 Lookup 2, where the PAG (Policy Association Group) value is assigned based on the goto action. To keep the same configuration on both kinds of platforms the goto is required in all flower filters. At IS2 Lookup 1 and ES0 Lookup 0, where the pipeline ends, there is no next chain to go to. In this case, a goto with a chain number greater than the current one is accepted and required by the driver. You cannot goto a chain with a lower number than the current one. This is enforced when running on the HW target but cannot be enforced on the SW target. Here is an example that contains almost all possible keys and actions and goto chain 8000001 (IS2 lookup 0 PAG 1): $ tc filter add dev eth0 ingress protocol 802.1ad prio 10 handle 0 chain 1200000 flower \\ dst_mac 00:11:22:33:44:55 \\ src_mac 00:44:55:00:00:00/ff:ff:ff:0:0:0 \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype 802.1q \\ cvlan_id 200 \\ cvlan_prio 2 \\ cvlan_ethtype ip \\ dst_ip 10.10.20.42 \\ src_ip 10.10.30.00/255.255.255.0 \\ ip_flags frag/nofirstfrag \\ ip_tos 0x0f/0x3f \\ ip_proto tcp \\ dst_port 1000 \\ src_port 2000 \\ action skbedit priority 6 \\ action vlan modify id 300 3 \\ action goto chain 8000001 You can match a ctag after an stag tag by setting protocol to 802.1ad and vlan_ethtype to 802.1q. You can match an rtag after a ctag tag by setting protocol to 802.1q and vlan_ethtype to 0xf1c1. Both IS2 lookups generate a key based on the content of the frame. The current default configuration is that IPv6 packets are matched against IP4_TCP_UDP or IP4_OTHER entries in both lookups. protocol is the protocol to match. PROTO can be one of: all, 802_2 (LLC), snap, 802.1q, arp, rarp, ip, ipv6 or a 16 bit number for EtherType. + Specifying 0x8809, 0x88ee, or 0x8902 will be treated as OAM packets and will match for all of them. protocol is always the EtherType after mac addresses or vlan tag(s). Set protocol to 'all' if you want to match on all kinds of packets. Setting protocol to other than all limits the matches to the specific kind of packets. If you set protocol to all you cannot match on any fields, which means that all packets are matched. + If you set protocol to 802.1q and vlan_ethtype to all, you can match on all packets on a specific VLAN. Most match keys can be specified as a value or a value/mask. A missing key is the same as a wildcard (mask is all zeros). The following match keys are supported when the protocol is 802.1q. vlan_id - Match on classified VLAN ID. Value only: x or value/mask: x/y. vlan_prio - Match on classified VLAN PCP. Value only: x or value/mask: x/y. vlan_ethtype - Match on EtherType after outer VLAN. See page ACL (IS2) for documentation regarding supported match keys in the different IS2 keys. The supported actions in IS2 are: pass - a do-nothing action used to stop lookup in the VCAP. trap - send the packet to CPU drop - drop the packet police rate burst - police packets. Set rate to BPS bits per second and burst to BYTES bytes. Policers are only supported in the first lookup. mirred - mirror packet on the monitor port goto chain Here is an example that polices all packets on VLAN 100 with rate 1Mbps and goto chain 8100000 (IS2 lookup 1): $ tc filter add dev eth0 ingress protocol 802.1q prio 10 handle 0 chain 8000000 flower \\ vlan_id 100 \\ vlan_ethtype all \\ action police rate 1000000 burst 16000 \\ action goto chain 8100000 Here is an example that mirrors all snap packets with DMAC 00:44:55:66:77:88 on monitor port eth3 and goto chain 8100000 (IS2 lookup 1): $ tc filter add dev eth0 ingress protocol snap prio 10 handle 0 chain 8000000 flower \\ dst_mac 00:44:55:66:77:88 \\ action mirred egress mirror dev eth3 \\ action goto chain 8100000 Here is an example that drops all snap packets with DMAC 00:44:55:XX:XX:XX and goto chain 8100000 (IS2 lookup 1): $ tc filter add dev eth0 ingress protocol snap prio 10 handle 0 chain 8000000 flower \\ dst_mac 00:44:55:00:00:00/ff:ff:ff:0:0:0 \\ action drop \\ action goto chain 8100000 Here is an enhancement of the example above that drops all snap packets with DMAC 00:44:55:XX:XX:XX except DMAC 00:44:55:66:77:88 and goto chain 8100000 (IS2 lookup 1): $ tc filter add dev eth0 ingress protocol snap prio 9 handle 0 chain 8000000 flower \\ dst_mac 00:44:55:66:77:88 \\ action pass \\ action goto chain 8100000 $ tc filter add dev eth0 ingress protocol snap prio 10 handle 0 chain 8000000 flower \\ dst_mac 00:44:55:00:00:00/ff:ff:ff:0:0:0 \\ action drop \\ action goto chain 8100000 Here is an example that traps all arp request packets with SMAC 00:11:22:33:44:55 and goto chain 8100000 (IS2 lookup 1): $ tc filter add dev eth0 ingress protocol arp prio 10 handle 0 chain 8000000 flower \\ src_mac 00:11:22:33:44:55 \\ arp_op request \\ action trap \\ action goto chain 8100000 Here is an example that drops specific ip/udp packets on VLAN 100 and goto chain 8100000 (IS2 lookup 1): $ tc filter add dev eth0 ingress protocol 802.1q prio 10 handle 0 chain 8000000 flower \\ vlan_id 100 \\ vlan_ethtype ip \\ dst_ip 10.10.20.42 \\ src_ip 10.10.30.00/255.255.255.0 \\ ip_flags frag/nofirstfrag \\ ip_tos 0x0f/0x3f \\ ip_proto udp \\ dst_port 1000 \\ src_port 2000 \\ action drop \\ action goto chain 8100000 ES0 has only one lookup (chain 10000000) and the filters are assigned to the egress part of the clsact qdisc. ES0 can only match on the classified VID and PCP values. Note that these values can be different from the values in the packet. protocol is the protocol to match. PROTO can be one of: all or 802.1q. Set protocol to 'all' if you want to match on all kinds of packets. If you set protocol to 'all' you cannot match on any fields, which means that all packets are matched. If you set protocol to '802.1q' and vlan_ethtype to 'all', you can match on all packets on a specific VLAN. Most keys can be specified as a value or a value/mask. A missing key is the same as a wildcard (mask is all zeros). The following keys are supported when the protocol is 802.1q. vlan_id - Match on classified VLAN ID. Value only: x or value/mask: x/y. vlan_prio - Match on classified VLAN PCP. Value only: x or value/mask: x/y. vlan_ethtype - Match on EtherType after outer VLAN. See page VLAN Tagging for documentation regarding supported match keys. The supported actions in ES0 are: vlan pop - pop vlan tag vlan modify [ protocol ] id [ priority ] - modify VID and PCP. is one of 802.1q (default) or 802.1ad vlan push [ protocol ] id [ priority ] - push a new vlan tag. is one of 802.1q (default) or 802.1ad goto chain Here is an example that matches on VLAN 100, pops it, and goes to chain 10000001 (Dummy lookup): $ tc filter add dev eth0 egress protocol 802.1q prio 10 handle 0 chain 10000000 flower \\ vlan_id 100 \\ vlan_ethtype all \\ action vlan pop \\ action goto chain 300001 Here is an example that matches on VLAN 100, modifies it to VLAN 200 c-tag, and goes to chain 10000001 (Dummy lookup): $ tc filter add dev eth0 egress protocol 802.1q prio 10 handle 0 chain 10000000 flower \\ vlan_id 100 \\ vlan_ethtype all \\ action vlan modify id 200 priority 0 \\ action goto chain 300001 Here is an example that matches on VLAN 100, pushes VLAN 200 as outer s-tag, and goes to chain 10000001 (Dummy lookup): $ tc filter add dev eth0 egress protocol 802.1q prio 10 handle 0 chain 10000000 flower \\ vlan_id 100 \\ vlan_ethtype all \\ action vlan push protocol 802.1ad id 200 priority 0 \\ action goto chain 300001","title":"","component":"bsp","version":"2023.12","name":"tc-flower-vcap","url":"/bsp/2023.12/tc/tc-flower-vcap.html","titles":[{"text":"1. TC and VCAP","hash":"_tc_and_vcap","id":1},{"text":"1.1. Introduction","hash":"tc_vcap_intro","id":2},{"text":"1.2. VCAP Information","hash":"vcap_info","id":3},{"text":"1.2.1. Sparx5 and LAN969x VCAPs","hash":"_sparx5_and_lan969x_vcaps","id":4},{"text":"1.2.2. LAN966x VCAPs","hash":"_lan966x_vcaps","id":5},{"text":"1.3. TC commands","hash":"_tc_commands","id":6},{"text":"1.4. TC initial setup","hash":"_tc_initial_setup","id":7},{"text":"1.5. Linking TC filters between VCAPs","hash":"_linking_tc_filters_between_vcaps","id":8},{"text":"1.6. TC flower syntax","hash":"_tc_flower_syntax","id":9},{"text":"1.6.1. Prio","hash":"_prio","id":10},{"text":"1.6.2. Handle","hash":"_handle","id":11},{"text":"1.6.3. Chain","hash":"_chain","id":12},{"text":"1.7. LAN966x IS1","hash":"_lan966x_is1","id":13},{"text":"1.7.1. Protocol","hash":"_protocol","id":14},{"text":"1.7.2. Keys","hash":"_keys","id":15},{"text":"1.7.3. Actions","hash":"_actions","id":16},{"text":"1.7.4. Examples","hash":"_examples","id":17},{"text":"1.8. LAN966x IS2","hash":"_lan966x_is2","id":18},{"text":"1.8.1. Protocol","hash":"_protocol_2","id":19},{"text":"1.8.2. Keys","hash":"_keys_2","id":20},{"text":"1.8.3. Actions","hash":"_actions_2","id":21},{"text":"1.8.4. Examples","hash":"_examples_2","id":22},{"text":"1.9. LAN966x ES0","hash":"_lan966x_es0","id":23},{"text":"1.9.1. Protocol","hash":"_protocol_3","id":24},{"text":"1.9.2. Keys","hash":"_keys_3","id":25},{"text":"1.9.3. Actions","hash":"_actions_3","id":26},{"text":"1.9.4. Examples","hash":"_examples_3","id":27}]},"85":{"id":85,"text":"The tc command is used to configure Traffic Control in the Linux kernel and is part of the iproute2 package. The tc framework in Linux offers a very capable, flexible, and comprehensive set of features. tc in combination with SwitchDev or DSA, also offers hardware offloading. Comparing with more traditional Switch or Network OS’es, tc covers the following features: Classifying Scheduling Shaping and policing ACLs Push/pop vlans When tc is running in SW without any HW offload, it offers an unlimited number of lookups, all shapers, policers, and filters are available with the full set of parameters. But the performance (both in terms of bandwidth, latency, real-time processing etc) is limited by the CPU and the connectivity between the network ports and the CPU. On the other hand, when tc is offloaded to HW, it can typically offer wire-speed processing, latency, and real-time performance are typically in nano-second granularity, but the features, scaling, and flexibility is limited by the capability of the under-laying HW. This documentation will focus on tc being used on platforms with SwitchDev/DSA offloading, and only cover the features which can be offloaded by the relevant Microchip switches. tc operates on a single network interface and was originally designed to work on egress only. Later on tc was enhanced to also work on ingress but with a more limited feature set. Each network interface has two hooks where tc can affect the traffic. These hooks are adjacent to the network interface as shown in the simplified illustration below. Not all traffic is forwarded. The user application may consume the frame without further forwarding. Also, the user application may produce frames. Other hooks, such as netfilter hooks, are located further away from the network interface, which means that tc is consulted first after receiving an Ethernet frame and last before transmitting an Ethernet frame. Other hooks than tc hooks are not supported by Microchip switches. tc consists of the following components: Qdisc Class Filter Chain Shared filter blocks All components are identified by an ID that has the same syntax: :. Both major and minor are hexadecimal numbers. The nameing conventions of the ID are different in each of the components and will be described under each component. A qdisc (queuing discipline) is defined as a scheduler and/or shaper that decides which frame to send next. There are two qdiscs that do not adhere to this definition, namely the ingress qdisc and the clsact qdisc. These are not really queueing disciplines but creates a location where filters can be attached. The ingress qdisc works on ingress only while the clsact works on both ingress and egress. As the clsact qdisc is more general than the ingress qdisc all examples will use the clsact qdisc. The clsact qdisc can be used simultaneously with all other qdiscs that only work on egress. On ingress, the clsact qdisc is typically used for classifying, dropping, or policing frames. On egress, the clsact qdisc is typically used to add, modify or delete VLAN tags. The clsact qdisc is created by using the tc qdisc command: # tc qdisc add dev eth0 clsact The rest of the qdiscs are for egress only and can be subdivided into two types: Classful qdiscs and Classless qdiscs. Each interface has a default root egress qdisc attached that depends on the network interface. The default root qdisc can be replaced with another qdisc by using the tc qdisc command: # tc qdisc add dev eth0 root handle 1:0 mqprio All qdiscs must be created with a parent and an optional handle. If no handle is specified the system will create one. The example above creates a new root qdisc of type mqprio and with root as the parent and a handle of 1:0. The minor number of a qdisc must always be 0 (or simply omitted in which case handle can be specified as either : or ). Classful qdiscs allow you to create a separate policy for different traffic classes by assigning an arbitrary number of classes to the classful qdisc. These classes can again contain other classes or qdiscs. It is possible to create a very complex tree structure by combining classful qdiscs and classes. A filter attached to the root qdisc or to any of the classes is used to steer the traffic to a specific class. Classless qdiscs do not support classes and filters. The behavior of the qdisc is determined at creation time. Some of the classless qdiscs maps traffic flows to traffic classes but these are not real classes as in a classful qdisc. In most cases, it is possible to assign another qdisc to each of these traffic classes. It is the chosen implementation inside the kernel which decides if it is a classful or classless qdisc. When understanding the TC framework, and when choosing which qdiscs to use in a given configuration scenario, it is much more important to understand the concept of schedulers and shapers. The current implementation in the kernel offers different schedulers (some implemented as classful others as classless), likewise with shapers (some implemented as classful others as classless). The following sections provide an introduction to schedulers and shapers. The qdiscs in TC are very flexible, and allow to nest objects in a recursive way. HW on the other hand is fixed, and to allow HW offload we need to align with the limitation of the HW. The skip_sw flag will cause the driver to return an error if a given configuration cannot be offloaded. A scheduler splits traffic into different traffic classes and decides which frame to send next. The schedulers supported for HW offload by Microchip switches are: mqprio - Multiqueue Priority Qdisc (classless) taprio - Time Aware Priority Shaper (classless) ets - Enhanced Transmission Selection (classful) The mqprio qdisc is the most simple to understand. It basically splits traffic up into eight different queues based on the priority of the frame where frames in high priority queues are sent first. Adding an mqprio qdisc does nothing by itself as this is the way the egress interface works by default. The reason to use it is that it creates eight qdisc classes which map 1:1 to the eight priority queues. On each of these qdisc classes, it is possible to attach another qdisc such as a shaper. An mqprio qdisc can be illustrated like this: In the example above a cbs shaper is attached on traffic class 1:5 (priority 4). A default qdisc is automatically attached to all the other traffic classes. See the Strict scheduling section on the Scheduling page to see how the example above can be implemented. The taprio qdisc is basically an mqprio qdisc with added support for scheduled traffic as described in IEEE Std 802.1Q-2018 Section 8.6.8.4, also known as Time-Aware Scheduling (TAS). A cyclic schedule opens and closes each priority queue relative to a known timescale, e.g. controlled via PTP. When a queue is closed all frames are held back in the queue and when it opens again the frames are transmitted again in priority order. This cycle repeats forever. See the Time Aware Scheduling section on the Scheduling page to see how Time-Aware Scheduling can be implemented. The ets qdisc is basically an mqprio qdisc with added support for Enhanced Transmission Selection (ETS) as described in IEEE Std 802.1Q-2018 Section 37. With the ets qdisc, you can either have eight strict priority queues, in which case it works in the same way as the mqprio qdisc, or you can have up to eight weighted queues where you can configure each queue to have a guaranteed bandwidth in percent of the total bandwidth. If you have less than eight weighted queues the rest of the queues works as strict priority queues. The weighted queues are always allocated from the priority queues with the lowest priority. See the Strict and DWRR scheduling section on the Scheduling page to see how Enhanced Transmission Selection can be implemented. A shaper sends out the traffic with a specified maximum bitrate and buffers all traffic that exceeds this bitrate. In other words: It smooths the traffic and removes bursts. Frames are never discarded unless the buffer is full. The shapers supported for HW offload by Microchip switches are: tbf - Token Bucket Filter (classful) cbs - Credit Based Shaper (classless) The tbf qdisc implements a shaper based on the Token Bucket algorithm. A tbf qdisc is created using the tc qdisc command and can be attached either to the root or to a traffic class in one of the supported schedulers mentioned above. See the Priority Shaping section on the Shaping page for a description of how to implement a tbf shaper. The cbs qdisc implements the shaper algorithm described in IEEE Std 802.1Q-2018 Section 8.6.8.2. A cbs qdisc is created using the tc qdisc command and can be attached to a traffic class in one of the supported schedulers mentioned above. See the Priority Shaping section on the Shaping page for a description of how to implement a cbs shaper. Classes in the traffic control framework can be described by the following statements: A class represents a traffic class and can only exist inside a classful qdisc of the same type as the class. A class can contain other child classes or a single qdisc, which can be a classful or classless qdisc. A class that does not contain a child class is called a leaf class and will always contain a default simple classless qdisc unless another qdisc is assigned. A class must be assigned a parent and a class id when it is created. The following illustration shows an example of a classful qdisc with child classes. The different classes are selected by filters attached to the root qdiscs. Classful qdiscs with user-defined classes are not supported by Microchip switches. A tc filter is used to match frames in some way and apply actions on the matching frames. The filters supported for HW offload by Microchip switches are: matchall - Matches all frames flower - Matches packets via a set of keys, such as src_mac and dst_ip. Microchip switches only support using filters on the clsact qdisc on either ingress or egress. Filters support several general parameters that are independent of the filter type: prio (or pref) - The priority of the filter. The lowest value has the highest priority and are checked first. handle - The filter ID to be used when modifying or deleting the filter. protocol - The protocol to match, such as all, ip, ipv6 or 802.1q. skip_sw - The filter is HW offloaded. All examples expect that a clsact qdisc is created as shown in the Qdisc section. The clsact qdisc creates two new handles, ingress and egress, which are used as parents in the filter commands. Every filter contains one or more actions that are applied when the filter is hit. Not all kinds of actions are supported by each filter as it depends on both the context and the capabilities of the hardware. The following actions are supported in at least one configuration: pass - do nothing trap - send packet to CPU drop - drop packet skbedit priority - modify packet priority to PRIO (qos class) vlan pop - pop vlan tag vlan modify [ protocol ] id [ priority ] - modify VID and PCP. is one of 802.1q (default) or 802.1ad vlan push [ protocol ] id [ priority ] - push a new vlan tag. is one of 802.1q (default) or 802.1ad police rate burst - police traffic mirred egress mirror dev - mirror traffic on monitor port goto chain - goto specified chain Actions are always added last in the filter-specific options. Use tc filter add matchall action help to see all action parameters. The following sections describe briefly how to use matchall and flower filters. They will be described in more detail in the sections where the actual usage is shown. The matchall filter matches all packets and applies one or more actions. Add matchall filter that sets the priority to 4 on all packets received on eth0: # tc filter add dev eth0 ingress prio 10 handle 1 protocol all matchall \\ skip_sw \\ action skbedit priority 4 Use tc filter add matchall help to see all parameters. The flower filter is able to match packets using a set of keys and apply one or more actions on the matching packets Add flower filter that matches on DMAC and drops the matching packets: # tc filter add dev eth0 ingress prio 20 handle 2 protocol all flower \\ skip_sw \\ dst_mac 00:11:22:33:44:55 \\ action drop Use tc filter add flower help to see all parameters. tc filter chains allow us to jump from one filter chain to another using the goto action. Here is an example that matches all in chain 0 (the default) and goto chain 10000. Chain 10000 contains a filter that matches on SMAC and drops the matching packets: # tc filter add dev eth0 ingress prio 20 handle 2 protocol all matchall \\ skip_sw \\ action goto chain 10000 # tc filter add dev eth0 ingress prio 21 handle 3 protocol all chain 10000 flower \\ skip_sw \\ src_mac 00:22:33:44:55:66 \\ action drop Another use of chains is to use the tc chain command: # tc chain add dev eth0 ingress chain 10000 protocol ip flower \\ dst_ip 0.0.0.0 \\ ip_proto tcp The command above creates a chain template that will limit filters created in this chain to only specify protocol as ip and dst_ip and ip_proto as keys. The key parameters given in the chain template are not fixed, only the name of the keys. This filter will be accepted: # tc filter add dev eth0 ingress prio 1 handle 1 protocol ip chain 10000 flower \\ skip_sw \\ dst_ip 10.10.10.10 \\ ip_proto udp \\ action drop This filter will NOT be accepted as it violates the template: # tc filter add dev eth0 ingress prio 2 handle 2 protocol ip chain 10000 flower \\ skip_sw \\ src_ip 20.20.20.20 \\ ip_proto udp \\ action drop tc operates on a single interface only, but if two or more interfaces need exactly the same filter configuration then shared filter blocks are the rescue. The downside is that you cannot combine shared filter blocks with individual filters on a specific interface, so it is all or nothing. Instead of creating the clsact qdisc directly on an interface we add the same ingress_block on the interfaces we want to share the filter configuration: # tc qdisc add dev eth0 ingress_block 10 clsact # tc qdisc add dev eth1 ingress_block 10 clsact # tc qdisc add dev eth3 ingress_block 10 clsact Now create the filters in the shared block: # tc filter add block 10 chain 12000 prio 1 handle 1 protocol all flower skip_sw \\ dst_mac 00:01:01:00:00:00/ff:ff:ff:00:00:00 \\ src_mac 00:02:02:02:02:02 \\ action goto chain 20002 # tc filter add block 10 chain 20002 prio 2 handle 2 protocol all flower skip_sw \\ action drop \\ action goto chain 21000 The kernel will now apply all filters to each interface. It is possible to use a mask in many of the filter keys as shown above for dst_mac. This allows us to match on only a subset of the key. The primary reason for using shared filter blocks is that it allows optimizing the use of TCAM entries where the port mask would be the only difference between the entries. In the example above only one TCAM rule is needed. Secondary it makes it easier to setup the filters. More information about tc can be found in the man pages: $ man tc $ man tc-mqprio $ man tc-taprio $ man tc-ets $ man tc-cbs $ man tc-tbf $ man tc-matchall $ man tc-flower Various HOWTOs: https://tldp.org/HOWTO/Traffic-Control-HOWTO/index.html (version 1.0.2 Oct 2006) https://tldp.org/en/Traffic-Control-HOWTO/ (version 1.1 Jan 2016) https://tldp.org/HOWTO/Adv-Routing-HOWTO/ (version 1.1 Jul 2002) http://borg.uu3.net/traffic_shaping/index.html An introduction to clsact qdisc: https://lwn.net/Articles/671458/ An introduction to tc filter chains: https://lwn.net/Articles/723067/ An introduction to tc shared filter blocks: https://lwn.net/Articles/736338/ https://lwn.net/Articles/743391/","title":"TC","component":"bsp","version":"2023.12","name":"tc-intro","url":"/bsp/2023.12/tc/tc-intro.html","titles":[{"text":"1. Introduction","hash":"tc_intro","id":1},{"text":"2. tc terminology and architecture","hash":"_tc_terminology_and_architecture","id":2},{"text":"2.1. Qdisc","hash":"_qdisc","id":3},{"text":"2.1.1. Classful vs Classless qdiscs","hash":"_classful_vs_classless_qdiscs","id":4},{"text":"2.1.2. Schedulers","hash":"_schedulers","id":5},{"text":"mqprio","hash":"_mqprio","id":6},{"text":"taprio","hash":"_taprio","id":7},{"text":"ets","hash":"_ets","id":8},{"text":"2.1.3. Shapers","hash":"_shapers","id":9},{"text":"tbf","hash":"_tbf","id":10},{"text":"cbs","hash":"_cbs","id":11},{"text":"2.2. Class","hash":"_class","id":12},{"text":"2.3. Filter","hash":"_filter","id":13},{"text":"2.3.1. tc filter actions","hash":"_tc_filter_actions","id":14},{"text":"2.3.2. matchall filter","hash":"_matchall_filter","id":15},{"text":"2.3.3. flower filter","hash":"_flower_filter","id":16},{"text":"2.4. Chain","hash":"tc_chain","id":17},{"text":"2.5. Shared Filter Blocks","hash":"shared_filter_blocks","id":18},{"text":"3. References","hash":"_references","id":19}]},"86":{"id":86,"text":"When a frame is received on a port it is classified into one of these Traffic Types: Traffic Type Sparx5 (IS0) LAN966x (IS1) IPv4 ✔ ✔ IPv6 ✔ ✔ Other ✔ ✔ All frame types are subject to the appropriate lookups according to the VCAP. See VCAP Information. Each port is configured to generate a specific keyset (a set of key values extracted from a frame) for each combination of Traffic Type and lookup. A keyset is an internal value used by the hardware. A flower key is what the user specifies in the tc flower filter command. The valid combinations of Sparx5 IS0 lookup keyset versus Traffic Type are: Sparx5 IS0 keyset - Traffic Type Size IPv4 IPv6 Other NORMAL_5TUPLE_IP4 6 ✔ ✔ ✔ NORMAL_7TUPLE 12 ✔ ✔ ✔ The default IS0 lookup keyset is NORMAL_7TUPLE for IPv6 and Other, and NORMAL_5TUPLE_IP4 for IPv4 traffic. The other IS0 lookup keys can be selected by using a tc chain template. The MPLS and MBLS traffic types selects the NORMAL_7TUPLE keyset as they are configured to follow 'Other'. IS0 on Sparx5 has some additional traffic types that are currently configured to follow the 'Other' traffic type classification as they are not being used. The valid combinations of LAN966x IS1 lookup keyset versus Traffic Type are: LAN966x IS1 keyset - Traffic Type Size IPv4 IPv6 Other 7TUPLE 4 ✔ ✔ ✔ NORMAL_IP6 4 · ✔ · 5TUPLE_IP6 4 · ✔ · NORMAL 2 ✔ ✔ ✔ 5TUPLE_IP4 2 ✔ ✔ ✔ DMAC_VID 1 ✔ ✔ ✔ The default IS1 lookup keyset is 7TUPLE. The other IS1 lookup keys can be selected by using a tc chain template. Size denotes the size of the IS1 keyset. Using smaller keys makes it possible to have more rules in the IS1 VCAP. Each IS1 lookup is configured by using the chain option in the tc filter commands. The supported flower keys for each IS1 lookup keyset are described next and here is also shown examples on how to use the actions. A more thorough description of the actions is found in the section IS0/IS1 Actions The NORMAL_5TUPLE_IP4 keyset can be used for both IPv4 and IPv6 frames. It can match on two simultaneous VLAN tags. It cannot match on IPv6 addresses but it is able to match on both IPv4 source and destination addresses simultaneously. Flower key Value Example IPv4 IPv6 Other vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 ✔ ✔ · vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 ✔ ✔ · vlan_ethtype vlan_ethtype 802.1q or vlan_ethtype ipv6 ✔ ✔ · cvlan_id or / cvlan_id 1234 or cvlan_id 0x100/0xff0 ✔ ✔ · cvlan_prio or / cvlan_prio 3 or cvlan_id 0x0/0x1 ✔ ✔ · cvlan_ethtype vlan_ethtype ipv6 ✔ ✔ · ip_flags [/] ip_flags { [no]frag | [no]firstfrag } ✔ · · src_ip or / src_ip 10.10.10.10 or src_ip 10.10.0.0/255.255.0.0 ✔ · · dst_ip or / dst_ip 20.20.20.20, dst_ip 20.20.0.0/255.255.0.0 ✔ · · ip_proto ip_proto 0x12 or ip_proto tcp. ✔ ✔ · You can see some example of IPv4 filters here IS0/IS1 IPv4 filter examples The NORMAL_7TUPLE keyset is the most general but cannot match on IPv4 addresses, and only on TCP/UDP source ports. Flower key Value Example IPv4 IPv6 Other src_mac or / src_mac 00:33:33:33:33:33 or src_mac 00:33:33:00:00:00/ff:ff:ff:00:00:00 ✔ ✔ ✔ dst_mac or / dst_mac 00:44:44:44:44:44 or dst_mac 00:44:44:00:00:00/ff:ff:ff:00:00:00 ✔ ✔ ✔ vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 ✔ ✔ ✔ vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 ✔ ✔ ✔ vlan_ethtype vlan_ethtype 802.1q or vlan_ethtype ip Note: Supports the same values as in tc filter protocol field. ✔ ✔ ✔ cvlan_id or / cvlan_id 1234 or cvlan_id 0x100/0xff0 ✔ ✔ ✔ cvlan_prio or / cvlan_prio 3 or cvlan_id 0x0/0x1 ✔ ✔ ✔ cvlan_ethtype cvlan_ethtype 0xf1c1 or vlan_ethtype ip Note: Supports the same values as in tc filter protocol field. ✔ ✔ ✔ ip_flags [/] ip_flags { [no]frag | [no]firstfrag } ✔ · · src_ip src_ip 2001:0:0:0:e1de:2244:0ff8:0123 ✔ ✔ · dst_ip dst_ip 2001:0:0:0:e1de:2244:0ff8:4567 ✔ ✔ · ip_proto ip_proto 0x12 or ip_proto tcp. ✔ ✔ · src_port or / src_port 1000 or src_port 0x200/0xff0 ✔ ✔ · The filter below matches on MAC addresses, two VLAN tags and all supported IPv6 matches. The filter in inserted into chain 1000000 (first lookup), and drops the matched frames and goes to second lookup in IS1 (chain 1100000). # tc qdisc add dev eth0 clsact # tc filter add dev eth12 ingress chain 1000000 prio 100 handle 100 protocol 802.1ad flower skip_sw \\ src_mac 00:33:33:33:33:33 \\ dst_mac 00:44:44:44:00:00/ff:ff:ff:ff:00:00 \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype 802.1q \\ cvlan_id 200 \\ cvlan_prio 2 \\ cvlan_ethtype ipv6 \\ ip_flags frag/nofirstfrag \\ src_ip 1:2::3:4 \\ dst_ip 5:6::7:8 \\ ip_proto tcp \\ action mirred egress mirror dev eth49 \\ action goto chain 1100000 The 7TUPLE keyset is used by default for all IS1 Frame Type and lookup combinations. Apart from only partial support of IPv6 addresses it is the most general keyset but it is also one of the largest keysets in LAN966x. Flower key Value Example IPv4 IPv6 Other src_mac or / src_mac 00:33:33:33:33:33 or src_mac 00:33:33:00:00:00/ff:ff:ff:00:00:00 ✔ ✔ ✔ dst_mac or / dst_mac 00:44:44:44:44:44 or dst_mac 00:44:44:00:00:00/ff:ff:ff:00:00:00 ✔ ✔ ✔ vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 ✔ ✔ ✔ vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 ✔ ✔ ✔ vlan_ethtype vlan_ethtype 802.1q or vlan_ethtype ip Note: Supports the same values as in tc filter protocol field. ✔ ✔ ✔ cvlan_id or / cvlan_id 1234 or cvlan_id 0x100/0xff0 ✔ ✔ ✔ cvlan_prio or / cvlan_prio 3 or cvlan_id 0x0/0x1 ✔ ✔ ✔ cvlan_ethtype cvlan_ethtype 0xf1c1 or vlan_ethtype ip Note: Supports the same values as in tc filter protocol field. ✔ ✔ ✔ ip_tos or / ip_tos 0x12 or ip_tos 0x4/0x3f. Note: Only the 6 LSBs can be matched in IS1 (The DSCP part). ✔ ✔ · ip_flags [/] ip_flags { [no]frag | [no]firstfrag } ✔ · · src_ip or / when IPv4 and when IPv6 src_ip 10.10.10.10, src_ip 10.10.0.0/255.255.0.0 or src_ip 2001:0:0:0:e1de:2244:0ff8:0123 Note: IPv6 cannot be masked and even all the blocks can’t be used for matching, only the non-zero blocks from above example can be used to match an IPv6 address. ✔ ✔ · dst_ip or / when IPv4 and when IPv6 dst_ip 20.20.20.20, dst_ip 20.20.0.0/255.255.0.0 or dst_ip 2001:0:0:0:e1de:2244:0ff8:4567 Note: IPv6 cannot be masked and even all the blocks can’t be used for matching, only the non-zero blocks from above example can be used to match an IPv6 address. ✔ ✔ · ip_proto ip_proto 0x12 or ip_proto tcp. ✔ ✔ · src_port or / src_port 1000 or src_port 0x200/0xff0 ✔ ✔ · dst_port or / dst_port 2000 or dst_port 0x100/0xff0 ✔ ✔ · The 7TUPLE LAN966x IS1 keyset is the default keyset and can be used without specifying a chain template. The filter below matches on MAC addresses, two VLAN tags and all supported IPv4 matches. The filter is inserted into chain 1000000 (first lookup), classifies all matching packets to priority 5 and goes to second lookup in IS1 (chain 1100000). # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 1000000 prio 10 handle 42 protocol 802.1ad flower skip_sw \\ src_mac 00:33:33:33:33:33 \\ dst_mac 00:44:44:44:00:00/ff:ff:ff:ff:00:00 \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype 802.1q \\ cvlan_id 200 \\ cvlan_prio 2 \\ cvlan_ethtype ipv4 \\ ip_tos 0xf/0x3f \\ ip_flags frag/nofirstfrag \\ src_ip 10.10.10.10 \\ dst_ip 20.20.20.20 \\ ip_proto tcp \\ src_port 1000 \\ dst_port 2000 \\ action skbedit priority 5 \\ action goto chain 1100000 This filter is the same as above but with only one VLAN tag match. # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 1000000 prio 10 handle 42 protocol 802.1q flower skip_sw \\ src_mac 00:33:33:33:33:33 \\ dst_mac 00:44:44:44:00:00/ff:ff:ff:ff:00:00 \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype ipv4 \\ ip_tos 0xf/0x3f \\ ip_flags frag/nofirstfrag \\ src_ip 10.10.10.10 \\ dst_ip 20.20.20.20 \\ ip_proto tcp \\ src_port 1000 \\ dst_port 2000 \\ action skbedit priority 5 \\ action goto chain 1100000 This filter is the same as above but without VLAN matching. # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 1000000 prio 10 handle 42 protocol ipv4 flower skip_sw \\ src_mac 00:33:33:33:33:33 \\ dst_mac 00:44:44:44:00:00/ff:ff:ff:ff:00:00 \\ ip_tos 0xf/0x3f \\ ip_flags frag/nofirstfrag \\ src_ip 10.10.10.10 \\ dst_ip 20.20.20.20 \\ ip_proto tcp \\ src_port 1000 \\ dst_port 2000 \\ action skbedit priority 5 \\ action goto chain 1100000 This filter matches on MAC addresses and ARP frames. # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 1000000 prio 10 handle 42 protocol arp flower skip_sw \\ src_mac 00:33:33:33:33:33 \\ dst_mac 00:44:44:44:44:44 \\ action skbedit priority 5 \\ action goto chain 1100000 This filter matches on MAC addresses and all kind of frames. # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 1000000 prio 10 handle 42 protocol all flower skip_sw \\ src_mac 00:33:33:33:33:33 \\ dst_mac 00:44:44:44:44:44 \\ action skbedit priority 5 \\ action goto chain 1100000 The NORMAL_IP6 keyset can only be used for IPv6 lookups. It is the only keyset that is able to match on both MAC address and full IPv6 address simultaneously. On the other hand it is only possible to match on either source or destination MAC/IPv6 addresses. A tc chain template is required in order to use it. The template selects whether to use source or destination addresses. Flower key Value Example IPv4 IPv6 Other src_mac or dst_mac or / src_mac 00:33:33:33:33:33, src_mac 00:33:33:00:00:00/ff:ff:ff:00:00:00, dst_mac 00:44:44:44:44:44 or dst_mac 00:44:44:00:00:00/ff:ff:ff:00:00:00 · ✔ · vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 · ✔ · vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 · ✔ · vlan_ethtype vlan_ethtype 802.1q or vlan_ethtype ipv6 · ✔ · cvlan_id or / cvlan_id 1234 or cvlan_id 0x100/0xff0 · ✔ · cvlan_prio or / cvlan_prio 3 or cvlan_id 0x0/0x1 · ✔ · cvlan_ethtype vlan_ethtype ipv6 · ✔ · ip_tos or / ip_tos 0x12 or ip_tos 0x4/0x3f. Note: Only the 6 LSBs can be matched in IS1 (The DSCP part). · ✔ · src_ip or dst_ip src_ip 2001:0:0:0:e1de:2244:0ff8:0123 or dst_ip 2001:0:0:0:e1de:2244:0ff8:4567 · ✔ · ip_proto ip_proto 0x12 or ip_proto tcp. · ✔ · This IS1 keyset requires a chain template. This filter matches on two VLAN tags and source MAC and IPv6 address. The filter in inserted into chain 1000000 (first lookup), classifies all matching packets to priority 5 and goes to second lookup in IS1 (chain 1100000). # tc qdisc add dev eth0 clsact # tc chain add dev eth0 ingress chain 1000000 protocol 802.1ad flower skip_sw \\ src_mac 00:00:00:00:00:00 \\ vlan_id 0 \\ vlan_prio 0 \\ vlan_ethtype 802.1q \\ cvlan_id 0 \\ cvlan_prio 0 \\ cvlan_ethtype ipv6 \\ ip_tos 0x00/0x3f \\ src_ip 0::0 \\ ip_proto udp # tc filter add dev eth0 ingress chain 1000000 prio 10 handle 42 protocol 802.1ad flower skip_sw \\ src_mac 00:33:33:33:33:33 \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype 802.1q \\ cvlan_id 200 \\ cvlan_prio 2 \\ cvlan_ethtype ipv6 \\ ip_tos 0xf/0x3f \\ src_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:0123 \\ ip_proto tcp \\ action skbedit priority 5 \\ action goto chain 1100000 This filter matches on destination MAC and IPv6 address. The filter in inserted into chain 1000000 (first lookup), classifies all matching packets to priority 5 and goes to second lookup in IS1 (chain 1100000). # tc qdisc add dev eth0 clsact # tc chain add dev eth0 ingress chain 1000000 protocol ipv6 flower skip_sw \\ dst_mac 00:00:00:00:00:00 \\ ip_tos 0x00/0x3f \\ dst_ip 0::0 \\ ip_proto udp # tc filter add dev eth0 ingress chain 1000000 prio 10 handle 42 protocol ipv6 flower skip_sw \\ dst_mac 00:44:44:44:44:44 \\ ip_tos 0xf/0x3f \\ dst_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:4567 \\ ip_proto tcp \\ action skbedit priority 5 \\ action goto chain 1100000 The 5TUPLE_IP6 keyset can only be used for IPv6 lookups. It is the only keyset that is able to match full IPv6 source and destination addresses simultaneously. A tc chain template is required in order to use it. Flower key Value Example IPv4 IPv6 Other vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 · ✔ · vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 · ✔ · vlan_ethtype vlan_ethtype 802.1q or vlan_ethtype ipv6 · ✔ · cvlan_id or / cvlan_id 1234 or cvlan_id 0x100/0xff0 · ✔ · cvlan_prio or / cvlan_prio 3 or cvlan_id 0x0/0x1 · ✔ · cvlan_ethtype vlan_ethtype ipv6 · ✔ · ip_tos or / ip_tos 0x12 or ip_tos 0x4/0x3f. Note: Only the 6 LSBs can be matched in IS1 (The DSCP part). · ✔ · src_ip src_ip 2001:0:0:0:e1de:2244:0ff8:0123 · ✔ · dst_ip dst_ip 2001:0:0:0:e1de:2244:0ff8:4567 · ✔ · ip_proto ip_proto 0x12 or ip_proto tcp. · ✔ · This IS1 keyset requires a chain template. This filter matches on two VLAN tags and source and destination IPv6 addresses. The filter in inserted into chain 1000000 (first lookup), classifies all matching packets to priority 5 and goes to second lookup in IS1 (chain 1100000). # tc qdisc add dev eth0 clsact # tc chain add dev eth0 ingress chain 1000000 protocol 802.1ad flower skip_sw \\ vlan_id 0 \\ vlan_prio 0 \\ vlan_ethtype 802.1q \\ cvlan_id 0 \\ cvlan_prio 0 \\ cvlan_ethtype ipv6 \\ ip_tos 0x00/0x3f \\ src_ip 0::0 \\ dst_ip 0::0 \\ ip_proto udp # tc filter add dev eth0 ingress chain 1000000 prio 10 handle 42 protocol 802.1ad flower skip_sw \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype 802.1q \\ cvlan_id 200 \\ cvlan_prio 2 \\ cvlan_ethtype ipv6 \\ ip_tos 0xf/0x3f \\ src_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:0123 \\ dst_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:4567 \\ ip_proto tcp \\ action skbedit priority 5 \\ action goto chain 1100000 This filter is the same as above but without VLAN matching. The filter in inserted into chain 1000000 (first lookup), classifies all matching packets to priority 5 and goes to second lookup in IS1 (chain 1100000). # tc qdisc add dev eth0 clsact # tc chain add dev eth0 ingress chain 1000000 protocol ipv6 flower skip_sw \\ ip_tos 0x00/0x3f \\ src_ip 0::0 \\ dst_ip 0::0 \\ ip_proto udp # tc filter add dev eth0 ingress chain 1000000 prio 10 handle 42 protocol ipv6 flower skip_sw \\ ip_tos 0xf/0x3f \\ src_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:0123 \\ dst_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:4567 \\ ip_proto tcp \\ action skbedit priority 5 \\ action goto chain 1100000 The NORMAL keyset can be used with all Traffic Types but is more limited compared with 7TUPLE. It can only match on a single VLAN header. It cannot match on IPv6 addresses but it is able to match on both MAC address and IPv4 address simultaneously as long as you match on either source or destination MAC/IP addresses. A tc chain template is required in order to use it. The template selects whether to use source or destination addresses. Flower key Value Example IPv4 IPv6 Other src_mac or dst_mac or / src_mac 00:33:33:33:33:33, src_mac 00:33:33:00:00:00/ff:ff:ff:00:00:00, dst_mac 00:44:44:44:44:44 or dst_mac 00:44:44:00:00:00/ff:ff:ff:00:00:00 ✔ ✔ ✔ vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 ✔ ✔ ✔ vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 ✔ ✔ ✔ vlan_ethtype vlan_ethtype ip or vlan_ethtype ipv6 ✔ ✔ ✔ ip_tos or / ip_tos 0x12 or ip_tos 0x4/0x3f. Note: Only the 6 LSBs can be matched in IS1 (The DSCP part). ✔ ✔ · ip_flags [/] ip_flags { [no]frag | [no]firstfrag } ✔ · · src_ip or dst_ip or / src_ip 10.10.10.10, src_ip 10.10.0.0/255.255.0.0, dst_ip 20.20.20.20 or dst_ip 20.20.0.0/255.255.0.0 ✔ · · ip_proto ip_proto 0x12 or ip_proto tcp. ✔ ✔ · src_port or / src_port 1000 or src_port 0x200/0xff0 ✔ ✔ · dst_port or / dst_port 2000 or dst_port 0x100/0xff0 ✔ ✔ · This IS1 keyset requires a chain template. This filter matches on one VLAN tag and source MAC and IPv4 addresses. The filter in inserted into chain 1000000 (first lookup), classifies all matching packets to priority 5 and goes to second lookup in IS1 (chain 1100000). # tc qdisc add dev eth0 clsact # tc chain add dev eth0 ingress chain 1000000 protocol 802.1q flower skip_sw \\ src_mac 00:00:00:00:00:00 \\ vlan_id 0 \\ vlan_prio 0 \\ vlan_ethtype ipv4 \\ ip_tos 0x00/0x3f \\ ip_flags frag/firstfrag \\ src_ip 0.0.0.0 \\ ip_proto udp \\ src_port 100 \\ dst_port 200 # tc filter add dev eth0 ingress chain 1000000 prio 10 handle 42 protocol 802.1q flower skip_sw \\ src_mac 00:33:33:33:33:33 \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype ipv4 \\ ip_tos 0xf/0x3f \\ ip_flags frag/nofirstfrag \\ src_ip 10.10.10.10 \\ ip_proto tcp \\ src_port 1000 \\ dst_port 2000 action skbedit priority 5 \\ action goto chain 1100000 This filter matches on destination MAC and IPv4 addresses. The filter in inserted into chain 1000000 (first lookup), classifies all matching packets to priority 5 and goes to second lookup in IS1 (chain 1100000). # tc qdisc add dev eth0 clsact # tc chain add dev eth0 ingress chain 1000000 protocol ipv4 flower skip_sw \\ dst_mac 00:00:00:00:00:00 \\ ip_tos 0x00/0x3f \\ ip_flags frag/firstfrag \\ src_ip 0.0.0.0 \\ ip_proto udp \\ src_port 100 \\ dst_port 200 # tc filter add dev eth0 ingress chain 1000000 prio 10 handle 42 protocol ipv4 flower skip_sw \\ dst_mac 00:44:44:44:44:44 \\ ip_tos 0xf/0x3f \\ ip_flags frag/nofirstfrag \\ dst_ip 20.20.20.20 \\ ip_proto tcp \\ src_port 1000 \\ dst_port 2000 action skbedit priority 5 \\ action goto chain 1100000 The 5TUPLE_IP4 keyset can be used for both IPv4 and IPv6 lookups. It cannot match on IPv6 addresses but it is able to match on both IPv4 source and destination addresses simultaneously. A tc chain template is required in order to use it. Flower key Value Example IPv4 IPv6 Other vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 ✔ ✔ · vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 ✔ ✔ · vlan_ethtype vlan_ethtype 802.1q or vlan_ethtype ipv6 ✔ ✔ · cvlan_id or / cvlan_id 1234 or cvlan_id 0x100/0xff0 ✔ ✔ · cvlan_prio or / cvlan_prio 3 or cvlan_id 0x0/0x1 ✔ ✔ · cvlan_ethtype vlan_ethtype ipv6 ✔ ✔ · ip_flags [/] ip_flags { [no]frag | [no]firstfrag } ✔ · · src_ip or / src_ip 10.10.10.10 or src_ip 10.10.0.0/255.255.0.0 ✔ · · dst_ip or / dst_ip 20.20.20.20, dst_ip 20.20.0.0/255.255.0.0 ✔ · · ip_proto ip_proto 0x12 or ip_proto tcp. ✔ ✔ · This IS1 keyset requires a chain template. You can see some example of IPv4 filters here IS0/IS1 IPv4 filter examples The DMAC_VID keyset can be used for all IS1 Frame Type and lookup combinations. It is a short keyset that can be used to match on a VLAN and either source or destination MAC address. A tc chain template is required in order to use it. The template selects whether to use source or destination MAC address. Flower key Value Example IPv4 IPv6 Other src_mac or dst_mac or / src_mac 00:33:33:33:33:33, src_mac 00:33:33:00:00:00/ff:ff:ff:00:00:00, dst_mac 00:44:44:44:44:44 or dst_mac 00:44:44:00:00:00/ff:ff:ff:00:00:00 ✔ ✔ ✔ vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 ✔ ✔ ✔ vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 ✔ ✔ ✔ vlan_ethtype vlan_ethtype ip or vlan_ethtype ipv6 ✔ ✔ ✔ This IS1 keyset requires a chain template. This filter matches on one VLAN tag, source MAC address and all protocols The filter in inserted into chain 1000000 (first lookup), classifies all matching packets to priority 5 and goes to second lookup in IS1 (chain 1100000). # tc qdisc add dev eth0 clsact # tc chain add dev eth0 ingress chain 1000000 protocol 802.1q flower skip_sw \\ src_mac 00:00:00:00:00:00 \\ vlan_id 0 \\ vlan_prio 0 \\ vlan_ethtype all # tc filter add dev eth0 ingress chain 1000000 prio 10 handle 42 protocol 802.1q flower skip_sw \\ src_mac 00:33:33:33:33:33 \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype all \\ action skbedit priority 5 \\ action goto chain 1100000 This filter matches on one VLAN tag, destination MAC address and all protocols # tc qdisc add dev eth0 clsact # tc chain add dev eth0 ingress chain 1000000 protocol 802.1q flower skip_sw \\ dst_mac 00:00:00:00:00:00 \\ vlan_id 0 \\ vlan_prio 0 \\ vlan_ethtype all # tc filter add dev eth0 ingress chain 1000000 prio 10 handle 42 protocol 802.1q flower skip_sw \\ dst_mac 00:44:44:44:44:44 \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype all \\ action skbedit priority 5 \\ action goto chain 1100000 The following filter matches on two VLAN tags and source and destination IPv4 addresses. The filter in inserted into chain 1000000 (first lookup), classifies all matching packets to priority 5 and goes to second lookup in IS0/IS1 (chain 1100000). The Sparx5 IS0 VCAP does not support the ip_tos key and the skbedit action. # tc qdisc add dev eth0 clsact # tc chain add dev eth0 ingress chain 1000000 protocol 802.1ad flower skip_sw \\ vlan_id 0 \\ vlan_prio 0 \\ vlan_ethtype 802.1q \\ cvlan_id 0 \\ cvlan_prio 0 \\ cvlan_ethtype ipv4 \\ ip_tos 0x00/0x3f \\ ip_flags frag/firstfrag \\ src_ip 0.0.0.0 \\ dst_ip 0.0.0.0 \\ ip_proto udp # tc filter add dev eth0 ingress chain 1000000 prio 10 handle 42 protocol 802.1ad flower skip_sw \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype 802.1q \\ cvlan_id 200 \\ cvlan_prio 2 \\ cvlan_ethtype ipv4 \\ ip_tos 0xf/0x3f \\ ip_flags frag/nofirstfrag \\ src_ip 10.10.10.10 \\ dst_ip 20.20.20.20 \\ ip_proto tcp \\ action skbedit priority 5 \\ action goto chain 1100000 The following filter is the same as the filter above but without VLAN matching. The filter in inserted into chain 1000000 (first lookup), classifies all matching packets to priority 5 and goes to second lookup in IS1 (chain 1100000). # tc qdisc add dev eth0 clsact # tc chain add dev eth0 ingress chain 1000000 protocol ipv4 flower skip_sw \\ ip_tos 0x00/0x3f \\ ip_flags frag/firstfrag \\ src_ip 0.0.0.0 \\ dst_ip 0.0.0.0 \\ ip_proto udp # tc filter add dev eth0 ingress chain 1000000 prio 10 handle 42 protocol ipv4 flower skip_sw \\ ip_tos 0xf/0x3f \\ ip_flags frag/nofirstfrag \\ src_ip 10.10.10.10 \\ dst_ip 20.20.20.20 \\ ip_proto tcp \\ action skbedit priority 5 \\ action goto chain 1100000 These are the actions supported in the IS0 or IS1 VCAPs: Flower action Sparx5 LAN966x Example Description pass ✔ ✔ action pass This is a no-op action. vlan modify id priority ✔ ✔ action vlan modify id 100 priority 3 Classifies the packet to a specific VID and PCP. skbedit priority · ✔ action skbedit priority 5 Classifies the packet to a specific priority. gate [basetime ] sched-entry [IPV] [MAX_OCTETS] …​ ✔ ✔ action gate base-time 0 sched-entry open 10000000 3 8m sched-entry close 90000000 Gate is open in 10 mS and closed in 90 mS. Frames that passes the gate are assigned an internal priority value of 3. A maximum of 8 mega bytes can pass the gate during open time. police rate burst [mtu ] ✔ ✔ action police rate 100kbit burst 16000 mtu 1200 Police the frames to a specific bit rate and optionally discards frames larger than MTU. mirred dev ✔ · action mirred egress mirror dev eth2 Send copied of matched frames to the mirror port goto chain ✔ ✔ action goto chain 1100000 Which chain to go to after this match. A no-op action in first and second lookup. In third lookup the chain number is used to set the PAG value to be used in IS2 lookups. Use the tc filter show command to see the filter configuration for a specific port. Add -s to also see the statistics: # tc -s filter show dev eth2 ingress filter protocol 802.1Q pref 1 flower chain 1000000 filter protocol 802.1Q pref 1 flower chain 1000000 handle 0x3e8 vlan_id 100 vlan_ethtype all dst_mac 00:00:00:00:00:22 eth_type 0003 skip_sw in_hw in_hw_count 1 action order 1: priority wildcard clockid TAI flags 0x88a64 base-time 0ns cycle-time 1ms cycle-time-ext 0ns schedule: number 0 gate-state open interval 200us ipv 4 max-octets 8Mb number 1 gate-state close interval 800us ipv wildcard max-octets wildcard pipe index 42 ref 2 bind 1 installed 6 sec used 2 sec Action statistics: Sent 0 bytes 10000 pkt (dropped 7999, overlimits 0 requeues 0) Sent software 0 bytes 0 pkt Sent hardware 0 bytes 10000 pkt backlog 0b 0p requeues 0 used_hw_stats immediate action order 2: gact action goto chain 1100000 random type none pass val 0 index 1 ref 1 bind 1 installed 6 sec used 2 sec Action statistics: Sent 0 bytes 10000 pkt (dropped 7999, overlimits 0 requeues 0) Sent software 0 bytes 0 pkt Sent hardware 0 bytes 10000 pkt backlog 0b 0p requeues 0 used_hw_stats immediate First comes information about the filter, then the match and finally the actions including statistics. The number of frames that has his the filter is shown as Sent hardware 0 bytes 10000 pkt. Note that the hardware does not support counting the number of bytes. In this case there is a policer involved and the number of dropped frames are shown as (dropped 7999, …​). In the current kernel the same statistics are shown for all actions. This might change in the future.","title":"","component":"bsp","version":"2023.12","name":"tc-is1","url":"/bsp/2023.12/tc/tc-is1.html","titles":[{"text":"1. Classification (IS0/IS1)","hash":"classification_is1","id":1},{"text":"2. Sparx5 IS0 Classification","hash":"_sparx5_is0_classification","id":2},{"text":"3. LAN966x IS1 Classification","hash":"_lan966x_is1_classification","id":3},{"text":"4. IS0/IS1 Keysets","hash":"_is0is1_keysets","id":4},{"text":"4.1. NORMAL_5TUPLE_IP4","hash":"_normal_5tuple_ip4","id":5},{"text":"4.2. NORMAL_7TUPLE","hash":"_normal_7tuple","id":6},{"text":"4.3. 7TUPLE","hash":"_7tuple","id":7},{"text":"4.4. NORMAL_IP6","hash":"_normal_ip6","id":8},{"text":"4.5. 5TUPLE_IP6","hash":"_5tuple_ip6","id":9},{"text":"4.6. NORMAL","hash":"_normal","id":10},{"text":"4.7. 5TUPLE_IP4","hash":"_5tuple_ip4","id":11},{"text":"4.8. DMAC_VID","hash":"_dmac_vid","id":12},{"text":"5. IS0/IS1 IPv4 filter examples","hash":"ip4_filter_examples","id":13},{"text":"6. IS0/IS1 Actions","hash":"is0_is1_actions","id":14},{"text":"7. IS0/IS1 Status","hash":"_is0is1_status","id":15}]},"87":{"id":87,"text":"ACL (access-control list) in Microchip switch products is based on VCAP IS2 lookups and can be used for the following purposes: Permit frame Drop frame Police frame Mirror frame Extract frame to CPU When a frame is received on a port it is classified into one of the following traffic types by the IS2 VCAP: Traffic Type Sparx5 LAN966x IPv4 MC ✔ · IPv4 UC ✔ · IPv6 MC ✔ · IPv6 UC ✔ · IPv4 TCP/UDP · ✔ IPv4 Other · ✔ IPv6 TCP/UDP · ✔ IPv6 Other · ✔ OAM · ✔ SNAP · ✔ LLC · ✔ ARP/RARP ✔ ✔ Other frames ✔ ✔ All frame types are subject to the appropriate lookups according to the VCAP. See VCAP Information. Each port is configured to generate a specific keyset (a set of key values extracted from a frame) for each combination of Traffic Type and lookup. A keyset is an internal value used by the hardware. A flower key is what the user specifies in the tc flower filter command. The valid combinations of Sparx5 IS2 lookup keyset versus Traffic Type are: Sparx5 IS2 keyset - Traffic Type Size IPv4 UC/MC IPv6 UC/MC ARP/RARP Other ARP 6 · · ✔ · IP4_OTHER 6 ✔ ✔ · · IP4_TCP_UDP 6 ✔ ✔ · · IP_7TUPLE 12 ✔ ✔ · · MAC_ETYPE 6 ✔ ✔ · ✔ The unicast and multicast configurations are set to the same value. The IPv4 configuration can be setup to generate IP4_TCP_UDP for IPv4 TCP/UDP traffic and IP4_OTHER for non-TCP/UDP IPv4 traffic. Similarly the IPv6 configuration can be setup to generate IP4_TCP_UDP for IPv6 TCP/UDP traffic and IP4_OTHER for non-TCP/UDP IPv6 traffic. In this release the Sparx5s port keyset configuration varies for the 4 IS2 lookups: Sparx5 IS2 Lookup - Traffic Type IPv4 UC/MC IPv6 UC/MC ARP/RARP Other Lookup 0 MAC_ETYPE MAC_ETYPE MAC_ETYPE MAC_ETYPE Lookup 1 IP4_TCP_UDP IP4_OTHER IP_7TUPLE ARP MAC_ETYPE Lookup 2 IP_7TUPLE IP_7TUPLE ARP MAC_ETYPE Lookup 3 IP_7TUPLE IP_7TUPLE MAC_ETYPE MAC_ETYPE This will most likely be changed so that all lookups use the same configuration in a future release, as it is possible to change the configuration by using a template, and LAN966x uses the same configuration for all lookups. The valid combinations of Sparx5 IS2 lookup keyset versus Traffic Type are: LAN966x IS2 keyset - Traffic Type Size IPv4 TCP/UDP IPv4 Other IPv6 TCP/UDP IP6 Other OAM SNAP ARP/RARP Other ARP 2 · · · · · · ✔ · IP4_OTHER 2 · ✔ · ✔ · · · · IP4_TCP_UDP 2 ✔ · ✔ · · · · · IP6_OTHER 4 · · · ✔ · · · · IP6_TCP_UDP 4 · · ✔ · · · · · MAC_ETYPE 2 ✔ ✔ ✔ ✔ ✔ · ✔ ✔ MAC_LLC 2 · · · · · ✔ · · MAC_SNAP 2 · · · · · ✔ · · OAM 2 · · · · ✔ · · · The IS2 VCAP has two additional lookup keys, IP6_STD and CUSTOM, which are currently not used. The IP6 keys are twice as large as the other keys which means that they occupy twice as much space in the VCAP when used. The supported flower keys for each IS2 lookup keyset are described next and here is also shown examples on how to use the actions. A more thorough description of the actions is found in the section IS2 Actions This keyset is used for both IPv4 and IPv6 traffic. It does not have IPv4 source and destination addresses though. Flower key Value Example src_mac or / src_mac 00:33:33:33:33:33 or src_mac 00:33:33:00:00:00/ff:ff:ff:00:00:00 dst_mac or / dst_mac 00:44:44:44:44:44 or dst_mac 00:44:44:00:00:00/ff:ff:ff:00:00:00 vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 vlan_ethtype vlan_ethtype 802.1q or vlan_ethtype ip Note: Supports the same values as in tc filter protocol field. ip_flags [/] ip_flags { [no]frag | [no]firstfrag } ip_tos or / ip_tos 0x12 or ip_tos 0x4/0x3f. Note: Only the 6 LSBs can be matched in IS1 (The DSCP part). src_ip src_ip 2001:0:0:0:e1de:2244:0ff8:0123 dst_ip dst_ip 2001:0:0:0:e1de:2244:0ff8:4567 ip_proto ip_proto 6, ip_proto tcp, ip_proto 17 or ip_proto udp. src_port or / src_port 1000 or src_port 0x200/0xff0 dst_port or / dst_port 2000 or dst_port 0x100/0xff0 This filter matches on classified VLAN tag, and all supported IPv6/TCP fields. The filter in inserted into chain 8200000 (lookup 2), traps all matching packets and goes to lookup 3 in IS2 (chain 8300000). # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 8200000 prio 10 handle 42 protocol 802.1q flower skip_sw \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype ipv6 \\ ip_ttl 1 \\ ip_tos 0xf/0x3f \\ src_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:0123 \\ dst_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:4567/64 \\ ip_proto tcp \\ tcp_flags 0x10/0x3f \\ src_port 1000 \\ dst_port 2000 \\ action trap \\ action goto chain 8300000 This keyset is generated when Ethertype is 0x86dd and Next header is either TCP (6) or UDP (17). Flower key Value Example vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 vlan_ethtype vlan_ethtype ipv6 ip_ttl ip_ttl 1 ip_tos or / ip_tos 0x12 or ip_tos 0x4/0x3f src_ip or / src_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:0123 or src_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:0123/32 dst_ip or / dst_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:4567 or dst_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:4567/64 ip_proto ip_proto 6, ip_proto tcp, ip_proto 17 or ip_proto udp. tcp_flags or / tcp_flags 0x1a or tcp_flags 0x10/0x3f src_port or / src_port 1000 or src_port 0x200/0xff0 dst_port or / dst_port 2000 or dst_port 0x100/0xff0 This filter matches on classified VLAN tag, and all supported IPv6/TCP fields. The filter in inserted into chain 8000000 (first lookup), drops all matching packets and goes to second lookup in IS2 (chain 8100000). # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 8000000 prio 10 handle 42 protocol 802.1q flower skip_sw \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype ipv6 \\ ip_ttl 1 \\ ip_tos 0xf/0x3f \\ src_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:0123 \\ dst_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:4567/64 \\ ip_proto tcp \\ tcp_flags 0x10/0x3f \\ src_port 1000 \\ dst_port 2000 \\ action drop \\ action goto chain 8100000 This filter is the same as above but without VLAN matching. # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 8000000 prio 10 handle 42 protocol ipv6 flower skip_sw \\ ip_ttl 1 \\ ip_tos 0xf/0x3f \\ src_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:0123 \\ dst_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:4567/64 \\ ip_proto tcp \\ tcp_flags 0x10/0x3f \\ src_port 1000 \\ dst_port 2000 \\ action drop \\ action goto chain 8100000 This keyset is generated when Ethertype is 0x86dd and Next header is neither TCP (6) nor UDP (17). Flower key Value Example vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 vlan_ethtype vlan_ethtype ipv6 ip_ttl ip_ttl 1 ip_tos or / ip_tos 0x12 or ip_tos 0x4/0x3f src_ip or / src_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:0123 or src_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:0123/32 dst_ip or / dst_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:4567 or dst_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:4567/64 ip_proto ip_proto 58 or ip_proto icmpv6. This filter matches on classified VLAN tag, and all supported IPv6 fields. The filter in inserted into chain 8000000 (first lookup), drops all matching packets and goes to second lookup in IS2 (chain 8100000). # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 8000000 prio 10 handle 42 protocol 802.1q flower skip_sw \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype ipv6 \\ ip_ttl 1 \\ ip_tos 0xf/0x3f \\ src_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:0123 \\ dst_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:4567/64 \\ ip_proto icmpv6 \\ action drop \\ action goto chain 8100000 This filter is the same as above but without VLAN matching. # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 8000000 prio 10 handle 42 protocol ipv6 flower skip_sw \\ ip_ttl 1 \\ ip_tos 0xf/0x3f \\ src_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:0123 \\ dst_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:4567/64 \\ ip_proto icmpv6 \\ action drop \\ action goto chain 8100000 This keyset is generated when Ethertype is 0x0800 and IP protocol is either TCP (6) or UDP (17). Flower key Value Example vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 vlan_ethtype vlan_ethtype ipv4 ip_ttl ip_ttl 1 ip_tos or / ip_tos 0x12 or ip_tos 0x4/0x3f ip_flags [/] ip_flags { [no]frag | [no]firstfrag } src_ip or / src_ip 10.10.10.10 or src_ip 10.10.0.0/255.255.0.0 dst_ip or / dst_ip 20.20.20.20, dst_ip 20.20.0.0/255.255.0.0 ip_proto ip_proto 6, ip_proto tcp, ip_proto 17 or ip_proto udp. tcp_flags or / tcp_flags 0x1a or tcp_flags 0x10/0x3f src_port or / src_port 1000 or src_port 0x200/0xff0 dst_port or / dst_port 2000 or dst_port 0x100/0xff0 NOTE: Sparx5: Use Lookup 1 as this is configured with the IP4_OTHER keyset. The drop action is not available for IS2. This filter matches on classified VLAN tag, and all supported IPv4/TCP fields. The filter in inserted into chain 8000000 (first lookup), drops all matching packets and goes to second lookup in IS2 (chain 8100000). # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 8000000 prio 10 handle 42 protocol 802.1q flower skip_sw \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype ipv4 \\ ip_ttl 1 \\ ip_tos 0xf/0x3f \\ ip_flags frag/nofirstfrag \\ src_ip 10.10.10.10 \\ dst_ip 20.20.20.20/255.255.0.0 \\ ip_proto tcp \\ tcp_flags 0x10/0x3f \\ src_port 1000 \\ dst_port 2000 \\ action drop \\ action goto chain 8100000 This filter is the same as above but without VLAN matching. # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 8000000 prio 10 handle 42 protocol ipv4 flower skip_sw \\ ip_ttl 1 \\ ip_tos 0xf/0x3f \\ ip_flags frag/nofirstfrag \\ src_ip 10.10.10.10 \\ dst_ip 20.20.20.20/255.255.0.0 \\ ip_proto tcp \\ tcp_flags 0x10/0x3f \\ src_port 1000 \\ dst_port 2000 \\ action drop \\ action goto chain 8100000 This keyset is generated when Ethertype is 0x0800 and IP protocol is neither TCP (6) nor UDP (17). Flower key Value Example vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 vlan_ethtype vlan_ethtype ipv4 ip_ttl ip_ttl 1 ip_tos or / ip_tos 0x12 or ip_tos 0x4/0x3f ip_flags [/] ip_flags { [no]frag | [no]firstfrag } src_ip or / src_ip 10.10.10.10 or src_ip 10.10.0.0/255.255.0.0 dst_ip or / dst_ip 20.20.20.20, dst_ip 20.20.0.0/255.255.0.0 ip_proto ip_proto 1 or ip_proto icmp. This filter matches on classified VLAN tag, and all supported IPv4 fields. The filter in inserted into chain 8000000 (first lookup), drops all matching packets and goes to second lookup in IS2 (chain 8100000). Sparx5: Use Lookup 1 as this is configured with the IP4_OTHER keyset. The drop action is not available for IS2. # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 8000000 prio 10 handle 42 protocol 802.1q flower skip_sw \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype ipv4 \\ ip_ttl 1 \\ ip_tos 0xf/0x3f \\ ip_flags frag/nofirstfrag \\ src_ip 10.10.10.10 \\ dst_ip 20.20.20.20/255.255.0.0 \\ ip_proto icmp \\ action drop \\ action goto chain 8100000 This filter is the same as above but without VLAN matching. # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 8000000 prio 10 handle 42 protocol ipv4 flower skip_sw \\ ip_ttl 1 \\ ip_tos 0xf/0x3f \\ ip_flags frag/nofirstfrag \\ src_ip 10.10.10.10 \\ dst_ip 20.20.20.20/255.255.0.0 \\ ip_proto icmp \\ action drop \\ action goto chain 8100000 This keyset is generated when Ethertype is 0x0806 (ARP) or 0x8035 (RARP). Flower key Value Example vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 vlan_ethtype vlan_ethtype arp or vlan_ethtype rarp src_mac or / src_mac 00:33:33:33:33:33 or src_mac 00:33:33:00:00:00/ff:ff:ff:00:00:00 arp_tip or / arp_tip 10.10.10.10 or arp_tip 10.10.0.0/255.255.0.0 arp_sip or / arp_sip 10.10.10.10 or arp_sip 10.10.0.0/255.255.0.0 arp_op request or reply arp_op request or arp_op reply This filter matches on classified VLAN tag, and all supported IPv4 fields. The filter in inserted into chain 8000000 (first lookup), drops all matching packets and goes to second lookup in IS2 (chain 8100000). # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 8000000 prio 10 handle 42 protocol 802.1q flower skip_sw \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype arp \\ src_mac 00:33:33:33:33:33 \\ arp_tip 10.10.10.10 \\ arp_sip 20.20.20.20/255.255.0.0 \\ arp_op reply \\ action drop \\ action goto chain 8100000 This filter is the same as above but without VLAN matching. # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 8000000 prio 10 handle 42 protocol arp flower skip_sw \\ src_mac 00:33:33:33:33:33 \\ arp_tip 10.10.10.10 \\ arp_sip 20.20.20.20/255.255.0.0 \\ arp_op reply \\ action drop \\ action goto chain 8100000 Sparx5: Use Lookup 1 or 2 as this is configured with the ARP keyset. The drop action is not available for IS2. This keyset is generated when Ethertype is 0x8809 (Ethernet slow protocols), 0x88ee (MEF 16 E-LMI) or 0x8902 (IEEE 802.1ag Connectivity Fault Management). Flower key Value Example vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 vlan_ethtype vlan_ethtype 0x8809, vlan_ethtype 0x88ee or vlan_ethtype 0x8902 src_mac or / src_mac 00:33:33:33:33:33 or src_mac 00:33:33:00:00:00/ff:ff:ff:00:00:00 dst_mac or / dst_mac 00:44:44:44:44:44 or dst_mac 00:44:44:00:00:00/ff:ff:ff:00:00:00 This filter matches on classified VLAN tag, and all supported OAM fields. The filter in inserted into chain 8000000 (first lookup), drops all matching packets and goes to second lookup in IS2 (chain 8100000). # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 8000000 prio 10 handle 42 protocol 802.1q flower skip_sw \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype 0x8809 \\ src_mac 00:33:33:33:33:33 \\ dst_mac 00:44:44:44:00:00/ff:ff:ff:ff:00:00 \\ action drop \\ action goto chain 8100000 This filter is the same as above but without VLAN matching. # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 8000000 prio 10 handle 42 protocol 0x8809 flower skip_sw \\ src_mac 00:33:33:33:33:33 \\ dst_mac 00:44:44:44:00:00/ff:ff:ff:ff:00:00 \\ action drop \\ action goto chain 8100000 This keyset is generated when Ethertype is less than 0x600 and LLC header is a SNAP header (0xaaaa03). Flower key Value Example vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 vlan_ethtype vlan_ethtype snap src_mac or / src_mac 00:33:33:33:33:33 or src_mac 00:33:33:00:00:00/ff:ff:ff:00:00:00 dst_mac or / dst_mac 00:44:44:44:44:44 or dst_mac 00:44:44:00:00:00/ff:ff:ff:00:00:00 This filter matches on classified VLAN tag, and all supported SNAP fields. The filter in inserted into chain 8000000 (first lookup), drops all matching packets and goes to second lookup in IS2 (chain 8100000). # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 8000000 prio 10 handle 42 protocol 802.1q flower skip_sw \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype snap \\ src_mac 00:33:33:33:33:33 \\ dst_mac 00:44:44:44:00:00/ff:ff:ff:ff:00:00 \\ action drop \\ action goto chain 8100000 This filter is the same as above but without VLAN matching. # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 8000000 prio 10 handle 42 protocol snap flower skip_sw \\ src_mac 00:33:33:33:33:33 \\ dst_mac 00:44:44:44:00:00/ff:ff:ff:ff:00:00 \\ action drop \\ action goto chain 8100000 This keyset is generated when Ethertype is less than 0x600 and LLC header is not a SNAP header. Flower key Value Example vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 vlan_ethtype vlan_ethtype 802_2 src_mac or / src_mac 00:33:33:33:33:33 or src_mac 00:33:33:00:00:00/ff:ff:ff:00:00:00 dst_mac or / dst_mac 00:44:44:44:44:44 or dst_mac 00:44:44:00:00:00/ff:ff:ff:00:00:00 This filter matches on classified VLAN tag, and all supported LLC fields. The filter in inserted into chain 8000000 (first lookup), drops all matching packets and goes to second lookup in IS2 (chain 8100000). # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 8000000 prio 10 handle 42 protocol 802.1q flower skip_sw \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype 802_2 \\ src_mac 00:33:33:33:33:33 \\ dst_mac 00:44:44:44:00:00/ff:ff:ff:ff:00:00 \\ action drop \\ action goto chain 8100000 This filter is the same as above but without VLAN matching. # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 8000000 prio 10 handle 42 protocol 802_2 flower skip_sw \\ src_mac 00:33:33:33:33:33 \\ dst_mac 00:44:44:44:00:00/ff:ff:ff:ff:00:00 \\ action drop \\ action goto chain 8100000 This keyset is generated when frame is not classified to one of the above keys. Flower key Value Example vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 vlan_ethtype vlan_ethtype 0x892f or vlan_ethtype hsr src_mac or / src_mac 00:33:33:33:33:33 or src_mac 00:33:33:00:00:00/ff:ff:ff:00:00:00 dst_mac or / dst_mac 00:44:44:44:44:44 or dst_mac 00:44:44:00:00:00/ff:ff:ff:00:00:00 This filter matches on classified VLAN tag, and all supported ETYPE fields. The filter in inserted into chain 8000000 (first lookup), drops all matching packets and goes to second lookup in IS2 (chain 8100000). # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 8000000 prio 10 handle 42 protocol 802.1q flower skip_sw \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype hsr \\ src_mac 00:33:33:33:33:33 \\ dst_mac 00:44:44:44:00:00/ff:ff:ff:ff:00:00 \\ action drop \\ action goto chain 8100000 Sparx5: The HSR ethtype is not supported. The drop action is not available for IS2. This filter is the same as above but without VLAN matching. # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 8000000 prio 10 handle 42 protocol hsr flower skip_sw \\ src_mac 00:33:33:33:33:33 \\ dst_mac 00:44:44:44:00:00/ff:ff:ff:ff:00:00 \\ action drop \\ action goto chain 8100000 The IS2 lookups supports the actions shown in this table. Some actions are only supported on one switch and some action are not available in all lookups. Flower action Example Description Sparx5 LAN966x pass action pass This is a no-op action. ✔ ✔ trap action trap Drop the frame and send a copy to the CPU. ✔ ✔ drop action drop Drop the frame. ✔ ✔ police rate burst action police rate 100kbit burst 16000 Police the frames to a specific bit rate. ✔ Only Lookup 0 mirror to dev action mirred egress mirror dev eth3 Mirror the frame on monitor port eth3. ✔ ✔ redirect to dev action mirred egress redirect dev eth3 Redirect the frame to port eth3. ✔ · goto chain action goto chain 8100000 Which chain to go to after this match. A no-op action in second lookup. In first lookup the chain number is used to match the PAG value that was assigned in the third lookup in the IS1 VCAP. ✔ ✔ Use the tc filter show command to see the filter configuration for a specific port. Add -s to also see the statistics: # tc -s filter show dev eth2 ingress filter protocol all pref 65535 flower chain 1200000 filter protocol all pref 65535 flower chain 1200000 handle 0x2a dst_mac 00:44:44:44:44:44/24 src_mac 00:33:33:33:33:33/24 skip_sw in_hw in_hw_count 1 action order 1: gact action goto chain 8000002 random type none pass val 0 index 1 ref 1 bind 1 installed 11 sec used 11 sec Action statistics: Sent 0 bytes 10014 pkt (dropped 0, overlimits 0 requeues 0) Sent software 0 bytes 0 pkt Sent hardware 0 bytes 10014 pkt backlog 0b 0p requeues 0 used_hw_stats immediate filter protocol all pref 100 flower chain 8000002 filter protocol all pref 100 flower chain 8000002 handle 0xc8 skip_sw in_hw in_hw_count 1 action order 1: police 0xa rate 100Mbit burst 16000b mtu 2Kb action reclassify overhead 0b ref 2 bind 1 installed 6 sec used 6 sec Action statistics: Sent 0 bytes 10000 pkt (dropped 0, overlimits 0 requeues 0) Sent software 0 bytes 0 pkt Sent hardware 0 bytes 10000 pkt backlog 0b 0p requeues 0 used_hw_stats immediate action order 2: gact action goto chain 8100000 random type none pass val 0 index 2 ref 1 bind 1 installed 6 sec used 6 sec Action statistics: Sent 0 bytes 10000 pkt (dropped 0, overlimits 0 requeues 0) Sent software 0 bytes 0 pkt Sent hardware 0 bytes 10000 pkt backlog 0b 0p requeues 0 used_hw_stats immediate First comes information about the filter, then the match and finally the actions including statistics. The number of frames that has his the filter is shown as Sent hardware 0 bytes 10000 pkt. Note that the hardware does not support counting the number of bytes and frames dropped by a policer when using IS2. In the current kernel the same statistics are shown for all actions in a filter. This might change in the future. The example above also includes a rule in LAN966x IS1, chain 1200000, with a single action goto chain 8000002.","title":"","component":"bsp","version":"2023.12","name":"tc-is2","url":"/bsp/2023.12/tc/tc-is2.html","titles":[{"text":"1. ACL (IS2)","hash":"acl_is2","id":1},{"text":"2. Sparx5 IS2 ACL frame classification","hash":"_sparx5_is2_acl_frame_classification","id":2},{"text":"3. LAN966x IS2 ACL frame classification","hash":"_lan966x_is2_acl_frame_classification","id":3},{"text":"4. IS2 keysets","hash":"_is2_keysets","id":4},{"text":"4.1. IP_7TUPLE","hash":"_ip_7tuple","id":5},{"text":"4.2. IP6_TCP_UDP","hash":"_ip6_tcp_udp","id":6},{"text":"4.3. IP6_OTHER","hash":"_ip6_other","id":7},{"text":"4.4. IP4_TCP_UDP","hash":"_ip4_tcp_udp","id":8},{"text":"4.5. IP4_OTHER","hash":"_ip4_other","id":9},{"text":"4.6. ARP","hash":"_arp","id":10},{"text":"4.7. OAM","hash":"_oam","id":11},{"text":"4.8. MAC_SNAP","hash":"_mac_snap","id":12},{"text":"4.9. MAC_LLC","hash":"_mac_llc","id":13},{"text":"4.10. MAC_ETYPE","hash":"_mac_etype","id":14},{"text":"4.11. IS2 Actions","hash":"is2-actions","id":15},{"text":"4.12. IS2 Status","hash":"_is2_status","id":16}]},"88":{"id":88,"text":"The handling has impact on the frame on ingress: Give frame classified Priority. Give frame classified DPL (Drop Precedence Level). Give frame classified PCP. Give frame classified DEI. The handling has impact on the frame on egress: Scheduling the frame Shaping the frame Give the PCP and DEI value in the VLAN tag. The consequences of frame classified values are generally described in the Frame Metadata section. Default classified Priority, DPL, PCP and DEI can be configured per bridge device. The default PCP and DEI are only relevant for frames that are classified as untagged. The ingress default value can be given by this command: qos i_def eth0 --prio 5 --pcp 5 --dei 1 --dpl 1 The parameters: eth0 - The device is eth0 prio - The default priority value. pcp - The default PCP value. dei - The default DEI value. dpl - The default Drop Precedence Level value. A frame will get default PCP and DEI classified values. A tagged frame will get Tag PCP and DEI as classified PCP and DEI values. A global table mapping the trusted DSCP value of an IP frame to the classified Priority and DPL can be configured. Per port it can be configured if mapping of DSCP should happen or not. A trusted DSCP value can be inserted in the table by this command: qos i_dscp_map 22 --enable 1 --prio 5 --dpl 1 The parameters: 22 - The inserted trusted DSCP value is 22. enable 1 - The DSCP value is enabled in the table. prio - The mapped to priority value. dpl - The mapped to Drop Precedence Level value. This is overwriting the default classified values. A trusted DSCP value can be removed from the table by this command: qos i_dscp_map 22 --enable 0 The parameters: 22 - The removed trusted DSCP value is 22. enable 0 - The DSCP value is removed from the table. A table per bridge device, mapping the PCP and DEI values from a tagged ingress frame to classified Priority and DPL, can be configured. The ingress tag mapping table can be given by this command: qos i_tag_map eth0 --prio 0123456701234567 --dpl 0000000011111111 The parameters: eth0 - The device is eth0 prio - The map of TAG PCP,DEI to Priority. PCP(0-7)/DEI(0) and PCP(0-7)/DEI(1) dpl - The map of TAG PCP,DEI to (color)DPL. PCP(0-7)/DEI(0) and PCP(0-7)/DEI(1) The above command configures what is default: PCP 0-7 is mapping to Prio 0-7 for both DEI 0 and 1. PCP 0-7 is mapping to DPL 0 for DEI 0 and DPL 1 for DEI 1. qos i_tag_map eth0 --prio 22244477111333666 --dpl 1111111100000000 The above command configures: PCP 0-2 is mapping to Prio 2 for DEI 0, PCP 3-5 is mapping to Prio 4 for DEI 0, PCP 6-7 is mapping to Prio 7 for DEI 0, PCP 0-2 is mapping to Prio 1 for DEI 1, PCP 3-5 is mapping to Prio 3 for DEI 1, PCP 6-7 is mapping to Prio 6 for DEI 1, PCP 0-7 is mapping to DPL 1 for DEI 0 and DPL 0 for DEI 1. The ingress mode per bridge device can be configured. The ingress mode determines how the frame classified Priority and DPL values are given. The ingress mode can be given by this command: qos i_mode eth0 --tag 0 --dscp 0 The parameters: eth0 - The device is eth0 tag - Mapping of TAG PCP/DEI is disabled. dscp - Mapping of trusted DSCP is disabled. The above command gives frame the default Prio/DPL values for the device as both mapping types are disabled. qos i_mode eth0 --tag 1 --dscp 0 The above command gives frames the tag PCP/DEI mapped to classified Prio/DPL values. qos i_mode eth0 --tag 1 --dscp 1 The above command gives frames the tag PCP/DEI mapped to classified Prio/DPL values. Any IP frame with a DSCP value matching an entry in the global DSCP mapping table will get classified Prio/DPL values from the DSCP mapping table.","title":"Basic QoS functional description","component":"bsp","version":"2024.03","name":"basic_qos","url":"/bsp/2024.03/basic_qos.html","titles":[{"text":"1. Bridge device Default Configuration.","hash":"_bridge_device_default_configuration","id":1},{"text":"2. Frame DSCP value to Prio/DPL mapping.","hash":"_frame_dscp_value_to_priodpl_mapping","id":2},{"text":"3. Tag PCP/DEI to Prio/DPL mapping.","hash":"_tag_pcpdei_to_priodpl_mapping","id":3},{"text":"4. Ingress mode.","hash":"_ingress_mode","id":4}]},"89":{"id":89,"text":"The purpose of the bootloader is to load the Linux kernel into memory together with any other required data (e.g ramdisk image or device tree) and then execute the kernel with appropriate arguments. Microchip uses the U-Boot bootloader which is an integrated part of Buildroot. Targets have been prepared for each of our reference boards: arm_bootloaders - For use on 32 bit ARM based reference boards. arm_bootloaders_bbb - For use on 32 bit ARM based Beagle Bone Black boards as external CPU. arm64_bootloaders - For use on 64 bit ARM based reference boards. arm64_bootloaders_ls1046 - For use on 64 bit ARM based LS1046 boards as external CPU. arm64_bootloaders_rpi - For use on 64 bit ARM based Raspberry Pi Compute Module 4 boards as external CPU. mipsel_bootloaders - For use on all our 32 bit MIPS based reference boards. These targets can be used as a reference if you need to adapt the bootloader to a different board. A bootloader target can be built in the same way as the other targets as described in the Build section. See the individual sections in Supported HW in order to see how to boot a specific board.","title":"Bootloader","component":"bsp","version":"2024.03","name":"bootloader","url":"/bsp/2024.03/bootloader.html","titles":[]},"90":{"id":90,"text":"A switchdev enabled switch does not contain any bridge by default. All network interfaces works as standard Ethernet devices. Use the ip link add command to create a bridge called br0: # ip link add name br0 type bridge It is not possible to create more than one bridge at a time on Microchip switch products. A bridge is VLAN-unaware by default, which means that it doesn’t recognizes VLAN tags. If the bridge should recognize VLAN tags and be able to insert/remove VLAN tags, it must be configured to be VLAN-aware: # ip link set br0 type bridge vlan_filtering 1 To change the bridge back to be VLAN-unaware: # ip link set br0 type bridge vlan_filtering 0 Add the interfaces that should be part of the bridge: # ip link set eth0 master br0 Enable the interfaces and the bridge: # ip link set eth0 up # ip link set br0 up Use the ip link del command to delete a bridge: # ip link del name br0 The command above removes the interfaces from the bridge automatically but you can also remove them manually: # ip link set dev eth0 nomaster The following commands will create a vlan-aware bridge with four interfaces: # ip link add name br0 type bridge # ip link set br0 type bridge vlan_filtering 1 # ip link set eth0 master br0 # ip link set eth1 master br0 # ip link set eth2 master br0 # ip link set eth3 master br0 # ip link set eth0 up # ip link set eth1 up # ip link set eth2 up # ip link set eth3 up # ip link set br0 up The bridge created above can be illustrated like this: To see information about the interfaces: # ip link show 1: lo: mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 3: eth0: mtu 1500 qdisc mq master br0 state UP mode DEFAULT group default qlen 1000 link/ether 00:40:42:04:98:9b brd ff:ff:ff:ff:ff:ff 4: eth1: mtu 1500 qdisc mq master br0 state UP mode DEFAULT group default qlen 1000 link/ether 00:40:42:04:98:9c brd ff:ff:ff:ff:ff:ff 5: eth2: mtu 1500 qdisc mq master br0 state UP mode DEFAULT group default qlen 1000 link/ether 00:40:42:04:98:9d brd ff:ff:ff:ff:ff:ff 6: eth3: mtu 1500 qdisc mq master br0 state UP mode DEFAULT group default qlen 1000 link/ether 00:40:42:04:98:9e brd ff:ff:ff:ff:ff:ff 7: sit0@NONE: mtu 1480 qdisc noop state DOWN mode DEFAULT group default qlen 1000 link/sit 0.0.0.0 brd 0.0.0.0 8: br0: mtu 1500 qdisc noqueue state UP mode DEFAULT group default qlen 1000 link/ether 00:40:42:04:98:9b brd ff:ff:ff:ff:ff:ff To see information about the bridge: # bridge link show 3: eth0: mtu 1500 master br0 state forwarding priority 32 cost 4 4: eth1: mtu 1500 master br0 state forwarding priority 32 cost 4 5: eth2: mtu 1500 master br0 state forwarding priority 32 cost 4 6: eth3: mtu 1500 master br0 state forwarding priority 32 cost 4 To allow communication between the CPU and hosts on any of the bridge ports, it is necessary to assign an IP address to the bridge itself and NOT to the individual interfaces. To assign an IP address on the bridge itself and check the status: # ip addr set dev br0 192.168.1.1 # ip addr show dev br0 8: br0: mtu 1500 qdisc noqueue state UP group default qlen 1000 link/ether 00:00:00:01:00:00 brd ff:ff:ff:ff:ff:ff inet 192.168.1.1/24 scope global br0 valid_lft forever preferred_lft forever inet6 fe80::cc8f:1ff:fe4b:10c9/64 scope link valid_lft forever preferred_lft forever It is now possible to ping hosts on the same subnet: # ping 192.168.1.2 PING 192.168.1.2 (192.168.1.2) 56(84) bytes of data. 64 bytes from 192.168.1.2: icmp_seq=1 ttl=64 time=0.700 ms 64 bytes from 192.168.1.2: icmp_seq=2 ttl=64 time=0.270 ms 64 bytes from 192.168.1.2: icmp_seq=3 ttl=64 time=0.257 ms 64 bytes from 192.168.1.2: icmp_seq=4 ttl=64 time=0.266 ms ^C --- 192.168.1.2 ping statistics --- 4 packets transmitted, 4 received, 0% packet loss, time 3077ms rtt min/avg/max/mdev = 0.257/0.373/0.700/0.188 ms If a bridge is VLAN-aware it is possible to assign a port to one or more VLANs. By default all ports are member of VLAN 1: # bridge vlan show port vlan-id eth0 1 PVID Egress Untagged eth1 1 PVID Egress Untagged eth2 1 PVID Egress Untagged eth3 1 PVID Egress Untagged br0 1 PVID Egress Untagged A VLAN can be associated with the following flags: PVID - Port VID. Untagged frames received at ingress are assigned to this VLAN. Egress Untagged - Untag on egress. Frames in this VLAN are sent as untagged at egress. Both PVID and Egress Untagged can only be assigned to one VLAN at a time, but it does not need to be the same VLAN. Add VLAN 100 on eth0: # bridge vlan add dev eth0 vid 100 Delete VLAN 100 on eth0: # bridge vlan del dev eth0 vid 100 If you want to assign PVID and/or Egress Untagged to a new VLAN you must first delete the VLAN that currently own the flags. If you want to keep the old VLAN you must add it again without the flags: # bridge vlan del dev eth0 vid 1 # bridge vlan add dev eth0 vid 1 # bridge vlan add dev eth0 vid 100 pvid untagged # bridge vlan del dev eth1 vid 1 # bridge vlan add dev eth1 vid 1 # bridge vlan add dev eth1 vid 100 pvid untagged # bridge vlan show port vlan-id eth0 1 100 PVID Egress Untagged eth1 1 100 PVID Egress Untagged eth2 1 PVID Egress Untagged eth3 1 PVID Egress Untagged br0 1 PVID Egress Untagged If you want the CPU on the switch to be part of a VLAN you must add the VLAN to the bridge interface: # bridge vlan del dev eth0 vid 1 # bridge vlan add dev eth0 vid 1 # bridge vlan add dev eth0 vid 100 pvid untagged # bridge vlan del dev eth1 vid 1 # bridge vlan add dev eth1 vid 1 # bridge vlan add dev eth1 vid 100 pvid untagged # bridge vlan del dev br0 vid 1 self # bridge vlan add dev br0 vid 1 self # bridge vlan add dev br0 vid 100 pvid untagged self # bridge vlan show port vlan-id eth0 1 100 PVID Egress Untagged eth1 1 100 PVID Egress Untagged eth2 1 PVID Egress Untagged eth3 1 PVID Egress Untagged br0 1 100 PVID Egress Untagged You must use the keyword self when assigning a VLAN to a bridge because it’s the bridge itself. The MAC table, also known as the Forwarding Data Base (FDB), contains entries that map the [MAC addresse, VID] tupple to a port. If the bridge is configured to be VLAN-unaware, the VID is 1 by default and does not need to be specified in any of the MAC table commands. The MAC table consists of different kind of entries and will normally be one of: permanent - Assigned by the system - e.g. the MAC address of an interface. static - Assigned by the user. dynamic - Learned on one of the network interfaces and subject to ageing. To add a static MAC entry: # bridge fdb add 00:11:11:11:11:11 dev eth1 vlan 1 master static To delete a static MAC entry: # bridge fdb del 00:11:11:11:11:11 dev eth1 vlan 1 master static Dynamic MAC address entries are removed from the MAC table if the bridge has not seen the MAC address after a specific amount of time. This time is called the ageing time and is 300 seconds by default. To change the ageing time to 600 seconds: # ip link set br0 type bridge ageing_time 600 To show the content of the MAC table: # bridge fdb show 00:22:22:22:22:22 dev eth0 vlan 1 extern_learn offload master br0 00:40:42:04:98:9b dev eth0 master br0 permanent 01:00:5e:00:00:01 dev eth0 self permanent 00:11:11:11:11:11 dev eth1 vlan 1 master br0 static 00:40:42:04:98:9c dev eth1 vlan 1 master br0 permanent 00:40:42:04:98:9c dev eth1 master br0 permanent 01:00:5e:00:00:01 dev eth1 self permanent 00:40:42:04:98:9b dev eth2 vlan 1 offload master br0 00:40:42:04:98:9d dev eth2 vlan 1 master br0 permanent 00:40:42:04:98:9d dev eth2 master br0 permanent 01:00:5e:00:00:01 dev eth2 self permanent 00:40:42:04:98:9e dev eth3 vlan 1 master br0 permanent 00:40:42:04:98:9e dev eth3 master br0 permanent 01:00:5e:00:00:01 dev eth3 self permanent 01:00:5e:00:00:6a dev br0 self permanent 01:00:5e:00:00:01 dev br0 self permanent Static entries are marked as static and dynamic entries are market as extern_learn offload. Mirroring is used to send a copy of received or transmitted frames seen on one or more ports to a monitor port. This is useful for debugging of network problems. Mirroring is controlled by a combination of tc qdisc and tc filter commands. See also the TC Introduction page for a general introduction to tc commands. Mirroring all ingress traffic on port eth0 to monitor port eth3: # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress prio 1 handle 1 matchall skip_sw \\ action mirred egress mirror dev eth3 To delete the mirroring above: # tc filter del dev eth0 ingress prio 1 handle 1 matchall # tc qdisc del dev eth0 clsact Mirroring all egress traffic on port eth1 to monitor port eth3: # tc qdisc add dev eth1 clsact # tc filter add dev eth1 egress prio 1 handle 1 matchall skip_sw \\ action mirred egress mirror dev eth3 To delete the mirroring above: # tc filter del dev eth1 egress prio 1 handle 1 matchall # tc qdisc del dev eth1 clsact It is not possible to use more than one monitor port. The tc filter command will fail if you try to configure a second monitor port. It is also possible to mirror selected ingress traffic on a port and this is described on the ACL (IS2) page. Link Aggregation is a way of combining two or more ports to act as a single port. It can be used to increase the throughput of a link or to provide redundancy. The ports that are combined are called a Link Aggregation Group (LAG). Link Aggregation is implemented by using bond interfaces on Microchip switch products. Two different modes are supported: balance-xor - Select the egress interface by xor-ing different parts of the packet selected by the Transmit Hash Policy 802.3ad - Same as above supplemented with running the LACP protocol which actively checks the connectivity between the links. To create a bond interface called bond0: # ip link add name bond0 type bond Configure the bond interface to check link status on associated links every 100 milliseconds: # ip link set bond0 type bond miimon 100 Configure the bond interface to use balance-xor mode: # ip link set bond0 type bond mode balance-xor Or configure the bond interface to use 802.3ad mode: # ip link set bond0 type bond mode 802.3ad # ip link set bond0 type bond lacp_rate fast The LACP hello rate lacp_rate can be set to one of the following values: slow - Check the link connectivity every 30 seconds. fast - Check the link connectivity every second. Configure the Transmit Hash Policy to use fields from both layer 2 and 3 in the xor algorithm: # ip link set bond0 type bond xmit_hash_policy layer2+3 Supported values are: layer2 - XOR lower 12 bits of DMAC and SMAC. layer2+3 - XOR lower 12 bits of DMAC and SMAC and lower 8 bits of IPv4/IPv6 SIP and DIP. layer3+4 - XOR lower 8 bits of IPv4/IPv6 SIP and DIP and lower 8 bits of SPORT and DPORT. Enable the bond interface: # ip link set bond0 up Add a port to the bond interface (the port must be down before adding it): # ip link set eth0 down # ip link set eth0 master bond0 # ip link set eth0 up The following commands creates a bond interface, bond0, which contains the ports eth0, eth1 and eth2. # ip link add name bond0 type bond # ip link set bond0 type bond miimon 100 # ip link set bond0 type bond mode balance-xor # ip link set bond0 type bond xmit_hash_policy layer2+3 # ip link set bond0 up # ip link set eth0 down # ip link set eth1 down # ip link set eth2 down # ip link set eth0 master bond0 # ip link set eth1 master bond0 # ip link set eth2 master bond0 # ip link set eth0 up # ip link set eth1 up # ip link set eth2 up Now create a bridge with two interfaces - one is the bond interface created above and the other is eth3: # ip link add name br0 type bridge # ip link set dev br0 up # ip link set bond0 master br0 # ip link set eth3 master br0 The bridge/bond combination created above can be illustrated like this: Show the bond status and the bridge: # cat /proc/net/bonding/bond0 Ethernet Channel Bonding Driver: v5.10.0-01203-gb80a6c394df4-dirty Bonding Mode: load balancing (xor) Transmit Hash Policy: layer2+3 (2) MII Status: up MII Polling Interval (ms): 100 Up Delay (ms): 0 Down Delay (ms): 0 Peer Notification Delay (ms): 0 Slave Interface: eth0 MII Status: up Speed: 1000 Mbps Duplex: full Link Failure Count: 0 Permanent HW addr: 00:40:42:04:98:9b Slave queue ID: 0 Slave Interface: eth1 MII Status: up Speed: 1000 Mbps Duplex: full Link Failure Count: 0 Permanent HW addr: 00:40:42:04:98:9c Slave queue ID: 0 Slave Interface: eth2 MII Status: up Speed: 1000 Mbps Duplex: full Link Failure Count: 0 Permanent HW addr: 00:40:42:04:98:9d Slave queue ID: 0 # bridge link show 6: eth3: mtu 1500 master br0 state forwarding priority 32 cost 4 8: bond0: mtu 1500 master br0 state forwarding priority 32 cost 4 IGMP/MLD Snooping is a layer 2 mechanism for reducing multicast traffic in a network. IGMP is for IPv4 and MLD is for IPv6. The switch listens to IGMP/MLD conversations between hosts and routers and remembers the ports that are using IP multicast transmissions. The switch will only forward multicast traffic to ports where an interest has been seen. This will reduce both network traffic and the load on hosts. IGMP/MLD Snooping is enabled by default and ports are configured to automatically detect if a multicast router is present on the port. To disable IGMP/MLD Snooping: # ip link set dev br0 type bridge mcast_snooping 0 To permanently disable multicast routers on a port: # ip link set dev eth0 type bridge_slave mcast_router 0 To let the port detect the presence of multicast routers (default): # ip link set dev eth0 type bridge_slave mcast_router 1 To permanently enable multicast forwarding on a port, even if no multicast router is detected: # ip link set dev eth0 type bridge_slave mcast_router 2 IGMP Snooping supports IGMP version 2 and 3 where version 2 is default. To change to use IGMP version 3: # ip link set dev br0 type bridge mcast_igmp_version 3 MLD Snooping supports MLD version 1 and 2 where version 1 is default. To change to use MLD version 2: # ip link set dev br0 type bridge mcast_mld_version 2 To enable a IGMP/MLD Querier on the bridge (default is disabled): # ip link set dev br0 type bridge mcast_querier 1 To see other IGMP/MLD related configuration options: # ip link help bridge Search for options starting with mcast_ It is possible also to enable/disable IGMP/MLD per vlan. First it is needed to enable mcast_vlan_snooping: # ip link set dev br0 type bridge mcast_vlan_snooping 1 Then all the previous configurations that were added per bridge can be added also per vlan, for example enabling a IGMP/MLD Querier: # bridge vlan global set dev br0 vid 256 mcast_querier 1 To see other IGMP/MLD related configuration options per vlan: # bridge vlan global help To see IGMP status/statistics: # cat /proc/net/igmp To see MLD status/statistics: # cat /proc/net/igmp6 Spanning Tree Protocol is implemented by the open source user-space daemon mstpd which is automatically started when the Spanning Tree Protocol is enabled on a bridge. mstpd supports Rapid Spanning Tree (RSTP) which is defined in IEEE 802.1w. The Linux kernel implementation of the Spanning Tree Protocol has no support for RSTP. RSTP is an improvement of the original Spanning Tree Protocol (STP) defined in IEEE 802.1D. It provides faster recovery in response to changes in the network topology. mstpd runs RSTP by default but falls back to STP if it receives an STP BPDU. To enable Spanning Tree Protocol on a bridge: # ip link set dev br0 type bridge stp_state 1 To disable Spanning Tree Protocol on a bridge: # ip link set dev br0 type bridge stp_state 0 The Spanning Tree Protocol on bridges managed by mstpd cannot be controlled by the brctl tool. Use the mstpctl tool instead! To show the current Spanning Tree Protocol status on a bridge: # mstpctl showbridge # mstpctl showbridge br0 To show the current Spanning Tree Protocol status on one or all port(s): # mstpctl showport br0 eth0 # mstpctl showport br0 To show the current Spanning Tree Protocol statistics on one or all port(s): # mstpctl showportdetail br0 eth0 # mstpctl showportdetail br0 To force STP instead of RSTP: # mstpctl setforcevers br0 stp RSTP normally works 'out of the box' when enabled but it is possible to use mstpctl to fine-tune the spanning tree settings. To see all the supported mstpctl options: # mstpctl","title":"Bridge Configuration","component":"bsp","version":"2024.03","name":"bridge_configuration","url":"/bsp/2024.03/bridge_configuration.html","titles":[{"text":"1. IP address","hash":"_ip_address","id":1},{"text":"2. VLAN","hash":"bridge_vlan","id":2},{"text":"3. MAC table","hash":"_mac_table","id":3},{"text":"4. Mirroring","hash":"_mirroring","id":4},{"text":"5. Link Aggregation","hash":"_link_aggregation","id":5},{"text":"6. IGMP/MLD Snooping","hash":"_igmpmld_snooping","id":6},{"text":"7. Spanning Tree Protocol","hash":"_spanning_tree_protocol","id":7}]},"91":{"id":91,"text":"","title":"Bridge Overview of hardware offload","component":"bsp","version":"2024.03","name":"bridge_overview","url":"/bsp/2024.03/bridge_overview.html","titles":[]},"92":{"id":92,"text":"CFM is Connectivity Fault Management as described in 802.1Q section 20. The Microchip switch has a HW Engine that supports a range of functionality that is related to the handling of OAM frames at both ingress and egress directions. What is supported differs depending on the exact platform. If a described functionality is not supported on all platforms it will be stated. Currently, the following is supported: Creating/Deleting a Port domain MEP Enable/Disable CCM PDU handling. Adding/Removing Peer MEPs. CCM PDU handling. The MEP handling has an impact on the frame on ingress: MEG level filtering CCM Frame reception interval monitoring. CCM defect (LOC) generation. The MEP handling has an impact on the frame on egress: MEG level filtering CCM Frame Transmission. CCM Frame updating with RDI. One Down Port domain MEP can be created per bridge device (port). The MEP will prevent any leaking of OAM PDU in and out of the MEG. Ingress CCM frames on the configured MEG level and below will be handled by the MEP. CCM frame will be transmitted with the configured MEG level. This is a model of the possible MEP configuration: MEP Model First a bridge must be created and devices (ports) must be added: ip link add name br0 type bridge ip link set dev eth0 master br0 ip link set dev eth1 master br0 The bridge is br0 with eth0 and eth1 as devices (ports) This is creating a MEP instance: cfm mep-create bridge br0 instance 10 domain port direction down port eth0 The bridge is br0. The device (port) is eth0. Instance number is 10. Domain is port. Direction is down The MEP is in the Port domain meaning OAM frames are untagged and not related to any VLAN. This is deleting a MEP instance: cfm mep-delete bridge br0 instance 10 The bridge is br0. Instance number is 10. When a MEP is created, there are some attributes that can be configured with this command: cfm mep-config bridge br0 instance 10 mac 00-00-00-03-00-00 level 5 mepid 8 The bridge is br0. Instance number is 10. MAC address of the MEP is 00-00-00-03-00-00. MEG Level of the MEP is 5. MEP ID of the MEP is 8. When a MEP is created, Peer MEPs can be added and removed: cfm cc-peer bridge br0 instance 10 mepid 9 cfm cc-peer bridge br0 instance 10 mepid 8 The bridge is br0. Instance number is 10. Peer MEP with ID 8 and 9 are added. cfm cc-peer bridge br0 instance 10 remove 1 mepid 8 The bridge is br0. Instance number is 10. Peer MEP with ID 8 is removed. When a MEP is created, the Continuity Check functionality can be enabled: cfm cc-config bridge br0 instance 10 enable 1 interval 1s domain-name ABCDEFGHIJ short-name KLMNOPQRST The bridge is br0. Instance number is 10. CC is enable. CCM Expected reception interval and transmission interval is 1s - one frame per second. MAID Domain name is ABCDEFGHIJ. MAID Short name is KLMNOPQRST. The MAID Domain name can be omitted to configure MAID with no Domain name. When CC is enabled CCM Frame reception interval is monitored for all add Peer MEPs. When a MEP is created, the Continuity Check functionality can be disabled: cfm cc-config bridge br0 instance 10 enable 0 The bridge is br0. Instance number is 10. CC is not enable. When a MEP is created, transmission of CCM frames can be enabled: cfm cc-ccm-tx bridge br0 instance 10 dmac 01-80-C2-00-00-30 sequence 1 \\ period 5 iftlv 1 iftlv-value 100 porttlv 1 porttlv-value 200 The bridge is br0. Instance number is 10. CCM destination MAC is 01-80-C2-00-00-30. CCM insertion of sequence numbers is enabled. CCM is transmitted for a period of 5 seconds CCM insertion of Interface TLV is enabled and the value is 100. CCM insertion of Port TLV is enabled and the value is 200. Within 5 seconds this function must be called again in order to keep transmission alive. When a MEP is created and transmission of CCM frames is enabled, the state of the inserted RDI can be controlled: cfm cc-rdi bridge br0 instance 10 rdi 1\" The bridge is br0. Instance number is 10. CCM inserted RDI is set tp 1. The below command will show the status for all created MEPs on the bridge. For each MEP it will show the status for all added Peer MEPs. cfm mep-status-show bridge br0 CFM MEP status: Instance 10 Opcode unexp seen 0 Version unexp seen 0 Rx level low seen 0 CFM CC peer status: Instance 10 Peer-mep 9 CCM defect 1 Rdi 0 Port tlv 0 If tlv 0 CCM seen 0 Tlv seen 0 Seq unexp seen 0 The bridge is br0. Instance number is 10. Peer MEP ID is 9. Opcode unexp seen is 1 when OAM PDU with unknown opcode is received. Version unexp seen is 1 when OAM PDU with unknown version is received. Rx level low seen is 1 when OAM PDU with low MEG level is received. CCM defect is 1 when no CCM frame is received for 3,25 * CC interval. Rdi is 1 when CCM frame is received with RDI, Port tlv is the value of the received Port TLV value. If tlv is the value of the received Interface TLV value. CCM seen is 1 when CCM frame is received. Tlv seen is 1 when CCM frame with TLV is received. Seq unexp seen is 1 when CCM frame with an unexpected sequence number is received. All status named \"seen\" will be cleared when the command is called. The below command will show the configuration for all created MEPs on the bridge. cfm mep-config-show bridge br0 The below command will start a NETLINK CFM notification server that will print out Peer MEP CCM defect status change. cfm_server &","title":"CFM functional description","component":"bsp","version":"2024.03","name":"cfm","url":"/bsp/2024.03/cfm.html","titles":[{"text":"1. Introduction","hash":"_introduction","id":1},{"text":"2. MEP Create and Delete","hash":"_mep_create_and_delete","id":2},{"text":"3. MEP Configuration","hash":"_mep_configuration","id":3},{"text":"4. Peer MEP Add and Remove.","hash":"_peer_mep_add_and_remove","id":4},{"text":"5. MEP CC Configuration.","hash":"_mep_cc_configuration","id":5},{"text":"6. MEP CCM transmission.","hash":"_mep_ccm_transmission","id":6},{"text":"7. MEP and peer MEP show status.","hash":"_mep_and_peer_mep_show_status","id":7},{"text":"8. MEP and peer MEP show configuration.","hash":"_mep_and_peer_mep_show_configuration","id":8},{"text":"9. MEP notifications.","hash":"_mep_notifications","id":9}]},"93":{"id":93,"text":"","title":"Cookbook Examples","component":"bsp","version":"2024.03","name":"cookbook_examples","url":"/bsp/2024.03/cookbook_examples.html","titles":[]},"94":{"id":94,"text":"Ethernet Ring Protection Switching as described in ITU G.8032 is supported by the BSP. The feature is implemented partly in the Linux kernel and partly in user-space application. The kernel portion is not fully up-streamed, and the associated application will only work with a pre-patched kernel. There is an 'erps_server' that must run in the background. There is a 'erps' user space client application that based on arguments can be used to issue commands to create and configure ERPS instances. Multiple ERPS instances can be created sharing same port as ring link interface. The control VLAN and the protected VLANs must be unique per ERPS instance. There can be a ERPS-MAX number of ERPS instances created. The maximum is 64. There is a number of ERPS user space commands that enables: Create and delete of ERPS instances. Set configuration. Set administrative commands. Get configuration. Get status information. CFM (Connectivity Fault Management) is described in IEEE Std 802.1Q-2018 section 19-21 CFM MIP instances are required to be created on control VLAN interfaces to do the handling of received RAPS frames in the control VLAN. CFM MEP instance can be created on ports to do ring link monitoring based on CCM. CFM can be found here: https://github.com/microchip-ung/cfm This is a model of a ERPS configuration: ERPS Model The below commands are for ERPS currently without interconnected rings. ERPS commands: erps create bridge instance version port0 port1 erps delete bridge instance erps control bridge instance mdlevel vlanif0 vlanif1 erps rpl bridge instance role port erps vlans bridge instance erps node-id bridge instance erps ring-id bridge instance erps command bridge instance command port erps revertive bridge instance timer erps hold bridge instance timer erps guard bridge instance timer erps config-show bridge instance erps status-show bridge instance An ERPS instance is created. bridge: Bridge device name. instance: Instance number. Values . version: Specify whether to use G.8032v1 or G.8032v2 of the RAPS protocol. Values . port0: Ring port0 device name. port1: Ring port1 device name. An ERPS instance is deleted. bridge: Bridge device name. instance: Instance number. Values . The ERPS control VLAN configuration. The OAM level where RAPS frames are transmitted and received and the VLAN interfaces. bridge: Bridge device name. instance: Instance number. Values . mdlevel: The OAM Maintenance Domain level. Values . vlanif0: The Ring port0 control VLAN interface device name. vlanif1: The Ring port1 control VLAN interface device name. Default mdlevel is 7. The ERPS Ring Protection Link role configuration. bridge: Bridge device name. instance: Instance number. Values . role: The RPL role. Values . port: The RPL ring port number. Values Default role is none. The ERPS protected VLANs configuration. ERPS protected VLANs can be added or deleted. The added VLANs can be shown. vlan operation. Values . bridge: Bridge device name. instance: Instance number. Values . The list of VLANs, e.g. 2-10,123-456,4044. Default is no protected VLANs. The ERPS node ID configuration. This is inserted in the RAPS PDU. bridge: Bridge device name. instance: Instance number. Values . The node ID. Values is a UC MAC. Default is the bridge MAC. Configuring 00:00:00:00:00:00 gives the bridge MAC. The ERPS ring ID configuration. This is the last octet in the DMAC of the RAPS frame. bridge: Bridge device name. instance: Instance number. Values . The ring ID. Values . Default ring ID is 1. The ERPS administrative commands. bridge: Bridge device name. instance: Instance number. Values . command: The administrative command. Values . port: The command ring port number. Values The command port is the port where control VLAN and the protected traffic VLANs are blocked. The clear command will clear any manual or forced switch command. The clear command will terminate any running WTR or WTB timer. The ERPS revertive configuration. When revertive is enabled the WTR timer is used to revert ERPS state to IDEL when any switch condition has cleared. Revertive behavior. Values . bridge: Bridge device name. instance: Instance number. Values . timer: WTR timer. Values . Resolution 1min. Default revertive is disable. The ERPS hold-off timer configuration. When a new (or more severe) defect occurs, action will not be executed until the hold-off timer expires. bridge: Bridge device name. instance: Instance number. Values . The hold-off timer. Values . Resolution 1ms. 0 means no holdoff. Default is 0. The hold off timer value must be divisible by 100. The ERPS guard timer configuration. The guard timer is used to prevent ring nodes from acting upon outdated RAPS PDUs upon topology changes. bridge: Bridge device name. instance: Instance number. Values . The guard timer. Values . Resolution 1ms. Default is 500ms. The guard timer value must be divisible by 10. The ERPS configuration is shown. bridge: Bridge device name. instance: Instance number. Values . The ERPS status is shown. bridge: Bridge device name. instance: Instance number. Values . status information to show. Values This section describes how to configure a three node ring with MEPs for ring link monitoring based on CCM-DEFECT detection. The ring link interfaces are eth0 and eth1. The service frame add/drop port is eth3. Protected VLANs are 100, 200, 300. Control VLAN is 400. Control OAM level is 7. Nodes are physically connected like this: It is recommended that the ring protocol functionality is tested before adding protected VLAN to the ring. On all nodes bridge br0 must be created and the Control VLAN interfaces must be added. Bridge configuration: ip link add name br0 type bridge ip link set dev br0 up ip link set dev br0 type bridge vlan_filtering 1 ip link set dev eth0 master br0 ip link set dev eth1 master br0 ip link set dev eth2 master br0 Adding control VLAN interfaces on ring ports: ip link add link eth0 name eth0.400 type vlan id 400 ip link add link eth1 name eth1.400 type vlan id 400 ip link set dev eth0.400 up ip link set dev eth1.400 up Adding RAPS frame handling MIPs on the control VLAN interfaces: cfm mip-create bridge br0 instance 1 direction down port eth0 vlan eth0.400 cfm mip-create bridge br0 instance 2 direction down port eth1 vlan eth1.400 cfm mip-config bridge br0 instance 2 mac 00-00-00-03-00-02 level 4 raps redirect cfm mip-config bridge br0 instance 1 mac 00-00-00-03-00-01 level 4 raps redirect This node is the RPL owner. RPL is on eth0 MEP configuration: cfm mep-create bridge br0 instance 1 domain port direction down port eth0 cfm mep-config bridge br0 instance 1 mac 00-00-00-00-01-00 level 7 mepid 10 cfm cc-config bridge br0 instance 1 enable 1 interval 3ms3 domain-name ABCDEFGHIJ short-name KLMNOPQRST cfm cc-peer bridge br0 instance 1 mepid 31 cfm cc-ccm-tx bridge br0 instance 1 dmac 01-80-C2-00-00-30 period 1000 cfm mep-create bridge br0 instance 2 domain port direction down port eth1 cfm mep-config bridge br0 instance 2 mac 00-00-00-00-01-01 level 7 mepid 11 cfm cc-config bridge br0 instance 2 enable 1 interval 3ms3 domain-name ABCDEFGHIJ short-name KLMNOPQRST cfm cc-peer bridge br0 instance 2 mepid 20 cfm cc-ccm-tx bridge br0 instance 2 dmac 01-80-C2-00-00-30 period 1000 ERPS configuration: erps_server & erps create bridge br0 instance 1 version 1 port0 eth0 port1 eth1 erps ring-id bridge br0 instance 1 11 erps rpl bridge br0 instance 1 role owner port 0 erps control bridge br0 instance 1 mdlevel 4 vlanif0 eth0.400 vlanif1 eth1.400 Note that no protected VLANS are added to the ERPS. This is done when the full ring is enabled and tested for protocol functionality. This node is a normal node - not connected to RPL. MEP configuration: cfm mep-create bridge br0 instance 1 domain port direction down port eth0 cfm mep-config bridge br0 instance 1 mac 00-00-00-00-02-00 level 7 mepid 20 cfm cc-config bridge br0 instance 1 enable 1 interval 3ms3 domain-name ABCDEFGHIJ short-name KLMNOPQRST cfm cc-peer bridge br0 instance 1 mepid 11 cfm cc-ccm-tx bridge br0 instance 1 dmac 01-80-C2-00-00-30 period 1000 cfm mep-create bridge br0 instance 2 domain port direction down port eth1 cfm mep-config bridge br0 instance 2 mac 00-00-00-00-02-01 level 7 mepid 21 cfm cc-config bridge br0 instance 2 enable 1 interval 3ms3 domain-name ABCDEFGHIJ short-name KLMNOPQRST cfm cc-peer bridge br0 instance 2 mepid 30 cfm cc-ccm-tx bridge br0 instance 2 dmac 01-80-C2-00-00-30 period 1000 ERPS configuration: erps create bridge br0 instance 1 version 1 port0 eth0 port1 eth1 erps ring-id bridge br0 instance 1 22 erps control bridge br0 instance 1 mdlevel 4 vlanif0 eth0.400 vlanif1 eth1.400 Note that no protected VLANS are added to the ERPS. This is done when the full ring is enabled at tested for protocol functionality. This node is the RPL neighbor. RPL is on eth1 MEP configuration: cfm mep-create bridge br0 instance 1 domain port direction down port eth0 cfm mep-config bridge br0 instance 1 mac 00-00-00-00-03-00 level 7 mepid 30 cfm cc-config bridge br0 instance 1 enable 1 interval 3ms3 domain-name ABCDEFGHIJ short-name KLMNOPQRST cfm cc-peer bridge br0 instance 1 mepid 21 cfm cc-ccm-tx bridge br0 instance 1 dmac 01-80-C2-00-00-30 period 1000 cfm mep-create bridge br0 instance 2 domain port direction down port eth1 cfm mep-config bridge br0 instance 2 mac 00-00-00-00-03-01 level 7 mepid 31 cfm cc-config bridge br0 instance 2 enable 1 interval 3ms3 domain-name ABCDEFGHIJ short-name KLMNOPQRST cfm cc-peer bridge br0 instance 2 mepid 10 cfm cc-ccm-tx bridge br0 instance 2 dmac 01-80-C2-00-00-30 period 1000 ERPS configuration: erps create bridge br0 instance 1 version 1 port0 eth0 port1 eth1 erps ring-id bridge br0 instance 1 33 erps rpl bridge br0 instance 1 role neighbor port 1 erps control bridge br0 instance 1 mdlevel 4 vlanif0 eth0.400 vlanif1 eth1.400 Note that no protected VLANS are added to the ERPS. This is done when the full ring is enabled at tested for protocol functionality. When the ring is configured, to make it operational protecting VLANs, it must be tested for protocol functionality. When ring has proved able to handle link failure and link restore and is in IDLE state it is ready to add protected VLANs. On all nodes 1-3: Adding protected traffic VLANs to bridge: bridge vlan add dev br0 vid 100 self bridge vlan add dev br0 vid 200 self bridge vlan add dev br0 vid 300 self Protected traffic VLANs on ring ports and traffic port: bridge vlan add dev eth0 vid 100 bridge vlan add dev eth1 vid 100 bridge vlan add dev eth2 vid 100 bridge vlan add dev eth0 vid 200 bridge vlan add dev eth1 vid 200 bridge vlan add dev eth2 vid 200 bridge vlan add dev eth0 vid 300 bridge vlan add dev eth1 vid 300 bridge vlan add dev eth2 vid 300 Adding VLANs to the ERPS instance: erps vlans bridge br0 instance 1 100,200,300","title":"ERPS functional description","component":"bsp","version":"2024.03","name":"erps","url":"/bsp/2024.03/erps.html","titles":[{"text":"1. Introduction","hash":"_introduction","id":1},{"text":"2. ERPS commands","hash":"_erps_commands","id":2},{"text":"2.1. erps create","hash":"_erps_create","id":3},{"text":"2.2. erps delete","hash":"_erps_delete","id":4},{"text":"2.3. erps control","hash":"_erps_control","id":5},{"text":"2.4. erps rpl","hash":"_erps_rpl","id":6},{"text":"2.5. erps vlans","hash":"_erps_vlans","id":7},{"text":"2.6. erps node-id","hash":"_erps_node_id","id":8},{"text":"2.7. erps ring-id","hash":"_erps_ring_id","id":9},{"text":"2.8. erps command","hash":"_erps_command","id":10},{"text":"2.9. erps revertive","hash":"_erps_revertive","id":11},{"text":"2.10. erps hold","hash":"_erps_hold","id":12},{"text":"2.11. erps guard","hash":"_erps_guard","id":13},{"text":"2.12. erps config-show","hash":"_erps_config_show","id":14},{"text":"2.13. erps status-show","hash":"_erps_status_show","id":15},{"text":"3. ERPS Ring Configuration.","hash":"_erps_ring_configuration","id":16},{"text":"3.1. Control VLAN configuration","hash":"_control_vlan_configuration","id":17},{"text":"3.2. Node 1","hash":"_node_1","id":18},{"text":"3.3. Node 2","hash":"_node_2","id":19},{"text":"3.4. Node 3","hash":"_node_3","id":20},{"text":"3.5. Making ring operational","hash":"_making_ring_operational","id":21}]},"95":{"id":95,"text":"blocks are and what they basically are doing. For each block, there will be a functional description of how and with which commands it can be configured. The ingress forwarding path is described in the following as a sequence of blocks a frame will pass through. The queue system contains eight egress queues per port - one per priority. The selection of the priority queue is done based on the 'Queue ID' that is classified in the ingress path. The egress forwarding path is described in the following as a sequence of blocks a frame will pass through.","title":"Overview of frame forwarding","component":"bsp","version":"2024.03","name":"forwarding_overview","url":"/bsp/2024.03/forwarding_overview.html","titles":[{"text":"1. Ingress path","hash":"_ingress_path","id":1},{"text":"2. Queue system","hash":"_queue_system","id":2},{"text":"3. Egress path","hash":"_egress_path","id":3}]},"96":{"id":96,"text":"The values have different purposes that can have an influence on how the frame is treated, like what TCAM entries it hit, how it is policed and shaped, what special function HW resources it will hit, and how the pushed tag will look like on egress In the following, it will be outlined what the metadata is, how it is assigned, and how it is used. List of supported metadata: Classified VID. Classified Priority. Classified DPL (Drop Precedence Level). Classified PCP. Classified DEI. FRER HW pointer. PSFP HW pointer. PSFP policer HW pointer. ACL policer HW pointer. Queue ID. Policy Association Group (PAG) Ingress Service Descriptor (ISDX) Not all metadata is supported in all TCAMs on all switches, so you should consult the datasheet for the details. Assignment: Frames classified as untagged is assigned the bridge device default VID as classified VID. Frames classified as tagged is assigned VID from the tag as classified VID. Frames hitting a TC filter can have the classified VID changed. Use: Frames can hit a TC filter that has classified VID as key. Frames are forwarded in a created bridge VLAN based on classified VID. Frames can have a tag pushed with classified VID as the Tag VID on egress. Assignment: All Frames are assigned the bridge device default Priority as classified Priority. Frames classified as tagged can have PCP from the tag mapped to a classified Priority. IP frames can have PSFP value from frame mapped to a classified Priority. Frames hitting a TC filter can have the classified Priority changed. Use: By default, the classified Priority is set to Queue ID that is used to decide which queue in the Queue System the frame is entering. On egress, frames can be scheduled and shaped based on classified Priority. On egress, a tag pushed can have classified Priority mapped to Tag PCP and DEI. Assignment: All Frames are assigned the bridge device default DPL as classified DPL. Frames classified as tagged can have DEI from the tag mapped to a classified DPL. IP frames can have PSFP value from frame mapped to a classified DPL. Frames hitting a TC filter can have the classified DPL changed. Use: The DPL is used in the queue system to decide what frames to drop when congestion happens. DPL is the color of the frame that can be used by a color aware policer. On egress, a tag pushed can have classified DPL mapped to Tag PCP and DEI. Assignment: All Frames are assigned the bridge device default PCP as classified Priority. Frames classified as tagged will have PCP from the tag as the classified PCP. Use: On egress, a tag pushed can have classified PCP as Tag PCP. Assignment: All Frames are assigned the bridge device default DEI as classified DEI. Frames classified as tagged will have DEI from the tag as the classified DEI. Use: On egress, a tag pushed can have classified DEI as Tag DEI. Assignment: Frames hitting a VCAP rule can have a FRER HW pointer assigned. Use: Frames will be handled by the configured FRER HW instance. Assignment: Frames hitting a VCAP rule can have a PSFP HW pointer assigned. Use: Frames will be handled by the configured PSFP HW instance. Assignment: Frames hitting a VCAP rule can have a PSFP policer HW pointer assigned. Use: Frame will be handled by the configured PSFP policer HW instance. Assignment: Frames can hit a TC filter that has a reference to a separately configured policer configuration. This reference is carried in the metadata as an ACL policer HW pointer. The TC filter can also specify the policer configuration explicitly. In this case, a policer configuration is automatically created and a reference to that is carried in the metadata as an ACL policer HW pointer. Use: Frames will be handled by the policer configuration pointed to by the ACL policer HW instance. Assignment: By default, the classified Priority is set to Queue ID. Change of this by PSFP is currently not supported. Use: In the Queue System, this is used to decide what queue the frame is entering. Assignment: A PAG value may be added/modified by a filter in a TCAM (typically IS2) Use: Can be used for matching in a TCAM filter in an Egress TCAM. This allows two filters to be linked. Assignment: An ISDX value may be added/modified by a filter in a TCAM (typically IS0 or IS1) Use: Can be used for matching in a TCAM filter in an Egress TCAM. This allows two filters to be linked.","title":"Frame Metadata description","component":"bsp","version":"2024.03","name":"frame_meta_data","url":"/bsp/2024.03/frame_meta_data.html","titles":[{"text":"1. Classified VID.","hash":"_classified_vid","id":1},{"text":"2. Classified Priority.","hash":"_classified_priority","id":2},{"text":"3. Classified DPL.","hash":"_classified_dpl","id":3},{"text":"4. Classified PCP.","hash":"_classified_pcp","id":4},{"text":"5. Classified DEI.","hash":"_classified_dei","id":5},{"text":"6. FRER HW pointer.","hash":"_frer_hw_pointer","id":6},{"text":"7. PSFP HW pointer.","hash":"_psfp_hw_pointer","id":7},{"text":"8. PSFP policer HW pointer.","hash":"_psfp_policer_hw_pointer","id":8},{"text":"9. ACL policer HW pointer.","hash":"_acl_policer_hw_pointer","id":9},{"text":"10. Queue ID.","hash":"_queue_id","id":10},{"text":"11. Policy Association Group (PAG)","hash":"_policy_association_group_pag","id":11},{"text":"12. Ingress Service Descriptor (ISDX)","hash":"_ingress_service_descriptor_isdx","id":12}]},"97":{"id":97,"text":"Frame preemption is defined in IEEE 802.1Qbu and 802.3br and allows low priority frames to be suspended by time-critical frames of higher priority. Frame preemption is not yet supported via standard Linux user commands but the community is working to include support for frame preemption in ethtool. Until then a proprietary tool called fp is provided: # fp --help options: --dev: dev name --admin_status: admin status --enable_tx: enable tx --verify_disable_tx: verify disable tx --verify_time: verify time --add_frag_size: add frag size --status: status --help: help The parameters are: dev - The device, e.g. eth0. admin_status - Bitmask of priority queues where frame preemption is enabled, e.g. 0x02 enables priority queue 1. enable_tx - Enable frame preemption in the transmitter. Frame preemption is always enabled in the receiver. verify_disable_tx - Disable verification of preemption capabilities of the link if 1. Default is 1 (disabled). verify_time - Number of milliseconds to wait between verification attempts. The valid range is 1..128 and the default is 10. add_frag_size - The minimum fragment size to generate in the transmitter, calculated as (FRAG_SIZE + 1) * 64 octets. The valid range is 0..3 and the default is 0. status - Show frame preemption status. help - Show frame preemption help. Show current configuration: # fp --dev eth0 admin_status: 0x0 enable_tx: 0 verify_disable_tx: 1 verify_time: 10 add_frag_size: 0 The parameters are explained above. Show current status: # fp --dev eth0 --status dev: eth0 hold_advance: 42 release_advance: 84 preemption_active: 0 hold_request: 0 status_verify: Disabled The parameters are: dev - The device, e.g. eth0. hold_advance - The maximum number of nanoseconds from issuing a HOLD request from 802.1Qbv until the traffic stops. Currently not supported. release_advance - The maximum number of nanoseconds from issuing a RELEASE request from 802.1Qbv until the traffic resumes. Currently not supported. preemption_active - 1 if frame preemption is currently active on device. hold_request - 1 if HOLD request is currently active on interface. status_verify - Status of the verification process. Enable frame preemption and verification on eth0: # fp --dev eth0 --enable_tx 1 --verify_disable_tx 0 Enable frame preemption for priority queues 0, 1, and 2 on eth0: # fp --dev eth0 --admin_status 0x07 Some test tools expect to receive LLDP information regarding frame preemption before they attempt to enable their own frame preemption capabilities. A modified version of tiny-lldpd is included in the BSP that is able to transmit an LLDP frame containing the Additional Ethernet capabilities documented in IEEE 802.3br-2016. Start the tiny-lldpd daemon in the background: # tlldpd Starting tiny-lldpd... The LLDP/TLV contains the following values: preemption capability support - Always 1 (supported). preemption capability status - 1 if frame preemption is enabled on device, 0 otherwise. preemption capability active - 1 if frame preemption is active on device, 0 otherwise. additional fragment size - Always 0 as 64 octet fragments are supported by the receiver. The tiny-lldpd daemon uses the following read-only files in debugfs to query the parameters (eth0 is used in the example): /sys/kernel/debug/lan966x/eth0/fp-enabled /sys/kernel/debug/lan966x/eth0/fp-active These files returns either 0 or 1 when read and can be used if you want to write your own LLDP implementation.","title":"Frame Preemption functional description","component":"bsp","version":"2024.03","name":"frame_preemption","url":"/bsp/2024.03/frame_preemption.html","titles":[]},"98":{"id":98,"text":"Frame Replication and Elimination for Reliability (FRER) is defined in IEEE 802.1CB-2017. FRER reduces the probability of packet loss by replicating packets at the source, transmit these replicas over multiple paths, and finally removing the duplicate packets at the destination. A FRER enabled switch consists of the following building blocks: Stream Identification - Identifies the stream based on and fields from the frame. Sequence Generation - Generates a sequence number for each packet in a Member Stream.. Stream Split - Split a stream into multiple new Member Streams on different egress ports. Individual Recovery - Discards duplicate frames of a Member Stream. Sequence Recovery - Discards duplicate frames of a merged set of Member Streams. Streams are transmitted in a separate VLAN, where forwarding is set up manually and flooding and learning is disabled. Spanning Tree is used to avoid frames looping in other VLANs. The illustration below shows a stream from host A to host B via switches S1-S4. The stream is assigned to VLAN 10: Host A is FRER-unaware and sends an untagged stream (0) with DMAC = MAC address of host B. Switch S1 does the following FRER functions: Stream Identification: The received frame from host A is identified as belonging to Member Stream 0 and is classified to VLAN 10. Sequence Generation: The sequence number for the frame is assigned. Splitting: The frame is forwarded to two Member Streams (1) and (2) using a C-tag with VID 10 and an R-tag with the sequence number. Switch S2 does the following FRER functions: Stream Identification: The received frame from S1 is identified as part of Member Stream 1. The received frame from S3 is identified as part of Member Stream 2. Merge: Member Stream 1 and Member Stream 2 map to the same Compound Stream. Sequence Recovery: One of the received frames in the Compound Stream is discarded. The resulting Member Stream 3 is forwarded towards S4. Switch S3 operates in a similar way as S2. Switch S4 does the following FRER functions: Stream Identification: The received frame from S2 is identified as part of Member Stream 3. The received frame from S3 is identified as part of Member Stream 4. Merge: Member Stream 3 and Member Stream 4 map to the same Compound Stream. Sequence Recovery: One of the received frames in the Compound Stream is discarded. The resulting stream is forwarded towards host B without C-tag and R-tag. Stream Identification configuration uses the vcap tool which is described on the VCAP Tool page. The stream identification can match on every field that is supported by IS1 but in the following examples, we will identify a stream by DMAC and VLAN. This is what is called a Null Stream identification in 802.1CB. We will also need to match on the ingress port because we need to hit a specific ingress flow for each ingress port. All ports generate 'S1_7TUPLE' IS1 keys by default. These keys are of type X4 and occupy 4 subwords in the VCAP. See page Classification (IS0/IS1) for more information. As we only need to match on DMAC, VLAN, and port we can use a shorter key called 'S1_DMAC_VID' which is of type X1 and only occupies 1 subword. This saves space in the VCAP that can be used for other purposes. The tc chain template command can be used to change the generated key on a port for a given lookup. To change the generated IS1 key to 'S1_DMAC_VID' in the second lookup for all frames received on eth0 ('chain 11000' denotes the second lookup in IS1): # tc qdisc add dev eth0 clsact # tc chain add dev eth0 ingress chain 11000 protocol 802.1q flower skip_sw \\ dst_mac 00:00:00:00:00:00 \\ vlan_id 0 \\ vlan_prio 0 \\ vlan_ethtype all See the Chain section on the TC Introduction page for more information about tc chain templates. The stream identification configuration depends on where the FRER functionality is located in the network. An example is switch S1 in the illustration above, where the stream transmitter, host A, has no FRER and VLAN functionality. Switch S1 must identify the stream by the ingress port eth0 and DMAC 00:00:00:dd:dd:dd and classify the stream to VLAN 10 and to ISDX 1. We will want to match only on frames that do NOT contain R-tag and C-tag. To configure the above: # vcap add is1 10 0 \\ s1_dmac_vid lookup 0x01 0xff igr_port_mask 0x001 0x1ff \\ r_tagged 0 vlan_tagged 0 l2_dmac 00:00:00:dd:dd:dd ff:ff:ff:ff:ff:ff \\ s1 vid_replace_ena 1 vid_add_val 10 isdx_replace_ena 1 isdx_add_val 1 ISDX is a number between 1 and 255 that identifies the stream for later use. The maximum number if stream identifications in a switch is therefore 255. Another example is switch S2, where we will expect that the stream contains both R-tag and C-tag. Switch S2 must identify the stream by the ingress port eth0, DMAC 00:00:00:dd:dd:dd and VLAN 10 and classify the stream to ISDX 1. We will want to match only on frames that contain R-tag and C-tag. To configure the above: # vcap add is1 10 0 \\ s1_dmac_vid lookup 0x01 0xff igr_port_mask 0x001 0x1ff \\ r_tagged 1 vlan_tagged 1 vid 10 0xfff l2_dmac 00:00:00:dd:dd:dd ff:ff:ff:ff:ff:ff \\ s1 isdx_replace_ena 1 isdx_add_val 1 To delete the stream identification above: # vcap del is1 10 4 FRER is not yet supported via standard Linux user commands and therefore a proprietary tool called frer is provided: $ frer --help Usage: frer cs|msa|msf|ms|iflow|vlan [options] options: --help Show this help text commands: cs: cs cs_id [options] --enable: Enable recovery --alg: frerSeqRcvyAlgorithm (0: Vector, 1: Match) --hlen: frerSeqRcvyHistoryLength --reset_time: frerSeqRcvyResetMSec --take_no_seq: frerSeqRcvyTakeNoSequence --cnt: Show counters --clr: Clear counters --help: Show this help text msa: msa dev1 [dev2] [options] --help: Show this help text msf: msf ms_id [options] --help: Show this help text ms: ms dev ms_id [options] --enable: Enable recovery --alg: frerSeqRcvyAlgorithm (0: Vector, 1: Match) --hlen: frerSeqRcvyHistoryLength --reset_time: frerSeqRcvyResetMSec --take_no_seq: frerSeqRcvyTakeNoSequence --cs_id: Compound stream ID --cnt: Show counters --clr: Clear counters --help: Show this help text iflow: iflow id [options] --ms_enable: Enable member stream --ms_id: Allocated member stream ID --generation: Enable sequence generation --pop: Enable popping of R-tag --dev1: Split device 1 or '-' --dev2: Split device 2 or '-' --help: Show this help text vlan: vlan vid [options] --flood_disable: Disable flooding in VLAN --learn_disable: Disable learning in VLAN --help: Show this help text All frerSeqRcvXXXX parameters are defined and explained in IEEE 802.1CB-2017. The frer cs command is used to configure a compound stream which is needed when you want to merge several member streams into one compound stream. This is needed in switch S2, S3, and S4. A compound stream is identified by a cs_id which is a number between 0 and 255. See the FRER examples below on how to configure each switch. To show compound stream 3 configuration: # frer cs 3 enable: 1 alg: 0 hlen: 4 reset_time: 1000 take_no_seq: 0 Sequence recovery is enabled using Vector algorithm (alg = 0) with history length 4, ResetMSec is 1000 mS and TakeNoSequence is disabled. To show compound stream 3 counters: # frer cs 3 --cnt OutOfOrderPackets : 0 RoguePackets : 0 PassedPackets : 0 DiscardedPackets : 0 LostPackets : 0 TaglessPackets : 0 Resets : 0 To clear compound stream 3 counters: # frer cs 3 --clr You will need a member stream if you want to enable individual recovery on a single stream and/or associate the stream with a compound stream in order to merge this stream with other streams. A member stream is needed for each combination of ingress port/egress port. The ingress port is indirectly given via the ISDX. This is needed in switch S2, S3, and S4. See the FRER examples below on how to configure each switch. A member stream is identified by a number returned by the 'frer msa' command (Member Stream Allocate). To allocate a member stream id for eth1: $ frer msa eth1 0 This command returns the allocated member stream id associated with eth1. In case you will want to split a single stream into two egress ports, you must allocate the two ports together as they will need to be associated with the same ISDX: $ frer msa eth1 eth2 0 This command returns the allocated common member stream id associated with eth1 and eth2. To show member stream 0 configuration associated with eth1: $ frer ms eth1 0 enable: 1 alg: 1 hlen: 2 reset_time: 1000 take_no_seq: 0 cs_id: 3 Individual recovery is enabled using Match algorithm (history length is N/A here), ResetMSec is 1000 mS and TakeNoSequence is disabled. This member stream is associated with compound stream 3. To show member stream 0 counters associated with eth1: $ frer ms eth1 0 --cnt OutOfOrderPackets : 0 RoguePackets : 0 PassedPackets : 0 DiscardedPackets : 0 LostPackets : 0 TaglessPackets : 0 Resets : 0 To clear member stream 0 counters associated with eth1: $ frer ms eth1 0 --clr To free member stream 0: $ frer msf 0 --clr An ingress flow associates an ISDX with member stream(s), controls generation/removal of R-tag, and splitting of streams. There are some restrictions on an ingress flow: If sequence generation is enabled then member stream association and popping of R-tag is not allowed. See the FRER examples below on how to configure each switch. To show ingress flow for ISDX 1: $ frer iflow 1 ms_enable: 1 ms_id: 0 generation: 0 pop: 0 dev1: eth1 dev2: eth2 ISDX 1 is associated with member stream id 0 and the stream is split into eth1 and eth2. Neither sequence generation nor popping of R-tag is enabled. The VLAN configuration allows you to control flooding and learning per VLAN, which is not possible with the current standard Linux bridge vlan API. To show VLAN configuration for VLAN 10: $ frer vlan 10 flood_disable: 1 learn_disable: 1 Both flooding and learning are disabled in VLAN 10. This section described how to configure switch S1, S2, and S4 in the illustration shown above. Switch S3 operates in a similar way as switch S2. All examples require some common setup. Create a VLAN-aware bridge with port eth0, eth1, and eth2: # ip link add name br0 type bridge # ip link set br0 type bridge vlan_filtering 1 # ip link set eth0 master br0 # ip link set eth1 master br0 # ip link set eth2 master br0 # ip link set eth0 up # ip link set eth1 up # ip link set eth2 up # ip link set br0 up Add VLAN 10 to all ports and disable flooding and learning: # bridge vlan add dev eth0 vid 10 # bridge vlan add dev eth1 vid 10 # bridge vlan add dev eth2 vid 10 # frer vlan 10 --flood_disable 1 --learn_disable 1 Create a clsact qdisc and a chain template in order to use short 'S1_DMAC_VID' keys in the second lookup in IS1: # tc qdisc add dev eth0 clsact # tc chain add dev eth0 ingress chain 11000 protocol 802.1q flower skip_sw \\ dst_mac 00:00:00:00:00:00 \\ vlan_id 0 \\ vlan_prio 0 \\ vlan_ethtype all # tc qdisc add dev eth1 clsact # tc chain add dev eth1 ingress chain 11000 protocol 802.1q flower skip_sw \\ dst_mac 00:00:00:00:00:00 \\ vlan_id 0 \\ vlan_prio 0 \\ vlan_ethtype all # tc qdisc add dev eth2 clsact # tc chain add dev eth2 ingress chain 11000 protocol 802.1q flower skip_sw \\ dst_mac 00:00:00:00:00:00 \\ vlan_id 0 \\ vlan_prio 0 \\ vlan_ethtype all This is only necessary on ports where we use stream identification. Now the different switches can be configured. Switch S1 must: Identify the untagged stream as stream 0 and associate it with ISDX 1 and VLAN 10 Generate a sequence number to insert in an R-tag Split the traffic into two egress ports Add C-tag and R-tag on egress Note that individual and sequence recovery is not used in this setup. eth0 is connected to host A. eth1 is connected to switch S2. eth2 is connected to switch S3. Create a VCAP rule with priority 10 and handle 0 for stream identification and VLAN classification: # vcap add is1 10 0 \\ s1_dmac_vid lookup 0x01 0xff igr_port_mask 0x001 0x1ff \\ r_tagged 0 vlan_tagged 0 l2_dmac 00:00:00:dd:dd:dd ff:ff:ff:ff:ff:ff \\ s1 vid_replace_ena 1 vid_add_val 10 isdx_replace_ena 1 isdx_add_val 1 Parameters: s1_dmac_vid - IS1 key lookup 0x01 0xff - Second lookup igr_port_mask 0x001 0x1ff - Match on eth0 (port 0) r_tagged 0 - Frame must be without an R-tag vlan_tagged 0 - Frame must be without a C-tag l2_dmac 00:00:00:dd:dd:dd ff:ff:ff:ff:ff:ff - Match on all bits in host B MAC address s1 - IS1 action vid_replace_ena 1 - Enable replace VID classification vid_add_val 10 - VID to classify to isdx_replace_ena 1 - Enable replace ISDX classification isdx_add_val 1 - ISDX to classify to Setup the stream identified by ISDX 1 to generate R-tag (Sequence Generation) and transmit on eth1 and eth2 (Stream Split): # frer iflow 1 --generation 1 --dev1 eth1 --dev2 eth2 Switch S2 must: Identify the C-tagged and R-tagged stream from switch S1 as part of member stream 1 and associate it with ISDX 1 Identify the C-tagged and R-tagged stream from switch S3 as part of member stream 2 and associate it with ISDX 2 Apply individual recovery to both member streams 1 and 2 Split member stream 1 into two egress ports Merge member streams 1 and 2 by mapping them to the same compound stream Apply sequence recovery to the compound stream consisting of member streams 1 and 2 and discard one of the frames eth0 is connected to switch S1. eth1 is connected to switch S3. eth2 is connected to switch S4. Create a VCAP rule with priority 10 and handle 0 for stream identification of stream (1): # vcap add is1 10 0 \\ s1_dmac_vid lookup 0x01 0xff igr_port_mask 0x001 0x1ff \\ r_tagged 1 vlan_tagged 1 vid 10 0xfff l2_dmac 00:00:00:dd:dd:dd ff:ff:ff:ff:ff:ff \\ s1 isdx_replace_ena 1 isdx_add_val 1 Parameters: s1_dmac_vid - IS1 key lookup 0x01 0xff - Second lookup igr_port_mask 0x001 0x1ff - Match on eth0 (port 0) r_tagged 1 - Frame must contain an R-tag vlan_tagged 0 - Frame must contain a C-tag vid 10 0xfff - VID must be 10 l2_dmac 00:00:00:dd:dd:dd ff:ff:ff:ff:ff:ff - Match on all bits in host B MAC address s1 - IS1 action isdx_replace_ena 1 - Enable replace ISDX classification isdx_add_val 1 - ISDX to classify to Create a VCAP rule with priority 10 and handle 1 for stream identification of stream (2): # vcap add is1 10 1 \\ s1_dmac_vid lookup 0x01 0xff igr_port_mask 0x002 0x1ff \\ r_tagged 1 vlan_tagged 1 vid 10 0xfff l2_dmac 00:00:00:dd:dd:dd ff:ff:ff:ff:ff:ff \\ s1 isdx_replace_ena 1 isdx_add_val 2 Parameters: s1_dmac_vid - IS1 key lookup 0x01 0xff - Second lookup igr_port_mask 0x002 0x1ff - Match on eth1 (port 1) r_tagged 1 - Frame must contain an R-tag vlan_tagged 0 - Frame must contain a C-tag vid 10 0xfff - VID must be 10 l2_dmac 00:00:00:dd:dd:dd ff:ff:ff:ff:ff:ff - Match on all bits in host B MAC address s1 - IS1 action isdx_replace_ena 1 - Enable replace ISDX classification isdx_add_val 2 - ISDX to classify to Configure compound stream 3 with vector algorithm, history length 10, and reset_time 500 milliseconds # frer cs 3 --enable 1 --alg 0 --hlen 10 --reset_time 500 Allocate member stream id for egress on eth1 and eth2: # frer msa eth1 eth2 0 The number returned will later be used as ms_id for member stream 1 Allocate member stream id for egress on eth2 only: # frer msa eth2 2 The number returned will later be used as ms_id for member stream 2 Setup member stream 1 on eth1 (ms_id 0) with match algorithm, reset_time 500 milliseconds: # frer ms eth1 0 --enable 1 --alg 1 --reset_time 500 Setup member stream 1 on eth2 (ms_id 0) with match algorithm, reset_time 500 milliseconds, and compound stream 3: # frer ms eth2 0 --enable 1 --alg 1 --reset_time 500 --cs_id 3 Setup member stream 2 on eth2 (ms_id 2) with match algorithm, reset_time 500 milliseconds, and compound stream 3: # frer ms eth2 2 --enable 1 --alg 1 --reset_time 500 --cs_id 3 Associate ISDX 1 with member stream 1 (ms_id 0) and split the stream into eth1 and eth2: # frer iflow 1 --ms_enable 1 --ms_id 0 --dev1 eth1 --dev2 eth2 Associate ISDX 2 with member stream 2 (ms_id 2) and eth2 only: # frer iflow 2 --ms_enable 1 --ms_id 2 --dev1 eth2 Switch S4 must: Identify the C-tagged and R-tagged stream from switch S2 as part of member stream 3 and associate it with ISDX 3 Identify the C-tagged and R-tagged stream from switch S3 as part of member stream 4 and associate it with ISDX 4 Apply individual recovery to both member stream 3 and 4 Merge member stream 3 and 4 by mapping them to the same compound stream Apply sequence recovery to the compound stream consisting of member stream 3 and 4 and discard one of the frames Remove C-tag and R-tag eth0 is connected to switch S2. eth1 is connected to switch S3. eth2 is connected to host B. Create a VCAP rule with priority 10 and handle 0 for stream identification of stream (3): # vcap add is1 10 0 \\ s1_dmac_vid lookup 0x01 0xff igr_port_mask 0x001 0x1ff \\ r_tagged 1 vlan_tagged 1 vid 10 0xfff l2_dmac 00:00:00:dd:dd:dd ff:ff:ff:ff:ff:ff \\ s1 isdx_replace_ena 1 isdx_add_val 3 Parameters: s1_dmac_vid - IS1 key lookup 0x01 0xff - Second lookup igr_port_mask 0x001 0x1ff - Match on eth0 (port 0) r_tagged 1 - Frame must contain an R-tag vlan_tagged 0 - Frame must contain a C-tag vid 10 0xfff - VID must be 10 l2_dmac 00:00:00:dd:dd:dd ff:ff:ff:ff:ff:ff - Match on all bits in host B MAC address s1 - IS1 action isdx_replace_ena 1 - Enable replace ISDX classification isdx_add_val 3 - ISDX to classify to Create a VCAP rule with priority 10 and handle 1 for stream identification of stream (4): # vcap add is1 10 1 \\ s1_dmac_vid lookup 0x01 0xff igr_port_mask 0x002 0x1ff \\ r_tagged 1 vlan_tagged 1 vid 10 0xfff l2_dmac 00:00:00:dd:dd:dd ff:ff:ff:ff:ff:ff \\ s1 isdx_replace_ena 1 isdx_add_val 4 Parameters: s1_dmac_vid - IS1 key lookup 0x01 0xff - Second lookup igr_port_mask 0x002 0x1ff - Match on eth1 (port 1) r_tagged 1 - Frame must contain an R-tag vlan_tagged 0 - Frame must contain a C-tag vid 10 0xfff - VID must be 10 l2_dmac 00:00:00:dd:dd:dd ff:ff:ff:ff:ff:ff - Match on all bits in host B MAC address s1 - IS1 action isdx_replace_ena 1 - Enable replace ISDX classification isdx_add_val 4 - ISDX to classify to Add static MAC address in VLAN 10 on eth2. This is needed if no splitting is involved: # bridge fdb add 00:00:00:dd:dd:dd dev eth2 static master vlan 10 Configure compound stream 0 with vector algorithm, history length 10, and reset_time 500 milliseconds # frer cs 0 --enable 1 --alg 0 --hlen 10 --reset_time 500 Allocate member stream id for egress on eth2: # frer msa eth2 0 The number returned will later be used as ms_id for member stream 3 Allocate member stream id for egress on eth2: # frer msa eth2 2 The number returned will later be used as ms_id for member stream 4 Setup member stream 3 on eth2 (ms_id 0) with match algorithm, reset_time 500 milliseconds, and compound stream 0: # frer ms eth2 0 --enable 1 --alg 1 --reset_time 500 --cs_id 0 Setup member stream 4 on eth2 (ms_id 2) with match algorithm, reset_time 500 milliseconds, and compound stream 0: # frer ms eth2 2 --enable 1 --alg 1 --reset_time 500 --cs_id 0 Associate ISDX 3 with member stream 3 (ms_id 0), pop R-tag and set egress to eth2: # frer iflow 3 --ms_enable 1 --ms_id 0 --pop 1 --dev1 eth2 Associate ISDX 4 with member stream 4 (ms_id 2), pop R-tag and set egress to eth2: # frer iflow 4 --ms_enable 1 --ms_id 2 --pop 1 --dev1 eth2 Create a VCAP rule with priority 10 and handle 0 to remove the VLAN tag: # vcap add es0 10 0 \\ vid egr_port 2 0xf vid 10 0xfff \\ s0_vid push_outer_tag 3 Parameters: vid - ES0 key egr_port 2 0xf - Match on egress on eth2 (port 2) vid 10 0xfff - VID must be 10 s0_vid - ES0 action push_outer_tag 3 - Force untag","title":"FRER functional description","component":"bsp","version":"2024.03","name":"frer","url":"/bsp/2024.03/frer.html","titles":[{"text":"1. FRER Overview","hash":"_frer_overview","id":1},{"text":"2. Stream Identification","hash":"_stream_identification","id":2},{"text":"3. FRER tool","hash":"_frer_tool","id":3},{"text":"3.1. Compound Stream","hash":"_compound_stream","id":4},{"text":"3.2. Member Stream","hash":"_member_stream","id":5},{"text":"3.3. Ingress Flow","hash":"_ingress_flow","id":6},{"text":"3.4. VLAN Configuration","hash":"_vlan_configuration","id":7},{"text":"4. FRER Examples","hash":"_frer_examples","id":8},{"text":"4.1. Switch S1","hash":"_switch_s1","id":9},{"text":"4.2. Switch S2","hash":"_switch_s2","id":10},{"text":"4.3. Switch S4","hash":"_switch_s4","id":11}]},"99":{"id":99,"text":"Front ports are represented as standard Ethernet interfaces within the Linux kernel. After a reboot, all interfaces are considered as host interfaces with no bridging involved. Only the CPU Subsystem can send and receive frames through these interfaces: Later it is shown how to configure front ports to be members of bridges or link aggregation groups. Front ports are controlled by either iproute2 or ethtool. iproute2 is a collection of commands such as ip, bridge or tc. This section describes general operations on ports using these tools. The number of front ports depends on the actual switch product. All interfaces are disabled by default and will need to be enabled before they can be used. Enable an interface and check the status: # ip link set dev eth0 up # ip link show dev eth0 4: eth0: mtu 1500 qdisc mq state UP mode DEFAULT group default qlen 1000 link/ether 00:40:42:04:98:9b brd ff:ff:ff:ff:ff:ff Disable an interface and check the status: # ip link set dev eth0 down # ip link show dev eth0 4: eth0: mtu 1500 qdisc mq state DOWN mode DEFAULT group default qlen 1000 link/ether 00:40:42:04:98:9b brd ff:ff:ff:ff:ff:ff It is possible to assign an IP address to an interface and use it as a standard network interface. Assign an IP address and check the status: # ip link set dev eth0 up # ip addr add dev eth0 192.168.1.1 # ip addr show dev eth0 4: eth0: mtu 1500 qdisc mq state UP group default qlen 1000 link/ether 00:40:42:04:98:9b brd ff:ff:ff:ff:ff:ff inet 192.168.1.1/32 scope global eth0 valid_lft forever preferred_lft forever inet6 fe80::240:42ff:fe04:989b/64 scope link valid_lft forever preferred_lft forever It is now possible to ping hosts on the same subnet: # ping 192.168.1.2 PING 192.168.1.2 (192.168.1.2) 56(84) bytes of data. 64 bytes from 192.168.1.2: icmp_seq=1 ttl=64 time=0.629 ms 64 bytes from 192.168.1.2: icmp_seq=2 ttl=64 time=0.334 ms 64 bytes from 192.168.1.2: icmp_seq=3 ttl=64 time=0.325 ms 64 bytes from 192.168.1.2: icmp_seq=4 ttl=64 time=0.337 ms ^C --- 192.168.1.2 ping statistics --- 4 packets transmitted, 4 received, 0% packet loss, time 3076ms rtt min/avg/max/mdev = 0.325/0.406/0.629/0.128 ms Delete an IP address and check the status: # ip addr del dev eth0 192.168.1.1/24 # ip addr show dev eth0 4: eth0: mtu 1500 qdisc mq state UP group default qlen 1000 link/ether 00:40:42:04:98:9b brd ff:ff:ff:ff:ff:ff inet6 fe80::240:42ff:fe04:989b/64 scope link valid_lft forever preferred_lft forever Do not assign IP addresses to interfaces that will be used in bridges or link aggregation groups. Change the Maximum Transmission Unit (MTU) on a port and check the status: # ip link set dev eth0 mtu 1600 # ip link show dev eth0 4: eth0: mtu 1600 qdisc mq state UP mode DEFAULT group default qlen 1000 link/ether 00:40:42:04:98:9b brd ff:ff:ff:ff:ff:ff Change the Ethernet MAC Address on a port and check the status: # ip link set dev eth0 address 00:00:00:22:22:22 # ip link show dev eth0 4: eth0: mtu 1500 qdisc mq state UP mode DEFAULT group default qlen 1000 link/ether 00:00:00:22:22:22 brd ff:ff:ff:ff:ff:ff permaddr 00:40:42:04:98:9b Auto-negotiation of speed and duplex settings is enabled by default. It is a requirement that the link partner also supports auto-negotiation. If a port is connected to equipment that does not support auto-negotiation, auto-negotiation must be disabled and speed and duplex must be set manually. Change the speed and duplex on a port and check the status: # ethtool -s eth0 speed 100 duplex half autoneg off # ethtool eth0 Settings for eth0: Supported ports: [ TP MII ] Supported link modes: 10baseT/Half 10baseT/Full 100baseT/Half 100baseT/Full 1000baseT/Half 1000baseT/Full Supported pause frame use: Symmetric Supports auto-negotiation: Yes Supported FEC modes: Not reported Advertised link modes: 100baseT/Half Advertised pause frame use: No Advertised auto-negotiation: No Advertised FEC modes: Not reported Speed: 100Mb/s Duplex: Half Port: MII PHYAD: 0 Transceiver: internal Auto-negotiation: off Link detected: yes Flow Control is a mechanism to temporarily stop transmission of traffic and works by letting the receiver send a pause control frame back to the transmitter when a certain buffer threshold has been reached. Flow Control was defined by the IEEE 802.3x standard and is disabled by default. Send pause control frames when reaching buffer threshold: # ethtool -A eth0 tx on Do not send pause control frames when reaching buffer threshold: # ethtool -A eth0 tx off Obey received pause control frames: # ethtool -A eth0 rx on Ignore received pause control frames: # ethtool -A eth0 rx off Show flow control configuration: # ethtool -a eth0 Pause parameters for eth0: Autonegotiate: off RX: off TX: off Autonegotiation of flow control is not supported. Flow Control and Priority Flow Control must not be enabled simultaneously. On a per-port basis, the Priority Flow Control as defined in 802.1Qbb can be configured. This requires that Port Flow Control (802.3x) is not enabled on the same port. By default, Priority Flow Control is disabled. First mapping of frames into priority must be configured. The following will enable frames to be mapped to priority based on the PCP value in the tag: qos i_tag_map eth0 --prio 0123456701234567 --dpl 0000000011111111 qos i_mode eth0 --tag 1 --dscp 0 The device (port) is eth0. Secondly, the LLDP protocol must be enabled: lldpad -d -f /tmp/lldpad.conf & lldptool set-lldp -i eth0 adminStatus=rxtx The device (port) is eth0. The lldpad is started in background. This command will enable PFC in selected priorities. lldptool -T -i eth0 -V PFC enabled=1,5,7 The device (port) is eth0. The PFC enabled priorities are 1,5,7 Show the basic configuration and status for a port with ip link: # ip link show dev eth0 4: eth0: mtu 1500 qdisc mq master br0 state UP mode DEFAULT group default qlen 1000 link/ether 00:00:00:01:00:00 brd ff:ff:ff:ff:ff:ff permaddr 00:40:42:04:98:e1 Show detailed configuration and status for a port with ip -d link: # ip -d link show dev eth0 4: eth0: mtu 1500 qdisc mq master br0 state UP mode DEFAULT group default qlen 1000 link/ether 00:00:00:01:00:00 brd ff:ff:ff:ff:ff:ff permaddr 00:40:42:04:98:e1 promiscuity 1 minmtu 68 maxmtu 65535 bridge_slave state forwarding priority 32 cost 4 hairpin off guard off root_block off fastleave off learning on flood on port_id 0x8001 port_no 0x1 designated_port 32769 designated_cost 0 designated_bridge 8000.0:0:0:1:0:0 designated_root 8000.0:0:0:1:0:0 hold_timer 0.00 message_age_timer 0.00 forward_delay_timer 0.00 topology_change_ack 0 config_pending 0 proxy_arp off proxy_arp_wifi off mcast_router 1 mcast_fast_leave off mcast_flood on mcast_to_unicast off neigh_suppress off group_fwd_mask 0 group_fwd_mask_str 0x0 vlan_tunnel off isolated off addrgenmode eui64 numtxqueues 8 numrxqueues 1 gso_max_size 65536 gso_max_segs 65535 portname p0 switchid 0040420498e0 Show standard information for a port with ethtool: # ethtool eth0 Settings for eth0: Supported ports: [ TP MII ] Supported link modes: 10baseT/Half 10baseT/Full 100baseT/Half 100baseT/Full 1000baseT/Half 1000baseT/Full Supported pause frame use: Symmetric Supports auto-negotiation: Yes Supported FEC modes: Not reported Advertised link modes: 10baseT/Half 10baseT/Full 100baseT/Half 100baseT/Full 1000baseT/Half 1000baseT/Full Advertised pause frame use: No Advertised auto-negotiation: Yes Advertised FEC modes: Not reported Link partner advertised link modes: 10baseT/Half 10baseT/Full 100baseT/Half 100baseT/Full 1000baseT/Full Link partner advertised pause frame use: Symmetric Receive-only Link partner advertised auto-negotiation: Yes Link partner advertised FEC modes: Not reported Speed: 1000Mb/s Duplex: Full Port: MII PHYAD: 0 Transceiver: internal Auto-negotiation: on Link detected: yes Show statistics for a port with ip link: # ip -s link show dev eth0 4: eth0: mtu 1500 qdisc mq master br0 state UP mode DEFAULT group default qlen 1000 link/ether 00:00:00:01:00:00 brd ff:ff:ff:ff:ff:ff permaddr 00:40:42:04:98:e1 RX: bytes packets errors dropped missed mcast 0 0 0 0 0 0 TX: bytes packets errors dropped carrier collsns 2558 29 0 0 0 0 Show standard group statistics for a port with ethtool: # ethtool -S eth0 --all-groups Standard stats for eth0: eth-mac-FramesTransmittedOK: 114 eth-mac-SingleCollisionFrames: 0 eth-mac-MultipleCollisionFrames: 0 eth-mac-FramesReceivedOK: 160 eth-mac-FrameCheckSequenceErrors: 0 eth-mac-AlignmentErrors: 0 eth-mac-OctetsTransmittedOK: 11368 eth-mac-FramesWithDeferredXmissions: 0 eth-mac-LateCollisions: 0 eth-mac-FramesAbortedDueToXSColls: 0 eth-mac-FramesLostDueToIntMACXmitError: 0 eth-mac-CarrierSenseErrors: 0 eth-mac-OctetsReceivedOK: 14941 eth-mac-FramesLostDueToIntMACRcvError: 0 eth-mac-MulticastFramesXmittedOK: 10 eth-mac-BroadcastFramesXmittedOK: 1 eth-mac-FramesWithExcessiveDeferral: 0 eth-mac-MulticastFramesReceivedOK: 54 eth-mac-BroadcastFramesReceivedOK: 2 eth-mac-InRangeLengthErrors: 0 eth-mac-OutOfRangeLengthField: 0 eth-mac-FrameTooLongErrors: 0 rmon-etherStatsUndersizePkts: 0 rmon-etherStatsOversizePkts: 0 rmon-etherStatsFragments: 0 rmon-etherStatsJabbers: 0 rx-rmon-etherStatsPkts64Octets: 49 rx-rmon-etherStatsPkts65to127Octets: 106 rx-rmon-etherStatsPkts128to255Octets: 5 rx-rmon-etherStatsPkts256to511Octets: 0 rx-rmon-etherStatsPkts512to1023Octets: 0 rx-rmon-etherStatsPkts1024to1518Octets: 0 rx-rmon-etherStatsPkts1519to10239Octets: 0 tx-rmon-etherStatsPkts64Octets: 2 tx-rmon-etherStatsPkts65to127Octets: 112 tx-rmon-etherStatsPkts128to255Octets: 0 tx-rmon-etherStatsPkts256to511Octets: 0 tx-rmon-etherStatsPkts512to1023Octets: 0 tx-rmon-etherStatsPkts1024to1518Octets: 0 tx-rmon-etherStatsPkts1519to10239Octets: 0 This output consists of the 4 groups eth-phy, eth-mac, eth-ctrl and rmon. It is also possible to get these individually with the --groups option. Besides these statistics you can get port specific statistics counters, which will differ between switches. On a LAN966x you will get this output: # ethtool -S eth0 NIC statistics: rx_octets: 0 rx_unicast: 0 rx_multicast: 0 rx_broadcast: 0 rx_short: 0 rx_frag: 0 rx_jabber: 0 rx_crc: 0 rx_symbol_err: 0 rx_sz_64: 0 rx_sz_65_127: 0 rx_sz_128_255: 0 rx_sz_256_511: 0 rx_sz_512_1023: 0 rx_sz_1024_1526: 0 rx_sz_jumbo: 0 rx_pause: 0 rx_control: 0 rx_long: 0 rx_cat_drop: 0 rx_red_prio_0: 0 rx_red_prio_1: 0 rx_red_prio_2: 0 rx_red_prio_3: 0 rx_red_prio_4: 0 rx_red_prio_5: 0 rx_red_prio_6: 0 rx_red_prio_7: 0 rx_yellow_prio_0: 0 rx_yellow_prio_1: 0 rx_yellow_prio_2: 0 rx_yellow_prio_3: 0 rx_yellow_prio_4: 0 rx_yellow_prio_5: 0 rx_yellow_prio_6: 0 rx_yellow_prio_7: 0 rx_green_prio_0: 0 rx_green_prio_1: 0 rx_green_prio_2: 0 rx_green_prio_3: 0 rx_green_prio_4: 0 rx_green_prio_5: 0 rx_green_prio_6: 0 rx_green_prio_7: 0 rx_assembly_err: 0 rx_smd_err: 0 rx_assembly_ok: 0 rx_merge_frag: 0 rx_pmac_octets: 0 rx_pmac_unicast: 0 rx_pmac_multicast: 0 rx_pmac_broadcast: 0 rx_pmac_short: 0 rx_pmac_frag: 0 rx_pmac_jabber: 0 rx_pmac_crc: 0 rx_pmac_symbol_err: 0 rx_pmac_sz_64: 0 rx_pmac_sz_65_127: 0 rx_pmac_sz_128_255: 0 rx_pmac_sz_256_511: 0 rx_pmac_sz_512_1023: 0 rx_pmac_sz_1024_1526: 0 rx_pmac_sz_jumbo: 0 rx_pmac_pause: 0 rx_pmac_control: 0 rx_pmac_long: 0 tx_octets: 2558 tx_unicast: 2 tx_multicast: 27 tx_broadcast: 0 tx_col: 0 tx_drop: 0 tx_pause: 0 tx_sz_64: 0 tx_sz_65_127: 27 tx_sz_128_255: 2 tx_sz_256_511: 0 tx_sz_512_1023: 0 tx_sz_1024_1526: 0 tx_sz_jumbo: 0 tx_yellow_prio_0: 0 tx_yellow_prio_1: 0 tx_yellow_prio_2: 0 tx_yellow_prio_3: 0 tx_yellow_prio_4: 0 tx_yellow_prio_5: 0 tx_yellow_prio_6: 0 tx_yellow_prio_7: 0 tx_green_prio_0: 22 tx_green_prio_1: 0 tx_green_prio_2: 0 tx_green_prio_3: 0 tx_green_prio_4: 0 tx_green_prio_5: 0 tx_green_prio_6: 0 tx_green_prio_7: 7 tx_aged: 0 tx_llct: 0 tx_ct: 0 tx_mm_hold: 0 tx_merge_frag: 0 tx_pmac_octets: 0 tx_pmac_unicast: 0 tx_pmac_multicast: 0 tx_pmac_broadcast: 0 tx_pmac_pause: 0 tx_pmac_sz_64: 0 tx_pmac_sz_65_127: 0 tx_pmac_sz_128_255: 0 tx_pmac_sz_256_511: 0 tx_pmac_sz_512_1023: 0 tx_pmac_sz_1024_1526: 0 tx_pmac_sz_jumbo: dr_local: 0 dr_tail: 0 dr_yellow_prio_0: 0 dr_yellow_prio_1: 0 dr_yellow_prio_2: 0 dr_yellow_prio_3: 0 dr_yellow_prio_4: 0 dr_yellow_prio_5: 0 dr_yellow_prio_6: 0 dr_yellow_prio_7: 0 dr_green_prio_0: 0 dr_green_prio_1: 0 dr_green_prio_2: 0 dr_green_prio_3: 0 dr_green_prio_4: 0 dr_green_prio_5: 0 dr_green_prio_6: 0 dr_green_prio_7: 0 The output for a port on Sparx5 will be slightly different as it has a different set of counters. Show all options with ip: # ip help # ip link help # ip addr help Show all options with ethtool: # ethtool -h Not all options are supported!","title":"Front Ports","component":"bsp","version":"2024.03","name":"front_ports","url":"/bsp/2024.03/front_ports.html","titles":[{"text":"1. Interface state","hash":"_interface_state","id":1},{"text":"2. IP address","hash":"_ip_address","id":2},{"text":"3. MTU","hash":"_mtu","id":3},{"text":"4. MAC Address","hash":"_mac_address","id":4},{"text":"5. Speed and Duplex","hash":"_speed_and_duplex","id":5},{"text":"6. Flow Control","hash":"_flow_control","id":6},{"text":"7. Priority Flow Control","hash":"_priority_flow_control","id":7},{"text":"8. Show Configuration and Status","hash":"_show_configuration_and_status","id":8},{"text":"9. Show Statistics","hash":"_show_statistics","id":9},{"text":"10. References","hash":"_references","id":10}]},"100":{"id":100,"text":"","title":"G8032 functional description","component":"bsp","version":"2024.03","name":"g8032","url":"/bsp/2024.03/g8032.html","titles":[]},"101":{"id":101,"text":"This section describes how to download and build the Microchip BSP from sources. A reference board is required in order to test the resulting artifacts. The following terms are used to describe the generated artifacts throughout this document: ITB - Image Tree Blob. An image using the FIT (Flattened Image Tree) format that can contain the Linux kernel, device tree blob, root file system image etc. ITB-Rootfs - An ITB containing kernel, a number of device trees and a full SquashFS as rootfs. ITB-Initramfs - An ITB containing kernel, a number of device trees and an initramfs containing a small stage2-loader. ITB-Bare - An ITB containing kernel, a number of device trees and no root file system. ext4-ITB-Bare - An ext4 filesystem containing an ITB-Bare in the boot folder. ext4-ITB-Initramfs - An ext4 filesystem containing an ITB-Initramfs in the boot folder. ext4-Bare - An ext4 filesystem without an ITB in the boot folder. The images created by default are ITB_Rootfs and ext4-Bare. The development environment must support at least the packages required by Buildroot: https://buildroot.org/downloads/manual/manual.html#requirement On Ubuntu 20.04 LTS, the required packages can be installed like this: $ sudo apt-get install -y \\ asciidoc \\ astyle \\ autoconf \\ bc \\ bison \\ build-essential \\ ccache \\ cmake \\ cmake-curses-gui \\ cpio \\ dblatex \\ default-jre \\ doxygen \\ file \\ flex \\ gdisk \\ genext2fs \\ gettext-base \\ git \\ graphviz \\ gzip \\ help2man \\ iproute2 \\ iputils-ping \\ libacl1-dev \\ libelf-dev \\ libglade2-0 \\ libgtk2.0-0 \\ libmpc-dev \\ libncurses5 \\ libncurses5-dev \\ libncursesw5-dev \\ libssl-dev \\ libtool \\ locales \\ m4 \\ mtd-utils \\ parted \\ patchelf \\ python3 \\ python3-pip \\ rsync \\ ruby-full \\ ruby-parslet \\ squashfs-tools \\ sudo \\ texinfo \\ tree \\ u-boot-tools \\ udev \\ util-linux \\ vim \\ w3m \\ wget \\ xz-utils \\ # Additional Ruby packages $ sudo gem install nokogiri asciidoctor # Enable use of `python` command instead of `python3` $ sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 100 # Additional Python packages $ sudo python -m pip install matplotlib An alternative is to use the Docker image provided by Microchip which contains Ubuntu 20.04 LTS and all of the necessary packages. See Using Docker, for details on how to configure and use a Docker image. Microchip BSPs are stored in Amazon Web Services (AWS) at this location: http://mscc-ent-open-source.s3-website-eu-west-1.amazonaws.com/?prefix=public_root/bsp/ Download e.g. mscc-brsdk-source-2021.09.tar.gz via browser or wget: $ cd $ wget http://mscc-ent-open-source.s3-eu-west-1.amazonaws.com/public_root/bsp/mscc-brsdk-source-2021.09.tar.gz $ ls mscc-brsdk-source-2021.09.tar.gz When the BSP has been downloaded it must be extracted. $ tar xf mscc-brsdk-source-2021.09.tar.gz $ ls mscc-brsdk-source-2021.09 mscc-brsdk-source-2021.09.tar.gz Microchip BSPs requires an appropriate toolchain. They are stored in Amazon Web Services (AWS) at this location: http://mscc-ent-open-source.s3-website-eu-west-1.amazonaws.com/?prefix=public_root/toolchain/ The toolchains can be downloaded as either binary or source. We always recommend to use the binary toolchain. See Customizing the Toolchain if you want to customize the toolchain. The BSP expects the toolchain to be located in the /opt/mscc/ folder. To identify the toolchain version that matches the BSP: $ cd $ cat ./external/support/misc/mscc-version | grep toolchain toolchain: 2021.02-090 Download mscc-toolchain-bin-2021.02-090.tar.gz via browser or wget: $ wget http://mscc-ent-open-source.s3-eu-west-1.amazonaws.com/public_root/toolchain/mscc-toolchain-bin-2021.02-090.tar.gz $ ls mscc-toolchain-bin-2021.02-090.tar.gz When the toolchain has been downloaded it must be extracted into /opt/mscc: $ sudo mkdir -p /opt/mscc $ sudo tar xf mscc-toolchain-bin-2021.02-090.tar.gz -C /opt/mscc Test the toolchain: $ /opt/mscc/mscc-toolchain-bin-2021.02-090/arm-cortex_a8-linux-gnueabihf/usr/bin/arm-cortex_a8-linux-gnueabihf-gcc --version arm-cortex_a8-linux-gnueabihf-gcc.br_real (Buildroot 2021.02) 8.4.0 Copyright (C) 2018 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. The ./output folder contains predefined build folders for each target. All defconfigs added by Microchip are located in the ./external/configs folder. All packages added by Microchip are located in the ./external/package folder. All source code defined by Buildroot or added by Microchip are located as compressed files in the ./dl folder. Most of the other folders are described here: https://buildroot.org/downloads/manual/manual.html#_developer_guide Building the BSP does not require any other downloads than the BSP and toolchain packages. The BSP can be built by a script provided by Microchip or by the normal Buildroot out-of-tree procedure. Buildroot is designed to be built as non-root. There is no need to be root to configure and build when using Buildroot. The source packet contains a Ruby script called build.rb which makes it very easy to build the BSP for one or more targets. Only targets defined by Microchip can be build with the build.rb script. The syntax is ./build.rb [--configs ], where is one of [ build | pack | relocate | all ] and is a regular expression that will be matched with the defconfigs located in the ./external/configs folder, and only those that match will be built. All targets will be built if the --configs option is omitted. For more options in the ./build.rb script, please use ./build.rb --help Example for build step build with the arm_standalone target: $ ./build.rb build --configs arm_standalone_defconfig Build step build builds from the sources and stores its output in the corresponding target build folder. The output from the build step build command above is therefore located in ./output/build_arm_standalone folder. This folder contains several subfolders that are documented here: https://buildroot.org/downloads/manual/manual.html#_buildroot_quick_start The build process is logged in a file, ./output/build_arm_standalone/arm_standalone_defconfig.log. You can monitor this file from another terminal during the build process using: $ tail -f ./output/build_arm_standalone/arm_standalone_defconfig.log Example for build step pack with the arm_standalone target: $ ./build.rb pack --configs arm_standalone_defconfig Build step pack collects all the results and add them to a folder: ./output/mscc-brsdk--. The output from the build step pack command above is therefore located in folder: ./output/mscc-brsdk-arm-2021.09. Build step pack also saves the log file from the build step in file: ./output/mscc-brsdk-logs-2021.09/arm_standalone_defconfig.log. Example for build step relocate with the arm_standalone target: $ ./build.rb relocate --configs arm_standalone_defconfig [--local] Build step relocate creates an artifact folder, ./output/artifact, that contains all artifacts needed for distribution of the binary BSP. The binary BSP is installed in /opt/mscc on the local PC if the --local option is present. Using build step all executes all the above build steps in the following order: build, pack, relocate. The BSP packet has been designed to work with the Building out-of-tree concept described here: https://buildroot.org/downloads/manual/manual.html#_building_out_of_tree This means that you can switch into the build directory for the actual target and then just run e.g. make menuconfig or make without the need to pass O= and -C : Here is how to build for the same target as when using the build script above: $ cd ./output/build_arm_standalone $ make menuconfig $ make The output from the command above is located in folder: ./output/build_arm_standalone/images: If you want to use another output folder you must prepare it first: $ make BR2_EXTERNAL=./external O=./output/mybuild arm_standalone_defconfig $ cd ./output/mybuild $ make menuconfig $ make When building in this way you cannot use the build script ./build.rb to collect the artifacts. This must be done manually. If you create your own output folder structure and configuration files, please be aware that the folder structure must be two levels, corresponding to the output/target folder structure maintained with the build.rb tool. The reason for this limitation is that some of the references in the defconfig files uses relative folder references to point to build artifacts, so this must be respected unless you also update the defconfig file that you use. The artifact ITB-Rootfs is built by default. This is done via a shell script that Buildroot calls after creating filesystem images. The configuration name is BR2_ROOTFS_POST_IMAGE_SCRIPT and is accessible via menuconfig: $ cd ./output/build_arm_standalone $ make menuconfig Select System configuration and Custom scripts to run after creating filesystem images and add the script to run. Most of the targets are initially configured to use a script called post-image.sh that is located somewhere under the ./board folder. In the next field, Extra arguments passed to custom scripts, you can configure which artifacts to build. Valid values are: itb-rootfs - Build fit.itb. itb-initramfs - Build itb-initramfs.itb. itb-bare - Build itb-bare.itb. ext4-itb-bare - Build ext4-itb-bare.ext4. ext4-itb-initramfs - Build ext4-itb-initramfs.ext4. ext4-bare - Build ext4-bare.ext4. ubifs-itb-bare - Build a UBIFS image with a itb-bare.itb. Add the artifacts to build separated by a space. If this field is empty then ITB-Rootfs is built by default. Some targets supports only a subset of the artifacts. The predefined post-image.sh scripts makes use of a helper script called imggen.rb, which is located in the ./external/support/scripts folder. To see how to use this script directly: $ ./external/support/scripts/imggen.rb --help If a new package is needed, it can be added by following the description here: https://buildroot.org/downloads/manual/manual.html#adding-packages If a package needs to be modified, it is recommended to use the procedure described here: https://buildroot.org/downloads/manual/manual.html#_using_buildroot_during_development As an example, we will change the ethtool package in the arm_standalone target. First create a home for the ethtool sources: $ mkdir -p ./source/ethtool Locate the ethtool repo in the ./dl folder: $ ls ./dl/ethtool ethtool-5.10.tar.xz Unpack ethtool into its new home: $ tar xf ./dl/ethtool/ethtool-5.10.tar.xz -C ./source/ethtool Add an override file local.mk in the output folder for the arm_standalone target with the following content: $ echo \"ETHTOOL_OVERRIDE_SRCDIR = ./source/ethtool/ethtool-5.10\" > ./output/build_arm_standalone/local.mk It is possible to override more than one package in local.mk by adding a line for each package. Now do the necessary modifications in ./source/ethtool/ethtool-5.10/…​ The ethtool package must be rebuilt after being modified: $ cd ./output/build_arm_standalone $ make ethtool-rebuild all If the source folders are located outside of the BSP root and you use a Docker image you will have to mount the source folder(s) inside the Docker image. See Using Docker, for details on how to mount other folders inside the Docker image. This is a step by step guide for adding a new CMake-based package called Hello World. More details can be found here: https://buildroot.org/downloads/manual/manual.html#_infrastructure_for_cmake_based_packages The package is as simple as possible and contains only a CMake file and a .c file but the steps are the same for more complicated packages. First create a package directory: $ mkdir ./external/package/mscc-hello-world Create ./external/package/mscc-hello-world/Config.in with the following content: config BR2_PACKAGE_MSCC_HELLO_WORLD bool \"mscc-hello-world\" help Tool for configuring hello-world Create ./external/package/mscc-hello-world/mscc-hello-world.mk with the following content: MSCC_HELLO_WORLD_VERSION = 1.0 MSCC_HELLO_WORLD_SITE = http://www.hello-world.org/download MSCC_HELLO_WORLD_SOURCE = mscc-hello-world-$(MSCC_HELLO_WORLD_VERSION).tar.gz MSCC_HELLO_WORLD_INSTALL_STAGING = YES $(eval $(cmake-package)) The macro assignments needs not to select an existing repository at this point but they must be present. Include the new package directory at the bottom of the existing ./external/Config.in file: . source \"$BR2_EXTERNAL_MSCC_PATH/package/mscc-hello-world/Config.in\" Create a new home for the package sources: mkdir /home/alice/mscc-hello-world Create /home/alice/mscc-hello-world/CMakeLists.txt with the following content: cmake_minimum_required(VERSION 3.4) PROJECT(HelloWorld) add_executable(hello-world hello-world.c) install(TARGETS hello-world DESTINATION bin) Create /home/alice/mscc-hello-world/hello-world.c with the following content: #include int main() { printf(\"Hello, World!\"); return 0; } Create an override file for each target that must include the Hello World application. This example uses the arm_standalone target. Create ./output/build_arm_standalone/local.mk with the following content: MSCC_HELLO_WORLD_OVERRIDE_SRCDIR = /home/alice/mscc-hello-world Change to the target directory in order to use the following make commands: $ cd ./output/build_arm_standalone Enable mscc-hello-world (select External options and check mscc-hello-world): $ make menuconfig To build: $ make Modify source code and rebuild mscc-hello-world only: $ make mscc-hello-world-rebuild all If using Docker the source directory must be mounted in .docker.env: -MCHP_DOCKER_OPTIONS=\"-v $opt:$opt --tmpfs /tmp:exec -e BLD_USER=$(id -un) -e BLD_UID=$(id -u)\" +MCHP_DOCKER_OPTIONS=\"-v $opt:$opt --tmpfs /tmp:exec -e BLD_USER=$(id -un) -e BLD_UID=$(id -u) -v /home/alice/mscc-hello-world:/home/alice/mscc-hello-world\" The Hello World application is now part of the artifacts and can be tested on target. When the application has been tested and added into a repository the following steps must be done: Modify ./external/package/mscc-hello-world/mscc-hello-world.mk to point to the new repository. Remove the ./output/build_arm_standalone/local.mk file. The new application has now been fully added to the Buildroot system. Both the BSP and the toolchain are based on Buildroot which requires a number of mandatory and optional packages installed in the build host. You can avoid installing all of these packages by using a Docker image together with a dr helper script provided by Microchip: https://github.com/microchip-ung/docker-run Clone the repo and copy the dr script into a folder that is within your path, e.g. /usr/local/bin, and make it executable with sudo chmod a+x /usr/local/bin/dr. The dr script requires a configuration file, .docker.env, which is included in the project root of both the BSP and the toolchain sources. This configuration file contains information about which Docker image to run and also a set of options to pass to the Docker image. You will need to install Docker in order to use the dr script. See https://docs.docker.com/engine/install/ for instructions. The Docker image has been verified to work with Ubuntu 20.04 and Windows 10 with WSL2 and Ubuntu 20.04. Change current folder to the project root and try the following command: $ dr bash alice@177ef3776e6a:/home/alice/project/brsdk/mscc-brsdk-source-2021.09$ The Docker image will automatically be downloaded if it is the first time you use the dr script and it can take some time. The new prompt indicates that you are running bash inside the Docker container where all the packages required by Buildroot are available. Note that you are the same user inside the container as outside the container. The current folder is the same inside the container as outside the container. Everything within the project root is accessible inside the container. Type exit to leave the Docker container. It is now possible to run all kinds of commands inside the Docker container just by prepending the command with dr: $ dr ./build.rb -all $ cd ./output/build_arm_standalone $ dr ls -al $ dr make menuconfig $ dr make If you need to mount other folders in the container you can add them in the variable MCHP_DOCKER_OPTIONS in .docker_env: -MCHP_DOCKER_OPTIONS=\"-v $opt:$opt --tmpfs /tmp:exec -e BLD_USER=$(id -un) -e BLD_UID=$(id -u)\" +MCHP_DOCKER_OPTIONS=\"-v $opt:$opt --tmpfs /tmp:exec -e BLD_USER=$(id -un) -e BLD_UID=$(id -u) -v /usr/local/src/xyz:/usr/local/src/xyz\" Now you can access the /usr/local/src/xyz folder both inside and outside the container. The following Docker related repos and corresponding Docker image are public available on GitHub: dr script: https://github.com/microchip-ung/docker-run Dockerfile etc.: https://github.com/microchip-ung/docker-bsp-buildenv Docker image: https://github.com/orgs/microchip-ung/packages/container/package/bsp-buildenv The toolchain contains cross-compilers that are utilized to compile on one architecture and get an output that can run on a different architecture. The toolchain is distributed both in binary and source format. To customize the toolchain, the sources are needed and must be downloaded. See the Toolchain section for details on how to find the correct version of the toolchain. This tells us the toolchain version is 2021.02-090. Get and install toolchain sources: $ cd $ wget http://mscc-ent-open-source.s3-eu-west-1.amazonaws.com/public_root/toolchain/mscc-toolchain-source-2021.02-090.tar.gz $ tar -xf mscc-toolchain-source-2021.02-090.tar.gz Before starting to customize the toolchain, make sure it compiles without any modifications. The build process is automated by the ./build.rb script. Here is how to build all toolchains: $ cd mscc-toolchain-source-2021.02-090 $ ./build.rb all Lots of warnings are printed on the screen when compiling the toolchain. These are warnings in third-party code and can be ignored. For more options in the ./build.rb script, use ./build.rb --help. If the build completes successfully, it stores the resulting binary toolchain in the ./output/artifact folder. $ ls ./output/artifact files.md5 mscc-toolchain-bin-2021.02-090.tar.gz mscc-toolchain-logs-2021.02-090.tar.gz Now the toolchain is ready to be installed in /opt/mscc. See the Toolchain section for details on how to extract and install the toolchain. To alter e.g. the ARM toolchain: $ cd ./output/build_arm_toolchain $ make menuconfig $ cd ../.. The toolchain package only contains the toolchain, so in case you need to add or remove non-toolchain related packages, refer to the Build section. After this, rebuild the toolchain and pack everything to be able to use them: $ ./build.rb build --configs arm_toolchain_defconfig $ ./build.rb pack $ ./build.rb relocate Now, the new toolchain is ready to be installed into /opt/mscc as described in the Toolchain section.","title":"Getting started","component":"bsp","version":"2024.03","name":"getting-started","url":"/bsp/2024.03/getting-started.html","titles":[{"text":"1. Terms","hash":"terms","id":1},{"text":"2. Development environment","hash":"_development_environment","id":2},{"text":"3. Download","hash":"_download","id":3},{"text":"3.1. BSP","hash":"_bsp","id":4},{"text":"3.2. Toolchain","hash":"toolchain","id":5},{"text":"4. BSP structure","hash":"_bsp_structure","id":6},{"text":"5. Build","hash":"build","id":7},{"text":"5.1. Building via script","hash":"_building_via_script","id":8},{"text":"5.1.1. Build step build","hash":"_build_step_build","id":9},{"text":"5.1.2. Build step pack","hash":"_build_step_pack","id":10},{"text":"5.1.3. Build step relocate","hash":"_build_step_relocate","id":11},{"text":"5.2. Building the Buildroot way","hash":"_building_the_buildroot_way","id":12},{"text":"6. Selecting artifacts to build","hash":"selecting_artifacts","id":13},{"text":"7. Adding new packages","hash":"_adding_new_packages","id":14},{"text":"8. Modifying a package","hash":"_modifying_a_package","id":15},{"text":"9. Hello World example","hash":"_hello_world_example","id":16},{"text":"10. Using Docker","hash":"using_docker","id":17},{"text":"11. Customizing the Toolchain","hash":"customizing_toolchain","id":18},{"text":"11.1. Changing config","hash":"_changing_config","id":19}]},"102":{"id":102,"text":"This document describes the Board Support Package (BSP) that is freely available for developers that wants to build software for Microchip switch products. This material is targeting engineers integrating Microchip switches and the associated SW. A Linux based development environment is assumed and the user should also be familiar with normal application development under Linux before reading this. The BSP is based on Buildroot, which is a simple, efficient and easy-to-use tool to generate embedded Linux systems through cross-compilation. It uses the Linux Kconfig configuration system, allowing easy selection of system content. The Makefile will include a .config file generated by Kconfig. The content of this file will determine what should be built. It is relatively easy from there to add your own programs so your entire build process is automated. Home website : http://www.buildroot.net/ The Buildroot user manual can help you better understand how Buildroot works. Microchip has added packages, patches, setup, and configuration to work with Microchip provided software that is not included in mainline buildroot.","title":"README","component":"bsp","version":"2024.03","name":"index","url":"/bsp/2024.03/index.html","titles":[{"text":"Audience","hash":"_audience","id":1},{"text":"Readers guide","hash":"_readers_guide","id":2}]},"103":{"id":103,"text":"Microchip is aware that some terminology used in this technical document is antiquated and inappropriate. As a result of the complex nature of software where seemingly simple changes have unpredictable, and often far-reaching negative results on the software’s functionality (requiring extensive retesting and revalidation) we are unable to make the desired changes in all legacy systems without compromising our product or our clients' products. The Microchip BSP is based on Buildroot, which is a simple, efficient and easy-to-use tool to generate embedded Linux systems through cross-compilation. It uses the Linux Kconfig configuration system, allowing easy selection of system content. The Makefile will include a .config file generated by Kconfig. The content of this file will determine what should be built. It is relatively easy from there to add your own programs so your entire build process is automated. Home website: http://www.buildroot.net/ The Buildroot user manual can help you better understand how Buildroot works. Microchip has added packages, patches, setup, and configuration to work with Microchip provided software that is not included in mainline buildroot. The Microchip BSP is used together with other Microchip products, such as MESA, WebStaX, SMBStaX and IStaX, but can also be used for development of Switchdev based applications, which is the main focus of this document. If a switch chip supports Switchdev, all the necessary drivers are part of the upstream kernel and it is possible to use standard Linux user-space tools to configure the switch. Examples of such user-space tools are ip, bridge and tc from the iproute2 package. The BSPs can be found here: AWS BSPs Here you can find several package types: mscc-brsdk---*: The BSP for the architecture named for the named release. mscc-brsdk-source--*: The BSP source files for the release. mscc-brsdk-logs--* : The log files from the BSP build for the release. mscc-brsdk-doc--* : The one-file documentation for the release. This is only available for the older releases The toolchains that can be used to build the BSPs from source can be found here: AWS Toolchains","title":"Introduction to BSP","component":"bsp","version":"2024.03","name":"introduction","url":"/bsp/2024.03/introduction.html","titles":[{"text":"Terminology","hash":"_terminology","id":1},{"text":"Introduction","hash":"_introduction","id":2},{"text":"Repository","hash":"_repository","id":3}]},"104":{"id":104,"text":"MRP is Media Redundancy Protocol as described in IEC 62439-2. The Microchip HW Engine supports the following roles: Media Redundancy Manager(MRM), Media Redundancy Client(MRC), Media Redundancy Auto-Manager(MRA), Media Redundancy Interconnection Manager(MIM) and Media Redundancy Interconnection Client(MIC). In a MRP ring, each node needs to support MRP and in a ring can be only one MRM and multiple MRC. It is possible to have multiple instances of MRP on a single node. But a port can be part of only one MRP instance. In an Interconnect MRP ring, there are only 4 nodes where one node is MIM and the other 3 nodes are MIC. The MRM is responsible for detecting when there is a loop in the ring. It is sending the frame MRP_Test to detect the loops. It would send MRP_Test on both ports in the ring and if the frame is received at the other end, then the ring is closed. Meaning that there is a loop. In this case, it sets the port state to BLOCKED, not allowing traffic to pass through except MRP frames. In case it stops receiving MRP_Test frames from itself, then the MRM will detect that the ring is open, therefor it would notify the other nodes of this change and will set the state of the port to be FORWARDING. The MRC is responsible for forwarding MRP_Test frames between the ring ports (and not to flood on other ports) and to listen when there is a change in the network to clear the FDB. Similar with the MRP ring, in the interconnect ring, MIM sends MRP_InTest frames on all 3 ports and expects to receive at least on one port the MRP_InTest frames. The MIM can operate in a different mode where it sends CFM frames on the interconnect port. The MIM is responsible for forwarding MRP_Test frames between ring ports and MRP_InTest frames between all ports. The MIC is responsible for forwarding MRP_InTest frames on all ports. To be able to configure the switch, the following user space application is required: https://github.com/microchip-ung/mrp The model of this application is a server that implements the MRP state machine which talks with the kernel via netlink interface and a client which talks only to the server to apply different configurations. This is an example of topology. .MRP Topology Before doing any configuration it is required to start the server which needs to run background because the user will use mrp application to talk with it. mrp_server & After that is possible to create the bridge and assign the front ports to it ip link set dev eth0 up ip link set dev eth1 up ip link set dev eth2 up ip link set dev eth3 up ip link add name br0 type bridge ip link set dev eth0 master br0 ip link set dev eth1 master br0 ip link set dev eth2 master br0 ip link set dev eth3 master br0 The bridge is not set up yet because that could cause loops in the network. Once all MRP instances are created the bridge can be set up to forward also non MRP traffic. ip link set dev br0 up Now we can create MRP instances using this command: mrp addmrp bridge br0 ring_nr 1 pport eth0 sport eth1 ring_role mrm Where: bridge represents the bridge on which to create the MRP instance. ring_nr represents the ring id of which this MRP instance is part of. This id needs to be unique on each bridge. It is used to differentiate MRP instances. pport represents the primary port sport represents the secondary port ring_role represents the role of the node. This can be mrm,mrc,mra, mim,mic It is possible to create multiple MRP instances: mrp addmrp bridge br0 ring_nr 2 pport eth2 sport eth3 ring_role mrm Where: ring_nr needs to be unique pport and sport can be part of an existing ring. To see the current status of MRP instances it is possible to use this command: mrp getmrp bridge: br0 ring_nr: 1 pport: eth0 sport: eth1 ring_role: MRM ring_state: CHK_RO bridge: br0 ring_nr: 2 pport: eth2 sport: eth3 ring_role: MRM ring_state: CHK_RC Where: bridge represents the bridge on which the MRP instance exists pport and sport represents the MRP ports of the instance ring_role represents the role ring_state represents the state of the state machine. In this case first MRP instance is in open state CHK_RO and the second is in closed state CHK_RC. To delete an MRP instance: mrp delmrp bridge br0 ring_nr 1 Where: bridge represents the bridge on which MRP instance exists ring_nr represents the ring id of MRP instance It possible for a node to have also the interconnect role. But this role can be set on only when the MRP instance is created. The interconnect mode has two modes of operating: RC_MODE - where it is using MRP_InTest frames to detect if the ring is open/closed LC_MODE - where it is using CFM frames on the interconnect ports to detect if the links go down By default MRP instance with interconnect role will use RC_MODE mrp addmrp bridge br0 ring_nr 3 pport eth0 ssport eth1 ring_role mrc in_role mim in_id 1 iport eth3 Where: in_role represents the interconnect role. This can be mim or mic. id_id represents the id of the interconnect node. This id needs to be the same wit the other nodes in the interconnect ring. iport represents the interconnect port. To create MRP instance with interconnect role that use LC_MODE the following command can be used: mrp addmrp bridge br0 ring_nr 3 pport eth0 ssport eth1 ring_role mrc in_role mim in_id 1 iport eth3 in_mode lc cfm_instance 1 cfm_level 7 cfm_mepid 2 cfm_peer_mepid 1 cfm_dmac 00:00:00:00:00:02 cfm_maid ABCD Where: in_mode represents the operation mode. This can be lc or rc. cfm_instance represents the id of the cfm instance cfm_level represents MEG level cfm_mepid represents the MEP id of the MEP cfm_peer_mepid represents the MRP id of the peer MEP cfm_dmac represents the MAC address of the MEP cfm_maid represents the MAID domain name More information about CFM can be found here: https://github.com/microchip-ung/cfm","title":"MRP functional description","component":"bsp","version":"2024.03","name":"mrp","url":"/bsp/2024.03/mrp.html","titles":[{"text":"1. Introduction","hash":"_introduction","id":1},{"text":"2. Usage","hash":"_usage","id":2},{"text":"2.1. Server","hash":"_server","id":3},{"text":"2.2. Bridge","hash":"_bridge","id":4},{"text":"2.3. Client","hash":"_client","id":5},{"text":"2.3.1. Add MRM/MRC","hash":"_add_mrmmrc","id":6},{"text":"2.3.2. Get status","hash":"_get_status","id":7},{"text":"2.3.3. Delete MRP","hash":"_delete_mrp","id":8},{"text":"2.3.4. Add MIM/MIC","hash":"_add_mimmic","id":9}]},"105":{"id":105,"text":"After a reboot all interfaces can be considered as standard Ethernet interfaces with no bridging involved. Only the CPU can send and receive frames through these interfaces. All interfaces are disabled by default and will need to be enabled before they can be used. To enable an interface and check the status: # ip link set dev eth0 up # ip link show dev eth0 4: eth0: mtu 1500 qdisc mq state UP mode DEFAULT group default qlen 1000 link/ether 00:40:42:04:98:9b brd ff:ff:ff:ff:ff:ff To disable an interface and check the status: # ip link set dev eth0 down # ip link show dev eth0 4: eth0: mtu 1500 qdisc mq state DOWN mode DEFAULT group default qlen 1000 link/ether 00:40:42:04:98:9b brd ff:ff:ff:ff:ff:ff It is possible to assign an IP address to an interface and use it as a standard network interface. To assign an IP address and check the status: # ip link set dev eth0 up # ip addr set dev eth0 192.168.1.1 # ip addr show dev eth0 4: eth0: mtu 1500 qdisc mq state UP group default qlen 1000 link/ether 00:40:42:04:98:9b brd ff:ff:ff:ff:ff:ff inet 192.168.1.1/24 scope global eth0 valid_lft forever preferred_lft forever inet6 fe80::240:42ff:fe04:989b/64 scope link valid_lft forever preferred_lft forever It is now possible to ping hosts on the same subnet: # ping 192.168.1.2 PING 192.168.1.2 (192.168.1.2) 56(84) bytes of data. 64 bytes from 192.168.1.2: icmp_seq=1 ttl=64 time=0.629 ms 64 bytes from 192.168.1.2: icmp_seq=2 ttl=64 time=0.334 ms 64 bytes from 192.168.1.2: icmp_seq=3 ttl=64 time=0.325 ms 64 bytes from 192.168.1.2: icmp_seq=4 ttl=64 time=0.337 ms ^C --- 192.168.1.2 ping statistics --- 4 packets transmitted, 4 received, 0% packet loss, time 3076ms rtt min/avg/max/mdev = 0.325/0.406/0.629/0.128 ms To delete an IP address and check the status: # ip addr del dev eth0 192.168.1.1/24 # ip addr show dev eth0 4: eth0: mtu 1500 qdisc mq state UP group default qlen 1000 link/ether 00:40:42:04:98:9b brd ff:ff:ff:ff:ff:ff inet6 fe80::240:42ff:fe04:989b/64 scope link valid_lft forever preferred_lft forever #","title":"Network Host Mode functional description","component":"bsp","version":"2024.03","name":"network_host_mode","url":"/bsp/2024.03/network_host_mode.html","titles":[{"text":"1. Interface mode","hash":"_interface_mode","id":1},{"text":"2. IP address","hash":"_ip_address","id":2}]},"106":{"id":106,"text":"The different switch chips have different hardware features, and the software provided with the switch may implement a subset of these features, so here is an overview of what is provided for the different platforms: Feature LAN966x Support Sparx5 Support LAN969x Support Priority Flow Control ✔ · · Mirroring ✔ ✔ ✔ Link Aggregation ✔ · · IGMP/MLD Snooping ✔ · · Spanning Tree Protocol ✔ ✔ ✔ Shared Filter Blocks ✔ · · Basic Ingress QoS ✔ ✔ ✔ Port Policer ✔ ✔ ✔ ACL Policer ✔ ✔ ✔ PSFP Policer ✔ ✔ ✔ Strict and DWRR scheduling ✔ ✔ ✔ Time-Aware Scheduling ✔ ✔ · Frame Preemption ✔ ✔ ✔ Port Shaping ✔ ✔ ✔ Priority Shaping ✔ ✔ ✔ Basic Egress VLAN Tagging ✔ ✔ ✔ VLAN tagging ✔ ✔ ✔ Per Stream Filtering and Policing (PSFP) ✔ ✔ ✔ Frame Replication and Elimination for Reliability (FRER) ✔ · · Media Redundancy Protocol (MRP) ✔ · · Connectivity Fault Management ✔ · · Precision Time Protocol (PTP) ✔ ✔ ·","title":"Networking Overview","component":"bsp","version":"2024.03","name":"network_overview","url":"/bsp/2024.03/network_overview.html","titles":[]},"107":{"id":107,"text":"","title":"OPC-UA Pub/Sub functional description","component":"bsp","version":"2024.03","name":"opc_ua_pub_sub","url":"/bsp/2024.03/opc_ua_pub_sub.html","titles":[]},"108":{"id":108,"text":"","title":"Peripherals functional description","component":"bsp","version":"2024.03","name":"peripherals","url":"/bsp/2024.03/peripherals.html","titles":[{"text":"1. Flexcomm","hash":"_flexcomm","id":1},{"text":"2. SPI/I2c/CAN","hash":"_spii2ccan","id":2},{"text":"3. USB","hash":"_usb","id":3},{"text":"3.1. Host","hash":"_host","id":4},{"text":"3.2. Device","hash":"_device","id":5}]},"109":{"id":109,"text":"Policing is used to limit the bandwidth of traffic that enters the switch at ingress. Traffic that exceeds the configured bandwidth is dropped. A policer is configured by using rate and burst parameters, where rate is the maximum traffic rate in bits per second and burst is the maximum allowed burst in bytes. Policers are implemented using a tc filter containing a police action. The tc filter is attached to a clsact qdisc which must be created first: # tc qdisc add dev eth0 clsact See the TC Introduction page for a general introduction to tc commands. A port policer limits the bandwidth of traffic that enters the port at ingress and is implemented by a tc matchall filter. Setup a port policer with a rate of 100 Megabits per second and a burst of 4096 bytes: # tc filter add dev eth0 ingress prio 100 handle 200 matchall skip_sw \\ action police rate 100000000 burst 4096 The skip_sw flag signals that hardware offload is required. Show port policer statistics: # tc -s filter show dev eth0 ingress filter protocol all pref 100 matchall chain 0 filter protocol all pref 100 matchall chain 0 handle 0xc8 skip_sw in_hw (rule hit 0) action order 1: police 0x1 rate 100Mbit burst 4075b mtu 2Kb action reclassify overhead 0b ref 1 bind 1 installed 0 sec used 0 sec Action statistics: Sent 1004000 bytes 1000 pkt (dropped 893, overlimits 0 requeues 0) Sent software 0 bytes 0 pkt Sent hardware 1004000 bytes 1000 pkt backlog 0b 0p requeues 0 used_hw_stats immediate Here it is shown that 893 packets out of 1000 packets are dropped. Delete the port policer created above: # tc filter del dev eth0 ingress prio 100 handle 200 matchall An ACL policer makes it possible to limit the bandwidth of a specific incoming traffic stream. ACL policers are implemented by a tc flower filter that is hardware offloaded via VCAP IS2. See the TC and VCAP page for more information about how to configure VCAPs by using tc commands. Setup an ACL policer with a rate of 100 Megabits per second and a burst of 4096 bytes that polices all traffic containing destination IP address 10.10.10.10: # tc filter add dev eth0 ingress chain 20000 prio 100 handle 200 protocol ip flower skip_sw \\ dst_ip 10.10.10.10 \\ action police rate 100000000 burst 4096 \\ action goto chain 21000 The skip_sw flag signals that hardware offload is required. Show ACL policer statistics: # tc -s filter show dev eth0 ingress filter protocol ip pref 100 flower chain 20000 filter protocol ip pref 100 flower chain 20000 handle 0xc8 eth_type ipv4 dst_ip 10.10.10.10 skip_sw in_hw in_hw_count 1 action order 1: police 0x1 rate 100Mbit burst 4075b mtu 2Kb action reclassify overhead 0b ref 2 bind 1 installed 8 sec used 8 sec Action statistics: Sent 0 bytes 10000 pkt (dropped 0, overlimits 0 requeues 0) Sent software 0 bytes 0 pkt Sent hardware 0 bytes 10000 pkt backlog 0b 0p requeues 0 used_hw_stats immediate action order 2: gact action goto chain 21000 random type none pass val 0 index 2 ref 1 bind 1 installed 8 sec used 8 sec Action statistics: Sent 0 bytes 10000 pkt (dropped 0, overlimits 0 requeues 0) Sent software 0 bytes 0 pkt Sent hardware 0 bytes 10000 pkt backlog 0b 0p requeues 0 used_hw_stats immediate Here it is shown that the filter was hit by 10000 packets. ACL policers do not support count of dropped frames. Delete the ACL policer created above: # tc filter del dev eth0 ingress chain 20000 prio 100 handle 200 protocol ip flower A PSFP policer works in much the same way as an ACL policer and is explained in detail on the PSFP page.","title":"Policing","component":"bsp","version":"2024.03","name":"policing","url":"/bsp/2024.03/policing.html","titles":[{"text":"1. Port Policer","hash":"_port_policer","id":1},{"text":"2. ACL Policer","hash":"_acl_policer","id":2},{"text":"3. PSFP Policer","hash":"_psfp_policer","id":3}]},"110":{"id":110,"text":"","title":"Profinet functional description","component":"bsp","version":"2024.03","name":"profinet","url":"/bsp/2024.03/profinet.html","titles":[{"text":"1. p-net support","hash":"_p_net_support","id":1}]},"111":{"id":111,"text":"PSFP works on ingress and allows filtering and policing on a per-stream basis. PSFP was originally defined in 802.1Qci-2017 but is now part of 802.1Q-2018. PSFP is implemented by a tc flower filter that is hardware offloaded via the IS1 VCAP. See the TC Introduction page for a general introduction to tc commands and the TC and VCAP page for more information about how to configure VCAPs by using tc commands. The examples shown here will match on destination MAC address and VLAN ID, also known as a Null Stream identification function as defined in 802.1CB-2017. The stream filter implementation is able to match on everything that is supported in the IS1 VCAP and this includes the other two passive stream identification functions defined in 802.1CB-2017: Source MAC and VLAN Stream identification function IP Stream identification Just like with any other tc filter command, you must create a 'clsact' qdisc: # tc qdisc add dev eth0 clsact To setup a stream filter with a stream gate and a flow meter: # tc filter add dev eth0 ingress chain 10000 prio 1 handle 2 protocol 802.1q flower skip_sw \\ dst_mac 00:00:00:00:00:11 \\ vlan_id 100 \\ vlan_ethtype all \\ action gate base-time 0 sched-entry open 10000000 3 8m sched-entry close 90000000 \\ action police rate 100000000 burst 15000 mtu 1200 \\ action goto chain 11000 All packets with DMAC 00:00:00:00:00:11 and VID 100 are matched. Gate is open in 10mS and closed in 90mS. Cycle time is implicit at 100mS. Frames that pass the gate are assigned an internal priority value of 3. A maximum of 8 megabytes can pass the gate during open time. Policer rate is 100 mbps and burst size is 15000 bytes. Frames larger than 1200 bytes are discarded. It is possible to create a stream filter with only a stream gate or a flow meter by removing the line with 'gate' or 'police'. If you want to limit the max sdu without policing, you must still create a flow meter but with a rate that exceeds the line speed. If you want to use the stream gate or flow meter in several stream filters, you can create them explicitly and giving them an index: # tc actions add action gate base-time 0 sched-entry open 10000000 3 8m sched-entry close 90000000 index 42 # tc actions add action police rate 100000000 burst 15000 mtu 1200 index 20 Then use the same indexes in several stream filters: # tc filter add dev eth0 ingress chain 10000 prio 1 handle 2 protocol 802.1q flower skip_sw \\ dst_mac 00:00:00:00:00:11 \\ vlan_id 100 \\ vlan_ethtype all \\ action gate index 42 \\ action police index 20 \\ action goto chain 11000 # tc filter add dev eth0 ingress chain 10000 prio 1 handle 3 protocol 802.1q flower skip_sw \\ dst_mac 00:00:00:00:00:22 \\ vlan_id 200 \\ vlan_ethtype all \\ action gate index 42 \\ action police index 20 \\ action goto chain 11000 Use the 'tc filter show' command to see the statistics: # tc -s filter show dev eth0 ingress filter protocol 802.1Q pref 1 flower chain 10000 filter protocol 802.1Q pref 1 flower chain 10000 handle 0x2 vlan_id 100 vlan_ethtype all dst_mac 00:00:00:00:00:22 eth_type 0003 skip_sw in_hw in_hw_count 1 action order 1: priority wildcard clockid TAI flags 0 base-time 0ns cycle-time 100ms cycle-time-ext 0ns schedule: number 0 gate-state open interval 10ms ipv 3 max-octets 8Mb number 1 gate-state close interval 90ms ipv wildcard max-octets wildcard pipe index 42 ref 2 bind 1 installed 9 sec used 2 sec Action statistics: Sent 0 bytes 10000 pkt (dropped 9849, overlimits 0 requeues 0) Sent software 0 bytes 0 pkt Sent hardware 0 bytes 10000 pkt backlog 0b 0p requeues 0 used_hw_stats immediate action order 2: police 0x14 rate 100Mbit burst 15000b mtu 1200b action reclassify overhead 0b ref 2 bind 1 installed 8 sec used 2 sec Action statistics: Sent 0 bytes 10000 pkt (dropped 9849, overlimits 0 requeues 0) Sent software 0 bytes 0 pkt Sent hardware 0 bytes 10000 pkt backlog 0b 0p requeues 0 used_hw_stats immediate action order 3: gact action goto chain 11000 random type none pass val 0 index 1 ref 1 bind 1 installed 7 sec used 2 sec Action statistics: Sent 0 bytes 10000 pkt (dropped 9849, overlimits 0 requeues 0) Sent software 0 bytes 0 pkt Sent hardware 0 bytes 10000 pkt backlog 0b 0p requeues 0 used_hw_stats immediate As seen above, it is not possible to see all the PSFP specific counters. The \"10000 pkt\" corresponds to the matching_frames_count The \"dropped 9849\" is the sum of not_passing_frames_count, not_passing_sdu_count and red_frames_count. In order to see all the PSFP counters you can use a debug command: # cat /sys/kernel/debug/lan966x/qos_show PSFP Stream Filter Pool: ix 0: mfc: 10000 pfc: 866 npfc: 9134 psc: 866 npsc: 0 rfc: 715 lu: 17179620 PSFP Stream Gate Pool: ix 0: user 1 id 42 ref_cnt 1 PSFP and ACL Policer Pool: ix 81: user 1 id 20 ref_cnt 1 ptp current time : 52.109889569 sec Here the PSFP counters are shown as: mfc - matching_frames_count pfc - passing_frames_count npfc - not_passing_frames_count psc - passing_sdu_count npsc - not_passing_sdu_count rfc - red_frames_count lu - last update time in jiffies Up to 256 stream filters are supported and each stream filter can have its own stream gate and flow meter. The valid values for open and close time in a stream gate are >= 1uS and < 1S. Maximum number of scheduler entries in a stream gate is 4. The unit for rate is bits per second and valid values are from 100000 to 1000000000. The resolution in hardware is 33 1/3 kbps and the value is rounded up to the nearest next supported value. The unit for burst is bytes and valid values are from 4096 to 245760 bytes. The resolution in hardware is 4096 bytes and the value is rounded up to the nearest next supported value.","title":"PSFP (Per Stream Filtering and Policing)","component":"bsp","version":"2024.03","name":"psfp","url":"/bsp/2024.03/psfp.html","titles":[]},"112":{"id":112,"text":"PTP is Precision Time Protocol as described by IEEE standard 1588. The purpose of this application is to allow to synchronize multiple clocks in the network. This software is based on the open source project linuxptp. On top of which were added patches to add support for Relay as described in 8021.AS 2020. The plan is to have these patches upstream to the linuxptp project. The application that is part of the BSP has these extra patches. This project can be found here ptp4l Ptp4l supports the following: hardware and software timestamping: 1-step and 2-step implements: ordinary, boundary, transparent clocks and AS bridge transport over UDP/IPv4, UDP/IPv6, raw Ethernet supports multiple servos: pi, linreq, ntpshm, nullf There are multiple executable that are are used: ptp4l: this is the daemon that adjusted the PHC(Physical Hardware Clock) such offset from master is 0. pmc: short live application to interact with ptp4l to inspect status and allow certain configurations attributes to be updated without restarting the daemon phc2sys: this is a daemon which is used to synchronize two or more clocks in the system. Typically is used to synchronize the system clock with a PTP hardware clock which itself is synchronized using ptp4l daemon. ts2phc: this is a daemon which is used to synchronize a PTP hardware clock to GPS and or 1PPS. It is possible to pass the following arguments to ptp4l to the command line. The most important arguments are: -l: to set the log level -m: to print message to standard output -i: interface on which to run -f: to set the configuration file -p: specify directly the PHC device When ptp4l is started, it has an option to read the configuration from a file. The most important configurations options are: delay_mechanism: which can be P2P, Auto or E2E. network_transport: which can be L2, UDPv4 or UDPv6. time_stamping: which can be: hardware, software or legacy. clock_type: which can be OC, BC or Relay slaveOnly: force the node to behave as a slave only domainNumber: represents the PTP domain number. Default is 0. twoStepFlag: a value of 1 uses 2-step timestamping, while a value of 0 uses 1-step timestamping For more details about ptp4l run: man ptp4l Ptp4l is works on the physical interfaces and not on the bridge interface, so before starting the daemon, make sure that the interface is up using the command: ip link set dev eth0 up To run ptp4l as ordinary clock, the following configuration is needed: cat > /tmp/linux.cfg [global] clock_type OC delay_mechanism E2E network_transport L2 time_stamping hardware first_step_threshold 0.000001 step_threshold 0.000001 [eth0] And start ptp4l as: ptp4l -f /tmp/linux.cfg & For the boundary clock, it is required at least 2 network interfaces. Because it is required have 1 slave and at least 1 master. Therefore the configuration file can look like this: cat > /tmp/linux.cfg [global] clock_type BC delay_mechanism E2E network_transport L2 time_stamping hardware first_step_threshold 0.000001 step_threshold 0.000001 [eth0] [eth1] And start ptp4l as: ptp4l -f /tmp/linux.cfg & For the transparent clock, it is required at least 2 network interfaces. The frames will be forward in SW by the ptp4l application but the timestamps will be do by the HW. The configuration file can look like this: [global] priority1 254 free_running 1 freq_est_interval 3 tc_spanning_tree 1 summary_interval 1 clock_type P2P_TC network_transport L2 delay_mechanism P2P [eth0] [eth1] And start ptp4l as: ptp4l -f /tmp/linux.cfg & The support for this feature is not part of the upstream project. Therefore the implementation and the configuration might changed based on the requests received when this feature will be upstream. The relay behaves similar to the transparent clock and to boundary clock. The ptp4l configuration for relay can be the following: cat > /tmp/linux.cfg [global] priority1 254 priority2 254 clock_type RELAY network_transport L2 delay_mechanism P2P path_trace_enabled 1 transportSpecific 1 follow_up_info 1 ptp_dst_mac 01:80:C2:00:00:0E gmCapable 1 logAnnounceInterval 0 logSyncInterval -3 syncReceiptTimeout 3 free_running 1 summary_interval 1 [eth0] [eth1] [eth2] And start ptp4l as: ptp4l -f /tmp/linux.cfg & It is possible to run multiple ptp4l instances and each of them to control a different PHC. For example, let’s say that we want to control PHC0 and PHC1 and they have the PTP domains 0 and 20. cat > /tmp/ptp0.cfg [global] clock_type OC delay_mechanism E2E network_transport L2 time_stamping hardware first_step_threshold 0.000001 step_threshold 0.000001 And start the first ptp4l using: ptp4l -p /dev/ptp0 -f /tmp/ptp0.cfg & And the second ptp4l will have the configuration: cat > /tmp/ptp1.cfg [global] clock_type OC delay_mechanism E2E network_transport L2 time_stamping hardware first_step_threshold 0.000001 step_threshold 0.000001 domainNumber 20 And start the second ptp4l using: ptp4l -p /dev/ptp1 -f /tmp/ptp0.cfg & If multiple ptp4l instances need to access the same PHC then it is possible and recommended to use the option -i instead of -p. This feature is still in early stage and is not supported by all the platforms. DPLL (Digital Phased-Locked Loop) is a device that might exists on the boards. It is possible to expose this device as a HW clock (ptp device) but then it is required to configure this device when using ptp4l and not the other timestamping unit devices. If the HW doesn’t support this or the timestamping units (PHY or switch) doesn’t have 2 signals (1588 REF clock and 1PPS input) from the DPLL then it is not possible to use the DPLL. Before using this make sure that the HW supports this. The main advantage of the DPLL, is that it has a more stable clock and then it is not required to run phc2sys to synchronize different PTP clocks as the clocks will be synchronized using ts2phc every second. First it is required to synchronize the DPLL with the timestamping units, to achieve this, it is required to run ts2phc. As all the devices run on the same frequency it is just required to setup the time. To achieve this the following configuration can be used [global] clock_servo nullf first_step_threshold 0.000000001 step_threshold 0.000000001 ts2phc.pulsewidth 100000000 [/dev/ptp1] ts2phc.pin_index 3 [/dev/ptp2] ts2phc.pin_index 3 [/dev/ptp3] ts2phc.pin_index 3 [/dev/ptp10] ts2phc.master 1 ts2phc.pin_index 0 ts2phc.channel 0 Where: /dev/ptp10: is the DPLL clock /dev/ptp1: is the timestamping unit clock /dev/ptp2: is the timestamping unit clock /dev/ptp3: is the timestamping unit clock ts2phc.pin_index: represents the pin on which the event is expected. For master it represents the pin on which to generate the 1PPS and for slave it represents the pin on which to receive the 1PPS. It is required for this program to run always in the background as all the devices need to always be in sync: ts2phc -f /tmp/ts2phc.cfg -l 7 & Once running this program, then all the devices will be in sync and once all of them are in sync then it is possible to start the ptp4l. The ptp4l configuration can be like this: [global] clock_type BC delay_mechanism P2P network_transport L2 time_stamping hardware first_step_threshold 0.0000001 step_threshold 0.0000001 logAnnounceInterval 0 logSyncInterval 0 logMinPdelayReqInterval 0 tx_timestamp_timeout 2000 priority1 254 priority2 254 step_window 3 [eth2] [eth4] This is an example of a boundary clock. The main configuration option are: step_window: represents how many sync frames to ignore after the time was adjusted, so this value needs to be in sync with logSyncInterval. It is recommend that total wait time to be 3 sec. logSyncInterval: represents the log interval of the sync frames. This needs to be in sync with step_window. And to start the ptp4l is required to start it option '-p' which needs to point to the DPLL ptp clock, for example: ptp4l -m -l 7 -f /tmp/ptp4l.cfg -p /dev/ptp10 To be able to see the current status of the ptp4l daemon, it is possible to use the pmc application. For example to read the offset from master: pmc -u -b 0 'GET CURRENT_DATA_SET' sending: GET CURRENT_DATA_SET a0369f.fffe.67c4e6-0 seq 0 RESPONSE MANAGEMENT CURRENT_DATA_SET stepsRemoved 1 offsetFromMaster 10.0 meanPathDelay 252.0 For more details about pmc run: man pmc To synchronize the system clock to one of the PHC, the following command can be used: phc2sys -s /dev/ptp0 -c CLOCK_REALTIME -O 0 Also it is possible to synchronize 2 PHC using the command: phc2sys -s /dev/ptp0 -c /dev/ptp1 -O 0 Where: -s: represents the master clock -c: represents the slave clock -O: represents the offset between the slave and master times in seconds. For more details about phc2sys run: man phc2sys Synchronizes one or more PTP Hardware Clocks using external time stamps. It can synchronize to 1PPS or 1PPS providing TOD information. For more details about ts2phc run: man ts2phc Allows to test different features of the PHC. But it also allows to configure different pins of the PHC to have different functions like generating 1PPS or detect rising or falling edges of a signal that comes to the pin. For example to configure pin 3 to generate 1 PPS with the pulse witdh of 200ms. testptp -L 3,2; testptp -p 1000000000 -w 200000000 -H 0 For example to configure pin 2 to store the timestamp when seeing a rising or failling edge testptp -L 2,1 For more details about testptp run: testptp --help IEEE1588 over Ethernet boundary clock: [global] delay_mechanism E2E network_transport L2 time_stamping hardware first_step_threshold 0.000001 step_threshold 0.000001 clock_type BC logAnnounceInterval 0 logSyncInterval -4 logMinDelayReqInterval -2 [eth0] [eth1] IEEE1588 over Ethernet ordinary clock: [global] delay_mechanism E2E network_transport L2 time_stamping hardware first_step_threshold 0.000001 step_threshold 0.000001 logAnnounceInterval 0 logSyncInterval -4 logMinDelayReqInterval -2 [eth0] IEEE1588 over IPv4 boundary clock: [global] delay_mechanism E2E network_transport UDPv4 time_stamping hardware first_step_threshold 0.000001 step_threshold 0.000001 clock_type BC logAnnounceInterval 0 logSyncInterval -4 logMinDelayReqInterval -2 [eth0] [eth1] IEEE1588 over IPv4 ordinary clock: [global] delay_mechanism E2E network_transport UDPv4 time_stamping hardware first_step_threshold 0.000001 step_threshold 0.000001 logAnnounceInterval 0 logSyncInterval -4 logMinDelayReqInterval -2 [eth0] IEEE1588 over IPv6 boundary clock: [global] delay_mechanism E2E network_transport UDPv6 time_stamping hardware first_step_threshold 0.000001 step_threshold 0.000001 clock_type BC logAnnounceInterval 0 logSyncInterval -4 logMinDelayReqInterval -2 [eth0] [eth1] IEEE1588 over IPv6 ordinary clock: [global] delay_mechanism E2E network_transport UDPv6 time_stamping hardware first_step_threshold 0.000001 step_threshold 0.000001 logAnnounceInterval 0 logSyncInterval -4 logMinDelayReqInterval -2 [eth0] IEEE802.1AS Relay [global] priority1 254 priority2 254 clock_type RELAY network_transport L2 delay_mechanism P2P path_trace_enabled 1 transportSpecific 1 follow_up_info 1 ptp_dst_mac 01:80:C2:00:00:0E gmCapable 1 logAnnounceInterval 0 logSyncInterval -3 syncReceiptTimeout 3 free_running 1 summary_interval 1 tc_spanning_tree 1 [eth0] [eth1] IEEE802.1AS End-node [global] gmCapable 1 priority1 248 priority2 248 logAnnounceInterval 0 logSyncInterval -3 syncReceiptTimeout 3 neighborPropDelayThresh 800 min_neighbor_prop_delay -20000000 assume_two_step 1 path_trace_enabled 1 follow_up_info 1 transportSpecific 0x1 ptp_dst_mac 01:80:C2:00:00:0E network_transport L2 delay_mechanism P2P [eth0]","title":"PTP functional description","component":"bsp","version":"2024.03","name":"ptp","url":"/bsp/2024.03/ptp.html","titles":[{"text":"1. PTP4L","hash":"_ptp4l","id":1},{"text":"1.1. Ordinary clock(OC)","hash":"_ordinary_clockoc","id":2},{"text":"1.2. Boundary clock(BC)","hash":"_boundary_clockbc","id":3},{"text":"1.3. Transparent clock(TC)","hash":"_transparent_clocktc","id":4},{"text":"1.4. AS Bridge(Relay)","hash":"_as_bridgerelay","id":5},{"text":"1.5. Multiple PTP instances","hash":"_multiple_ptp_instances","id":6},{"text":"1.6. DPLL","hash":"_dpll","id":7},{"text":"2. PMC","hash":"_pmc","id":8},{"text":"3. PHC2SYS","hash":"_phc2sys","id":9},{"text":"4. TS2PHC","hash":"_ts2phc","id":10},{"text":"5. TESTPTP","hash":"_testptp","id":11},{"text":"6. Default configurations","hash":"_default_configurations","id":12}]},"113":{"id":113,"text":"","title":"RTE/MERA functional description","component":"bsp","version":"2024.03","name":"rte_mera","url":"/bsp/2024.03/rte_mera.html","titles":[]},"114":{"id":114,"text":"The classified priority is a number from 0 to 7 where 0 is the lowest priority and 7 is the highest priority. Strict scheduling is the default behaviour at egress. A port has eight priority queues and frames in the highest priority queue are always transmitted before frames in lower priority queues. If shapers are needed on one or more of these eight priority queues then the mqprio qdisc can be used. The mqprio qdisc does nothing by itself but serves as an attachment point for shapers. To create an mqprio qdisc on eth0 and attach a cbs shaper on priority queue 4: # tc qdisc add dev eth0 root handle 1:0 mqprio # tc qdisc replace dev eth0 parent 1:5 handle 2 cbs \\ idleslope 10000 sendslope -990000 hicredit 15 locredit -990 offload 1 The mqprio handle is 1:0 and the major part is 1. The minor part of a qdisc handle must always be 0. The cbs parent is 1:5 where the major part (1) must match the major part of the mqprio handle and the minor part (5) designates priority queue 4. The minor part is always offset by one and minor part 5, therefore, corresponds to priority queue 4. See the Priority Shaping section on the Shaping page for a description of the supported shapers and their parameters. Default is that the frames are subject to the strict priority shaper algorithm. It can be configured that priorities are subject to Enhanced Transmission Selection (ETS). These are the lowest priorities so that transmission from strict priorities are always done first. Configuration is done using the tc qdisc add ets command. This command configures bands as either strict or bandwidth-sharing (DWRR). According to tc-ets(8) man page: When dequeuing, strict bands are tried first, if there are any. Band 0 is tried first. This means that the first band - band 0 - has the highest priority. In the Microchip switch, there are 8 priorities 0-7 and it is priority 7 that has the highest priority. This is not configurable. This means that Band 0 always equals to Priority 7. This command configures a mix of strict and ETS priorities: tc qdisc add dev eth0 handle 1: root ets bands 8 strict 5 quanta 1000 1000 1000 priomap 7 6 5 4 3 2 1 0 The device (port) is eth0. The handle for this tc is 1: There are (always) 8 bands The first 5 bands are strict. The next 3 bands have an equal quanta of 1000. The priomap is (always) 7 6 5 4 3 2 1 0 The quanta parameter gives the DWRR weight for each band. In this case 1/3 of the bandwidth to each band. The priomap is configuring per priority what the related band is - Priority 0 is the first in the list. As Priority 0 has the lowest priority it maps to band 7 that is the band with the lowest priority. The priomap must always be configured as shown above. This command changes the quantum parameter for a specific band. tc qdisc add dev eth0 handle 1: root ets bands 8 strict 5 quanta 600 300 100 priomap 7 6 5 4 3 2 1 0 tc class change dev eth0 classid 1:6 ets quantum 800 The device (port) is eth0. The classid is 1:6 the quantum is 800 According to tc-ets(8) man page: The minor number of `classid` to use when referring to a band is the band number increased by one. So in this case the changed band is 5 - the first bandwidth-sharing band. Time-aware scheduling, as described in IEEE Std 802.1Q-2018 Section 8.6.8.4, is implemented using the taprio qdisc. A cyclic schedule opens and closes each priority queue relative to a known timescale, e.g. controlled via PTP. When a queue is closed all frames are held back in the queue and when it opens again the frames are transmitted again in priority order. A taprio qdisc is created using the tc qdisc command. # tc qdisc add dev eth0 root handle 1:0 taprio \\ num_tc 8 queues 1@0 1@1 1@2 1@3 1@4 1@5 1@6 1@7 map 0 1 2 3 4 5 6 7 \\ flags 2 base-time 0 cycle-time 50000000 \\ sched-entry S 0x80 10000000 \\ sched-entry S 0x7f 40000000 The taprio qdisc is a little more complicated to set up as the tc taprio command does not (yet) support the same defaults as the tc mqprio command. Here you must manually set up the number of traffic classes, the mapping from traffic class to priority, and flags that indicates HW offload. The rest of the parameters are for the time-aware scheduler configuration: base-time - The PTP time when the cycle should start. Set to 0 if the cycle should start immediately. cycle-time - The total cycle-time in nanoseconds. sched-entry - A single entry in the schedule where S is the command 'SetGateStates' followed by a mask that selects the queues to open (LSB is the lowest priority queue) and finally the duration of the entry in nanoseconds. In the example above the cycle-time is 50 milliseconds, queue 7 is open for 10 milliseconds and all other queues are open for 40 milliseconds. This cycle repeats forever. It is possible to add a shaper on one or more of the eight priority queues in the same way as on the mqprio qdisc. See the Priority Shaping section on the Shaping page for a description of the supported shapers and their parameters.","title":"Scheduling","component":"bsp","version":"2024.03","name":"scheduling","url":"/bsp/2024.03/scheduling.html","titles":[{"text":"1. Strict scheduling.","hash":"mqprio_qdisc","id":1},{"text":"2. Strict and DWRR scheduling.","hash":"ets_qdisc","id":2},{"text":"3. Time-Aware Scheduling","hash":"taprio_qdisc","id":3}]},"115":{"id":115,"text":"Shaping is used to limit the bandwidth of traffic at egress. Traffic that exceeds the configured bandwidth is buffered in the queue system. Shapers are implemented by using a tc qdisc. A port shaper limits the bandwidth of all traffic that is egressing at a port and is implemented by a tbf qdisc. A tbf qdisc that implements a port shaper must be attached to the root: # tc qdisc add dev eth0 root handle 1:0 tbf \\ rate 10000000 burst 8192 limit 1m The parameters have the following meaning: rate - The bitrate is specified in bits per second. burst - The burst size in bytes. limit - Buffer size. This parameter is not offloaded (and ignored) but is required by the tc command. In the example above a tbf qdisc is created with a rate of 10 megabits per second and a burst size of 8192 bytes. A priority shaper limits the bandwidth of a specific priority that is egressing at a port and is implemented by either a tbf qdisc or a cbs qdisc. The main difference between these two is the way that bursts are handled. The tbf qdisc is continuously assigned new credit according to the configured shaper rate. This implies that after an idle period a burst of data is allowed when there are again data to transmit. The cbs qdisc implements the shaper algorithm described in IEEE Std 802.1Q-2018 Section 8.6.8.2, and is only assigned new credit when there is data to send. This lowers the possibility of large bursts. A tbf qdisc that implements a priority shaper must be attached to one of the classes on a parent qdisc, which can be either mqprio, taprio or ets: # tc qdisc replace dev eth0 parent 1:5 handle 2:0 tbf \\ rate 10000000 burst 8192 limit 1m The parameters have the same meaning as in the port shaper. In the example above a tbf qdisc is created in traffic class 1:5 of the parent, which corresponds to priority queue 4. Sparx5: does currently not support the credit based shaper. This will be added in a future release. A cbs qdisc must always be attached to one of the classes on a parent qdisc, which can be either mqprio, taprio or ets: # tc qdisc replace dev eth0 parent 1:5 handle 2:0 cbs \\ idleslope 10000 sendslope -990000 hicredit 15 locredit -990 offload 1 The parameters have the following meaning: idleslope - The rate of credits accumulated (in kilobits per second) when there is at least one frame waiting for transmission. sendslope - The rate of credits depleted when a transmission is occurring. hicredit - The maximum amount of credits (in bytes) that can be accumulated. locredit - The minimum amount of credits (in bytes) that can be reached. offload - Set to 1 to enable HW offload. In the example above a cbs qdisc is created in traffic class 1:5 of the parent, which corresponds to priority queue 4. The interface runs at 1 Gbps and the bit rate is 10000 kbps. Please see IEEE Std 802.1Q-2018 Section 8.6.8.2 and Annex L on how to calculate the parameters.","title":"Shaping","component":"bsp","version":"2024.03","name":"shaping","url":"/bsp/2024.03/shaping.html","titles":[{"text":"1. Port Shaping","hash":"_port_shaping","id":1},{"text":"2. Priority Shaping","hash":"priority_shaping","id":2},{"text":"2.1. tbf","hash":"_tbf","id":3},{"text":"2.2. cbs","hash":"_cbs","id":4}]},"116":{"id":116,"text":"Here are some tools that can help in configuring a system and investigate its operation. The following tools can be used for controlling the network features of a switch: Name Description Origin Example IProute2 Suite Manages network interfaces and shows state and statistics Linux community ip, bridge, tc ethtool Controls network interface configuration Linux community ethtool ptp4l Service that participates in a PTP network Linux community ptp4l tiny-lldpd Service that supports the LLC protocol Linux community tllpd QoS Tool Configures the aspects of interface ingress and egress service quality Microchip qos VCAP Tool Provides low-level access to the switch VCAP rules Microchip vcap FP Tool Controls Frame Preemption Microchip fp FRER Tool Controls the Frame Reliability and Elimination feature Microchip frer The following tools can be used for debugging the behavior of the switch: Name Description Origin Example Debug Messages Dumps the kernel log with Error, Warning etc. messages Linux community dmesg Packet Capture Dumps network packets sent on an interface Linux community tcpdump Packet Injection/Capturing Injects network frames into an interface (and/or receives them) Microchip ef, ef-loop DebugFS Dumps debug information from a framework or a driver Linux community Microchip cat /sys/kernel/debug/…​ Symbolic Register Access Dumps register values or writes to registers using the register names Microchip symreg or symreg_sparx5","title":"Tools Overview","component":"bsp","version":"2024.03","name":"tools_overview","url":"/bsp/2024.03/tools_overview.html","titles":[{"text":"1. Networking Tools","hash":"_networking_tools","id":1},{"text":"2. Debugging Tools","hash":"_debugging_tools","id":2}]},"117":{"id":117,"text":"The VCAP tool is a low-level interface that can be used to configure and query the VCAPs. With this tool, it is possible to configure all key and action fields in the VCAPs. This is needed in cases where a specific VCAP configuration is not possible via the tc commands, such as IEEE 802.1CB Frame Replication and Elimination for Reliability (FRER). The layout of the VCAPs depends on the actual hardware. Please consult the datasheet for details. The following examples are for the LAN966X platform. Use vcap -h to see the usage: Create, modify, get and delete VCAP rules Usage: vcap [options] [command] [arguments] Options: -h This help -p Get platform information -v VCAP_NAME Get vcap information -o VCAP_NAME Get vcap port information -l LEVEL Rule information level: 3=FULL, 2=SOME, 1=MINIMAL, 0=NONE Command: add RULE_ID Add a new rule with id, keys and actions del RULE_ID Delete an existing get RULE_ID Get and display an existing rule mod RULE_ID Modify keys and actions of an existing rule reset RULE_ID Reset the counter of an existing rule list List all known rules Arguments to the add or mod commands: VCAP_NAME Name of VCAP. Found in platform information PRIORITY Rule priority VCAP_LOOKUP VCAP lookup index KEYSET_NAME Found in vcap information (KEY_NAME key_value key_mask)* Found in vcap keyset information A '=' value/mask sets all bits [-] Get a list of possible actionsets or actions ACTIONSET_NAME Found in vcap information (ACTION_NAME action_value)* Found in vcap actionset information It is possible to query the platform information, like e.g. showing the supported VCAPs: Use vcap -p to get the platform information: Platform: lan966x - [0]: es0 - [3]: is1 - [4]: is2 More details are available for each of the VCAP, by getting the VCAP information: Use vcap -v is2 to get the IS2 VCAP information: VCAP[4]: is2 instance: 0 name: is2 rows: 64 sw_count: 4 sw_width: 96 sticky_width: 32 act_width: 31 default_cnt: 11 require_cnt_dis: 1 version: 1 vtype: 4 vinst: 0 first_cid: 8000000 last_cid: 8199999 lookups: 2 first_valid_addr: 0 last_valid_addr: 255 last_used_addr: 256 keyset: [4]: VCAP_KFS_ARP key: [5]: 8021Q_DEI_CLS, type: BIT, width: 1 key: [9]: 8021Q_PCP_CLS, type: U32, width: 3 key: [17]: 8021Q_VID_CLS, type: U32, width: 12 key: [19]: 8021Q_VLAN_TAGGED_IS, type: BIT, width: 1 key: [21]: ARP_ADDR_SPACE_OK_IS, type: BIT, width: 1 key: [22]: ARP_LEN_OK_IS, type: BIT, width: 1 key: [23]: ARP_OPCODE, type: U32, width: 2 key: [24]: ARP_OPCODE_UNKNOWN_IS, type: BIT, width: 1 key: [25]: ARP_PROTO_SPACE_OK_IS, type: BIT, width: 1 key: [26]: ARP_SENDER_MATCH_IS, type: BIT, width: 1 key: [27]: ARP_TGT_MATCH_IS, type: BIT, width: 1 key: [31]: HOST_MATCH, type: BIT, width: 1 key: [35]: IF_IGR_PORT_MASK, type: U32, width: 9 key: [46]: ISDX_GT0_IS, type: BIT, width: 1 key: [47]: L2_BC_IS, type: BIT, width: 1 ... Each port on the switch has its keyset configuration per lookup. You can inspect this information. Use vcap -o is2 to get the port configuration for IS2: is2: port[00] (eth2): state: on L:0: snap: mac_snap arp: arp oam: oam ipv4_tcp_udp: ipv4_tcp_udp ipv4_other: ipv4_other ipv6: ipv6_tcp_udp or ipv6_other L:1: snap: mac_snap arp: arp oam: oam ipv4_tcp_udp: ipv4_tcp_udp ipv4_other: ipv4_other ipv6: ipv6_tcp_udp or ipv6_other ... To add a rule in IS1: # vcap add 1 is1 10 0 \\ VCAP_KFS_7TUPLE L2_DMAC 00:00:00:00:00:11 = \\ VCAP_AFS_S1 QOS_ENA 1 QOS_VAL 5 The second line defines the keys and the third line defines the actions. The = is a shorthand notation that set the mask to all ones (all bits in the key value is used for matching) To modify the above rule in IS1: # vcap mod 1 L2_DMAC 00:00:00:00:00:22 = Note that the rule must exist and you cannot change the size of the key and action. To read the hit counter in the above rule in IS1: # vcap get 1 Rule: 1, is1, priority: 10, lookup: 0, address: 764-767 (X4), Counter: 42, Hit: 1 Keyset: VCAP_KFS_7TUPLE KEY: IF_IGR_PORT_MASK: W9, 0x000/0x1fe KEY: L2_DMAC: W48, 0:0:0:0:0:22/ff:ff:ff:ff:ff:ff KEY: LOOKUP_INDEX: W2, 0x0/0x3 KEY: TYPE: W2, 0x1/0x3 Actionset: VCAP_AFS_S1 ACTION: QOS_ENA: W1, 1 ACTION: QOS_VAL: W3, 0x5 ACTION: TYPE: W1, 0 This shows that the rule have been hit 42 times. Some counters are only one bit wide, so you can only see if they have been hit or not. See VCAP Information You can reset the counter with: # vcap reset 1 Rule 1 counter reset To delete the above rule in IS1: # vcap del 1 Besides the vcap tool you can also dump VCAP specific information in debugfs. Show administration info for IS1 on LAN966x: # cat /sys/kernel/debug/lan966x/vcaps/is1_0 name: is1 rows: 192 sw_count: 4 sw_width: 96 sticky_width: 32 act_width: 123 default_cnt: 0 require_cnt_dis: 1 version: 1 vtype: 3 vinst: 0 first_cid: 1000000 last_cid: 1299999 lookups: 3 first_valid_addr: 0 last_valid_addr: 767 last_used_addr: 767 # If there are rules present in the IS1 VCAP they will also be listed in a format like shown with the vcap tool. It is also possible to see the raw rule data, and in this case just one line is printed per rule. # cat /sys/kernel/debug/lan966x/vcaps/raw_is1_0 addr: 760, X4 rule, keyset: VCAP_KFS_7TUPLE (3) A VCAP rule occupies 1, 2, 3, 4, 6 or 12 addresses and is called and X1 to X12 correspondingly. Only Sparx5 uses the X3, X6 and X12 size rules. X1 rules can be located on any address Xn rules can only be located on address values modulo n You cannot specify the address when you add a rule. The location depends on the size and the priority. The rules are added in size order, so that larger rules are added first (on the higher number addresses). Rules with a priority of low numerical value have the highest priority and are located first within their size group. If you add a rule with the same priority, the last added rule has the highest priority (located first). The LAN966x IS1 VCAP generates an 7TUPLE keyset on all combinations of ports and lookups by default. If you want to use another keyset on a specific combination of port and lookup you must change the generated key by using a tc chain template. See the Chain section on the TC Introduction page on how to set up a tc chain template. To see the current mapping from frame type to keys in LAN966x IS1: # cat /sys/kernel/debug/lan966x/ports ... is1: ... port[02] (eth0): state: on L:0: other: 7tuple ipv4: 7tuple ipv6: 7tuple rt: follow_other L:1: other: 7tuple ipv4: 7tuple ipv6: 7tuple rt: follow_other L:2: other: 7tuple ipv4: 7tuple ipv6: 7tuple rt: follow_other .... To change the IPv4 keyset generation for IS1 Lookup 0, you can add a chain that selects this protocol, where the src and dst IP keys will ensure that a different keyset will be selected. tc chain add dev eth0 ingress chain 1000000 prio 10000 handle 10000 protocol ipv4 flower skip_sw \\ src_ip 0.0.0.0 dst_ip 0.0.0.0 Looking at the mapping again shows that the keyset has changed to 5tuple_ipv4: # cat /sys/kernel/debug/lan966x/ports ... is1: ... port[02] (eth0): state: on L:0: other: 7tuple ipv4: 5tuple_ipv4 ipv6: 7tuple rt: follow_other L:1: other: 7tuple ipv4: 7tuple ipv6: 7tuple rt: follow_other L:2: other: 7tuple ipv4: 7tuple ipv6: 7tuple rt: follow_other It is not necessary to use tc chain templates on Sparx5 ES0 and LAN966x IS2 and ES0 VCAPs as the keys generated here only depends on the frame type.","title":"VCAP Tool","component":"bsp","version":"2024.03","name":"vcap_tool","url":"/bsp/2024.03/vcap_tool.html","titles":[{"text":"1. VCAP Debugging tools","hash":"vcap_debug","id":1}]},"118":{"id":118,"text":"Version: BSP-2021.06 Previous Version: BSP-2021.03 Date: 2021-07-09 Description: Roadmap release This release adds BSP level of documentation, available in the bsp-doc.html file, which can be found in the root of the BSP sources. The documentation included in this release focus mostly on the LAN9662 chip and associated evaluation boards. This release introduce support for LAN9662 including the UNG8291 EVB-LAN9662-EndNode board. Support has been added in U-Boot and Linux kernel. The BSP supports both standalone users where network support is provided using the SwitchDev driver in the kernel, or by using MESA, WebStaX, SMBStaX or IStaX. This release updates the Linux kernel from v5.4.x to v5.10, so for all supported boards, both IStaX and Standalone support has been updated. The BSP offers source and binary artifacts. The binaries are distributed in 3 packages: arm, arm64 and mipsel. The binaries are organized in the following way: mscc-brsdk--//// : Is the chip architecture (arm, arm64 or mipsel) : Version of the release (2021.06) : Sub-architecture (arm-cortex_a8-linux-gnu) : The BSP provides images for a variety of different use-cases, this is where we branch out on use cases. Following is a listing of the different supported types: standalone: Here the kernel is compiled with SwitchDev support, complete port map is in the DT (this is therefore board specific) and the rootfs includes the common Linux network related tools. This build can be used to configure the switch without needing any other SW components (but more can be added on top). xstax: This is a configuration optimized for MESA, WebStaX, SMBStaX and IStaX users. Here the kernel only supports the CPU and the CPU peripherals, but not the switchcore. The switch registers can be reached via an UIO driver, and user-space drivers needs to configure the switch. bootloaders: This is U-Boot for the various boards. The same bootloaders are used with both standalone and IStaX. : In this release, only release builds are provided. Later releases may add debug builds as well. : Kernel, root file system and device-trees.","title":"BSP-2021.06","component":"bsp","version":"2024.03","name":"bsp-2021.06","url":"/bsp/2024.03/release-notes/bsp-2021.06.html","titles":[{"text":"Disclaimers","hash":"_disclaimers","id":1},{"text":"BSP-Doc in BETA","hash":"_bsp_doc_in_beta","id":2},{"text":"LAN9662 in BETA","hash":"_lan9662_in_beta","id":3},{"text":"General","hash":"_general","id":4},{"text":"Linux kernel updated to 5.10.x","hash":"_linux_kernel_updated_to_5_10_x","id":5},{"text":"Change of directory structure in binary releases","hash":"_change_of_directory_structure_in_binary_releases","id":6}]},"119":{"id":119,"text":"Version: BSP-2021.09 Previous Version: BSP-2021.06 Date: 2021-10-08 Description: Roadmap release The BSP level documentation is still incomplete and considered in BETA quality. Currently the BSP-Doc only covers LAN9662 and LAN9668 (using EVB: UNG8290 and UNG8291). The basic features of LAN8814 is included in this release but considered in BETA. This release has BETA support for LAN9662 and LAN9668 using the UNG8291/EVB-LAN9662-EndNode and UNG8290/EVB-LAN9668-8Port evaluation boards. Support has been added in U-Boot and Linux kernel. The BSP supports both standalone users where network support is provided using the SwitchDev driver in the kernel, or by using MESA, WebStaX, SMBStaX or IStaX. The EVB-LAN9668-8Port Eval board uses 2 LAN8814 QSGMII PHYs. This is a PTP/TimeStamp capable PHY, but this release only offers support for the basic features. This means that timestamping will be done in the MAC. This is likely to change in future releases. Fixed None Fixed but not verified: MAS_SW-317: SwitchDev/LAN966x/PSFP: When gate instance and flow meter are configured in different stream filter instances, \"not_passing_frames_count\" counter is incremented for the stream filter attached with the flow meter. Known issues: MAS_SW-318: SwitchDev/LAN966x: Not all multicast frames go to CPU by default. This breaks IPv6 and others. MAS_SW-260: SwitchDev/All/IGMP: IGMP implementation is not VLAN aware","title":"BSP-2021.09","component":"bsp","version":"2024.03","name":"bsp-2021.09","url":"/bsp/2024.03/release-notes/bsp-2021.09.html","titles":[{"text":"Disclaimers","hash":"_disclaimers","id":1},{"text":"BSP-Doc in BETA","hash":"_bsp_doc_in_beta","id":2},{"text":"LAN8814 PHY in BETA","hash":"_lan8814_phy_in_beta","id":3},{"text":"LAN9662 and LAN9668 switches in BETA","hash":"_lan9662_and_lan9668_switches_in_beta","id":4},{"text":"General","hash":"_general","id":5},{"text":"Bug Status","hash":"_bug_status","id":6}]},"120":{"id":120,"text":"Version: BSP-2021.12-1 Previous Version: BSP-2021.12 Date: 2022-01-31 Description: Roadmap release The BSP level documentation is still incomplete and considered in BETA quality. Currently the BSP-Doc only covers LAN9662 and LAN9668 (using EVB: UNG8290 and UNG8291). The basic features of LAN8814 is included in this release but considered in BETA. This release has BETA support for LAN9662 and LAN9668 using the UNG8291/EVB-LAN9662-EndNode and UNG8290/EVB-LAN9668-8Port evaluation boards. Support has been added in U-Boot and Linux kernel. The BSP supports both standalone users where network support is provided using the SwitchDev driver in the kernel, or by using MESA, WebStaX, SMBStaX or IStaX. The EVB-LAN9668-8Port Eval board uses 2 LAN8814 QSGMII PHYs. This is a PTP/TimeStamp capable PHY, but this release only offers support for the basic features. This means that timestamping will be done in the MAC. This is likely to change in future releases. Fixed APPL-4259: In PCB-134 timestamp accuracy testing after around 1hr getting rcu_sched self-detected stall Fixed but not verified: None Known issues: MAS_SW-260: SwitchDev/All/IGMP: IGMP implementation is not VLAN aware MAS_SW-390: MRP: MRP ring with ring_role MRA configured with mra priority is not forming MRP ring all devices","title":"BSP-2021.12-1","component":"bsp","version":"2024.03","name":"bsp-2021.12-1","url":"/bsp/2024.03/release-notes/bsp-2021.12-1.html","titles":[{"text":"Disclaimers","hash":"_disclaimers","id":1},{"text":"BSP-Doc in BETA","hash":"_bsp_doc_in_beta","id":2},{"text":"LAN8814 PHY in BETA","hash":"_lan8814_phy_in_beta","id":3},{"text":"LAN9662 and LAN9668 switches in BETA","hash":"_lan9662_and_lan9668_switches_in_beta","id":4},{"text":"General","hash":"_general","id":5},{"text":"Bug Status","hash":"_bug_status","id":6}]},"121":{"id":121,"text":"Version: BSP-2021.12 Previous Version: BSP-2021.09 Date: 2022-01-07 Description: Roadmap release The BSP level documentation is still incomplete and considered in BETA quality. Currently the BSP-Doc only covers LAN9662 and LAN9668 (using EVB: UNG8290 and UNG8291). The basic features of LAN8814 is included in this release but considered in BETA. This release has BETA support for LAN9662 and LAN9668 using the UNG8291/EVB-LAN9662-EndNode and UNG8290/EVB-LAN9668-8Port evaluation boards. Support has been added in U-Boot and Linux kernel. The BSP supports both standalone users where network support is provided using the SwitchDev driver in the kernel, or by using MESA, WebStaX, SMBStaX or IStaX. The EVB-LAN9668-8Port Eval board uses 2 LAN8814 QSGMII PHYs. This is a PTP/TimeStamp capable PHY, but this release only offers support for the basic features. This means that timestamping will be done in the MAC. This is likely to change in future releases. Fixed MAS_SW-317: SwitchDev/LAN966x/PSFP: When gate instance and flow meter are configured in different stream filter instances, \"not_passing_frames_count\" counter is incremented for the stream filter attached with the flow meter. MAS_SW-318: SwitchDev/LAN966x: Not all multicast frames go to CPU by default. This breaks IPv6 and others. Fixed but not verified: None Known issues: MAS_SW-260: SwitchDev/All/IGMP: IGMP implementation is not VLAN aware MAS_SW-390: MRP: MRP ring with ring_role MRA configured with mra priority is not forming MRP ring all devices","title":"BSP-2021.12","component":"bsp","version":"2024.03","name":"bsp-2021.12","url":"/bsp/2024.03/release-notes/bsp-2021.12.html","titles":[{"text":"Disclaimers","hash":"_disclaimers","id":1},{"text":"BSP-Doc in BETA","hash":"_bsp_doc_in_beta","id":2},{"text":"LAN8814 PHY in BETA","hash":"_lan8814_phy_in_beta","id":3},{"text":"LAN9662 and LAN9668 switches in BETA","hash":"_lan9662_and_lan9668_switches_in_beta","id":4},{"text":"General","hash":"_general","id":5},{"text":"Bug Status","hash":"_bug_status","id":6}]},"122":{"id":122,"text":"Version: BSP-2022.03 Previous Version: BSP-2021.12-1 Date: 2022-04-01 Description: Roadmap release Component Version Linux kernel: 5.15.25 GCC: 10.3.0 Buildroot: 2021.02.7 UBoot-LAN966x: 2019.04 UBoot-MIPSEL: 2019.10 UBoot-ARM64: 2019.10 UBoot-LS1046: 2016.09 The BSP level documentation is still incomplete and considered in BETA quality. Currently the BSP-Doc covers LAN9662, LAN9668 (using EVB: UNG8290 and UNG8291) and Sparx5 (using EVB PCB134 and PCB135). Support in the Linux PHY-Lib for LAN8814 has been added. The current driver support the basic functionallity, PTP-TimeStamping (one-step/two-step, peer2peer, end2end, eth/ipv4/ipv6) and it exposes a single PHC (Physical Hardware Clock). Fixed MAS_SW-260: SwitchDev/All/IGMP: IGMP implementation is not VLAN aware MAS_SW-390: MRP: MRP ring with ring_role MRA configured with mra priority is not forming MRP ring all devices Fixed but not verified: None Known issues: MAS_SW-393: PFC:Pause frames counters are not incrementing on ingress port of DUT-1 MAS_SW-424: PFC: Even when the traffic rate is less than the egress port speed, DUT is generating PFC pause frames when frames with size more than 1380Bytes are received.","title":"BSP-2022.03","component":"bsp","version":"2024.03","name":"bsp-2022.03","url":"/bsp/2024.03/release-notes/bsp-2022.03.html","titles":[{"text":"Version of major components","hash":"_version_of_major_components","id":1},{"text":"Feature update","hash":"_feature_update","id":2},{"text":"BSP-Doc in BETA","hash":"_bsp_doc_in_beta","id":3},{"text":"LAN8814: 4x1Gbit QSGMII CU-PHY support added","hash":"_lan8814_4x1gbit_qsgmii_cu_phy_support_added","id":4},{"text":"Bug Status","hash":"_bug_status","id":5}]},"123":{"id":123,"text":"Version: BSP-2022.06 Previous Version: BSP-2022.03 Date: 2022-07-06 Description: Roadmap release Component Version Linux kernel: 5.15.41 GCC: 10.3.0 Buildroot: 2022.02.2 UBoot-LAN966x: 2019.04 UBoot-MIPSEL: 2019.10 UBoot-ARM64: 2019.10 UBoot-LS1046: 2016.09 The BSP level documentation is still incomplete and considered in BETA quality. Currently the BSP-Doc covers LAN9662, LAN9668 (using EVB: UNG8290 and UNG8291), Sparx5 (using EVB PCB134 and PCB135) and peripheral devices found LAN966X boards like: I2C, MCAN, MMC, OTP, etc.. Profinet and MERA(Microchip Ethernet RTE API) packages were added in buildroot. This is possible to run only on UNG8309. Fixed Fixed but not verified: None Known issues: MAS_SW-393: PFC:Pause frames counters are not incrementing on ingress port of DUT-1 MAS_SW-424: PFC: Even when the traffic rate is less than the egress port speed, DUT is generating PFC pause frames when frames with size more than 1380Bytes are received. MAS_SW-430: PTP4l_INDY: peer delay time out messages are reporting and making ptp port restart when configured with 802.1AS profile MAS_SW-420: 2.5G_Port: When speed is configured to forced, only auto-negotiation is turned off and port is always advertising 2.5G and 1G speeds, also port status is always UP with 2.5G irrespective of the configured forced speed.","title":"BSP-2022.06","component":"bsp","version":"2024.03","name":"bsp-2022.06","url":"/bsp/2024.03/release-notes/bsp-2022.06.html","titles":[{"text":"Version of major components","hash":"_version_of_major_components","id":1},{"text":"Feature update","hash":"_feature_update","id":2},{"text":"BSP-Doc in BETA","hash":"_bsp_doc_in_beta","id":3},{"text":"P-NET and MERA","hash":"_p_net_and_mera","id":4},{"text":"Bug Status","hash":"_bug_status","id":5}]},"124":{"id":124,"text":"Version: BSP-2022.09 Previous Version: BSP-2022.06 Date: 2022-09-30 Description: Roadmap release Component Version Linux kernel: 5.15.63 GCC: 10.3.0 Buildroot: 2022.02.5 UBoot-LAN966x: 2019.04 UBoot-MIPSEL: 2019.10 UBoot-ARM64: 2019.10 UBoot-LS1046: 2016.09 UNG8309 is a carrier board for UNG8291 expanding the connectivity using the edge connector. The UNG8309 is supported by the lan966x_pcb8309.dts file. The UNG8291 includes 2 SFP ports, and this release also includes the needed fixes to use SFPs at speed up to 2.5Gb/s. The LAN966x driver has been expanded with RGMII support. RGMII can be enabled in the devicetrees using existing DT-bindings. TCAM support has been added to the Sparx5 driver. The driver supports the following HW resoruces: IS0/CLM, IS2, ES0 and ES2 (see the datasheet for details). This feature can be utilized by using following user-space tools: - tc filter: Part of the tc-flower feature set. - vcap: user-space tool. The vcap user-space tool is an extended feature using its own netlink interface and will not be upstream. vcap aims for supporting all features supported by HW. The tc filter is a stnadardlized interface supporting a subset of the features, and will eventually be submitted to the upstream kernel. TAS - Time Aware Shaper support has been implemented in the Sparx5 driver. The TAS implementation can be configured using the taptio qdisc part of tc (see Time-Aware Scheduling section in the BSP-Doc or the tc-taprio man-page. TAS is in IEEE Std 802.1Q-2018 called Scheduled Traffic. The Sparx5 driver has added support for the following schedullers and shapers: TBF - Token Bucket Filter MQPRIO - Multiqueue Priority Qdisc ETS - Enhanced Transmission Selection scheduler FramePreemption supprot has been added. See the BSP-Doc page for details: Frame Preemption for details. A new driver supporting the LAN8841 1G RGMII/GMII PHY is added. The driver has support for basic features, Link change interrupts, PTP/Timestamping, 1pps output and 1pps input. The BSP-Doc covering LAN966x is now feature complete and ready for use. This release includes a new section on secure boot, and various small fixes in the existing content. Sparx5 documentation is still in beta. The general network section is still LAN966x specific. Part of this may apply to Sparx5. Fixed MAS_SW-430: PTP4l_INDY: peer delay time out messages are reporting and making ptp port restart when configured with 802.1AS profile MAS_SW-429: 2.5G_Port: When speed is configured to forced, only auto-negotiation is turned off and port is always advertising 2.5G and 1G speeds, also port status is always UP with 2.5G irrespective of the configured forced speed. Fixed but not verified: None Known issues: MAS_SW-393: PFC:Pause frames counters are not incrementing on ingress port of DUT-1 MAS_SW-424: PFC: Even when the traffic rate is less than the egress port speed, DUT is generating PFC pause frames when frames with size more than 1380Bytes are received.","title":"BSP-2022.09","component":"bsp","version":"2024.03","name":"bsp-2022.09","url":"/bsp/2024.03/release-notes/bsp-2022.09.html","titles":[{"text":"Version of major components","hash":"_version_of_major_components","id":1},{"text":"Feature update","hash":"_feature_update","id":2},{"text":"LAN9662 New EVB UNG8309 added","hash":"_lan9662_new_evb_ung8309_added","id":3},{"text":"LAN966x RGMII support added","hash":"_lan966x_rgmii_support_added","id":4},{"text":"Sparx5 TCAM support","hash":"_sparx5_tcam_support","id":5},{"text":"Sparx5 TAS","hash":"_sparx5_tas","id":6},{"text":"Sparx5 MQPRIO + ETS + TBF","hash":"_sparx5_mqprio_ets_tbf","id":7},{"text":"Sparx5 FramePreemption","hash":"_sparx5_framepreemption","id":8},{"text":"PHY/LAN8841 driver added","hash":"_phylan8841_driver_added","id":9},{"text":"BSP-Doc/LAN966x","hash":"_bsp_doclan966x","id":10},{"text":"BSP-Doc/Sparx5","hash":"_bsp_docsparx5","id":11},{"text":"Bug Status","hash":"_bug_status","id":12}]},"125":{"id":125,"text":"Version: BSP-2022.12 Previous Version: BSP-2022.09 Date: 2023-01-06 Description: Roadmap release Component Version Linux kernel: 5.15.63 GCC: 10.3.0 Buildroot: 2022.02.5 UBoot-LAN966x: 2019.04 UBoot-MIPSEL: 2019.10 UBoot-ARM64: 2019.10 UBoot-LS1046: 2016.09 The current version of LAN9662 and LAN9668 is Rev-B, which is also the revision which will be manufactured. Rev-A is good for evaluation, but not recommended for future production use. From a SW/BSP perspective the main difference between Rev-A and Rev-B is the bootrom which has changed significantly. Rev-B has introduced Arm trusted firmware, the SoC is configured with a secure-word and a non-secure-world, and secure boot is now fully supported. As part of this change, the DDR initialization has been moved from UBoot into BL2 (updatable part of TFA). Due to this architectural update, rev-A and rev-B need a different UBoot binary. The BSP-2022.09 release offered a UBoot for both rev-A and rev-B, this version and future versions will only offer UBoot updates for rev-B. Customer can continue their rev-A boards with the Linux kernel and RootFS from new BSP release, but with the 2022.09 version of UBoot. The UNG8290-RevA board has a minor design flaw causing the highest SPI bus speed to be 10MHz. This has been fixed on Rev-B boards, and the default device tree will set a clock speed at 100MHz. To continue using UNG8290-RevA boards, the frequency must be lowered in the device-tree. Per-Stream Filtering and Policing support has been added for the sparx5 driver. Streams are added and deleted using the 'tc' command suite (please see PSFP (Per-Stream Filtering and Policing) for details). Fixed None Fixed but not verified: None Known issues: MAS_SW-393: PFC:Pause frames counters are not incrementing on ingress port of DUT-1 MAS_SW-424: PFC: Even when the traffic rate is less than the egress port speed, DUT is generating PFC pause frames when frames with size more than 1380Bytes are received.","title":"BSP-2022.12","component":"bsp","version":"2024.03","name":"bsp-2022.12","url":"/bsp/2024.03/release-notes/bsp-2022.12.html","titles":[{"text":"Version of major components","hash":"_version_of_major_components","id":1},{"text":"Disclaimers","hash":"_disclaimers","id":2},{"text":"LAN9662 and LAN9668 Rev-A support removed","hash":"_lan9662_and_lan9668_rev_a_support_removed","id":3},{"text":"SPI-NOR speed on LAN9668 on UNG8290 boards","hash":"_spi_nor_speed_on_lan9668_on_ung8290_boards","id":4},{"text":"Feature update","hash":"_feature_update","id":5},{"text":"Sparx5 PSFP support added","hash":"_sparx5_psfp_support_added","id":6},{"text":"Bug Status","hash":"_bug_status","id":7}]},"126":{"id":126,"text":"Version: BSP-2023.03 Previous Version: BSP-2022.12 Date: 2023-03-30 Description: Roadmap release Component Version Linux kernel: 6.1.3 GCC: 10.3.0 Buildroot: 2022.02.8 UBoot-LAN966x: 2019.04 UBoot-MIPSEL: 2019.10 UBoot-ARM64: 2019.10 UBoot-LS1046: 2016.09 The Linux Kernel has been updated to the latest LTS version: 6.1 Fixed None Fixed but not verified: None Known issues: MAS_SW-393: PFC:Pause frames counters are not incrementing on ingress port of DUT-1 MAS_SW-424: PFC: Even when the traffic rate is less than the egress port speed, DUT is generating PFC pause frames when frames with size more than 1380Bytes are received.","title":"BSP-2023.03","component":"bsp","version":"2024.03","name":"bsp-2023.03","url":"/bsp/2024.03/release-notes/bsp-2023.03.html","titles":[{"text":"Version of major components","hash":"_version_of_major_components","id":1},{"text":"Feature update","hash":"_feature_update","id":2},{"text":"New Long Term Supported (LTS) Linux Kernel","hash":"_new_long_term_supported_lts_linux_kernel","id":3},{"text":"Bug Status","hash":"_bug_status","id":4}]},"127":{"id":127,"text":"Version: BSP-2023.06 Previous Version: BSP-2023.03 Date: 2023-06-30 Description: Roadmap release Component Version Linux kernel: 6.1.22 GCC: 10.3.0 Buildroot: 2023.02 UBoot-LAN966x: 2023.04 UBoot-MIPSEL: 2019.10 UBoot-ARM64: 2023.04 UBoot-LS1046: 2016.09 The Linux Kernel is now available as a GitHub repository. You can find it here: https://github.com/microchip-ung/linux The Linux LTS is made available as branch: bsp-6.1-2023 The minor update available with this BSP release will be added with a tag: bsp-6.1-2023.06 The support for RPI4 CM as an external CPU for the LAN966x PCIe NIC card has been updated so eMMC bases RPI 4 CM versions can also be used. The image generation provides a image file that can be written directly onto the SD card (or eMMC devices) and is immediately usable. See the README.adoc in the image output folder for more information. There is a new u-boot version for architectures arm and arm64. These affects the lan966x chip and sparx5 chip. Fixed None Fixed but not verified: None Known issues: MAS_SW-393: PFC:Pause frames counters are not incrementing on ingress port of DUT-1 MAS_SW-424: PFC: Even when the traffic rate is less than the egress port speed, DUT is generating PFC pause frames when frames with size more than 1380Bytes are received.","title":"BSP-2023.06","component":"bsp","version":"2024.03","name":"bsp-2023.06","url":"/bsp/2024.03/release-notes/bsp-2023.06.html","titles":[{"text":"Version of major components","hash":"_version_of_major_components","id":1},{"text":"Availability","hash":"_availability","id":2},{"text":"Feature update","hash":"_feature_update","id":3},{"text":"Raspberry PI 4 Compute Module External CPU support","hash":"_raspberry_pi_4_compute_module_external_cpu_support","id":4},{"text":"Update u-boot for arm and arm64","hash":"_update_u_boot_for_arm_and_arm64","id":5},{"text":"Bug Status","hash":"_bug_status","id":6}]},"128":{"id":128,"text":"Version: BSP-2023.09-1 Previous Version: BSP-2023.09 Date: 2023-09-30 Description: Roadmap release Component Version Linux kernel: 6.1.35 GCC: 10.3.0 Buildroot: 2023.02.2 UBoot-LAN966x: 2023.04 UBoot-MIPSEL: 2019.10 UBoot-ARM64: 2023.04 UBoot-LS1046: 2016.09 The Linux Kernel is available as a GitHub repository. You can find it here: https://github.com/microchip-ung/linux The Linux LTS is made available as branch: bsp-6.1-2023 The minor update available with this BSP release will be added with a tag: bsp-6.1-2023.09-1 The LAN969x Switch is now supported with both an XStaX and a Standalone configuration. The standalone configuration (SwitchDev) has some limitations in the current release: The switch calendar configuration is fixed to use the EVB-LAN9696-24port configuration The copper port LED usage is reversed Fixed SPARX5: Failed to read the NAND Fixed but not verified: None Known issues: MAS_SW-393: PFC:Pause frames counters are not incrementing on ingress port of DUT-1 MAS_SW-424: PFC: Even when the traffic rate is less than the egress port speed, DUT is generating PFC pause frames when frames with size more than 1380Bytes are received.","title":"BSP-2023.09-1","component":"bsp","version":"2024.03","name":"bsp-2023.09-1","url":"/bsp/2024.03/release-notes/bsp-2023.09-1.html","titles":[{"text":"Version of major components","hash":"_version_of_major_components","id":1},{"text":"Availability","hash":"_availability","id":2},{"text":"Feature update","hash":"_feature_update","id":3},{"text":"LAN969x Switch Support","hash":"_lan969x_switch_support","id":4},{"text":"Standalone Limitations","hash":"_standalone_limitations","id":5},{"text":"Bug Status","hash":"_bug_status","id":6}]},"129":{"id":129,"text":"Version: BSP-2023.09 Previous Version: BSP-2023.06 Date: 2023-09-30 Description: Roadmap release Component Version Linux kernel: 6.1.35 GCC: 10.3.0 Buildroot: 2023.02 UBoot-LAN966x: 2023.04 UBoot-MIPSEL: 2019.10 UBoot-ARM64: 2023.04 UBoot-LS1046: 2016.09 The Linux Kernel is available as a GitHub repository. You can find it here: https://github.com/microchip-ung/linux The Linux LTS is made available as branch: bsp-6.1-2023 The minor update available with this BSP release will be added with a tag: bsp-6.1-2023.09 The LAN969x Switch is now supported with both an XStaX and a Standalone configuration. The standalone configuration (SwitchDev) has some limitations in the current release: The switch calendar configuration is fixed to use the EVB-LAN9696-24port configuration The copper port LED usage is reversed Fixed None Fixed but not verified: None Known issues: MAS_SW-393: PFC:Pause frames counters are not incrementing on ingress port of DUT-1 MAS_SW-424: PFC: Even when the traffic rate is less than the egress port speed, DUT is generating PFC pause frames when frames with size more than 1380Bytes are received.","title":"BSP-2023.09","component":"bsp","version":"2024.03","name":"bsp-2023.09","url":"/bsp/2024.03/release-notes/bsp-2023.09.html","titles":[{"text":"Version of major components","hash":"_version_of_major_components","id":1},{"text":"Availability","hash":"_availability","id":2},{"text":"Feature update","hash":"_feature_update","id":3},{"text":"LAN969x Switch Support","hash":"_lan969x_switch_support","id":4},{"text":"Standalone Limitations","hash":"_standalone_limitations","id":5},{"text":"Bug Status","hash":"_bug_status","id":6}]},"130":{"id":130,"text":"Version BSP-2023.12 Previous Version BSP-2023.09-1 Date 2024-01-05 Description Roadmap release Component Host Version Linux kernel All 6.1.55 GCC All 10.3.0 Buildroot All 2023.02.4 U-Boot Sparx5 2023.04 LAN969x 2023.04 LAN966x 2023.04 RPi4CM 2021.04 MIPSEL 2019.10 LS1046 2016.09 The Linux Kernel is available as a GitHub repository. You can find it here: GitHub Linux The Linux LTS is made available as branch: bsp-6.1-2023 The minor update available with this BSP release will be added with a tag: bsp-6.1-2023.12 New Frame DMA based IFH Driver U-Boot support Single NOR bootstrap option, without eMMC The Standalone (SwitchDev) configuration now supports the following features: PTP (Precision Time Protocol) TAS (Time Aware Shaper) CBS (Credit Based Shaper) The VCAP implementation (TCAM engine) has been aligned with the upstream Linux Kernel, so that VCAP instances need to be enabled before they can be used. This is done using tc matchall rules from chain 0 to the appropriate chain for the VCAP lookup. The Raspberry PI image provided in the BSP now supports both the LAN966x and the LAN969x, but you need to actively select the correct device tree using the configuration name in the FIT image, as the bootloader (U-Boot) cannot know in advance which SoC is available in the other end of the PCIe connection. Fixed DBB-594: LAN969x - Linux-RPi4 - PostSi - Busybox missing in root file system DBB-582: PTP 1PPS - Waveform high period is incorrect. DBB-580: PTP \"PHASE_DETECTOR_CTRL PHAD_CTRL DIV_CFG 0\" (Auto detect) is not working DBB-546: Wrong chip_id numbers for SparX5 DBB-420: Indy LAN8814/8804 basic support in Linux PHY drivers needs updating Fixed but not verified: None Known issues: MAS_SW-393: PFC:Pause frames counters are not incrementing on ingress port of DUT-1 MAS_SW-424: PFC: Even when the traffic rate is less than the egress port speed, DUT is generating PFC pause frames when frames with size more than 1380Bytes are received.","title":"BSP-2023.12","component":"bsp","version":"2024.03","name":"bsp-2023.12","url":"/bsp/2024.03/release-notes/bsp-2023.12.html","titles":[{"text":"Version of major components","hash":"_version_of_major_components","id":1},{"text":"Availability","hash":"_availability","id":2},{"text":"Feature update","hash":"_feature_update","id":3},{"text":"WebStaX Support","hash":"_webstax_support","id":4},{"text":"LAN969x Standalone Switch Support","hash":"_lan969x_standalone_switch_support","id":5},{"text":"VCAP changes","hash":"_vcap_changes","id":6},{"text":"Raspberry PI 4 Compute Module as external CPU","hash":"_raspberry_pi_4_compute_module_as_external_cpu","id":7},{"text":"Bug Status","hash":"_bug_status","id":8}]},"131":{"id":131,"text":"Version BSP-2024.03 Previous Version BSP-2023.12 Date 2024-04-05 Description Roadmap release Component Host Version Linux kernel All 6.6.8 GCC All 10.3.0 Buildroot All 2024.02.8 U-Boot Sparx5 2023.04 LAN969x 2023.04 LAN966x 2023.04 RPi4CM 2021.04 MIPSEL 2019.10 LS1046 2016.09 The Linux Kernel is available as a GitHub repository. You can find it here: GitHub Linux The Linux LTS is made available as branch: bsp-6.6-2024 The minor update available with this BSP release will be added with a tag: bsp-6.6-2024.03 Support for DMVerity to authenticate root filesystems. The usage of this is described in the BSP documentation. Support for adding signatures to FIT images to support boot image authentication. The Standalone (SwitchDev) configuration now supports the following features: Support for Frame DMA use with the EVB-PCIe NIC Support for XDP using the Frame DMA of the EVB-PCIe NIC Support for the ZL30732 DPLL via a Linux hardware clock driver More TSN/QoS features and tools have been added to the Linux kernel and the root filesystem, to bring the external CPU configuration on par with the internal CPU configuration. Fixed Sparx5/LAN969x: Frame DMA driver: Take TX lock when injecting frames Pad frame to 60 bytes Sparx5: Fix port policer drop counter Known issues: MAS_SW-393: PFC:Pause frames counters are not incrementing on ingress port of DUT-1 MAS_SW-424: PFC: Even when the traffic rate is less than the egress port speed, DUT is generating PFC pause frames when frames with size more than 1380Bytes are received.","title":"BSP-2024.03","component":"bsp","version":"2024.03","name":"bsp-2024.03","url":"/bsp/2024.03/release-notes/bsp-2024.03.html","titles":[{"text":"Version of major components","hash":"_version_of_major_components","id":1},{"text":"Availability","hash":"_availability","id":2},{"text":"WebStaX Support","hash":"_webstax_support","id":3},{"text":"U-Boot Support","hash":"_u_boot_support","id":4},{"text":"LAN966x Standalone Switch Support","hash":"_lan966x_standalone_switch_support","id":5},{"text":"LAN969x and LAN966x Standalone Switch Support","hash":"_lan969x_and_lan966x_standalone_switch_support","id":6},{"text":"Raspberry PI 4 CM additional support","hash":"_raspberry_pi_4_cm_additional_support","id":7},{"text":"Bug Status","hash":"_bug_status","id":8}]},"132":{"id":132,"text":"Here are the release notes for the latest BSP releases: BSP-2024.03 BSP-2023.12 BSP-2023.09-1 BSP-2023.09 BSP-2023.06 BSP-2023.03 BSP-2022.12 BSP-2022.09 BSP-2022.06 BSP-2022.03 BSP-2021.12-1 BSP-2021.12 BSP-2021.09","title":"Release Notes","component":"bsp","version":"2024.03","name":"nav","url":"/bsp/2024.03/release-notes/nav.html","titles":[]},"133":{"id":133,"text":"LAN966x SoC supports cryptographic hardware accelerators - AES and SHA. Hardware accelerators perform cryptographic operations faster than they can be performed in software. The AES and SHA resources are configured as secure in the TF-A/BL2 by default. This means that they cannot be used from Linux. If these HW resources are needed in Linux, then they need to be de-activated TF-A, and in BL2 re-configured as non-secure peripherals. Due to this, these drivers are disabled in the default LAN966x device-trees. Following kernel config options should be enabled to use AES and SHA: CONFIG_CRYPTO_AES - AES driver config option. CONFIG_CRYPTO_DEV_ATMEL_AES - Atmel AES hw accelerator config option. CONFIG_CRYPTO_DEV_ATMEL_SHA - Atmel SHA hw accelerator config option. To enable AES block, following configurations are required in device tree: compatible string must be set to atmel,at91sam9g46-aes. reg property must be set to . interrupts property must be set with interrupt details as . Peripheral Shared Peripheral Interrupt CPU INTR aes 85 53 Note Shared peripheral interrupt lines start at index ID32. So, CPU INTR must be calculated as [Shared peripheral interrupt number - 32]. clocks property must be set to . clock-names must be set to aes_clk. dmas property must be set to and . dma-names must be set to rx and tx. To enable SHA block, following configurations are required in device tree: compatible string must be set to atmel,at91sam9g46-sha. reg property must be set to . interrupts property must be set with interrupt details as . Peripheral Shared Peripheral Interrupt CPU INTR sha 89 57 Note Shared peripheral interrupt lines start at index ID32. So, CPU INTR must be calculated as [Shared peripheral interrupt number - 32]. clocks property must be set to . clock-names must be set to _clk. dmas property must be set to . dma-names must be set to tx. https://elixir.bootlin.com/linux/latest/source/Documentation/devicetree/bindings/crypto/atmel,at91sam9g46-aes.yaml Following example shows how AES and SHA should be defined in DT: aes: crypto@e004c000 { compatible = \"atmel,at91sam9g46-aes\"; reg = ; interrupts = ; dmas = , ; dma-names = \"rx\", \"tx\"; clocks = ; clock-names = \"aes_clk\"; }; sha: crypto@e006c000 { compatible = \"atmel,at91sam9g46-sha\"; reg = ; interrupts = ; dmas = ; dma-names = \"tx\"; clocks = ; clock-names = \"sha_clk\"; }; Check if AES and SHA algorithms are registered in Crypto framework using cat /proc/crypto | grep atmel. # cat /proc/crypto | grep atmel driver : atmel-hmac-sha512 driver : atmel-hmac-sha384 driver : atmel-hmac-sha256 driver : atmel-hmac-sha224 driver : atmel-hmac-sha1 driver : atmel-sha512 driver : atmel-sha384 driver : atmel-sha224 driver : atmel-sha256 driver : atmel-sha1 driver : atmel-xts-aes driver : atmel-gcm-aes driver : atmel-cfb64-aes driver : atmel-ctr-aes driver : atmel-cfb8-aes driver : atmel-cfb16-aes driver : atmel-cfb32-aes driver : atmel-cfb-aes driver : atmel-ofb-aes driver : atmel-cbc-aes driver : atmel-ecb-aes Enable cryptodev-linux and openssl buildroot packages. Run modprobe cryptodev.ko to load cryptodev module. Encrypt 6bc1bee22e409f96e93d7e117393172a using below commands python -c \"print '6bc1bee22e409f96e93d7e117393172a'.decode('hex')\" > plaintext openssl enc -aes-128-ecb -engine devcrypto -nosalt -K 2b7e151628aed2a6abf7158809cf4f3c -in plaintext -out ciphertext hexdump -C ciphertext Read the encoder hex from ciphertext. Observe that first 16 bytes in file is equivalent to expected encrypted value 3ad77bb40d7a3660a89ecaf32466ef97 Run below command to test the sha sum of abc. Replace $i with 1 or 224 or 256 or 384 or 512, based on SHA used. echo -n \"abc\" | shasum -a $i or use below commands: Enable cryptodev-linux and openssl buildroot packages. Run modprobe cryptodev.ko to load cryptodev module. echo -n 'abc' | openssl dgst -sha$i -engine devcrypto # echo -n 'abc' | openssl dgst -shal -engine devcrypto engine \"devcrypto\" set (stdin) = a9993e364706816aba3e25717850c26c9cd0d89d # symreg *SHA_IODATAR0* SHA_SHA_IODATAR0 = 0x363e99a9 # symreg *SHA_IODATAR1 SHA_SHA_IODATARl = 0x6a810647 # symreg *SHA IODATAR2 SHA_SHA_IODATAR2 = 0x71253eba # symreg *SHA_IODATAR3 SHA_SHA_IODATAR3 = 0x6cc25078 # symreg *SHA_IODATAR4 SHA_SHA_IODATAR4 = 0x9dd8d09c","title":"LAN966x Crypto HW Accelerators","component":"bsp","version":"2024.03","name":"lan966x-aes-sha","url":"/bsp/2024.03/supported-hw/lan966x-aes-sha.html","titles":[{"text":"SoC Resources","hash":"_soc_resources","id":1},{"text":"Kernel configurations","hash":"_kernel_configurations","id":2},{"text":"Devicetree Configuration","hash":"_devicetree_configuration","id":3},{"text":"ATMEL AES","hash":"_atmel_aes","id":4},{"text":"ATMEL SHA","hash":"_atmel_sha","id":5},{"text":"References","hash":"_references","id":6},{"text":"Example","hash":"_example","id":7},{"text":"UserSpace","hash":"_userspace","id":8},{"text":"Confirm instances are created","hash":"_confirm_instances_are_created","id":9},{"text":"Example on how to use","hash":"_example_on_how_to_use","id":10},{"text":"AES testing","hash":"_aes_testing","id":11},{"text":"SHA testing","hash":"_sha_testing","id":12}]},"134":{"id":134,"text":"The LAN966x family comprises the following SKUs: LAN9662 - 2 port end-node TSN Gigabit Ethernet switch device. LAN9668 - 8 port TSN Gigabit Ethernet switch device. This document will focus on the LAN966x SoCs, but to fully explain the boot process and boot facilities it is also necessary to consider the flash memories available on the board. The upcoming sections will briefly describe the boot media supported by the LAN966x, and then describe which of these media is available on the various evaluation boards offered by Microchip. This document uses many abbreviations, see the terms and abbreviations section for details. This document is specific to the B0 revision of LAN966x. A A0 revision also exists, but is not considered here. LAN966x offers secure boot, which is based on ARM Trusted Firmware (TF-A). The TF-A architecture heavily influence the boot-sequence, and to understand how LAN966x boots, a bit of TF-A understanding is also needed. Following is an illustration of a typical lan966x boot sequence using UBoot and Linux: It is possible to skip UBoot, if this case the boot sequence will look like this: TF-A and LAN966x goes through the following boot steps: TF-A/BL1 This is ROM code embedded inside the chip. LAN966x always start by boot TF-A/BL1 from ROM. TF-A/BL1 loads the next bootloader (BL2) from one of the support boot-medias. The strapping pins are used to configure which of the supported boot-media to use. BL2 This is a second stage boot-loader also part of TF-A. This bootloader runs from an on-chip SRAM, it setup the trust-zones, configure DDR memory and other basic platform initialization. Once the platform is initialized, it will load BL32 and BL33 from the configured boot-media into DDR memory. BL32 This is a called \"EL3 Runtime Software\", also part of TF-A. This stage does not influence the boot-flow directly, and will not be covered here. BL33 In TF-A terminology, this is the unsecure firmware. It is not part of the TF-A project, but is signed and distributed together with TF-A. TF-A imports this as a BLOB. Typically this is either UBoot or a special version of the kernel which can run without UBoot. The above list of update-able images (BL2, BL32 and BL33), plus relevant certificates and relevant support files are packed in a FIP (Firmware Image Packet), which is a storage format defined by TF-A. The FIP containing these images must be stored raw in the designed boot-media. In some cases it must be put at a specific address, while in other it is stored in a partition with a predefined name. This document will not go into the details of TF-A, but just assume that the FIP is available and describe where and how it can be programmed. Two different FIPs will be used, one with UBoot as BL33, and another one with Linux-kernel as BL33. The strapping pins are configuring the initial boot mode. The table below lists the supported modes: Strapping Pins LAN966x B0 0000 (0x0) eMMC + FC3 (for trace) 0001 (0x1) QSPI0 + FC3 (for trace) 0010 (0x2) SDCard + FC3 (for trace) 0011 (0x3) eMMC 0100 (0x4) QSPI0 0101 (0x5) SDCard 0110 (0x6) PCIe EndPoint 0111 (0x7) Reserved 1000 (0x8) UART Monitor at FC3 + QSPI0 1001 (0x9) Reserved 1010 (0xa) Reserved 1011 (0xb) Reserved 1100 (0xc) Reserved 1101 (0xd) Reserved 1110 (0xe) Reserved 1111 (0xf) SPI Client The strapping configuration is read by TF-A/BL1, which uses it to select select the boot-media, and thereby determinate where the FIP is loaded from. UBoot will also use the strapping pins to determinate which flash to load the environment configuration from. When booting from flash the TF-A loaders can be configured to emit trace messages on the UART provided by FlexCom3. The following table show the strapping configurations with and without traces enables. Trace enable Trace disable Flash type 0000 0011 eMMC 0001 0100 QSPI/NOR 0010 0101 SDCard Boards which do not have a compatible HW configuration shall avoid this strap mode. Be aware that traces to the UART impact boot time and should only be activated when debugging is needed or the startup time is not important. When booting from eMMC/SDCard, a valid GUID Partition Table (GPT) must be used. The TF-A/BL1 ROM will look for a partition called fip and fip.bak and use then accordingly. The table below provide an example of a partition table. The page size for the eMMC/SDCard device is 0x200/512 bytes. Type Part-idx Part-name Offset/name Partition size GPT (PartTable) n/a n/a Page 0x0 0x40 (32kb) TF-A FIP 1 fip Page 0x40 0x40000 (128mb) TF-A FIP 2 fip.bak Page 0x40040 0x40000 (128mb) UBoot (Env) 3 Env Page 0x80040 0x1000 (2mb) UBoot (Env) 4 Env.bak Page 0x81040 0x1000 (2mb) ext4 (rootfs) 5 Boot0 Page 0x82040 0x200000 (1gb) ext4 (rootfs) 6 Boot1 Page 0x282040 0x200000 (1gb) ext4 (data) 7 Data Page 0x482040 until end SDCard doesn’t support redundant environment. The bold parts are the items which is hard-coded in either TF-A/BL1 or in UBoot. If it relates to UBoot then it can be changed, but requires changes to UBoot as well. Everything else is just an example which can be changed according to customer needs. The following table contains the offsets used by TF-A and UBoot when booting from QSPI/NOR: Type Offset/name Max size TF-A FIP 0x0 0x00180000 (1536kb) UBoot (Env) 0x180000 0x00040000 (256kb) UBoot (Env-bak) 0x1C0000 0x00040000 (256kb) This mode is used to initialize the SoC as a PCIe end-point. This mode can pull certain configuration options from OTP. Using this mode does not require any flash or DDR memory to be mounted at the board. After the PCIe end-point is configured the internal CPU will go to sleep. This mode will boot into a UART monitor using FlexCom3. This can be used to program the OTP and to load firmware into flash. This mode can be used without any valid content in the flash, and is therefore useful for de-brick or even production scenarios. The UART Monitor implement a machine interface and should not be used interactively with a terminal. Instead use the HTML5 client provided as part of the TF-A project. For any other use-case, the UART console terminal needs to be configured to 115200/8/N/1 In this strapping mode, the CPU is not booting at all. This means the (TF-A is not running. A SPI client will be initialized instead. This SPI interface allows a host CPU to read/write register in the switch-core. So far we have concentrated on configuring the HW and boot media. Once put in place, TF-A/BL2, BL2 and BL32 will boot, and eventually reach TF-A/BL33. TF-A/BL33 is the boot-step after TF-A, and can be UBoot, Linux kernel or some other OS. The following chapters covers this in more details. In this mode the UBoot binary is embedded in into the FIP as TF-A/BL33. TF-A will do the platform initialization, load images (and authenticate them), DDR initialization etc. Once done, it will boot UBoot, which then control the next steps in boot flow. UBoot will take care of loading the ITB and the rootfs and boot up into the Linux. This is the so called normal-boot mode. In this mode a Linux kernel binary is embedded in into the FIP as TF-A/BL33. TF-A will do the platform initialization, load images (and authenticate them), DDR initialization etc. Once done, it will boot the Linux kernel directly. This is the so called fast-boot mode. The referenced images and archives can all found on public servers. Therefore, the following description will provide all needed information. The TFA (FIPs) images can be found under following link: https://github.com/microchip-ung/arm-trusted-firmware/releases The build artifacts (UBoot, kernel, rootfs etc.) can be found on following public server: http://mscc-ent-open-source.s3-website-eu-west-1.amazonaws.com/?prefix=public_root/bsp Download the proper architecture and build version. For example: mscc-brsdk-arm-yyyy.version.tar.gz After extracting the *.tar.gz file, all rootfs and ITB related files can be found inside following folder: mscc-brsdk-arm-yyyy.version/arm-cortex_a8-linux-gnu/standalone/release The following subchapter gives a rough overview of the common used terms in the context of the available images and build artifacts. The upcoming table is describing the most important files extracted from the TFA artifacts archive: File name File type BL33 data Flash Description fwu.html HTML5 n.a. n/a Firmware update tool for MS Edge or Chrome lan966x_a0-release-bl2normal-auth.fip FIP file UBoot NOR RAW Plain text FIP (not encrypted) lan966x_b0-release-bl2normal-auth.gpt.gz GPT image UBoot MMC Compressed GPT image with embedded Plain text FIP lan966x_b0-release-bl2normal-ssk.fip FIP file UBoot NOR RAW encrypted FIP lan966x_b0-release-bl2normal-ssk.gpt.gz GPT image UBoot MMC Compressed GPT image with embedded encrypted FIP lan966x_b0-release-bl33linux-auth.fip FIP file Linux NOR RAW Plain text FIP (not encrypted) lan966x_b0-release-bl33linux-auth.gpt.gz GPT image Linux MMC Compressed GPT image with embedded Plain text FIP lan966x_b0-release-bl33linux-ssk.fip FIP file Linux NOR RAW encrypted FIP lan966x_b0-release-bl33linux-ssk.gpt.gz GPT image Linux MMC Compressed GPT image with embedded encrypted FIP Following table is describing the available ITB and filesystem related binaries inside the buildroot artifacts archive: File name Description brsdk_standalone_arm.ext4.gz ext4 rootfs with ITB, located in the root directory. brsdk_standalone_arm.itb ITB only, used in the *.gz file. fit.itb ITB with Kernel and squashfs filesystem. Suitable for network boot. rootfs.ext2 ext2 rootfs standalone rootfs.ext4 ext4 rootfs standalone rootfs.squashfs squashfs filesystem standalone rootfs.tar rootfs/tar standalone The ITB files from the build artifacts archive including always the latest available kernel files. The device tree sources are a set of text files in the Linux kernel source tree. They describe the hardware properties for a specific platform. For processing the DTS, a Device Tree Compiler is used. Mainly, the compiler takes as input a device-tree in a given format and outputs a device-tree in another format. Since the DTS represents the device-tree data in a human readable format, it is the preferred input format. The output result of the DTC results is a .dtb file. Various types of root filesystem builds are provided inside the build artifact archive. The rootfs/tar is accumulating a large collection of files into a single archive file, while preserving filesystem informations such as user/group permissions, dates, files, inodes and directory structures. There is no tarball compression method used. A tarball build of the rootfs/tar can be found inside the build artifacts archive. Please have a look for a binary which is named to rootfs.tar. The squashfs filesystem is a zlib compressed read-only filesystem (e.g. files, inodes and directories) for Linux. SquashFS gives more flexibility and performance speed than a tarball archive. The rootfs.squashfs based build can be found inside the build artifacts archive. The ext4 filesystem is also supported by the LAN966x system. There are different flavours of the ext4 builds inside the build artifacts archive available. The Flattened Image Tree is a format for combining different binary elements such as the kernel, initramfs and DTB into a single .itb file. Bootloaders like e.g. UBoot can read and process the FIT metadata to boot an embedded Linux system. This type of the FIT is containing the kernel files, device tree(s) and a root filesystem. Beside the FIP file, only one further single binary needs to be maintained and flashed to the target system. The drawback is the longer bootup time, caused by the the bigger image size. The according binary, which includes a 'squashfs' root filesystem, can be found in the build artifacts archive named by 'fit.itb'. Beside of the rootfs/tar and the squashfs, there is also the usage of an ext4 root filesystem possible. The following section should give a rough overview about some ext4 based use-cases. This variant of the ext4 build is containing the ext4 filesystem and additionally an ITB located inside root directory of the ext4 filesystem. For example, UBoot is capable to load filesystem and execute the ITB found in the root directory. This build variant is available inside the build artifacts archive. It is named to 'brsdk_standalone_arm.ext4.gz'. The FIP binary, so called 'fip.bin', is containing all parts of the TF-A firmware build. Basically, following components can be found there: BL2 BL32 or BL33 certificates support files The different FIP builds can be found inside the build artifacts archive. The GPT image is used for configuring basically the flash device structure. This means writing the GPT, creating all needed partitions and do some further setup work. The boot partition named to 'fip' will contain afterwards a 'fip.bin' file for the first system startup. The following table is showing the default partition scheme for the MMC flash devices. This means this table is valid for the eMMC and the SDCard device. offset (pages) size (pages) Name/desc ============== =============== ===================== 0x0 0x40 (32kb) GPT (partition table) 0x40 0x40000 (128mb) fip 0x40040 0x40000 (128mb) fip.bak 0x80040 0x1000 (2mb) Env 0x81040 0x1000 (2mb) Env.bak 0x82040 0x200000 (1gb) Boot0 0x282040 0x200000 (1gb) Boot1 0x482040 0x300000 (1.5gb) Data When eMMC or SDCard is selected as boot media, the TF-A expects in the first 32kb of the flash pages a GPT. The ROM code will look for a partition called fip. It will now try to boot from this partition. If the booting from the fip partition fails, it will try to load the firmware image from the fip.bak recovery partition. If the boot attempt from the recovery partition is failing, no fallback approach is offered here. Possible boot methods will be described in the upcoming sections. Before using the network boot feature, it needs to be ensured that the UBoot bootlader is made available inside the BL33. After startup and entering UBoot console, the network stack on the target needs to be configured. This can be done by using static network settings or using a dynamic ip address provisioning like DHCP. On the host system a TFTP server needs to be established. Host and target needs to be located in the same subnet. Afterwards the files can be transmitted over network to the target system memory. For the network boot scenario a 'fit.itb' file needs to be provisioned by the TFTP server. After configuration of the UBoot, the file can be uploaded to the platform and will be executed directly from the target memory. When QSPI/NOR is selected as boot media, the TF-A expect that the NOR flash is used in raw mode. This means in comparison to the eMMC/SDCard approach, there is no filesystem applied here. The NOR flash device can usually programmed with a standard SPI flash programmer. Before attaching the programmer, check the usage of the proper pin header and use the correct SPI pins on the eval board. But here, there is also another further way for updating the NOR flash device possible. This will be described in the upcoming chapters. Take care to write the 'fip.bin' file to a NOR memory address of 0x0 (zero).+ Because of the NOR size limitation on the LAN966x eval boards, only the 'fip.bin' file can be stored. For a full booting Linux system, the missing ITB and the rootfs needs to be stored on an additionally flash device. Afterwards the bootloader needs to be configured properly for recognizing the FS and the ITB. For the eMMC boot operation mode, the 'fip.bin' file needs to be located mandatory on a partition section named to 'fip' or 'fip.bak'. In this example, the UBoot needs to be part of the 'fip.bin'. This is required for uploading and writing the ITB and FS data via DHCP/TFTP to the correct eMMC partition sections. Afterwards the environment variables of UBoot needs to be setup properly for a full boot. This is the so called fast-boot mode. TF-A is loading in the BL33 stage directly the rootfs and ITB file. After the kernel is up and running, the FS will be mounted. In this mode, there is no further bootstage (like UBoot) involved here. This will decrease the bootup time in comparison to the previously described scenarios. In case of a blank eMMC or NOR device, following the instructions in Restore SecureBoot Images According the flashed FIP or GPT file, UBoot is available during system boot and can be used for customizing e.g. the ITB and rootfs related components. Furthermore, it can be used for updating existing GPT images or FIP files on the flash device. The string of '-bl2normal-' in the FIP or GPT filename identifies the availability of the UBoot feature. For example: lan966x_b0-release-bl2normal-auth.gpt or lan966x_b0-release-bl2normal-ssk.fip Sometimes it makes also to use the command of 'help', which provides a huge collection of all available commands and features. For example, the command of 'env print' can be used for dumping all available and initialized variables on the system. For setting up the UBoot mode, following steps needs to be applied: Set the strapping mode to 0x0 (eMMC + FC3). See Boot media configuration. Attach the board via usb cable to the host workstation Configure a serial console application like e.g. putty (settings 115200/8/N/1) Attach console application to /dev/ttyACM0 Reset the board and interrupt the UBoot autoboot before timeout. On UBoot console, the command 'mmc info' will return the emmc device properties. m => mmc info Device: sdhci-host@e0830000 Manufacturer ID: 9d OEM: 101 Name: IS008 Bus Speed: 30000000 Mode : MMC High Speed (52MHz) Rd Block Len: 512 MMC version 5.0 High Capacity: Yes Capacity: 7.3 GiB Bus Width: 4-bit Erase Group Size: 512 KiB HC WP Group Size: 8 MiB User Capacity: 7.3 GiB WRREL Boot Capacity: 4 MiB ENH RPMB Capacity: 4 MiB ENH The UBoot command of 'mmc help' will provide an overview of all available mmc sub system related commands. m => mmc help mmc - MMC sub system Usage: mmc info - display info of the current MMC device mmc read addr blk# cnt mmc write addr blk# cnt mmc erase blk# cnt mmc rescan mmc part - lists available partition on current mmc device mmc dev [dev] [part] - show or set current mmc device [partition] mmc list - lists available devices mmc hwpartition [args...] - does hardware partitioning arguments (sizes in 512-byte blocks): [user [enh start cnt] [wrrel {on|off}]] - sets user data area attributes [gp1|gp2|gp3|gp4 cnt [enh] [wrrel {on|off}]] - general purpose partition [check|set|complete] - mode, complete set partitioning completed WARNING: Partitioning is a write-once setting once it is set to complete. Power cycling is required to initialize partitions after set to complete. mmc bootbus dev boot_bus_width reset_boot_bus_width boot_mode - Set the BOOT_BUS_WIDTH field of the specified device mmc bootpart-resize - Change sizes of boot and RPMB partitions of specified device mmc partconf dev [boot_ack boot_partition partition_access] - Show or change the bits of the PARTITION_CONFIG field of the specified device mmc rst-function dev value - Change the RST_n_FUNCTION field of the specified device WARNING: This is a write-once field and 0 / 1 / 2 are the only valid values. mmc setdsr - set DSR register value For example, the MMC command of 'mmc write' will primarily used for storing the data content on the flash device. For setting up the UBoot mode, following steps needs to be applied: Set the strapping mode to 0x1 (QSPI + FC3). See Boot media configuration. Attach the board via usb cable to the host workstation Configure a serial console application like e.g. putty (settings 115200/8/N/1) Attach putty to /dev/ttyACM0 Reset the board and interrupt the UBoot autoboot before timeout On the UBoot console, the command 'sf probe' will return the spi flash device properties m => sf probe SF: Detected sst26vf016b with page size 256 Bytes, erase size 4 KiB, total 2 MiB The UBoot command of 'sf help' will provide an overview of all available spi flash related sub system commands. m => sf help sf - SPI flash sub-system Usage: sf probe [[bus:]cs] [hz] [mode] - init flash device on given SPI bus and chip select sf read addr offset|partition len - read `len' bytes starting at `offset' or from start of mtd `partition'to memory at `addr' sf write addr offset|partition len - write `len' bytes from memory at `addr' to flash at `offset' or to start of mtd `partition' sf erase offset|partition [+]len - erase `len' bytes from `offset' or from start of mtd `partition' `+len' round up `len' to block size sf update addr offset|partition len - erase and write `len' bytes from memory at `addr' to flash at `offset' or to start of mtd `partition' sf protect lock/unlock sector len - protect/unprotect 'len' bytes starting at address 'sector' The SPI flash command of 'sf write' or 'sf update' will primarily used for storing FIP data content on the SPI flash device. UBoot can also configured for using the network stack for file transmission. A common practice is to enable the DHCP server on the host and using the UBoot 'dhcp' command. After recognizing a valid IP address, a file transmission using TFTP wil be established. In case of using a static IP setup on the target, the following example can be applied via UBoot console. Adjust the values to the individual network environment. The command of 'tftpboot' can be used then afterwards on the UBoot console. env set 'ipaddr 192.168.0.10' env set 'netmask 255.255.255.0' env set 'serverip 192.168.0.1' saveenv m => help tftp tftpboot - boot image via network using TFTP protocol Usage: tftpboot [loadAddress] [[hostIPaddr:]bootfilename] In case of a available DHCP server in the network, the UBoot command of 'dhcp' can be used. It will setup the network configuration and establish afterwards the TFTP based file transmission. m => help dhcp dhcp - boot image via network using DHCP/TFTP protocol Usage: dhcp [loadAddress] [[hostIPaddr:]bootfilename] The DHCP server, TFTP server and the target needs to be reside in the same network. Hereby, a test binary called 'fip.bin' will be now transmitted from the TFTP server via network to the target device memory. The used address of 0x64000000 is chosen randomly and points to an unused DDR memory section. m => dhcp 0x64000000 fip.bin port0 Waiting for PHY auto negotiation to complete........ done Using port0 device TFTP from server 192.168.0.1; our IP address is 192.168.0.20 Filename 'fip.bin'. Load address: 0x64000000 Loading: ###################################### 106.4 KiB/s done Bytes transferred = 553376 (871a0 hex) Now, the 'fip.bin' data is copied the target memory and can be e.g. written into an eMMC partition or in NOR flash device. This chapter shows some update examples. In the first step, we have to check the UBoot environment variables inside the UBoot console. Therefore enter UBooot console by following routine: Reset the board and wait for the UBoot autoboot stage Press any key to stop autoboot timer in order to get a U-Boot console prompt. Make sure that following environment variables are available as shown. m => env print fdt_high=0xffffffff initrd_high=0xffffffff baudrate=115200 bootdelay=3 bootcmd=run mmc_boot loadaddr=0x64000000 mmc_unzip_loadaddr=0x80000000 mmc_bak=6 mmc_boot=run mmc_tryboot; run mmc_swap; run mmc_tryboot mmc_cur=5 mmc_dev=mmc 0 mmc_format=gpt guid ${mmc_dev} mmc_guid; gpt write ${mmc_dev} ${mmc_part}; env save mmc_part=uuid_disk=${mmc_guid}; name=fip,start=32K,size=128MiB,type=system; name=fip.bak,size=128MiB,type=system; name=Env,size=2MiB,type=data; name=Env.bak,size=2MiB,type=data; name=Boot0,size=1GiB,type=linux; name=Boot1,size=1GiB,type=linux; name=Data,size=-,type=linux; mmc_swap=env set _mmc_tmp ${mmc_bak}; env set mmc_bak ${mmc_cur}; env set mmc_cur ${_mmc_tmp}; env set _mmc_tmp; env save mmc_tryboot=run mmc_load; if test $? = 0; then setenv mtdroot root_next=/dev/mmcblk0p${mmc_cur}; run ramboot; fi; mmc_load=ext4load ${mmc_dev}:${mmc_cur} ${loadaddr} Image.itb ramboot=bootm start ${loadaddr}#${pcb}; bootm loados ${loadaddr}#${pcb}; bootm ramdisk ${loadaddr}#${pcb}; run set_rootargs; run setup; bootm fdt ${loadaddr}#${pcb}; bootm prep ${loadaddr}#${pcb}; bootm go ${loadaddr}#${pcb} setup=setenv bootargs console=${console} ${mtdparts} ${rootargs} ${mtdroot} fis_act=${active} ${bootargs_extra} rootargs_mmc=setenv rootargs root=/dev/mmcblk0p${mmc_cur} ro rootwait rootargs_ram=setenv rootargs root=/dev/ram0 ro rootwait set_rootargs=if test $initrd_start = 0; then run rootargs_mmc; else; run rootargs_ram; fi; div_512=setexpr _tmp_ ${filesize} + 0x1ff; setexpr filesize_512 ${_tmp_} / 0x200; env set _tmp_ fip_fw=lan966x_b0.fip fip_fw_dl=dhcp ${loadaddr} ${fip_fw} nor_boot=sf probe; env set active linux; run nor_tryboot; env set active linux.bk; run nor_tryboot nor_dlup=dhcp ${nor_image}; run nor_update nor_fip_upd=sf probe; sf update ${loadaddr} 0 ${filesize} nor_fip_dlup=run fip_fw_dl; run nor_fip_upd nor_image=brsdk_standalone_arm.itb nor_only=env set mtdparts mtdparts=${nor_parts};env set bootcmd run nor_boot;env save nor_parts=spi0:1536k(fip),256k(Env),256k(Env.bk),25m(linux),25m(linux.bk),12m(rootfs_data) nor_tryboot=sf read ${loadaddr} 200000 1900000; run ramboot nor_update=sf probe; sf update ${fileaddr} 200000 ${filesize} mmc_fip0_upd=run div_512; mmc write ${loadaddr} ${mmc_offset_fip0} ${filesize_512} mmc_fip0_dlup=run fip_fw_dl; run mmc_fip0_upd mmc_fip1_upd=run div_512; mmc write ${loadaddr} ${mmc_offset_fip1} ${filesize_512} mmc_fip1_dlup=run fip_fw_dl; run mmc_fip1_upd mmc_fip01_dlup=run fip_fw_dl; run mmc_fip0_upd; run mmc_fip1_upd mmc_fw=brsdk_standalone_arm.ext4.gz mmc_dl=dhcp ${loadaddr} ${mmc_fw}; unzip ${loadaddr} ${mmc_unzip_loadaddr} mmc_boot0_upd=run div_512; mmc write ${mmc_unzip_loadaddr} ${mmc_offset_boot0} ${filesize_512} mmc_boot0_dlup=run mmc_dl; run mmc_boot0_upd mmc_boot1_upd=run div_512; mmc write ${mmc_unzip_loadaddr} ${mmc_offset_boot1} ${filesize_512} mmc_boot1_dlup=run mmc_dl; run mmc_boot1_upd mmc_boot01_dlup=run mmc_dl; run mmc_boot0_upd; run mmc_boot1_upd mmc_offset_fip0=0x40 mmc_offset_fip1=0x40040 mmc_offset_boot0=0x82040 mmc_offset_boot1=0x282040 mmc_offset_data=0x482040 console=ttyS0,115200n8 mtdparts=mtdparts=spi0:1536k(fip),256k(Env),256k(Env.bak) bootargs_extra=uio_pdrv_genirq.of_id=generic-uio loglevel=1 Use the env set command if something is wrong or missing and remember to use the env save command when you are done. There might be other environment variables defined, but you can safely ignore them. Some explanation for the predefined environment variables and for what they are used for: fdt_high - The value 0xffffffff prevents an extra copy of the flattened device tree. initrd_high - The value 0xffffffff prevents an extra copy of the ramdisk. baudrate - U-Boot console baudrate. bootdelay - Number of seconds to wait for user input before running bootcmd. bootcmd - Command to run automatically at boot. Default is set to run mmc_boot. loadaddr - Temporary address to use when loading images via TFTP or from eMMC. mmc_unzip_loadaddr - Temporarily used address for uncompressing images mmc_bak - The backup partition index for boot1 mmc_boot - Try first to load 'brsdk_standalone_arm.ext4.gz' from active partition. If failing then backup partition will be tried mmc_cur - The default partition index for boot0 mmc_dev - eMMC device to use in read/write commands. mmc_format - Format eMMC device according defined partition layout mmc_part - Partition layout definitions to use in 'mmc_format'. mmc_swap - Change active partition from 'Boot0' to 'Boot1' and vice versa mmc_tryboot - Seeking for available boot images mmc_load - Try to load an ITB image from the active partition ramboot - Try to load an run an ITB image from memory setup - Configuring bootargs environment variable rootargs_mmc - Configuration for rootfs in eMMC rootargs_ram- Configuration for rootfs in ram set_rootargs - Set correct configuration for root file system div_512 - Calculates the number of required flash pages (512 bytes) fip_fw - Defines the name of the FIP file used for eMMC and NOR update fip_fw_dl - Configuring and starting the DHCP request for file download nor_fip_upd - Writes the FIP data to the NOR flash device nor_fip_dlup - Download and write the FIP data to NOR flash device mmc_fip0_upd - Writes FIP data to the eMMC device in partition 'fip' mmc_fip_dlup - Download and write the FIP data to eMMC device mmc_fip1_upd - Writes FIP data to the eMMC device in partition 'fip.bak' mmc_fip1_dlup - Download and write the FIP data to eMMC device mmc_fip01_dlup - Download FIP and write data to partition 'fip0' and 'fip1' mmc_fw - Defines the name of the ext4.gz file for eMMC update mmc_dl - Download ext4.gz file and uncompress data into target memory mmc_boot0_upd - Writes the uncompressed data to the eMMC device in partition 'boot0' mmc_boot0_dlup - Download, uncompress and write the image data to eMMC device mmc_boot1_upd - Writes the uncompressed data to the eMMC device in partition 'boot1' mmc_boot1_dlup - Download, uncompress and write the image data to eMMC device mmc_boot01_dlup - Download, uncompress and write data to partition 'boot0' and 'boot1' mmc_offset_fip0 - GPT address offset of the 'fip' partition mmc_offset_fip1 - GPT address offset of the 'fip.bak' partition mmc_offset_boot0 - GPT address offset of the 'boot0' partition mmc_offset_boot1 - GPT address offset of the 'boot1' partition mmc_offset_data - GPT address offset of the 'data' partition console - Configuration settings for the console terminal mtdparts - NOR flash partition configuration bootargs_extra - Additional UBoot arguments The following examples assumes that the build artifacts of brsdk_standalone_arm.ext4.gz and/or lan966x_b0.fip are available on the TFTP server. For a successful eMMC boot, a special partition layout needs to be make available on the flash device. This can be achieved by following two approaches: Use the already defined UBoot console command of 'mmc_format': m => run mmc_format success! Writing GPT: success! Saving Environment to MMC... Writing to redundant MMC(0)... OK or Write a GPT image directly to the blank eMMC device, like described in the eMMC GPT section. For checking the partition layout, use the UBoot command of 'mmc part'.This is the expected partition layout here: m => mmc part Partition Map for MMC device 0 -- Partition Type: EFI Part Start LBA End LBA Name Attributes Type GUID Partition GUID 1 0x00000040 0x0004003f \"fip\" attrs: 0x0000000000000000 type: ebd0a0a2-b9e5-4433-87c0-68b6b72699c7 guid: 00042021-0408-4601-9dcc-a8c51255994f 2 0x00040040 0x0008003f \"fip.bak\" attrs: 0x0000000000000000 type: ebd0a0a2-b9e5-4433-87c0-68b6b72699c7 guid: 8ef917d1-2c6f-4bd0-a5b2-331a19f91cb2 3 0x00080040 0x0008103f \"Env\" attrs: 0x0000000000000000 type: ebd0a0a2-b9e5-4433-87c0-68b6b72699c7 guid: 77877125-add0-4374-9e60-02cb591c9737 4 0x00081040 0x0008203f \"Env.bak\" attrs: 0x0000000000000000 type: ebd0a0a2-b9e5-4433-87c0-68b6b72699c7 guid: b4b84b8a-04e3-48ae-8536-aff5c9c495b1 5 0x00082040 0x0028203f \"Boot0\" attrs: 0x0000000000000000 type: ebd0a0a2-b9e5-4433-87c0-68b6b72699c7 guid: 35219908-c613-4b08-9322-3391ff571e19 6 0x00282040 0x0048203f \"Boot1\" attrs: 0x0000000000000000 type: ebd0a0a2-b9e5-4433-87c0-68b6b72699c7 guid: 8e123a33-e3d3-4db9-92f4-d3ebd9b3224f 7 0x00482040 0x00e8ffde \"Data\" attrs: 0x0000000000000000 type: ebd0a0a2-b9e5-4433-87c0-68b6b72699c7 guid: 02a90af2-5d1c-4a29-9177-97a513e3cae4 Verify that Start LBA in each partition equals the partition addresses in the corresponding environment variable mmc_p. Please see also chapter eMMC/SDCard default partition schema. The following scenario will now upload an brsdk_standalone_arm.ext4.gz file, which is containing an ext4 rootfs and including an ITB in the root directory. Following steps needs to be applied therefore: Run the mmc_boot0_dlup command to load the brsdk_standalone_arm.ext4.gz file via DHCP to the target memory. Afterwards, the file will be uncompressed and written into the eMMC partition 'Boot0'. m => run mmc_boot0_dlup port0 Waiting for PHY auto negotiation to complete........ done Using port0 device TFTP from server 192.168.0.1; our IP address is 192.168.0.10 Filename 'brsdk_standalone_arm.ext4.gz'. Load address: 0x64000000 Loading: ################################################################# ###### ........... ################################################################# ######################### 6.2 MiB/s done Bytes transferred = 106115072 (6533000 hex) MMC write: dev # 0, block # 8192, count 208960 ... 208960 blocks written: OK If UBoot run in its default configuration, it will do now all needed actions, and make the rootfs and ITB available in the expected eMMC partition. Running the fip_fw_dl command will upload the lan966x_b0.fip file using the DHCP/TFTP connection. m => fip_fw_dl port0 Waiting for PHY auto negotiation to complete........ done Using port0 device TFTP from server 192.168.0.1; our IP address is 192.168.0.10 Filename 'lan966x_b0.fip'. Load address: 0x64000000 Loading: ################################################################# ###### ........... ################################################################# ######################################### 2.9 MiB/s done Bytes transferred = 22538412 (157e8ac hex) Afterwards the command of ramboot will execute the image inside the memory. For example: ## Loading kernel from FIT Image at 64000000 ... Using Device Tree in place at 67d00000, end 67d07977 Starting kernel ... For configuring the device permanently to the network boot mode, set the environment variable of bootcmd as shown below: m => setenv bootcmd 'run fip_fw_dl; run ramboot' m => saveenv m => reset After reset, UBoot will run the sequence of bootcmd on every target startup. No matter if you have a eMMC equipped evaluation board you can also select to store the boot image in SPI NOR flash only and use this image as the boot media. This will not be as fast as booting from eMMC but can be used as a fallback solution in case the first option is not available for some other reason. To set the u-boot env to boot from nor it is required to run this command: m => run nor_only This will partitioned the NOR like this: m => mtd list List of MTD devices: * nor0 - device: spi-flash@0 - parent: qspi@e0834000 - driver: jedec_spi_nor - path: /ahb/apb/qspi@e0834000/spi-flash@0 - type: NOR flash - block size: 0x1000 bytes - min I/O: 0x1 bytes - 0x000000000000-0x000000200000 : \"nor0\" - 0x000000000000-0x000000180000 : \"fip\" - 0x000000180000-0x0000001c0000 : \"Env\" - 0x0000001c0000-0x000000200000 : \"Env.bk\" - 0x000000200000-0x000001a00000 : \"linux\" - 0x000001a00000-0x000003400000 : \"linux.bk\" - 0x000003400000-0x000004000000 : \"rootfs_data\" As you can see there are two 25MB linux partitions (a main and a backup) that can be used to store a FIT image. To add an image in the NOR flash it is required to download the image and write it in the NOR using the command: m => run nor_dlup You can boot the system with the run nor_boot command. The UBoot console can also be used for programming a new image. This can be the case for some update reasons. But therefore, a running system with UBoot needs to be available on the target. In the first step, we have to boot into UBoot console like following description: Reset the board and wait for the UBoot autoboot stage Press any key to stop autoboot timer in order to get a U-Boot console prompt. Now we will upload a GPT image like e.g. lan966x_b0-release-bl2normal-ssk.gpt to the target memory. m => dhcp 0x64000000 lan966x_b0-release-bl2normal-ssk.gpt port0 Waiting for PHY auto negotiation to complete........ done Using port0 device TFTP from server 192.168.0.1; our IP address is 192.168.0.10 Filename 'lan966x_b0-release-bl2normal-ssk.gpt'. Load address: 0x64000000 Loading: ################################################################# ################################################################# ###### ........... ################################################################# ####### 6.1 MiB/s done Bytes transferred = 104890368 (6408000 hex) Now the image data is uploaded to the target memory and can be written to the flash device. Lets focus on the next two upcoming commands. The first command converts the uploaded filesize to the required number of flash pages (512 byte). The second command is writing the image data to the eMMC flash device. Important is here, to set the write offset address of 0x0 (zero) for the flash. m => run div_512 m => mmc write ${loadaddr} 0x0 ${filesize_512} MMC write: dev # 0, block # 0, count 208960 ... 208960 blocks written: OK A running Linux system on the target can also be used for image update purpose. Therefore a network connection from the target to the host system needs to be established first. Afterwards a working TFTP server needs to make available in the same network. Using the fdisk command will dump the available partitions on the eMMC. This is useful for checking the proper partition index identifier. The device /dev/mmcblk0p corresponds to partition . # fdisk -l Found valid GPT with protective MBR; using GPT Disk /dev/mmcblk0: 15269888 sectors, 3360M Logical sector size: 512 Disk identifier (GUID): 671e9526-c34a-4bc9-9670-bfebb6dba410 Partition table holds up to 128 entries First usable sector is 34, last usable sector is 15269854 Number Start (sector) End (sector) Size Name 1 64 262207 128M fip 2 262208 524351 128M fip.bak 3 524352 528447 2048K Env 4 528448 532543 2048K Env.bak 5 532544 2629695 1024M Boot0 6 2629696 4726847 1024M Boot1 7 4726848 15269854 5147M Data One way to upload the e.g. lan966x_b0-release-bl2normal-ssk.fip file, is to use a TFTP client inside the running Linux. Therefore attach the putty console to the target and upload the FIP file using the 'dhcp' or 'tftp' command in an e.g. /temp folder on the target. Afterwards the file can be written by using the dd command into the proper device partition. In this example, we will write the data into the partition named to fip which can be mapped to /dev/mmcblk0p1. dd if=/temp/lan966x_b0-release-bl2normal-ssk.fip of=/dev/mmcblk0p1 After rebooting of the target, the updated file will be executed now. The same approach as described before, can be applied also for updating the brsdk_standalone_arm.ext4.gz binary. Upload the file using e.g. TFTP to a /temp folder or to a destination folder of your preference. In this folder, it needs to be unzipped first. Afterwards write the file by using the dd command to the proper device partition. In this example, we will write the data into the partition named to Boot0 which can be mapped to /dev/mmcblk0p5. dd if=/temp/ext4-itb-bare.ext4 of=/dev/mmcblk0p5 After rebooting of the target, the updated file will be executed now. BL1 Boot Loader 1: In secure immutable ROM (Trusted ROM Firmware) BL2 Boot Loader 2: In secure on-chip RAM, temporary (Trusted Boot Firmware) BL31 Boot Loader 31: Resident secure services (ARM v8) BL32 Boot Loader 32: Resident secure services (ARM v7) BL33 Boot Loader 33: Typically U-Boot. BSSK Binding Secret Symmetric Key CLI Command line interface DDR Double Data Rate, memory type DHCP Dynamic Host Configuration Protocol DTB Device Tree Blob DTC Device Tree Compiler DTS Device Tree Source files eMMC Embedded MultiMediaCard FCx Flex Com Interface #x FIP Firmware Image Package FIT Flattened Image Tree FS Filesystem FW Firmware GPT GUID Partition Table JTAG Joint Test Action Group, interface for testing and debugging KERNEL The Linux kernel LBA Logical Block Address OTP One-Time-Programmable Memory PCIe Peripheral Component Interconnect Express PSCI Power State Coordination Interface ROOTFS ROOT File System, used in Linux context ROT Root of Trust ROT-PK Root of Trust Public Key ROT-PK-SHA Root of Trust Public Key SHA (SHA of the public key of the ROT) ROT-PRIVATE Root of Trust Private Key SDCard Secure Digital Card SJTAG Secure JTAG SoC System on Chip SPI Serial Peripheral Interface SRAM Secure Ram SSK Secret Symmetric Key TBBR Trusted Board Boot Requirements TF-A Trusted Firmware for ARMv7 and ARMv8 TFTP Trivial File Transfer Protocol UART Universal Asynchronous Receiver-Transmitter","title":"Booting LAN966x","component":"bsp","version":"2024.03","name":"lan966x-boot","url":"/bsp/2024.03/supported-hw/lan966x-boot.html","titles":[{"text":"1. Introduction","hash":"_introduction","id":1},{"text":"2. Overview","hash":"_overview","id":2},{"text":"3. Boot media configuration","hash":"pin_modes","id":3},{"text":"3.1. UART Traces","hash":"_uart_traces","id":4},{"text":"3.2. Booting from eMMC/SDCard (0000, 0010, 0011 or 0101)","hash":"_booting_from_emmcsdcard_0000_0010_0011_or_0101","id":5},{"text":"3.3. Booting from NOR (0001 or 0100)","hash":"_booting_from_nor_0001_or_0100","id":6},{"text":"3.4. PCIe End Point (0110)","hash":"_pcie_end_point_0110","id":7},{"text":"3.5. UART Monitor (1000)","hash":"uart_monitor","id":8},{"text":"3.6. SPI Client (pin mode 1111)","hash":"_spi_client_pin_mode_1111","id":9},{"text":"4. Beyond TF-A","hash":"_beyond_tf_a","id":10},{"text":"4.1. TF-A/UBoot/Linux","hash":"_tf_aubootlinux","id":11},{"text":"4.2. TF-A/Linux","hash":"_tf_alinux","id":12},{"text":"5. Images and artifacts","hash":"_images_and_artifacts","id":13},{"text":"5.1. TFA images","hash":"_tfa_images","id":14},{"text":"5.2. Buildroot artifacts","hash":"_buildroot_artifacts","id":15},{"text":"5.3. Artifacts","hash":"_artifacts","id":16},{"text":"5.3.1. TFA images","hash":"_tfa_images_2","id":17},{"text":"5.3.2. Buildroot artifacts","hash":"_buildroot_artifacts_2","id":18},{"text":"5.3.3. Kernel","hash":"_kernel","id":19},{"text":"5.3.4. DTS","hash":"_dts","id":20},{"text":"5.3.5. DTB","hash":"_dtb","id":21},{"text":"5.3.6. rootfs","hash":"_rootfs","id":22},{"text":"5.3.7. rootfs/tar","hash":"_rootfstar","id":23},{"text":"5.3.8. squashfs","hash":"_squashfs","id":24},{"text":"5.3.9. ext4","hash":"_ext4","id":25},{"text":"5.4. FIT","hash":"_fit","id":26},{"text":"5.4.1. ITB full","hash":"_itb_full","id":27},{"text":"5.5. ext4","hash":"_ext4_2","id":28},{"text":"5.5.1. ext4 with embedded ITB bare on FS","hash":"_ext4_with_embedded_itb_bare_on_fs","id":29},{"text":"5.6. FIP","hash":"_fip","id":30},{"text":"5.7. GPT image","hash":"_gpt_image","id":31},{"text":"5.8. eMMC/SDCard default partition schema","hash":"part_table","id":32},{"text":"6. Boot configurations","hash":"_boot_configurations","id":33},{"text":"6.1. Network-boot","hash":"_network_boot","id":34},{"text":"6.2. NOR","hash":"_nor","id":35},{"text":"6.3. eMMC","hash":"_emmc","id":36},{"text":"6.4. Linux@BL33","hash":"_linuxbl33","id":37},{"text":"7. Use-cases","hash":"_use_cases","id":38},{"text":"7.1. Debrick or blank flash","hash":"_debrick_or_blank_flash","id":39},{"text":"7.2. UBoot","hash":"_uboot","id":40},{"text":"7.2.1. Working with MMC subsystem","hash":"_working_with_mmc_subsystem","id":41},{"text":"7.2.2. Working with NOR subsystem","hash":"_working_with_nor_subsystem","id":42},{"text":"7.2.3. Loading files from network","hash":"load_files_network","id":43},{"text":"7.2.4. Boot image","hash":"_boot_image","id":44},{"text":"7.2.4.1. from eMMC","hash":"_from_emmc","id":45},{"text":"7.2.4.2. from network","hash":"_from_network","id":46},{"text":"7.2.4.3. from NOR","hash":"_from_nor","id":47},{"text":"7.2.5. Program image","hash":"_program_image","id":48},{"text":"7.2.5.1. to eMMC","hash":"_to_emmc","id":49},{"text":"7.3. Update image from Linux","hash":"_update_image_from_linux","id":50},{"text":"7.3.1. Update FIP","hash":"_update_fip","id":51},{"text":"7.3.2. Update ext4-img","hash":"_update_ext4_img","id":52},{"text":"8. TERMS and ABBREVIATIONS","hash":"term","id":53}]},"135":{"id":135,"text":"LAN966X SoC have 5 FLEXCOMs(Flexible Serial Communication Controller). Each flexcom supports three serial communication protocols that includes USART(Universal Synchronous Asynchronous Receiver Transceiver). Refer USART documentation SPI(Serial Peripheral Interface). Refer SPI documentation TWI(Two-wire Interface) or I2C(Inter Integrated Circuit). Refer TWI documentation Each flexcom has two optional I/O lines. Namely, CS0 and CS1 in flexcom SPI mode. CTS and RTS in flexcom USART mode. These chip-selects can be mapped to lan966x FLEXCOM_SHARED[0-20] pins and usage depends on functions being configured. Following kernel config options should be enabled to use LAN966x Flexcom interface: CONFIG_MFD_ATMEL_FLEXCOM - Flexcom driver config option. Following configurations are required to define a flexcom in device tree: compatible string must be set to atmel,sama5d2-flexcom or set to microchip,lan966x-flexcom in case flexcom chip-select configurations are required. Flexcom reg property must be set with register address and length. Refer table below: FLEXCOM ID Flexcom base registers map flx0 flx1 flx2 flx3 flx4 clocks property must be set to where x is flexcom ID. #address-cells must be set to 1. #size-cells must be set to 1. ranges must be set to one range for the full I/O register region. Optional flexcom chip-select configurations: In order to map flexcom USART cts, rts lines or flexcom SPI cs0, cs1 lines to flexcom shared pins, use below properties: Append flexcom shared register address and length to reg property. Refer table below: microchip,flx-shrd-pins - Specify the flexcom shared pins to be mapped to chip-select line. Possible flexcom shared pins are [0-20]. microchip,flx-cs - Specify chip-selects to be configured. 0 for cts line in USART mode, cs0 in SPI mode. 1 for rts line in USART mode, cs1 in SPI mode. FLEXCOM ID Flexcom shared registers map flx0 flx1 flx2 flx3 flx4 https://elixir.bootlin.com/linux/latest/source/Documentation/devicetree/bindings/mfd/atmel-flexcom.txt Following example shows how a flexcom should be defined in device tree. Example to configure flexcom2 in TWI mode: dtsi file: flx2: flexcom@e0060000 { compatible = \"atmel,sama5d2-flexcom\"; reg = ; clocks = ; #address-cells = ; #size-cells = ; ranges = ; status = \"disabled\"; }; dts file: &flx2 { atmel,flexcom-mode = ; status = \"okay\"; }; Example to configure flexcom3 in SPI mode and map cs0 to flexcom shared pin 4: dtsi file: flx3: flexcom@e0064000 { compatible = \"microchip,lan966x-flexcom\"; reg = , ; clocks = ; #address-cells = ; #size-cells = ; ranges = ; status = \"disabled\"; }; dts file: &flx3 { atmel,flexcom-mode = ; microchip,flx-shrd-pins = ; microchip,flx-cs = ; status = \"okay\"; };","title":"LAN966x FLEXCOM","component":"bsp","version":"2024.03","name":"lan966x-flexcom","url":"/bsp/2024.03/supported-hw/lan966x-flexcom.html","titles":[{"text":"SoC Resources","hash":"_soc_resources","id":1},{"text":"Kernel configurations","hash":"_kernel_configurations","id":2},{"text":"Devicetree Configuration","hash":"_devicetree_configuration","id":3},{"text":"References","hash":"_references","id":4},{"text":"Example","hash":"_example","id":5}]},"136":{"id":136,"text":"LAN966X SoC have 5 FLEXCOMs(Flexible Serial Communication Controller). Each flexcom supports three serial communication protocols that includes USART(Universal Synchronous Asynchronous Receiver Transceiver). SPI(Serial Peripheral Interface). TWI(Two-wire Interface) or I2C(Inter Integrated Circuit). In order to use a I2C interface, a specific flexcom should be configured in I2C mode. Following kernel config options should be enabled to use LAN966x I2C interface: CONFIG_MFD_ATMEL_FLEXCOM - Flexcom driver config option. CONFIG_I2C_AT91 - I2C driver config option. Corresponding flash driver should be enabled. Below example explains I2C with a EEPROM device for which CONFIG_EEPROM_AT24 config option is required. To use I2C interface, following configurations are required in device tree. Each of the flexcom flx0, flx1, flx2, flx3 and flx4 nodes can be configured in I2C mode ATMEL_FLEXCOM_MODE_TWI to use I2C interface. compatible string must be set to microchip,sam9x60-i2c. reg property must be set with register address and length as GPIO pins for TXD, RXD should be configured to pinctrl-0 property.. List of possible pin mappings are as in below table: FLEXCOM Node DT RXD node RXD pin DT TXD node TXD pin flx0 fc0_a_rxd_pins GPIO9 fc0_a_txd_pins GPIO10 flx0 fc0_b_rxd_pins GPIO25 fc0_b_txd_pins GPIO26 flx0 fc0_c_rxd_pins GPIO62 fc0_c_txd_pins GPIO63 flx1 fc1_a_rxd_pins GPIO12 fc1_a_txd_pins GPIO13 flx1 fc1_b_rxd_pins GPIO34 fc1_b_txd_pins GPIO35 flx1 fc1_c_rxd_pins GPIO47 fc1_c_txd_pins GPIO48 flx2 fc2_a_rxd_pins GPIO15 fc2_a_txd_pins GPIO16 flx2 fc2_b_rxd_pins GPIO44 fc2_b_txd_pins GPIO45 flx3 fc3_a_rxd_pins GPIO18 fc3_a_txd_pins GPIO19 flx3 fc3_b_rxd_pins GPIO52 fc3_b_txd_pins GPIO53 flx3 fc3_c_rxd_pins GPIO31 fc3_c_txd_pins GPIO32 flx4 fc4_a_rxd_pins GPIO21 fc4_a_txd_pins GPIO22 flx4 fc4_b_rxd_pins GPIO57 fc4_b_txd_pins GPIO58 flx4 fc4_c_rxd_pins GPIO65 fc4_c_txd_pins GPIO66 interrupts property must set with interrupt details. Interrupt lines[CPU INTR] corresponding to a flexcom must be configured as defined in below table: FLEXCOM ID Shared Peripheral Interrupt CPU INTR flx0 80 48 flx1 81 49 flx2 82 50 flx3 83 51 flx4 84 52 Note that Shared peripheral interrupt lines start at index ID32. So, CPU INTR must be calculated as [Shared peripheral interrupt number - 32]. Input clock clocks property must be set to &nic_clk. Note that NIC clock(200Mhz) is clock used by AXI, AHB fabric and APB bridges which connects all th peripherals. I2C driver implementation Flexcom DT documentation I2C DT documentation Following example shows how a flexcom I2C should be defined in DT to use EEPROM device present on it: &flx2 { atmel,flexcom-mode = ; status = \"okay\"; i2c0: i2c@600 { compatible = \"microchip,sam9x60-i2c\"; reg = ; interrupts = ; #address-cells = ; #size-cells = ; clocks = ; pinctrl-0 = , ; pinctrl-names = \"default\"; atmel,fifo-size = ; i2c-analog-filter; i2c-digital-filter; i2c-digital-filter-width-ns = ; status = \"okay\"; eeprom: eeprom@50 { compatible = \"atmel,24c512\"; reg = ; pagesize = ; status = \"okay\"; }; }; }; To confirm if i2c flash is created: Check if flash device is created in /sys/bus/i2c/devices/ directory. Following example shows how to read/write to I2C eeprom device: # dmesg | grep i2c [ 5.749296] at91_i2c e0060600.i2c: can't get DMA channel, continue without DMA support [ 5.757431] at91_i2c e0060600.i2c: Using FIFO (32 data) [ 5.763341] at91_i2c e0060600.i2c: recovery information incomplete [ 5.782333] at91_i2c e0060600.i2c: AT91 i2c bus driver (hw version: 0x820). # # dmesg | grep EEPROM [ 5.774793] at24 0-0050: 65536 byte 24c512 EEPROM, writable, 128 bytes/write # # cat /proc/interrupts | grep i2c 32: 65538 GIC-0 82 Level e0060600.i2c # # echo \"02_09: Sunrise: Testing TWI on Drop_7C. I2C EEPROM is detected and able to read it\" > /sys/bus/i2c/devices/0-0050/eeprom # # # more /sys/bus/i2c/devices/0-0050/eeprom | od -c 0000000 0 2 _ 0 9 : S u n r i s e : 0000020 T e s t i n g T W I o n D 0000040 r o p _ 7 C . I 2 C E E P R 0000060 O M i s d e t e c t e d a 0000100 n d a b l e t o r e a d 0000120 i t \\n K b i t ) S e r i a l 0000140 E l e c t r i c a l l y E r a 0000160 s a b l e P R O M \\n 377 377 377 377 377 0000200 377 377 377 377 377 377 377 377 377 377 377 377 377 377 377 377 * 0010400 377 377 377 377 377 V 377 377 377 377 377 377 377 377 377 377 0010420 377 377 377 377 377 377 377 377 377 377 377 377 377 377 377 377 * 0011000 377 T h i s i s C P U T W I 0011020 M a s t e r m o d e t e s 0011040 t \\0 377 377 377 377 377 377 377 377 377 377 377 377 377 377 0011060 377 377 377 377 377 377 377 377 377 377 377 377 377 377 377 377 * 0011400 \\0 021 \" 3 D U f w 210 231 252 273 314 335 356 377 0011420 377 377 377 377 377 377 377 377 377 377 377 377 377 377 377 377 * 0200000 #","title":"LAN966x I2C","component":"bsp","version":"2024.03","name":"lan966x-i2c","url":"/bsp/2024.03/supported-hw/lan966x-i2c.html","titles":[{"text":"SoC Resources","hash":"_soc_resources","id":1},{"text":"Kernel configurations","hash":"_kernel_configurations","id":2},{"text":"Devicetree Configuration","hash":"_devicetree_configuration","id":3},{"text":"References","hash":"_references","id":4},{"text":"Example","hash":"_example","id":5},{"text":"UserSpace","hash":"_userspace","id":6},{"text":"Confirm instances are created","hash":"_confirm_instances_are_created","id":7},{"text":"Example on how to use","hash":"_example_on_how_to_use","id":8}]},"137":{"id":137,"text":"LAN966x SoC supports two instances of CAN-FD(Control Area Network with Flexible Data-Rate) which is compliant with CAN 2.0 Part A and 2.0 Part B. Following kernel config options should be enabled to use LAN966x MCAN: CONFIG_CAN - CAN driver config option. CONFIG_CAN_M_CAN - Bosch MCAN config option. CONFIG_CAN_M_CAN_PLATFORM - Bosch M_CAN support for io-mapped devices. To enable MCAN interface, following configurations are required in device tree: compatible string must be set to bosch,m_can. reg property must be set to and for mcan0, and for mcan1. reg-names must be set to m_can and message_ram. interrupts property must be set with interrupt details as and . MCAN ID Shared Peripheral Interrupt(int0) CPU INTR(int0) Shared Peripheral Interrupt(int1) CPU INR(int1) mcan0 104 72 106 74 mcan1 105 73 107 75 Note Shared peripheral interrupt lines start at index ID32. So, CPU INTR must be calculated as [Shared peripheral interrupt number - 32]. interrupt-names must be set to int0 and int1. clocks property must be set to , , where x is MCAN ID (0-1). clock-names must be set to hclk and cclk. bosch,mram-cfg property must be set to for mcan0 and for mcan1. Verify that CAN_STBY pin of transceiver is set to low. If not, set the GPIO pin mapped to CAN_STBY to low using standby-gpios property as . MCAN DT Documentation CAN driver implementation Following example shows how a CAN controller should be defined in DT: dtsi file: can0: can@e081c000 { compatible = \"bosch,m_can\"; reg = , ; reg-names = \"m_can\", \"message_ram\"; interrupts = , ; interrupt-names = \"int0\", \"int1\"; clocks = , ; clock-names = \"hclk\", \"cclk\"; assigned-clocks = ; assigned-clock-rates = ; bosch,mram-cfg = ; status = \"disabled\"; }; dts file changes: &can0 { pinctrl-0 = ; pinctrl-names = \"default\"; standby-gpios = ; status = \"okay\"; }; Check if can interface is created using ifconifg -a command. Enable can-utils to send/receive data on CAN interface. Use candump to show received message from the CAN bus and cansend to send message on CAN bus. # ifconfig -a bond0 Link encap:Ethernet HWaddr 92:0D:C6:5E:32:18 BROADCAST MASTER MULTICAST MTU:1500 Metric:1 RX packets:0 errors:0 dropped:0 overruns:0 frame:0 TX packets:0 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:1000 RX bytes:0 (0.0 B) TX bytes:0 (0.0 B) can0 Link encap:UNSPEC HWaddr 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00 NOARP MTU:16 Metric:1 RX packets:0 errors:0 dropped:0 overruns:0 frame:0 TX packets:0 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:10 RX bytes:0 (0.0 B) TX bytes:0 (0.0 B) Interrupt:36 lo Link encap:Local Loopback inet addr:127.0.0.1 Mask:255.0.0.0 inet6 addr: ::1/128 Scope:Host UP LOOPBACK RUNNING MTU:65536 Metric:1 RX packets:0 errors:0 dropped:0 overruns:0 frame:0 TX packets:0 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:1000 RX bytes:0 (0.0 B) TX bytes:0 (0.0 B) sit0 Link encap:IPv6-in-IPv4 NOARP MTU:1480 Metric:1 RX packets:0 errors:0 dropped:0 overruns:0 frame:0 TX packets:0 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:1000 RX bytes:0 (0.0 B) TX bytes:0 (0.0 B) # ip link show 1: lo: mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 2: bond0: mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000 link/ether 92:0d:c6:5e:32:18 brd ff:ff:ff:ff:ff:ff 3: can0: mtu 16 qdisc noop state DOWN mode DEFAULT group default qlen 10 link/can 4: sit0@NONE: mtu 1480 qdisc noop state DOWN mode DEFAULT group default qlen 1000 link/sit 0.0.0.0 brd 0.0.0.0 # # ip link set can0 type can loopback on # # ip link show can0 3: can0: mtu 16 qdisc noop state DOWN mode DEFAULT group default qlen 10 link/can # # ip link set can0 up type can bitrate 1000000 [ 450.113274] IPv6: ADDRCONF(NETDEV_CHANGE): can0: link becomes ready # # # ifconfig can0 can0 Link encap:UNSPEC HWaddr 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00 UP RUNNING NOARP MTU:16 Metric:1 RX packets:0 errors:0 dropped:0 overruns:0 frame:0 TX packets:0 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:10 RX bytes:0 (0.0 B) TX bytes:0 (0.0 B) Interrupt:36 # candump can0 & # # # ip link show can0 3: can0: mtu 16 qdisc pfifo_fast state UP mode DEFAULT group default qlen 10 link/can # cansend can0 123#1122334455667788 can0 123 [8] 11 22 33 44 55 66 77 88 can0 123 [8] 11 22 33 44 55 66 77 88 # # # cansend can0 123#1234123412341234 can0 123 [8] 12 34 12 34 12 34 12 34 can0 123 [8] 12 34 12 34 12 34 12 34 # Following example is demostrated on Carrier boards(pcb8309). On Sender DUT Set bitrate of can0 interface. Check if can0 interface is up. Use cansend to send message on CAN bus. # ifconfig can0 can0 Link encap:UNSPEC HWaddr 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00 NOARP MTU:16 Metric:1 RX packets:0 errors:0 dropped:0 overruns:0 frame:0 TX packets:0 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:10 RX bytes:0 (0.0 B) TX bytes:0 (0.0 B) Interrupt:36 # # ip link show 1: lo: mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 2: bond0: mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000 link/ether 5e:a3:1f:b8:c5:e3 brd ff:ff:ff:ff:ff:ff 3: can0: mtu 16 qdisc noop state DOWN mode DEFAULT group default qlen 10 link/can 4: eth0: mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000 link/ether fe:13:e4:88:b1:21 brd ff:ff:ff:ff:ff:ff 5: eth1: mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000 link/ether fe:13:e4:88:b1:22 brd ff:ff:ff:ff:ff:ff 6: eth2: mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000 link/ether fe:13:e4:88:b1:23 brd ff:ff:ff:ff:ff:ff 7: eth3: mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000 link/ether fe:13:e4:88:b1:24 brd ff:ff:ff:ff:ff:ff 8: sit0@NONE: mtu 1480 qdisc noop state DOWN mode DEFAULT group default qlen 1000 link/sit 0.0.0.0 brd 0.0.0.0 # # ip link set can0 up type can bitrate 1000000 [ 1282.198583] IPv6: ADDRCONF(NETDEV_CHANGE): can0: link becomes ready # ip link show can0 3: can0: mtu 16 qdisc pfifo_fast state UP mode DEFAULT group default qlen 10 link/can # # cansend can0 5A1#11.22.33.44.55.66.77.88 # # cansend can0 123#1122334455667788 # # ifconfig can0 can0 Link encap:UNSPEC HWaddr 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00 UP RUNNING NOARP MTU:16 Metric:1 RX packets:0 errors:0 dropped:0 overruns:0 frame:0 TX packets:2 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:10 RX bytes:0 (0.0 B) TX bytes:16 (16.0 B) Interrupt:36 On Receiver DUT Set bitrate of can0 interface. Check if can0 interface is up. Use candump to receive message sent from Sender on CAN bus. # ip link set can0 up type can bitrate 1000000 [ 174.322126] IPv6: ADDRCONF(NETDEV_CHANGE): can0: link becomes ready # # ip link show can0 3: can0: mtu 16 qdisc pfifo_fast state UP mode DEFAULT group default qlen 10 link/can # # # candump can0 can0 5A1 [8] 11 22 33 44 55 66 77 88 can0 123 [8] 11 22 33 44 55 66 77 88 ^C# # ifconfig can0 can0 Link encap:UNSPEC HWaddr 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00 UP RUNNING NOARP MTU:16 Metric:1 RX packets:2 errors:0 dropped:0 overruns:0 frame:0 TX packets:0 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:10 RX bytes:16 (16.0 B) TX bytes:0 (0.0 B) Interrupt:36 Verify that message received on Receiver DUT is same as sent from Sender DUT.","title":"LAN966x MCAN","component":"bsp","version":"2024.03","name":"lan966x-mcan","url":"/bsp/2024.03/supported-hw/lan966x-mcan.html","titles":[{"text":"SoC Resources","hash":"_soc_resources","id":1},{"text":"Kernel configurations","hash":"_kernel_configurations","id":2},{"text":"Devicetree Configuration","hash":"_devicetree_configuration","id":3},{"text":"References","hash":"_references","id":4},{"text":"Example","hash":"_example","id":5},{"text":"UserSpace","hash":"_userspace","id":6},{"text":"Confirm instances are created","hash":"_confirm_instances_are_created","id":7},{"text":"Example on how to use","hash":"_example_on_how_to_use","id":8},{"text":"Loopback test","hash":"_loopback_test","id":9},{"text":"Two DUT test","hash":"_two_dut_test","id":10}]},"138":{"id":138,"text":"LAN966x SDMMC controller supports the embedded Multimedia Card (e.MMC) Specification (v5.01) and the SD Memory Card(v3.0). Following kernel config options should be enabled to use LAN966x SDMMC: CONFIG_MMC_SDHCI - SD Host controller config option. CONDFIG_MMC - MMC interface config option CONFIG_MMC_SDHCI_OF_AT91 - SDHCI OF support (for the Atmel SDMMC controller) config option. To use SDMMC interface, following configurations are required in device tree. compatible string must be set to microchip,lan966x-sdhci. reg property must be set with base register address and length. pinctrl-0 property must be set to , to use SD Card interface. , to use eMMC interface. Note emmc_sd_pins includes CMD, CLK, D0, D1, D2, D3, RSTN pins for both SD and eMMC, sdmmc_pins includes VSEL, WP, CD, LED pins for SD interface only and emmc_pins includes D4, D5, D6, D7 pins for eMMC interface only. sdmmc_pins and emmc_pins pin numbers are same but driver will take care of configuring different ALT modes for SD and eMMC pins. pinctrl node CMD pin CLK pin D0 D1 D2 D3 RSTN emmc_sd_pins GPIO67 GPIO68 GPIO69 GPIO70 GPIO71 GPIO72 GPIO77 pinctrl node DT Func VSEL pin WP pin CD pin LED pin sdmmc_pins sd GPIO73 GPIO74 GPIO75 GPIO76 pinctrl node DT Func D4 D5 D6 D7 emmc_pins emmc GPIO73 GPIO74 GPIO75 GPIO76 interrupts property must set with interrupt details. Interrupt number[CPU INTR] corresponding to a sdmmc must be configured as defined below: SDMMC ID Shared Peripheral Interrupt CPU INTR sdmmc0 98 66 Note Shared peripheral interrupt lines start at index ID32. So, CPU INTR must be calculated as [Shared peripheral interrupt number - 32]. Input clock clocks property must be set to GCK clock using phandle and GCK ID as . clock-names must be set to hclock and multclk assigned-clocks must be set to . assigned-clock-rates must be set to 45Mhz. Note While operating as eMMC interface, tx-phase property must be set to zero. Possible phase shift values are 0 for 180degrees, c for 90 degrees, 4 for 270 degrees, 8 for 360 degrees. 180 degress phase shift is considered as best chioce for generating phase difference between data/command bus and output clock. It provides sufficient time limit to compensate for any board delays/skew and provides sufficient time margin for setup/hold time requirements. SDHCI DT Documentation MMC DT Documentation Following example shows how a SD/eMMC should be defined in DT: dtsi file: sdmmc0: sdio-host@e0830000 { compatible = \"microchip,lan966x-sdhci\"; reg = ; interrupts = ; clocks = , ; clock-names = \"hclock\", \"multclk\"; assigned-clocks = ; assigned-clock-rates = ; status = \"disabled\"; }; dts file changes for eMMC: &sdmmc0 { bus-width = ; cap-mmc-highspeed; cap-mmc-hw-reset; non-removable; pinctrl-0 = , ; pinctrl-names = \"default\"; no-1-8-v; tx-phase = ; /* 180 degrees phase shift */ status = \"okay\"; }; dts file changes for SD Card: &sdmmc0 { bus-width = ; pinctrl-0 = , ; pinctrl-names = \"default\"; no-1-8-v; status = \"okay\"; }; Steps to Format, Create partitions and Mount SD/eMMC To confirm if mmc device is created: Check if a mmc device is created in /dev directory. To check card details, mount debugfs using command mount -t debugfs none /sys/kernel/debug/ and then use command cat /sys/kernel/debug/mmc0/ios to get IOs debugging information. eMMC Interface testing: # ls -l /dev/mmc* brw------- 1 root root 179, 0 Jan 1 00:00 /dev/mmcblk0 brw------- 1 root root 179, 8 Jan 1 00:00 /dev/mmcblk0boot0 brw------- 1 root root 179, 16 Jan 1 00:00 /dev/mmcblk0boot1 crw------- 1 root root 247, 0 Jan 1 00:00 /dev/mmcblk0rpmb # # # dmesg | grep mmc [ 3.154864] mmc0: SDHCI controller on e0830000.sdio-host [e0830000.sdio-host] using ADMA [ 3.355470] mmc0: new high speed MMC card at address 0001 [ 3.365870] mmcblk0: mmc0:0001 IS004G 3.64 GiB [ 3.369463] mmcblk0boot0: mmc0:0001 IS004G partition 1 2.00 MiB [ 3.373726] mmcblk0boot1: mmc0:0001 IS004G partition 2 2.00 MiB [ 3.386894] mmcblk0rpmb: mmc0:0001 IS004G partition 3 512 KiB, chardev (247:0) [ 3.397439] mmcblk0: p1 p2 # # mount -t debugfs none /sys/kernel/debug/ # cat /sys/kernel/debug/mmc0/ios clock: 46000000 Hz actual clock: 46000000 Hz vdd: 21 (3.3 ~ 3.4 V) bus mode: 2 (push-pull) chip select: 0 (don't care) power mode: 2 (on) bus width: 3 (8 bits) timing spec: 1 (mmc high-speed) signal voltage: 0 (3.30 V) driver type: 0 (driver type B) # dd if=/dev/zero of=/dev/mmcblk0 bs=10M count=1 1+0 records in 1+0 records out # # fdisk /dev/mmcblk0 Device contains neither a valid DOS partition table, nor Sun, SGI, OSF or GPT disklabel Building a new DOS disklabel. Changes will remain in memory only, until you decide to write them. After that the previous content won't be recoverable. The number of cylinders for this disk is set to 119296. There is nothing wrong with that, but this is larger than 1024, and could in certain setups cause problems with: 1) software that runs at boot time (e.g., old versions of LILO) 2) booting and partitioning software from other OSs (e.g., DOS FDISK, OS/2 FDISK) Command (m for help): p Disk /dev/mmcblk0: 3728 MB, 3909091328 bytes, 7634944 sectors 119296 cylinders, 4 heads, 16 sectors/track Units: sectors of 1 * 512 = 512 bytes Device Boot StartCHS EndCHS StartLBA EndLBA Sectors Size Id Type Command (m for help): n Partition type p primary partition (1-4) e extended 1 Invalid partition number for type '1' Partition type p primary partition (1-4) e extended p Partition number (1-4): 1 First sector (16-7634943, default 16): Using default value 16 Last sector or +size{,K,M,G,T} (16-7634943, default 7634943): +64M Command (m for help): t Selected partition 1 Hex code (type L to list codes): 6 Changed system type of partition 1 to 6 (FAT16) Command (m for help): n Partition type p primary partition (1-4) e extended p Partition number (1-4): 2 First sector (131088-7634943, default 131088): Using default value 131088 Last sector or +size{,K,M,G,T} (131088-7634943, default 7634943): +1500M Command (m for help): p Disk /dev/mmcblk0: 3728 MB, 3909091328 bytes, 7634944 sectors 119296 cylinders, 4 heads, 16 sectors/track Units: sectors of 1 * 512 = 512 bytes Device Boot StartCHS EndCHS StartLBA EndLBA Sectors Size Id Type /dev/mmcblk0p1 0,1,1 1023,3,16 16 131087 131072 64.0M 6 FAT16 /dev/mmcblk0p2 1023,3,16 1023,3,16 131088 3203087 3072000 1500M 83 Linux Command (m for help): w The partition table has been altered. Calling ioctl() to re-read partition table [ 44.720213] mmcblk0: p1 p2 # # mkdir /tmp/ext # mkfs.ext2 /dev/mmcblk0p2 mke2fs 1.45.5 (07-Jan-2020) /dev/mmcblk0p2 contains a ext2 file system last mounted on /tmp/ext on Thu Jan 1 00:02:16 1970 Proceed anyway? (y,N) # mount -t ext2 /dev/mmcblk0p2 /tmp/ext # # # echo \"Hello_World: Welcome\" > /tmp/ext/t6.txt # # cat /tmp/ext/t6.txt Hello_World: Welcome # # # umount /tmp/ext/ SD Card Interface testing: # dmesg | grep mmc [ 1.305841] mmc0: SDHCI controller on e0830000.sdio-host [e0830000.sdio-host] using ADMA [ 1.459624] mmc0: new ultra high speed DDR50 SDHC card at address aaaa [ 1.610121] mmcblk0: mmc0:aaaa SC32G 29.7 GiB [ 1.683630] mmcblk0: p1 p2 # # # mount -t debugfs none /sys/kernel/debug/ # cat /sys/kernel/debug/mmc0/ios clock: 50000000 Hz actual clock: 50000000 Hz vdd: 21 (3.3 ~ 3.4 V) bus mode: 2 (push-pull) chip select: 0 (don't care) power mode: 2 (on) bus width: 2 (4 bits) timing spec: 7 (sd uhs DDR50) signal voltage: 1 (1.80 V) driver type: 0 (driver type B) # # ls -l /dev/mmc* brw------- 1 root root 179, 0 Jan 1 00:00 /dev/mmcblk0 brw------- 1 root root 179, 1 Jan 1 00:00 /dev/mmcblk0p1 brw------- 1 root root 179, 2 Jan 1 00:00 /dev/mmcblk0p2 # # cat /proc/interrupts | grep mmc 43: 89 GIC-0 98 Level mmc0 # # dd if=/dev/zero of=/dev/mmcblk0 bs=10M count=1 1+0 records in 1+0 records out # fdisk /dev/mmcblk0 Device contains neither a valid DOS partition table, nor Sun, SGI, OSF or GPT disklabel Building a new DOS disklabel. Changes will remain in memory only, until you decide to write them. After that the previous content won't be recoverable. The number of cylinders for this disk is set to 973968. There is nothing wrong with that, but this is larger than 1024, and could in certain setups cause problems with: 1) software that runs at boot time (e.g., old versions of LILO) 2) booting and partitioning software from other OSs (e.g., DOS FDISK, OS/2 FDISK) Command (m for help): p Disk /dev/mmcblk0: 30 GB, 31914983424 bytes, 62333952 sectors 973968 cylinders, 4 heads, 16 sectors/track Units: sectors of 1 * 512 = 512 bytes Device Boot StartCHS EndCHS StartLBA EndLBA Sectors Size Id Type Command (m for help): n Partition type p primary partition (1-4) e extended p Partition number (1-4): 1 First sector (16-62333951, default 16): Using default value 16 Last sector or +size{,K,M,G,T} (16-62333951, default 62333951): +64M Command (m for help): t Selected partition 1 Hex code (type L to list codes): 6 Changed system type of partition 1 to 6 (FAT16) Command (m for help): n Partition type p primary partition (1-4) e extended p Partition number (1-4): 2 First sector (131088-62333951, default 131088): Using default value 131088 Last sector or +size{,K,M,G,T} (131088-62333951, default 62333951): +1500M Command (m for help): p Disk /dev/mmcblk0: 30 GB, 31914983424 bytes, 62333952 sectors 973968 cylinders, 4 heads, 16 sectors/track Units: sectors of 1 * 512 = 512 bytes Device Boot StartCHS EndCHS StartLBA EndLBA Sectors Size Id Type /dev/mmcblk0p1 0,1,1 1023,3,16 16 131087 131072 64.0M 6 FAT16 /dev/mmcblk0p2 1023,3,16 1023,3,16 131088 3203087 3072000 1500M 83 Linux Command (m for help): w The partition table has been altered. Calling ioctl() to re-read partition table [ 63.250316] mmcblk0: p1 p2 # # ls -l /dev/mmc* brw------- 1 root root 179, 0 Jan 1 00:01 /dev/mmcblk0 brw------- 1 root root 179, 1 Jan 1 00:01 /dev/mmcblk0p1 brw------- 1 root root 179, 2 Jan 1 00:01 /dev/mmcblk0p2 # mkdir /tmp/ext # mount -t ext2 /dev/mmcblk0p2 /tmp/ext # # mkfs.ext2 /dev/mmcblk0p2 mke2fs 1.45.6 (20-Mar-2020) /dev/mmcblk0p2 contains a ext2 file system last mounted on /media/vishnu/842a0c11-7809-4b40-a98f-25bae7c7d16c on Thu Aug 5 11:23:26 2021 Proceed anyway? (y,N) y Discarding device blocks: done Creating filesystem with 384000 4k blocks and 96000 inodes Filesystem UUID: b2dde0d3-5b02-458d-9893-07a876e5a6bf Superblock backups stored on blocks: 32768, 98304, 163840, 229376, 294912 Allocating group tables: done Writing inode tables: done Writing superblocks and filesystem accounting information: done # # # # # mkdir /tmp/ext # # mount -t ext2 /dev/mmcblk0p2 /tmp/ext # ls -l /tmp/ext/ total 16 drwx------ 2 root root 16384 Jan 1 00:02 lost+found # # # # echo \"3-9-2021: Testing SD card at HS 50Mhz\" > /tmp/ext/t1.txt # # # # cat /tmp/ext/t1.txt 3-9-2021: Testing SD card at HS 50Mhz # # # umount /tmp/ext/ Note Enable e2fsprogs utility from buildroot to use ext2,ext3,ext4 filesystems.","title":"LAN966x SDMMC","component":"bsp","version":"2024.03","name":"lan966x-mmc","url":"/bsp/2024.03/supported-hw/lan966x-mmc.html","titles":[{"text":"SoC Resources","hash":"_soc_resources","id":1},{"text":"Kernel configurations","hash":"_kernel_configurations","id":2},{"text":"Devicetree Configuration","hash":"_devicetree_configuration","id":3},{"text":"References","hash":"_references","id":4},{"text":"Example","hash":"_example","id":5},{"text":"UserSpace","hash":"_userspace","id":6},{"text":"Confirm instances are created","hash":"_confirm_instances_are_created","id":7},{"text":"Example on how to use","hash":"_example_on_how_to_use","id":8}]},"139":{"id":139,"text":"LAN966X SoC has 8K of internal OTP(One time programmable). Following kernel config options should be enabled to enable the LAN966X OTP driver and to be able to access the OTP from userspace. CONFIG_NVMEM_MICROCHIP_OTP - None volatile memory driver config option. CONFIG_NVMEM_SYSFS - Config option to enable access to OTP using sysfs. To enable LAN966X OTP, following configurations are required in device tree: compatible - string must be set to microchip,lan966x-otp. reg - property must be set to . Following example shows how the OTP should be defined in DT: otp0: etp@e0021000 { compatible = \"microchip,lan966x-otp\"; reg = ; }; NVMEM Subsystem Before using the userspace application to configure the OTP, make sure that the OTP device is created. If the device is created, the following file should exist: /sys/bus/nvmem/devices/microchip-otp0/nvmem The userspace application otp it is used to read/write the OTP. It has the following help: # otp --help This tool can be used to access and modify the OTP in the following SoCs: - LAN9662 - LAN9668 Usage: otp field list otp field get [] otp field set [--merge] (ascii|hex|dec|3ascii-dec) otp addr get otp addr set [--merge] (ascii|hex|dec) otp tag list-tag-names otp tag print otp tag info otp tag get (|) otp tag del (|) otp tag set (|) (ascii|hex|dec) otp nvcnt get (trusted|nontrusted) otp nvcnt set (trusted|nontrusted) otp import-keys [--no-randomize-huk] otp region show otp region write-protect otp init serial partid ethaddr (random-ethaddr|) ethaddr_count Options: -h --help Show this screen. --version Show version. --verbose Enable verbose traces on console -d DEV --device=DEV NVRAM device [default: /dev/nvram0] This can also be a normal block device, or even a file. --chip-id=ID Specify OTP layout coresponding to the given chip ID. NOTE: This setting is only allowed on devices where the part-ID at byte address 0x5-0x6 is not programmed, or if the programmed part-ID matches the provided ID. --chip-id-force Force usage of the ID given with --chip-id=ID, even though a different part ID is programmed in the OTP. --no-confirm Do not require the user to confirm write operations. General: The OTP in these products are accessed by various elements including: discrete logic in the chip, TF-A bootrom (BL1), Secure Boot loader (BL2), EL3 Runtime software (BL31/BL32), UBoot, Linux kernel and this user-space application. The OTP has a concept of regions, which can be used to configure access control (read and write protection). The regions and write protect mask is in the OTP it self and need to be provisioned. This tool support 3 different kind of content: Fields: This is fixed-length data at fixed positions in the OTP. The tool has a build in template for each of the supported SoC with name, address, length and description. Non volatile counters: This is counters which can only be incremented. This is used to do rollback protection. This is implemented as a bitfields, and the max value is therefore the number of allocated bits for a given counter. Tagged data: This is semi-one-time-programmable data. The purpose of this is to allow store various data such as: mac-addresses, board-ID, ECO level, uniq default password which may be printed on the device, etc. This is implemented as an array of 64-bits records with the following layout: +--------+--------+--------+----------+ | size:3 | cont:1 | tag:12 | value:48 | +--------+--------+--------+----------+ Where: size: specify the number of valid bytes in value. 0 and 0b111 (7) are invalid. If a record needs to be invalidated, then it is a matter of writing 0b111 in this field. cont: specify that the content continues in the next valid record with the given tag value. tag: This is a number from 0-2047 specifying the type of data (the implementation has a list of named tags which may be used). value: Value associated to the tag. Note: All commands writing ('field set', 'addr set', 'tag del|set') to OTP shall do: - Read out existing content. - If '--merge' flag is not set, confirm that the specified value is possible to set. Abort if not. - Print in hex what is about the be written where - Let use user confirm. Command details: otp help: Print this message otp field list: List all fields recognized by the implementation template. otp field get [] Get the content of a specific fields, or all fields if non is provided. NOTE: This shall skip fields in areas being read-protected, but will happily print secrets if not proper protected. otp field set [--merge] (ascii|hex|dec) Set the content of a given field. - If the --merge option is provided, then the content is bit-wised OR with what is in the OTP field already. If not, a check is performed to confirm that the desired value can be written as-is. - The value can either be provided in ascii format, or as a hex-string. - A hex string must always provide an equal number of chars (no half bytes). - The length of the value must match what is find in the template. otp addr get Read the raw content in OTP. If the requested area is (partly) read-protected, then return error. otp addr set [--merge] (ascii|hex|dec) Write raw content in the OTP. If the requested area is (partly) write-protected, then return error before any content is written. otp nvcnt (trusted|nontrusted) get otp nvcnt (trusted|nontrusted) set Get/set the value of either the trusted or nontrusted non-volatile-ever-incrementing-counter. This is implemented as a bit-field, and a given implementation will have limited capacity. NOTE: This is used by the secure boot-ROM to implement rollback protection. otp tag list-tag-names List all the tag names and associated numbers know by the implementation. otp tag info Print statistics on tag usages. otp tag print Print all valid tags in the otp. otp tag get (bin|hex) [(|)] Read out the value of a given tag (either by name or by number) or dump all tags if no name/number is provided. If no valid tag with matching name/number was found, then return an error. otp tag [--merge] set (|) (ascii|hex) Set a tagged value. If the --merge flag was set, then the content provided must be of exact same length as the length of existing content in the OTP. If this tag already exists, then it shall be replaced (meaning invalidating the existing tag). otp tag append (|) Append more data to a tag. This will always create a new record and set the 'cont' flag in existing tags. otp tag del (|) Invalidate an existing tag in the OTP. otp import-keys [--no-randomize-huk] : This shall read the content from a file (or stdin if '-' is provided as file-name). The content is binary and length must match the platform expected length. It can only be used to program the region with TF-A keys (on LAN966x this is region 4). The region will not be defined when the tool is called, and a per platform hard-coded offset/size will be used. Unless the --no-randomize-huk flag is set, then the OTP_TBBR_HUK field will be set with randomized content using /dev/random. otp region show: Show the start-address, end-address and write-protect bit of all regions. Some regions may be displayed with start- and end-address equal to 0, which means that this region is still not defiend. otp region write-protect : This shall check if the region is defined (in `PROTECT_REGION_ADDR`). If not, the region shall be defined using the per-chip-id defined template. Once the region is defined it shall be marked as write-protected in `PROTECT_OTP_WRITE`. otp init partid serial pcb ethaddr (random-ethaddr|) ethaddr_count NOTE: This shall only be called during board manufacturing! Do not call more than once. This sub-command will do the following: - If the PARTID in OTP is not zero - check that it matches , if not report an error. - If the PARTID in OTP is zero, assume the value is right and use this to select the per-part-id templates. Also, the PARTID shall be programmed in OTP. - Do the equivalent of: $ opt field set SERIAL_NUMBER 3ascii-dec The 3ascii-dec format is interpretted like, the first 3 letters are ascii values while the rest is a decimal number - Do the equivalent of: $ opt tag set pcb dec - Do the equivalent of: $ opt tag set ethaddr_count dec - Do the equivalent of: $ opt tag set ethaddr ascii - If the ethaddr-address is `random-ethaddr`, then generate a random ETHADDR with the following limitation: - Broadcast bit is 0 - Local-administrated bit is 1 - It must not be all zero and not all ff. Here are some examples on how to use it Once something is written in the OTP this can’t be erased. So make sure you can write the right command. You can test the command by running the same command on a file. How to initialize the board: otp -d /sys/bus/nvmem/devices/microchip-otp0/nvmem init partid 9662 serial pcb 8291 ethaddr random-ethaddr ethaddr_count 16 This command will do the following: set the field partid to 9668 set the field serial_number to set the tag pcb to 8290 set the tag ethaddr to a random generated eth addr where bit 1 in MSB is set to 1 and bit 0 in MSB is set to 0. set the tag ethaddr_count to 16 meaning that it would reserve 16 addresses Here is a way to read back a field: otp -d /sys/bus/nvmem/devices/microchip-otp0/nvmem field get PARTID 2 be25|.%| The first value of the output represents the number of bytes the field it has, second represents the value in little endian in hex and the last value represents the ascii characters of the value. To see the available fields the following command can be used: otp -d /sys/bus/nvmem/devices/microchip-otp0/nvmem field list Field: OTP_PRG offset: 0x0000 length: 04 Field: FEAT_IDS offset: 0x0004 length: 01 Field: PARTID offset: 0x0005 length: 02 Field: TST_TRK offset: 0x0007 length: 01 Field: SERIAL_NUMBER offset: 0x0008 length: 08 Field: SECURE_JTAG offset: 0x0010 length: 04 Field: WAFER_JTAG offset: 0x0014 length: 07 Field: JTAG_UUID offset: 0x0020 length: 10 Field: TRIM offset: 0x0030 length: 08 Field: PROTECT_OTP_WRITE offset: 0x0040 length: 04 Field: PROTECT_REGION_ADDR offset: 0x0044 length: 32 Field: OTP_PCIE_FLAGS offset: 0x0064 length: 04 Field: OTP_PCIE_DEV offset: 0x0068 length: 04 Field: OTP_PCIE_ID offset: 0x006c length: 08 Field: OTP_PCIE_BARS offset: 0x0074 length: 40 Field: OTP_TBBR_ROTPK offset: 0x0100 length: 32 Field: OTP_TBBR_HUK offset: 0x0120 length: 32 Field: OTP_TBBR_EK offset: 0x0140 length: 32 Field: OTP_TBBR_SSK offset: 0x0160 length: 32 Field: OTP_SJTAG_SSK offset: 0x0180 length: 32 Field: OTP_STRAP_DISABLE_MASK offset: 0x01a4 length: 02 Here is a way to read back a tag: otp -d /sys/bus/nvmem/devices/microchip-otp0/nvmem tag list-tag-names Tag: password, id: 1 Tag: pcb, id: 2 Tag: revision, id: 3 Tag: ethaddr, id: 4 Tag: ethaddr_count, id: 5 Tag: fit_config, id: 6","title":"LAN966x OTP","component":"bsp","version":"2024.03","name":"lan966x-otp","url":"/bsp/2024.03/supported-hw/lan966x-otp.html","titles":[{"text":"SoC Resources","hash":"_soc_resources","id":1},{"text":"Kernel configurations","hash":"_kernel_configurations","id":2},{"text":"Devicetree Configuration","hash":"_devicetree_configuration","id":3},{"text":"Example","hash":"_example","id":4},{"text":"References","hash":"_references","id":5},{"text":"UserSpace","hash":"_userspace","id":6},{"text":"Example on how to use","hash":"_example_on_how_to_use","id":7}]},"140":{"id":140,"text":"This document describes how to enable different overlays. The overlays are enabled when booting the fit image. And it is required for the u-boot to have support for this. In u-boot it is required to enabled the config option: OF_LIBFDT_OVERLAY=y Then in the fit image that is booted, it is required to have each overlay like a configuration node, for example: /dts-v1/; / { images { ... fdt_lan9668_ung8385_sb_lan8840_0_at_lan966x { data = /incbin/(\"./lan966x_pcb8385_sb_lan8840.dtbo\"); type = \"flat_dt\"; arch = \"arm\"; load = ; compression = \"none\"; }; ... }; configurations { ... lan9668_ung8385_sa_lan8840_0_at_lan966x { fdt = \"fdt_lan9668_ung8385_sa_lan8840_0_at_lan966x\"; }; ... }; }; And then in u-boot, the env variable pcb can be changed to contain all the overlays and the base configuration node. For example: pcb=conf-1#lan9668_ung8385_sa_lan8840_0_at_lan966x#conf-2#conf-3 It is the user responsability to know which overlays need to apply.","title":"LAN966x Overlays","component":"bsp","version":"2024.03","name":"lan966x-overlays","url":"/bsp/2024.03/supported-hw/lan966x-overlays.html","titles":[{"text":"1. Introduction","hash":"_introduction","id":1}]},"141":{"id":141,"text":"This describes how to use the combination of a Raspberry PI 4 Compute Module with the Raspberry PI Compute Module IO Board and a EVB-LAN9662-NIC board. The EVB-LAN9662-NIC is pre-configured for the LAN966x PCIe boot mode. This configuration uses the Raspberry PI 4 as the host CPU and therefor the device tree used for this setup is the one for the Raspberry PI, so you will need to consult the Raspberry PI documentation for details about this SoC. The configuration used is a very slim version of the standard Raspberry PI 4 configuration. Only the bare minimum needed for a network setup has been added, so you will not be able to use e.g. display, mouse and keyboard combo with this configuration. Instead you will have to use a serial/USB console to a workstation to monitor and interact with the system. The system uses the Raspberry PI 4’s device tree with a addition of a PCIe device node that hosts the all device tree nodes for the PCIe NICs onboard devices. These childnodes are mapped into the PCIe Controllers Bus Window to allow the PCIe NIC SwitchDev driver to access all the needed hardware registers via the PCIe Bus. This assumes that you have a Raspberry PI 4 Compute Module with the accompanying Raspberry PI 4 CM IO Board and a LAN9662 PCIe NIC mounted in the PCIe slot on the IO Board. The BSP release file mscc-brsdk-arm64-.tar.gz contains the image file rpi4cm.img that is needed to boot the system and get the PCIe NIC enabled. When unpacking the release file mentioned above you will find the image file here: mscc-brsdk-arm64-/arm64-armv8_a-linux-gnu/standalone_rpi/release/rpi4cm.img You will also find a readme file that explains the image content and the boot process: mscc-brsdk-arm64-/arm64-armv8_a-linux-gnu/standalone_rpi/release/README.adoc The next step depends on the type of Raspberry PI 4 CM that you have: If your CM4 has onboard eMMC you need to write the rpi4cm.img image found in the BSP release to the eMMC. If your CM4 has no onboard eMMC you need to write the image to and SDCard and use that to boot your RPI System. First mount the CM4 module on the IO board and put a strap on the J2 pinheaders first position to disable eMMC boot. Clone the RPI usbboot repo and build the tool: git clone --depth=1 https://github.com/raspberrypi/usbboot cd usbboot make Attach the RPI4 IO board (with the mounted CM) via a nanoUSB cable (to the USB slave port on the IO Board) and start the USB driver: sudo ./rpiboot Find the new usb device (e.g. /dev/sdX) using lsblk lsblk --output NAME,FSTYPE,LABEL,UUID,PARTUUID,MOUNTPOINT Write the rpi4cm.img image to the USB device: sudo dd if=rpicm4.img of=/dev/sdX bs=8M status=progress oflag=direct When done you should have two partitions on the device: lsblk --output NAME,FSTYPE,LABEL,UUID,PARTUUID,MOUNTPOINT sdX ├─sdX1 vfat bootfs 37CA-39EC e088fd39-01 └─sdX2 ext4 rootfs a4af13c6-d165-4cbd-a9f6-c961fef8255d e088fd39-02 Mount the boot device in ~/mnt/boot and edit the config.txt file and create an empty ssh file (to enable the ssh server): mkdir -p ~/mnt/boot sudo mount /dev/sdX1 ~/mnt/boot/ sudo touch ~/mnt/boot/ssh sudo nvim ~/mnt/boot/config.txt In the config.txt file you should add an overlay to enable the USB ports (not the slave USB port) and a uart setting to enable the serial console via the PIN header, and enable uart support for the second stage bootloader (to get the logging out): dtoverlay=dwc2,dr_mode=host enable_uart=1 uart_2ndstage=1 To use the serial console to the Linux Kernel running on the Raspberry Pi you can attach a serial/USB converted to the J8 connector on the RPI 4 IO Board. Pin Function J8-6 Ground J8-8 RPI TX J8-10 RPI RX You should then be able to get to the Linux console and login as root (no password). Remove the strap on the pinheader and powercycle the Raspberry PI board to start the system. Using the serial console you should be able to login as root and see that you now have 5 network interfaces: 1 on the Raspberry PI IO Board and 4 on the LAN9662 PCIe NIC. Insert the SDCard into a card reader slot and locate the new device using e.g. dmesg or lsblk and then write the image to the new device using dd: sudo dd if=rpicm4.img of=/dev/sdX bs=8M status=progress oflag=direct When done you should have two partitions on the device: lsblk --output NAME,FSTYPE,LABEL,UUID,PARTUUID,MOUNTPOINT sdX ├─sdX1 vfat bootfs 37CA-39EC e088fd39-01 └─sdX2 ext4 rootfs a4af13c6-d165-4cbd-a9f6-c961fef8255d e088fd39-02 You can now boot the system. You may want to use a serial/USB console as described in the previous section.","title":"LAN9662 PCIe NIC with Raspberry PI 4 CM as external CPU","component":"bsp","version":"2024.03","name":"lan966x-pcie-rpi4cm","url":"/bsp/2024.03/supported-hw/lan966x-pcie-rpi4cm.html","titles":[{"text":"Resources","hash":"_resources","id":1},{"text":"Kernel Configuration","hash":"_kernel_configuration","id":2},{"text":"Devicetree Configuration","hash":"_devicetree_configuration","id":3},{"text":"Using the BSP Raspberry PI 4 CM image","hash":"_using_the_bsp_raspberry_pi_4_cm_image","id":4},{"text":"Writing the Raspberry PI 4 CM eMMC","hash":"_writing_the_raspberry_pi_4_cm_emmc","id":5},{"text":"Serial Console","hash":"_serial_console","id":6},{"text":"Normal Boot","hash":"_normal_boot","id":7},{"text":"Writing the Raspberry PI 4 CM SDCard","hash":"_writing_the_raspberry_pi_4_cm_sdcard","id":8}]},"142":{"id":142,"text":"LAN966x GPIO controller supports 78 gpio pins. Most of the GPIO pins have alternate functions which will be handled by linux driver. Following kernel config options should be enabled to use LAN966x GPIO Controller: CONFIG_PINCTRL_OCELOT - GPIO controller config option. To use GPIO pins of a specific peripheral, configure following properties in device tree: compatible string must be set to microchip,lan966x-pinctrl. reg property must be set with and . gpio-controller property must be added. #gpio-cells property must be set to 2 gpio-ranges property must be set to interrupts property must be set with GPIO block interrupt details as . Peripheral Shared Peripheral Interrupt CPU INTR gpio 49 17 Note Shared peripheral interrupt lines start at index ID32. So, CPU INTR must be calculated as [Shared peripheral interrupt number - 32]. pins must be set with list of GPIO pins required. For example for mcan0, it should be set as \"GPIO_35\", \"GPIO_36\". function must be set to function name corresponding to GPIO pins and the peripheral we are trying to enable. Refer below table for function names: GPIO Pin FUNC1 FUNC2 FUNC3 FUNC4 FUNC5 FUNC6 0 - - - - - - 1 - - - - - - 2 - - - - - - 3 - - - - - - 4 - - - - - - 5 - - - - - - 6 - - - - - - 7 - - - - - - 8 fc0_a usb_host_b - usb_slave_b - - 9 fc0_a usb_host_b - - - - 10 fc0_a - - - - - 11 fc1_a - - - - - 12 fc1_a - - - - - 13 fc1_a - - - - - 14 fc2_a - - - - - 15 fc2_a - - - - - 16 fc2_a ib_trig_a - ob_trig_a irq_in_c irq_out_c 17 fc3_a ib_trig_a - ob_trig_a irq_in_c irq_out_c 18 fc3_a ib_trig_a - ob_trig_a irq_in_c irq_out_c 19 fc3_a ib_trig_a - ob_trig_a irq_in_c irq_out_c 20 fc4_a ib_trig_a - ob_trig_a irq_in_c - 21 fc4_a - - ob_trig_a - - 22 fc4_a - - ob_trig_a - - 23 - - - ob_trig_a - - 24 fc0_b ib_trig_a usb_host_c ob_trig_a irq_in_c tacho_a 25 fc0_b ib_trig_a usb_host_c ob_trig_a irq_out_c sfp_sd 26 fc0_b ib_trig_a usb_slave_c ob_trig_a can0_a sfp_sd 27 - - - ob_trig_a can0_a - 28 miim_a - - ob_trig_a irq_out_c sfp_sd 29 miim_a - - ob_trig_a - - 30 fc3_c can1 - ob_trig reco_b - 31 fc3_c can1 - ob_trig reco_b - 32 fc3_c - sgpio_a - miim_slave_a - 33 fc1_b - sgpio_a - miim_slave_a miim_b 34 fc1_b - sgpio_a - miim_slave_a miim_b 35 fc1_b ptpsync_0 sgpio_a can0_b - - 36 - ptpsync_1 - can0_b - - 37 fc_shrd0 ptpsync_2 twi_slc_gate_ad - - - 38 - ptpsync_3 - - - - 39 - ptpsync_4 - - - - 40 fc_shrd1 ptpsync_5 - - - - 41 fc_shrd2 ptpsync_6 twi_slc_gate_ad - - - 42 fc_shrd3 ptpsync_7 twi_slc_gate_ad - - - 43 fc2_b ob_trig_b ib_trig_b irq_out_a reco_a irq_in_a 44 fc2_b ob_trig_b ib_trig_b irq_out_a reco_a irq_in_a 45 fc2_b ob_trig_b ib_trig_b irq_out_a - irq_in_a 46 fc1_c ob_trig_b ib_trig_b irq_out_a fc_shrd4 irq_in_a 47 fc1_c ob_trig_b ib_trig_b irq_out_a fc_shrd5 irq_in_a 48 fc1_c ob_trig_b ib_trig_b irq_out_a fc_shrd6 irq_in_a 49 fc_shrd7 ob_trig_b ib_trig_b irq_out_a twi_slc_gate irq_in_a 50 fc_shrd16 ob_trig_b ib_trig_b irq_out_a twi_slc_gate - 51 fc3_b ob_trig_b ib_trig_c irq_out_b - irq_in_b 52 fc3_b ob_trig_b ib_trig_c irq_out_b tacho_b irq_in_b 53 fc3_b ob_trig_b ib_trig_c irq_out_b - irq_in_b 54 fc_shrd8 ob_trig_b ib_trig_c irq_out_b twi_slc_gate irq_in_b 55 fc_shrd9 ob_trig_b ib_trig_c irq_out_b twi_slc_gate irq_in_b 56 fc4_b ob_trig_b ib_trig_c irq_out_b fc_shrd10 irq_in_b 57 fc4_b twi_slc_gate ib_trig_c irq_out_b fc_shrd11 irq_in_b 58 fc4_b twi_slc_gate ib_trig_c irq_out_b fc_shrd12 irq_in_b 59 qspi1 miim_c - - miim_slaveb - 60 qspi1 miim_c - - miim_slaveb - 61 qspi1 - sgpio_b fc0_c miim_slaveb - 62 qspi1 fc_shrd13 sgpio_b fc0_c twi_slc_gate sfp_sd 63 qspi1 fc_shrd14 sgpio_b fc0_c twi_slc_gate sfp_sd 64 qspi1 fc4_c sgpio_b fc_shrd15 twi_slc_gate sfp_sd 65 usb_host_a fc4_c - irq_out_c twi_slc_gate_ad - 66 usb_host_a fc4_c usb_slave_a irq_out_c irq_in_c - 67 emmc_sd - qspi2 - - - 68 emmc_sd - qspi2 - - - 69 emmc_sd - qspi2 - - - 70 emmc_sd - qspi2 - - - 71 emmc_sd - qspi2 - - - 72 emmc_sd - qspi2 - - - 73 emmc - - sd - - 74 emmc - fc_shrd17 sd twi_slc_gate - 75 emmc - fc_shrd18 sd twi_slc_gate - 76 emmc - fc_shrd19 sd twi_slc_gate - 77 emmc_sd - fc_shrd20 - twi_slc_gate - Note LAN966x GPIO controller supports 8 Alternate functions. FUNC0 is GPIO mode and FUNC7 is Reserved. Function names for FUNC1-FUNC6 alternate modes are listed above. pinctrl DT Documentation Following example shows how a GPIO controller should be defined in DT to enable GPIO pins for eMMC interface: dtsi file: gpio: pinctrl@e2004070 { compatible = \"microchip,lan966x-pinctrl\"; reg = , ; gpio-controller; #gpio-cells = ; gpio-ranges = ; interrupt-controller; interrupts = ; #interrupt-cells = ; emmc_sd_pins: emmc-sd-pins { /* eMMC_SD - CMD, CLK, D0, D1, D2, D3, RSTN */ pins = \"GPIO_67\", \"GPIO_68\", \"GPIO_69\", \"GPIO_70\", \"GPIO_71\", \"GPIO_72\", \"GPIO_77\"; function = \"emmc_sd\"; }; emmc_pins: emmc-pins { /* eMMC - D4, D5, D6, D7 */ pins = \"GPIO_73\", \"GPIO_74\", \"GPIO_75\", \"GPIO_76\"; function = \"emmc\"; }; }; dts file changes: &sdmmc0 { bus-width = ; cap-mmc-highspeed; cap-mmc-hw-reset; non-removable; pinctrl-0 = , ; pinctrl-names = \"default\"; no-1-8-v; tx-phase = ; /* 180 degrees phase shift */ status = \"okay\"; }; Check if pinctrl driver is registered and respective peripheral is up or not. Checking if the pinctrl driver is registered and respective peripheral(here emmc with above dt example) is created or not. # dmesg | grep pinctrl [ 0.014851] pinctrl core: initialized pinctrl subsystem [ 0.109830] gpio gpiochip0: (ocelot-gpio): created GPIO range 0->77 ==> e2004064.pinctrl PIN 0->77 [ 0.111131] pinctrl-ocelot e2004064.pinctrl: driver registered # dmesg | grep mmc [ 0.722586] mmc0: SDHCI controller on e0830000.sdio-host [e0830000.sdio-host] using ADMA [ 2.373076] mmc0: new high speed MMC card at address 0001 [ 2.378776] mmcblk0: mmc0:0001 IS004G 3.64 GiB [ 2.387639] mmcblk0: [ 2.388324] mmcblk0boot0: mmc0:0001 IS004G 2.00 MiB [ 2.399663] mmcblk0boot1: mmc0:0001 IS004G 2.00 MiB [ 2.410084] mmcblk0rpmb: mmc0:0001 IS004G 512 KiB, chardev (247:0) # mount -t debugfs none /sys/kernel/debug/ cat /sys/kernel/debug/mmc0/ios# cat /sys/kernel/debug/mmc0/ios clock: 46000000 Hz actual clock: 46000000 Hz vdd: 21 (3.3 ~ 3.4 V) bus mode: 2 (push-pull) chip select: 0 (don't care) power mode: 2 (on) bus width: 3 (8 bits) timing spec: 1 (mmc high-speed) signal voltage: 0 (3.30 V) driver type: 0 (driver type B) Mounting Sysfs The root file system being used may not have sysfs mounted and it cannot be used if it’s not mounted. The directory /sys is also needed to mount the sysfs on. The root file system must be writable to do the following steps. Identify the GPIO chips Use command ls /sys/class/gpio/ to list all the gpio chips. Steps to configure a GPIO pin Export a GPIO pin using command echo X > /sys/class/gpio/export. Read direction and value from GPIO pin using command cat /sys/class/gpio/gpioX/direction for direction and cat /sys/class/gpio/gpioX/value for value, where X is pin number. If direction of a pin is out, we can write 0 or 1 to value file of pin and also can read its value. If direction of a pin is in, we can only read its value but cannot write to it, we would get an error because it is not valid to set the value of an input pin. Unexport a GPIO pin using command echo X > /sys/class/gpio/unexport. Following example configures GPIO pin 51(physical pin number 32) and validates voltage on pin using a multimeter: # ls /sys/class/gpio/ export gpiochip0 unexport Export GPIO pin 51: # echo 51 > /sys/class/gpio/export # ls /sys/class/gpio/ export gpio51 gpiochip0 unexport Check default direction and value: # cat /sys/class/gpio/gpio51/value 1 # # cat /sys/class/gpio/gpio51/direction in # Now, measure voltage on physical pin number 32 and you should see voltage of approximately 3.3v. Change direction of GPIO pin 51 to out and set value to zero: # echo out > /sys/class/gpio/gpio51/direction # # # cat /sys/class/gpio/gpio51/value 0 # Again measure voltage on physical pin number 32 and you should see voltage close to zero.","title":"LAN966x GPIO","component":"bsp","version":"2024.03","name":"lan966x-pinctrl","url":"/bsp/2024.03/supported-hw/lan966x-pinctrl.html","titles":[{"text":"SoC Resources","hash":"_soc_resources","id":1},{"text":"Kernel configurations","hash":"_kernel_configurations","id":2},{"text":"Devicetree Configuration","hash":"_devicetree_configuration","id":3},{"text":"References","hash":"_references","id":4},{"text":"Example","hash":"_example","id":5},{"text":"UserSpace","hash":"_userspace","id":6},{"text":"Confirm instances are created","hash":"_confirm_instances_are_created","id":7},{"text":"Example on how to use","hash":"_example_on_how_to_use","id":8},{"text":"Configuring GPIO pin using Sysfs interface","hash":"_configuring_gpio_pin_using_sysfs_interface","id":9}]},"143":{"id":143,"text":"LAN966x supports three QSPI interfaces - QSPI0, QSPI1 and QSPI2. Following kernel config options should be enabled to use LAN966x QSPI interface: CONFIG_SPI_ATMEL_QUADSPI - QSPI driver config option. CONFIG_MTD, CONFIG_MTD_SPI_NOR or CONFIG_MTD_SPI_NAND based on NOR/NAND flash present. To use QSPI interface, following configurations are required in device tree. compatible string must be set to microchip,lan966x-qspi. reg property must be set with base register address, AHB register address and their lengths. reg-names must be set to qspi_base and qspi_mmap. pinctrl-0 property must be set with SCK, NCS, IO0, IO1, IO2, IO3 GPIO pins. Refer datasheet for QSPIx [where x is QSPI index (0-2)] pin details. interrupts property must set with interrupt details. Interrupt number[CPU INTR] corresponding to QSPI index must be configured as defined in below table: QSPI ID Shared Peripheral Interrupt CPU INTR qspi0 77 45 qspi1 97 65 qspi2 100 68 Note Shared peripheral interrupt lines start at index ID32. So, CPU INTR must be calculated as [Shared peripheral interrupt number - 32]. Input clock clocks property must be set to GCK clock using phandle and GCK ID as , where x is QSPI index (0-2). clock-names must be set to pclk and gclk assigned-clocks must be set to , where x is QSPI index (0-2). assigned-clock-rates must be set to 20Mhz. dmas must be set to phandle dma0 and Peripheral ID as listed below: QSPI ID Rx channel PerID Tx channel PerID qspi0 0 1 qspi1 15 16 qspi2 17 18 For example, dmas should be configured as for Rx channel and for Tx channel. * dma-names must be set to rx and tx respectively. Note dmas and dma-names are optional properties. QSPI DT documentation Following example shows how a QSPI should be defined in DT to use a SPI-NAND flash present on it: dtsi file: qspi2: spi@e0834000 { compatible = \"microchip,lan966x-qspi\"; reg = , ; reg-names = \"qspi_base\", \"qspi_mmap\"; interrupts = ; clocks = , ; clock-names = \"pclk\", \"gclk\"; assigned-clocks = ; assigned-clock-rates = ; dmas = , ; dma-names = \"rx\", \"tx\"; #address-cells = ; #size-cells = ; status = \"disabled\"; }; dts file: &qspi2 { pinctrl-0 = ; pinctrl-names = \"default\"; status = \"okay\"; spi-flash@0 { compatible = \"spi-nand\"; reg = ; spi-max-frequency = ; #address-cells = ; #size-cells = ; spi-tx-bus-width = ; spi-rx-bus-width = ; }; }; MTD utility in buildroot provides rich set of tests for validating QSPI NOR/NAND flashes. To confirm if qspi flash is created: Check if a mtd device is created in /dev directory. Run mtd_debug info /dev/mtdx (where x is index of mtd device) command to check flash details. # dmesg | grep spi [ 1.258369] atmel_qspi e0834000.spi: Using dma0chan1 (tx) and dma0chan0 (rx) for DMA transfers [ 1.284563] spi-nand spi1.0: Winbond SPI NAND was found. [ 1.289435] spi-nand spi1.0: 128 MiB, block size: 128 KiB, page size: 2048, OOB size: 64 # mtd_debug info /dev/mtd1 mtd.type = MTD_NANDFLASH mtd.flags = MTD_CAP_NANDFLASH mtd.size = 134217728 (128M) mtd.erasesize = 131072 (128K) mtd.writesize = 2048 (2K) mtd.oobsize = 64 regions = 0 Erase/Read/Write test: # flash_erase /dev/mtd1 0 0x10 Erasing 128 Kibyte @ 1e0000 -- 100 % complete # # # mtd_debug read /dev/mtd1 0x1e0000 0x10 rd Copied 16 bytes from address 0x001e0000 in flash to rd # hexdump rd -C 00000000 ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff |................| 00000010 # echo \"lan966x\" > wr # # # mtd_debug write /dev/mtd1 0x1e0000 0x8 wr Copied 8 bytes from wr to address 0x001e0000 in flash # # # mtd_debug read /dev/mtd1 0x1e0000 0x10 rd Copied 16 bytes from address 0x001e0000 in flash to rd # # # hexdump rd -C 00000000 6c 61 6e 39 36 36 78 0a ff ff ff ff ff ff ff ff |lan966x.........| 00000010 # # flash_erase /dev/mtd1 0 0x10 Erasing 128 Kibyte @ 1e0000 -- 100 % complete # mtd_debug read /dev/mtd1 0x1e0000 0x10 rd Copied 16 bytes from address 0x001e0000 in flash to rd # # # hexdump rd -C 00000000 ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff |................| 00000010 # # echo \"The W25N01GV (1G-bit) Serial SLC NAND Flash Memory provides a storage so lution for system with lmtd space\" > wr1 # ls -l wr1 -rw-r--r-- 1 root root 106 Jan 1 00:17 wr1 # # mtd_debug write /dev/mtd1 0x1e0000 106 wr1 Copied 106 bytes from wr1 to address 0x001e0000 in flash # # # mtd_debug read /dev/mtd1 0x1e0000 106 rd Copied 106 bytes from address 0x001e0000 in flash to rd # hexdump rd -C 00000000 54 68 65 20 57 32 35 4e 30 31 47 56 20 28 31 47 |The W25N01GV (1G| 00000010 2d 62 69 74 29 20 53 65 72 69 61 6c 20 53 4c 43 |-bit) Serial SLC| 00000020 20 4e 41 4e 44 20 46 6c 61 73 68 20 4d 65 6d 6f | NAND Flash Memo| 00000030 72 79 20 70 72 6f 76 69 64 65 73 20 61 20 73 74 |ry provides a st| 00000040 6f 72 61 67 65 20 73 6f 6c 75 74 69 6f 6e 20 66 |orage solution f| 00000050 6f 72 20 73 79 73 74 65 6d 20 77 69 74 68 20 6c |or system with l| 00000060 6d 74 64 20 73 70 61 63 65 0a |mtd space.| 0000006a # # flash_erase /dev/mtd1 0 0x10 Erasing 128 Kibyte @ 1e0000 -- 100 % complete # mtd_debug read /dev/mtd1 0x1e0000 0x106 rd Copied 262 bytes from address 0x001e0000 in flash to rd # hexdump rd -C 00000000 ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff |................| * 00000100 #","title":"LAN966x QSPI","component":"bsp","version":"2024.03","name":"lan966x-qspi","url":"/bsp/2024.03/supported-hw/lan966x-qspi.html","titles":[{"text":"SoC Resources","hash":"_soc_resources","id":1},{"text":"Kernel configurations","hash":"_kernel_configurations","id":2},{"text":"Devicetree Configuration","hash":"_devicetree_configuration","id":3},{"text":"References","hash":"_references","id":4},{"text":"Example","hash":"_example","id":5},{"text":"UserSpace","hash":"_userspace","id":6},{"text":"Confirm instances are created","hash":"_confirm_instances_are_created","id":7},{"text":"Example on how to use","hash":"_example_on_how_to_use","id":8}]},"144":{"id":144,"text":"In case of a blank eMMC or NOR device, the following instructions can be applied for the initial bringup of the LAN966x SoC. The procedure described here will not work for the PCB8290, as this board is using a USB device as console and TFA monitor for lan966x it is using FlexCom3 which is a different device. For this board you will have to use a flash programmer. An alternative would be to wire cables to the board to get access to FlexCom3 to use the method described here. This is where you can find more details about enabling EVB image restoration: SoC Name Strapping Pins Monitor Mode LAN966x LAN966x Strapping Pins LAN966x UART Monitor This section will give an overview on how the TF-A monitor can be loaded to the SoC and used for e.g. writing a FIP or a GPT image on a flash device. The following description is based on a host PC running Ubuntu Linux: Set the strapping mode on the eval board to the \"Monitor Mode\" to enabling the UART monitor mode. See previous section for the details. Connect the eval board via USB cable to the host PC. The host machine should now enumerate a new TTY device like e.g. '/dev/ttyACM0'. From now on, no other application should be attached to this port (e.g. Putty or Termhub). Use a Chrome or MS Edge browser and open the fwu.html file in the address bar. This file can be found inside the artifacts archive. Please follow the instructions and the red markers, illustrated on the previous screenshot. Arrow #1, Press the [Connect Device] button Arrow #2, Choose the appropriate console interface in the dropdown menu Arrow #3, Press [Connect] button After successful connection, the 'BL1 bootstrap' page should be loaded. Arrow #1, Press the [Download BL2U] button After uploading and execution, the 'BL2U bootstrap' screen should be appear. The main purpose of this description is to a write a FIP file to a blank NOR device. Be aware, that only a FIP file format can be written to the NOR flash. Using a GPT file will not work here. When writing a FIP to the NOR, following methods can be used: Attach a SPI flasher to the board and write the FIP to the memory address offset of 0x0 (zero). Use the HTML5 based firmware update browser tool (fwu.html). This section will describe, how to proceed with the second approach here. Therefore no further programmer hardware is required. The following description assumes that the TF-A monitor mode has been started. Please follow according the instructions and the red markers, illustrated on the previous screenshot. Arrow #1, Choose now the proper .fip file [Choose File]. Arrow #2, Upload the file by pressing the [Upload file] button. Arrow #3, If the upload is finished, change dropdown value to [NOR Flash] device. Arrow #3, Afterwards the [Write FIP Image] button can be pressed. Wait till the write NOR procedure is completed. The process can take a few minutes. The progress can be checked anytime inside the [Log:] field. Change the strapping mode back to 0x1 or 0x4 for the NOR boot mode. See Reference Information Reset the board The main purpose of this description is to a write a GPT image to a blank eMMC or SDCard device. Writing this image will trigger following actions to the device: Create a GPT based partition table and all required partitions. Store a FIP file inside the 'fip' named partition. According the chosen GPT image, the BL33 can contain an 'UBoot' or a 'Linux' as data payload. A simple file copy of the GPT image to the eMMC or SDCard device will not work here ! A raw byte copy needs to be established here. The GPT image can be written to the eMMC device using following methods: Using UBoot with network and upload/write the GPT image with mmc commands Using external programmers and write the GPT image to the eMMC address offset of 0x0 (zero). Use the HTML5 based firmware update browser tool (fwu.html). This section will describe, how to proceed with the third approach here. Therefore no further programmer hardware is required. First boot into the TF-A monitor using the correct strapping pin setting. See Reference Information Please follow the instructions and the red markers, illustrated on the previous screenshot. Arrow #1, Choose now the proper .gpt file [Choose File] Arrow #2, Upload the file by pressing the [Upload file] button Arrow #3, If the upload is finished, check dropdown value is set to [eMMC] device Arrow #3, Afterwards the [Write Flash Image] button can be pressed Wait till the write procedure is completed. This process can take a few minutes. The progress can be checked anytime inside the [Log:] field. Change the strapping mode back to 0x0 or 0x3 for the eMMC boot mode. See the reference section for more info. Reset the board A FIP file can only be programmed, if the eMMC device is already partitioned. If not please follow the description of: Program eMMC with GPT Image This description is also valid for updating an existing FIP on the target. The FIP file can be written by using one of this following methods. Using UBoot console with network and upload/write the FIP using mmc commands Use the HTML5 based firmware update browser tool (fwu.html). We will focus here on the second approach. First Boot into the TF-A monitor using the correct strapping pin setting. See Reference Information Afterwards follow the description based on the BL2U bootstrap monitor page: The following instructions and the red markers illustrating the needed actions. Arrow #1, Choose now the proper .fip file [Choose File] Arrow #2, Upload the file by pressing the [Upload file] button Arrow #3, If the upload is finished, check dropdown value is set to [eMMC] device Arrow #3, Afterwards the [Write FIP Image] button can be pressed Wait till the write eMMC procedure is completed. This process can take a few minutes. The progress can be checked anytime inside the [Log:] field. Change the strapping mode back to 0x0 or 0x3 for the eMMC boot mode. See Reference Information Reset the board","title":"Restoring SecureBoot Images","component":"bsp","version":"2024.03","name":"lan966x-restore-secureboot","url":"/bsp/2024.03/supported-hw/lan966x-restore-secureboot.html","titles":[{"text":"1. Reference information","hash":"ref_info","id":1},{"text":"2. How to restore an image","hash":"_how_to_restore_an_image","id":2},{"text":"3. Enable TF-A-Monitor at FC3","hash":"tfa_monitor","id":3},{"text":"3.1. Program NOR with FIP","hash":"program_nor","id":4},{"text":"3.2. Program eMMC with GPT image","hash":"emmc_gpt","id":5},{"text":"3.3. Programm eMMC with FIP","hash":"_programm_emmc_with_fip","id":6}]},"145":{"id":145,"text":"LAN966X SoC have 5 FLEXCOMs(Flexible Serial Communication Controller). In order to use flexcom SPI interface, a specific flexcom should be configured in SPI mode. Following kernel config options should be enabled to use LAN966x flexcom SPI interface: CONFIG_SPI_ATMEL - SPI driver config option. CONFIG_MTD, CONFIG_MTD_SPI_NOR or CONFIG_MTD_SPI_NAND based on NOR/NAND flash present. To use Flexcom SPI interface, following configurations are required in device tree. Each of the flexcom flx0, flx1, flx2, flx3 and flx4 nodes can be configured in SPI mode ATMEL_FLEXCOM_MODE_SPI to use SPI interface. compatible string must be set to atmel,at91rm9200-spi. reg property must be set with register address and length as . GPIO pins for TXD, RXD and SCK should be configured to pinctrl-0 property. Also add cs0 and cs1 pins, if present. List of possible pin mappings are as in below table: FLEXCOM Node DT SCK node SCK pin DT RXD node RXD pin DT TXD node TXD pin flx0 fc0_a_sck_pins GPIO8 fc0_a_rxd_pins GPIO9 fc0_a_txd_pins GPIO10 flx0 fc0_b_sck_pins GPIO24 fc0_b_rxd_pins GPIO25 fc0_b_txd_pins GPIO26 flx0 fc0_c_sck_pins GPIO61 fc0_c_rxd_pins GPIO62 fc0_c_txd_pins GPIO63 flx1 fc1_a_sck_pins GPIO11 fc1_a_rxd_pins GPIO12 fc1_a_txd_pins GPIO13 flx1 fc1_b_sck_pins GPIO33 fc1_b_rxd_pins GPIO34 fc1_b_txd_pins GPIO35 flx1 fc1_c_sck_pins GPIO46 fc1_c_rxd_pins GPIO47 fc1_c_txd_pins GPIO48 flx2 fc2_a_sck_pins GPIO14 fc2_a_rxd_pins GPIO15 fc2_a_txd_pins GPIO16 flx2 fc2_b_sck_pins GPIO43 fc2_b_rxd_pins GPIO44 fc2_b_txd_pins GPIO45 flx3 fc3_a_sck_pins GPIO17 fc3_a_rxd_pins GPIO18 fc3_a_txd_pins GPIO19 flx3 fc3_b_sck_pins GPIO51 fc3_b_rxd_pins GPIO52 fc3_b_txd_pins GPIO53 flx3 fc3_c_sck_pins GPIO30 fc3_c_rxd_pins GPIO31 fc3_c_txd_pins GPIO32 flx4 fc4_a_sck_pins GPIO20 fc4_a_rxd_pins GPIO21 fc4_a_txd_pins GPIO22 flx4 fc4_b_sck_pins GPIO56 fc4_b_rxd_pins GPIO57 fc4_b_txd_pins GPIO58 flx4 fc4_c_sck_pins GPIO64 fc4_c_rxd_pins GPIO65 fc4_c_txd_pins GPIO66 interrupts property must set with interrupt details. Interrupt number[CPU INTR] corresponding to a flexcom must be configured as defined in below table: FLEXCOM ID Shared Peripheral Interrupt CPU INTR flx0 80 48 flx1 81 49 flx2 82 50 flx3 83 51 flx4 84 52 Note that Shared peripheral interrupt lines start at index ID32. So, CPU INTR must be calculated as [Shared peripheral interrupt number - 32]. Input clock clocks property must be set to &nic_clk. Note that NIC clock(200Mhz) is clock used by AXI, AHB fabric and APB bridges which connects all th peripherals. clock-names must be set to spi_clk. SPI driver Implementation Flexcom DT documentation SPI DT documentation Following example explains how a flexcom SPI should be defined in DT to use a SPI-NOR flash present on it: &flx3 { atmel,flexcom-mode = ; microchip,flx-shrd-pins = ; microchip,flx-cs = ; status = \"okay\"; spi0: spi@400 { compatible = \"atmel,at91rm9200-spi\"; reg = ; interrupts = ; #address-cells = ; #size-cells = ; clocks = ; clock-names = \"spi_clk\"; pinctrl-0 = , , , ; pinctrl-names = \"default\"; dmas = , ; dma-names = \"rx\", \"tx\"; atmel,use-dma-rx; atmel,use-dma-tx; atmel,fifo-size = ; status = \"okay\"; flash: flash@0 { compatible = \"jedec,spi-nor\"; reg = ; spi-max-frequency = ; }; }; }; Following example explains how to use SPI from linux userspace with spidev: Enable CONFIG_SPI_SPIDEV kernel configuration. &flx3 { atmel,flexcom-mode = ; microchip,flx-shrd-pins = ; microchip,flx-cs = ; status = \"okay\"; spi0: spi@400 { compatible = \"atmel,at91rm9200-spi\"; reg = ; interrupts = ; #address-cells = ; #size-cells = ; clocks = ; clock-names = \"spi_clk\"; pinctrl-0 = , , , ; pinctrl-names = \"default\"; dmas = , ; dma-names = \"rx\", \"tx\"; atmel,use-dma-rx; atmel,use-dma-tx; atmel,fifo-size = ; status = \"okay\"; spi@0 { compatible = \"spidev\"; reg = ; spi-max-frequency = ; }; }; }; MTD utility in buildroot provides rich set of tests for validating SPI NOR/NAND flashes. To confirm if spi flash is created: Check if a mtd device is created in /dev directory. Run mtd_debug info /dev/mtd0 command to check flash details. To confirm if spidev device is created: Check if spidev device is created in /dev directory as /dev/spidev0.0. # ls -l /dev/spi* crw------- 1 root root 153, 0 Jan 1 00:00 /dev/spidev0.0 # dmesg | grep spi [ 4.678015] atmel_spi e0064400.spi: Using dma0chan0 (tx) and dma0chan1 (rx) for DMA transfers [ 4.686861] atmel_spi e0064400.spi: Using FIFO (32 data) [ 4.703046] spi-nor spi0.0: sst26vf016b (2048 Kbytes) # mtd_debug info /dev/mtd0 mtd.type = MTD_NORFLASH mtd.flags = MTD_CAP_NORFLASH mtd.size = 2097152 (2M) mtd.erasesize = 4096 (4K) mtd.writesize = 1 mtd.oobsize = 0 regions = 0 Block erase/read/write test: # mtd_debug erase /dev/mtd0 0 65536 Erased 65536 bytes from address 0x00000000 in flash # mtd_debug read /dev/mtd0 0 65536 read # Copied 65536 bytes from address 0x00000000 in flash to read # # dd if=/dev/urandom of=64k bs=64k count=1 1+0 records in 1+0 records out # # mtd_debug write /dev/mtd0 0 65536 64k Copied 65536 bytes from 64k to address 0x00000000 in flash # # mtd_debug read /dev/mtd0 0 65536 read Copied 65536 bytes from address 0x00000000 in flash to read # # sha1sum read 64k a3e850ee411aeec2a47c409d866a33a49771a76e read a3e850ee411aeec2a47c409d866a33a49771a76e 64k Command to list all the available mtd devices: # cat /proc/mtd dev: size erasesize name mtd0: 00200000 00001000 \"spi0.0\"","title":"LAN966x SPI","component":"bsp","version":"2024.03","name":"lan966x-spi","url":"/bsp/2024.03/supported-hw/lan966x-spi.html","titles":[{"text":"SoC Resources","hash":"_soc_resources","id":1},{"text":"Kernel configurations","hash":"_kernel_configurations","id":2},{"text":"Devicetree Configuration","hash":"_devicetree_configuration","id":3},{"text":"References","hash":"_references","id":4},{"text":"Example","hash":"_example","id":5},{"text":"UserSpace","hash":"_userspace","id":6},{"text":"Confirm instances are created","hash":"_confirm_instances_are_created","id":7},{"text":"Example on how to use","hash":"_example_on_how_to_use","id":8}]},"146":{"id":146,"text":"The LAN966x SoC contains an internal CPU which has secure boot capabilities with an implementation based on TF-A (Trusted Firmware for ARM). This document uses many abbreviations, see the terms and abbreviations section for details. The BootROM in LAN966x offers the following high-level features: Boot firmware from: SPI-NOR SD-Card eMMC Firmware authentication based on public key ECSDA algorithm Firmware encryption using AES encryption with Secret Symmetric Key (SSK) Per-device unique key (BSSK) A bootrom UART monitor (fwu.html) with support for: Secure JTAG unlock Firmware update over UART OTP programming PCIe end-point initialization LAN966x always boots from the BootROM using the TF-A based boot stages. This is the case regardless of if secure boot is needed (enabled) or not. This means that it will be the TF-A Bootloaders that boots either U-Boot, the Linux kernel or another OS directly. This document, and the referenced sources are provided under the BSD-3-Clause license. This means that the content is provided as-is, and that Microchip cannot be held liable. See the License section for details. In LAN996x the DDR initialization is done as part of TF-A/BL2 and not in U-Boot. If you need to change DDR settings, then this shall be done in TF-A. The sources and binaries provided to enable secure boot contains demo keys which are not handled in a secure way. The symmetric shared keys, and the private keys are publicly available. If any of the advertised security features in this document are needed, then the demo keys must be replaced with new keys which shall then be kept confidential. The Trusted Firmware-A (TF-A) SW project is a multi-stage bootloader which utilizes the ARM TrustZone feature in ARM CPUs as an important part of the security concept. The TrustZone feature in ARM CPUs introduce the concept of a Secure-World (S) and Non-Secure-World (NS) and the ability to switch between these worlds. The various CPU peripherals inside the SoC, or connected to the SoC, are then classified as secure or non-secure. Secure-World has access to everything, while Non-Secure world only has access to the non-secure peripherals. In HW this is implemented as an additional bit in the address bus to specify the Secure/Non-Secure mode. Only Secure-World bus controllers can issue transactions with the Secure-Bit set. | S-Peripheral NS-Peripheral --------------------------+--------------------------------- S-World Bus Controller | Access Access NS-World Bus Controller | No Access Access When zooming in on the CPU, the S/NS worlds are often seen as an additional dimension to the exception levels (EL3 - EL0). This is illustrated below: The CPU can jump between the secure and non-secure worlds, and the two worlds can communicate with each other by using a shared buffer. This allows the same kind of application and use-cases as when having a dedicated security processor. The TF-A framework provides a multi-stage bootloader concept. There are many good reasons to go with a multi stage approach. To name a few points: Make the amount of code/functionality in the ROM as small as possible. Make components running within a given exception level (or having different life-time) self-contained. TF-A provides different bootloader stages for the different levels. Breaking complex stuff into smaller problems is always a good idea. Here is a list with an explanation of the different boot-loader stages: Trusted ROM Firmware (BL1) This is a binary built from the TF-A sources. Embedded as ROM code in the chip, execute in secure world EL3/SVC-MON. Purpose: Do basic platform initialization Read BL2 from boot media into secure memory, authenticate it, run it. Trusted Boot Firmware (BL2) This is a binary built from the TF-A sources. Loaded from a FIP (see below), and runs from on-chip secure memory, execute in secure world EL1/SVC-MON. Purpose: Will do additional platform initialization including: TrustZone configuration DDR initialization Load BL3x images into DDR memory, authenticate, decrypt etc. Run EL3 Runtime Software EL3 Runtime Software (BL32) This is a binary built from the TF-A sources. Loaded from from a FIP and runs as Secure EL3/SVC. This firmware stays resident in memory, and the services offered here can be called later on. Purpose: Initialize the secure run-time service, typically PSCI and Trusted HW RNG. Authenticate, decrypt and run BL33. Non-trusted Firmware (BL33) BL33 is not built from the TF-A sources, but is a binary which is stored in a FIP and will be loaded (and executed) by TF-A. This is typically U-Boot, a direct booting Linux kernel or some other OS. Runs from DDR memory in non-secure world as EL1/SVC Firmware update image (BL2u) This is a binary built from the TF-A sources. Compared to the other images, this is special, as it is not used during normal boot, and it is not loaded from a FIP stored in flash. This image replaces the normal BL2. It is loaded by BL1 via the UART-monitor using a Serial port. Like BL2, it is authenticated by BL1 before it is being executed. Purpose: Provide an updateable stepping stone for board provisioning. The FIP or Firmware Image Package is the file format TF-A uses to contain all the artifacts. This includes the BL2 and BL3x images, certificates, and configuration files. The FIP is generated as part of the build process. It is written in flash in binary format without any transformation, and the BL1 ROM knows how to locate and load a particular image type in the FIP. It can be compared to a very simple read-only file-system, as it contains only very basic information of the individual files: type, offset and size. The TF-A project includes 2 host tools: fiptool: which makes it easy to perform common operations (create, display, add/del/mod individual images) in fip files. cert_create: which makes it easy to generate the keys and certificates needed to establish the chain of trust. In the build process the make target is called certtool, but the resulting binary is called cert_create. The FIP generation process where the fiptool and cert_create are used is shown below: As shown above, the cert_create tool reads the BLOBs as input, it reads the keys from the disk (or generate them on the fly), and creates the needed certificates. Once the certificates have been generated, the normal fiptool can bundle both the original BLOBs and the associated certificates into the FIP which can then be authenticated. To bind devices to this chain of trust, the SHA or the public root key needs to be written into OTP. When reading console output, browsing the source code, or when using the fiptool or the cert_create tool, it is often necessary to reference the individual images. The table below provide the mapping between the defines used in the C code, the numeric values as they will appear in the trace output, and finally the command-line argument which is understood by the fiptool (and cert_create). C-Define Num fiptool arg BL2_IMAGE_ID 1 --tb-fw BL32_IMAGE_ID 4 --tos-fw BL33_IMAGE_ID 5 --nt-fw TRUSTED_BOOT_FW_CERT_ID 6 --tb-fw-cert TRUSTED_KEY_CERT_ID 7 --trusted-key-cert TRUSTED_OS_FW_KEY_CERT_ID 10 --tos-fw-key-cert NON_TRUSTED_FW_KEY_CERT_ID 11 --nt-fw-key-cert TRUSTED_OS_FW_CONTENT_CERT_ID 14 --tos-fw-cert NON_TRUSTED_FW_CONTENT_CERT_ID 15 --nt-fw-cert FW_CONFIG_ID 31 --fw-config This section provides the hands-on steps needed to build TF-A for LAN966x. Most modern Linux distributions can be used for building TF-A, but to ensure consistent results a docker image can be used for running all the build-commands. This project provides a dr (docker run) script to make it easy to run a command in the desired docker container. The dr script is provided by the https://github.com/microchip-ung/docker-run project which also offers more details on how it works. The folder /opt/mscc must exist before you can use the dr script. This folder is used for caching BSP packages. The short story is that prefixing a command with dr will cause it to run in a docker container. You can test if it works just by typing dr ls and check the result. Sources can be obtained from https://github.com/microchip-ung/arm-trusted-firmware using git clone. A release with both source packages and binaries are provided as release artifacts and can be found at https://github.com/microchip-ung/arm-trusted-firmware/releases. To build the TF-A binaries for LAN966x, navigate to the root of the project and run the following command: $ dr ./scripts/build.rb -p lan966x_b0 This will by default do incremental builds. The --clean flag will delete the artifacts for a given platform/variant and cause the next build to be complete rebuild. This will use the demo keys from the ./keys folder, which are not kept confidential. Any secure products must generate new keys and keep them secret. By default the build script will load a pre-build U-Boot binary into the BL33 blob. The build.rb script offers a set of options to tweak the default settings. The --help option shown below provides an overview of possible options, and the following sub-sections provides some additional details. $ dr ./scripts/build.rb --help Usage: build.rb [options] -p, --platform Build for given platform -r, --root-of-trust Set ROT key file --create_keys Create new keys --bl31-key Set BL31 key --bl32-key Set BL32 key --bl33-key Set BL33 key --non_trusted_world-key Set non_trusted_world key --scp_bl2-key Set scp_bl2 key --trusted_world-key Set trusted_world key --encrypt-images List of encrypted images, eg BL2,BL32,BL33 --encrypt-ssk Enable encryption with SSK --encrypt-bssk Enable encryption with BSSK --fw-nvctr Set Secure FW NV counter for FIP --ntfw-nvctr Set Non-trusted FW NV counter for FIP -x, --variant X BL2 variant (noop) -l, --linux-as-bl33 Enable direct Linux booting --bl33-blob BL33 binary -d, --debug Enable DEBUG --release Disable DEBUG -n, --[no-]norimg Create a NOR image file with the FIP (lan966x_a0 only) -g, --[no-]gptimg Create a GPT image file with the FIP -c, --clean Do a 'make clean' instead of normal build -C, --coverity stream Enable coverity scan -R, --[no-]ramusage Report RAM usage --extra1 Add BL32 EXTRA1 image to FIP --extra2 Add BL32 EXTRA2 image to FIP The --platform option is used to select the desired platform. This argument must be provided, and when building for LAN966x it must be set to: lan966x_b0: By default the U-Boot binary provided by the BSP will be used as BL33 content. As an alternative to U-Boot, the --linux-as-bl33 option can be used which will cause the BSP provided brsdk_standalone_arm.itb blob to be used as BL33 content. This itb file contains a Linux kernel and a Device Tree, and will allow the system to boot Linux without U-Boot. Sometimes it is desirable to provide the BL33 content directly, this can be done using --bl33-blob . The blob can be either a itb/fit image or a executable binary. If it is not a fit then it will be relocated to address 0x60200000 (in DDR) and once authenticated the BL32 will do a memory-jump to that address. If it is a fit then is is handled as described in the following section. Be aware that the BL33 blob will be aggregated into the FIP, and if the blob is sufficiently large the resulting image may not fit into the NOR flash (in this case eMMC can be used for storing the FIP). When using a fit image, the FIT image is placed in DDR NS start (0x60200000), just like the \"flat\" binary type image. When the fit image is parsed, individual components are identified in this order: Device tree Root fs (optional) Kernel The two first components need to be moved to an area outside where the fit image itself resides - i.e. the load address cannot overwrite the fit image itself. The kernel (being loaded last) is allowed to overwrite the fit image itself, so the load address will typically be the NS DDR start. Apart from the above guides, the following fit image restrictions apply: Compression is not supported for any data (the kernel loader itself may use compression). A load address outside NS DDR area is not allowed. If the fit image contain more than one configuration node, the fit_config OTP tag can be use to name the fit configuration node to use. Otherwise, the default config will be used - as is custom with fit images. Once the device tree according to the chosen configuration is loaded into the proper place, the device tree is \"fixed up\" with these changes: A /memory node is added/modified to containing the memory size according to the platform NS DDR location and size. If the device tree property /chosen/bootargs is not present, a default command line according to the platform is added. (LAN966X: console=ttyS0,115200 root=/dev/mmcblk0p4 rw rootwait loglevel=8). FIT example /dts-v1/; / { description = \"Image Tree Source file for lan966x direct BL33 boot\"; #address-cells = ; images { kernel { description = \"Kernel\"; data = /incbin/(\"arch/arm/boot/zImage\"); type = \"kernel\"; arch = \"arm\"; os = \"linux\"; compression = \"none\"; load = ; entry = ; }; fdt_lan9662_ung8291_0_at_lan966x { description = \"Flattened Device Tree\"; data = /incbin/(\"arch/arm/boot/dts/lan966x_pcb8291.dtb\"); type = \"flat_dt\"; arch = \"arm\"; load = ; compression = \"none\"; }; fdt_lan9662_ung8290_0_at_lan966x { description = \"Flattened Device Tree\"; data = /incbin/(\"arch/arm/boot/dts/lan966x_pcb8290.dtb\"); type = \"flat_dt\"; arch = \"arm\"; load = ; compression = \"none\"; }; ... more device trees ... ramdisk { description = \"Ramdisk\"; data = /incbin/(\"rootfs.squashfs\"); type = \"ramdisk\"; arch = \"arm\"; os = \"linux\"; compression = \"none\"; load = ; }; }; configurations { default = \"lan9662_ung8291_0_at_lan966x\"; lan9662_ung8291_0_at_lan966x { description = \"Kernel with DT fdt_lan9662_ung8291_0_at_lan966x\"; kernel = \"kernel\"; fdt = \"fdt_lan9662_ung8291_0_at_lan966x\"; ramdisk = \"ramdisk\"; }; lan9662_ung8290_0_at_lan966x { description = \"Kernel with DT fdt_lan9662_ung8290_0_at_lan966x\"; kernel = \"kernel\"; fdt = \"fdt_lan9662_ung8290_0_at_lan966x\"; ramdisk = \"ramdisk\"; }; ... more configuration nodes for other device trees ... }; }; The unpacking of the fit image will display trace log messages if trace is enabled. And example is shown here. FIT boot trace log INFO: Unpacking FIT image @ 0x60200000 INFO: fit: Looking for 'default' config INFO: fit: Using 'lan9662_ung8291_0_at_lan966x' config INFO: fit: Loading fdt from 0x6063c340 to 0x67e00000, 13615 bytes INFO: fit: Loading kernel from 0x602000c8 to 0x60200000, 4440496 bytes INFO: fit: Adding DT bootargs 'console=ttyS0,115200 root=/dev/mmcblk0p4 rw rootwait loglevel=8' INFO: Preparing to boot 32-bit Linux kernel INFO: SP_MIN: Preparing exit to normal world INFO: Enabling SRAM NS access [ 0.000000] Booting Linux on physical CPU 0x0 By default the keys used for authentication are loaded from the files in the ./keys folder. The following table provides an overview of the command-line options, the default file and a description of its usage: CMD-option Default value Description --rot keys/rotprivk_ecdsa.pem Confidential key used to sign the TRUSTED_BOOT_FW_CERT and the TRUSTED_KEY_CERT. This file contains the ROT_PRIV_KEY and the ROT_PUB_KEY. The public key is embedded into the both the TRUSTED_BOOT_FW_CERT and the TRUSTED_KEY_CERT - which makes these certificates self-signed. --rot_pub keys/rotpk_ecdsa.der Non-confidential public key derived from keys/rotprivk_ecdsa.pem. --rot_sha keys/rotpk_ecdsa_sha256.bin Non-confidential SHA of the public key. This is the key which needs to be loaded into the OTP_TBBR_ROTPK otp field. --bl31_key keys/bl31_ecdsa.pem Not in use for LAN966x, but part of TF-A framework. --bl32_key keys/bl32_ecdsa.pem Confidential key used to sign the bl32 blob (BL32_IMAGE_ID). This file contains the TRUSTED_OS_FW_CONTENT_CERT_PRIV_KEY and the TRUSTED_OS_FW_CONTENT_CERT_PUB_KEY. The public key is embedded into the TRUSTED_OS_FW_KEY_CERT. --bl33_key keys/bl33_ecdsa.pem Confidential key used to sign the bl33 blob (BL33_IMAGE_ID). This file contains the NON_TRUSTED_FW_CONTENT_CERT_PRIV_KEY and the NON_TRUSTED_FW_CONTENT_CERT_PUB_KEY. The public key is embedded into the NON_TRUSTED_FW_KEY_CERT. --non_trusted_world_key keys/non_trusted_world_ecdsa.pem Confidential key used to sign the NON_TRUSTED_FW_KEY_CERT certificate. This file contains the NON_TRUSTED_WORLD_PRIV_KEY and the NON_TRUSTED_WORLD_PUB_KEY. The public key is embedded into the TRUSTED_KEY_CERT. --scp_bl2_key keys/scp_bl2_ecdsa.pem Not in use for LAN966x, but part of TF-A framework. --trusted_world_key keys/trusted_world_ecdsa.pem Confidential key used to sign the TRUSTED_OS_FW_CONTENT_CERT certificate. The list of keys above are provided in demo versions as part of the sources and build artifacts. The demo keys are not kept confidential (in fact they are published), and must be replaced with a new set of keys. To generate new keys, delete they above keys in the ./keys folder, and run the build script with the --create_keys options, like show below: $ dr ./scripts/build.rb --create_keys The tool will not update existing keys. Existing keys must be deleted before new keys can be generated. Check the time stamp and the content of the newly generated keys to confirm that they have been updated. The key content can be show using the openssl command: $ dr openssl ec -in ./keys/rotprivk_ecdsa.pem -text read EC key Private-Key: (256 bit) priv: cb:eb:29:43:74:12:54:96:43:e6:42:48:13:8f:5b: cf:8d:c7:8b:da:b8:c8:64:ae:f7:43:c1:94:ce:a6: 11:fb pub: 04:02:a6:68:7e:f2:fe:c9:07:1a:2c:a9:c2:33:b4: bb:89:34:99:7d:b6:30:f9:1f:6c:a8:ae:5c:6d:c5: 28:04:48:47:66:1e:e4:36:26:ad:5d:1d:83:45:41: 7d:f2:62:e6:e1:a9:2e:d1:c7:cd:0e:c2:62:01:db: 94:53:ca:46:c5 ASN1 OID: prime256v1 NIST CURVE: P-256 writing EC key -----BEGIN EC PRIVATE KEY----- MHcCAQEEIMvrKUN0ElSWQ+ZCSBOPW8+Nx4vauMhkrvdDwZTOphH7oAoGCCqGSM49 AwEHoUQDQgAEAqZofvL+yQcaLKnCM7S7iTSZfbYw+R9sqK5cbcUoBEhHZh7kNiat XR2DRUF98mLm4aku0cfNDsJiAduUU8pGxQ== -----END EC PRIVATE KEY----- By default the build script is using the default trusted and non-trusted counters for the platform. (2 and 3 for LAN966X). In order to create a new firmware version that cannot be downgraded, you can set the specifically by incrementing the counter for the environment that has been fixed. Use --fw-nvctr to explicitly set the \"Trusted FW NV counter\" --ntfw-nvctr to explicitly set the \"Non-Trusted FW NV counter\" to explictly set the version counter embedded in the FIP. Example: $ dr ./scripts/build.rb -p lan966x_b0 --fw-nvctr 3 --ntfw-nvctr 4 By default images are signed but not encrypted. Image encryption can be enabled using the --encrypt-images argument. The listed images will then be encrypted using the key provided with --encrypt-ssk . Example: $ dr ./scripts/build.rb -p lan966x_b0 \\ --encrypt-images BL2,BL32,BL33 \\ --encrypt-ssk ./keys/ssk.bin The ssk key is symmetric, which means that the same key used for encryption must also be programmed into the OTP (OTP_TBBR_SSK) where it is used for decryption. The key can be any 32byte value, and is typically randomly generated. The build.rb tool offer a --encrypt-bssk flag. This is for debug/development usage and should never be used in production. Instead the image should be bound by the bl2u utility or via bl32 using the HUK generated in OTP. The build.rb script will always build a FIP image. This FIP can be programmed directly into the NOR image, but to be able to boot from eMMC, the eMMC image needs to be prepared with a partition table (gpt) , and the FIP needs to be written into a partition (as opposed to being written to a fixed offset in the eMMC). The build script can prepare a complete image file with gpt partition table and the FIP image filled in the fip and the fip.bak partition. the -n, --[no-]norimg is only for internal prototypes and should not be used. This chapter provides a more in-depth description of TF-A technology used in LAN966x. Understanding these details are the essential prerequisites to design secure products based on LAN966x, and to understand the following sections with LAN966x specific implementation. TF-A uses a hierarchy of certificates to authenticate the different images in the FIP. This hierarchy is shown at the following image: As shown on the drawing, BL2 is authenticated by TRUSTED_BOOT_FW_CERT. TRUSTED_BOOT_FW_CERT is authenticated by the root of trust (the ROT_PUB_KEY). And the ROT_PUB_KEY is finally authenticated by the OTP SHA provided by the platform. The key hierarchy limits the usage of the root key, and therefore also the attack surface. If one of the downstream keys is leaked, it is possible to do key revocation. Besides the certificate based authentication, the authentication framework will also check the version number of the certificates against a non-volatile counter, provided by the platform. The version number in the certificate is covered by the signature which ensures the integrity, and the platform provides non-volatile counters that are created in such way that they can only increment. The authentication process will first validate the signature and then continue to compare the version of the certificate against the platform counter. Here is how the comparison is performed: certificate_version == platform_counter: All is good: The boot process can continue. certificate_version > platform_counter: The platform_counter will be incremented to the value of certificate_version: The boot process can continue. certificate_version < platform_counter: Fail as this is considered a rollback attack: The boot process will stop here, and the system needs to be updated with a new image matching the version of the platform counter. The purpose of this mechanism is to have a way of performing revocation of certificates. If one of the private keys has been revealed, new certificates needs to be issued and provisioned. But the old firmware will still pass the public key authentication, and the only way to prevent an attacker from rolling back the firmware, is to have such a counter. The ROT (root of trust) key does not have any version numbers as it cannot be updated. TF-A uses 2 none-volatile counters: trusted_nv_ctr and non_trusted_nv_ctr. The non_trusted_fw_key_cert and non_trusted_fw_content_cert certificates are checked against the non_trusted_nv_ctr, all other (except ROT) are evaluated against trusted_nv_ctr. To sign a certificate the private key is needed, but to authenticate a certificate only the public key is needed. The cert_create tool needs access to both the public and private keys. The public keys are needed, because they are aggregated into the certificates, and the private keys are needed to do the signing. The following picture illustrates the entire signing process done by cert_create. The green boxes are binaries generated by the compiler. cert_create will calculate the SHA, feed the SHA into the certificate, and sign the certificate. The trusted and non-trusted counters is version numbers. These version numbers are given at the command-line, and will be stored in the certificates as well. The trust hierarchy is created by feeding the SHA of 1 public key, into a parent certificate. The 2 certificates: TRUSTED_BOOT_FW_CERT and TRUSTED_KEY_CERT are authenticated by the root-of-trust public certificate. When BL1 loads the BL2 and the FW_CONFIG images from the FIP, it needs to authenticate the images, and the related certificates to establish a chain of trust. This is shown in the image below: When BL2 loads the BL32 and BL33 images from the FIP, it needs to authenticate the images, and the related certificates to establish a chain of trust. This is shown in the image below: Firmware encryption can be used to keep the firmware confidential, and protect against an attacker reading the content of the flash devices and extracting information from that. When enabled, firmware will be encrypted using AES-128-GCM, which uses symmetric keys. Two types of firmware keys are supported: ssk (secret symmetric key): Here the same key is used to encrypt the firmware (when creating the FIP image) and decrypting the firmware when loading running on the target. bssk (binding secret symmetric key): Here the ssk is used when encrypting the image and generating the FIP. But when the image is loaded on the board, it is bound to the board before it is being programmed to the flash. The binding operation will use the ssk to decrypt the image in memory, and then encrypt the image using a key derived from the huk (hardware unique key). When the system is booting, the BL1/BL2 will decrypt the image using the key derived from the huk. Only the individual images are encrypted, but the FIP container stays unencrypted. This is not a security risk, as the FIP is just a container that does not have any sensitive information. When images are encrypted an encryption header is prepended to the image. This header contains a flag indicating if the image has been bound or not. (Indicating using ssk or bssk). Using bssk for firmware encryption instead of ssk have the following advantages: Firmware cannot be copied/cloned from one board to another using an external flash programmer. If the firmware are licensed to a specific board, then it is an advantage to ensure that board firmware cannot be copied. If the ssk is leaked, an attacker cannot decrypt the image found in the flash memory of a board - the attacker will have to find another way to get the image before it is programmed (intercept an update session). If a bssk key is leaked, it will only impact one board. The disadvantage of using bssk is the additional complications of manufacturing the boards, as it is not possible to do this with pre-programmed images. Firmware binding can be done from the fwu.html tool or from Linux following the guide here. The core of TF-A is platform independent, and each platform needs to provide the platform specific implementation and drivers. The platform specific layer defines how the SW (and ROM) interface with the hardware, and how the keys in the system are kept safe. LAN966x offers 4 strapping pins which is the most fundamental configuration interface of the device. The values of the strapping pins are sampled by the boot process to decide what features to enable and use. Strapping Pins LAN966x B0 ============== ========== 0000 (0x0) eMMC + FC3 (for trace) 0001 (0x1) QSPI0 + FC3 (for trace) 0010 (0x2) SDCard + FC3 (for trace) 0011 (0x3) eMMC 0100 (0x4) QSPI0 0101 (0x5) SDCard 0110 (0x6) PCIe EndPoint 0111 (0x7) Reserved 1000 (0x8) TF-A Monitor at FC3 1001 (0x9) Reserved 1010 (0xa) Reserved 1011 (0xb) Reserved 1100 (0xc) Reserved 1101 (0xd) Reserved 1110 (0xe) Reserved 1111 (0xf) SPI Client In this table FC3 means FlexCOM3, running in UART mode configured as 115200/8/N/1 with the RX signal at GPIO52/Alt-1 and TX signal at GPIO53/Alt-1. For modes 0000-0010 the FC3 terminal is used as to emit debug traces, and in mode 1000 a bidirectional machine interface is implemented. Mode 0011 to 0101 perform the same boot procedure, but with trace disabled to improve performance. When booting from MMC, the ROM code will look for a GPT (GUID Partition Table). The partition table is parsed, and the code will look for a partition called fip which is assumed to contain the FIP. If booting from the fip partition fails, the fip.bak partition will be attempted as a fallback. When booting from NOR, the FIP is expected to be located at offset 0 (zero). No fallback is offered. This mode is used to initialize the SoC as a PCIe end-point. This mode can read certain configuration options from OTP. This mode does not require any flash memory to be available on the board. This strapping mode will cause the BootROM to start a machine friendly UART protocol at FC3. The fwu.html tool is offered as a client tool using this mode. The features offered by the ROM monitor is very limited, and in most cases a bl2u image is downloaded via the UART and once authenticated it will take over the console and will offer an extended feature set. The fwu.html tool can facilitate OTP access (this depends on what functionality is embedded in the bl2u blob), which can reveal secret keys. In this strapping mode, the CPU is not booting at all (the BootROM is not executed), and a SPI client interface is initialized at pin A14, B14 and B15. This SPI interface allows a host CPU to read/write register in the switch-core. The one-time-programmable memory provided by the SoC is an important source of configuration data. It is the only persistent memory not depending on any external components and it is used for many different purposes. The OTP can be divided into regions, and each region can be write protected, and if write-protected, also read-protected. The OTP contains secret keys, which must be protected to keep firmware confidential. The offered mechanism to keep such keys confidential is the read-protect setting on the given region. The region containing the keys must be marked as read-protected by the BL2 before it hands over control to BL32. Each OTP region contains a number of OTP attributes, which may then contain a number of OTP fields. This is all covered in the following subsections. The OTP shall be divided into the following 8 regions: REG. START END Secure Emu Description ---- ------ ------ ------ --- ----------------------------------------- 0 0x0000 0x003F No No Manufacturing data 1 0x0040 0x0043 No No OTP Write protect 2 0x0044 0x0063 No No OTP Region Definitions 3 0x0064 0x00FF No No Insecure configuration without emulation 4 0x0100 0x01FF Yes Yes Keys and other security related 5 0x0200 0x023F No Yes Non-volatile secure counters 6 0x0240 0x07FF No No Fixed position user-space / custom usage 7 0x0800 0x2000 No No Key-value store (semi-updateable) The secure flag indicates if the area contains secret information, and hence must be configured to remove read access before leaving the BL2. The Emu flag indicate if OTP emulation can be supported. The following sub-section documents the intended use of the regions, and highlights some important points for each of these. The configuration of OTP-regions are kept in the OTP itself. It is the customer responsibility to program the regions. The Linux user-space otp tool can be used for this purpose. The following OTP table shows the pre-defined OTP attributes, used by either HW, BL1 and/or BL2. BL3x, U-Boot, Linux or other clients can also access the OTP, if the access control of the given regions allow it. Begin End Size RTL EMU REG. Name ------ ------ ---- --- --- ---- ---------------- 0x0000 0x0003 4 X 0 OTP_PRG 0x0004 0x0004 1 X 0 FEAT_DIS 0x0005* 0x0006 2 X 0 PARTID 0x0007 0x0007 1 0 TST_TRK 0x0008 0x000f 8 0 SERIAL_NUMBER 0x0010 0x0013 4 X 0 SECURE_JTAG 0x0014 0x001a 7 0 WAFER_TRK reserved 5 bytes 0x0020 0x0029 10 X 0 JTAG_UUID reserved 6 bytes 0x0030 0x0037 8 0 TRIM reserved 8 bytes 0x0040 0x0043 4 X 1 PROTECT_OTP_WRITE 0x0044 0x0063 32 X 2 PROTECT_REGION_ADDR 0x0064 0x0067 4 3 OTP_PCIE_FLAGS 0x0068 0x006B 4 3 OTP_PCIE_DEV 0x006c 0x0073 8 3 OTP_PCIE_ID 0x0074 0x009b 40 3 OTP_PCIE_BARS reserved 100 bytes 0x0100 0x011f 32 X 4 OTP_TBBR_ROTPK 0x0120 0x013f 32 X 4 OTP_TBBR_HUK 0x0140 0x015f 32 X 4 OTP_TBBR_EK 0x0160 0x017f 32 X 4 OTP_TBBR_SSK 0x0180 0x019f 32 X 4 OTP_SJTAG_SSK reserved 4 bytes 0x01a4 0x01a5 2 X 4 OTP_STRAP_DISABLE_MASK reserved 90 bytes 0x0200 0x021f 32 X 5 OTP_TBBR_NTNVCT 0x0220 0x023f 32 X 5 OTP_TBBR_TNVCT In the above table the RTL column indicate that the OTP value is read and used by the digital HW in the SoC before SW is running (under reset). This attribute is a 16 bit mask. Each bit in the mask corresponds to one of the strapping modes. By default the mask is set to all zeroes which means that all strapping modes are allowed. If a customer wants to disable one or more strapping modes the corresponding bits can be set in the mask and the ROM code will refuse to boot into the indicated modes. This attribute sets the maximum supported link speed 1 = 2.5 GT/s 2 = 5.0 GT/s Any higher value will automatically be downgraded to 5.0 GT/s This attribute sets the basic PCIe device information. See https://pcisig.com/sites/default/files/files/PCI_Code-ID_r_1_11__v24_Jan_2019.pdf for details on the fields. It is a 32 bit word that consists of 4 fields of 8 bit each that encodes: device base class code (at bit offset 24) device sub class code (at bit offset 16) device programming interface (at bit offset 8) device programming interface revision id (at bit offset 0) This attribute sets the PCIe device ID information. It consists of a 64 bit word that hold 4 16 bit fields: device id (bit offset 0) vendor id (bit offset 16) subsystem device id (bit offset 32) subsystem vendor id (bit offset 48) This attribute sets the PCIe device Base Address Register information. The layout consists of 10 32 bit words like this: bar0 address bar1 address bar2 address bar3 address bar4 address bar5 address bar0 size bar1 size bar2 size bar3 size bar4 size bar5 size If both BAR address and size are 0 then a suitable default will be used instead. If a BAR address is non-zero and the size is zero then the BAR is disabled. If a BAR address and size both are non-zero then these will configure the BAR. This 8 byte attribute consists of a set of bitfields that are programmed in the factory at production time, based on measurements on the device. These values will be read at boot and applied as 'corrections' to various hardware features. This is the table of bitfields in the TRIM attribute: Bits Name Description 63:43 Reserved Not programmed 42:37 UVOV_GPIOB_TRIM Trimming value for UVOV_GPIOB. Corresponding register: UVOV:UVOV_CFG[0] 36:31 UVOV_BOOT_TRIM Trimming value for UVOV_BOOT. Corresponding register: UVOV:UVOV_CFG[1] 30:25 UVOV_RGMII_TRIM Trimming value for UVOV_RGMII. Corresponding register: UVOV:UVOV_CFG[4] 24:19 UVOV_GPIOA_TRIM Trimming value for UVOV_GPIOA. Corresponding register: UVOV:UVOV_CFG[5] In LAN966x FW_CONFIG is a binary blob, created during firmware compilation. The format of the blob is as follows: Byte range Size Description =========== ====== ================== 0x000-0x17F 0x0180 OTP-Emulation data 0x180-0x1FF 0x0080 Config space The image must at-least be at 512 (0x200) bytes. Only the first 512 bytes are used by BL1. The image can be extended at a later point in time, but this will only affect the BL2 usage. The OTP Emulation portion is covered in details in the OTP Emulation section. The content of the configuration space is generated based on the content from the scripts/fw_data.yaml file. - field: LAN966X_FW_CONF_MMC_CLK_RATE size: 32 value: 25000000 - field: LAN966X_FW_CONF_MMC_BUS_WIDTH size: 8 value: 0 # MMC_BUS_WIDTH_4 - field: LAN966X_FW_CONF_QSPI_CLK size: 8 value: 30 - field: LAN966X_FW_CONF_MMC_SPEED_MODE size: 8 value: 3 # SDMMC_TIMING_HS - field: LAN966X_FW_CONF_MMC_TX_TUNING_PHASE size: 8 value: 12 # Maserati HW Tx phase default value OTP Emulation is a facility to experiment with OTP settings, without making them permanent. The settings are stored in flash memory, and logical or-ed with the data from the HW OTP. If the HW OTP is empty (all zeros), then all bits can be emulated. The OTP emulation loads data from the FW_CONFIG_ID image. This feature is intended for 2 scenarios: Developers wanting to try out many different OTP configurations, but only having a limited amount of boards: OTP emulation makes it possible to test many new sets of configurations before selecting the optimal set. Users that are about to program the OTP, but want to test out the settings before committing changes that cannot be reversed. The OTP emulation data can be comitted using the fwu.html tool, or manually applied using the Linux otp command. Only the fields marked in the EMU column in the OTP attributes table can be emulated. Loading the FW_CONFIG_ID image is tricky because: When the board is provisioned for secure boot, this image must be authenticated. This image includes OTP emulation data, which may influence if the board shall be considered as provisioned for secure boot. The procedure to load this image is illustrated at the figure below: To ensure that keys are kept private, and that the execution of BL1, BL2 and BL32 cannot be tampered with these images must be run from secure memory. LAN966x have 128kb of on-chip SRAM (Secure RAM), and on-the-fly DDR memory encryption. BL1 executes from ROM directly, but uses the SRAM for static RW data and stack. BL1 will then load BL2 from flash memory into SRAM, and BL2 will then execute from SRAM and also use it for its static RW data and stack. BL2 will initialize the DDR memory, and setup a secure and a non-secure partition. The secure partition uses on-the-fly DDR encryption, and can only be accessed from the secure world. Once completed the BL2 loads the BL32 from flash memory into the secure DDR memory. DDR encryption causes a longer latency to the DDR memory, and is therefore not used for the entire DDR memory. BL32, which is executing from secure DDR memory, will then wipe the contents of the SRAM, and reconfigure the Trust Zone Controller to let all of the SRAM be accessible from the Non-Secure world. This is important for users of the RTE, as the RTE feature needs access to the SRAM. LAN966x supports a secure JTAG port which is configured via the SECURE_JTAG OTP attribute. The data-sheet documents the encoding of SECURE_JTAG. Once programmed the JTAG port HW will wake up in one of the following modes: Open: The JTAG port is operating normally. Secure mode 1: The JTAG port will respond to a boundary scan, but is otherwise unresponsive (locked down). In this mode it is possible to unlock the port (move the JTAG port to the open state) using a challenge-response mechanism running over JTAG. Secure mode 2: The JTAG port will be completely unresponsive (locked down). In this mode it is possible to unlock it (move it to open state) using a challenge-response mechanism running over JTAG. Closed: The JTAG port is disabled and cannot be enabled. If one of the secure-modes is enabled, then the JTAG port can be unlocked using a challenge/response. The challenges is a random 32 byte blob generated by the LAN996x device, and the response to unlock is a sha256(challenge-data OTP_SJTAG_SSK) (where OTP_SJTAG_SSK is the content of the OTP field, and + is a concatenation of the 2 blobs). The scripts/sjtag-challenge.rb in the TF-A repository can be used to calculate the response to a challenge. The fwu.html tool can be used to generate the challenge and unlock the JTAG port if the correct response is given. Unlock from Linux can be done using the instructions here. The TF-A project for LAN966x provides a template to lower the effort to build a set of secure artifacts. But the deliverables from Microchip are from an open and transparent system, which with a few changes can be turned into a secure set of artifacts. Following is a set of guidelines on how to turn the open-system into a set of secure boot artifacts: Understand what you are doing, and do not blindly trust us. Generate new keys and keep the private and the shared/symmetric keys secret (but still available as they will be needed to build potential new versions). Review how keys are generated, and evaluate if the methods provided in here are good enough for you need. How to keep keys secret is beyond the scope of this document, but look for good praxis in the industry. Use the certificate hierarchy to limit the exposure of the private keys. The root-of-trust should only be used very rarely and can be kept offline. Only increment the NV counters when a released version poses a security breach. The BL2U functionality provided in this project is a potential security breach, as it can expose the content of the OTP. Do one of the following: Change it to make it such that it will not be able to dump the OTP content. Do not generate it (delete it after each build). Treat it as a shared/symmetric key as it can be used to read out the keys from OTP. Do not give it to anyone who do not have these keys already. To build a secure product the manufacturing procedure must include the steps to program the OTP with needed keys and settings. A pre-request for this is to generate the keys and secure artifacts as explained in Secure artifacts Move to a trusted environment, where private and shared keys can be handled without risk of leaks. Initialize the OTP with the following content (either via BL2U / fwu.html or my using the otp Linux user-space utility. Regions must be defined (program PROTECT_REGION_ADDR) Following keys shall be programmed with the prepared content: OTP_TBBR_ROTPK, OTP_TBBR_SSK and OTP_SJTAG_SSK. Enable secure JTAG by programming SECURE_JTAG. Program the OTP_TBBR_HUK with unknown random data. Optional: disable any strap modes not needed by writing OTP_STRAP_DISABLE_MASK. Write protect region 4 by updating the content of PROTECT_OTP_WRITE. IMPORTANT: This is not only for write-protect, this is also needed to prevent non-secure read-access of region 4. NOTE: Additional regions can be write protected, but region 5 must remain writeable! Provision the firmware image in flash as needed. AES Advanced Encryption Standards ATE Automatic Test Equipment. Device used in SoC production and test. BL1 Boot Loader 1: In secure immutable ROM (Trusted ROM Firmware) BL2 Boot Loader 2: In secure on-chip RAM, temporary (Trusted Boot Firmware) BL31 Boot Loader 31: Resident secure services (ARM v8) BL32 Boot Loader 32: Resident secure services (ARM v7) BL33 Boot Loader 33: Typically U-Boot. trusted Firmware) BSSK Binding Secret Symmetric Key DT Device Tree eMMC Embedded MultiMediaCard FIP Firmware Image Package FIT Flattened Image Tree GPT GUID Partition Table HUK Hardware Unique Key JTAG Joint Test Action Group, interface for testing and debugging NS Non-Secure World OP-TEE Open Portable Trusted Execution Environment OS Operation System OTP One-Time-Programmable Memory PCIe Peripheral Component Interconnect Express PSCI Power State Coordination Interface RNG Random Number Generator ROT Root of Trust RTE Real-Time Engine. Device used for real-time equipment control. RTL Register-Transfer Level S Secure World SD-Card Secure Digital Card SHA Secure Hash Algorithm family SJTAG Secure JTAG SPI Serial Peripheral Interface SRAM Secure Ram SSK Secret Symmetric Key TBBR Trusted Board Boot Requirements TF-A Trusted Firmware for ARM UART Universal Asynchronous Receiver-Transmitter This document is provided under the BSP-3-Clause license (where swoftware is replaced with document). The BSD-3-Clause license has been chosen here as it is the same license used by the TF-A project. Here is the license covering this file/document: Copyright (c) 2022, Microchip Technology Inc. and its subsidiaries. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. - Neither the name of Arm nor the names of its contributors may be used to endorse or promote products derived from this document without specific prior written permission. THIS DOCUMENT IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS DOCUMENT, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"LAN966x Secure Boot","component":"bsp","version":"2024.03","name":"lan966x-tfa","url":"/bsp/2024.03/supported-hw/lan966x-tfa.html","titles":[{"text":"Introduction","hash":"_introduction","id":1},{"text":"TF-A architecture","hash":"_tf_a_architecture","id":2},{"text":"TF-A Bootloaders (BLx)","hash":"_tf_a_bootloaders_blx","id":3},{"text":"Firmware Image Package (FIP)","hash":"_firmware_image_package_fip","id":4},{"text":"FIP Image IDs","hash":"_fip_image_ids","id":5},{"text":"Getting started with TF-A for LAN966x","hash":"_getting_started_with_tf_a_for_lan966x","id":6},{"text":"Build environment","hash":"_build_environment","id":7},{"text":"Getting sources and releases","hash":"_getting_sources_and_releases","id":8},{"text":"Building","hash":"_building","id":9},{"text":"Platform selection","hash":"_platform_selection","id":10},{"text":"BL33 content","hash":"_bl33_content","id":11},{"text":"Loading FIT/ITBs as BL33","hash":"_loading_fititbs_as_bl33","id":12},{"text":"Configuration selection","hash":"_configuration_selection","id":13},{"text":"Device Tree modifications","hash":"_device_tree_modifications","id":14},{"text":"Authentication keys","hash":"_authentication_keys","id":15},{"text":"Rollback protection (NV-Counters)","hash":"_rollback_protection_nv_counters","id":16},{"text":"Image encryption","hash":"_image_encryption","id":17},{"text":"Image generation","hash":"_image_generation","id":18},{"text":"TF-A in Details","hash":"_tf_a_in_details","id":19},{"text":"Certificate hierarchy","hash":"_certificate_hierarchy","id":20},{"text":"Revocation and Rollback protection","hash":"_revocation_and_rollback_protection","id":21},{"text":"Image signing in details","hash":"_image_signing_in_details","id":22},{"text":"BL1 Chain of Trust verification","hash":"_bl1_chain_of_trust_verification","id":23},{"text":"BL2 Chain of Trust verification","hash":"_bl2_chain_of_trust_verification","id":24},{"text":"Firmware encryption","hash":"_firmware_encryption","id":25},{"text":"LAN966x TF-A Platform support","hash":"_lan966x_tf_a_platform_support","id":26},{"text":"Strapping modes","hash":"_strapping_modes","id":27},{"text":"Booting from MMC (0000, 0010, 0011  and 0101)","hash":"_booting_from_mmc_0000_0010_0011_and_0101","id":28},{"text":"Booting from NOR (0001 and 0100)","hash":"_booting_from_nor_0001_and_0100","id":29},{"text":"PCIe End Point (0101)","hash":"_pcie_end_point_0101","id":30},{"text":"TF-A Monitor (1000)","hash":"_tf_a_monitor_1000","id":31},{"text":"SPI Client (1111)","hash":"_spi_client_1111","id":32},{"text":"OTP","hash":"_otp","id":33},{"text":"OTP Regions","hash":"_otp_regions","id":34},{"text":"OTP attributes","hash":"_otp_attributes","id":35},{"text":"OTP attribute: OTP_STRAP_DISABLE_MASK","hash":"_otp_attribute_otp_strap_disable_mask","id":36},{"text":"OTP attribute: OTP_PCIE_FLAGS","hash":"_otp_attribute_otp_pcie_flags","id":37},{"text":"OTP attribute: OTP_PCIE_DEV","hash":"_otp_attribute_otp_pcie_dev","id":38},{"text":"OTP attribute: OTP_PCIE_ID","hash":"_otp_attribute_otp_pcie_id","id":39},{"text":"OTP attribute: OTP_PCIE_BARS","hash":"_otp_attribute_otp_pcie_bars","id":40},{"text":"OTP attribute: TRIM","hash":"_otp_attribute_trim","id":41},{"text":"Firmware Config (FW_CONFIG)","hash":"_firmware_config_fw_config","id":42},{"text":"OTP Emulation","hash":"_otp_emulation","id":43},{"text":"Loading of FW_CONFIG_ID","hash":"_loading_of_fw_config_id","id":44},{"text":"Secure RAM","hash":"_secure_ram","id":45},{"text":"Secure JTAG","hash":"_secure_jtag","id":46},{"text":"Guidelines for preparing secure artifacts","hash":"secureartifacts","id":47},{"text":"Guideline Secure provisioning","hash":"_guideline_secure_provisioning","id":48},{"text":"TERMS and ABBREVIATIONS","hash":"term","id":49},{"text":"License","hash":"_license","id":50}]},"147":{"id":147,"text":"Using the PSCI/SMCCC interface available in Linux along with the mchp_tfa_ctl driver, it is possible to control the following features of TFA firmware: Secure JTAG Firmware encryption with BSSK key See also PSCI documentation Following kernel config options should be enabled to use TFA_CTL interface CONFIG_MCHP_TFA_CTL - tfa_ctl driver config option. The option is enabled by default. The option will select these related kernel options CONFIG_ARM_PSCI CONFIG_CRYPTO_SHA256 There is no device tree node for the driver itself, but it requires that the psci node is present. / { ... psci { compatible = \"arm,psci-1.0\"; method = \"smc\"; }; ... }; First, you should ensure you have booted a Linux kernel with the mchp_tfa_ctl driver. You can do so by grepping the dmesg kernel log and/or querying sysfs: # dmesg | grep tfa_ctl [ 0.148936] tfa_ctl: PSCI driver v.0.0.0 # ls -l /sys/class/misc/tfa_ctl/ total 0 -r--r--r-- 1 root root 4096 Jan 1 00:01 dev -rw-r--r-- 1 root root 0 Jan 1 00:01 fw_bind --w------- 1 root root 0 Jan 1 00:01 fw_bind_trigger drwxr-xr-x 2 root root 0 Jan 1 00:01 power --w------- 1 root root 32 Jan 1 00:01 sjtag_key -r--r--r-- 1 root root 8 Jan 1 00:01 sjtag_status --w------- 1 root root 0 Jan 1 00:01 sjtag_unlock lrwxrwxrwx 1 root root 0 Jan 1 00:01 subsystem -> ../../../../class/misc -rw-r--r-- 1 root root 4096 Jan 1 00:01 uevent A good place to start is to ensure that SJTAG is enabled. You can do so by reading the sjtag_status file. It contains the two SJTAG registers: CTL and INT_STATUS: # od -t x4 /sys/class/misc/tfa_ctl/sjtag_status 0000000 0000024d 00000000 0000010 Here, the 0x24d value (b'001001001101') is a typical value for when SJTAG is enabled in mode 1. Refer to the register list for details. To do a proper unlock, you must provide the (binary) 32-byte SJTAG key in the write-only file sjtag_key. The default value is all zeroes. After writing the key, you can trigger an unlock by writing (anything) to the sjtag_unlock file, as below. The return value from the write signal the result of the unlock operation. # cd /tmp # dd if=/dev/zero of=key count=1 bs=32 1+0 records in 1+0 records out # dd if=key of=/sys/class/misc/tfa_ctl/sjtag_key 0+1 records in 0+1 records out # echo 1 > /sys/class/misc/tfa_ctl/sjtag_unlock # # od -t x4 /sys/class/misc/tfa_ctl/sjtag_status 0000000 00000847 00000000 0000010 After unlocking, the value 0x847 indicates that the SJTAG is now unlocked. You should now be able to attach a JTAG interface. In this context Firmware Binding descibes the operation of taking a firmware image encrypted with the SSK key, decrypting and re-encrypting with the BSSK instead. As the BSSK is a device-local, unique key, this ensures that the firmware cannot be reproduced. (Note that the BSSK is derived from the HUK key). The firmware binding process is able to use OTP emulation data, if this is deployed. If not, the binding will use the OTP data directly. Firmware binding requires the SSK and BSSK for decryption and encryption. These may be any binary value (32 bytes long). The firmware binding is done using a sysfs file as holding bay for the image, and a sysfs to trigger the actual bind operation. The commands below illustrate taking an SSK encrypted image off the MMC and re-encrypting with the BSSK key. # cd /tmp # dd if=/dev/mmcblk0p1 of=data sha256sum data dd if=data of=/sys/class/misc/tfa_ctl/fw_bind bs=1k echo 1 > /sys/class/misc/tfa_ctl/fw_bind_trigger dd if=/sys/class/misc/tfa_ctl/fw_bind of=bound bs=1k 2048+0 records in 2048+0 records out # sha256sum data sha256sum bound 559a603550297e47a83fa2a9a42c4cb3216e8588d68ae488dc511abc6025ca88 data # dd if=data of=/sys/class/misc/tfa_ctl/fw_bind bs=1k 1024+0 records in 1024+0 records out # echo 1 > /sys/class/misc/tfa_ctl/fw_bind_trigger # dd if=/sys/class/misc/tfa_ctl/fw_bind of=bound bs=1k 1024+0 records in 1024+0 records out # sha256sum bound 41d6f577e343c81cbd05552c8bc2408e99815d41683e98873acedbe7b8f197ca bound As can be seen, the firmware binding will not change the size of the image, but it will change the image data. After a successful operation, the image may now be written to the boot media of choice. If the operation fails, the fw_bind_trigger write will fail. The kernel log will provide information about the problem. # echo 1 > /sys/class/misc/tfa_ctl/fw_bind_trigger sh: write error: Input/output error # dmesg | tail -1 [ 3357.425863] misc tfa_ctl: tfa_ctl: Bind failed: 0xffffffec The error codes are described here: 0xfffffff0 FW_FIP_HDR Header check of FIP failed 0xffffffef FW_FIP_ALIGN FIP needs to be produced with FIP_ALIGN 0xffffffee FW_FIP_INCOMPLETE FIP is incomplete (truncated, garbled) 0xffffffed FW_TOC_TERM_MISSING FIP does not have a ToC terminator entry 0xffffffec FW_NOT_SSK_ENCRYPTED FIP must be encrypted with SSK 0xffffffeb FW_SSK_FAILURE Failed to obtain SSK key 0xffffffea FW_DECRYPT Failed to decrypt FIP image 0xffffffe9 FW_BSSK_FAILURE Failed to obtain BSSK key 0xffffffe8 FW_ENCRYPT Failed to encrypt FIP image The firmware image use memory resources until purged from the fw_bind sysfs file. The purge is done by writing an empty image to the file. # dd if=/dev/null of=/sys/class/misc/tfa_ctl/fw_bind 0+0 records in 0+0 records out","title":"LAN966x TFA_CTL","component":"bsp","version":"2024.03","name":"lan966x-tfa_ctl","url":"/bsp/2024.03/supported-hw/lan966x-tfa_ctl.html","titles":[{"text":"SoC Resources","hash":"_soc_resources","id":1},{"text":"Kernel configurations","hash":"_kernel_configurations","id":2},{"text":"Devicetree Configuration","hash":"_devicetree_configuration","id":3},{"text":"Using the TFA_CTL driver","hash":"_using_the_tfa_ctl_driver","id":4},{"text":"Controlling SJTAG","hash":"_controlling_sjtag","id":5},{"text":"Firmware Binding","hash":"_firmware_binding","id":6}]},"148":{"id":148,"text":"LAN966x SoC supports one instance of the UDPHS (USB High Speed Device Port) controller. Following kernel config options should be enabled to use LAN966x UDPHS: CONFIG_USB_GADGET - USB gadget config option CONFIG_USB_ATMEL_USBA - LAN966x USB device driver config option If using a static built-in gadget, the gadget choosen from a precomposed one provided by the kernel must be enabled. For instance, if you need the serial over USB gadget: CONFIG_USB_G_SERIAL - USB serial gadget config option This is the default option used by the kernels that are provided by the BSP. If using a gadget configured from the user-space using ConfigFS. The USB functions used must be enabled. CONFIG_USB_CONFIGFS - USB ConfigFS config option USB_CONFIGFS_ACM - USB CDC-ACM (serial overs USB) config option When a built-in gadget is used, it cannot be overriden from the user-space by an ConfigFS one. The Serial USB gadget can be used as a kernel console. CONFIG_U_SERIAL_CONSOLE - USB serial as a kernel console config option To activate the console on the USB serial gadget the kernel parameter console=ttyGS0,115200 must be present. Kernel messages can be available on the USB serial gadget with CONFIG_U_SERIAL_CONSOLE enabled. Kernel boot messages are only available if the built-in gadget is used. If a ConfigFS gadget is used, only messages sent by the Kernel after the ConfigFS setup from user-space will be available. Make sure that on the Host PC, ModemManager daemon is disabled, otherwise on the console will be printed some unexpected characters. To enable LAN966x UDPHS, following configurations are required in device tree: compatible string must be set to microchip,lan9662-udc and atmel,sama5d3-udc as a fallback. reg property must be set to and . interrupts property must be set to . clocks property must be set to , . clock-names must be set to pclk and hclk. Atmel High-Speed USB device controller DT Documentation Following example shows how the LAN966x UDPHS controller should be defined in DT: dtsi file: udc: usb@e0808000 { compatible = \"microchip,lan9662-udc\", \"atmel,sama5d3-udc\"; reg = , ; interrupts = ; clocks = , ; clock-names = \"pclk\", \"hclk\"; status = \"disabled\"; }; dts file changes: &gpio { udc_pins: ucd-pins { /* VBUS_DET B */ pins = \"GPIO_8\"; function = \"usb_slave_b\"; }; }; &udc { pinctrl-0 = ; pinctrl-names = \"default\"; atmel,vbus-gpio = ; status = \"okay\"; }; If a built-in USB gadget is used, the USB gadget functionnality is present without particular settings. For instance, with the Serial USB gadget, /dev/ttyGS0 is available on the target. With the Ethernet USB gadget, ip link command lists the interface, usually usb0. On the host side, the USB device is enumerated and available. For instance, with the Serial USB gadget, /dev/ttyACM0 is present. Using a ConfigFS gadget needs some settings from the user-space. Here is a example showing how to setup the CDC-ACM (serial over USB) gadget. # load libcomposite module. modprobe libcomposite # mount configfs mkdir -p /tmp/config mount none -t configfs /tmp/config # Create gadget mkdir /tmp/config/usb_gadget/my_gadget cd /tmp/config/usb_gadget/my_gadget # Set Vendor and Product IDs (Should be set to real values) echo \"0xabcd\" > idVendor echo \"0x1234\" > idProduct # Set serial number, manufacturer and product string mkdir strings/0x409 echo SN000000 > strings/0x409/serialnumber echo Microchip > strings/0x409/manufacturer echo LAN966x > strings/0x409/product # Create the configuration mkdir configs/c.1 mkdir configs/c.1/strings/0x409 echo Configuration > configs/c.1/strings/0x409/configuration # Set some configuration attributes echo 120 > configs/c.1/MaxPower # Create the function mkdir functions/acm.usb0 # Associate the function with the configuration ln -s functions/acm.usb0 configs/c.1 # Enable the gadget echo 200000.usb > UDC The available UDC devices that can be used to enable the gadget can be found using ls /sys/class/udc/. After the execution of these commands, the '/dev/ttyGS0' appears on the target. On the host side, the device is enumerated. $ dmesg ... [349700.188862] usb 3-4.4.3: new high-speed USB device number 64 using xhci_hcd [349700.266456] usb 3-4.4.3: New USB device found, idVendor=abcd, idProduct=1234, bcdDevice= 5.17 [349700.266468] usb 3-4.4.3: New USB device strings: Mfr=1, Product=2, SerialNumber=3 [349700.266471] usb 3-4.4.3: Product: LAN966x [349700.266474] usb 3-4.4.3: Manufacturer: Microchip [349700.266476] usb 3-4.4.3: SerialNumber: SN000000 [349700.273296] cdc_acm 3-4.4.3:1.0: ttyACM0: USB ACM device ... Linux USB gadget configured through configfs Gadget Testing At startup a shell can be attached to the USB serial device. This can be done adding the following line in /etc/inittab ttyGS0::respawn:/sbin/getty -L ttyGS0 0 vt100 or any other configuration settings depending on your init system (busybox init, systemd, …​) related to TTY shell configuration.","title":"LAN966x UDPHS","component":"bsp","version":"2024.03","name":"lan966x-udphs","url":"/bsp/2024.03/supported-hw/lan966x-udphs.html","titles":[{"text":"SoC Resources","hash":"_soc_resources","id":1},{"text":"Kernel configurations","hash":"_kernel_configurations","id":2},{"text":"Built-in USB gadget","hash":"_built_in_usb_gadget","id":3},{"text":"ConfigFS USB gadget","hash":"_configfs_usb_gadget","id":4},{"text":"Kernel console on Serial USB gadget","hash":"_kernel_console_on_serial_usb_gadget","id":5},{"text":"Devicetree Configuration","hash":"_devicetree_configuration","id":6},{"text":"References","hash":"_references","id":7},{"text":"Example","hash":"_example","id":8},{"text":"UserSpace","hash":"_userspace","id":9},{"text":"ConfigFS gadget","hash":"_configfs_gadget","id":10},{"text":"References","hash":"_references_2","id":11},{"text":"Attach a shell to the USB serial device.","hash":"_attach_a_shell_to_the_usb_serial_device","id":12}]},"149":{"id":149,"text":"LAN966X SoC have 5 FLEXCOMs(Flexible Serial Communication Controller). In order to use flexcom USART interface, a specific flexcom should be configured in USART mode. Following kernel config options should be enabled to use LAN966x flexcom USART interface: CONFIG_MFD_AT91_USART - USART driver config option. To use Flexcom USART interface, following configurations are required in device tree. Each of the flexcom flx0, flx1, flx2, flx3 and flx4 nodes can be configured in USART mode ATMEL_FLEXCOM_MODE_USART to use USART interface. compatible string must be set to atmel,at91sam9260-usart. reg property must be set with register address and length as . GPIO pins for TXD and RXD pins should be configured to pinctrl-0 property. Also add cts and rts pins, if present. List of possible TXD and RXD pin mappings are as in below table: FLEXCOM Node DT RXD node RXD pin DT TXD node TXD pin flx0 fc0_a_rxd_pins GPIO9 fc0_a_txd_pins GPIO10 flx0 fc0_b_rxd_pins GPIO25 fc0_b_txd_pins GPIO26 flx0 fc0_c_rxd_pins GPIO62 fc0_c_txd_pins GPIO63 flx1 fc1_a_rxd_pins GPIO12 fc1_a_txd_pins GPIO13 flx1 fc1_b_rxd_pins GPIO34 fc1_b_txd_pins GPIO35 flx1 fc1_c_rxd_pins GPIO47 fc1_c_txd_pins GPIO48 flx2 fc2_a_rxd_pins GPIO15 fc2_a_txd_pins GPIO16 flx2 fc2_b_rxd_pins GPIO44 fc2_b_txd_pins GPIO45 flx3 fc3_a_rxd_pins GPIO18 fc3_a_txd_pins GPIO19 flx3 fc3_b_rxd_pins GPIO52 fc3_b_txd_pins GPIO53 flx3 fc3_c_rxd_pins GPIO31 fc3_c_txd_pins GPIO32 flx4 fc4_a_rxd_pins GPIO21 fc4_a_txd_pins GPIO22 flx4 fc4_b_rxd_pins GPIO57 fc4_b_txd_pins GPIO58 flx4 fc4_c_rxd_pins GPIO65 fc4_c_txd_pins GPIO66 interrupts property must set with interrupt details. Interrupt number[CPU INTR] corresponding to a flexcom must be configured as defined in below table: FLEXCOM ID Shared Peripheral Interrupt CPU INTR flx0 80 48 flx1 81 49 flx2 82 50 flx3 83 51 flx4 84 52 Note that Shared peripheral interrupt lines start at index ID32. So, CPU INTR must be calculated as [Shared peripheral interrupt number - 32]. Input clock clocks property must be set to &nic_clk. Note that NIC clock(200Mhz) is clock used by AXI, AHB fabric and APB bridges which connects all th peripherals. clock-names must be set to usart. GPIO flexcom shared pins should be configured as per board design. Following example shows how a flexcom USART should be defined in PCB8291 DT. On PCB8291, Flexcom3 USART is used as console. chosen { stdout-path = \"serial1:115200n8\"; }; aliases { serial0 = &usart0; serial1 = &usart3; }; &flx0 { atmel,flexcom-mode = ; status = \"okay\"; usart0: serial@200 { compatible = \"atmel,at91sam9260-usart\"; reg = ; interrupts = ; clocks = ; clock-names = \"usart\"; pinctrl-0 = , ; pinctrl-names = \"default\"; atmel,fifo-size = ; status = \"okay\"; }; }; &flx3 { atmel,flexcom-mode = ; status = \"okay\"; usart3: serial@200 { compatible = \"atmel,at91sam9260-usart\"; reg = ; interrupts = ; clocks = ; clock-names = \"usart\"; pinctrl-0 = , ; pinctrl-names = \"default\"; atmel,fifo-size = ; status = \"okay\"; }; }; Check if a tty device is created in /dev/ directory. This can be also be verified by executing dmesg | tail (on host PC) once the board is powered-up. Connect to console using minicom -s /dev/ttyACM0 Following demonstrates above DT flexcom examples on PCB8291 board: . Flexcom3, which is being used as console. . Flexcom0, which is standalone uart device. In order to use flexcom3 USART as console, add console=ttyS1,115200 to uboot bootargs environment variable and pass it to the kernel, then this usart will become the console. First identify and connect to /dev/ttyACMx (Here x is port number) on Host machine. For Linux users, minicom application can be used to connect to console. # dmesg | tail [1043817.472935] usb 3-9: USB disconnect, device number 33 [1043817.762295] debugfs: Directory '09' with parent 'devices' already present! [1043817.890248] usb 3-9: new high-speed USB device number 35 using xhci_hcd [1043818.038704] usb 3-9: New USB device found, idVendor=03eb, idProduct=6124, bcdDevice= 1.10 [1043818.038707] usb 3-9: New USB device strings: Mfr=0, Product=0, SerialNumber=0 [1043818.039989] cdc_acm 3-9:1.0: ttyACM0: USB ACM device [1043818.230372] igb 0000:01:00.0 eth10: igb: eth10 NIC Link is Down [1043822.614597] igb 0000:01:00.0 eth10: igb: eth10 NIC Link is Up 1000 Mbps Full Duplex, Flow Control: RX/TX # # minicom -s /dev/ttyACM0 [? Trying to boot from SPI U-Boot 2019.04-linux4sam_6.2-icp-00228-g2bdd7b58fc-dirty (Apr 28 2021 - 08:28:52 +0200) CPU: SAMA7 Crystal frequency: 0 MHz CPU clock : 0 MHz Master clock : 0 MHz DRAM: 1 GiB lan966x_pinctrl_probe done 0 MMC: sdhci-host@e0830000: 0, emmc@e0830000: 1 Loading Environment from SPI Flash... SF: Detected sst26vf016b with page size 256 Bytes, erase size 4 KiB, total 2 MiB OK In: serial Out: serial Err: serial Net: Warning: switch@0 (eth0) using random MAC address - a2:17:30:13:8a:46 eth0: switch@0 m => dhcp 0x64000000 fit_icpu.itb BOOTP broadcast 1 BOOTP broadcast 2 BOOTP broadcast 3 DHCP client bound to address 10.99.10.174 (940 ms) Using switch@0 device TFTP from server 10.99.10.1; our IP address is 10.99.10.174 Filename 'fit_icpu.itb'. Load address: 0x64000000 LoadingiB/s done Bytes transferred = 17356055 (108d517 hex) m => printenv baudrate=115200 bootargs=console=ttyS1,115200 root=/dev/ram0 loglevel=7 uio_pdrv_genirq.of_id=generic-uio bootdelay=3 bootfile=fit_icpu_build_623.itb dnsip=10.99.10.1 ethact=switch@0 fdt_high=0xffffffff fdtcontroladdr=9fb7e068 fileaddr=64000000 filesize=108d517 gatewayip=10.99.10.1 initrd_high=0xffffffff ipaddr=10.99.10.174 netmask=255.255.255.0 serverip=10.99.10.1 Environment size: 369/65532 bytes m => bootm 0x64000000#lan9662_ung8291_0_at_lan966x ## Loading kernel from FIT Image at 64000000 ... Using 'lan9662_ung8291_0_at_lan966x' configuration Trying 'kernel' kernel subimage Description: Kernel Type: Kernel Image Compression: gzip compressed Data Start: 0x640000c8 Data Size: 4114018 Bytes = 3.9 MiB Architecture: ARM OS: Linux Load Address: 0x60208000 Entry Point: 0x60208000 Verifying Hash Integrity ... OK ## Loading ramdisk from FIT Image at 64000000 ... Using 'lan9662_ung8291_0_at_lan966x' configuration Trying 'ramdisk' ramdisk subimage Description: Ramdisk Type: RAMDisk Image Compression: uncompressed Data Start: 0x64404c74 Data Size: 13139968 Bytes = 12.5 MiB Architecture: ARM OS: Linux Load Address: 0x68000000 Entry Point: unavailable Verifying Hash Integrity ... OK Loading ramdisk from 0x64404c74 to 0x68000000 ## Loading fdt from FIT Image at 64000000 ... Using 'lan9662_ung8291_0_at_lan966x' configuration Trying 'fdt_lan9662_ung8291_0_at_lan966x' fdt subimage Description: Flattened Device Tree Type: Flat Device Tree Compression: uncompressed Data Start: 0x643ec7f4 Data Size: 18808 Bytes = 18.4 KiB Architecture: ARM Load Address: 0x67e00000 Verifying Hash Integrity ... OK Loading fdt from 0x643ec7f4 to 0x67e00000 Booting using the fdt blob at 0x67e00000 Uncompressing Kernel Image ... OK Using Device Tree in place at 67e00000, end 67e07977 Starting kernel ... [ 0.000000] Booting Linux on physical CPU 0x0 [ 0.000000] Linux version 5.15.25-18810-g70353fd4af6b-dirty (root@kavya-HP-Compaq-6000-Pro-SFF-PC) (arm-linux-gnueabi-gcc (Ubuntu/L2 [ 0.000000] CPU: ARMv7 Processor [410fc075] revision 5 (ARMv7), cr=10c5387d [ 0.000000] CPU: div instructions available: patching division code [ 0.000000] CPU: PIPT / VIPT nonaliasing data cache, VIPT aliasing instruction cache [ 0.000000] OF: fdt: Machine model: Microchip EVB - LAN9662 [ 0.000000] Memory policy: Data cache writealloc [ 0.000000] cma: Reserved 128 MiB at 0x98000000 [ 0.000000] Zone ranges: [ 0.000000] Normal [mem 0x0000000060000000-0x000000008fffffff] [ 0.000000] HighMem [mem 0x0000000090000000-0x000000009fffffff] [ 0.000000] Movable zone start for each node [ 0.000000] Early memory node ranges [ 0.000000] node 0: [mem 0x0000000060000000-0x000000009fffffff] [ 0.000000] Initmem setup node 0 [mem 0x0000000060000000-0x000000009fffffff] [ 0.000000] percpu: Embedded 11 pages/cpu s14668 r8192 d22196 u45056 [ 0.000000] Built 1 zonelists, mobility grouping on. Total pages: 260608 [ 0.000000] Kernel command line: console=ttyS1,115200 root=/dev/ram0 loglevel=7 uio_pdrv_genirq.of_id=generic-uio [ 0.000000] Dentry cache hash table entries: 131072 (order: 7, 524288 bytes, linear) [ 0.000000] Inode-cache hash table entries: 65536 (order: 6, 262144 bytes, linear) [ 0.000000] mem auto-init: stack:off, heap alloc:off, heap free:off [ 0.000000] Memory: 888780K/1048576K available (8192K kernel code, 608K rwdata, 2928K rodata, 1024K init, 185K bss, 28724K reserved) [ 0.000000] rcu: Hierarchical RCU implementation. [ 0.000000] rcu: RCU event tracing is enabled. [ 0.000000] rcu: RCU restricting CPUs from NR_CPUS=4 to nr_cpu_ids=1. [ 0.000000] rcu: RCU calculated value of scheduler-enlistment delay is 10 jiffies. [ 0.000000] rcu: Adjusting geometry for rcu_fanout_leaf=16, nr_cpu_ids=1 [ 0.000000] NR_IRQS: 16, nr_irqs: 16, preallocated irqs: 16 [ 0.000000] random: get_random_bytes called from start_kernel+0x40c/0x628 with crng_init=0 [ 0.000000] arch_timer: cp15 timer(s) running at 37.50MHz (virt). [ 0.000000] clocksource: arch_sys_counter: mask: 0xffffffffffffff max_cycles: 0x8a60dd6a9, max_idle_ns: 440795204056 ns [ 0.000002] sched_clock: 56 bits at 37MHz, resolution 26ns, wraps every 2199023255540ns [ 0.000030] Switching to timer-based delay loop, resolution 26ns [ 0.001238] Console: colour dummy device 80x30 [ 0.001319] Calibrating delay loop (skipped), value calculated using timer frequency.. 75.00 BogoMIPS (lpj=375000) [ 0.001351] pid_max: default: 32768 minimum: 301 [ 0.001578] Mount-cache hash table entries: 2048 (order: 1, 8192 bytes, linear) [ 0.001613] Mountpoint-cache hash table entries: 2048 (order: 1, 8192 bytes, linear) [ 0.002610] CPU: Testing write buffer coherency: ok [ 0.002979] CPU0: update cpu_capacity 1024 [ 0.003007] CPU0: thread -1, cpu 0, socket 0, mpidr 80000000 [ 0.003788] Setting up static identity map for 0x60100000 - 0x60100078 [ 0.003978] rcu: Hierarchical SRCU implementation. [ 0.005018] smp: Bringing up secondary CPUs ... [ 0.005048] smp: Brought up 1 node, 1 CPU [ 0.005068] SMP: Total of 1 processors activated (75.00 BogoMIPS). [ 0.005085] CPU: All CPU(s) started in SVC mode. [ 0.005721] devtmpfs: initialized [ 0.011129] VFP support v0.3: implementor 41 architecture 2 part 30 variant 7 rev 5 [ 0.011480] clocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 19112604462750000 ns [ 0.011523] futex hash table entries: 256 (order: 2, 16384 bytes, linear) [ 0.018739] pinctrl core: initialized pinctrl subsystem [ 0.020545] NET: Registered PF_NETLINK/PF_ROUTE protocol family [ 0.038201] DMA: preallocated 256 KiB pool for atomic coherent allocations [ 0.039214] audit: initializing netlink subsys (disabled) [ 0.056097] No ATAGs? [ 0.068134] audit: type=2000 audit(0.030:1): state=initialized audit_enabled=0 res=1 [ 0.071785] at_xdmac e0068000.dma-controller: 16 channels, mapped at 0x(ptrval) [ 0.073849] iommu: Default domain type: Translated [ 0.073876] iommu: DMA domain TLB invalidation policy: strict mode [ 0.074680] SCSI subsystem initialized [ 0.074984] usbcore: registered new interface driver usbfs [ 0.075068] usbcore: registered new interface driver hub [ 0.075146] usbcore: registered new device driver usb [ 0.075686] pps_core: LinuxPPS API ver. 1 registered [ 0.075706] pps_core: Software ver. 5.3.6 - Copyright 2005-2007 Rodolfo Giometti [ 0.075745] PTP clock support registered [ 0.077565] clocksource: Switched to clocksource arch_sys_counter [ 0.089125] NET: Registered PF_INET protocol family [ 0.089426] IP idents hash table entries: 16384 (order: 5, 131072 bytes, linear) [ 0.091357] tcp_listen_portaddr_hash hash table entries: 512 (order: 0, 6144 bytes, linear) [ 0.091434] TCP established hash table entries: 8192 (order: 3, 32768 bytes, linear) [ 0.091574] TCP bind hash table entries: 8192 (order: 4, 65536 bytes, linear) [ 0.091773] TCP: Hash tables configured (established 8192 bind 8192) [ 0.091925] UDP hash table entries: 512 (order: 2, 16384 bytes, linear) [ 0.092011] UDP-Lite hash table entries: 512 (order: 2, 16384 bytes, linear) [ 0.092282] NET: Registered PF_UNIX/PF_LOCAL protocol family [ 0.093295] RPC: Registered named UNIX socket transport module. [ 0.093332] RPC: Registered udp transport module. [ 0.093346] RPC: Registered tcp transport module. [ 0.093357] RPC: Registered tcp NFSv4.1 backchannel transport module. [ 0.093736] NetWinder Floating Point Emulator V0.97 (double precision) [ 0.094901] workingset: timestamp_bits=30 max_order=18 bucket_order=0 [ 0.095596] squashfs: version 4.0 (2009/01/31) Phillip Lougher [ 0.096286] Trying to unpack rootfs image as initramfs... [ 0.109411] bounce: pool size: 64 pages [ 0.109541] Block layer SCSI generic (bsg) driver version 0.4 loaded (major 250) [ 0.109563] io scheduler mq-deadline registered [ 0.109579] io scheduler kyber registered [ 0.116059] pinctrl-ocelot e2004064.pinctrl: driver registered [ 0.131516] brd: module loaded [ 0.149642] loop: module loaded [ 0.151731] atmel_usart_serial atmel_usart_serial.0.auto: Using FIFO (32 data) [ 0.152052] atmel_usart_serial.0.auto: ttyS0 at MMIO 0xe0040200 (irq = 43, base_baud = 12500000) is a ATMEL_SERIAL [ 0.160318] atmel_usart_serial atmel_usart_serial.1.auto: Using FIFO (32 data) [ 0.160646] atmel_usart_serial.1.auto: ttyS1 at MMIO 0xe0064200 (irq = 44, base_baud = 12500000) is a ATMEL_SERIAL [ 0.988484] Freeing initrd memory: 5504K [ 1.196259] printk: console [ttyS1] enabled [ 1.202400] SPI driver spidev has no spi_device_id for mchp,synce_builtin [ 1.209227] SPI driver spidev has no spi_device_id for mchp,synce_dpll [ 1.215711] SPI driver spidev has no spi_device_id for mchp,cpld [ 1.221749] SPI driver spidev has no spi_device_id for mchp,cpld_fifo [ 1.228197] SPI driver spidev has no spi_device_id for mchp,t1e1j1 [ 1.234372] SPI driver spidev has no spi_device_id for spidev [ 1.245566] spi-nor spi0.0: sst26vf016b (2048 Kbytes) [ 1.270532] CAN device driver interface [ 1.275507] lan966x-switch e2000000.switch: Use register extraction [ 1.281833] MAC addr was not set, use random MAC [ 1.298073] pps pps0: new PPS source ptp0 [ 1.302487] pps pps1: new PPS source ptp1 [ 1.306830] pps pps2: new PPS source ptp2 [ 1.321451] uio_sparx5_irqmux e0000000.mscc_switch: IO is enabled [ 1.327624] uio_sparx5_irqmux e0000000.mscc_switch: Mapped 0 irqs [ 1.335771] uio_sparx5_irqmux e0000000.mscc_switch: Mapping [mem 0xe0000000-0xe3ffffff] [ 1.344024] uio_sparx5_irqmux 100000.mscc_sram: IO is enabled [ 1.349790] uio_sparx5_irqmux 100000.mscc_sram: Mapped 0 irqs [ 1.355788] uio_sparx5_irqmux 100000.mscc_sram: Mapping [mem 0x00100000-0x0011ffff] [ 1.365823] dwc3 300000.usb_dwc3: Configuration mismatch. dr_mode forced to host [ 1.374036] ehci_hcd: USB 2.0 'Enhanced' Host Controller (EHCI) Driver [ 1.380611] ehci-atmel: EHCI Atmel driver [ 1.384741] ohci_hcd: USB 1.1 'Open' Host Controller (OHCI) Driver [ 1.390928] ohci-platform: OHCI generic platform driver [ 1.396271] ohci-atmel: OHCI Atmel driver [ 1.400953] xhci-hcd xhci-hcd.2.auto: xHCI Host Controller [ 1.406430] xhci-hcd xhci-hcd.2.auto: new USB bus registered, assigned bus number 1 [ 1.414869] xhci-hcd xhci-hcd.2.auto: hcc params 0x0220fe6c hci version 0x110 quirks 0x0000000000010010 [ 1.424392] xhci-hcd xhci-hcd.2.auto: irq 45, io mem 0x00300000 [ 1.430830] usb usb1: New USB device found, idVendor=1d6b, idProduct=0002, bcdDevice= 5.15 [ 1.439110] usb usb1: New USB device strings: Mfr=3, Product=2, SerialNumber=1 [ 1.446313] usb usb1: Product: xHCI Host Controller [ 1.451216] usb usb1: Manufacturer: Linux 5.15.25-18810-g70353fd4af6b-dirty xhci-hcd [ 1.458973] usb usb1: SerialNumber: xhci-hcd.2.auto [ 1.464744] hub 1-0:1.0: USB hub found [ 1.468595] hub 1-0:1.0: 1 port detected [ 1.473078] xhci-hcd xhci-hcd.2.auto: xHCI Host Controller [ 1.478607] xhci-hcd xhci-hcd.2.auto: new USB bus registered, assigned bus number 2 [ 1.486250] xhci-hcd xhci-hcd.2.auto: Host supports USB 3.0 SuperSpeed [ 1.492940] usb usb2: We don't know the algorithms for LPM for this host, disabling LPM. [ 1.501392] usb usb2: New USB device found, idVendor=1d6b, idProduct=0003, bcdDevice= 5.15 [ 1.509668] usb usb2: New USB device strings: Mfr=3, Product=2, SerialNumber=1 [ 1.516876] usb usb2: Product: xHCI Host Controller [ 1.521776] usb usb2: Manufacturer: Linux 5.15.25-18810-g70353fd4af6b-dirty xhci-hcd [ 1.529545] usb usb2: SerialNumber: xhci-hcd.2.auto [ 1.535227] hub 2-0:1.0: USB hub found [ 1.539058] hub 2-0:1.0: config failed, hub doesn't have any ports! (err -19) [ 1.546594] usbcore: registered new interface driver usbtmc [ 1.552306] usbcore: registered new interface driver usb-storage [ 1.558447] usbcore: registered new interface driver usbserial_generic [ 1.564974] usbserial: USB Serial support registered for generic [ 1.571042] usbcore: registered new interface driver ftdi_sio [ 1.576779] usbserial: USB Serial support registered for FTDI USB Serial Device [ 1.584252] usbcore: registered new interface driver usb_serial_simple [ 1.590802] usbserial: USB Serial support registered for carelink [ 1.596882] usbserial: USB Serial support registered for zio [ 1.602596] usbserial: USB Serial support registered for funsoft [ 1.608608] usbserial: USB Serial support registered for flashloader [ 1.614951] usbserial: USB Serial support registered for google [ 1.620901] usbserial: USB Serial support registered for libtransistor [ 1.627421] usbserial: USB Serial support registered for vivopay [ 1.633458] usbserial: USB Serial support registered for moto_modem [ 1.639750] usbserial: USB Serial support registered for motorola_tetra [ 1.646351] usbserial: USB Serial support registered for novatel_gps [ 1.652739] usbserial: USB Serial support registered for hp4x [ 1.658492] usbserial: USB Serial support registered for suunto [ 1.664411] usbserial: USB Serial support registered for siemens_mpi [ 1.670937] usbcore: registered new interface driver usbtest [ 1.676707] i2c_dev: i2c /dev entries driver [ 1.682931] sdhci: Secure Digital Host Controller Interface driver [ 1.689159] sdhci: Copyright(c) Pierre Ossman [ 1.693462] sdhci-pltfm: SDHCI platform and OF driver helper [ 1.700925] atmel_aes e004c000.aes: version: 0x702 [ 1.743909] mmc0: SDHCI controller on e0830000.sdio-host [e0830000.sdio-host] using ADMA [ 1.755492] atmel_aes e004c000.aes: Atmel AES - Using dma0chan0, dma0chan1 for DMA transfers [ 1.764722] atmel_sha e006c000.sha: version: 0x700 [ 1.770160] atmel_sha e006c000.sha: using dma0chan2 for DMA transfers [ 1.812938] atmel_sha e006c000.sha: Atmel SHA1/SHA256/SHA224/SHA384/SHA512 [ 1.820576] hid: raw HID events driver (C) Jiri Kosina [ 1.825872] usbcore: registered new interface driver usbhid [ 1.831462] usbhid: USB HID core driver [ 1.836710] GACT probability NOT on [ 1.840241] Mirror/redirect action on [ 1.844374] NET: Registered PF_INET6 protocol family [ 1.851579] Segment Routing with IPv6 [ 1.855245] In-situ OAM (IOAM) with IPv6 [ 1.859386] sit: IPv6, IPv4 and MPLS over IPv4 tunneling driver [ 1.866229] NET: Registered PF_PACKET protocol family [ 1.871416] Bridge firewalling registered [ 1.875396] can: controller area network core [ 1.879842] NET: Registered PF_CAN protocol family [ 1.884589] can: raw protocol [ 1.887586] can: broadcast manager protocol [ 1.891749] can: netlink gateway - max_hops=1 [ 1.896163] 8021q: 802.1Q VLAN Support v1.8 [ 1.900630] ThumbEE CPU extension supported. [ 1.904863] Registering SWP/SWPB emulation handler [ 1.913635] of_cfs_init [ 1.916173] of_cfs_init: OK [ 1.921314] Freeing unused kernel image (initmem) memory: 1024K [ 1.937894] Run /init as init process [ 1.939755] mmc0: new high speed MMC card at address 0001 [ 1.948336] mmcblk0: mmc0:0001 IS004G 3.64 GiB [ 1.958150] mmcblk0: [ 1.958863] mmcblk0boot0: mmc0:0001 IS004G 2.00 MiB [ 1.970417] mmcblk0boot1: mmc0:0001 IS004G 2.00 MiB [ 1.979285] mmcblk0rpmb: mmc0:0001 IS004G 512 KiB, chardev (247:0) Starting syslogd: OK Starting klogd: OK Running sysctl: OK Saving random seed: [ 2.165688] random: dd: uninitialized urandom read (512 bytes read) OK Starting rngd: OK Starting network: OK Welcome to Buildroot buildroot login: root This example is demonstrated by using TTL-232R-3V3 cable which is connected from Linux host to flexcom0 USART. Any other UART converter cables can be used. Make sure that pin connections of TTL-232R-3V3 to DUT flexcom0 USART are as below: Once connections are done, verify that ttyUSBx interface is identified on Host machine as below: root@swlab-HP-Z420-Workstation:/home/knariset# dmesg | tail [611319.667065] usb 3-1: new full-speed USB device number 4 using xhci_hcd [611319.861370] usb 3-1: New USB device found, idVendor=0403, idProduct=6001 [611319.861373] usb 3-1: New USB device strings: Mfr=1, Product=2, SerialNumber=3 [611319.861376] usb 3-1: Product: TTL232R-3V3 [611319.861379] usb 3-1: Manufacturer: FTDI [611319.861381] usb 3-1: SerialNumber: FTBR6A83 [611319.872422] ftdi_sio 3-1:1.0: FTDI USB Serial Device converter detected [611319.872470] usb 3-1: Detected FT232RL [611319.877470] usb 3-1: FTDI USB Serial Device converter now attached to ttyUSB1 [611420.396414] usb 2-1.1: USB disconnect, device number 27 On DUT side, flexcom0 USART will be identified as ttyS0 interface: # dmesg | grep usart [ 0.151931] atmel_usart_serial atmel_usart_serial.0.auto: Using FIFO (32 data) [ 0.151989] atmel_usart_serial atmel_[ 8.717907] random: fast init done usart_serial.0.auto: GPIO lookup for consumer rs485-term [ 0.152007] atmel_usart_serial atmel_usart_serial.0.auto: using device tree for GPIO lookup [ 0.152152] atmel_usart_serial atmel_usart_serial.0.auto: using lookup tables for GPIO lookup [ 0.152169] atmel_usart_serial atmel_usart_serial.0.auto: No GPIO consumer rs485-term found [ 0.152257] atmel_usart_serial.0.auto: ttyS0 at MMIO 0xe0040200 (irq = 43, base_baud = 12500000) is a ATMEL_SERIAL [ 0.160529] atmel_usart_serial atmel_usart_serial.1.auto: Using FIFO (32 data) [ 0.160591] atmel_usart_serial atmel_usart_serial.1.auto: GPIO lookup for consumer rs485-term [ 0.160608] atmel_usart_serial atmel_usart_serial.1.auto: using device tree for GPIO lookup [ 0.160755] atmel_usart_serial atmel_usart_serial.1.auto: using lookup tables for GPIO lookup [ 0.160771] atmel_usart_serial atmel_usart_serial.1.auto: No GPIO consumer rs485-term found [ 0.160858] atmel_usart_serial.1.auto: ttyS1 at MMIO 0xe0064200 (irq = 44, base_baud = 12500000) is a ATMEL_SERIAL # # # dmesg | grep ttyS [ 0.000000] Kernel command line: console=ttyS1,115200 root=/dev/ram0 loglevel=7 uio_pdrv_genirq.of_id=generic-uio [ 0.152257] atmel_usart_serial.0.auto: ttyS0 at MMIO 0xe0040200 (irq = 43, base_baud = 12500000) is a ATMEL_SERIAL [ 0.160858] atmel_usart_serial.1.auto: ttyS1 at MMIO 0xe0064200 (irq = 44, base_baud = 12500000) is a ATMEL_SERIAL [ 1.196296] printk: console [ttyS1] enabled # # ls -l /dev/ttyS* crw------- 1 root root 4, 64 Jan 1 00:00 /dev/ttyS0 crw------- 1 root root 4, 65 Jan 1 00:00 /dev/ttyS1 Before running serial tests, make sure baudrate is set to 115200 on both sides using command stty -F /dev/ttyX 115200 Run stty -F /dev/ttyUSB1 115200 command on Host machine and stty -F /dev/ttyS0 115200 command on DUT. Use echo command to write some text to /dev/ttyS0 interface on DUT: # # echo \"writing to ttyS0 USART0 on DUT\" > /dev/ttyS0 Run cat command to read from /dev/ttyUSB1 on Host: root@swlab-HP-Z420-Workstation:/home/knariset# cat /dev/ttyUSB1 writing to ttyS0 USART0 on DUT Use echo command to write some text to /dev/ttyUSB1 interface on Host: root@swlab-HP-Z420-Workstation:/home/knariset# echo \"writing to USB1 on Host machine\" > /dev/ttyUSB1 root@swlab-HP-Z420-Workstation:/home/knariset# Run cat command to read from /dev/ttyS0 on DUT: # cat /dev/ttyS0 writing to USB1 on Host machine","title":"LAN966x USART","component":"bsp","version":"2024.03","name":"lan966x-usart","url":"/bsp/2024.03/supported-hw/lan966x-usart.html","titles":[{"text":"SoC Resources","hash":"_soc_resources","id":1},{"text":"Kernel configurations","hash":"_kernel_configurations","id":2},{"text":"Devicetree Configuration","hash":"_devicetree_configuration","id":3},{"text":"Example","hash":"_example","id":4},{"text":"UserSpace","hash":"_userspace","id":5},{"text":"Confirm instances are created","hash":"_confirm_instances_are_created","id":6},{"text":"Example on how to use","hash":"_example_on_how_to_use","id":7},{"text":"FLEXCOM USART as console","hash":"_flexcom_usart_as_console","id":8},{"text":"FLEXCOM USART as standalone uart device","hash":"_flexcom_usart_as_standalone_uart_device","id":9},{"text":"Write text to flexcom0 USART and read from Host machine interface","hash":"_write_text_to_flexcom0_usart_and_read_from_host_machine_interface","id":10},{"text":"Write text to Host interface and read from flexcom0 USART","hash":"_write_text_to_host_interface_and_read_from_flexcom0_usart","id":11}]},"150":{"id":150,"text":"LAN966x SoC supports one instance of Watchdog Timer from Synopsys DW. Following kernel config options should be enabled to use LAN966x WDT: CONFIG_DW_WATCHDOG - Synopsys Watchdog driver config option. To enable Watchdog timer, following configurations are required in device tree: compatible string must be set to snps,dw-wdt. reg property must be set to . interrupts property must be set with interrupt details as . Peripheral Shared Peripheral Interrupt CPU INTR watchdog 70 38 Note Shared peripheral interrupt lines start at index ID32. So, CPU INTR must be calculated as [Shared peripheral interrupt number - 32]. clocks property must be set to . WDT DT Documentation Watchdog Driver API Following example shows how a Watchdog timer should be defined in DT: dtsi file: watchdog: watchdog@e0090000 { compatible = \"snps,dw-wdt\"; reg = ; interrupts = ; clocks = ; status = \"disabled\"; }; dts file changes: &watchdog { status = \"okay\"; }; Check for /dev/watchdog. If this file is present, that means the watchdog kernel device driver is loaded. Run cat /dev/watchdog0 and you see linux reboots in 30-40secs. # cat /dev/watchdog0 [ 7879.765752] watchdog: watchdog0: watchdog did not stop! # # # U-Boot 2019.04-linux4sam_6.2-icp (Sep 24 2021 - 09:49:43 +0200) CPU: SAMA7 Crystal frequency: 0 MHz CPU clock : 0 MHz Master clock : 0 MHz DRAM: 1 GiB MMC: sdhci-host@e0830000: 0, emmc@e0830000: 1 Loading Environment from SPI Flash... SF: Detected sst26vf016b with page size 256 Bytes, erase size 4 KiB, total 2 MiB OK In: serial Out: serial Err: serial Net: eth0: switch@0 Hit any key to stop autoboot: 0 m => Configure buildroot and install Watchdog utility provided by Busybox. The main watchdog configuration file is /etc/watchdog.conf. # busybox | grep watchdog vconfig, vi, vlock, w, watch, watchdog, wc, wget, which, who, whoami, # # watchdog --help watchdog: unrecognized option `--help' watchdog version 5.16, usage: watchdog [options] options: -c | --config-file specify location of config file -f | --force don't sanity-check config or use PID file -F | --foreground run in foreground -X | --loop-exit run a fixed number of loops then exit -q | --no-action do not reboot or halt -b | --softboot soft-boot on error -s | --sync sync filesystem -v | --verbose verbose messages # ls -l /etc/watchdog.conf -rw-r--r-- 1 root root 6102 May 18 2022 /etc/watchdog.conf Add watchdog configurations to /etc/watchdog.conf file. Run command watchdog -c /etc/watchdog.conf. By default, Busybox watchdog command runs in background. Check for Hardware watchdog process ID. Kill the watchdog process. Verify that system is rebooted after watchdog-timeout value. # cat /etc/watchdog.conf watchdog-device = /dev/watchdog watchdog-timeout = 20 log-dir = /var/log/watchdog file = /var/log/messages change = 1500 realtime = yes priority = 1 # # ps -ef | grep watchdog 22 root [watchdogd] 131 root grep watchdog # # # watchdog -c /etc/watchdog.conf # # # ps -ef | grep watchdog 22 root [watchdogd] 135 root watchdog -c /etc/watchdog.conf 140 root grep watchdog # # # uptime 00:09:09 up 9 min, load average: 0.00, 0.03, 0.03 # # # kill -9 135 ; uptime; tail -f /var/log/messages [ 580.280482] watchdog: watchdog0: watchdog did not stop! 00:09:40 up 9 min, load average: 0.00, 0.02, 0.03 Jan 1 00:08:36 buildroot daemon.info watchdog[135]: interface: no interface to check Jan 1 00:08:36 buildroot daemon.info watchdog[135]: temperature: no sensors to check Jan 1 00:08:36 buildroot daemon.info watchdog[135]: no test binary files Jan 1 00:08:36 buildroot daemon.info watchdog[135]: no repair binary files Jan 1 00:08:36 buildroot daemon.info watchdog[135]: error retry time-out = 60 seconds Jan 1 00:08:36 buildroot daemon.info watchdog[135]: repair attempts = 1 Jan 1 00:08:36 buildroot daemon.info watchdog[135]: alive=/dev/watchdog heartbeat=[none] to=root no_act=no force=no Jan 1 00:08:36 buildroot daemon.info watchdog[135]: watchdog now set to 20 seconds Jan 1 00:08:36 buildroot daemon.info watchdog[135]: hardware watchdog identity: Synopsys DesignWare Watchdog Jan 1 00:09:40 buildroot kern.crit kernel: [ 580.280482] watchdog: watchdog0: watchdog did not stop! U-Boot 2019.04-linux4sam_6.2-icp (Sep 24 2021 - 09:49:43 +0200) CPU: SAMA7 Crystal frequency: 0 MHz CPU clock : 0 MHz Master clock : 0 MHz DRAM: 1 GiB MMC: sdhci-host@e0830000: 0, emmc@e0830000: 1 Loading Environment from SPI Flash... SF: Detected sst26vf016b with page size 256 Bytes, erase size 4 KiB, total 2 MiB OK In: serial Out: serial Err: serial Net: eth0: switch@0 Hit any key to stop autoboot: 0 m => Add watchdog configurations to /etc/watchdog.conf file. Run watchdog in foregroung using '-F' option in Busybox watchdog command as watchdog -c /etc/watchdog.conf -F. Press CTRL + z to suspend system. In this case, the Watchdog device is enabled but is no longer fed. After watchdog-timeout seconds, the system is reset by the Watchdog device. # ls -l /dev/watchdog crw------- 1 root root 10, 130 Jan 1 00:00 /dev/watchdog # # uptime 00:04:29 up 4 min, load average: 0.02, 0.11, 0.06 # # # ps -ef | grep watchdog 22 root [watchdogd] 132 root grep watchdog # # cat /etc/watchdog.conf watchdog-device = /dev/watchdog watchdog-timeout = 20 log-dir = /var/log/watchdog file = /var/log/messages change = 10 realtime = yes priority = 1 # # watchdog -c /etc/watchdog.conf -F watchdog: starting daemon (5.16): watchdog: int=1s realtime=no sync=no load=0,0,0 soft=no watchdog: memory not checked watchdog: ping: no machine to check watchdog: file: /var/log/messages:10 watchdog: pidfile: no server process to check watchdog: interface: no interface to check watchdog: temperature: no sensors to check watchdog: no test binary files watchdog: no repair binary files watchdog: error retry time-out = 60 seconds watchdog: repair attempts = 1 watchdog: alive=/dev/watchdog heartbeat=[none] to=root no_act=no force=no watchdog: watchdog now set to 20 seconds watchdog: hardware watchdog identity: Synopsys DesignWare Watchdog watchdog: file /var/log/messages was not changed in 11 seconds (more than 10) watchdog: file /var/log/messages was not changed in 11 seconds (more than 10) watchdog: file /var/log/messages was not changed in 11 seconds (more than 10) ^Z[1]+ Stopped watchdog -c /etc/watchdog.conf -F # U-Boot 2019.04-linux4sam_6.2-icp (Sep 24 2021 - 09:49:43 +0200) CPU: SAMA7 Crystal frequency: 0 MHz CPU clock : 0 MHz Master clock : 0 MHz DRAM: 1 GiB MMC: sdhci-host@e0830000: 0, emmc@e0830000: 1 Loading Environment from SPI Flash... SF: Detected sst26vf016b with page size 256 Bytes, erase size 4 KiB, total 2 MiB OK In: serial Out: serial Err: serial Net: eth0: switch@0 Hit any key to stop autoboot: 0 m =>","title":"LAN966x Watchdog","component":"bsp","version":"2024.03","name":"lan966x-wdt","url":"/bsp/2024.03/supported-hw/lan966x-wdt.html","titles":[{"text":"SoC Resources","hash":"_soc_resources","id":1},{"text":"Kernel configurations","hash":"_kernel_configurations","id":2},{"text":"Devicetree Configuration","hash":"_devicetree_configuration","id":3},{"text":"References","hash":"_references","id":4},{"text":"Example","hash":"_example","id":5},{"text":"UserSpace","hash":"_userspace","id":6},{"text":"Confirm instances are created","hash":"_confirm_instances_are_created","id":7},{"text":"Example on how to use","hash":"_example_on_how_to_use","id":8},{"text":"Example using Busybox watchdog utility:","hash":"_example_using_busybox_watchdog_utility","id":9},{"text":"Verify system reboot by running watchdog in background:","hash":"_verify_system_reboot_by_running_watchdog_in_background","id":10},{"text":"Verify system reboot by running watchdog in foreground:","hash":"_verify_system_reboot_by_running_watchdog_in_foreground","id":11}]},"151":{"id":151,"text":"The LAN966x family comprises the following SoCs: LAN9662 - 2 port end-node TSN Gigabit Ethernet switch device. LAN9668 - 8 port TSN Gigabit Ethernet switch device. When dealing with low-level SW, it is piratical to know the physical hardware addresses of the memory-mapped areas. The table below show the relevant areas. Please note that off-chip resources such as flash and DDR, depends on board design, be sure to check the schematics. Name On-Chip Start Max size Size eval board ======= ======= ========== ==================== =================== BOOTROM Yes 0x00000000 0x00014000 (80KB) 0x00014000 (80KB) SRAM Yes 0x00100000 0x00020000 (128KB) 0x00020000 (128KB) QSPI0-NOR No 0x20000000 0x10000000 (256MB) 0x2000000 (2MB) DDR No 0x60000000 0x80000000 (2048MB) 0x80000000 (2048MB) This chapter describes the different LAN966x Reference Boards. All examples assume that there is a working TFTP and DHCP server on the same subnet. This is the 8 port eval board using the LAN9668 SoC. This PCB has the following features: LAN9668 switch device SST26VF016B SPI NOR boot flash 4GB eMMC NAND flash 512MB DDR3L-1333 x16 RAM (Optional 1GB or 2GB) 2x LAN8814 (Indy) quad 1000BASE-T PHY USB 2.0 device Local management via USB port Power from either 12V or 48V DC From a software perspective there is only one difference compared with the EVB-LAN9662 board. This is the 2 port eval board using a LAN9662 SoC. This PCB has the following features: LAN9662 switch device SST26VF016B SPI NOR boot flash 4GB eMMC NAND flash 512MB DDR3L-1333 x16 RAM (Optional 1GB or 2GB) 2x 1000BASE-T ports using internal LAN9662 PHYs USB 2.0 host Local management via USB port Power from either USB port or expansion connector This is a board that provides access to a LAN9662 device via a PCIe interface. This is a carrier board used together with UNG_8291 to expose more interfaces and functionality. If higher performance is needed, UNG_8309 supports mounting a Raspberry Pi 4 Compute Module to be used as an external CPU system. This PCB has the option to plug different PHY modules boards. Meaning that it can support a different number of ports depending on the inserted PHY modules. It can have up to 8 ports including the 2 internal PHYs. It has the following features: LAN9668 switch device SST26VF016B SPI NOR boot flash 4GB eMMC NAND flash 512MB DDR3L-1333 x16 RAM (Optional 1GB or 2GB) 2x 1000BASE-T ports using internal LAN9662 PHYs USB 2.0 device Local management via USB port Power from either 12V or 48V DC The name used in the device trees for the Linux Kernel is the internal product name, as this has been created at a very early stage of the project. To allow you to move between the different names that are in use, you can use the table found below: Internal Board Name Board Order No Board Name UNG8290 EV18W53A EVB-LAN9668 UNG8291 EV09D37A EVB-LAN9662 UNG8314 EV53U25A EVB-LAN9662-NIC UNG8309 EV44Z97A EVB-LAN9662-Carrier UNG8385 EV83E85A EVB-LAN9668-EDS2","title":"LAN966x","component":"bsp","version":"2024.03","name":"lan966x","url":"/bsp/2024.03/supported-hw/lan966x.html","titles":[{"text":"1. LAN966x Family overview","hash":"_lan966x_family_overview","id":1},{"text":"2. Memory map","hash":"_memory_map","id":2},{"text":"3. EVB Overview:","hash":"refboards","id":3},{"text":"3.1. EVB-LAN9668","hash":"_evb_lan9668","id":4},{"text":"3.2. EVB-LAN9662","hash":"_evb_lan9662","id":5},{"text":"3.3. EVB-LAN9662-NIC","hash":"_evb_lan9662_nic","id":6},{"text":"3.4. EVB-LAN9662-Carrier","hash":"_evb_lan9662_carrier","id":7},{"text":"3.5. EVB-LAN9668-EDS2","hash":"_evb_lan9668_eds2","id":8},{"text":"4. Board Name Overview","hash":"_board_name_overview","id":9}]},"152":{"id":152,"text":"This document will focus on the LAN969x SoC, but to fully explain the boot process and boot facilities it is also necessary to consider the flash memories available on the board. The upcoming sections will briefly describe the boot media supported by the LAN969x, and then describe which of these media is available on the various evaluation boards offered by Microchip. This document uses many abbreviations, see the terms and abbreviations section for details. LAN969x offers secure boot, which is based on ARM Trusted Firmware (TF-A). The TF-A architecture heavily influences the boot-sequence, and to understand how LAN969x boots, a bit of TF-A understanding is also needed. Following is an illustration of a typical lan969x boot sequence using UBoot and Linux: It is possible to skip UBoot, if this case the boot sequence will look like this: TF-A and LAN969x goes through the following boot steps: TF-A/BL1 This is ROM code embedded inside the chip. LAN969x always start by booting TF-A/BL1 from ROM. TF-A/BL1 loads the next bootloader (BL2) from one of the support boot-medias. The strapping pins are used to configure which of the supported boot-media to use. BL2 This is a second stage boot-loader also part of TF-A. This bootloader runs from an on-chip SRAM, it setup the trust-zones, configure DDR memory and other basic platform initialization. Once the platform is initialized, it will load BL31 and BL33 from the configured boot-media into SRAM memory. BL31 This is a called \"EL3 Runtime Software\", also part of TF-A. This stage does not influence the boot-flow directly, and will not be covered here. BL33 In TF-A terminology, this is the unsecure firmware. It is not part of the TF-A project, but is signed and distributed together with TF-A. TF-A imports this as a BLOB. Typically this is either UBoot, LMStaX or a special version of the kernel which can run without UBoot. The above list of update-able images (BL2, BL31 and BL33), plus relevant certificates and relevant support files are packed in a FIP (Firmware Image Packet), which is a storage format defined by TF-A. The FIP containing these images must be stored raw in the designed boot-media. In some cases it must be put at a specific address, while in other it is stored in a partition with a predefined name. This document will not go into the details of TF-A, but just assume that the FIP is available and describe where and how it can be programmed. Two different FIPs will be used, one with UBoot as BL33, and another one with Linux-kernel as BL33. The strapping pins are configuring the initial boot mode. The table below lists the supported modes: Strapping Pins LAN969x A0 0000 (0x0) eMMC + FC0 (for trace) 0001 (0x1) QSPI0 + FC0 (for trace) 0010 (0x2) SDCard + FC0 (for trace) 0011 (0x3) eMMC 0100 (0x4) QSPI0 0101 (0x5) SDCard 0110 (0x6) Reserved 0111 (0x7) Reserved 1000 (0x8) QSPI0-HS + FC0 1001 (0x9) Reserved 1010 (0xa) TF-A Monitor at FC0 1011 (0xb) TF-A Monitor at FC0-HS 1100 (0xc) Reserved 1101 (0xd) QSPI0-HS 1110 (0xe) Reserved 1111 (0xf) SPI Client The strapping configuration is read by TF-A/BL1, which uses it to select select the boot-media, and thereby determinate where the FIP is loaded from. UBoot will also use the strapping pins to determinate which flash to load the environment configuration from. In the above table FC0 means FlexCOM0, running in UART mode configured as 115200/8/N/1 with the RX signal at GPIO52/Alt-1 and TX signal at GPIO53/Alt-1. For modes 0000-0010 the FC0 terminal is used as to emit debug traces Mode 0011 to 0101 perform the same boot procedure, but with trace disabled to improve performance. In mode 1010 and 1011 a bidirectional machine interface is implemented. When booting from flash the TF-A loaders can be configured to emit trace messages on the UART provided by FlexCom0. The following table show the strapping configurations with and without traces enables. Trace enable Trace disable Flash type 0000 0011 eMMC 0001 0100 QSPI/NOR 0002 0101 SDCard Boards which do not have a compatible HW configuration shall avoid this strap mode. Be aware that traces to the UART impact boot time and should only be activated when debugging is needed or the startup time is not important. When booting from eMMC/SDCard, a valid GUID Partition Table (GPT) must be used. The TF-A/BL1 ROM will look for a partition called fip and fip.bak and use then accordingly. The table below provide an example of a partition table. The page size for the eMMC/SDCard device is 0x200/512 bytes. Type Partition id Partition Name Offset Partition size GPT (PartTable) n/a n/a 0x00000000 0x00008000 (32kb) TF-A FIP 1 fip 0x00100000 0x08000000 (128mb) TF-A FIP 2 fip.bak 0x08100000 0x08000000 (128mb) UBoot (Env) 3 Env 0x10100000 0x00200000 (2mb) UBoot (Env) 4 Env.bak 0x10300000 0x00200000 (2mb) ext4 (rootfs) 5 Boot0 0x10500000 0x40000000 (1gb) ext4 (rootfs) 6 Boot1 0x50500000 0x40000000 (1gb) ext4 (data) 7 Data 0x90500000 0x6fa00000 (1.74gb) SDCard doesn’t support redundant environment. The bold partitions are the items which is hard-coded in either TF-A/BL1 or in UBoot. If it relates to UBoot then it can be changed, but requires changes to UBoot as well. Everything else is just an example which can be changed according to customer needs. The following table contains the offsets used by TF-A and LMStaX when booting from QSPI/NOR: Type Partition id Partition Name Offset Partition size GPT (PartTable) n/a n/a 0x00000000 0x00001000 (4KB) TF-A FIP 1 fip 0x00001000 0x0001e000 (120KB) TF-A FIP 2 img-sel 0x0001f000 0x00002000 (8KB) LMSTAX 3 img-a 0x00021000 0x000cf800 (830KB) LMSTAX 4 img-b 0x000f0800 0x000cf800 (830KB) TinyFS 5 data 0x001c0000 0x00040000 (256KB) This mode will boot into a UART monitor using FlexCom0. This can be used to program the OTP and to load firmware into flash. This mode can be used without any valid content in the flash, and is therefore useful for de-brick or even production scenarios. The UART Monitor implement a machine interface and should not be used interactively with a terminal. Instead use the HTML5 client provided as part of the TF-A project. For any other use-case, the UART console terminal needs to be configured to 115200/8/N/1 This mode is identical to the previous mode except that the default speed is configured to be 921600/8/N/1. This allow faster downloads when updating the firmware images. In this strapping mode, the CPU is not booting at all. This means the (TF-A is not running. A SPI client will be initialized instead. This SPI interface allows a host CPU to read/write registers in the switch-core. So far we have concentrated on configuring the HW and boot media. Once put in place, TF-A/BL2, BL2 and BL31 will boot, and eventually reach TF-A/BL33. TF-A/BL33 is the boot-step after TF-A, and can be UBoot, Linux kernel or some other OS. The following chapters covers this in more details. In this mode the UBoot binary is embedded in into the FIP as TF-A/BL33. TF-A will do the platform initialization, load images (and authenticate them), DDR initialization etc. Once done, it will boot UBoot, which then control the next steps in boot flow. UBoot will take care of loading the ITB and the rootfs and boot up into the Linux. This is the so called normal-boot mode. In this mode a Linux kernel binary is embedded in into the FIP as TF-A/BL33. TF-A will do the platform initialization, load images (and authenticate them), DDR initialization etc. Once done, it will boot the Linux kernel directly. This is the so called fast-boot mode. The referenced images and archives can all found on public servers. Therefore, the following description will provide all needed information. The TFA (FIPs) images can be found under following link: https://github.com/microchip-ung/arm-trusted-firmware/releases The build artifacts (UBoot, kernel, rootfs etc.) can be found on following public server: http://mscc-ent-open-source.s3-website-eu-west-1.amazonaws.com/?prefix=public_root/bsp Download the proper architecture and build version. For example: mscc-brsdk-arm64-yyyy.version.tar.gz After extracting the *.tar.gz file, all rootfs and ITB related files can be found inside following folder: mscc-brsdk-arm64-yyyy.version/arm64-armv8_a-linux-gnu/standalone/release The following subchapter gives a rough overview of the common used terms in the context of the available images and build artifacts. The upcoming table is describing the most important files extracted from the TFA artifacts archive: File name File type BL33 data Flash Description fwu-lan969x_a0-release.html HTML5 n/a n/a Firmware update tool for MS Edge or Chrome lan969x_a0-release-fwu_fip.bin BIN image n/a n/a Firmware update binary lan969x_a0-release.fip.gz FIP file UBoot NOR/MMC Compressed RAW Plain text FIP (not encrypted) lan969x_a0-release-linux.fip.gz FIP file Linux NOR/MMC Compressed RAW Plain text FIP (not encrypted) lan969x_a0-release-mmc.gpt.gz GPT image UBoot MMC Compressed GPT image with embedded Plain text FIP lan969x_a0-release-mmc-linux.gpt.gz GPT image Linux MMC Compressed GPT image with embedded Plain text FIP lan969x_a0-release-nor.gpt.gz GPT image UBoot NOR Compressed GPT image with embedded Plain text FIP lan969x_a0-release-ssk.fip.gz FIP file UBoot NOR/MMC Compressed RAW encrypted FIP (not encrypted) lan969x_a0-release-ssk-linux.fip.gz FIP file Linux NOR/MMC Compressed RAW encrypted FIP (not encrypted) lan969x_a0-release-ssk-mmc.gpt.gz GPT image UBoot MMC Compressed GPT image with embedded encrypted FIP lan969x_a0-release-ssk-mmc-linux.gpt.gz GPT image Linux MMC Compressed GPT image with embedded encrypted FIP lan969x_a0-release-ssk-nor.gpt.gz GPT image UBoot NOR Compressed GPT image with embedded encrypted FIP Following table is describing the available ITB and filesystem related binaries inside the buildroot artifacts archive: File name Description brsdk_standalone_arm64.ext4.gz ext4 rootfs with ITB, located in the root directory. brsdk_standalone_arm64.itb ITB only, used in the *.gz file. brsdk_standalone_arm64.its ITB with Kernel and squashfs filesystem. Suitable for network boot. fit.itb Standalone ITB (also usable for Sparx5) fit.its Standalone FIT Source fwu.html Firmware update tool for MS Edge or Chrome lan969x_appl_ev23x71a.dtb Device Tree Blob for EV23x71a for XStaX lan969x_ev23x71a.dtb Device Tree Blob for EV23x71a for Standalone lan969x_pcb10001.dtb Device Tree Blob for PCB10001 Modular Test Board lan969x_sr.dtb Device Tree Blob for Sunrise FPGA Test Platform ls1046_pcb110.dtb Device Tree Blob for LS1046 used with PCB110 for Standalone ls1046_pcb121.dtb Device Tree Blob for LS1046 used with PCB121 for Standalone ls1046_pcb134.dtb Device Tree Blob for LS1046 used with PCB134 for Standalone mscc-linux-kernel.bin Linux Kernel Binary mscc-linux-kernel.bin.gz Compressed Linux Kernel Binary mscc-linux-kernel.bin.xz Compressed Linux Kernel Binary rootfs.ext2 ext2 rootfs standalone rootfs.ext4 ext4 rootfs standalone rootfs.squashfs squashfs filesystem standalone rootfs.tar rootfs/tar standalone sparx5_appl_pcb134_emmc.dtb Device Tree Blob for PCB134 with eMMC for XStaX sparx5_appl_pcb134.dtb Device Tree Blob for PCB134 for XStaX sparx5_appl_pcb135_emmc.dtb Device Tree Blob for PCB135 with eMMC for XStaX sparx5_appl_pcb135.dtb Device Tree Blob for PCB135 for XStaX sparx5_pcb125.dtb Device Tree Blob for PCB125 Modular Test Board sparx5_pcb134_emmc.dtb Device Tree Blob for PCB134 with eMMC for Standalone sparx5_pcb134.dtb Device Tree Blob for PCB134 for Standalone sparx5_pcb135_emmc.dtb Device Tree Blob for PCB135 with eMMC for Standalone sparx5_pcb135.dtb Device Tree Blob for PCB135 for Standalone ubifs-itb-bare.itb ITB without a rootfs ubifs-itb-bare.its Source file for ITB without a rootfs ubifs-itb-bare.ubifs ITB without a rootfs in UBIFS format The ITB files from the build artifacts archive including always the latest available kernel files. The device tree sources are a set of text files in the Linux kernel source tree. They describe the hardware properties for a specific platform. For processing the DTS, a Device Tree Compiler is used. The compiler takes a device-tree source as input and outputs a device-tree in a machine readable format. Since the DTS represents the device-tree data in a human readable format, it is the preferred input format. The output result of the DTC results is a .dtb file. Various types of root filesystem builds are provided inside the build artifact archive. The rootfs/tar is accumulating a large collection of files into a single archive file, while preserving filesystem information such as user/group permissions, dates, files, inodes and directory structures. There is no tarball compression method used. A tarball build of the rootfs/tar can be found inside the build artifacts archive. Please have a look for a binary which is named to rootfs.tar. The squashfs filesystem is a zlib compressed read-only filesystem (e.g. files, inodes and directories) for Linux. SquashFS gives more flexibility and performance than a tarball archive. The rootfs.squashfs based build can be found inside the build artifacts archive. The ext4 filesystem is also supported by the LAN969x system. There are different flavors of the ext4 builds inside the build artifacts archive available. The Flattened Image Tree is a format for combining different binary elements such as the kernel, initramfs and DTB into a single .itb file. Bootloaders like e.g. UBoot can read and process the FIT metadata to boot an embedded Linux system. This type of the FIT is containing the kernel files, device tree(s) and a root filesystem. Besides the FIP file, only one further single binary needs to be maintained and flashed to the target system. The drawback is the longer bootup time, caused by the larger image size. The according binary, which includes a 'squashfs' root filesystem, can be found in the build artifacts archive named by 'fit.itb'. Beside of the rootfs/tar and the squashfs, there is also the usage of an ext4 root filesystem possible. The following section should give a rough overview about some ext4 based use-cases. This variant of the ext4 build is containing the ext4 filesystem and additionally an ITB located inside root directory of the ext4 filesystem. For example, UBoot is capable to load filesystem and execute the ITB found in the root directory. This build variant is available inside the build artifacts archive. It is named to 'brsdk_standalone_arm64.ext4.gz'. The FIP binary, so called 'fip.bin', is containing all parts of the TF-A firmware build. Basically, following components can be found there: BL2 BL31 or BL33 certificates support files The different FIP builds can be found inside the build artifacts archive. The GPT image is used for configuring basically the flash device structure. This means writing the GPT, creating all needed partitions and do some further setup work. The boot partition named to 'fip' will contain afterwards a 'fip.bin' file for the first system startup. The following table is showing the default partition scheme for the MMC flash devices. This means this table is valid for the eMMC and the SDCard device. offset size Name/desc ============== =============== ===================== 0x00000000 0x00008000 GPT 0x00100000 0x08000000 fip 0x08100000 0x08000000 fip.bk 0x10100000 0x00200000 Env 0x10300000 0x00200000 Env.bak 0x10500000 0x40000000 Boot0 0x50500000 0x40000000 Boot1 0x90500000 0x6fa00000 Data When eMMC or SDCard is selected as boot media, the TF-A expects a GPT in the first 32kb of the flash memory. The ROM code will look for a partition called fip. It will now try to boot from this partition. If the booting from the fip partition fails, it will try to load the firmware image from the fip.bak recovery partition. If the boot attempt from the recovery partition is failing, no fallback approach is offered here. Possible boot methods will be described in the upcoming sections. Before using the network boot feature, it needs to be ensured that the UBoot bootlader is made available inside the BL33. After startup and entering UBoot console, the network stack on the target needs to be configured. This can be done by using static network settings or using a dynamic IP address provisioning like DHCP. On the host system a TFTP server needs to be established. Host and target needs to be located in the same subnet. Afterwards the files can be transmitted over network to the target system memory. For the network boot scenario a 'fit.itb' file needs to be provisioned by the TFTP server. After configuration of the UBoot, the file can be uploaded to the platform and will be executed directly from the target memory. When QSPI/NOR is selected as boot media, the TF-A expect that the NOR flash is used in raw mode. This means in comparison to the eMMC/SDCard approach, there is no filesystem applied here. The NOR flash device can usually programmed with a standard SPI flash programmer. Before attaching the programmer, check the usage of the proper pin header and use the correct SPI pins on the eval board. But here, there is also another further way for updating the NOR flash device possible. This will be described in the upcoming chapters. Take care to write the 'fip.bin' file to a NOR memory address of 0x0 (zero).+ Because of the NOR size limitation on the LAN969x eval boards, only the 'fip.bin' file can be stored. For the eMMC boot operation mode, the 'fip.bin' file must to be located in a partition named 'fip' or 'fip.bak'. In this example, the UBoot needs to be part of the 'fip.bin'. This is required for uploading and writing the ITB and FS data via DHCP/TFTP to the correct eMMC partition sections. Afterwards the environment variables of UBoot needs to be setup properly for a full boot. In case of a blank eMMC or NOR device, following the instructions in Restore SecureBoot Images According the flashed FIP or GPT file, UBoot is available during system boot and can be used for customizing e.g. the ITB and rootfs related components. Furthermore, it can be used for updating existing GPT images or FIP files on the flash device. The table above lists the FIP or GPT images that contains a UBoot binary. Sometimes it makes also to use the command of 'help', which provides a huge collection of all available commands and features. For example, the command of 'env print' can be used for dumping all available and initialized variables on the system. For setting up the UBoot mode, following steps needs to be applied: Set the strapping mode to 0x0 (eMMC + FC0). See LAN969x Strapping Pins. Attach the board via usb cable to the host workstation Configure a serial console application like e.g. putty (settings 115200/8/N/1) Attach console application to /dev/ttyACM0 Reset the board and interrupt the UBoot autoboot before timeout. On UBoot console, the command 'mmc info' will return the emmc device properties. m => mmc info Device: sdhci-host@e0830000 Manufacturer ID: 9d OEM: 101 Name: IS008 Bus Speed: 30000000 Mode : MMC High Speed (52MHz) Rd Block Len: 512 MMC version 5.0 High Capacity: Yes Capacity: 7.3 GiB Bus Width: 4-bit Erase Group Size: 512 KiB HC WP Group Size: 8 MiB User Capacity: 7.3 GiB WRREL Boot Capacity: 4 MiB ENH RPMB Capacity: 4 MiB ENH The UBoot command of 'mmc help' will provide an overview of all available mmc sub system related commands. m => mmc help mmc - MMC sub system Usage: mmc info - display info of the current MMC device mmc read addr blk# cnt mmc write addr blk# cnt mmc erase blk# cnt mmc rescan mmc part - lists available partition on current mmc device mmc dev [dev] [part] - show or set current mmc device [partition] mmc list - lists available devices mmc hwpartition [args...] - does hardware partitioning arguments (sizes in 512-byte blocks): [user [enh start cnt] [wrrel {on|off}]] - sets user data area attributes [gp1|gp2|gp3|gp4 cnt [enh] [wrrel {on|off}]] - general purpose partition [check|set|complete] - mode, complete set partitioning completed WARNING: Partitioning is a write-once setting once it is set to complete. Power cycling is required to initialize partitions after set to complete. mmc bootbus dev boot_bus_width reset_boot_bus_width boot_mode - Set the BOOT_BUS_WIDTH field of the specified device mmc bootpart-resize - Change sizes of boot and RPMB partitions of specified device mmc partconf dev [boot_ack boot_partition partition_access] - Show or change the bits of the PARTITION_CONFIG field of the specified device mmc rst-function dev value - Change the RST_n_FUNCTION field of the specified device WARNING: This is a write-once field and 0 / 1 / 2 are the only valid values. mmc setdsr - set DSR register value For example, the MMC command of 'mmc write' will primarily used for storing the data content on the flash device. For setting up the UBoot mode, following steps needs to be applied: Set the strapping mode to 0x1 (QSPI + FC0). See LAN969x Strapping Pins. Attach the board via usb cable to the host workstation Configure a serial console application like e.g. putty (settings 115200/8/N/1) Attach putty to /dev/ttyACM0 Reset the board and interrupt the UBoot autoboot before timeout On the UBoot console, the command 'sf probe' will return the spi flash device properties m => sf probe SF: Detected sst26wf016 with page size 256 Bytes, erase size 4 KiB, total 2 MiB The UBoot command of 'sf help' will provide an overview of all available spi flash related sub system commands. m => sf help sf - SPI flash sub-system Usage: sf probe [[bus:]cs] [hz] [mode] - init flash device on given SPI bus and chip select sf read addr offset|partition len - read `len' bytes starting at `offset' or from start of mtd `partition'to memory at `addr' sf write addr offset|partition len - write `len' bytes from memory at `addr' to flash at `offset' or to start of mtd `partition' sf erase offset|partition [+]len - erase `len' bytes from `offset' or from start of mtd `partition' `+len' round up `len' to block size sf update addr offset|partition len - erase and write `len' bytes from memory at `addr' to flash at `offset' or to start of mtd `partition' sf protect lock/unlock sector len - protect/unprotect 'len' bytes starting at address 'sector' The SPI flash command of 'sf write' or 'sf update' will primarily used for storing FIP data content on the SPI flash device. UBoot can also configured for using the network stack for file transmission. A common practice is to enable the DHCP server on the host and using the UBoot 'dhcp' command. After recognizing a valid IP address, a file transmission using TFTP wil be established. In case of using a static IP setup on the target, the following example can be applied via UBoot console. Adjust the values to the individual network environment. The command of 'tftpboot' can be used then afterwards on the UBoot console. env set 'ipaddr 192.168.0.10' env set 'netmask 255.255.255.0' env set 'serverip 192.168.0.1' saveenv m => help tftp tftpboot - boot image via network using TFTP protocol Usage: tftpboot [loadAddress] [[hostIPaddr:]bootfilename] In case of a available DHCP server in the network, the UBoot command of 'dhcp' can be used. It will setup the network configuration and establish afterwards the TFTP based file transmission. m => help dhcp dhcp - boot image via network using DHCP/TFTP protocol Usage: dhcp [loadAddress] [[hostIPaddr:]bootfilename] The DHCP server, TFTP server and the target needs to be reside in the same network. Hereby, a test binary called 'fip.bin' will be now transmitted from the TFTP server via network to the target device memory. The used address of 0x64000000 is chosen randomly and points to an unused DDR memory section. m => dhcp 0x64000000 fip.bin port0 Waiting for PHY auto negotiation to complete........ done Using port0 device TFTP from server 192.168.0.1; our IP address is 192.168.0.20 Filename 'fip.bin'. Load address: 0x64000000 Loading: ###################################### 106.4 KiB/s done Bytes transferred = 553376 (871a0 hex) Now, the 'fip.bin' data is copied the target memory and can be e.g. written into an eMMC partition or in NOR flash device. This chapter shows some update examples. In the first step, we have to check the UBoot environment variables inside the UBoot console. Therefore enter UBooot console by following routine: Reset the board and wait for the UBoot autoboot stage Press any key to stop autoboot timer in order to get a U-Boot console prompt. Make sure that following environment variables are available as shown. m => env print baudrate=115200 bootargs=console=ttyAT0,115200 root=/dev/ram0 loglevel=4 uio_pdrv_genirq.of_id=generic-uio bootargs_extra=uio_pdrv_genirq.of_id=generic-uio loglevel=1 bootcmd=run mmc_boot bootdelay=3 console=ttyAT0,115200n8 div_512=setexpr _tmp_ ${filesize} + 0x1ff; setexpr filesize_512 ${_tmp_} / 0x200; env set _tmp_ fdt_high=0xffffffff fdt_update=fdt addr ${loadaddr}; fdt set /images/kernel/ entry ; fdt set /images/kernel/ load fip_fw=lan969x_a0.fip fip_fw_dl=dhcp ${loadaddr} ${fip_fw} initrd_high=0xffffffff loadaddr=0x64000000 mmc_bak=6 mmc_boot=run mmc_tryboot;run mmc_swap; run mmc_tryboot mmc_boot01_dlup=run mmc_dl; run mmc_boot0_upd; run mmc_boot1_upd mmc_boot0_dlup=run mmc_dl; run mmc_boot0_upd mmc_boot0_upd=run div_512; gpt setenv mmc 0 Boot0; mmc write ${mmc_unzip_loadaddr} ${gpt_partition_addr} ${filesize_512} mmc_boot1_dlup=run mmc_dl; run mmc_boot1_upd mmc_boot1_upd=run div_512; gpt setenv mmc 0 Boot1; mmc write ${mmc_unzip_loadaddr} ${gpt_partition_addr} ${filesize_512} mmc_cur=5 mmc_dev=mmc 0 mmc_dl=dhcp ${loadaddr} ${mmc_fw}; unzip ${loadaddr} ${mmc_unzip_loadaddr} mmc_fip01_dlup=run fip_fw_dl; if test $? = 0; then run mmc_fip0_upd; run mmc_fip1_upd; fi mmc_fip0_dlup=run fip_fw_dl; if test $? = 0; then run mmc_fip0_upd; fi; mmc_fip0_upd=run div_512; gpt setenv mmc 0 fip; mmc write ${loadaddr} ${gpt_partition_addr} ${filesize_512} mmc_fip1_dlup=run fip_fw_dl; if test $? = 0; then run mmc_fip1_upd; fi; mmc_fip1_upd=run div_512; gpt setenv mmc 0 fip.bak; mmc write ${loadaddr} ${gpt_partition_addr} ${filesize_512} mmc_format=gpt guid ${mmc_dev} mmc_guid; gpt write ${mmc_dev} ${mmc_part}; env save mmc_fw=brsdk_standalone_arm64.ext4.gz mmc_load=ext4load ${mmc_dev}:${mmc_cur} ${loadaddr} Image.itb mmc_part=uuid_disk=${mmc_guid};name=fip,start=1MiB,size=128MiB,type=system;name=fip.bak,size=128MiB,type=system;name=Env,size=2MiB,type=data;name=Env.bak,size=2MiB,type=data;name=Boot0,size=1GiB,type=linux;name=Boot1,size=1GiB,type=linux;name=Data,size=-,type=linux mmc_swap=env set _mmc_tmp ${mmc_bak}; env set mmc_bak ${mmc_cur}; env set mmc_cur ${_mmc_tmp}; env set _mmc_tmp; env save mmc_tryboot=run mmc_load; if test $? = 0; then run fdt_update; setenv mtdroot root_next=/dev/mmcblk0p${mmc_cur}; run ramboot; fi; mmc_unzip_loadaddr=0x80000000 mtdparts=mtdparts=spi0:-(fip) nor_boot=sf probe; env set active linux; run nor_tryboot; env set active linux.bk; run nor_tryboot nor_dlup=dhcp ${nor_image}; run nor_update nor_fip_dlup=run fip_fw_dl; if test $? = 0; then run nor_fip_upd; fi; nor_fip_upd=sf probe; sf update ${loadaddr} 0 ${filesize} nor_image=brsdk_standalone_arm64.itb nor_only=env set mtdparts mtdparts=${nor_parts};env set bootcmd run nor_boot;env save nor_parts=spi0:1920k(fip),64k(Env),64k(Env.bk),25m(linux),25m(linux.bk),12m(rootfs_data) nor_tryboot=mtd read ${active} ${loadaddr}; run ramboot nor_update=sf probe; sf update ${fileaddr} linux ${filesize} ramboot=bootm start ${loadaddr}#${pcb}; bootm loados ${loadaddr}#${pcb}; bootm ramdisk ${loadaddr}#${pcb}; run set_rootargs; run setup; bootm fdt ${loadaddr}#${pcb}; bootm prep ${loadaddr}#${pcb}; bootm go ${loadaddr}#${pcb} rootargs_mmc=setenv rootargs root=/dev/mmcblk0p${mmc_cur} rw rootwait rootargs_ram=setenv rootargs root=/dev/ram0 ro rootwait set_rootargs=if test $initrd_start = 0; then run rootargs_mmc; else; run rootargs_ram; fi; setup=setenv bootargs console=${console} ${mtdparts} ${rootargs} ${mtdroot} fis_act=${active} boot_source=${boot_source} ${bootargs_extra} Environment size: 3056/65531 bytes Use the env set command if something is wrong or missing and remember to use the env save command when you are done. There might be other environment variables defined, but you can safely ignore them. Some explanation for the predefined environment variables and for what they are used for: fdt_high - The value 0xffffffff prevents an extra copy of the flattened device tree. initrd_high - The value 0xffffffff prevents an extra copy of the ramdisk. baudrate - U-Boot console baudrate. bootdelay - Number of seconds to wait for user input before running bootcmd. bootcmd - Command to run automatically at boot. Default is set to run mmc_boot. loadaddr - Temporary address to use when loading images via TFTP or from eMMC. mmc_unzip_loadaddr - Temporarily used address for uncompressing images mmc_bak - The backup partition index for boot1 mmc_boot - Try first to load 'brsdk_standalone_arm64.ext4.gz' from active partition. If failing then backup partition will be tried mmc_cur - The default partition index for boot0 mmc_dev - eMMC device to use in read/write commands. mmc_format - Format eMMC device according defined partition layout mmc_part - Partition layout definitions to use in 'mmc_format'. mmc_swap - Change active partition from 'Boot0' to 'Boot1' and vice versa mmc_tryboot - Seeking for available boot images mmc_load - Try to load an ITB image from the active partition ramboot - Try to load an run an ITB image from memory setup - Configuring bootargs environment variable rootargs_mmc - Configuration for rootfs in eMMC rootargs_ram- Configuration for rootfs in ram set_rootargs - Set correct configuration for root file system div_512 - Calculates the number of required flash pages (512 bytes) fip_fw - Defines the name of the FIP file used for eMMC and NOR update fip_fw_dl - Configuring and starting the DHCP request for file download nor_fip_upd - Writes the FIP data to the NOR flash device nor_fip_dlup - Download and write the FIP data to NOR flash device mmc_fip0_upd - Writes FIP data to the eMMC device in partition 'fip' mmc_fip_dlup - Download and write the FIP data to eMMC device mmc_fip1_upd - Writes FIP data to the eMMC device in partition 'fip.bak' mmc_fip1_dlup - Download and write the FIP data to eMMC device mmc_fip01_dlup - Download FIP and write data to partition 'fip0' and 'fip1' mmc_fw - Defines the name of the ext4.gz file for eMMC update mmc_dl - Download ext4.gz file and uncompress data into target memory mmc_boot0_upd - Writes the uncompressed data to the eMMC device in partition 'boot0' mmc_boot0_dlup - Download, uncompress and write the image data to eMMC device mmc_boot1_upd - Writes the uncompressed data to the eMMC device in partition 'boot1' mmc_boot1_dlup - Download, uncompress and write the image data to eMMC device mmc_boot01_dlup - Download, uncompress and write data to partition 'boot0' and 'boot1' console - Configuration settings for the console terminal mtdparts - NOR flash partition configuration bootargs_extra - Additional UBoot arguments The following examples assumes that the build artifacts of brsdk_standalone_arm64.ext4.gz and/or lan969x_a0.fip are available on the TFTP server. For a successful eMMC boot, a special partition layout needs to be make available on the flash device. This can be achieved by following two approaches: Use the already defined UBoot console command of 'mmc_format': m => run mmc_format success! Writing GPT: success! Saving Environment to MMC... Writing to redundant MMC(0)... OK or Write a GPT image directly to the blank eMMC device, like described in the eMMC GPT section. For checking the partition layout, use the UBoot command of 'mmc part'.This is the expected partition layout here: m => mmc part Partition Map for MMC device 0 -- Partition Type: EFI Part Start LBA End LBA Name Attributes Type GUID Partition GUID 1 0x00000040 0x0004003f \"fip\" attrs: 0x0000000000000000 type: ebd0a0a2-b9e5-4433-87c0-68b6b72699c7 guid: 00042021-0408-4601-9dcc-a8c51255994f 2 0x00040040 0x0008003f \"fip.bak\" attrs: 0x0000000000000000 type: ebd0a0a2-b9e5-4433-87c0-68b6b72699c7 guid: 8ef917d1-2c6f-4bd0-a5b2-331a19f91cb2 3 0x00080040 0x0008103f \"Env\" attrs: 0x0000000000000000 type: ebd0a0a2-b9e5-4433-87c0-68b6b72699c7 guid: 77877125-add0-4374-9e60-02cb591c9737 4 0x00081040 0x0008203f \"Env.bak\" attrs: 0x0000000000000000 type: ebd0a0a2-b9e5-4433-87c0-68b6b72699c7 guid: b4b84b8a-04e3-48ae-8536-aff5c9c495b1 5 0x00082040 0x0028203f \"Boot0\" attrs: 0x0000000000000000 type: ebd0a0a2-b9e5-4433-87c0-68b6b72699c7 guid: 35219908-c613-4b08-9322-3391ff571e19 6 0x00282040 0x0048203f \"Boot1\" attrs: 0x0000000000000000 type: ebd0a0a2-b9e5-4433-87c0-68b6b72699c7 guid: 8e123a33-e3d3-4db9-92f4-d3ebd9b3224f 7 0x00482040 0x00e8ffde \"Data\" attrs: 0x0000000000000000 type: ebd0a0a2-b9e5-4433-87c0-68b6b72699c7 guid: 02a90af2-5d1c-4a29-9177-97a513e3cae4 Verify that Start LBA in each partition equals the partition addresses in the corresponding environment variable mmc_p. Please also see the Partition table section. The following scenario will now upload an brsdk_standalone_arm64.ext4.gz file, which is containing an ext4 rootfs and including an ITB in the root directory. Following steps needs to be applied therefore: Run the mmc_boot0_dlup command to load the brsdk_standalone_arm64.ext4.gz file via DHCP to the target memory. Afterwards, the file will be uncompressed and written into the eMMC partition 'Boot0'. m => run mmc_boot0_dlup port0 Waiting for PHY auto negotiation to complete........ done Using port0 device TFTP from server 192.168.0.1; our IP address is 192.168.0.10 Filename 'brsdk_standalone_arm64.ext4.gz'. Load address: 0x64000000 Loading: ################################################################# ###### ........... ################################################################# ######################### 6.2 MiB/s done Bytes transferred = 106115072 (6533000 hex) MMC write: dev # 0, block # 8192, count 208960 ... 208960 blocks written: OK If UBoot run in its default configuration, it will do now all needed actions, and make the rootfs and ITB available in the expected eMMC partition. Running the fip_fw_dl command will upload the lan969x_a0.fip file using the DHCP/TFTP connection. m => fip_fw_dl port0 Waiting for PHY auto negotiation to complete........ done Using port0 device TFTP from server 192.168.0.1; our IP address is 192.168.0.10 Filename 'lan969x_a0.fip'. Load address: 0x64000000 Loading: ################################################################# ###### ........... ################################################################# ######################################### 2.9 MiB/s done Bytes transferred = 22538412 (157e8ac hex) Afterwards the command of ramboot will execute the image inside the memory. For example: ## Loading kernel from FIT Image at 64000000 ... Using Device Tree in place at 67d00000, end 67d07977 Starting kernel ... For configuring the device permanently to the network boot mode, set the environment variable of bootcmd as shown below: m => setenv bootcmd 'run fip_fw_dl; run ramboot' m => saveenv m => reset After reset, UBoot will run the sequence of bootcmd on every target startup. No matter if you have a eMMC equipped evaluation board you can also select to store the boot image in SPI NOR flash only and use this image as the boot media. This will not be as fast as booting from eMMC but can be used as a fallback solution in case the first option is not available for some other reason. To set the u-boot env to boot from nor it is required to run this command: m => run nor_only This will partitioned the NOR like this: m => mtd list List of MTD devices: * nor0 - device: spi-flash@0 - parent: qspi@e0834000 - driver: jedec_spi_nor - path: /ahb/apb/qspi@e0834000/spi-flash@0 - type: NOR flash - block size: 0x1000 bytes - min I/O: 0x1 bytes - 0x000000000000-0x000000200000 : \"nor0\" - 0x000000000000-0x0000001e0000 : \"fip\" - 0x0000001e0000-0x0000001f0000 : \"Env\" - 0x0000001f0000-0x000000200000 : \"Env.bk\" - 0x000000200000-0x000001a00000 : \"linux\" - 0x000001a00000-0x000003400000 : \"linux.bk\" - 0x000003400000-0x000004000000 : \"rootfs_data\" As you can see there are two 25MB linux partitions (a main and a backup) that can be used to store a FIT image. To add an image in the NOR flash it is required to download the image and write it in the NOR using the command: m => run nor_dlup You can boot the system with the run nor_boot command. The UBoot console can also be used for programming a new image. This can be the case for some update reasons. But therefore, a running system with UBoot needs to be available on the target. In the first step, we have to boot into UBoot console like following description: Reset the board and wait for the UBoot autoboot stage Press any key to stop autoboot timer in order to get a U-Boot console prompt. Now we will upload a GPT image like e.g. lan969x_a0-release-ssk-mmc.gpt to the target memory. m => dhcp 0x64000000 lan969x_a0-release-ssk-mmc.gpt port0 Waiting for PHY auto negotiation to complete........ done Using port0 device TFTP from server 192.168.0.1; our IP address is 192.168.0.10 Filename 'lan969x_a0-release-ssk-mmc.gpt'. Load address: 0x64000000 Loading: ################################################################# ################################################################# ###### ........... ################################################################# ####### 6.1 MiB/s done Bytes transferred = 104890368 (6408000 hex) Now the image data is uploaded to the target memory and can be written to the flash device. Lets focus on the next two upcoming commands. The first command converts the uploaded filesize to the required number of flash pages (512 byte). The second command is writing the image data to the eMMC flash device. Important is here, to set the write offset address of 0x0 (zero) for the flash. m => run div_512 m => mmc write ${loadaddr} 0x0 ${filesize_512} MMC write: dev # 0, block # 0, count 208960 ... 208960 blocks written: OK A running Linux system on the target can also be used for image update purpose. Therefore a network connection from the target to the host system needs to be established first. Afterwards a working TFTP server needs to make available in the same network. Using the fdisk command will dump the available partitions on the eMMC. This is useful for checking the proper partition index identifier. The device /dev/mmcblk0p corresponds to partition . # fdisk -l Found valid GPT with protective MBR; using GPT Disk /dev/mmcblk0: 15269888 sectors, 3360M Logical sector size: 512 Disk identifier (GUID): 671e9526-c34a-4bc9-9670-bfebb6dba410 Partition table holds up to 128 entries First usable sector is 34, last usable sector is 15269854 Number Start (sector) End (sector) Size Name 1 2048 264191 128M fip 2 264192 526335 128M fip.bak 3 526336 530431 2048K Env 4 530432 534527 2048K Env.bak 5 534528 2631679 1024M Boot0 6 2631680 4728831 1024M Boot1 7 4728832 7634910 1418M Data One way to upload the e.g. lan969x_a0-release-ssk.fip file, is to use a TFTP client inside the running Linux. Therefore attach the putty console to the target and upload the FIP file using the 'dhcp' or 'tftp' command in an e.g. /temp folder on the target. Afterwards the file can be written by using the dd command into the proper device partition. In this example, we will write the data into the partition named to fip which can be mapped to /dev/mmcblk0p1. dd if=/temp/lan969x_a0-release-ssk.fip of=/dev/mmcblk0p1 After rebooting of the target, the updated file will be executed now. The same approach as described before, can be applied also for updating the brsdk_standalone_arm64.ext4.gz binary. Upload the file using e.g. TFTP to a /temp folder or to a destination folder of your preference. In this folder, it needs to be unzipped first. Afterwards write the file by using the dd command to the proper device partition. In this example, we will write the data into the partition named to Boot0 which can be mapped to /dev/mmcblk0p5. dd if=/temp/ext4-itb-bare.ext4 of=/dev/mmcblk0p5 After rebooting of the target, the updated file will be executed now. BL1 Boot Loader 1: In secure immutable ROM (Trusted ROM Firmware) BL2 Boot Loader 2: In secure on-chip RAM, temporary (Trusted Boot Firmware) BL31 Boot Loader 31: Resident secure services (ARM v8) BL32 Boot Loader 32: Resident secure services (ARM v7) BL33 Boot Loader 33: Typically U-Boot. BSSK Binding Secret Symmetric Key CLI Command line interface DDR Double Data Rate, memory type DHCP Dynamic Host Configuration Protocol DTB Device Tree Blob DTC Device Tree Compiler DTS Device Tree Source files eMMC Embedded MultiMediaCard FCx Flex Com Interface #x FIP Firmware Image Package FIT Flattened Image Tree FS Filesystem FW Firmware GPT GUID Partition Table JTAG Joint Test Action Group, interface for testing and debugging KERNEL The Linux kernel LBA Logical Block Address OTP One-Time-Programmable Memory PCIe Peripheral Component Interconnect Express PSCI Power State Coordination Interface ROOTFS ROOT File System, used in Linux context ROT Root of Trust ROT-PK Root of Trust Public Key ROT-PK-SHA Root of Trust Public Key SHA (SHA of the public key of the ROT) ROT-PRIVATE Root of Trust Private Key SDCard Secure Digital Card SJTAG Secure JTAG SoC System on Chip SPI Serial Peripheral Interface SRAM Secure Ram SSK Secret Symmetric Key TBBR Trusted Board Boot Requirements TF-A Trusted Firmware for ARMv7 and ARMv8 TFTP Trivial File Transfer Protocol UART Universal Asynchronous Receiver-Transmitter","title":"Booting LAN969x","component":"bsp","version":"2024.03","name":"lan969x-boot","url":"/bsp/2024.03/supported-hw/lan969x-boot.html","titles":[{"text":"1. Introduction","hash":"_introduction","id":1},{"text":"2. Overview","hash":"_overview","id":2},{"text":"3. Boot media configuration","hash":"pin_modes","id":3},{"text":"3.1. UART Traces","hash":"_uart_traces","id":4},{"text":"3.2. Booting from eMMC/SDCard (0000, 0010, 0011 or 0101)","hash":"_booting_from_emmcsdcard_0000_0010_0011_or_0101","id":5},{"text":"3.3. Booting from NOR (0001 or 0100)","hash":"booting","id":6},{"text":"3.4. UART Monitor (1010)","hash":"uart_monitor","id":7},{"text":"3.5. High-Speed UART Monitor (1011)","hash":"_high_speed_uart_monitor_1011","id":8},{"text":"3.6. SPI Client (pin mode 1111)","hash":"_spi_client_pin_mode_1111","id":9},{"text":"4. Beyond TF-A","hash":"_beyond_tf_a","id":10},{"text":"4.1. TF-A/UBoot/Linux","hash":"_tf_aubootlinux","id":11},{"text":"4.2. TF-A/Linux","hash":"_tf_alinux","id":12},{"text":"5. Images and artifacts","hash":"_images_and_artifacts","id":13},{"text":"5.1. TFA images","hash":"_tfa_images","id":14},{"text":"5.2. Buildroot artifacts","hash":"_buildroot_artifacts","id":15},{"text":"5.3. Artifacts","hash":"_artifacts","id":16},{"text":"5.3.1. TFA images","hash":"_tfa_images_2","id":17},{"text":"5.3.2. Buildroot artifacts","hash":"_buildroot_artifacts_2","id":18},{"text":"5.3.3. Kernel","hash":"_kernel","id":19},{"text":"5.3.4. DTS","hash":"_dts","id":20},{"text":"5.3.5. DTB","hash":"_dtb","id":21},{"text":"5.3.6. rootfs","hash":"_rootfs","id":22},{"text":"5.3.7. rootfs/tar","hash":"_rootfstar","id":23},{"text":"5.3.8. squashfs","hash":"_squashfs","id":24},{"text":"5.3.9. ext4","hash":"_ext4","id":25},{"text":"5.4. FIT","hash":"_fit","id":26},{"text":"5.4.1. ITB full","hash":"_itb_full","id":27},{"text":"5.5. ext4","hash":"_ext4_2","id":28},{"text":"5.5.1. ext4 with embedded ITB bare on FS","hash":"_ext4_with_embedded_itb_bare_on_fs","id":29},{"text":"5.6. FIP","hash":"_fip","id":30},{"text":"5.7. GPT image","hash":"_gpt_image","id":31},{"text":"5.8. eMMC/SDCard default partition schema","hash":"part_table","id":32},{"text":"6. Boot configurations","hash":"_boot_configurations","id":33},{"text":"6.1. Network-boot","hash":"_network_boot","id":34},{"text":"6.2. NOR","hash":"_nor","id":35},{"text":"6.3. eMMC","hash":"_emmc","id":36},{"text":"7. Use-cases","hash":"_use_cases","id":37},{"text":"7.1. Debrick or blank flash","hash":"_debrick_or_blank_flash","id":38},{"text":"7.2. UBoot","hash":"_uboot","id":39},{"text":"7.2.1. Working with MMC subsystem","hash":"_working_with_mmc_subsystem","id":40},{"text":"7.2.2. Working with NOR subsystem","hash":"_working_with_nor_subsystem","id":41},{"text":"7.2.3. Loading files from network","hash":"load_files_network","id":42},{"text":"7.2.4. Boot image","hash":"_boot_image","id":43},{"text":"7.2.4.1. from eMMC","hash":"_from_emmc","id":44},{"text":"7.2.4.2. from network","hash":"_from_network","id":45},{"text":"7.2.4.3. from NOR","hash":"_from_nor","id":46},{"text":"7.2.5. Program image","hash":"_program_image","id":47},{"text":"7.2.5.1. to eMMC","hash":"_to_emmc","id":48},{"text":"7.3. Update image from Linux","hash":"_update_image_from_linux","id":49},{"text":"7.3.1. Update FIP","hash":"_update_fip","id":50},{"text":"7.3.2. Update ext4-img","hash":"_update_ext4_img","id":51},{"text":"8. TERMS and ABBREVIATIONS","hash":"term","id":52}]},"153":{"id":153,"text":"LAN969X SoC have 4 FLEXCOMs (Flexible Serial Communication Controller). Each flexcom supports three serial communication protocols that includes USART (Universal Synchronous Asynchronous Receiver Transceiver). See USART documentation SPI (Serial Peripheral Interface). See SPI documentation TWI (Two-wire Interface) or I2C (Inter Integrated Circuit). See TWI documentation Each flexcom has two optional I/O lines. Namely, CS0 and CS1 in flexcom SPI mode. CTS and RTS in flexcom USART mode. These chip-selects can be mapped to lan969x FLEXCOM_SHARED[0-20] pins and usage depends on functions being configured. Following kernel config options should be enabled to use LAN969x Flexcom interface: CONFIG_MFD_ATMEL_FLEXCOM - Flexcom driver config option. Following configurations are required to define a flexcom in device tree: compatible string must be set to atmel,sama5d2-flexcom or set to microchip,lan969x-flexcom in case flexcom chip-select configurations are required. Flexcom reg property must be set with register address and length. Refer table below: FLEXCOM ID Flexcom base registers map flx0 flx1 flx2 flx3 clocks property must be set to where x is flexcom ID. #address-cells must be set to 1. #size-cells must be set to 1. ranges must be set to one range for the full I/O register region. Optional flexcom chip-select configurations: In order to map flexcom USART cts, rts lines or flexcom SPI cs0, cs1 lines to flexcom shared pins, use below properties: Append flexcom shared register address and length to reg property. Refer table below: microchip,flx-shrd-pins - Specify the flexcom shared pins to be mapped to chip-select line. Possible flexcom shared pins are [0-20]. microchip,flx-cs - Specify chip-selects to be configured. 0 for cts line in USART mode, cs0 in SPI mode. 1 for rts line in USART mode, cs1 in SPI mode. FLEXCOM ID Flexcom shared registers map flx0 flx1 flx2 flx3 flx4 Flexcom Documentation Following example shows how a flexcom should be defined in device tree. Example to configure flexcom2 in TWI mode: dtsi file: flx2: flexcom@e0060000 { compatible = \"atmel,sama5d2-flexcom\"; reg = ; clocks = ; #address-cells = ; #size-cells = ; ranges = ; status = \"disabled\"; }; dts file: &flx2 { atmel,flexcom-mode = ; status = \"okay\"; }; Example to configure flexcom3 in SPI mode and map cs0 to flexcom shared pin 4: dtsi file: flx3: flexcom@e0064000 { compatible = \"microchip,lan969x-flexcom\"; reg = , ; clocks = ; #address-cells = ; #size-cells = ; ranges = ; status = \"disabled\"; }; dts file: &flx3 { atmel,flexcom-mode = ; microchip,flx-shrd-pins = ; microchip,flx-cs = ; status = \"okay\"; };","title":"LAN969x FLEXCOM","component":"bsp","version":"2024.03","name":"lan969x-flexcom","url":"/bsp/2024.03/supported-hw/lan969x-flexcom.html","titles":[{"text":"1. SoC Resources","hash":"_soc_resources","id":1},{"text":"2. Kernel configurations","hash":"_kernel_configurations","id":2},{"text":"3. Devicetree Configuration","hash":"_devicetree_configuration","id":3},{"text":"3.1. References","hash":"_references","id":4},{"text":"3.2. Example","hash":"_example","id":5}]},"154":{"id":154,"text":"LAN969X SoC have 4 FLEXCOMs (Flexible Serial Communication Controller). Each flexcom supports three serial communication protocols that includes USART(Universal Synchronous Asynchronous Receiver Transceiver). SPI(Serial Peripheral Interface). TWI(Two-wire Interface) or I2C(Inter Integrated Circuit). In order to use a I2C interface, a specific flexcom should be configured in I2C mode. Following kernel config options should be enabled to use LAN969x I2C interface: CONFIG_MFD_ATMEL_FLEXCOM - Flexcom driver config option. CONFIG_I2C_AT91 - I2C driver config option. Corresponding flash driver should be enabled. Below example explains I2C with a EEPROM device for which CONFIG_EEPROM_AT24 config option is required. To use I2C interface, following configurations are required in device tree. Each of the flexcom flx0, flx1, flx2 and flx3 nodes can be configured in I2C mode ATMEL_FLEXCOM_MODE_TWI to use I2C interface. compatible string must be set to microchip,sam9x60-i2c. reg property must be set with register address and length as GPIO pins for TXD, RXD should be configured to pinctrl-0 property.. List of possible pin mappings are as in below table: FLEXCOM ID ALT Mode RXD pin TXD pin flx0 ALT 2 GPIO3 GPIO4 flx2 ALT 3 GPIO15 GPIO16 flx1 ALT 2 GPIO28 GPIO29 flx3 ALT 2 GPIO55 GPIO56 flx2 ALT 1 GPIO65 GPIO66 interrupts property must set with interrupt details. Interrupt lines[CPU INTR] corresponding to a flexcom must be configured as defined in below table: FLEXCOM ID Shared Peripheral Interrupt CPU INTR flx0 78 46 flx1 79 47 flx2 80 48 flx3 81 49 Note that Shared peripheral interrupt lines start at index ID32. So, CPU INTR must be calculated as [Shared peripheral interrupt number - 32]. Input clock clocks property must be set to &fabric_clk. Note that Fabric clock (250Mhz) is clock used by AXI, AHB fabric and APB bridges which connects all peripherals. clock-names must be set to usart. GPIO flexcom shared pins should be configured as per board design. I2C driver implementation Flexcom DT documentation I2C DT documentation Following example shows how a flexcom I2C should be defined in DT to use SFP devices via an i2c MUX on the EVB-LAN9696-24port board: / { &flx3 { atmel,flexcom-mode = ; status = \"okay\"; i2c3: i2c@600 { pinctrl-0 = ; pinctrl-names = \"default\"; i2c-analog-filter; i2c-digital-filter; i2c-digital-filter-width-ns = ; i2c-sda-hold-time-ns = ; status = \"okay\"; }; }; &gpio { fc3_pins: fc3-pins { pins = \"GPIO_55\", \"GPIO_56\"; function = \"fc\"; }; }; The SFP devices are assigned each to a separate channel by the I2C controller, so you will be able to see 4 devices besides the 2c controller and the i2c mux. # cat /sys/bus/i2c/devices/i2c-0/i2c-1/name i2c-0-mux (chan_id 0) The i2cdetect tool will also list all the devices: # i2cdetect -l i2c-3 i2c i2c-0-mux (chan_id 2) I2C adapter i2c-1 i2c i2c-0-mux (chan_id 0) I2C adapter i2c-4 i2c i2c-0-mux (chan_id 3) I2C adapter i2c-2 i2c i2c-0-mux (chan_id 1) I2C adapter i2c-0 i2c AT91 I2C adapter i2c-5 i2c i2c-0-mux (chan_id 7) I2C adapter This dumps the content of one of the SFP eeproms, to verify that the device is accessible: # i2cdump 0 0x50 i2cdump: WARNING! This program can confuse your I2C bus Continue? [y/N] y 0 1 2 3 4 5 6 7 8 9 a b c d e f 0123456789abcdef 00: 03 04 21 01 00 00 00 00 04 00 00 00 67 00 00 00 ??!?....?...g... 10: 00 00 01 00 46 53 20 20 20 20 20 20 20 20 20 20 ..?.FS 20: 20 20 20 20 00 00 40 20 53 46 50 50 2d 50 43 30 ..@ SFPP-PC0 30: 31 20 20 20 20 20 20 20 41 20 20 20 00 00 00 29 1 A ...) 40: 00 00 00 00 46 32 30 31 31 31 33 35 31 39 36 2d ....F2011135196- 50: 31 20 20 20 32 30 30 39 32 39 20 20 00 00 00 77 1 200929 ...w 60: 37 34 30 2d 30 33 31 38 35 32 20 52 45 56 20 30 740-031852 REV 0 70: 31 20 ff ff ff ff ff ff ff ff ff ff ff ff ff 00 1 .............. 80: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ................ 90: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ................ a0: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ................ b0: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ................ c0: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ................ d0: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ................ e0: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ................ f0: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ................ #","title":"LAN969x I2C","component":"bsp","version":"2024.03","name":"lan969x-i2c","url":"/bsp/2024.03/supported-hw/lan969x-i2c.html","titles":[{"text":"1. SoC Resources","hash":"_soc_resources","id":1},{"text":"2. Kernel configurations","hash":"_kernel_configurations","id":2},{"text":"3. Devicetree Configuration","hash":"_devicetree_configuration","id":3},{"text":"3.1. References","hash":"_references","id":4},{"text":"3.2. Example","hash":"_example","id":5},{"text":"4. UserSpace","hash":"_userspace","id":6},{"text":"4.1. Confirm instances are created","hash":"_confirm_instances_are_created","id":7},{"text":"4.2. Show the SFP eeprom","hash":"_show_the_sfp_eeprom","id":8}]},"155":{"id":155,"text":"LAN969x SoC supports two instances of CAN-FD (Control Area Network with Flexible Data-Rate) which is compliant with CAN 2.0 Part A and 2.0 Part B. Following kernel config options should be enabled to use LAN969x MCAN: CONFIG_CAN - CAN driver config option. CONFIG_CAN_M_CAN - Bosch MCAN config option. CONFIG_CAN_M_CAN_PLATFORM - Bosch M_CAN support for io-mapped devices. To enable MCAN interface, following configurations are required in device tree: compatible string must be set to bosch,m_can. reg property must be set to and for mcan0, and and for mcan1. reg-names must be set to m_can and message_ram. interrupts property must be set with interrupt details as show in the table: MCAN ID Shared Peripheral Interrupt (int0) CPU INTR (int0) Shared Peripheral Interrupt (int1) CPU INTR (int1) mcan0 102 70 103 71 mcan1 104 72 105 73 Note Shared peripheral interrupt lines start at index ID32. So, CPU INTR must be calculated as [Shared peripheral interrupt number - 32]. interrupt-names must be set to int0 and int1. clocks property must be set to , , where x is MCAN ID (0-1). clock-names must be set to hclk and cclk. bosch,mram-cfg property must be set to for mcan0 and standby-gpios property is optional and defines a regular GPIO line that is used to mute the transmitter and block the receiver if the line is high. MCAN DT Documentation CAN driver implementation Following example shows how a CAN controller should be defined in DT: dtsi file: can0: can@e081c000 { compatible = \"bosch,m_can\"; reg = , ; reg-names = \"m_can\", \"message_ram\"; interrupts = , ; interrupt-names = \"int0\", \"int1\"; clocks = , ; clock-names = \"hclk\", \"cclk\"; assigned-clocks = ; assigned-clock-rates = ; bosch,mram-cfg = ; status = \"disabled\"; }; dts file changes: &can0 { pinctrl-0 = ; pinctrl-names = \"default\"; standby-gpios = ; status = \"okay\"; }; The standby-gpios shown above is just an example and must match the actual board design. The EVB-LAN9696-24port EVB does not have any CAN devices, so please refer to the LAN966x MCAN page for more details.","title":"LAN969x MCAN","component":"bsp","version":"2024.03","name":"lan969x-mcan","url":"/bsp/2024.03/supported-hw/lan969x-mcan.html","titles":[{"text":"1. SoC Resources","hash":"_soc_resources","id":1},{"text":"2. Kernel configurations","hash":"_kernel_configurations","id":2},{"text":"3. Devicetree Configuration","hash":"_devicetree_configuration","id":3},{"text":"3.1. References","hash":"_references","id":4},{"text":"3.2. Example","hash":"_example","id":5}]},"156":{"id":156,"text":"LAN969x SDMMC controller supports the embedded Multimedia Card (e.MMC) Specification (v5.01) and the SD Memory Card(v3.0). LAN969x has two SDMMC controller instances. SDMMC controller 0 can operate in 4bit or 8bit wide bus mode, and controller 1 can operate in 4 bit mode. It is only possible t use both controllers at the same time if they are both configured for 4bit wide mode as some of the pins would overlap otherwise. Following kernel config options should be enabled to use LAN969x SDMMC: CONFIG_MMC_SDHCI - SD Host controller config option. CONDFIG_MMC - MMC interface config option CONFIG_MMC_SDHCI_OF_AT91 - SDHCI OF support (for the Atmel SDMMC controller) config option. To use SDMMC interface, following configurations are required in device tree. reg property must be set with register address and length. Refer table below: FLEXCOM ID Flexcom base registers map sdmmc0 sdmmc1 compatible string must be set to microchip,lan966x-sdhci. pinctrl-0 property must be set to , to use SD Card interface. , to use eMMC interface. Note emmc_sd_pins includes CMD, CLK, D0, D1, D2, D3, RSTN pins for both SD and eMMC, sdmmc_pins includes VSEL, WP, CD, LED pins for SD interface only and emmc_pins includes D4, D5, D6, D7 pins for eMMC interface only. sdmmc_pins and emmc_pins pin numbers are same but driver will take care of configuring different ALT modes for SD and eMMC pins. pinctrl node CMD pin CLK pin D0 D1 D2 D3 RSTN emmc_sd_pins GPIO14 GPIO15 GPIO16 GPIO17 GPIO18 GPIO19 GPIO24 pinctrl node DT Func VSEL pin WP pin CD pin LED pin sdmmc_pins sd GPIO20 GPIO21 GPIO22 GPIO23 pinctrl node DT Func D4 D5 D6 D7 emmc_pins emmc GPIO20 GPIO21 GPIO22 GPIO23 interrupts property must set with interrupt details. Interrupt number[CPU INTR] corresponding to a sdmmc must be configured as defined below: SDMMC ID Shared Peripheral Interrupt CPU INTR sdmmc0 96 64 sdmmc1 82 50 Note Shared peripheral interrupt lines start at index ID32. So, CPU INTR must be calculated as [Shared peripheral interrupt number - 32]. Input clock clocks property must be set to GCK clock using phandle and GCK ID as . clock-names must be set to hclock and multclk assigned-clocks must be set to . assigned-clock-rates must be set to 45Mhz. Note While operating as eMMC interface, tx-phase property must be set to zero. Possible phase shift values are 0 for 180degrees, c for 90 degrees, 4 for 270 degrees, 8 for 360 degrees. 180 degress phase shift is considered as best chioce for generating phase difference between data/command bus and output clock. It provides sufficient time limit to compensate for any board delays/skew and provides sufficient time margin for setup/hold time requirements. SDHCI DT Documentation MMC DT Documentation Following example shows how a 8bit bus eMMC should be defined in DT: dtsi file: sdmmc0: sdhci-host@e0830000 { compatible = \"microchip,lan966x-sdhci\"; reg = ; interrupts = ; clocks = , ; clock-names = \"hclock\", \"multclk\"; assigned-clocks = ; assigned-clock-rates = ; status = \"disabled\"; }; dts file changes for eMMC: &gpio { emmc_sd_pins: emmc-sd-pins { /* eMMC_SD - CMD, CLK, D0, D1, D2, D3, D4, D5, D6, D7, RSTN */ pins = \"GPIO_14\", \"GPIO_15\", \"GPIO_16\", \"GPIO_17\", \"GPIO_18\", \"GPIO_19\", \"GPIO_20\", \"GPIO_21\", \"GPIO_22\", \"GPIO_23\", \"GPIO_24\"; function = \"emmc_sd\"; }; }; &sdmmc0 { pinctrl-0 = ; pinctrl-names = \"default\"; max-frequency = ; bus-width = ; non-removable; no-1-8-v; disable-wp; status = \"okay\"; }; Steps to Format, Create partitions and Mount SD/eMMC To confirm if mmc device is created: Check if a mmc device is created in /dev directory. To check card details, mount debugfs using command mount -t debugfs none /sys/kernel/debug/ and then use command cat /sys/kernel/debug/mmc0/ios to get IOs debugging information. eMMC Interface testing: # ls -l /dev/mmc* brw------- 1 root root 179, 0 Jan 1 00:00 /dev/mmcblk0 brw------- 1 root root 179, 8 Jan 1 00:00 /dev/mmcblk0boot0 brw------- 1 root root 179, 16 Jan 1 00:00 /dev/mmcblk0boot1 brw------- 1 root root 179, 1 Jan 1 00:00 /dev/mmcblk0p1 brw------- 1 root root 179, 2 Jan 1 00:00 /dev/mmcblk0p2 brw------- 1 root root 179, 3 Jan 1 00:00 /dev/mmcblk0p3 brw------- 1 root root 179, 4 Jan 1 00:00 /dev/mmcblk0p4 brw------- 1 root root 179, 5 Jan 1 00:00 /dev/mmcblk0p5 brw------- 1 root root 179, 6 Jan 1 00:00 /dev/mmcblk0p6 brw------- 1 root root 179, 7 Jan 1 00:00 /dev/mmcblk0p7 crw------- 1 root root 247, 0 Jan 1 00:00 /dev/mmcblk0rpmb # dmesg | grep mmc [ 0.000000] Kernel command line: console=ttyAT0,115200 root=/dev/mmcblk0p5 noinitrd rootwait rw loglevel=9 uio_pdrv_genirq.of_id=generic-uio [ 2.396863] mmc0: SDHCI controller on e0830000.sdhci-host [e0830000.sdhci-host] using ADMA [ 2.534391] Waiting for root device /dev/mmcblk0p5... [ 2.537072] mmc0: new high speed MMC card at address 0001 [ 2.542775] mmcblk0: mmc0:0001 eMMC 3.63 GiB [ 2.550291] mmcblk0: p1 p2 p3 p4 p5 p6 p7 [ 2.552831] mmcblk0boot0: mmc0:0001 eMMC 16.0 MiB [ 2.557425] mmcblk0boot1: mmc0:0001 eMMC 16.0 MiB [ 2.562100] mmcblk0rpmb: mmc0:0001 eMMC 512 KiB, chardev (247:0) [ 2.620999] EXT4-fs (mmcblk0p5): recovery complete [ 2.623655] EXT4-fs (mmcblk0p5): mounted filesystem with ordered data mode. Quota mode: disabled. [ 2.738213] EXT4-fs (mmcblk0p5): re-mounted. Quota mode: disabled. # mount -t debugfs none /sys/kernel/debug/ # cat /sys/kernel/debug/mmc0/ios clock: 44000000 Hz actual clock: 44000000 Hz vdd: 21 (3.3 ~ 3.4 V) bus mode: 2 (push-pull) chip select: 0 (don't care) power mode: 2 (on) bus width: 3 (8 bits) timing spec: 1 (mmc high-speed) signal voltage: 0 (3.30 V) driver type: 0 (driver type B) # dd if=/dev/zero of=/dev/mmcblk0 bs=10M count=1 1+0 records in 1+0 records out # # fdisk /dev/mmcblk0 Device contains neither a valid DOS partition table, nor Sun, SGI, OSF or GPT disklabel Building a new DOS disklabel. Changes will remain in memory only, until you decide to write them. After that the previous content won't be recoverable. The number of cylinders for this disk is set to 119296. There is nothing wrong with that, but this is larger than 1024, and could in certain setups cause problems with: 1) software that runs at boot time (e.g., old versions of LILO) 2) booting and partitioning software from other OSs (e.g., DOS FDISK, OS/2 FDISK) Command (m for help): p Disk /dev/mmcblk0: 3728 MB, 3909091328 bytes, 7634944 sectors 119296 cylinders, 4 heads, 16 sectors/track Units: sectors of 1 * 512 = 512 bytes Device Boot StartCHS EndCHS StartLBA EndLBA Sectors Size Id Type Command (m for help): n Partition type p primary partition (1-4) e extended 1 Invalid partition number for type '1' Partition type p primary partition (1-4) e extended p Partition number (1-4): 1 First sector (16-7634943, default 16): Using default value 16 Last sector or +size{,K,M,G,T} (16-7634943, default 7634943): +64M Command (m for help): t Selected partition 1 Hex code (type L to list codes): 6 Changed system type of partition 1 to 6 (FAT16) Command (m for help): n Partition type p primary partition (1-4) e extended p Partition number (1-4): 2 First sector (131088-7634943, default 131088): Using default value 131088 Last sector or +size{,K,M,G,T} (131088-7634943, default 7634943): +1500M Command (m for help): p Disk /dev/mmcblk0: 3728 MB, 3909091328 bytes, 7634944 sectors 119296 cylinders, 4 heads, 16 sectors/track Units: sectors of 1 * 512 = 512 bytes Device Boot StartCHS EndCHS StartLBA EndLBA Sectors Size Id Type /dev/mmcblk0p1 0,1,1 1023,3,16 16 131087 131072 64.0M 6 FAT16 /dev/mmcblk0p2 1023,3,16 1023,3,16 131088 3203087 3072000 1500M 83 Linux Command (m for help): w The partition table has been altered. Calling ioctl() to re-read partition table [ 44.720213] mmcblk0: p1 p2 # # mkdir /tmp/ext # mkfs.ext2 /dev/mmcblk0p2 mke2fs 1.45.5 (07-Jan-2020) /dev/mmcblk0p2 contains a ext2 file system last mounted on /tmp/ext on Thu Jan 1 00:02:16 1970 Proceed anyway? (y,N) # mount -t ext2 /dev/mmcblk0p2 /tmp/ext # # # echo \"Hello_World: Welcome\" > /tmp/ext/t6.txt # # cat /tmp/ext/t6.txt Hello_World: Welcome # # # umount /tmp/ext/ Note Enable e2fsprogs utility from buildroot to use ext2,ext3,ext4 filesystems.","title":"LAN969x SDMMC","component":"bsp","version":"2024.03","name":"lan969x-mmc","url":"/bsp/2024.03/supported-hw/lan969x-mmc.html","titles":[{"text":"1. SoC Resources","hash":"_soc_resources","id":1},{"text":"2. Kernel configurations","hash":"_kernel_configurations","id":2},{"text":"3. Devicetree Configuration","hash":"_devicetree_configuration","id":3},{"text":"3.1. References","hash":"_references","id":4},{"text":"3.2. Example","hash":"_example","id":5},{"text":"4. UserSpace","hash":"_userspace","id":6},{"text":"4.1. Confirm instances are created","hash":"_confirm_instances_are_created","id":7},{"text":"4.2. Example on how to use","hash":"_example_on_how_to_use","id":8}]},"157":{"id":157,"text":"LAN969X SoC has 8K of internal OTP(One time programmable). Following kernel config options should be enabled to enable the LAN969X OTP driver and to be able to access the OTP from userspace. CONFIG_NVMEM_MICROCHIP_OTP - None volatile memory driver config option. CONFIG_NVMEM_SYSFS - Config option to enable access to OTP using sysfs. To enable LAN969X OTP, following configurations are required in device tree: compatible - string must be set to microchip,lan969x-otp. reg - property must be set to . Following example shows how the OTP should be defined in DT: otp0: otp@e0021000 { compatible = \"microchip,lan969x-otp\"; reg = ; }; NVMEM Subsystem Before using the userspace application to configure the OTP, make sure that the OTP device is created. If the device is created, the following file should exist: /sys/bus/nvmem/devices/lan9662-otp0/nvmem # ll /sys/bus/nvmem/devices/lan9662-otp0/nvmem -rw-r--r-- 1 root root 16.0K Jan 1 00:41 /sys/bus/nvmem/devices/lan9662-otp0/nvmem The userspace application otp it is used to read/write the OTP. It has the following help: # otp --help This tool can be used to access and modify the OTP in the following SoCs: - LAN9662 - LAN9668 - LAN969X Usage: otp field list otp field get [] otp field set [--merge] (ascii|hex|dec|3ascii-dec) otp addr get otp addr set [--merge] (ascii|hex|dec) otp tag list-tag-names otp tag print otp tag info otp tag get (|) otp tag del (|) otp tag set (|) (ascii|hex|dec) otp nvcnt get (trusted|nontrusted) otp nvcnt set (trusted|nontrusted) otp import-keys [--no-randomize-huk] otp region show otp region write-protect otp region non-secure otp init pcb ethaddr (random-ethaddr|) ethaddr_count Options: -h --help Show this screen. --version Show version. --verbose Enable verbose traces on console -d DEV --device DEV NVRAM device This can also be a normal block device, or even a file. -i ID --chip-id ID Specify OTP layout coresponding to the given chip ID. NOTE: This setting is only allowed on devices where the part-ID at byte address 0x5-0x6 is not programmed, or if the programmed part-ID matches the provided ID. --chip-id-force Force usage of the ID given with --chip-id=ID, even though a different part ID is programmed in the OTP. --no-confirm Do not require the user to confirm write operations. General: The OTP in these products are accessed by various elements including: discrete logic in the chip, TF-A bootrom (BL1), Secure Boot loader (BL2), EL3 Runtime software (BL31/BL32), UBoot, Linux kernel and this user-space application. The OTP has a concept of regions, which can be used to configure access control (read and write protection). The regions and write protect mask is in the OTP it self and need to be provisioned. This tool support 3 different kind of content: Fields: This is fixed-length data at fixed positions in the OTP. The tool has a build in template for each of the supported SoC with name, address, length and description. Non volatile counters: This is counters which can only be incremented. This is used to do rollback protection. This is implemented as a bitfields, and the max value is therefore the number of allocated bits for a given counter. Tagged data: This is semi-one-time-programmable data. The purpose of this is to allow store various data such as: mac-addresses, board-ID, ECO level, uniq default password which may be printed on the device, etc. This is implemented as an array of 64-bits records with the following layout: +--------+--------+--------+----------+ | size:3 | cont:1 | tag:12 | value:48 | +--------+--------+--------+----------+ Where: size: specify the number of valid bytes in value. 0 and 0b111 (7) are invalid. If a record needs to be invalidated, then it is a matter of writing 0b111 in this field. cont: specify that the content continues in the next valid record with the given tag value. tag: This is a number from 0-2047 specifying the type of data (the implementation has a list of named tags which may be used). value: Value associated to the tag. Note: All commands writing ('field set', 'addr set', 'tag del|set') to OTP shall do: - Read out existing content. - If '--merge' flag is not set, confirm that the specified value is possible to set. Abort if not. - Print in hex what is about the be written where - Let use user confirm. Command details: otp help: Print this message otp field list: List all fields recognized by the implementation template. otp field get [] Get the content of a specific fields, or all fields if non is provided. NOTE: This shall skip fields in areas being read-protected, but will happily print secrets if not proper protected. otp field set [--merge] (ascii|hex|dec) Set the content of a given field. - If the --merge option is provided, then the content is bit-wised OR with what is in the OTP field already. If not, a check is performed to confirm that the desired value can be written as-is. - The value can either be provided in ascii format, or as a hex-string. - A hex string must always provide an equal number of chars (no half bytes). - The length of the value must match what is find in the template. otp addr get Read the raw content in OTP. If the requested area is (partly) read-protected, then return error. otp addr set [--merge] (ascii|hex|dec) Write raw content in the OTP. If the requested area is (partly) write-protected, then return error before any content is written. otp nvcnt (trusted|nontrusted) get otp nvcnt (trusted|nontrusted) set Get/set the value of either the trusted or nontrusted non-volatile-ever-incrementing-counter. This is implemented as a bit-field, and a given implementation will have limited capacity. NOTE: This is used by the secure boot-ROM to implement rollback protection. otp tag list-tag-names List all the tag names and associated numbers know by the implementation. otp tag info Print statistics on tag usages. otp tag print Print all valid tags in the otp. otp tag get (bin|hex) [(|)] Read out the value of a given tag (either by name or by number) or dump all tags if no name/number is provided. If no valid tag with matching name/number was found, then return an error. otp tag [--merge] set (|) (ascii|hex) Set a tagged value. If the --merge flag was set, then the content provided must be of exact same length as the length of existing content in the OTP. If this tag already exists, then it shall be replaced (meaning invalidating the existing tag). otp tag append (|) Append more data to a tag. This will always create a new record and set the 'cont' flag in existing tags. otp tag del (|) Invalidate an existing tag in the OTP. otp import-keys [--no-randomize-huk] : This shall read the content from a file (or stdin if '-' is provided as file-name). The content is binary and length must match the platform expected length. It can only be used to program the region with TF-A keys (on LAN966x this is region 4). The region will not be defined when the tool is called, and a per platform hard-coded offset/size will be used. Unless the --no-randomize-huk flag is set, then the OTP_TBBR_HUK field will be set with randomized content using /dev/random. otp region show: Show the start-address, end-address and write-protect bit of all regions. Some regions may be displayed with start- and end-address equal to 0, which means that this region is still not defiend. otp region write-protect : This shall check if the region is defined (in `PROTECT_REGION_ADDR`). If not, the region shall be defined using the per-chip-id defined template. Once the region is defined it shall be marked as write-protected in `PROTECT_OTP_WRITE`. otp init pcb ethaddr (random-ethaddr|) ethaddr_count NOTE: This shall only be called during board manufacturing! Do not call more than once. This sub-command will do the following: - Do the equivalent of: $ opt tag set pcb dec - Do the equivalent of: $ opt tag set ethaddr_count dec - Do the equivalent of: $ opt tag set ethaddr ascii - If the ethaddr-address is `random-ethaddr`, then generate a random ETHADDR with the following limitation: - Broadcast bit is 0 - Local-administrated bit is 1 - It must not be all zero and not all ff. Here are some examples on how to use it Once something is written in the OTP this can’t be erased. So make sure you can write the right command. You can test the command by running the same command on a file. If the chip id has not been programmed into the OTP you can provide it on the command line and this use the tool correctly. How to initialize the board: otp -d /sys/bus/nvmem/devices/lan9662-otp0/nvmem init partid 9698 serial pcb 9300 ethaddr random-ethaddr ethaddr_count 16 This command will do the following: set the field partid to 9698 set the field serial_number to set the tag pcb to 9300 set the tag ethaddr to a random generated eth addr where bit 1 in MSB is set to 1 and bit 0 in MSB is set to 0. set the tag ethaddr_count to 16 meaning that it would reserve 16 addresses Here is a way to read back a field: otp -d /sys/bus/nvmem/devices/lan9662-otp0/nvmem field get PARTID 2 be25|.%| The first value of the output represents the number of bytes the field it has, second represents the value in little endian in hex and the last value represents the ascii characters of the value. To see the available fields the following command can be used: # otp -d /sys/bus/nvmem/devices/lan9662-otp0/nvmem --chip-id 9692 field list Field: OTP_PRG offset: 0x0000 length: 04 Field: FEAT_IDS offset: 0x0004 length: 01 Field: PARTID offset: 0x0005 length: 02 Field: TST_TRK offset: 0x0007 length: 01 Field: SERIAL_NUMBER offset: 0x0008 length: 08 Field: SECURE_JTAG offset: 0x0010 length: 04 Field: WAFER_JTAG offset: 0x0014 length: 07 Field: JTAG_UUID offset: 0x0020 length: 10 Field: TRIM offset: 0x0030 length: 08 Field: PROTECT_OTP_WRITE offset: 0x0040 length: 04 Field: PROTECT_REGION_ADDR offset: 0x0044 length: 32 Field: OTP_PCIE_FLAGS offset: 0x0064 length: 04 Field: OTP_PCIE_DEV offset: 0x0068 length: 04 Field: OTP_PCIE_ID offset: 0x006c length: 08 Field: OTP_PCIE_BARS offset: 0x0074 length: 40 Field: OTP_TBBR_ROTPK offset: 0x0100 length: 32 Field: OTP_TBBR_HUK offset: 0x0120 length: 32 Field: OTP_TBBR_EK offset: 0x0140 length: 32 Field: OTP_TBBR_SSK offset: 0x0160 length: 32 Field: OTP_SJTAG_SSK offset: 0x0180 length: 32 Field: OTP_STRAP_DISABLE_MASK offset: 0x01a4 length: 02 Here is a way to list all tags: # otp -d /sys/bus/nvmem/devices/lan9662-otp0/nvmem --chip-id 9692 tag list-tag-names Tag: password, id: 1 Tag: pcb, id: 2 Tag: revision, id: 3 Tag: ethaddr, id: 4 Tag: ethaddr_count, id: 5 Tag: fit_config, id: 6","title":"LAN969x OTP","component":"bsp","version":"2024.03","name":"lan969x-otp","url":"/bsp/2024.03/supported-hw/lan969x-otp.html","titles":[{"text":"1. SoC Resources","hash":"_soc_resources","id":1},{"text":"2. Kernel configurations","hash":"_kernel_configurations","id":2},{"text":"3. Devicetree Configuration","hash":"_devicetree_configuration","id":3},{"text":"3.1. Example","hash":"_example","id":4},{"text":"3.2. References","hash":"_references","id":5},{"text":"4. UserSpace","hash":"_userspace","id":6},{"text":"4.1. Example on how to use","hash":"_example_on_how_to_use","id":7}]},"158":{"id":158,"text":"LAN969x GPIO controller supports 67 gpio pins. Most of the GPIO pins have alternate functions which will be handled by the Linux driver. Following kernel config options should be enabled to use LAN969x GPIO Controller: CONFIG_PINCTRL_OCELOT - GPIO controller config option. To use GPIO pins of a specific peripheral, configure following properties in device tree: compatible string must be set to microchip,lan969x-pinctrl. reg property must be set to and . gpio-controller property must be added. interrupt-controller property mus be added. #gpio-cells property must be set to 2 gpio-ranges property must be set to interrupts property must be set with GPIO block interrupt details as . Peripheral Shared Peripheral Interrupt CPU INTR gpio 47 15 Note Shared peripheral interrupt lines start at index ID32. So, CPU INTR must be calculated as [Shared peripheral interrupt number - 32]. pins must be set with list of GPIO pins required. For example for mcan0, it should be set as \"GPIO_35\", \"GPIO_36\". function must be set to function name corresponding to GPIO pins and the peripheral we are trying to enable. Refer below table for function names: Pin FUNC0 FUNC1 FUNC2 FUNC3 FUNC4 FUNC5 FUNC6 0 GPIO irq0 fc_shrd pcie_perst none none none 1 GPIO irq1 fc_shrd usb_power none none none 2 GPIO fc none none none none none 3 GPIO fc none none none none none 4 GPIO fc none none none none none 5 GPIO sgpio_A none clkmon none none none 6 GPIO sgpio_A none clkmon none none none 7 GPIO sgpio_A none clkmon none none none 8 GPIO sgpio_A none clkmon none none none 9 GPIO miim miim_sA clkmon none none none 10 GPIO miim miim_sA clkmon none none none 11 GPIO miim_irq miim_sA clkmon none none none 12 GPIO irq3 fc_shrd usb2phy_rst none none none 13 GPIO irq4 fc_shrd usb_over_detect none none none 14 GPIO emmc_sd qspi1 fc none none none 15 GPIO emmc_sd qspi1 fc none none none 16 GPIO emmc_sd qspi1 fc none none none 17 GPIO emmc_sd qspi1 ptpsync_0 usb_power none none 18 GPIO emmc_sd qspi1 ptpsync_1 usb2phy_rst none none 19 GPIO emmc_sd qspi1 ptpsync_2 usb_over_detect none none 20 GPIO emmc_sd none fc_shrd none none none 21 GPIO emmc_sd none fc_shrd none none none 22 GPIO emmc_sd none fc_shrd none none none 23 GPIO emmc_sd none fc_shrd none none none 24 GPIO emmc_sd none none none none none 25 GPIO fan fusa can0_A qspi1 none none 26 GPIO fan fusa can0_A qspi1 none none 27 GPIO synce fc miim qspi1 none none 28 GPIO synce fc miim qspi1 none none 29 GPIO synce fc miim_irq qspi1 none none 30 GPIO ptpsync_0 usb_ulpi fc_shrd qspi1 none none 31 GPIO ptpsync_1 usb_ulpi fc_shrd none none none 32 GPIO ptpsync_2 usb_ulpi fc_shrd none none none 33 GPIO sd usb_ulpi fc_shrd none none none 34 GPIO sd usb_ulpi can1 fc_shrd none none 35 GPIO sd usb_ulpi can1 fc_shrd none none 36 GPIO sd usb_ulpi pcie_perst fc_shrd none none 37 GPIO sd usb_ulpi can0_B none none none 38 GPIO sd usb_ulpi can0_B none none none 39 GPIO sd usb_ulpi miim none none none 40 GPIO sd usb_ulpi miim none none none 41 GPIO sd usb_ulpi miim_irq none none none 42 GPIO ptpsync_3 can1 none none none none 43 GPIO ptpsync_4 can1 none none none none 44 GPIO ptpsync_5 sfp_sd none none none none 45 GPIO ptpsync_6 sfp_sd none none none none 46 GPIO ptpsync_7 sfp_sd none none none none 47 GPIO none sfp_sd none none none none 48 GPIO none sfp_sd none none none none 49 GPIO none sfp_sd none none none none 50 GPIO none sfp_sd none none none none 51 GPIO none sfp_sd none none none none 52 GPIO fan sfp_sd none none none none 53 GPIO fan sfp_sd none none none none 54 GPIO synce fc none none none none 55 GPIO synce fc none none none none 56 GPIO synce fc none none none none 57 GPIO sfp_sd fc_shrd twi ptpsync_3 none none 58 GPIO sfp_sd fc_shrd twi ptpsync_4 none none 59 GPIO sfp_sd fc_shrd twi ptpsync_5 none none 60 GPIO sfp_sd fc_shrd twi ptpsync_6 none none 61 GPIO miim fc_shrd twi none none none 62 GPIO miim fc_shrd twi none none none 63 GPIO miim_irq fc_shrd twi none none none 64 GPIO fc fc_shrd twi none none none 65 GPIO fc fc_shrd twi none none none 66 GPIO fc fc_shrd twi none none none Note LAN969x GPIO controller supports 8 Alternate functions. FUNC0 is GPIO mode and FUNC7 is Reserved. Function names for FUNC1-FUNC6 alternate modes are listed above. pinctrl DT Documentation Following example shows how a GPIO controller should be defined in DT to enable GPIO pins for a fan and an MDIO bus: dtsi file: / { axi: axi { gpio: pinctrl@e20100d4 { compatible = \"microchip,lan969x-pinctrl\"; reg = , ; gpio-controller; #gpio-cells = ; gpio-ranges = ; interrupt-controller; interrupts = ; #interrupt-cells = ; #address-cells = ; }; }; fan_pins: fan-pins { pins = \"GPIO_25\", \"GPIO_26\"; function = \"fan\"; }; mdio_pins: mdio-pins { pins = \"GPIO_9\", \"GPIO_10\"; function = \"miim\"; }; mdio_irq_pins: mdio-irq-pins { pins = \"GPIO_11\"; function = \"miim_irq\"; }; }; dts file changes to use the defined pincontrol: &hwmon { pinctrl-0 = ; pinctrl-names = \"default\"; }; &mdio0 { pinctrl-0 = , ; pinctrl-names = \"default\"; reset-gpios = ; status = \"okay\"; Checking if the pinctrl driver is registered and respective peripheral is created or not. # dmesg | grep pinctrl [ 0.009597] pinctrl core: initialized pinctrl subsystem [ 0.093905] pinctrl-ocelot e20100d4.pinctrl: driver registered You can list the pinctrl devices in the system with # cat /sys/kernel/debug/pinctrl/pinctrl-devices name [pinmux] [pinconf] lan969x-pinctrl yes yes e2010230.gpio-input yes yes e2010230.gpio-output yes yes Here the lan969x-pinctrl is the device described on this page, and the e2010230.gpio-input and e2010230.gpio-output is the Serial GPIO Controller described here. Then you can list the groups of pinctrls using: # cat /sys/kernel/debug/pinctrl/pinctrl-handles Requested pin control handlers their pinmux maps: device: e0040200.serial current state: default state: default type: MUX_GROUP controller lan969x-pinctrl group: GPIO_3 (3) function: fc (6) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_4 (4) function: fc (6) device: e0064600.i2c current state: default state: default type: MUX_GROUP controller lan969x-pinctrl group: GPIO_55 (55) function: fc (6) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_56 (56) function: fc (6) device: e0060400.spi current state: default state: default type: MUX_GROUP controller lan969x-pinctrl group: GPIO_64 (64) function: fc (6) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_65 (65) function: fc (6) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_66 (66) function: fc (6) device: e20101a8.mdio current state: default state: default type: MUX_GROUP controller lan969x-pinctrl group: GPIO_9 (9) function: miim (63) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_10 (10) function: miim (63) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_11 (11) function: miim_irq (69) device: e00c0000.switch current state: default state: default type: MUX_GROUP controller lan969x-pinctrl group: GPIO_58 (58) function: ptpsync_4 (85) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_59 (59) function: ptpsync_5 (86) device: axi:usb@300000 current state: default state: default type: MUX_GROUP controller lan969x-pinctrl group: GPIO_30 (30) function: usb_ulpi (130) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_31 (31) function: usb_ulpi (130) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_32 (32) function: usb_ulpi (130) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_33 (33) function: usb_ulpi (130) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_34 (34) function: usb_ulpi (130) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_35 (35) function: usb_ulpi (130) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_36 (36) function: usb_ulpi (130) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_37 (37) function: usb_ulpi (130) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_38 (38) function: usb_ulpi (130) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_39 (39) function: usb_ulpi (130) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_40 (40) function: usb_ulpi (130) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_41 (41) function: usb_ulpi (130) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_12 (12) function: usb2phy_rst (128) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_13 (13) function: usb_over_detect (129) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_1 (1) function: usb_power (127) device: e2020100.hwmon current state: default state: default type: MUX_GROUP controller lan969x-pinctrl group: GPIO_25 (25) function: fan (5) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_26 (26) function: fan (5) device: e0830000.sdhci-host current state: default state: default type: MUX_GROUP controller lan969x-pinctrl group: GPIO_14 (14) function: emmc_sd (133) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_15 (15) function: emmc_sd (133) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_16 (16) function: emmc_sd (133) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_17 (17) function: emmc_sd (133) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_18 (18) function: emmc_sd (133) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_19 (19) function: emmc_sd (133) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_20 (20) function: emmc_sd (133) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_21 (21) function: emmc_sd (133) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_22 (22) function: emmc_sd (133) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_23 (23) function: emmc_sd (133) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_24 (24) function: emmc_sd (133) device: e2010230.gpio current state: default state: default type: MUX_GROUP controller lan969x-pinctrl group: GPIO_5 (5) function: sgpio_a (104) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_6 (6) function: sgpio_a (104) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_7 (7) function: sgpio_a (104) type: MUX_GROUP controller lan969x-pinctrl group: GPIO_8 (8) function: sgpio_a (104) device: e2010230.gpio current state: none device: e2010230.gpio current state: none Mounting Sysfs The root file system being used may not have sysfs mounted and it cannot be used if it’s not mounted. The directory /sys is also needed to mount the sysfs on. The root file system must be writable to do the following steps. Identify the GPIO chips Use command ls /sys/class/gpio/ to list all the gpio chips. Steps to configure a GPIO pin Export a GPIO pin using command echo X > /sys/class/gpio/export. Read direction and value from GPIO pin using command cat /sys/class/gpio/gpioX/direction for direction and cat /sys/class/gpio/gpioX/value for value, where X is pin number. If direction of a pin is out, we can write 0 or 1 to value file of pin and also can read its value. If direction of a pin is in, we can only read its value but cannot write to it, we would get an error because it is not valid to set the value of an input pin. Unexport a GPIO pin using command echo X > /sys/class/gpio/unexport. Following example configures GPIO pin 51(physical pin number 32) and validates voltage on pin using a multimeter: # ls /sys/class/gpio/ export gpiochip0 unexport Export GPIO pin 51: # echo 51 > /sys/class/gpio/export # ls /sys/class/gpio/ export gpio51 gpiochip0 unexport Check default direction and value: # cat /sys/class/gpio/gpio51/value 1 # # cat /sys/class/gpio/gpio51/direction in # Now, measure voltage on physical pin number 32 and you should see voltage of approximately 3.3v. Change direction of GPIO pin 51 to out and set value to zero: # echo out > /sys/class/gpio/gpio51/direction # # # cat /sys/class/gpio/gpio51/value 0 # Again measure voltage on physical pin number 32 and you should see voltage close to zero.","title":"LAN969x GPIO","component":"bsp","version":"2024.03","name":"lan969x-pinctrl","url":"/bsp/2024.03/supported-hw/lan969x-pinctrl.html","titles":[{"text":"1. SoC Resources","hash":"_soc_resources","id":1},{"text":"2. Kernel configurations","hash":"_kernel_configurations","id":2},{"text":"3. Devicetree Configuration","hash":"_devicetree_configuration","id":3},{"text":"3.1. References","hash":"_references","id":4},{"text":"3.2. Example","hash":"_example","id":5},{"text":"4. UserSpace","hash":"_userspace","id":6},{"text":"4.1. Confirm instances are created","hash":"_confirm_instances_are_created","id":7},{"text":"4.2. Displaying pin control configuration","hash":"_displaying_pin_control_configuration","id":8},{"text":"4.3. Configuring GPIO pin using Sysfs interface","hash":"_configuring_gpio_pin_using_sysfs_interface","id":9}]},"159":{"id":159,"text":"LAN969x supports two QSPI interfaces - QSPI0 and QSPI2. Following kernel config options should be enabled to use LAN969x QSPI interface: CONFIG_SPI_ATMEL_QUADSPI - QSPI driver config option. CONFIG_MTD, CONFIG_MTD_SPI_NOR or CONFIG_MTD_SPI_NAND based on NOR/NAND flash present. To use QSPI interface, following configurations are required in device tree. compatible string must be set to microchip,lan966x-qspi. reg property must be set with base register address, AHB register address and their lengths. reg-names must be set to qspi_base and qspi_mmap. pinctrl-0 property must be set with SCK, NCS, IO0, IO1, IO2, IO3 GPIO pins. Refer to the datasheet for QSPIx [where x is QSPI index (0 or 2)] pin details. interrupts property must set with interrupt details. Interrupt number[CPU INTR] corresponding to QSPI index must be configured as defined in below table: QSPI ID Shared Peripheral Interrupt CPU INTR qspi0 75 43 qspi2 98 66 Note Shared peripheral interrupt lines start at index ID32. So, CPU INTR must be calculated as [Shared peripheral interrupt number - 32]. Input clock clocks property must be set to GCK clock using phandle and GCK ID as , where x is QSPI index (0-2). clock-names must be set to pclk and gclk assigned-clocks must be set to , where x is QSPI index (0-2). spi-max-frequency must be set to 100Mhz. assigned-clock-rates can be set up to 100Mhz. dmas must be set to phandle dma0 and Peripheral ID as listed below: QSPI ID Rx channel PerID Tx channel PerID qspi0 0 1 qspi1 15 16 qspi2 17 18 For example, dmas should be configured as for Rx channel and for Tx channel. * dma-names must be set to rx and tx respectively. Note dmas and dma-names are optional properties. QSPI DT documentation Following example shows how a QSPI should be defined in DT to use a SPI-NAND flash present on it: dtsi file: qspi0: spi@e0804000 { compatible = \"microchip,lan966x-qspi\"; reg = , ; reg-names = \"qspi_base\", \"qspi_mmap\"; interrupts = ; clocks = , ; clock-names = \"pclk\", \"gclk\"; assigned-clocks = ; assigned-clock-rates = ; spi-max-frequency = ; #address-cells = ; #size-cells = ; status = \"disabled\"; }; dts file: &qspi0 { status = \"okay\"; spi-flash@0 { compatible = \"jedec,spi-nor\"; reg = ; spi-max-frequency = ; #address-cells = ; #size-cells = ; spi-tx-bus-width = ; spi-rx-bus-width = ; m25p,fast-read; }; }; MTD utility in buildroot provides rich set of tests for validating QSPI NOR/NAND flashes. To confirm if qspi flash is created: Check if a mtd device is created in /dev directory. Run mtd_debug info /dev/mtdx (where x is index of mtd device) command to check flash details. # dmesg | grep spi [ 0.954840] atmel_spi e0060400.spi: Atmel SPI Controller using PIO only [ 0.961449] atmel_spi e0060400.spi: Using FIFO (32 data) [ 0.967421] atmel_spi e0060400.spi: Atmel SPI Controller version 0x401 at 0xe0060400 (irq 19) [ 0.976848] spi-nor spi1.0: sst26wf016b (2048 Kbytes) # mtd_debug info /dev/mtd0 mtd.type = MTD_NORFLASH mtd.flags = MTD_CAP_NORFLASH mtd.size = 2097152 (2M) mtd.erasesize = 4096 (4K) mtd.writesize = 1 mtd.oobsize = 0 regions = 0 Erase/Read/Write test: # flash_erase /dev/mtd0 0 0x10 Erasing 128 Kibyte @ 1e0000 -- 100 % complete # # # mtd_debug read /dev/mtd0 0x1e0000 0x10 rd Copied 16 bytes from address 0x001e0000 in flash to rd # hexdump rd -C 00000000 ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff |................| 00000010 # echo \"lan969x\" > wr # # # mtd_debug write /dev/mtd0 0x1e0000 0x8 wr Copied 8 bytes from wr to address 0x001e0000 in flash # # # mtd_debug read /dev/mtd0 0x1e0000 0x10 rd Copied 16 bytes from address 0x001e0000 in flash to rd # # # hexdump rd -C 00000000 6c 61 6e 39 36 36 78 0a ff ff ff ff ff ff ff ff |lan969x.........| 00000010 # # flash_erase /dev/mtd0 0 0x10 Erasing 128 Kibyte @ 1e0000 -- 100 % complete # mtd_debug read /dev/mtd0 0x1e0000 0x10 rd Copied 16 bytes from address 0x001e0000 in flash to rd # # # hexdump rd -C 00000000 ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff |................| 00000010 # # echo \"The W25N01GV (1G-bit) Serial SLC NAND Flash Memory provides a storage so lution for system with lmtd space\" > wr1 # ls -l wr1 -rw-r--r-- 1 root root 106 Jan 1 00:17 wr1 # # mtd_debug write /dev/mtd0 0x1e0000 106 wr1 Copied 106 bytes from wr1 to address 0x001e0000 in flash # # # mtd_debug read /dev/mtd0 0x1e0000 106 rd Copied 106 bytes from address 0x001e0000 in flash to rd # hexdump rd -C 00000000 54 68 65 20 57 32 35 4e 30 31 47 56 20 28 31 47 |The W25N01GV (1G| 00000010 2d 62 69 74 29 20 53 65 72 69 61 6c 20 53 4c 43 |-bit) Serial SLC| 00000020 20 4e 41 4e 44 20 46 6c 61 73 68 20 4d 65 6d 6f | NAND Flash Memo| 00000030 72 79 20 70 72 6f 76 69 64 65 73 20 61 20 73 74 |ry provides a st| 00000040 6f 72 61 67 65 20 73 6f 6c 75 74 69 6f 6e 20 66 |orage solution f| 00000050 6f 72 20 73 79 73 74 65 6d 20 77 69 74 68 20 6c |or system with l| 00000060 6d 74 64 20 73 70 61 63 65 0a |mtd space.| 0000006a # # flash_erase /dev/mtd0 0 0x10 Erasing 128 Kibyte @ 1e0000 -- 100 % complete # mtd_debug read /dev/mtd0 0x1e0000 0x106 rd Copied 262 bytes from address 0x001e0000 in flash to rd # hexdump rd -C 00000000 ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff |................| * 00000100 #","title":"LAN969x QSPI","component":"bsp","version":"2024.03","name":"lan969x-qspi","url":"/bsp/2024.03/supported-hw/lan969x-qspi.html","titles":[{"text":"1. SoC Resources","hash":"_soc_resources","id":1},{"text":"2. Kernel configurations","hash":"_kernel_configurations","id":2},{"text":"3. Devicetree Configuration","hash":"_devicetree_configuration","id":3},{"text":"3.1. References","hash":"_references","id":4},{"text":"3.2. Example","hash":"_example","id":5},{"text":"4. UserSpace","hash":"_userspace","id":6},{"text":"4.1. Confirm instances are created","hash":"_confirm_instances_are_created","id":7},{"text":"4.2. Example on how to use","hash":"_example_on_how_to_use","id":8}]},"160":{"id":160,"text":"The Serial GPIO Controller for LAN969x supports as many Serial GPIOs as configured in the device tree. The EVB-LAN9696-24port EVB has 128 input and 128 output. Following kernel config options should be enabled to use LAN969x GPIO Controller: CONFIG_PINCTRL_MICROCHIP_SGPIO - Serial GPIO controller config option. To use SGPIO pins of a specific peripheral, configure following properties in the device tree: compatible must be set to \"microchip,sparx5-sgpio\". reg must be set to . clocks must refer to the 320MHz core clock . reset-names must be set to \"switch\". resets must refer to the switch reset controllers reset signal, e.g. . #address-cells must be 1. #size-cells must be 0. For each direction there must be a child node. For the IN direction the following properties must be provided: compatible must be set to \"microchip,sparx5-sgpio-bank\". reg must be set to . gpio-controller must be set. #gpio-cells must be set to 3. interrupts must be set to . Peripheral Shared Peripheral Interrupt CPU INTR sgpio 48 16 Note Shared peripheral interrupt lines start at index ID32. So, CPU INTR must be calculated as [Shared peripheral interrupt number - 32]. interrupt-controller must be set. #interrupt-cells must be set to 3. #address-cells must be set to 0. For the OUT direction the following properties must be provided: compatible must be set to \"microchip,sparx5-sgpio-bank\". reg must be set to 1. gpio-controller must be set. #gpio-cells must be set to 3. SGPIO DT Documentation Following example shows how an SGPIO controller should be defined in the DT to enable SGPIO pins for a mux controller and an SFP. The clients refer to the IN and OUT directions to get the appropriate SGPIOs. dtsi file: sgpio: gpio@e2010230 { compatible = \"microchip,sparx5-sgpio\"; reg = ; clocks = ; resets = ; reset-names = \"switch\"; #address-cells = ; #size-cells = ; status = \"disabled\"; sgpio_in: gpio@0 { compatible = \"microchip,sparx5-sgpio-bank\"; reg = ; gpio-controller; #gpio-cells = ; interrupts = ; interrupt-controller; #interrupt-cells = ; #address-cells = ; }; sgpio_out: gpio@1 { compatible = \"microchip,sparx5-sgpio-bank\"; reg = ; gpio-controller; #gpio-cells = ; }; }; dts file changes to use the SGPIO: &gpio { sgpio_pins: sgpio-pins { /* SCK, D0, D1, LD */ pins = \"GPIO_5\", \"GPIO_6\", \"GPIO_7\", \"GPIO_8\"; function = \"sgpio_a\"; }; }; &sgpio { pinctrl-0 = ; pinctrl-names = \"default\"; microchip,sgpio-port-ranges = , ; status = \"okay\"; gpio@0 { ngpios = ; }; gpio@1 { ngpios = ; }; }; / { mux-controller { compatible = \"gpio-mux\"; #mux-control-cells = ; mux-gpios = , ; }; sfp0: sfp0 { compatible = \"sff,sfp\"; i2c-bus = ; tx-disable-gpios = ; los-gpios = ; mod-def0-gpios = ; tx-fault-gpios = ; }; }; Checking if the SGPIO driver is registered: # cat /sys/kernel/debug/pinctrl/pinctrl-devices name [pinmux] [pinconf] lan969x-pinctrl yes yes e2010230.gpio-input yes yes e2010230.gpio-output yes yes Here the lan969x-pinctrl is the device described on this page, and the e2010230.gpio-input and e2010230.gpio-output are the Serial GPIO Controllers two direction nodes - each of them being its own pin controller device. The LEDs for the SFP cages are available via SGPIOs: leds { compatible = \"gpio-leds\"; led-s6-green { label = \"s6:green\"; gpios = ; default-state = \"off\"; }; led-s6-yellow { label = \"s6:yellow\"; gpios = ; default-state = \"off\"; }; ... more LED nodes follows... }; You can locate the LEDs in sysfs with: # find /sys/class/leds/ /sys/class/leds/ /sys/class/leds/s7:green /sys/class/leds/s6:yellow /sys/class/leds/s7:yellow /sys/class/leds/s8:yellow /sys/class/leds/s8:green /sys/class/leds/s9:yellow /sys/class/leds/s9:green /sys/class/leds/s6:green /sys/class/leds/mmc0:: Now you can turn on the green LED of the Serdes 6 SFP using: # echo 1 > /sys/class/leds/s6:green/brightness And you can turn it off again using; # echo 0 > /sys/class/leds/s6:green/brightness","title":"LAN969x SGPIO","component":"bsp","version":"2024.03","name":"lan969x-sgpio","url":"/bsp/2024.03/supported-hw/lan969x-sgpio.html","titles":[{"text":"1. SoC Resources","hash":"_soc_resources","id":1},{"text":"2. Kernel configurations","hash":"_kernel_configurations","id":2},{"text":"3. Devicetree Configuration","hash":"_devicetree_configuration","id":3},{"text":"3.1. References","hash":"_references","id":4},{"text":"3.2. Example","hash":"_example","id":5},{"text":"4. UserSpace","hash":"_userspace","id":6},{"text":"4.1. Confirm instances are created","hash":"_confirm_instances_are_created","id":7},{"text":"4.2. Setting the SFP LEDs","hash":"_setting_the_sfp_leds","id":8}]},"161":{"id":161,"text":"LAN969X SoC have 4 FLEXCOMs (Flexible Serial Communication Controller). In order to use flexcom SPI interface, a specific flexcom should be configured in SPI mode. Following kernel config options should be enabled to use LAN969x flexcom SPI interface: CONFIG_SPI_ATMEL - SPI driver config option. CONFIG_MTD, CONFIG_MTD_SPI_NOR or CONFIG_MTD_SPI_NAND based on NOR/NAND flash present. To use Flexcom SPI interface, following configurations are required in device tree. Each of the flexcom flx0, flx1, flx2 and flx3 nodes can be configured in SPI mode ATMEL_FLEXCOM_MODE_SPI to use SPI interface. compatible string must be set to atmel,at91rm9200-spi. reg property must be set with register address and length as . GPIO pins for TXD, RXD and SCK should be configured to pinctrl-0 property. Also add cs0 and cs1 pins, if present. List of possible pin mappings are as in below table: FLEXCOM ID ALT Mode SCK pin RXD pin TXD pin flx0 ALT 2 GPIO2 GPIO3 GPIO4 flx2 ALT 3 GPIO14 GPIO15 GPIO16 flx1 ALT 2 GPIO27 GPIO28 GPIO29 flx3 ALT 2 GPIO54 GPIO55 GPIO56 flx2 ALT 1 GPIO64 GPIO65 GPIO66 interrupts property must set with interrupt details. Interrupt number[CPU INTR] corresponding to a flexcom must be configured as defined in below table: FLEXCOM ID Shared Peripheral Interrupt CPU INTR flx0 78 46 flx1 79 47 flx2 80 48 flx3 81 49 Note that Shared peripheral interrupt lines start at index ID32. So, CPU INTR must be calculated as [Shared peripheral interrupt number - 32]. Input clock clocks property must be set to &fabric_clk. Note that Fabric clock (250Mhz) is clock used by AXI, AHB fabric and APB bridges which connects all th peripherals. clock-names must be set to spi_clk. dmas must be set to phandle dma0 and Peripheral ID as listed below: FLEXCOM ID Tx channel PerID Rx channel PerID flx0 3 2 flx1 3 2 flx2 7 6 flx3 9 8 SPI driver Implementation Flexcom DT documentation SPI DT documentation Following example explains how a flexcom SPI should be defined in DT to use a DPLL device. &flx2 { atmel,flexcom-mode = ; status = \"okay\"; spi2: spi@400 { pinctrl-0 = ; pinctrl-names = \"default\"; cs-gpios = ; status = \"okay\"; spi@0 { compatible = \"mchp,synce_dpll\"; reg = ; spi-max-frequency = ; }; }; }; &gpio { fc2_pins: fc2-pins { pins = \"GPIO_64\", \"GPIO_65\", \"GPIO_66\"; function = \"fc\"; }; A SPI device like the DPLL shown above will be listed in the sysfs like this: # cat /sys/bus/spi/devices/spi0.0/modalias spi:synce_dpll","title":"LAN969x SPI","component":"bsp","version":"2024.03","name":"lan969x-spi","url":"/bsp/2024.03/supported-hw/lan969x-spi.html","titles":[{"text":"1. SoC Resources","hash":"_soc_resources","id":1},{"text":"2. Kernel configurations","hash":"_kernel_configurations","id":2},{"text":"3. Devicetree Configuration","hash":"_devicetree_configuration","id":3},{"text":"3.1. References","hash":"_references","id":4},{"text":"3.2. Example","hash":"_example","id":5},{"text":"4. UserSpace","hash":"_userspace","id":6}]},"162":{"id":162,"text":"The LAN969x SoC contains an internal CPU which has secure boot capabilities with an implementation based on TF-A (Trusted Firmware for ARM). This document uses many abbreviations, see the terms and abbreviations section for details. The BootROM in LAN969x offers the following high-level features: Boot firmware from: SPI-NOR SD-Card eMMC Firmware authentication based on public key ECSDA algorithm Firmware encryption using AES encryption with Secret Symmetric Key (SSK) Per-device unique key (BSSK) A bootrom UART monitor (fwu.html) with support for: Secure JTAG unlock Firmware update over UART OTP programming LAN969x always boots from the BootROM using the TF-A based boot stages. This is the case regardless of if secure boot is needed (enabled) or not. This means that it will be the TF-A Bootloaders that boots either U-Boot, the Linux kernel or another OS directly. This document, and the referenced sources are provided under the BSD-3-Clause license. This means that the content is provided as-is, and that Microchip cannot be held liable. See the License section for details. In LAN969x the DDR initialization is done as part of TF-A/BL2 and not in U-Boot. If you need to change DDR settings, then this shall be done in TF-A. The sources and binaries provided to enable secure boot contains demo keys which are not handled in a secure way. The symmetric shared keys, and the private keys are publicly available. If any of the advertised security features in this document are needed, then the demo keys must be replaced with new keys which shall then be kept confidential. The Trusted Firmware-A (TF-A) SW project is a multi-stage bootloader which utilizes the ARM TrustZone feature in ARM CPUs as an important part of the security concept. The TrustZone feature in ARM CPUs introduce the concept of a Secure-World (S) and Non-Secure-World (NS) and the ability to switch between these worlds. The various CPU peripherals inside the SoC, or connected to the SoC, are then classified as secure or non-secure. Secure-World has access to everything, while Non-Secure world only has access to the non-secure peripherals. In HW this is implemented as an additional bit in the address bus to specify the Secure/Non-Secure mode. Only Secure-World bus controllers can issue transactions with the Secure-Bit set. | S-Peripheral NS-Peripheral --------------------------+--------------------------------- S-World Bus Controller | Access Access NS-World Bus Controller | No Access Access When zooming in on the CPU, the S/NS worlds are often seen as an additional dimension to the exception levels (EL3 - EL0). This is illustrated below: The CPU can jump between the secure and non-secure worlds, and the two worlds can communicate with each other by using a shared buffer. This allows the same kind of application and use-cases as when having a dedicated security processor. The TF-A framework provides a multi-stage bootloader concept. There are many good reasons to go with a multi stage approach. To name a few points: Make the amount of code/functionality in the ROM as small as possible. Make components running within a given exception level (or having different life-time) self-contained. TF-A provides different bootloader stages for the different levels. Breaking complex stuff into smaller problems is always a good idea. Here is a list with an explanation of the different boot-loader stages: Trusted ROM Firmware (BL1) This is a binary built from the TF-A sources. Embedded as ROM code in the chip, execute in secure world EL3/SVC-MON. Purpose: Do basic platform initialization Read BL2 from boot media into secure memory, authenticate it, run it. Trusted Boot Firmware (BL2) This is a binary built from the TF-A sources. Loaded from a FIP (see below), and runs from on-chip secure memory, execute in secure world EL1/SVC-MON. Purpose: Will do additional platform initialization including: TrustZone configuration DDR initialization Load BL3x images into DDR memory, authenticate, decrypt etc. Run EL3 Runtime Software EL3 Runtime Software (BL31) This is a binary built from the TF-A sources. Loaded from from a FIP and runs as Secure EL3/SVC. This firmware stays resident in memory, and the services offered here can be called later on. Purpose: Initialize the secure run-time service, typically PSCI and Trusted HW RNG. Authenticate, decrypt and run BL33. Non-trusted Firmware (BL33) BL33 is not built from the TF-A sources, but is a binary which is stored in a FIP and will be loaded (and executed) by TF-A. This is typically U-Boot, a direct booting Linux kernel or some other OS. Runs from DDR memory in non-secure world as EL1/SVC Firmware update image (BL2u) This is a binary built from the TF-A sources. Compared to the other images, this is special, as it is not used during normal boot, and it is not loaded from a FIP stored in flash. This image replaces the normal BL2. It is loaded by BL1 via the UART-monitor using a Serial port. Like BL2, it is authenticated by BL1 before it is being executed. Purpose: Provide an updateable stepping stone for board provisioning. The FIP or Firmware Image Package is the file format TF-A uses to contain all the artifacts. This includes the BL2 and BL3x images, certificates, and configuration files. The FIP is generated as part of the build process. It is written in flash in binary format without any transformation, and the BL1 ROM knows how to locate and load a particular image type in the FIP. It can be compared to a very simple read-only file-system, as it contains only very basic information of the individual files: type, offset and size. The TF-A project includes 2 host tools: fiptool: which makes it easy to perform common operations (create, display, add/del/mod individual images) in fip files. cert_create: which makes it easy to generate the keys and certificates needed to establish the chain of trust. In the build process the make target is called certtool, but the resulting binary is called cert_create. The FIP generation process where the fiptool and cert_create are used is shown below: As shown above, the cert_create tool reads the BLOBs as input, it reads the keys from the disk (or generate them on the fly), and creates the needed certificates. Once the certificates have been generated, the normal fiptool can bundle both the original BLOBs and the associated certificates into the FIP which can then be authenticated. To bind devices to this chain of trust, the SHA or the public root key needs to be written into OTP. When reading console output, browsing the source code, or when using the fiptool or the cert_create tool, it is often necessary to reference the individual images. The table below provide the mapping between the defines used in the C code, the numeric values as they will appear in the trace output, and finally the command-line argument which is understood by the fiptool (and cert_create). C-Define Num fiptool arg BL2_IMAGE_ID 1 --tb-fw BL31_IMAGE_ID 3 --tos-fw BL33_IMAGE_ID 5 --nt-fw TRUSTED_BOOT_FW_CERT_ID 6 --tb-fw-cert TRUSTED_KEY_CERT_ID 7 --trusted-key-cert TRUSTED_OS_FW_KEY_CERT_ID 10 --tos-fw-key-cert NON_TRUSTED_FW_KEY_CERT_ID 11 --nt-fw-key-cert TRUSTED_OS_FW_CONTENT_CERT_ID 14 --tos-fw-cert NON_TRUSTED_FW_CONTENT_CERT_ID 15 --nt-fw-cert FW_CONFIG_ID 31 --fw-config This section provides the hands-on steps needed to build TF-A for LAN969x. Most modern Linux distributions can be used for building TF-A, but to ensure consistent results a docker image can be used for running all the build-commands. This project provides a dr (docker run) script to make it easy to run a command in the desired docker container. The dr script is provided by the https://github.com/microchip-ung/docker-run project which also offers more details on how it works. The folder /opt/mscc must exist before you can use the dr script. This folder is used for caching BSP packages. The short story is that prefixing a command with dr will cause it to run in a docker container. You can test if it works just by typing dr ls and check the result. Sources can be obtained from https://github.com/microchip-ung/arm-trusted-firmware using git clone. A release with both source packages and binaries are provided as release artifacts and can be found at https://github.com/microchip-ung/arm-trusted-firmware/releases. To build the TF-A binaries for LAN969x, navigate to the root of the project and run the following command: $ dr ./scripts/build.rb -p lan969x_a0 This will by default do incremental builds. The --clean flag will delete the artifacts for a given platform/variant and cause the next build to be complete rebuild. This will use the demo keys from the ./keys folder, which are not kept confidential. Any secure products must generate new keys and keep them secret. By default the build script will load a pre-build U-Boot binary into the BL33 blob. The build.rb script offers a set of options to tweak the default settings. The --help option shown below provides an overview of possible options, and the following sub-sections provides some additional details. $ dr ./scripts/build.rb --help Usage: build.rb [options] -p, --platform Build for given platform: lan966x_b0, lan966x_lm, lan969x_sr, lan969x_a0, lan969x_svb, lan969x_lm, lan969x_pcie -r, --root-of-trust Set ROT key file --create_keys Create new keys --bl31-key Set BL31 key --bl32-key Set BL32 key --bl33-key Set BL33 key --non_trusted_world-key Set non_trusted_world key --scp_bl2-key Set scp_bl2 key --trusted_world-key Set trusted_world key --encrypt-images List of encrypted images, eg BL2,BL32,BL33 --encrypt-ssk Enable encryption with SSK --encrypt-bssk Enable encryption with BSSK --fw-nvctr Set Secure FW NV counter for FIP --ntfw-nvctr Set Non-trusted FW NV counter for FIP --bl33_blob BL33 binary -d, --debug Enable DEBUG --release Disable DEBUG -g, --[no-]gptimg Create a GPT image file with the FIP (obsoleted) --gpt-data Add GPT payload -c, --clean Do a 'make clean' instead of normal build -C, --coverity stream Enable coverity scan -R, --[no-]ramusage Report RAM usage --extra1 Add BL32 EXTRA1 image to FIP --extra2 Add BL32 EXTRA2 image to FIP The --platform option is used to select the desired platform. This argument must be provided, and when building for LAN969x it must be set to: lan969x_a0: By default the U-Boot binary provided by the BSP will be used as BL33 content. This is available as the fip.bin image file in the output folder of the build. Likewise the build also produces a fip_linux.bin image file where the BSP provided brsdk_standalone_arm.itb blob from the BSP is used as the BL33. This itb file contains a Linux kernel and a Device Tree, and will allow the system to boot Linux without U-Boot. Sometimes it is desirable to provide the BL33 content directly, this can be done using --bl33-blob . The blob can be either a itb/fit image or a executable binary. If it is not a fit then it will be relocated to address 0x60200000 (in DDR) and once authenticated the BL31 will do a memory-jump to that address. If it is a fit then is is handled as described in the following section. Be aware that the BL33 blob will be aggregated into the FIP, and if the blob is sufficiently large the resulting image may not fit into the NOR flash (in this case eMMC can be used for storing the FIP). When using a fit image, the FIT image is placed in DDR NS start (0x60200000), just like the \"flat\" binary type image. When the fit image is parsed, individual components are identified in this order: Device tree Root FS (optional) Kernel The two first components need to be moved to an area outside where the fit image itself resides - i.e. the load address cannot overwrite the fit image itself. The kernel (being loaded last) is allowed to overwrite the fit image itself, so the load address will typically be the NS DDR start. Apart from the above guides, the following fit image restrictions apply: Compression is not supported for any data (the kernel loader itself may use compression). A load address outside NS DDR area is not allowed. If the fit image contain more than one configuration node, the fit_config OTP tag can be use to name the fit configuration node to use. Otherwise, the default config will be used - as is custom with fit images. Once the device tree according to the chosen configuration is loaded into the proper place, the device tree is \"fixed up\" with these changes: A /memory node is added/modified to containing the memory size according to the platform NS DDR location and size. If the device tree property /chosen/bootargs is not present, a default command line according to the platform is added. (LAN969X: console=ttyAT0,115200 root=/dev/mmcblk0p5 rw rootwait loglevel=8). The load and entry address information in the kernel node is changed to match the current SoC. This is needed as the FIT image produced by the BSP supports both the Sparx5 and LAN969x SoCs. FIT example /dts-v1/; / { description = \"Image Tree Source file for Sparx5/LAN969x\"; #address-cells = ; images { kernel { description = \"Kernel\"; data = /incbin/(\"images/mscc-linux-kernel.bin.gz\"); type = \"kernel\"; arch = \"arm64\"; os = \"linux\"; compression = \"gzip\"; load = /bits/ 64 /* Change this to 0x60000000 for lan969x */; entry = /bits/ 64 /* Change this to 0x60000000 for lan969x */; }; fdt_pcb134 { description = \"Flattened Device Tree\"; data = /incbin/(\"images/sparx5_pcb134.dtb\"); type = \"flat_dt\"; arch = \"arm64\"; compression = \"none\"; }; ... more device trees ... ramdisk { description = \"Ramdisk\"; data = /incbin/(\"rootfs.squashfs\"); type = \"ramdisk\"; arch = \"arm64\"; os = \"linux\"; compression = \"none\"; }; }; configurations { default = \"pcb134\"; pcb134 { description = \"Kernel with DT fdt_pcb134\"; kernel = \"kernel\"; fdt = \"fdt_pcb134\"; ramdisk = \"ramdisk\"; }; lan9698_ev23x71a_0_at_lan969x { description = \"Kernel with DT fdt_lan9698_ev23x71a_0_at_lan969x\"; kernel = \"kernel\"; fdt = \"fdt_lan9698_ev23x71a_0_at_lan969x\"; ramdisk = \"ramdisk\"; }; ... more configuration nodes for other device trees ... }; }; The unpacking of the fit image will display trace log messages if trace is enabled. And example is shown here. FIT boot trace log NOTICE: BL1: Booting BL31 INFO: Entry point address = 0x200000 INFO: SPSR = 0x3cd NOTICE: BL31: lts-v2.8.8(debug):v2.6-mchp1-2067-g2609d6b5a NOTICE: BL31: Built : 11:36:08, Dec 4 2023 NOTICE: Preparing to boot 64-bit Linux kernel [ 0.000000] Booting Linux on physical CPU 0x0000000000 [0x410fd034] By default the keys used for authentication are loaded from the files in the ./keys folder. The following table provides an overview of the command-line options, the default file and a description of its usage: CMD-option Default value Description --rot keys/rotprivk_ecdsa.pem Confidential key used to sign the TRUSTED_BOOT_FW_CERT and the TRUSTED_KEY_CERT. This file contains the ROT_PRIV_KEY and the ROT_PUB_KEY. The public key is embedded into the both the TRUSTED_BOOT_FW_CERT and the TRUSTED_KEY_CERT - which makes these certificates self-signed. --rot_pub keys/rotpk_ecdsa.der Non-confidential public key derived from keys/rotprivk_ecdsa.pem. --rot_sha keys/rotpk_ecdsa_sha256.bin Non-confidential SHA of the public key. This is the key which needs to be loaded into the OTP_TBBR_ROTPK otp field. --bl31_key keys/bl31_ecdsa.pem Confidential key used to sign the bl31 blob (BL31_IMAGE_ID). This file contains the TRUSTED_OS_FW_CONTENT_CERT_PRIV_KEY and the TRUSTED_OS_FW_CONTENT_CERT_PUB_KEY. The public key is embedded into the TRUSTED_OS_FW_KEY_CERT. --bl32_key keys/bl32_ecdsa.pem Not in use for LAN969x, but part of TF-A framework. --bl33_key keys/bl33_ecdsa.pem Confidential key used to sign the bl33 blob (BL33_IMAGE_ID). This file contains the NON_TRUSTED_FW_CONTENT_CERT_PRIV_KEY and the NON_TRUSTED_FW_CONTENT_CERT_PUB_KEY. The public key is embedded into the NON_TRUSTED_FW_KEY_CERT. --non_trusted_world_key keys/non_trusted_world_ecdsa.pem Confidential key used to sign the NON_TRUSTED_FW_KEY_CERT certificate. This file contains the NON_TRUSTED_WORLD_PRIV_KEY and the NON_TRUSTED_WORLD_PUB_KEY. The public key is embedded into the TRUSTED_KEY_CERT. --scp_bl2_key keys/scp_bl2_ecdsa.pem Not in use for LAN969x, but part of TF-A framework. --trusted_world_key keys/trusted_world_ecdsa.pem Confidential key used to sign the TRUSTED_OS_FW_CONTENT_CERT certificate. The list of keys above are provided in demo versions as part of the sources and build artifacts. The demo keys are not kept confidential (in fact they are published), and must be replaced with a new set of keys. To generate new keys, delete they above keys in the ./keys folder, and run the build script with the --create_keys options, like show below: $ dr ./scripts/build.rb --create_keys The tool will not update existing keys. Existing keys must be deleted before new keys can be generated. Check the time stamp and the content of the newly generated keys to confirm that they have been updated. The key content can be show using the openssl command: $ dr openssl ec -in ./keys/rotprivk_ecdsa.pem -text read EC key Private-Key: (256 bit) priv: cb:eb:29:43:74:12:54:96:43:e6:42:48:13:8f:5b: cf:8d:c7:8b:da:b8:c8:64:ae:f7:43:c1:94:ce:a6: 11:fb pub: 04:02:a6:68:7e:f2:fe:c9:07:1a:2c:a9:c2:33:b4: bb:89:34:99:7d:b6:30:f9:1f:6c:a8:ae:5c:6d:c5: 28:04:48:47:66:1e:e4:36:26:ad:5d:1d:83:45:41: 7d:f2:62:e6:e1:a9:2e:d1:c7:cd:0e:c2:62:01:db: 94:53:ca:46:c5 ASN1 OID: prime256v1 NIST CURVE: P-256 writing EC key -----BEGIN EC PRIVATE KEY----- MHcCAQEEIMvrKUN0ElSWQ+ZCSBOPW8+Nx4vauMhkrvdDwZTOphH7oAoGCCqGSM49 AwEHoUQDQgAEAqZofvL+yQcaLKnCM7S7iTSZfbYw+R9sqK5cbcUoBEhHZh7kNiat XR2DRUF98mLm4aku0cfNDsJiAduUU8pGxQ== -----END EC PRIVATE KEY----- By default the build script is using the default trusted and non-trusted counters for the platform. (2 and 3 for LAN969X). In order to create a new firmware version that cannot be downgraded, you can set the specifically by incrementing the counter for the environment that has been fixed. Use --fw-nvctr to explicitly set the \"Trusted FW NV counter\" --ntfw-nvctr to explicitly set the \"Non-Trusted FW NV counter\" to explictly set the version counter embedded in the FIP. Example: $ dr ./scripts/build.rb -p lan969x_a0 --fw-nvctr 3 --ntfw-nvctr 4 By default images are signed but not encrypted. Image encryption can be enabled using the --encrypt-images argument. The listed images will then be encrypted using the key provided with --encrypt-ssk . Example: $ dr ./scripts/build.rb -p lan969x_a0 \\ --encrypt-images BL2,BL32,BL33 \\ --encrypt-ssk ./keys/ssk.bin The ssk key is symmetric, which means that the same key used for encryption must also be programmed into the OTP (OTP_TBBR_SSK) where it is used for decryption. The key can be any 32byte value, and is typically randomly generated. The build.rb tool offer a --encrypt-bssk flag. This is for debug/development usage and should never be used in production. Instead the image should be bound by the bl2u utility or via bl32 using the HUK generated in OTP. The build.rb script will always build a FIP image. This FIP can be programmed directly into the NOR image, but to be able to boot from eMMC, the eMMC image needs to be prepared with a partition table (gpt) , and the FIP needs to be written into a partition (as opposed to being written to a fixed offset in the eMMC). The build script can prepare a complete image file with gpt partition table and the FIP image filled in the fip and the fip.bak partition. the -n, --[no-]norimg is only for internal prototypes and should not be used. This chapter provides a more in-depth description of TF-A technology used in LAN969x. Understanding these details are the essential prerequisites to design secure products based on LAN969x, and to understand the following sections with LAN969x specific implementation. TF-A uses a hierarchy of certificates to authenticate the different images in the FIP. This hierarchy is shown at the following image: As shown on the drawing, BL2 is authenticated by TRUSTED_BOOT_FW_CERT. TRUSTED_BOOT_FW_CERT is authenticated by the root of trust (the ROT_PUB_KEY). And the ROT_PUB_KEY is finally authenticated by the OTP SHA provided by the platform. The key hierarchy limits the usage of the root key, and therefore also the attack surface. If one of the downstream keys is leaked, it is possible to do key revocation. Besides the certificate based authentication, the authentication framework will also check the version number of the certificates against a non-volatile counter, provided by the platform. The version number in the certificate is covered by the signature which ensures the integrity, and the platform provides non-volatile counters that are created in such way that they can only increment. The authentication process will first validate the signature and then continue to compare the version of the certificate against the platform counter. Here is how the comparison is performed: certificate_version == platform_counter: All is good: The boot process can continue. certificate_version > platform_counter: The platform_counter will be incremented to the value of certificate_version: The boot process can continue. certificate_version < platform_counter: Fail as this is considered a rollback attack: The boot process will stop here, and the system needs to be updated with a new image matching the version of the platform counter. The purpose of this mechanism is to have a way of performing revocation of certificates. If one of the private keys has been revealed, new certificates needs to be issued and provisioned. But the old firmware will still pass the public key authentication, and the only way to prevent an attacker from rolling back the firmware, is to have such a counter. The ROT (root of trust) key does not have any version numbers as it cannot be updated. TF-A uses 2 none-volatile counters: trusted_nv_ctr and non_trusted_nv_ctr. The non_trusted_fw_key_cert and non_trusted_fw_content_cert certificates are checked against the non_trusted_nv_ctr, all other (except ROT) are evaluated against trusted_nv_ctr. To sign a certificate the private key is needed, but to authenticate a certificate only the public key is needed. The cert_create tool needs access to both the public and private keys. The public keys are needed, because they are aggregated into the certificates, and the private keys are needed to do the signing. The following picture illustrates the entire signing process done by cert_create. The green boxes are binaries generated by the compiler. cert_create will calculate the SHA, feed the SHA into the certificate, and sign the certificate. The trusted and non-trusted counters is version numbers. These version numbers are given at the command-line, and will be stored in the certificates as well. The trust hierarchy is created by feeding the SHA of 1 public key, into a parent certificate. The 2 certificates: TRUSTED_BOOT_FW_CERT and TRUSTED_KEY_CERT are authenticated by the root-of-trust public certificate. When BL1 loads the BL2 and the FW_CONFIG images from the FIP, it needs to authenticate the images, and the related certificates to establish a chain of trust. This is shown in the image below: When BL2 loads the BL31 and BL33 images from the FIP, it needs to authenticate the images, and the related certificates to establish a chain of trust. This is shown in the image below: Firmware encryption can be used to keep the firmware confidential, and protect against an attacker reading the content of the flash devices and extracting information from that. When enabled, firmware will be encrypted using AES-128-GCM, which uses symmetric keys. Two types of firmware keys are supported: ssk (secret symmetric key): Here the same key is used to encrypt the firmware (when creating the FIP image) and decrypting the firmware when loading running on the target. bssk (binding secret symmetric key): Here the ssk is used when encrypting the image and generating the FIP. But when the image is loaded on the board, it is bound to the board before it is being programmed to the flash. The binding operation will use the ssk to decrypt the image in memory, and then encrypt the image using a key derived from the huk (hardware unique key). When the system is booting, the BL1/BL2 will decrypt the image using the key derived from the huk. Only the individual images are encrypted, but the FIP container stays unencrypted. This is not a security risk, as the FIP is just a container that does not have any sensitive information. When images are encrypted an encryption header is prepended to the image. This header contains a flag indicating if the image has been bound or not. (Indicating using ssk or bssk). Using bssk for firmware encryption instead of ssk have the following advantages: Firmware cannot be copied/cloned from one board to another using an external flash programmer. If the firmware are licensed to a specific board, then it is an advantage to ensure that board firmware cannot be copied. If the ssk is leaked, an attacker cannot decrypt the image found in the flash memory of a board - the attacker will have to find another way to get the image before it is programmed (intercept an update session). If a bssk key is leaked, it will only impact one board. The disadvantage of using bssk is the additional complications of manufacturing the boards, as it is not possible to do this with pre-programmed images. Firmware binding can be done from the fwu.html tool. The core of TF-A is platform independent, and each platform needs to provide the platform specific implementation and drivers. The platform specific layer defines how the SW (and ROM) interface with the hardware, and how the keys in the system are kept safe. See table in LAN969x Strapping Pins See this section and the following. The one-time-programmable memory provided by the SoC is an important source of configuration data. It is the only persistent memory not depending on any external components and it is used for many different purposes. The OTP can be divided into regions, and each region can be write protected, and if write-protected, also read-protected. The OTP contains secret keys, which must be protected to keep firmware confidential. The offered mechanism to keep such keys confidential is the read-protect setting on the given region. The region containing the keys must be marked as read-protected by the BL2 before it hands over control to BL31. Each OTP region contains a number of OTP attributes, which may then contain a number of OTP fields. This is all covered in the following subsections. The OTP shall be divided into the following 8 regions: REG. START END Secure Emu Description ---- ------ ------ ------ --- ----------------------------------------- 0 0x0000 0x003F No No Manufacturing data 1 0x0040 0x0043 No No OTP Write protect 2 0x0044 0x0063 No No OTP Region Definitions 3 0x0064 0x00FF No No Insecure configuration without emulation 4 0x0100 0x01FF Yes Yes Keys and other security related 5 0x0200 0x023F No Yes Non-volatile secure counters 6 0x0240 0x07FF No No Fixed position user-space / custom usage 7 0x0800 0x2000 No No Key-value store (semi-updateable) The secure flag indicates if the area contains secret information, and hence must be configured to remove read access before leaving the BL2. The Emu flag indicate if OTP emulation can be supported. The following sub-section documents the intended use of the regions, and highlights some important points for each of these. The configuration of OTP-regions are kept in the OTP itself. It is the customer responsibility to program the regions. The Linux user-space otp tool can be used for this purpose. The following OTP table shows the pre-defined OTP attributes, used by either HW, BL1 and/or BL2. BL3x, U-Boot, Linux or other clients can also access the OTP, if the access control of the given regions allow it. Begin End Size RTL EMU REG. Name ------ ------ ---- --- --- ---- ---------------- 0x0000 0x0003 4 X 0 OTP_PRG 0x0004 0x0004 1 X 0 FEAT_DIS 0x0005* 0x0006 2 X 0 PARTID 0x0007 0x0007 1 0 TST_TRK 0x0008 0x000f 8 0 SERIAL_NUMBER 0x0010 0x0013 4 X 0 SECURE_JTAG 0x0014 0x001a 7 0 WAFER_TRK reserved 5 bytes 0x0020 0x0029 10 X 0 JTAG_UUID reserved 6 bytes 0x0030 0x0037 8 0 TRIM reserved 8 bytes 0x0040 0x0043 4 X 1 PROTECT_OTP_WRITE 0x0044 0x0063 32 X 2 PROTECT_REGION_ADDR 0x0064 0x0067 4 3 Reserved 0x0068 0x006B 4 3 Reserved 0x006c 0x0073 8 3 Reserved 0x0074 0x009b 40 3 Reserved reserved 100 bytes 0x0100 0x011f 32 X 4 OTP_TBBR_ROTPK 0x0120 0x013f 32 X 4 OTP_TBBR_HUK 0x0140 0x015f 32 X 4 OTP_TBBR_EK 0x0160 0x017f 32 X 4 OTP_TBBR_SSK 0x0180 0x019f 32 X 4 OTP_SJTAG_SSK reserved 4 bytes 0x01a4 0x01a5 2 X 4 OTP_STRAP_DISABLE_MASK reserved 90 bytes 0x0200 0x021f 32 X 5 OTP_TBBR_NTNVCT 0x0220 0x023f 32 X 5 OTP_TBBR_TNVCT In the above table the RTL column indicate that the OTP value is read and used by the digital HW in the SoC before SW is running (under reset). This attribute is a 16 bit mask. Each bit in the mask corresponds to one of the strapping modes. By default the mask is set to all zeroes which means that all strapping modes are allowed. If a customer wants to disable one or more strapping modes the corresponding bits can be set in the mask and the ROM code will refuse to boot into the indicated modes. This 8 byte attribute consists of a set of bitfields that are programmed in the factory at production time, based on measurements on the device. These values will be read at boot and applied as 'corrections' to various hardware features. This is the table of bitfields in the TRIM attribute: Bits Name Description 63:43 Reserved Not programmed 42:37 UVOV_GPIOB_TRIM Trimming value for UVOV_GPIOB. Corresponding register: UVOV:UVOV_CFG[0] 36:31 UVOV_BOOT_TRIM Trimming value for UVOV_BOOT. Corresponding register: UVOV:UVOV_CFG[1] 30:25 UVOV_RGMII_TRIM Trimming value for UVOV_RGMII. Corresponding register: UVOV:UVOV_CFG[4] 24:19 UVOV_GPIOA_TRIM Trimming value for UVOV_GPIOA. Corresponding register: UVOV:UVOV_CFG[5] In LAN969x FW_CONFIG is a binary blob, created during firmware compilation. The format of the blob is as follows: Byte range Size Description =========== ====== ================== 0x000-0x17F 0x0180 OTP-Emulation data 0x180-0x1FF 0x0080 Config space The image must at-least be at 512 (0x200) bytes. Only the first 512 bytes are used by BL1. The image can be extended at a later point in time, but this will only affect the BL2 usage. The OTP Emulation portion is covered in details in the OTP Emulation section. The content of the configuration space is generated based on the content from the scripts/fw_data.yaml file. - field: LAN969X_FW_CONF_MMC_CLK_RATE size: 32 value: 25000000 - field: LAN969X_FW_CONF_MMC_BUS_WIDTH size: 8 value: 0 # MMC_BUS_WIDTH_4 - field: LAN969X_FW_CONF_QSPI_CLK size: 8 value: 30 - field: LAN969X_FW_CONF_MMC_SPEED_MODE size: 8 value: 3 # SDMMC_TIMING_HS - field: LAN969X_FW_CONF_MMC_TX_TUNING_PHASE size: 8 value: 12 # Maserati HW Tx phase default value OTP Emulation is a facility to experiment with OTP settings, without making them permanent. The settings are stored in flash memory, and logical or-ed with the data from the HW OTP. If the HW OTP is empty (all zeros), then all bits can be emulated. The OTP emulation loads data from the FW_CONFIG_ID image. This feature is intended for 2 scenarios: Developers wanting to try out many different OTP configurations, but only having a limited amount of boards: OTP emulation makes it possible to test many new sets of configurations before selecting the optimal set. Users that are about to program the OTP, but want to test out the settings before committing changes that cannot be reversed. The OTP emulation data can be comitted using the fwu.html tool, or manually applied using the Linux otp command. Only the fields marked in the EMU column in the OTP attributes table can be emulated. Loading the FW_CONFIG_ID image is tricky because: When the board is provisioned for secure boot, this image must be authenticated. This image includes OTP emulation data, which may influence if the board shall be considered as provisioned for secure boot. The procedure to load this image is illustrated at the figure below: To ensure that keys are kept private, and that the execution of BL1, BL2 and BL31 cannot be tampered with these images must be run from secure memory. LAN969x have 2MB of on-chip SRAM (Secure RAM), and on-the-fly DDR memory encryption. BL1 executes from ROM directly, but uses the SRAM for static RW data and stack. BL1 will then load BL2 from flash memory into SRAM, and BL2 will then execute from SRAM and also use it for its static RW data and stack. BL2 will initialize the DDR memory, and setup a secure and a non-secure partition. The secure partition uses on-the-fly DDR encryption, and can only be accessed from the secure world. Once completed the BL2 loads the BL31 from flash memory into the secure DDR memory. DDR encryption causes a longer latency to the DDR memory, and is therefore not used for the entire DDR memory. BL31, which is executing from secure DDR memory, will then wipe the contents of the SRAM, and reconfigure the Trust Zone Controller to let all of the SRAM be accessible from the Non-Secure world. This is important for users of the RTE, as the RTE feature needs access to the SRAM. LAN969x supports a secure JTAG port which is configured via the SECURE_JTAG OTP attribute. The data-sheet documents the encoding of SECURE_JTAG. Once programmed the JTAG port HW will wake up in one of the following modes: Open: The JTAG port is operating normally. Secure mode 1: The JTAG port will respond to a boundary scan, but is otherwise unresponsive (locked down). In this mode it is possible to unlock the port (move the JTAG port to the open state) using a challenge-response mechanism running over JTAG. Secure mode 2: The JTAG port will be completely unresponsive (locked down). In this mode it is possible to unlock it (move it to open state) using a challenge-response mechanism running over JTAG. Closed: The JTAG port is disabled and cannot be enabled. If one of the secure-modes is enabled, then the JTAG port can be unlocked using a challenge/response. The challenges is a random 32 byte blob generated by the LAN996x device, and the response to unlock is a sha256(challenge-data OTP_SJTAG_SSK) (where OTP_SJTAG_SSK is the content of the OTP field, and + is a concatenation of the 2 blobs). The scripts/sjtag-challenge.rb in the TF-A repository can be used to calculate the response to a challenge. The fwu.html tool can be used to generate the challenge and unlock the JTAG port if the correct response is given. The TF-A project for LAN969x provides a template to lower the effort to build a set of secure artifacts. But the deliverables from Microchip are from an open and transparent system, which with a few changes can be turned into a secure set of artifacts. Following is a set of guidelines on how to turn the open-system into a set of secure boot artifacts: Understand what you are doing, and do not blindly trust us. Generate new keys and keep the private and the shared/symmetric keys secret (but still available as they will be needed to build potential new versions). Review how keys are generated, and evaluate if the methods provided in here are good enough for you need. How to keep keys secret is beyond the scope of this document, but look for good praxis in the industry. Use the certificate hierarchy to limit the exposure of the private keys. The root-of-trust should only be used very rarely and can be kept offline. Only increment the NV counters when a released version poses a security breach. The BL2U functionality provided in this project is a potential security breach, as it can expose the content of the OTP. Do one of the following: Change it to make it such that it will not be able to dump the OTP content. Do not generate it (delete it after each build). Treat it as a shared/symmetric key as it can be used to read out the keys from OTP. Do not give it to anyone who do not have these keys already. To build a secure product the manufacturing procedure must include the steps to program the OTP with needed keys and settings. A pre-request for this is to generate the keys and secure artifacts as explained in Secure artifacts Move to a trusted environment, where private and shared keys can be handled without risk of leaks. Initialize the OTP with the following content (either via BL2U / fwu.html or my using the otp Linux user-space utility. Regions must be defined (program PROTECT_REGION_ADDR) Following keys shall be programmed with the prepared content: OTP_TBBR_ROTPK, OTP_TBBR_SSK and OTP_SJTAG_SSK. Enable secure JTAG by programming SECURE_JTAG. Program the OTP_TBBR_HUK with unknown random data. Optional: disable any strap modes not needed by writing OTP_STRAP_DISABLE_MASK. Write protect region 4 by updating the content of PROTECT_OTP_WRITE. IMPORTANT: This is not only for write-protect, this is also needed to prevent non-secure read-access of region 4. NOTE: Additional regions can be write protected, but region 5 must remain writeable! Provision the firmware image in flash as needed. AES Advanced Encryption Standards ATE Automatic Test Equipment. Device used in SoC production and test. BL1 Boot Loader 1: In secure immutable ROM (Trusted ROM Firmware) BL2 Boot Loader 2: In secure on-chip RAM, temporary (Trusted Boot Firmware) BL31 Boot Loader 31: Resident secure services (ARM v8) BL32 Boot Loader 32: Resident secure services (ARM v7) BL33 Boot Loader 33: Typically U-Boot. trusted Firmware) BSSK Binding Secret Symmetric Key DT Device Tree eMMC Embedded MultiMediaCard FIP Firmware Image Package FIT Flattened Image Tree GPT GUID Partition Table HUK Hardware Unique Key JTAG Joint Test Action Group, interface for testing and debugging NS Non-Secure World OP-TEE Open Portable Trusted Execution Environment OS Operation System OTP One-Time-Programmable Memory PCIe Peripheral Component Interconnect Express PSCI Power State Coordination Interface RNG Random Number Generator ROT Root of Trust RTE Real-Time Engine. Device used for real-time equipment control. RTL Register-Transfer Level S Secure World SD-Card Secure Digital Card SHA Secure Hash Algorithm family SJTAG Secure JTAG SPI Serial Peripheral Interface SRAM Secure Ram SSK Secret Symmetric Key TBBR Trusted Board Boot Requirements TF-A Trusted Firmware for ARM UART Universal Asynchronous Receiver-Transmitter This document is provided under the BSP-3-Clause license (where swoftware is replaced with document). The BSD-3-Clause license has been chosen here as it is the same license used by the TF-A project. Here is the license covering this file/document: Copyright (c) 2022, Microchip Technology Inc. and its subsidiaries. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. - Neither the name of Arm nor the names of its contributors may be used to endorse or promote products derived from this document without specific prior written permission. THIS DOCUMENT IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS DOCUMENT, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"LAN969x Secure Boot","component":"bsp","version":"2024.03","name":"lan969x-tfa","url":"/bsp/2024.03/supported-hw/lan969x-tfa.html","titles":[{"text":"1. Introduction","hash":"_introduction","id":1},{"text":"1.1. TF-A architecture","hash":"_tf_a_architecture","id":2},{"text":"1.2. TF-A Bootloaders (BLx)","hash":"_tf_a_bootloaders_blx","id":3},{"text":"1.3. Firmware Image Package (FIP)","hash":"_firmware_image_package_fip","id":4},{"text":"1.3.1. FIP Image IDs","hash":"_fip_image_ids","id":5},{"text":"2. Getting started with TF-A for LAN969x","hash":"_getting_started_with_tf_a_for_lan969x","id":6},{"text":"2.1. Build environment","hash":"_build_environment","id":7},{"text":"2.2. Getting sources and releases","hash":"_getting_sources_and_releases","id":8},{"text":"2.3. Building","hash":"_building","id":9},{"text":"2.3.1. Platform selection","hash":"_platform_selection","id":10},{"text":"2.3.2. BL33 content","hash":"_bl33_content","id":11},{"text":"2.3.2.1. Loading FIT/ITBs as BL33","hash":"_loading_fititbs_as_bl33","id":12},{"text":"Configuration selection","hash":"_configuration_selection","id":13},{"text":"Device Tree modifications","hash":"_device_tree_modifications","id":14},{"text":"2.3.3. Authentication keys","hash":"_authentication_keys","id":15},{"text":"2.3.4. Rollback protection (NV-Counters)","hash":"_rollback_protection_nv_counters","id":16},{"text":"2.3.5. Image encryption","hash":"_image_encryption","id":17},{"text":"2.3.6. Image generation","hash":"_image_generation","id":18},{"text":"3. TF-A in Details","hash":"_tf_a_in_details","id":19},{"text":"3.1. Certificate hierarchy","hash":"_certificate_hierarchy","id":20},{"text":"3.2. Revocation and Rollback protection","hash":"_revocation_and_rollback_protection","id":21},{"text":"3.3. Image signing in details","hash":"_image_signing_in_details","id":22},{"text":"3.4. BL1 Chain of Trust verification","hash":"_bl1_chain_of_trust_verification","id":23},{"text":"3.5. BL2 Chain of Trust verification","hash":"_bl2_chain_of_trust_verification","id":24},{"text":"3.6. Firmware encryption","hash":"_firmware_encryption","id":25},{"text":"4. LAN969x TF-A Platform support","hash":"_lan969x_tf_a_platform_support","id":26},{"text":"4.1. Strapping modes","hash":"_strapping_modes","id":27},{"text":"4.2. Booting","hash":"_booting","id":28},{"text":"4.3. OTP","hash":"_otp","id":29},{"text":"4.3.1. OTP Regions","hash":"_otp_regions","id":30},{"text":"4.3.2. OTP attributes","hash":"_otp_attributes","id":31},{"text":"4.3.3. OTP attribute: OTP_STRAP_DISABLE_MASK","hash":"_otp_attribute_otp_strap_disable_mask","id":32},{"text":"4.3.4. OTP attribute: TRIM","hash":"_otp_attribute_trim","id":33},{"text":"4.4. Firmware Config (FW_CONFIG)","hash":"_firmware_config_fw_config","id":34},{"text":"4.4.1. OTP Emulation","hash":"_otp_emulation","id":35},{"text":"4.4.2. Loading of FW_CONFIG_ID","hash":"_loading_of_fw_config_id","id":36},{"text":"4.5. Secure RAM","hash":"_secure_ram","id":37},{"text":"4.6. Secure JTAG","hash":"_secure_jtag","id":38},{"text":"5. Guidelines for preparing secure artifacts","hash":"secureartifacts","id":39},{"text":"6. Guideline Secure provisioning","hash":"_guideline_secure_provisioning","id":40},{"text":"7. TERMS and ABBREVIATIONS","hash":"term","id":41},{"text":"8. License","hash":"_license","id":42}]},"163":{"id":163,"text":"LAN969X SoC have 4 FLEXCOMs (Flexible Serial Communication Controller). In order to use flexcom USART interface, a specific flexcom should be configured in USART mode. Following kernel config options should be enabled to use LAN969x flexcom USART interface: CONFIG_MFD_AT91_USART - USART driver config option. To use Flexcom USART interface, following configurations are required in device tree. Each of the flexcom flx0, flx1, flx2 and flx3 nodes can be configured in USART mode ATMEL_FLEXCOM_MODE_USART to use USART interface. compatible string must be set to atmel,at91sam9260-usart. reg property must be set with register address and length as . GPIO pins for TXD and RXD pins should be configured to pinctrl-0 property. Also add cts and rts pins, if present. List of possible TXD and RXD pin mappings are as in below table: FLEXCOM ID ALT Mode RXD pin TXD pin flx0 ALT 2 GPIO3 GPIO4 flx2 ALT 3 GPIO15 GPIO16 flx1 ALT 2 GPIO28 GPIO29 flx3 ALT 2 GPIO55 GPIO56 flx2 ALT 1 GPIO65 GPIO66 interrupts property must set with interrupt details. Interrupt number[CPU INTR] corresponding to a flexcom must be configured as defined in below table: FLEXCOM ID Shared Peripheral Interrupt CPU INTR flx0 78 46 flx1 79 47 flx2 80 48 flx3 81 49 Note that Shared peripheral interrupt lines start at index ID32. So, CPU INTR must be calculated as [Shared peripheral interrupt number - 32]. Input clock clocks property must be set to &fabric_clk. Note that Fabric clock (250Mhz) is clock used by AXI, AHB fabric and APB bridges which connects all peripherals. clock-names must be set to usart. GPIO flexcom shared pins should be configured as per board design. dmas must be set to phandle dma0 and Peripheral ID as listed below: FLEXCOM ID Tx channel PerID Rx channel PerID flx0 3 2 flx1 3 2 flx2 7 6 flx3 9 8 Flexcom Documentation https://elixir.bootlin.com/linux/latest/source/Documentation/devicetree/bindings/serial/atmel,at91-usart.yaml[USART Documentation} Following example shows how a flexcom USART should be defined in a EVB-LAN9696-24port DT. Here Flexcom0 is used as the console. / { model = \"lan969x ev23x71a (pcb8398)\"; aliases { serial0 = &usart0; }; chosen { stdout-path = \"serial0:115200n8\"; }; &flx0 { atmel,flexcom-mode = ; status = \"okay\"; usart0: serial@200 { pinctrl-0 = ; pinctrl-names = \"default\"; status = \"okay\"; }; }; &flx2 { atmel,flexcom-mode = ; status = \"okay\"; spi2: spi@400 { pinctrl-0 = ; pinctrl-names = \"default\"; cs-gpios = ; status = \"okay\"; spi@0 { compatible = \"mchp,synce_dpll\"; reg = ; spi-max-frequency = ; }; }; }; &flx3 { atmel,flexcom-mode = ; status = \"okay\"; i2c3: i2c@600 { pinctrl-0 = ; pinctrl-names = \"default\"; i2c-analog-filter; i2c-digital-filter; i2c-digital-filter-width-ns = ; i2c-sda-hold-time-ns = ; status = \"okay\"; }; }; &gpio { fc0_pins: fc0-pins { pins = \"GPIO_3\", \"GPIO_4\"; function = \"fc\"; }; fc2_pins: fc2-pins { pins = \"GPIO_64\", \"GPIO_65\", \"GPIO_66\"; function = \"fc\"; }; fc3_pins: fc3-pins { pins = \"GPIO_55\", \"GPIO_56\"; function = \"fc\"; }; }; Check if a tty device is created in /dev/ directory. This can be also be verified by executing dmesg | tail (on host PC) once the board is powered-up. Connect to console using minicom -s /dev/ttyACM0 Following demonstrates above DT flexcom examples on EVB-LAN9696-24port board: In order to use flexcom0 USART as console, add console=ttyAT0,115200n8 to uboot bootargs environment variable and pass it to the kernel, then this usart will become the console. First identify and connect to /dev/ttyACMx (Here x is port number) on Host machine. For Linux users, minicom application can be used to connect to console. # dmesg | tail [1124607.685978] usb 1-6.1.4: USB disconnect, device number 27 [1124610.736013] usb 1-6.1.4: new full-speed USB device number 122 using xhci_hcd [1124610.852447] usb 1-6.1.4: New USB device found, idVendor=04d8, idProduct=00df, bcdDevice= 1.01 [1124610.852451] usb 1-6.1.4: New USB device strings: Mfr=1, Product=2, SerialNumber=3 [1124610.852452] usb 1-6.1.4: Product: MCP2200 USB Serial Port Emulator [1124610.852453] usb 1-6.1.4: Manufacturer: Microchip Technology Inc. [1124610.852454] usb 1-6.1.4: SerialNumber: 0013263668 [1124610.866007] cdc_acm 1-6.1.4:1.0: ttyACM1: USB ACM device [1124610.867021] hid-generic 0003:04D8:00DF.0012: hiddev1,hidraw2: USB HID v1.11 Device [Microchip Technology Inc. MCP2200 USB Serial Port Emulator] on usb-0000:00:14.0-6.1.4/input2 [1124613.768165] usb 1-4.1: reset high-speed USB device number 118 using xhci_hcd # # minicom -s /dev/ttyACM1 U-Boot 2023.04 (Nov 07 2023 - 14:41:53 +0100) CPU: ARM A53 Model: lan969x ev23x71a (pcb8398) DRAM: 896 MiB (effective 897.9 MiB) Core: 27 devices, 16 uclasses, devicetree: fit MMC: emmc@e0830000: 0 Loading Environment from SPIFlash... SF: Detected sst26wf016 with page size 256 Bytes, erase size 4 KiB, total 2 MiB OK In: serial Out: serial Err: serial Net: eth0: switch@0 Hit any key to stop autoboot: 0 7168283 bytes read in 163 ms (41.9 MiB/s) Working FDT set to 64000000 ## Loading kernel from FIT Image at 64000000 ... Using 'lan9698_ev23x71a_0_at_lan969x' configuration Trying 'kernel' kernel subimage Description: Kernel Type: Kernel Image Compression: gzip compressed Data Start: 0x640000c8 Data Size: 6976499 Bytes = 6.7 MiB Architecture: AArch64 OS: Linux Load Address: 0x60000000 Entry Point: 0x60000000 Verifying Hash Integrity ... OK ## Loading fdt from FIT Image at 64000000 ... Using 'lan9698_ev23x71a_0_at_lan969x' configuration Trying 'fdt_lan9698_ev23x71a_0_at_lan969x' fdt subimage Description: Flattened Device Tree Type: Flat Device Tree Compression: uncompressed Data Start: 0x646cb5fc Data Size: 27258 Bytes = 26.6 KiB Architecture: AArch64 Verifying Hash Integrity ... OK Booting using the fdt blob at 0x646cb5fc Working FDT set to 646cb5fc Uncompressing Kernel Image Loading Device Tree to 0000000096b22000, end 0000000096b2ba79 ... OK Working FDT set to 96b22000 Loading Device Tree to 0000000096b15000, end 0000000096b21a79 ... OK Working FDT set to 96b15000 Starting kernel ... Starting syslogd: OK Starting klogd: OK Running sysctl: OK Seeding 256 bits and crediting Saving 256 bits of creditable seed for next boot Starting iptables: OK Starting network: OK Starting dropbear sshd: OK Welcome to SMBStaX vcoreiii login: root #","title":"LAN969x USART","component":"bsp","version":"2024.03","name":"lan969x-usart","url":"/bsp/2024.03/supported-hw/lan969x-usart.html","titles":[{"text":"1. SoC Resources","hash":"_soc_resources","id":1},{"text":"2. Kernel configurations","hash":"_kernel_configurations","id":2},{"text":"3. Devicetree Configuration","hash":"_devicetree_configuration","id":3},{"text":"3.1. References","hash":"_references","id":4},{"text":"3.2. Example","hash":"_example","id":5},{"text":"4. UserSpace","hash":"_userspace","id":6},{"text":"4.1. Confirm instances are created","hash":"_confirm_instances_are_created","id":7},{"text":"4.2. Example on how to use","hash":"_example_on_how_to_use","id":8},{"text":"4.2.1. FLEXCOM USART as console","hash":"_flexcom_usart_as_console","id":9}]},"164":{"id":164,"text":"LAN969x SoC supports one instance of the Dual Role SuperSpeed DesignWare USB3 controller. The current implementation supports only the host mode part of dual role Following kernel config options should be enabled to use LAN969x USB in host mode: CONFIG_USB_DWC3 - DesignWare USB Controller support CONFIG_USB_DWC3_ULPI - Using an ULPI type PHY on the USB controller Atmel High-Speed USB device controller DT Documentation dwc3-of-simple To enable LAN969x USB, following configurations are required in device tree: compatible string must be set to \"microchip,lan966x-dwc3\" clocks property must be set to #address-cells must be set to 1. #size-cells must be set to 1. ranges property must be present (this is an empty address translation) This node must have a child node that specifies the glue for the DWC3 controller: compatible string must be set to = \"snps,dwc3\". reg property must be set to . interrupts must be set to Peripheral Shared Peripheral Interrupt CPU INTR USB Host 112 80 dr_mode property must be set to \"host\". clocks property must be set to . clock-names property must be set to \"ref\". assigned-clocks property must be set to . assigned-clock-rates property must be set to 60Mhz. maximum-speed property must be set to \"full-speed\". phy-names property must be set to \"usb2-phy\" and \"usb3-phy\" DWC3 Controller Synopsis DWC3 Glue Following example shows how the LAN969x USB controller should be defined in DT: dtsi file: usb0: usb@300000 { compatible = \"microchip,lan966x-dwc3\"; clocks = ; #address-cells = ; #size-cells = ; ranges; status = \"disabled\"; usb0_dwc3: usb_dwc3@300000 { compatible = \"snps,dwc3\"; reg = ; interrupts = ; dr_mode = \"host\"; clocks = ; clock-names = \"ref\"; assigned-clocks = ; assigned-clock-rates = ; maximum-speed = \"full-speed\"; phy-names = \"usb2-phy\", \"usb3-phy\"; status = \"okay\"; }; }; dts file changes: &gpio { usb_ulpi_pins: usb-ulpi-pins { pins = \"GPIO_30\", \"GPIO_31\", \"GPIO_32\", \"GPIO_33\", \"GPIO_34\", \"GPIO_35\", \"GPIO_36\", \"GPIO_37\", \"GPIO_38\", \"GPIO_39\", \"GPIO_40\", \"GPIO_41\"; function = \"usb_ulpi\"; }; usb_rst_pins: usb-rst-pins { pins = \"GPIO_12\"; function = \"usb2phy_rst\"; }; usb_over_pins: usb-over-pins { pins = \"GPIO_13\"; function = \"usb_over_detect\"; }; usb_power_pins: usb-power-pins { pins = \"GPIO_1\"; function = \"usb_power\"; }; }; &usb0 { status = \"okay\"; pinctrl-0 = , , , ; pinctrl-names = \"default\"; }; You can verify that the driver is available by checking its mode setting is host, like this: # cat /sys/kernel/debug/usb/300000.usb_dwc3/mode host Prepare a USB Memory Stick with the following properties on a Linux Desktop: Make a GTP partition table Add one primary partition using the EXT4 filesystem that uses the total USB Memory Stick space. Format the partition with the ext4 formatter Mount the partition on an empty folder Copy a wellknown file to the mounted folder Sync and unmount the folder Now insert the memory stick in the USB vertical USB port on the EVB-LAN9696-24port and check the logs: # [ 382.641801] usb 1-1: new high-speed USB device number 2 using xhci-hcd [ 382.790319] usb 1-1: New USB device found, idVendor=0781, idProduct=5406, bcdDevice= 2.00 [ 382.795753] usb 1-1: New USB device strings: Mfr=1, Product=2, SerialNumber=3 [ 382.803050] usb 1-1: Product: U3 Cruzer Micro [ 382.807278] usb 1-1: Manufacturer: SanDisk [ 382.811348] usb 1-1: SerialNumber: 194253029D50FD3B [ 382.817444] usb-storage 1-1:1.0: USB Mass Storage device detected [ 382.822855] scsi host0: usb-storage 1-1:1.0 [ 383.842201] scsi 0:0:0:0: Direct-Access SanDisk Cruzer 8.02 PQ: 0 ANSI: 0 CCS [ 383.848550] sd 0:0:0:0: [sda] Media removed, stopped polling [ 383.854874] sd 0:0:0:0: [sda] Attached SCSI removable disk # ls /dev/sda* /dev/sda The log announces a new sda block device which is visible in the /dev folder, but what about the partition that we created? Here you need to probe the new device for partition information: # partprobe /dev/sda [ 405.656881] sd 0:0:0:0: [sda] 15704063 512-byte logical blocks: (8.04 gb/7.49 gib) [ 405.662434] sda: detected capacity change from 0 to 15704063 [ 405.693476] sda: sda1 [ 405.720651] sda: sda1 Partprobe informs the kernel about the partitions on device sda which in turn causes the kernel to create a new sda1 block device that represents the first (and only) partition on sda. On Desktop Linux systems it is common to run the udev daemon that takes care of retrieving partition information and spawn process that will mount these partitions with specific user rights, but udev and its helpers are not always available on embedded systems. Now you can mount the sda1 partition to access the file that was stored there: # mount /dev/sda1 /mnt/ [ 421.617746] EXT4-fs (sda1): mounted filesystem with ordered data mode. Quota mode: disabled. # ls -l /mnt/ total 28K drwxr-xr-x 3 root root 4.0K Dec 12 2023 . drwxr-xr-x 19 1001 1001 4.0K Sep 28 2023 .. drwx------ 2 root root 16.0K Dec 12 2023 lost+found -rw-r--r-- 1 root root 1.4K Dec 12 2023 main.rs # cat /mnt/main.rs use std::fs::File; use std::io::Read; ... file listing continues... # You can now read and write to the folder as you please, and the changes will be stored in the first partition of the USB Memory Stick. Remember to sync and unmount the device before unplugging it. # sync # umount /mnt/ [ 897.689004] EXT4-fs (sda1): unmounting filesystem. #","title":"LAN969x USB","component":"bsp","version":"2024.03","name":"lan969x-usb","url":"/bsp/2024.03/supported-hw/lan969x-usb.html","titles":[{"text":"1. SoC Resources","hash":"_soc_resources","id":1},{"text":"2. Kernel configurations","hash":"_kernel_configurations","id":2},{"text":"3. Devicetree Configuration","hash":"_devicetree_configuration","id":3},{"text":"3.1. References","hash":"_references","id":4},{"text":"3.2. Example","hash":"_example","id":5},{"text":"4. UserSpace","hash":"_userspace","id":6},{"text":"4.1. Mounting a USB Memory Stick","hash":"_mounting_a_usb_memory_stick","id":7}]},"165":{"id":165,"text":"This section describes the methods to control which firmware is allowed to execute on a LAN969X-based platform. First and foremost, LAN969X supports Secure Boot by using Trusted Firmware for ARM (TFA), which implements authenticated boot, allowing only software explicitly signed for use on the system. This will control all elements executed up to and including the final Non-Secure boot stage, the so-called BL33. (See Booting LAN969X for more details on boot stages). BL33 is normally implemented by U-Boot, but TFA can also boot other software entities such as Linux or RTOS-based applications. This is controlled during preparation of boot media images. After BL33 is authenticated and started, it is the responsibility of the BL33 to protect the Non-Secure realm against execution of any non-authenticated Non-Secure software. Note that the Secure World is inherently protected by hardware mechanisms, and by definition the Non-Secure World needs no special precautions for maintaining the security of the Secure World. But by ensuring that no undesired (Non-Secure) code is allowed, the total attack surface is further reduced. When the BL33 used supports starting other firmware entities it will be desirable to authenticate those firmware entities. Methods to do so is presented for U-Boot and Linux. Secure Boot is an integral feature of of TFA. Refer to LAN969x Secure Boot for information of how to produce (signed) boot media and securing the platform with the ROT (root of trust) in the OTP. Using U-Boot as BL33 is inherently insecure. More measures than described here are required to achieve other than a casual level of security. If you are serious about security you should be using either (secured, hardened) Linux or an RTOS-based embedded application. This section describes how to enable the verified boot in u-boot and how the fit images need to be signed to be able to boot them. Although U-Boot may support other image types, only fit images can be signed. First it is required to generate a private and public key which will be used to sign the fit images: openssl genrsa -F4 -out /tmp/keys/dev.key 2048 openssl req -batch -new -x509 -key /tmp/keys/dev.key -out /tmp/keys/dev.crt After this it is required to enable these configuration options in u-boot: CONFIG_FIT_SIGNATURE=y CONFIG_DEVICE_TREE_INCLUDES=\"lan969x_signed.dtsi\" Next step is to get the public key inside the dtbs. The key is to be used when authenticating any fit image. Since it is a public key, it is not required to be secured/secret, and it is included directly in the U-Boot binary image by the u-boot.dtsi device tree included in U-Boot. It is required to get the public key into a format that the u-boot.dtsi file can understand. This is possible with the following tool: https://gitlab.com/rkraevskiy/ubootpubkey And run the command like this ./ubpubkey.py /tmp/keys/dev.crt The output will be printed on the screen: rsa,exponent = ; rsa,modulus = ; rsa,n0-inverse = ; rsa,num-bits = ; rsa,r-squared = ; k-gen = \"ubpubkey/1.0a/1707912564\"; k-sha256-fp = \"6b84d0da71c8fe705ad46a9c76ce23211f2c5ac835e8823f62db13be5b676e62\"; k-src = \"cert/dev.crt\"; Done The it is required to take the following fields: rsa,exponent rsa,modulus rsa,n0-inverse rsa,num-bits rsa,r-squared And replace the existing one inside the u-boot file 'lan969x_signed.dtsi': signature { key-dev { required = \"conf\"; key-name-hint = \"dev\"; algo = \"sha1,rsa2048\"; rsa,exponent = ; rsa,modulus = ; rsa,n0-inverse = ; rsa,num-bits = ; rsa,r-squared = ; }; }; After this, it is required to compile u-boot. The values in this snippet are just for demo purpose, don’t use them in production. The BSP contains a pre-compiled U-Boot with sample demonstration keys. The pre-compiled binary version should not be used directly in a production environment, rather build your own with your own, private key. Inside the its file that is used to generate the itb file using mkimage, it is required to add a signature-1 node under the configuration which will be signed with the private key and a hash-1 for each of the images that will be signed. For example: images { kernel { ... hash-1 { algo = \"sha1\"; }; }; ... }; configurations { lan9698_ev23x71a_0_at_lan969x { description = \"lan9698 ev23x71a\"; kernel = \"kernel\"; ramdisk = \"ramdisk\"; fdt = \"fdt_lan9698_ev23x71a_0_at_lan969x\"; signature-1 { algo = \"sha1,rsa2048\"; key-name-hint = \"dev\"; sign-images = \"fdt\", \"kernel\", \"ramdisk\"; }; hash-1 { algo = \"sha1\"; }; }; }; Then simply running mkimage command like this: mkimage -f vmlinux.its -k /tmp/keys/ fit.itb — will sign the FIT image with the key in the given directory. Using Linux in a secure configuration is outside the scope of this document. Secure Linux is a vast topic, and this section only propose a possible, partial method. As Linux can be started by both TFA and U-Boot, this method applies to both using a Linux (fit) image as BL33 and to using U-Boot as BL33. The Linux kernel itself should be authenticated by the previous boot stage - either TFA or U-Boot depending on which BL33 is used. This was described in the previous sections. But as Linux (typically) supports starting separate firmware entities from a file system, such as Linux kernel modules and/or user-mode applications, it may be required to control the origin of these entities. If your Linux image FIT contain an initial root file system (rootfs), then it should already been authenticated by the prior boot stage. But if it is mounting a file system from a NOR or eMMC partition, then it is necessary to ensure that the data in the file system is not tampered with or entirely overwritten with a rogue file system image. The following describes how to enable file system integrity checking. File system integrity cannot stand alone. It can easily be circumvented if the Linux system allows either root-level command line access, using U-Boot or if the base system (TFA) is not properly tied to a ROT in the OTP. Several methods for protecting a file system is available under Linux. The method presented here is using a tool called dm-verity. Detailed info can be seen here: dm-verity introduction. Dm-verity works by creating a so-called Merkle Tree data structure, which is a hierarchical set of hashes, the bottom-most leaves representing a hash of the individual data blocks in the raw file system its supposed to protect. The top node is the root hash and is used to identify the total sum of all hashes. This hash data is contained in a separate disk partition, alongside the (unchanged) root file system. When the Linux system mounts the file system, it should be given two extra parameters: The Root Hash The partition name where the hash data is kept When creating the file system, it is required to use a block size of 4k (4096). You can use other file systems than ext4, and it makes good sense to use read-only file systems. When you have the file system image ready (in a file of appropriate size), then you can create the hash data. The command to generate the hash data file is (input file rootfs.squashfs, hash algorithm sha256): $ veritysetup format -v --debug \\ --hash=sha256 --root-hash-file roothash.txt rootfs.squashfs rootfs.hash # cryptsetup 2.4.3 processing \"veritysetup -v --debug format --hash=sha256 --root-hash-file roothash.txt rootfs.squashfs rootfs.hash\" # Running command format. # Allocating context for crypt device rootfs.hash. # Trying to open and read device rootfs.hash with direct-io. # Initialising device-mapper backend library. # Formatting device rootfs.hash as type VERITY. # Crypto backend (OpenSSL 3.0.2 15 Mar 2022 [default][legacy]) initialized in cryptsetup library version 2.4.3. # Detected kernel Linux 6.5.0-18-generic x86_64. # Setting ciphertext data device to rootfs.squashfs. # Trying to open and read device rootfs.squashfs with direct-io. # Hash creation sha256, data device rootfs.squashfs, data blocks 1476, hash_device rootfs.hash, offset 1. # Data device size required: 6045696 bytes. # Hash device size required: 57344 bytes. # Using 2 hash levels. # Updating VERITY header of size 512 on device rootfs.hash, offset 0. VERITY header information for rootfs.hash UUID: 7cbcdd9d-2c7f-4615-84b3-b2c8fd7ff0af Hash type: 1 Data blocks: 1476 Data block size: 4096 Hash block size: 4096 Hash algorithm: sha256 Salt: b61705a90f00c79348629adf0c777a8d9c923636f7f9ece854902f3a609233c5 Root hash: e3796aecd5f734716fc0f2569d54bf60c585dd61fa0e346586cb017b6f1ec27f # Created root hash file roothash.txt. # Releasing crypt device rootfs.hash context. # Releasing device-mapper backend. # Closing read write fd for rootfs.hash. Command successful. After running this command, the root hash is in the roothash.txt file, and the hash data is in rootfs.hash. The former needs to be read prior to mounting the verified file system, and the latter needs to be put in a disk partition (or loop mounted as a file). Mounting the disk can be done like this: $ veritysetup open \\ /dev/mmcblk0p5 \\ dmv_root \\ /dev/mmcblk0p6 \\ e3796aecd5f734716fc0f2569d54bf60c585dd61fa0e346586cb017b6f1ec27f $ mkdir mnt $ mount /dev/mapper/dmv_root mnt/ The dmv_root is an arbitrary name used to identify the verified file system, and /dev/mmcblk0p5 is assumed to hold the file system image, whereas /dev/mmcblk0p6 holds the hash data generated. To support a dm-verity in the Linux kernel, make sure you have the following kernel options enabled: CONFIG_MD=y CONFIG_BLK_DEV_DM=y CONFIG_DM_VERITY=y CONFIG_CRYPTO_SHA256=y CONFIG_CRYPTO_USER_API_HASH=y CONFIG_CRYPTO_USER_API_SKCIPHER=y","title":"LAN969x Secure and Verified Boot","component":"bsp","version":"2024.03","name":"lan969x-verified-boot","url":"/bsp/2024.03/supported-hw/lan969x-verified-boot.html","titles":[{"text":"1. Introduction","hash":"_introduction","id":1},{"text":"1.1. Secure Boot using Trusted Firmware for ARM","hash":"_secure_boot_using_trusted_firmware_for_arm","id":2},{"text":"1.2. Verified boot in U-Boot","hash":"_verified_boot_in_u_boot","id":3},{"text":"1.2.1. Generate keys","hash":"_generate_keys","id":4},{"text":"1.2.2. Configure U-boot","hash":"_configure_u_boot","id":5},{"text":"1.2.3. How to sign FIT images with private key","hash":"_how_to_sign_fit_images_with_private_key","id":6},{"text":"1.3. Verified boot in Linux","hash":"_verified_boot_in_linux","id":7},{"text":"1.3.1. File system integrity","hash":"_file_system_integrity","id":8}]},"166":{"id":166,"text":"LAN969x SoC supports one instance of Watchdog Timer from Synopsys DW. Following kernel config options should be enabled to use LAN969x WDT: CONFIG_DW_WATCHDOG - Synopsys Watchdog driver config option. To enable the Watchdog timer, following configurations are required in device tree: compatible string must be set to snps,dw-wdt. reg property must be set to . interrupts property must be set with interrupt details as . Peripheral Shared Peripheral Interrupt CPU INTR watchdog 68 36 Note Shared peripheral interrupt lines start at index ID32. So, CPU INTR must be calculated as [Shared peripheral interrupt number - 32]. clocks property must be set to . WDT DT Documentation Watchdog Driver API Following example shows how a Watchdog timer should be defined in DT: dtsi file: watchdog: watchdog@e0090000 { compatible = \"snps,dw-wdt\"; reg = ; interrupts = ; clocks = ; }; Check for /dev/watchdog. If this file is present, that means the watchdog kernel device driver is loaded. Run cat /dev/watchdog0 and you see linux reboots in 30-40secs. # cat /dev/watchdog0 [ 7879.765752] watchdog: watchdog0: watchdog did not stop! # # # U-Boot 2023.04 (Nov 07 2023 - 14:41:53 +0100) CPU: ARM A53 Model: lan969x ev23x71a (pcb8398) DRAM: 896 MiB (effective 897.9 MiB) Core: 27 devices, 16 uclasses, devicetree: fit MMC: emmc@e0830000: 0 Loading Environment from MMC... OK In: serial Out: serial Err: serial Net: eth0: switch@0 Hit any key to stop autoboot: 0 Configure buildroot and install Watchdog utility provided by Busybox. The main watchdog configuration file is /etc/watchdog.conf. # busybox | grep watchdog vconfig, vi, vlock, w, watch, watchdog, wc, wget, which, who, whoami, # # watchdog --help watchdog: unrecognized option `--help' watchdog version 5.16, usage: watchdog [options] options: -c | --config-file specify location of config file -f | --force don't sanity-check config or use PID file -F | --foreground run in foreground -X | --loop-exit run a fixed number of loops then exit -q | --no-action do not reboot or halt -b | --softboot soft-boot on error -s | --sync sync filesystem -v | --verbose verbose messages # ls -l /etc/watchdog.conf -rw-r--r-- 1 root root 6102 May 18 2022 /etc/watchdog.conf Add watchdog configurations to /etc/watchdog.conf file. Run command watchdog -c /etc/watchdog.conf. By default, Busybox watchdog command runs in background. Check for Hardware watchdog process ID. Kill the watchdog process. Verify that system is rebooted after watchdog-timeout value. # cat /etc/watchdog.conf watchdog-device = /dev/watchdog watchdog-timeout = 20 log-dir = /var/log/watchdog file = /var/log/messages change = 1500 realtime = yes priority = 1 # watchdog -c /etc/watchdog.conf # ps -ef | grep watchdog 28 root [watchdogd] 477 root watchdog -c /etc/watchdog.conf 481 root grep watchdog # kill -9 477 ; uptime ; tail -f /var/log/messages [ 2933.075931] watchdog: watchdog0: watchdog did not stop! 00:48:53 up 48 min, load average: 0.00, 0.00, 0.00 Jan 1 00:48:38 vcoreiii daemon.info watchdog[477]: interface: no interface to check Jan 1 00:48:38 vcoreiii daemon.info watchdog[477]: temperature: no sensors to check Jan 1 00:48:38 vcoreiii daemon.info watchdog[477]: no test binary files Jan 1 00:48:38 vcoreiii daemon.info watchdog[477]: no repair binary files Jan 1 00:48:38 vcoreiii daemon.info watchdog[477]: error retry time-out = 60 seconds Jan 1 00:48:38 vcoreiii daemon.info watchdog[477]: repair attempts = 1 Jan 1 00:48:38 vcoreiii daemon.info watchdog[477]: alive=/dev/watchdog heartbeat=[none] to=root no_act=no force=no Jan 1 00:48:38 vcoreiii daemon.info watchdog[477]: watchdog now set to 20 seconds Jan 1 00:48:38 vcoreiii daemon.info watchdog[477]: hardware watchdog identity: Synopsys DesignWare Watchdog Jan 1 00:48:53 vcoreiii kern.crit kernel: [ 2933.075931] watchdog: watchdog0: watchdog did not stop! NOTICE: Booting Trusted Firmware ...More trace... U-Boot 2023.04 (Nov 07 2023 - 14:41:53 +0100) CPU: ARM A53 Model: lan969x ev23x71a (pcb8398) DRAM: 896 MiB (effective 897.9 MiB) Core: 27 devices, 16 uclasses, devicetree: fit MMC: emmc@e0830000: 0 Loading Environment from MMC... OK In: serial Out: serial Err: serial Net: eth0: switch@0 Hit any key to stop autoboot: 0 Add watchdog configurations to the /etc/watchdog.conf file. Run the watchdog in foreground using the '-F' option. Press CTRL + z to suspend the watchdog process. In this case, the watchdog device is enabled but is no longer fed. After watchdog-timeout seconds, the system is reset by the Watchdog device. # watchdog -c /etc/watchdog.conf -F watchdog: starting daemon (5.16): watchdog: int=1s realtime=yes sync=no load=0,0,0 soft=no watchdog: memory not checked watchdog: ping: no machine to check watchdog: file: /var/log/messages:1500 watchdog: pidfile: no server process to check watchdog: interface: no interface to check watchdog: temperature: no sensors to check watchdog: no test binary files watchdog: no repair binary files watchdog: error retry time-out = 60 seconds watchdog: repair attempts = 1 watchdog: alive=/dev/watchdog heartbeat=[none] to=root no_act=no force=no watchdog: watchdog now set to 20 seconds watchdog: hardware watchdog identity: Synopsys DesignWare Watchdog [1]+ Stopped watchdog -c /etc/watchdog.conf -F # NOTICE: Booting Trusted Firmware ...More traces... NOTICE: Direct boot of BL33 binary image U-Boot 2023.04 (Nov 07 2023 - 14:41:53 +0100) CPU: ARM A53 Model: lan969x ev23x71a (pcb8398) DRAM: 896 MiB (effective 897.9 MiB) Core: 27 devices, 16 uclasses, devicetree: fit MMC: emmc@e0830000: 0 Loading Environment from MMC... OK In: serial Out: serial Err: serial Net: eth0: switch@0 Hit any key to stop autoboot: 0","title":"LAN969x Watchdog","component":"bsp","version":"2024.03","name":"lan969x-wdt","url":"/bsp/2024.03/supported-hw/lan969x-wdt.html","titles":[{"text":"1. SoC Resources","hash":"_soc_resources","id":1},{"text":"2. Kernel configurations","hash":"_kernel_configurations","id":2},{"text":"3. Devicetree Configuration","hash":"_devicetree_configuration","id":3},{"text":"3.1. References","hash":"_references","id":4},{"text":"4. Example","hash":"_example","id":5},{"text":"4.1. UserSpace","hash":"_userspace","id":6},{"text":"4.1.1. Confirm instances are created","hash":"_confirm_instances_are_created","id":7},{"text":"4.1.2. Direct activation of the watchdog","hash":"_direct_activation_of_the_watchdog","id":8},{"text":"4.1.3. Using the watchdog utility","hash":"_using_the_watchdog_utility","id":9},{"text":"4.1.4. Running the watchdog in the background","hash":"_running_the_watchdog_in_the_background","id":10},{"text":"4.1.5. Running the watchdog in the foreground","hash":"_running_the_watchdog_in_the_foreground","id":11}]},"167":{"id":167,"text":"The LAN969x product consists of 4 product families: LAN969x-XX family with basic switch support LAN969x-XX-VAO family with automotive features added LAN9691, LAN9692, LAN9693 LAN969x-XX-TSN family with industrial features added LAN969x-XX-RED family with redundancy features added The XX in the above list is selected from this list: 100 Gbps switch capacity: LAN9698 / LAN9693 60 Gbps switch capacity: LAN9696 / LAN9692 40 Gbps switch capacity: LAN9694 / LAN9691 The table below show the relevant areas of physical memory for the LAN969x. Please note that off-chip resources such as flash and DDR, depends on board design, so you must also check the schematics. Name On-Chip Start Max size Size eval board ======= ======= ========== ==================== =================== BOOTROM Yes 0x00000000 0x00014000 (80KB) 0x00014000 (80KB) SRAM Yes 0x00100000 0x00200000 (2MB) 0x00200000 (2MB) QSPI0-NOR No 0x20000000 0x10000000 (256MB) 0x2000000 (2MB) DDR No 0x60000000 0x80000000 (2048MB) 0x80000000 (2048MB) This chapter describes the different LAN969x Reference Boards. The EVB-LAN9696-24port is a 24 port evaluation board with 4 x 10GE SFP+ uplinks. The board features: LAN9698 switch device 24 x 1000BASE-T ports using 6 x LAN8814 PHYs via Q-USGMII (PCH/MCH) 4 x 10G SFP+ ports directly connected to LAN9698 1 x 1000BASE-T Network management port using LAN8841 RGMII PHY Internal CPU running Linux/IStaX/SwitchDev/MESA Local management via USB2 serial port PTP input/outputs Time input/output (G.8275/RS422) USB type A Host port (for memory key - software updates) Option for external CPU via PCIe cable or SPI Option for MCHP IEEE 802.3bt/UPoE add-on modules (EV14Y36A using PD69208T4, PD69210, IEEE 802.3af/at/bt Type 4 standard compliant) The name used in the device trees for the Linux Kernel is the board order no, as this has been created at a very early stage of the project. To allow you to move between the different names that are in use, you can use the table found below: Board Order No Board Name EV23x71a EVB-LAN9696-24port","title":"LAN969x","component":"bsp","version":"2024.03","name":"lan969x","url":"/bsp/2024.03/supported-hw/lan969x.html","titles":[{"text":"1. LAN969x Family overview","hash":"_lan969x_family_overview","id":1},{"text":"2. Memory map","hash":"_memory_map","id":2},{"text":"3. EVB Overview:","hash":"refboards","id":3},{"text":"3.1. EVB-LAN9696-24port","hash":"_evb_lan9696_24port","id":4},{"text":"4. Board Name Overview","hash":"_board_name_overview","id":5}]},"168":{"id":168,"text":"This section describes the relationship between reference boards and BSP targets. Valid combinations of ARM64 based boards and BSP targets are: Board\\BSP arm64_bootloaders arm64_bootloaders_ls1046 arm64_bootloaders_rpi arm64_standalone arm64_xstax arm64_standalone_rpi bcm_2711-rpi-cm4 ✘ ✘ ✔ ✘ ✘ ✔ ls1046_pcb110 ✘ ✔ ✘ ✘ ✔ ✘ ls1046_pcb121 ✘ ✔ ✘ ✘ ✔ ✘ ls1046_pcb134 ✘ ✔ ✘ ✘ ✔ ✘ sparx5_pcb125 ✔ ✘ ✘ ✔ ✔ ✘ sparx5_pcb134_emmc ✔ ✘ ✘ ✔ ✔ ✘ sparx5_pcb134 ✔ ✘ ✘ ✔ ✔ ✘ sparx5_pcb135_emmc ✔ ✘ ✘ ✔ ✔ ✘ sparx5_pcb135 ✔ ✘ ✘ ✔ ✔ ✘ Valid combinations of ARM based boards and BSP targets are: Board\\BSP arm_bootloaders_bbb arm_bootloaders arm_standalone arm_xstax lan966x_pcb8291 ✘ ✔ ✔ ✔ lan966x_pcb8290 ✘ ✔ ✔ ✔ lan966x_pcb8281 ✘ ✔ ✔ ✔ lan966x_pcb8309 ✘ ✔ ✔ ✔ lan966x_pcb8385 ✘ ✔ ✔ ✔ am335-boneblack ✔ ✘ ✔ ✔ Valid combinations of MIPS based boards and BSP targets are: Board\\BSP mipsel_bootloaders mipsel_standalone mipsel_xstax mipsel_xstax_loader jaguar2_pcb110 ✔ ✘ ✔ ✔ jaguar2_pcb111 ✔ ✘ ✔ ✔ jaguar2_pcb118 ✔ ✘ ✔ ✔ luton_pcb090 ✔ ✘ ✔ ✔ luton_pcb091 ✔ ✘ ✔ ✔ ocelot_pcb120 ✔ ✔ ✔ ✔ ocelot_pcb123 ✔ ✔ ✔ ✔ serval_pcb105 ✔ ✘ ✔ ✔ serval_pcb106 ✔ ✘ ✔ ✔ serval2_pcb112 ✔ ✘ ✔ ✔ servalt_pcb116 ✔ ✘ ✔ ✔","title":"Other","component":"bsp","version":"2024.03","name":"other","url":"/bsp/2024.03/supported-hw/other.html","titles":[{"text":"1. Boards versus 64 bit ARM targets","hash":"_boards_versus_64_bit_arm_targets","id":1},{"text":"2. Boards versus 32 bit ARM targets","hash":"_boards_versus_32_bit_arm_targets","id":2},{"text":"3. Boards versus 32 bit MIPS targets","hash":"_boards_versus_32_bit_mips_targets","id":3}]},"169":{"id":169,"text":"The following table describes the Microchip supported PHYs in linux kernel: Name ID Kernel Config Interface Kernel Upstream Version U-boot support Atom12 VSC8522 MICROSEMI_PHY QSGMII Yes No Cobra VSC8211 VITESSE_PHY SGMII/GMII/MII/RGMII Yes No Cobra VSC8221 VITESSE_PHY SGMII Yes No Elise VSC8514 MICROSEMI_PHY QSGMII Yes No Enzo VSC8662 VITESSE_PHY SGMII Yes No Indy LAN8814 MICREL_PHY QSGMII/QUSGMII Yes Yes Pheiffer LAN8841 MICREL_PHY RGMII/GMII Yes No Lan966x Internal PHY LAN8804 MICREL_PHY GMII Yes Yes Mini VSC8531 MICROSEMI_PHY RGMII/RMII Yes Yes Mini VSC8530 MICROSEMI_PHY RGMII/RMII Yes Yes Mini VSC8541 MICROSEMI_PHY GMII/MII/RGMII/MII Yes Yes Mini VSC8540 MICROSEMI_PHY GMII/MII/RGMII/MII Yes Yes Nano VSC8502 MICROSEMI_PHY GMII/MII/RGMII Yes No Quattro VSC8244 VITESSE_PHY RGMII Yes No Tesla VSC8504 MICROSEMI_PHY QSGMII/SGMII Yes No Tesla VSC8552 MICROSEMI_PHY QSGMII/SGMII/RGMII Yes No Tesla VSC8572 MICROSEMI_PHY QSGMII/SGMII Yes No Tesla VSC8574 MICROSEMI_PHY QSGMII/SGMII Yes Yes Viper VSC8575 MICROSEMI_PHY QSGMII/SGMII Yes No Viper VSC8562 MICROSEMI_PHY QSGMII/SGMII Yes No Viper VSC8564 MICROSEMI_PHY QSGMII/SGMII Yes No Viper VSC8582 MICROSEMI_PHY QSGMII/SGMII Yes No Viper VSC8584 MICROSEMI_PHY QSGMII/SGMII Yes Yes","title":"PHY","component":"bsp","version":"2024.03","name":"phy","url":"/bsp/2024.03/supported-hw/phy.html","titles":[]},"170":{"id":170,"text":"In case of a blank eMMC or NOR device, the following instructions can be applied for the initial bringup of the LAN969x SoC. This is where you can find more details about enabling EVB image restoration: SoC Name Strapping Pins Monitor Mode LAN969x LAN969x Strapping Pins LAN969x UART Monitor This section will give an overview on how the TF-A monitor can be loaded to the SoC and used for e.g. writing a FIP or a GPT image on a flash device. The following description is based on a host PC running Ubuntu Linux: Set the strapping mode on the eval board to the \"Monitor Mode\" to enabling the UART monitor mode. See previous section for the details. Connect the eval board via USB cable to the host PC. The host machine should now enumerate a new TTY device like e.g. '/dev/ttyACM0'. From now on, no other application should be attached to this port (e.g. Putty or Termhub). Use a Chrome or MS Edge browser and open the fwu.html file in the address bar. This file can be found inside the artifacts archive. Please follow the instructions and the red arrows, illustrated on the previous screenshot. Arrow #1, Press the [Connect Device] button Arrow #2, Choose the appropriate console interface in the dropdown menu Arrow #3, Press [Connect] button After successful connection, the 'BL1 bootstrap' page should be loaded. This downloads and runs the BL2U image embedded in the fwu.html page. This image will allow other firmware images to be updated and various other maintenance operations. Arrow #1, Press the [Download BL2U] button After download and execution, the 'BL2U bootstrap' screen should be appear. Notice the \"BL2U operational\" information. The main purpose of this description is to a write a FIP file to a blank NOR device. Be aware, that only a FIP file format can be written to the NOR flash. Using a GPT file will not work here. When writing a FIP to the NOR, following methods can be used: Attach a SPI flasher to the board and write the FIP to the memory address offset of 0x0 (zero). Use the HTML5 based firmware update browser tool (fwu.html). This section will describe, how to proceed with the second approach here. Therefore no further programmer hardware is required. The following description assumes that the TF-A monitor mode has been started. Please follow the instructions and the red arrows, shown on the previous screenshot. Arrow #1, Choose the proper .fip file [Choose File]. Arrow #2, Upload the file by pressing the [Upload file] button. Arrow #3, When the upload has finished, press the 'Write Image' tab Arrow #1, Change dropdown value to [NOR Flash] device. Arrow #2, Press the [Write Flash Image] button. Arrow #3, Press the [OK] button to confirm the operation. Wait until the write operation is completed. The process can take a few minutes. The progress can followed in the [Transaction Log:] field. Change the strapping mode back to normal the NOR boot mode. See Reference Information Reset the board The main purpose of this description is to a write a GPT image to a blank eMMC device. Writing this image will trigger following actions to the device: Creates a GPT based partition table and all required partitions. Stores a FIP file inside the 'fip' named partition. According the chosen GPT image, the BL33 can contain an 'UBoot' or a 'Linux' image as payload. A simple file copy of the GPT image to the eMMC device will not work! Only a raw byte copy will work correctly. The GPT image can be written to the eMMC device using following methods: Using UBoot with network and upload/write the GPT image with mmc commands Using external programmer and write the GPT image to the eMMC address offset of 0x0 (zero). Use the HTML5 based firmware update browser tool (fwu.html). This section will describe, how to proceed with the third approach here. Therefore no further programmer hardware is required. First boot into the TF-A monitor using the correct strapping pin setting. See Reference Information Then follow the instructions and the red arrows, illustrated on the previous screenshot. Arrow #1, Choose now the proper .gpt file [Choose File] Arrow #2, Upload the file by pressing the [Upload file] button Arrow #3, When the upload has finished, press the 'Write Image' tab Arrow #1, Change dropdown value to [eMMC] device. Arrow #2, Press the [Write Flash Image] button. Arrow #3, Press the [OK] button to confirm the operation. Wait till the write procedure has completed. This process can take a few minutes. The progress can followed in the [Transaction Log:] field. Change the strapping mode back normal eMMC boot mode. See Reference Information Reset the board A FIP file can only be programmed, if the eMMC device is already partitioned. If not please follow the description in the previous section. This description is also valid for updating an existing FIP on the target. The FIP file can be written by using one of this following methods. Using UBoot console with network and upload/write the FIP using mmc commands Use the HTML5 based firmware update browser tool (fwu.html). We will focus here on the second approach. First Boot into the TF-A monitor using the correct strapping pin setting. See Reference Information Then follow the description for the BL2U bootstrap monitor page. Please follow the instructions and the red arrows, shown in the previous screenshot. Arrow #1, Choose the proper .fip file [Choose File]. Arrow #2, Upload the file by pressing the [Upload file] button. Arrow #3, When the upload has finished, press the 'Write Image' tab Arrow #1, Change dropdown value to [eMMC] device. Arrow #2, Press the [Write FIP Image] button to start the operation. Wait until the write operation has completed. The process can take a few minutes. The progress can followed in the [Transaction Log:] field. Change the strapping mode back to normal the eMMC boot mode. See Reference Information Reset the board","title":"Restoring SecureBoot Images","component":"bsp","version":"2024.03","name":"restore-secureboot","url":"/bsp/2024.03/supported-hw/restore-secureboot.html","titles":[{"text":"1. Reference information","hash":"ref_info","id":1},{"text":"2. How to restore an image","hash":"_how_to_restore_an_image","id":2},{"text":"2.1. Enable TF-A-Monitor on the default console","hash":"tfa_monitor","id":3},{"text":"2.2. Download BL2U","hash":"download_bl2u","id":4},{"text":"2.3. Program NOR with FIP","hash":"program_nor","id":5},{"text":"2.4. Program eMMC with GPT image","hash":"emmc_gpt","id":6},{"text":"2.5. Program eMMC with FIP","hash":"_program_emmc_with_fip","id":7}]},"171":{"id":171,"text":"The Sparx5 family consists of the following SKUs: VSC7546 - SparX-5-64 supports up to 64 Gbps of switch core bandwidth VSC7549 - SparX-5-90 supports up to 90 Gbps of switch core bandwidth VSC7552 - SparX-5-128 supports up to 128 Gbps of switch core bandwidth VSC7556 - SparX-5-160 supports up to 160 Gbps of switch core bandwidth VSC7558 - SparX-5-200 supports up to 200 Gbps of switch core bandwidth This section describes the Sparx5 boot sequence including the relevant HW and SW facilities. The behavior of the Sparx5 CPU system after reset is determined by four strapping pins that are overlaid on GPIO pins. The value of these GPIOs is sampled shortly after releasing reset to the device. This allows the Sparx5 system to decide the boot mode: Main CPU booting from SPI Interface (CPU is SPI controller) Sub CPU booting from SPI Interface (Sub CPU is SPI controller) SPI device mode, Main CPU and Sub CPU are stopped SPI device mode, MIIM device mode, Main CPU and Sub CPU are stopped In the first listed mode Sparx5 can boot from an external boot media such as SPI NOR flash and load a boot loader image such as UBoot. UBoot can then load drivers for other external media such as SPI NAND or eMMC and continue the boot process after having loaded final images from these media. It is also possible to load all images from SPI NOR flash, but this is not as fast as using SPI NAND or eMMC. During boot Sparx5s PCIe controller will also be enabled in device mode. This document will focus on the Sparx5 SoCs, but to fully explain the boot process and boot facilities, it is also necessary to consider the flash memories available on the board. The section will briefly describe the boot media supported by the Sparx5, and then describe which of these media is available on the Sparx5 evaluation boards offered by Microchip. There are currently two Sparx5 evaluation boards available: PCB134 - Providing 20 SPF+ ports with 10Gbps speed. PCB135 - Providing 64 1Gbps Ethernet PHY ports and 4 25Gbps SFP+ ports The two boards can be mounted with either SPI NAND or eMMC enabled (but not both). To utilize the Main CPU of the Sparx5, the correct boot mode must be selected and a SPI NOR device with a boot image must be available at the SPI NOR memory address found in the memory map below: Name Start Size ====================== ========== ================= Mirror SPI NOR Flash 0x000000000 0x100000000 (4GB) Mirror SPI NAND Flash 0x100000000 0x100000000 (4GB) SPI NOR Flash 0x400000000 0x100000000 (4GB) SPI NAND Flash 0x500000000 0x100000000 (4GB) Vcore Chip Regs 0x610000000 0x10000000 (256MB) CSR Chip Regs 0x620000000 0x10000000 (256MB) PCIe outbound 0x630000000 0x10000000 (256MB) Sub CPU system 0x640000000 0x10000000 (256MB) DDR Memory 0x800000000 0x200000000 (8GB) Figure 1: Sparx5 Boot Mode memory map. The bootloader will switch the Sparx5 from Boot mode to Normal mode which will remap the DDR memory down to address 0. During the boot process, the boot loader will read configuration from its environment partition in the SPI NOR device. Based on the configuration it will decide where to find and load the next stage image. The following table shows the offset and name of where the different components are expected to be found when using the SPI NOR device. MEDIA Partition No Name Size Offset ======= ============ =========== ================== ========== SPI NOR 0 UBoot 0x00100000 (1MB) 0x00000000 SPI NOR 1 Env 0x00040000 (256KB) 0x00100000 SPI NOR 2 Env.bk 0x00040000 (256KB) 0x00140000 SPI NOR 3 linux 0x01400000 (20MB) 0x00180000 SPI NOR 4 linux.bk 0x01400000 (20MB) 0x01580000 SPI NOR 5 rootfs_data 0x02000000 (32MB) 0x01580000 Figure 2: Partitions in the SPI NOR only boot mode. The above partition table is used in a system that has only a SPI NOR media, so all images will be stored in this partition table. For a system using a SPI NAND device only the first 3 partitions are needed. The content of the linux and linux.bk partition is the raw binary FIT image that is used by UBoot when booting from NOR only. This mode is explained later in this document. A SPI NAND device uses a block design which does not allow it to be used as an execute-in-place device. Instead the bootloader will read the content of the device in blocks and execute the image from DDR memory once the whole image has been loaded. Here is the partition table for the Sparx5 SPI NAND device. MEDIA Partition No Name Size Offset ======= ============ =========== ================== ========== SPI NAND 0 Boot0 0x04000000 (64MB) 0x00000000 SPI NAND 1 Boot1 0x04000000 (64MB) 0x04000000 SPI NAND 2 rootfs_data 0x08000000 (128MB) 0x08000000 Figure 3: SPI NAND Partitions The Boot0 and Boot1 partitions contain a UBI filesystem with a FIT image file in the root of the filesystem. The UBI filesystem also contains the Linux root filesystem that the kernel mounts during boot. The BSP contains a root filesystem that can be used for this purpose. The rootfs_data partition can be used for storage when the Linux Kernel have booted. The partitions of both the SPI NOR and the SPI NAND devices can be shown with the mtd list command in the UBoot shell. => mtd list List of MTD devices: * nor0 - type: NOR flash - block size: 0x1000 bytes - min I/O: 0x1 bytes - 0x000000000000-0x000008000000 : \"nor0\" - 0x000000000000-0x000000100000 : \"UBoot\" - 0x000000100000-0x000000140000 : \"Env\" - 0x000000140000-0x000000180000 : \"Env.bk\" * spi-nand0 - device: spi-nand@e - parent: spi-master@600104000 - driver: spi_nand - type: NAND flash - block size: 0x20000 bytes - min I/O: 0x800 bytes - OOB size: 128 bytes - OOB available: 62 bytes - 0x000000000000-0x000010000000 : \"spi-nand0\" - 0x000000000000-0x000004000000 : \"Boot0\" - 0x000004000000-0x000008000000 : \"Boot1\" - 0x000008000000-0x000010000000 : \"rootfs_data\" => Figure 4: SPI Device Partitions An eMMC device is essentially a faster version of a SPI NAND device. It may use more that one data line and may also provide DMA functionality to increase the transfer rate compared to a SPI NAND type of device. The partitions of the eMMC device can be inspected with the mmc tool: => mmc part Partition Map for MMC device 0 -- Partition Type: EFI Part Start LBA End LBA Name Attributes Type GUID Partition GUID 1 0x00000022 0x00200021 \"Boot0\" attrs: 0x0000000000000000 type: 0fc63daf-8483-4772-8e79-3d69d8477de4 type: linux guid: 0e036503-0cc3-46c3-9790-1e65b9589954 2 0x00200022 0x00400021 \"Boot1\" attrs: 0x0000000000000000 type: 0fc63daf-8483-4772-8e79-3d69d8477de4 type: linux guid: 758a6c00-643e-4eb5-9561-f226556ade32 3 0x00400022 0x00700021 \"Data\" attrs: 0x0000000000000000 type: 0fc63daf-8483-4772-8e79-3d69d8477de4 type: linux guid: 1be9268f-39a3-4112-929a-04fc915b9b87 Figure 5: eMMC Device Partitions There are 3 partition in a GPT (GUID Partition Table) and all 3 are linux type which means that the type is recognizable by the Linux Kernel’s filesystem drivers and in this case this means that the EXT4 filesystem is used in these partitions. The Boot0 (and Boot1) partitions will need to contain a EXT4 filesystem image containing a root filesystem and a UBoot FIT image. The UBoot FIT image must called Image.itb and must be placed in the root folder of the filesystem. The FIT image must contain a Linux kernel and device trees. The Data partition can be used for storage when the Linux Kernel have booted. The next sections describes the different Sparx5 Reference Boards. All examples assume that there is a working TFTP and DHCP server on the same subnet as the evaluation board. The SPI NOR MX66L1G45G flash can be programmed with a standard SPI flash programmer. Find the appropriate u-boot-fireant_pcb*.bin UBoot image file in the arm64-armv8_a-linux-gnu/bootloaders/release BSP folder. Reset the board and eventually press any key to stop autoboot in order to get a U-Boot prompt. First make sure that the following environment variables are defined as shown: => env print baudrate=115200 bootargs_extra=loglevel=4 bootcmd=run nand_boot bootdelay=3 console=ttyS0,115200n8 fdtcontroladdr=77ffd0310 loadaddr=740000000 mtdids=nor0=spi0.0,spi-nand0=spi0.14 mtdparts=mtdparts=spi0.0:1m(UBoot),256k(Env),256k(Env.bk);spi0.14:64m(Boot0),64m(Boot1),-(rootfs_data) nand_bak=1 nand_boot=run nand_tryboot;env set nand_cur ${nand_bak};run nand_tryboot nand_cur=0 nand_dlup=dhcp ${nand_image};run nand_update nand_image=new.ubifs nand_mtdroot=root=ubi0:rootfs ro rootfstype=ubifs nand_swap=env set nand_cur ${nand_bak}; env save nand_tryboot=run nandload;setenv mtdroot ubi.mtd=Boot${nand_cur},2048 ${nand_mtdroot};run ramboot nand_update=sf probe;mtd erase Boot${nand_cur};ubi part Boot${nand_cur};ubi create rootfs -;ubi write ${fileaddr} rootfs ${filesize} nandload=sf probe;ubi part Boot${nand_cur};ubifsmount ubi0:rootfs;ubifsload - /Image.itb nor_boot=sf probe; env set active linux; run nor_tryboot; env set active linux.bk; run nor_tryboot nor_dlup=dhcp ${nor_image}; run nor_update nor_image=new.itb nor_only=env set mtdparts mtdparts=${nor_parts};env set bootcmd run nor_boot;env save nor_parts=spi0.0:1m(UBoot),256k(Env),256k(Env.bk),20m(linux),20m(linux.bk),32m(rootfs_data) nor_tryboot=mtd read ${active} ${loadaddr}; run ramboot nor_update=sf probe; sf update ${fileaddr} linux ${filesize} pcb=pcb134 ramboot=run setup; bootm #${pcb} rootargs=root=/dev/ram0 rw rootfstype=squashfs setup=setenv bootargs console=${console} ${mtdparts} ${rootargs} ${mtdroot} fis_act=${active} ${bootargs_extra} stderr=serial@600100000 stdin=serial@600100000 stdout=serial@600100000 ubupdate=sf probe; sf update ${fileaddr} 0 ${filesize} ver=U-Boot 2019.10 (Mar 09 2022 - 12:41:04 +0100)fireant Environment size: 1705/8187 bytes Figure 6: SPI NAND UBoot default environment Some of these environment variables are command macros that can be used to simplify the boot process. If there is a difference you should reset the environment, save it and restart the board to use the default environment. This can be done with these 3 commands: => env default -a -f ... => saveenv ... => reset ... Hit any key to stop autoboot: 0 => During development, it is often advantageous to load and execute the image via DHCP instead of loading it from flash. The ramboot setting above supports that, if you have a FIT image on the TFTP server. Here are the commands to run to load a fit-sparx5.itb file from the root of the TFTP server: => dhcp fit-sparx5.itb NPI Port: Up ... => run ramboot ## Loading kernel from FIT Image at 740000000 ... Using 'pcb134' configuration ... When this works satisfactorily you can commit this to the SPI NAND memory and update UBoot to use this media for booting. As UBoot expects a UBIFS image in the SPI NAND partition Boot0 (or Boot1) you need to produce a UBIFS image file and place it in your TFTP server. If you have the Linux kernel, the device tree binary files and the rootfile system file then you can create a UBIFS image file for a PCB134 evaluation board by running the imggen.rb script like this: $ external/support/scripts/imggen.rb -s sparx5 -o /tftpboot/ -k mscc-linux-kernel.bin.gz -d sparx5_pcb134_switchdev.dtb,pcb134 -r rootfs.squashfs -t ubifs-itb-bare -n new Note that the device tree configuration is renamed by adding a ,pcb134 element to the device tree binary file references. Also note that the resulting file is generated in the /tftproot folder (used by the TFTP server in this case) and has the name new so that the folder will contain the file new.ubifs which is what the UBoot environment macros expect by default. Now you can load the image and write it to SPI NAND with this command: => run nand_dlup ... Filename 'new.ubifs'. ... Bytes transferred = 30601216 (1d2f000 hex) ... ubi0: attached mtd5 (name \"Boot0\", size 64 MiB) ... Creating dynamic volume rootfs of size 59170816 30601216 bytes written to volume rootfs => With the image in Boot0 time has now come to boot this image. This involve loading the Image.itb file from the UBIFS image and booting this as a FIT image containing a Linux kernel and a device tree. Note that the UBoot environment expects a device tree configuration with the name found in the pcb environment variable. This was the reason for adding the ,pcb134 to the imggen.rb scripts device tree reference. As mentioned above the UBoot FIT image does not contain a root filesystem, so the root filesystem is mounted as the content of the Boot0 partition. Now boot the image with this command: => run nand_boot SF: Detected mx66l1g45g with page size 256 Bytes, erase size 4 KiB, total 128 MiB ... ubi0: attached mtd5 (name \"Boot0\", size 64 MiB) ... Loading file '/Image.itb' to addr 0x740000000... ... Starting kernel ... ... vcoreiii login: The kernel boots and show the Linux command shell. Now you are ready to use your system. If this works as expected you can change the UBoot bootcmd setting to use the run nand_boot command permanently. The SPI NOR MX66L1G45G flash can be programmed with a standard SPI flash programmer. Find the appropriate u-boot-fireant_pcb*.bin UBoot image file in the arm64-armv8_a-linux-gnu/bootloaders/release BSP folder. Reset the board and press any key to stop autoboot in order to get a U-Boot prompt. First make sure that the following environment variables are defined as shown: => env print baudrate=115200 bootargs_extra=loglevel=4 bootcmd=run mmc_boot bootdelay=3 console=ttyS0,115200n8 fdtcontroladdr=77ffce2d0 loadaddr=740000000 mmc_bak=2 mmc_boot=run mmc_tryboot;env set mmc_cur ${mmc_bak};run mmc_tryboot mmc_cur=1 mmc_dev=mmc 0 mmc_dlup=dhcp ${mmc_image};unzip ${fileaddr} ${mmcaddr};run mmc_update mmc_format=gpt guid ${mmc_dev} mmc_guid;gpt write ${mmc_dev} ${mmc_part}; env save mmc_image=new.ext4.gz mmc_part=uuid_disk=${mmc_guid};name=Boot0,size=1024MiB,type=linux;name=Boot1,size=1024MiB,type=linux;name=Data,size=1536MiB,type=linux mmc_swap=env set mmc_cur ${mmc_bak}; env save mmc_tryboot=run mmcload;setenv mtdroot root_next=/dev/mmcblk0p${mmc_cur}; run ramboot mmc_update=run mmcgetoffset;mmc write ${mmcaddr} ${mmc_start} ${filesize_512} mmcaddr=760000000 mmcgetoffset=part start ${mmc_dev} ${mmc_cur} mmc_start mmcload=ext4load ${mmc_dev}:${mmc_cur} ${loadaddr} Image.itb mtdids=nor0=spi0.0 mtdparts=mtdparts=spi0.0:1m(UBoot),256k(Env),256k(Env.bk),20m(linux),20m(linux.bk) nor_boot=sf probe; env set active linux; run nor_tryboot; env set active linux.bk; run nor_tryboot nor_dlup=dhcp ${nor_image}; run nor_update nor_image=new.itb nor_only=env set mtdparts mtdparts=${nor_parts};env set bootcmd run nor_boot;env save nor_parts=spi0.0:1m(UBoot),256k(Env),256k(Env.bk),20m(linux),20m(linux.bk),32m(rootfs_data) nor_tryboot=mtd read ${active} ${loadaddr}; run ramboot nor_update=sf probe; sf update ${fileaddr} linux ${filesize} pcb=pcb134_emmc ramboot=run setup; bootm #${pcb} rootargs=root=/dev/ram0 rw rootfstype=squashfs setup=setenv bootargs console=${console} ${mtdparts} ${rootargs} ${mtdroot} fis_act=${active} ${bootargs_extra} stderr=serial@600100000 stdin=serial@600100000 stdout=serial@600100000 ubupdate=sf probe; sf update ${fileaddr} 0 ${filesize} ver=U-Boot 2019.10 (Mar 09 2022 - 12:41:16 +0100)fireant Environment size: 1849/8187 bytes Figure 7: eMMC UBoot default environment As in the SPI NAND case some of these environment variables are command macros that can be used to simplify the eMMC boot process. If you do not see the above environment you have either used the UBoot image when flashing, or you need to reset the environment. Resetting the UBoot environment is done with the following commands: => env default -a -f ... => saveenv ... => reset ... Hit any key to stop autoboot: 0 => Like described in the SPI NAND boot section of this document it is recommended to do a network boot of your images before writing the image to the eMMC device. Start by formatting the eMMC device with a GPT partition. You only need to do this once before writing images to the eMMC. Use the mmc_format command: m => run mmc_format Writing GPT: success! This creates a mmc_guid setting in the UBoot environment for the eMMC device, that is used in the GUID Partition Table. As UBoot expects an EXT4 image in the eMCC partition Boot0 (or Boot1) you need to produce a EXT4 image file and place it in your TFTP server. If you have the Linux kernel, the device tree binary files and the rootfile system file then you can create a EXT4 image file for a PCB134 evaluation board by running the imggen.rb script like this: $ external/support/scripts/imggen.rb -s sparx5 -o /tftpboot/ -k mscc-linux-kernel.bin.gz -d sparx5_pcb134_emmc_switchdev.dtb,pcb134_emmc -r rootfs.squashfs -t ext4-itb-bare -n new -z Note that the device tree configuration is renamed by adding a ,pcb134_emmc element to the device tree binary file references. Also note that the resulting file is generated in the /tftproot folder (used by the TFTP server in this case) and has the name new so that the folder will contain the file new.ext4.gz which is what the UBoot environment macros expect by default. Now you can load the image and write it to eMMC with this command: => run mmc_dlup ... Filename 'new.ext4.gz'. Load address: 0x740000000 ... MMC write: dev # 0, block # 34, count 213808 ... 213808 blocks written: OK => Before you can boot the eMMC disk image, you need to make two small changes in the UBoot environment. First delete the rootargs setting => setenv rootargs Next change the mmc_tryboot environment variable to use the root argument instead of the next_root argument and to wait 1s for the eMMC filesystem to be mounted. This is done fairly easy by using the editenv command like this: => editenv mmc_tryboot When the setting looks like this: run mmcload;setenv mtdroot root=/dev/mmcblk0p${mmc_cur} rootdelay=1; run ramboot you can save the changes that you have made permanently with the command: => saveenv Saving Environment to SPI Flash... Erasing SPI flash...Writing to SPI flash...done Valid environment: 2 OK => You can now boot the system with the run mmc_boot command. If this works as expected you can change the bootcmd setting to use the run mmc_boot command permanently. No matter if you have a SPI NAND or a eMMC equipped evaluation board you can also select to store the boot image in SPI NOR flash only and use this image as the boot media. This will not be as fast as booting SPI NAND or eMMC, but can be used as a fallback solution in case the first two options are not available for some other reason. As the first step you should reset the environment, save it and restart the board to use the initialized environment. This can be done with these 3 commands: => env default -a -f ... => saveenv ... => reset ... Hit any key to stop autoboot: 0 => Now switch the to the SPI NOR only partition configuration with this command: => run nor_only ... => The SPI NOR flash is partitioned like this: => mtd list List of MTD devices: * nor0 - type: NOR flash - block size: 0x1000 bytes - min I/O: 0x1 bytes - 0x000000000000-0x000008000000 : \"nor0\" - 0x000000000000-0x000000100000 : \"UBoot\" - 0x000000100000-0x000000140000 : \"Env\" - 0x000000140000-0x000000180000 : \"Env.bk\" - 0x000000180000-0x000001580000 : \"linux\" - 0x000001580000-0x000002980000 : \"linux.bk\" - 0x000002980000-0x000004980000 : \"rootfs_data\" => boot As you can see there are two 20MB Linux partitions (a main and a backup) that can be used to store a UBoot FIT image. The UBoot environment settings that begin with nor_ allows you to store and load images in these partitions. When using the SPI NOR boot method the FIT image that you provide must have both the Linux Kernel, device trees and the root file system. To generate that you can use the imggen.rb tool like this: $ external/support/scripts/imggen.rb -s sparx5 -o /tftpboot/ -k mscc-linux-kernel.bin.gz -d sparx5_pcb134_emmc_switchdev.dtb,pcb134_emmc -r ws/mscc-brsdk-source-2021.02.7-999/output/build_arm64_standalone/images/rootfs.squashfs -t itb-rootfs -n new Note that the device tree configuration is renamed by adding a ,pcb134_emmc element to the device tree binary file references. Here you need to choose the one that fits with your evaluation board and more specifically the pcb setting in the UBoot environment. Also note that the resulting file is generated in the /tftproot folder (used by the TFTP server in this case) and has the name new so that the folder will contain the file new.itb which is what the UBoot environment nor_ macros expect by default. Now you can load the image and write it to SPI NOR with this command: => run nor_dlup ... Filename 'new.itb'. Load address: 0x740000000 ... SF: Detected mx66l1g45g with page size 256 Bytes, erase size 4 KiB, total 128 MiB device 0 offset 0x180000, size 0x11fc663 18859619 bytes written, 0 bytes skipped in 222.855s, speed 86910 B/s => You can now boot the system with the run nor_boot command. If this works as expected you can change the bootcmd setting to use the run nor_boot command permanently.","title":"Sparx5","component":"bsp","version":"2024.03","name":"sparx5","url":"/bsp/2024.03/supported-hw/sparx5.html","titles":[{"text":"1. Booting Sparx5","hash":"_booting_sparx5","id":1},{"text":"1.1. Overview","hash":"_overview","id":2},{"text":"1.2. HW Facilities","hash":"_hw_facilities","id":3},{"text":"1.3. Sparx5 boot media","hash":"bootmedia","id":4},{"text":"2. SPI NOR","hash":"_spi_nor","id":5},{"text":"3. SPI NAND","hash":"_spi_nand","id":6},{"text":"4. eMMC","hash":"_emmc","id":7},{"text":"5. Sparx5 Reference Boards","hash":"refboards","id":8},{"text":"6. Bootstrapping a SPI NAND Evaluation Board","hash":"_bootstrapping_a_spi_nand_evaluation_board","id":9},{"text":"6.1. UBoot environment for SPI NAND boot","hash":"_uboot_environment_for_spi_nand_boot","id":10},{"text":"6.2. Boot via Network","hash":"_boot_via_network","id":11},{"text":"6.3. Setting up SPI NAND boot","hash":"_setting_up_spi_nand_boot","id":12},{"text":"7. Bootstrapping a eMMC Evaluation Board","hash":"_bootstrapping_a_emmc_evaluation_board","id":13},{"text":"7.1. UBoot environment for eMMC boot","hash":"_uboot_environment_for_emmc_boot","id":14},{"text":"7.2. Boot via Network","hash":"_boot_via_network_2","id":15},{"text":"7.3. Setting up eMMC boot","hash":"_setting_up_emmc_boot","id":16},{"text":"8. Setting up SPI NOR only boot","hash":"_setting_up_spi_nor_only_boot","id":17},{"text":"8.1. UBoot environment for SPI NOR only boot","hash":"_uboot_environment_for_spi_nor_only_boot","id":18},{"text":"8.2. Setting up SPI NOR only boot","hash":"_setting_up_spi_nor_only_boot_2","id":19}]},"172":{"id":172,"text":"Before a frame is transmitted on a port it is subject to one ES0 lookup. ES0 is intended for VLAN tag manipulations and is controlled by the tc flower filter command. ES0 supports only one keyset on each switch: Switch Keyset Sparx5 ISDX LAN966x VID A keyset is an internal value used by the hardware. A flower key is what the user specifies in the tc flower filter command. The ISDX keyset is used for all lookups and matches on the following flower keys: Flower key Value Example Description vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 The classified VID to match. vlan_ethtype vlan_ethtype all Only 'all' is allowed here as ES0 cannot match on a specific protocol. The VID keyset is used for all lookups and matches on the following flower keys: Flower key Value Example Description vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 The classified VID to match. vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 The classified PCP to match. vlan_ethtype vlan_ethtype all Only 'all' is allowed here as ES0 cannot match on a specific protocol. This filter matches on the classified VID and PCP and pops the VLAN tag: # tc qdisc add dev eth0 clsact # tc filter add dev eth0 egress chain 30000 prio 10 handle 42 protocol 802.1q flower skip_sw \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype all \\ action vlan pop \\ action goto chain 30001 Sparx5: Does not support vlan_prio, the vlan actions (will be added in a future release). This filter matches on the classified VID and PCP and modifies the VLAN tag: # tc qdisc add dev eth0 clsact # tc filter add dev eth0 egress chain 30000 prio 10 handle 42 protocol 802.1q flower skip_sw \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype all \\ action vlan modify id 200 priority 2 \\ action goto chain 30001 This filter matches on the classified VID and PCP and adds an outermost VLAN service tag: # tc qdisc add dev eth0 clsact # tc filter add dev eth0 egress chain 30000 prio 10 handle 42 protocol 802.1q flower skip_sw \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype all \\ action vlan push protocol 802.1ad id 200 priority 2 \\ action goto chain 30001 The ES0 lookup supports the actions shown in this table: Flower action Example Description Sparx5 LAN966x pass action pass This is a no-op action. ✔ ✔ vlan pop action vlan pop Pops the outermost VLAN tag. · ✔ vlan modify [protocol ] id priority action vlan modify id 100 priority 3 Modifies the frame to a specific VID, PCP, and optionally VLAN protocol of 802.1Q or 802.1ad. Default is 802.1Q. · ✔ vlan push [protocol ] id priority action vlan push protocol 802.1ad id 100 priority 3 Add an outermost VLAN tag with specific VID, PCP, and optionally VLAN protocol of 802.1Q or 802.1ad. Default is 802.1Q. · ✔ goto chain action goto chain 30001 Which chain to go to after this match. A required no-op action where the chain number must be higher than the ES0 chain number (30000). ✔ ✔ Use the tc filter show command to see the filter configuration for a specific port. Add -s to also see the statistics: # tc -s filter show dev eth3 egress filter protocol 802.1Q pref 100 flower chain 30000 filter protocol 802.1Q pref 100 flower chain 30000 handle 0xc8 vlan_id 3857 vlan_prio 1 vlan_ethtype all eth_type 0003 skip_sw in_hw in_hw_count 1 action order 1: vlan push id 3874 protocol 802.1ad priority 2 pipe index 1 ref 1 bind 1 installed 0 sec used 0 sec Action statistics: Sent 0 bytes 1 pkt (dropped 0, overlimits 0 requeues 0) Sent software 0 bytes 0 pkt Sent hardware 0 bytes 1 pkt backlog 0b 0p requeues 0 used_hw_stats immediate action order 2: gact action goto chain 30001 random type none pass val 0 index 1 ref 1 bind 1 installed 0 sec used 0 sec Action statistics: Sent 0 bytes 1 pkt (dropped 0, overlimits 0 requeues 0) Sent software 0 bytes 0 pkt Sent hardware 0 bytes 1 pkt backlog 0b 0p requeues 0 used_hw_stats immediate First comes information about the filter, then the match and finally the actions including statistics. The number of frames that has his the filter is shown as Sent hardware 0 bytes 1 pkt. Note that the hardware does not support counting the number of bytes and that the counter in ES0 is only 1 bit wide. This means that the pkt counter shown here will only increment by one each time the tc -s filter show command is executed. In the current kernel the same statistics are shown for all actions in a filter. This might change in the future.","title":"Rewriter VLAN Tagging (ES0)","component":"bsp","version":"2024.03","name":"tc-es0","url":"/bsp/2024.03/tc/tc-es0.html","titles":[{"text":"1. ISDX","hash":"_isdx","id":1},{"text":"2. VID","hash":"_vid","id":2},{"text":"3. Filter examples","hash":"_filter_examples","id":3},{"text":"3.1. ES0 Actions","hash":"es0-actions","id":4},{"text":"4. ES0 Status","hash":"_es0_status","id":5}]},"173":{"id":173,"text":"The ES2 VCAP is part of EACL and enables egress access control lists using VCAP functionality. The LAN966x does not have an ES2 VCAP. When a frame is egressing on a port it is classified into one of the following traffic types by the ES2 VCAP: Traffic Type Sparx5 LAN966x IPv4 ✔ · IPv6 ✔ · Other ✔ · The valid combinations of Sparx5 ES2 lookup keyset versus Traffic Type are: Sparx5 ES2 keyset - Traffic Type Size IPv4 IPv6 Other ARP 6 · · ✔ IP4_OTHER 6 ✔ ✔ · IP4_TCP_UDP 6 ✔ ✔ · MAC_ETYPE 6 ✔ ✔ ✔ IP_7TUPLE 12 ✔ ✔ · In this release the Sparx5s port keyset configuration varies for the 2 ES2 lookups: Sparx5 IS2 Lookup - Traffic Type IPv4 IPv6 Other Lookup 0 MAC_ETYPE MAC_ETYPE MAC_ETYPE Lookup 1 IP4_TCP_UDP IP4_OTHER IP_7TUPLE ARP This will most likely be changed so that both lookups use the same configuration in a future release, as it is possible to change the configuration by using a template. This keyset is generated when Ethertype is 0x0806 (ARP) or 0x8035 (RARP). Flower key Value Example vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 vlan_ethtype vlan_ethtype arp or vlan_ethtype rarp src_mac or / src_mac 00:33:33:33:33:33 or src_mac 00:33:33:00:00:00/ff:ff:ff:00:00:00 arp_tip or / arp_tip 10.10.10.10 or arp_tip 10.10.0.0/255.255.0.0 arp_sip or / arp_sip 10.10.10.10 or arp_sip 10.10.0.0/255.255.0.0 arp_op request or reply arp_op request or arp_op reply The filter below matches on classified VLAN tag, and all supported IPv4 fields. The filter in inserted into chain 20100000 (lookup 1), as this is were the ARP keyset is configured currently. # tc qdisc add dev eth12 clsact # tc filter add dev eth12 egress chain 20100000 prio 10 handle 42 protocol 802.1q flower skip_sw \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype arp \\ src_mac 00:33:33:33:33:33 \\ arp_tip 10.10.10.10 \\ arp_sip 20.20.20.20/255.255.0.0 \\ arp_op reply \\ action pass This keyset is generated when Ethertype is 0x0800 and IP protocol is neither TCP (6) nor UDP (17). Flower key Value Example vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 vlan_ethtype vlan_ethtype ipv4 ip_tos or / ip_tos 0x12 or ip_tos 0x4/0x3f ip_flags [/] ip_flags { [no]frag | [no]firstfrag } src_ip or / src_ip 10.10.10.10 or src_ip 10.10.0.0/255.255.0.0 dst_ip or / dst_ip 20.20.20.20, dst_ip 20.20.0.0/255.255.0.0 ip_proto ip_proto 1 or ip_proto icmp. This filter matches on classified VLAN tag, and all supported IPv4 fields. The filter in inserted into chain 20100000 (lookup 1), as this is were the IP4_OTHER keyset is configured currently. # tc qdisc add dev eth49 clsact # tc filter add dev eth49 egress chain 20100000 prio 10 handle 42 protocol 802.1q flower skip_sw \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype ipv4 \\ ip_tos 0xf/0x3f \\ ip_flags frag/nofirstfrag \\ src_ip 10.10.10.10 \\ dst_ip 20.20.20.20/255.255.0.0 \\ ip_proto icmp \\ action pass This keyset is generated when Ethertype is 0x0800 and IP protocol is either TCP (6) or UDP (17). Flower key Value Example vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 vlan_ethtype vlan_ethtype ipv4 ip_tos or / ip_tos 0x12 or ip_tos 0x4/0x3f ip_flags [/] ip_flags { [no]frag | [no]firstfrag } src_ip or / src_ip 10.10.10.10 or src_ip 10.10.0.0/255.255.0.0 dst_ip or / dst_ip 20.20.20.20, dst_ip 20.20.0.0/255.255.0.0 ip_proto ip_proto 6, ip_proto tcp, ip_proto 17 or ip_proto udp. tcp_flags or / tcp_flags 0x1a or tcp_flags 0x10/0x3f src_port or / src_port 1000 or src_port 0x200/0xff0 dst_port or / dst_port 2000 or dst_port 0x100/0xff0 NOTE: Sparx5: Use Lookup 1 as this is configured with the IP4_TCP_UDP keyset. This filter matches on classified VLAN tag, and all supported IPv4/TCP fields. The filter in inserted into chain 20100000 (lookup 1), as this is were the IP4_TCP_UDP keyset is configured currently. # tc qdisc add dev eth12 clsact # tc filter add dev eth12 egress chain 20100000 prio 10 handle 42 protocol 802.1q flower skip_sw \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype ipv4 \\ ip_tos 0xf/0x3f \\ ip_flags frag/nofirstfrag \\ src_ip 10.10.10.10 \\ dst_ip 20.20.20.20/255.255.0.0 \\ ip_proto tcp \\ tcp_flags 0x10/0x3f \\ src_port 1000 \\ dst_port 2000 \\ action pass This keyset is generated when frame is not classified to one of the above keys. Flower key Value Example vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 vlan_ethtype vlan_ethtype 0x892f or vlan_ethtype hsr src_mac or / src_mac 00:33:33:33:33:33 or src_mac 00:33:33:00:00:00/ff:ff:ff:00:00:00 dst_mac or / dst_mac 00:44:44:44:44:44 or dst_mac 00:44:44:00:00:00/ff:ff:ff:00:00:00 This filter matches on classified VLAN tag, and all supported ETYPE fields. The filter in inserted into chain 8000000 (first lookup), drops all matching packets and goes to second lookup in IS2 (chain 8100000). # tc qdisc add dev eth0 clsact # tc filter add dev eth0 egress chain 20000000 prio 10 handle 42 protocol 802.1q flower skip_sw \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype 0xdeed \\ src_mac 00:33:33:33:33:33 \\ dst_mac 00:44:44:44:00:00/ff:ff:ff:ff:00:00 \\ action pass This keyset matches both IPv4 and IPv6 traffic. It does not have IPv4 source and destination address keys. Flower key Value Example src_mac or / src_mac 00:33:33:33:33:33 or src_mac 00:33:33:00:00:00/ff:ff:ff:00:00:00 dst_mac or / dst_mac 00:44:44:44:44:44 or dst_mac 00:44:44:00:00:00/ff:ff:ff:00:00:00 vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 vlan_ethtype vlan_ethtype 802.1q or vlan_ethtype ip Note: Supports the same values as in tc filter protocol field. ip_flags [/] ip_flags { [no]frag | [no]firstfrag } ip_tos or / ip_tos 0x12 or ip_tos 0x4/0x3f. Note: Only the 6 LSBs can be matched in IS1 (The DSCP part). src_ip src_ip 2001:0:0:0:e1de:2244:0ff8:0123 dst_ip dst_ip 2001:0:0:0:e1de:2244:0ff8:4567 ip_proto ip_proto 6, ip_proto tcp, ip_proto 17 or ip_proto udp. src_port or / src_port 1000 or src_port 0x200/0xff0 dst_port or / dst_port 2000 or dst_port 0x100/0xff0 This filter matches on classified VLAN tag, and all supported IPv6/TCP fields. The filter in inserted into chain 20100000 (lookup 1) as this is where the IP_7TUPLE keyset is currently configured. # tc qdisc add dev eth48 clsact # tc filter add dev eth48 egress chain 20100000 prio 10 handle 42 protocol 802.1q flower skip_sw \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype ipv6 \\ ip_tos 0xf/0x3f \\ src_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:0123 \\ dst_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:4567/64 \\ ip_proto tcp \\ tcp_flags 0x10/0x3f \\ src_port 1000 \\ dst_port 2000 \\ action pass The ES2 lookups supports the actions shown in this table. Flower action Example Description Sparx5 LAN966x pass action pass This is a no-op action. ✔ · goto chain action goto chain 20100000 Which chain to go to after this match. Not needed for the last lookup. ✔ · NOTE: More actions are to be added in future releases.","title":"Egress ACL","component":"bsp","version":"2024.03","name":"tc-es2","url":"/bsp/2024.03/tc/tc-es2.html","titles":[{"text":"1. Sparx5 IS2 ACL frame classification","hash":"_sparx5_is2_acl_frame_classification","id":1},{"text":"2. Sparx5 Keysets","hash":"_sparx5_keysets","id":2},{"text":"2.1. ARP","hash":"_arp","id":3},{"text":"2.2. IP4_OTHER","hash":"_ip4_other","id":4},{"text":"2.3. IP4_TCP_UDP","hash":"_ip4_tcp_udp","id":5},{"text":"2.4. MAC_ETYPE","hash":"_mac_etype","id":6},{"text":"2.5. IP_7TUPLE","hash":"_ip_7tuple","id":7},{"text":"2.6. ES2 Actions","hash":"es2-actions","id":8}]},"174":{"id":174,"text":"Whether a VLAN tag by default is added or not is a function of the VLAN configuration explained in the VLAN section on the Bridge Configuration page. By using Basic Tagging it is possible to modify the value of the PCP and DEI in the VLAN tag. By using ES0 Tagging it is possible to pop, modify or push a VLAN tag. When a VLAN tag is added at egress the PCP and DEI values can be assigned in different ways: Use the PCP and DEI values classified at ingress (default setting) Use default port PCP and DEI values Map Priority and DPL to PCP and DEI values via a configurable table To use the PCP and DEI values classified at ingress on eth0 (this is the default setting): # qos e_mode eth0 --classified 1 To assign default port PCP value to 5 and default port DEI value to 1 on eth0: # qos e_def eth0 --pcp 5 --dei 1 To use the default port PCP and DEI values assigned above on eth0: # qos e_mode eth0 --default 1 To configure the [Priority, DPL] to [PCP, DEI] mapping table on eth0: # qos e_tag_map eth0 --pcp 0123456701234567 --dei 0000000011111111 The command above sets the mapping table to its default values. The pcp and dei parameters consist of 16 values where the leftmost value corresponds to index 0 and the rightmost value corresponds to index 15. The index can be calculated as (priority + (DPL * 8)). If priority is 6 and DPL is 1 then index is 14 and PCP will be assigned to 6 and DEI to 1. To use the mapping table defined above on eth0: # qos e_mode eth0 --mapped 1 Besides this tagging the rewriter can update tags based on rules in the ES0 VCAP. See Rewriter VLAN Tagging (ES0).","title":"Basic Egress VLAN Tagging","component":"bsp","version":"2024.03","name":"tc-etag","url":"/bsp/2024.03/tc/tc-etag.html","titles":[{"text":"1. Basic Tagging","hash":"_basic_tagging","id":1}]},"175":{"id":175,"text":"The abbreviation VCAP stands for Versatile Content-Aware Processor. A VCAP is approximately the same as a TCAM (ternary content-addressable memory) with configurable key, action and a counter. A VCAP is used to match frames using a selection of keys and then execute one or more actions on the matched frames. Each VCAP may have one or more lookups that can be used individually. The lookups are typically serviced in order of increasing lookup id. Here is an overview of which VCAPs are supported on the different switches, where each (VCAP, lookup) combination is assigned to a specific chain index: VCAP Name Description Sparx5 Addresses LAN969x Addresses Counter Lookups Chain Ids IS0 Ingress Classification 18432 9216 1 bit 6 L0: 1000000 L1: 1100000 L2: 1200000 L3: 1300000 L4: 1400000 L5: 1500000 IS2 Ingress Access Control 12288 9216 Ext 32 bit 4 L0: 8000000 L1: 8100000 L2: 8200000 L3: 8300000 ES0 Egress Rewriter 4096 1536 1 bit 1 L0: 10000000 ES2 Egress Access Control 12288 1024 Ext 32 bit 2 L0: 20000000 L1: 20100000 The 6 lookups in IS0 are done serially and returns an action for each enabled VCAP lookup. If the lookup matches an entry in the IS0 VCAP, the associated action is returned. For IS2 the first and the third lookups are done in parallel. The same applies to the second and the fourth lookups. Consequently, the actions from the first and the third lookups are processed before the actions from the second and the fourth lookups. Most actions are ordered so that the last action processed takes precedence, but some are sticky meaning they cannot be undone. The datasheet contains a list of these actions in section 4.20.1.7 Processing of VCAP IS2 Actions. For ES2 the two lookups are done in parallel. If both result in an action then the second takes precedence, but there is a FWD_MODE action that has a special resolution table, and there are actions that a sticky meaning they cannot be overwritten by later actions. Section 4.25.1.5 Processing Actions in the datasheet contains the details. All counters in the 4 VCAPs have 1 bit counters, but it is possible to use external 32 bit counters in IS2 and ES2, so this is what is currently being configured. Each rule in all VCAPs is given a unique rule id, which also serves as a counter id for the external counters. The IS0 VCAP is sometimes referred to as CLM in the datasheet. The LAN969x switch provides the same VCAPs with the same number of lookups, but have fewer address blocks for the VCAP instances. VCAP Name Description Addresses Counter Lookups Chain Ids IS1 Ingress Classification 768 32 bit 3 L0: 1000000 L1: 1100000 L2: 1200000 IS2 Ingress Access Control 256 32 bit 2 L0: 8000000 L1: 8100000 ES0 Egress Rewriter 64 1 bit 1 L0: 10000000 The three lookups in IS1 are done simultaneously and the potentially three IS1 action vectors are applied in three steps. If the actions overlap the last lookup wins. Then the two lookups in IS2 are done simultaneously and the potentially two IS2 action vectors are applied in two steps. Consult the datasheet to see how the two lookups are combined. When the switch has selected on which port(s) to forward the packet, a single lookup in ES0 is done and the potential action vectors are applied before the packet is transmitted on the egress port(s). Here we will show how to use a combination of tc commands to configure VCAPs. The examples in the remainder of this section uses the LAN966x VCAP as examples. You can perform the same operations on Sparx5 but the VCAPs have other names and in some cases the key support is different. Figure 1. Ingress pipeline for LAN966x IS1 and IS2: Figure 2. Egress pipeline for LAN966x ES0: Tc rules operate in general on a single interface only. Microchip switches support Shared Filter Blocks on the ingress side but for now, we will use eth0 as the single interface. Start by creating a clsact qdisc: $ tc qdisc add dev eth0 clsact This is the qdisc where all filters are attached. A filter refers to this qdisc by using the keyword 'ingress' or 'egress'. In order to simulate the VCAP functionality on a SW target you must create the following default rules: Create a default lowest priority matchall rule in chain 0, which is the default chain, with a goto chain 1000000 (IS1 lookup 0) as the only action: $ tc filter add dev eth0 ingress protocol all prio 0xffff handle 0 matchall \\ action goto chain 1000000 Create a default lowest priority flower rule in chain 1000000 (IS1 lookup 0) with a goto chain 1100000 (IS1 lookup 1) as the only action: $ tc filter add dev eth0 ingress protocol all prio 0xffff handle 0 chain 1000000 flower \\ action goto chain 1100000 Create a default lowest priority flower rule in chain 1100000 (IS1 lookup 1) with a goto chain 1200000 (IS1 lookup 2) as the only action: $ tc filter add dev eth0 ingress protocol all prio 0xffff handle 0 chain 1100000 flower \\ action goto chain 1200000 Create a default lowest priority flower rule in chain 1200000 (IS1 lookup 2) with a goto chain 8000000 (IS2 lookup 0) as the only action: $ tc filter add dev eth0 ingress protocol all prio 0xffff handle 0 chain 1200000 flower \\ action goto chain 8000000 Create a default lowest priority flower rule in chain 8000000 (IS2 lookup 0) with a goto chain 8100000 (IS2 lookup 1) as the only action: $ tc filter add dev eth0 ingress protocol all prio 0xffff handle 0 chain 8000000 flower \\ action goto chain 8100000 Create a default lowest priority flower rule in every chain you plan to use from 8000001 to 8000255 (IS2 lookup 0) with a goto chain 8100000 (IS2 lookup 1) as the only action: $ tc filter add dev eth0 ingress protocol all prio 0xffff handle 0 chain 8000001 flower \\ action goto chain 8100000 $ tc filter add dev eth0 ingress protocol all prio 0xffff handle 0 chain 800007 flower \\ action goto chain 8100000 $ tc filter add dev eth0 ingress protocol all prio 0xffff handle 0 chain 800042 flower \\ action goto chain 8100000 It is not necessary to create a default rule in chain 8100000 (IS2 lookup 1) as the VCAP stops processing after this lookup. All user-defined flower rules must end with a goto action in order to stop further processing if there is a match. The switch allows filters to be linked between the IS0/IS1 and the other VCAPs by specifying a 'offset' to the usual chain value. In the source filter the goto action must specify the lookup chain id plus an offset value from 1 to 255 (larger values are available for other chains) and similarly the destination filter must be added on the same chain id. Example of a source filter action specification using an offset of 21: action goto chain 8000021 Example of a destination filter chain specification using the same offset as above: tc filter add dev eth12 ingress chain 8000021 ... In e.g the IS0/IS1 VCAP this is done by adding an action in the source filter that sets the 8 bit wide PAG (Policy Association Group) value in the frame metadata when the filter matches the frame, and then add a key match on the same PAG value in the destination filter in the IS2 VCAP, so the second filter only matches if also the first (source) filter was matched. Here is an overview of the link keys between the VCAPs: Source Destination Key Size Sparx5 LAN966x IS0/IS1 IS2 PAG 8 bit ✔ ✔ IS0 ES0 ISDX 12 bit ✔ · IS0 ES2 ISDX 12 bit ✔ · Here is an example of a source filter that uses chain 1200000 (IS1 lookup 2) and chains to IS2 lookup 0 with PAG 1: $ tc filter add dev eth0 ingress protocol ip prio 10 handle 0 chain 1200000 flower \\ dst_mac 00:11:22:33:44:55 \\ dst_ip 10.10.0.42 \\ action skbedit priority 6\\ action goto chain 8000001 This example assigns priority 6 to all ipv4 packets that match dst_mac and dst_ip and then go to chain 8000001 which corresponds to PAG 1. When running on the target, the PAG is derived from the goto chain number and assigned as a VCAP action in IS1 lookup 2, The PAG is assigned as a key in IS2 lookup 0 and depends on the selected chain. Currently, it is not enforced that you set up all the default chains when running on target but it is expected that we will enforce this going forward. The tc filter and flower syntax can be shown with these commands: $ tc filter help $ tc filter add flower help If you want to modify an existing filter you can use the 'change' or 'replace' option: $ tc filter add dev eth0 ingress protocol ip prio 10 handle 0 chain 1200000 flower \\ dst_mac 00:11:22:33:44:55 \\ dst_ip 10.10.0.42 \\ action skbedit priority 6 \\ action goto chain 8000001 $ tc filter change dev eth0 ingress protocol ip prio 10 handle 0 chain 1200000 flower \\ dst_mac 00:11:22:33:44:55 \\ dst_ip 10.10.0.84 \\ action skbedit priority 6 \\ action goto chain 8000001 In this example, dst_ip was changed from 10.10.0.42 to 10.10.0.84. Each VCAP supports different protocols, keys, and actions which will be explained in the following sections. The following options are common for all flower filters: prio (or pref ) sets the sequence of filters. Filters with lower numbers are examined first and thus have higher priority. PRIO is a number from 0 to 0xffff. handle is a reference to the filter. Use this is if you need to reference the filter later. FILTERID is a number from 0 to 0xffffffff. chain is the chain to use for this filter. Chain 0 is the default chain if this option is missing. CHAIN_INDEX is a number from 0 to 0xffffffff. All three IS1 lookups generate by default an S1_7TUPLE key which defines the possible match keys. If another key than S1_7TUPLE is needed, a chain template must be used. See page Classification (IS0/IS1), where the different IS1 keys are documented. protocol is the protocol to match. PROTO can be one of: all, 802_2 (LLC), snap, 802.1q (ctag), 802.1ad (stag), 0xf1c1 (rtag), arp, ip, ipv6, or a 16-bit number >= 0x0600 for EtherType. protocol is always the EtherType after mac addresses or vlan tag(s). Set protocol to all if you want to match on all kind of packets. Setting protocol to other than all limits the matches to the specific kind of packets. Most match keys can be specified as a value or a value/mask. A missing match key is the same as a wildcard (mask is all zeros). The following match keys are supported in all protocols: dst_mac - Match on DMAC. Value only: xx:xx:xx:xx:xx:xx or value/mask: xx:xx:xx:xx:xx:xx/yy:yy:yy:yy:yy:yy. src_mac - Match on SMAC. Same as dst_mac. The following match keys are supported when protocol is 802.1q (ctag) or 802.1ad (stag). They match on the outer VLAN tag: vlan_id - Match on outer VLAN ID. Value only: x or value/mask: x/y. vlan_prio - Match on outer VLAN PCP. Value only: x or value/mask: x/y. vlan_ethtype - Match on EtherType after outer VLAN. Some of the IS1 keys support matching a second VLAN tag. The match keys for the second VLAN tag are: cvlan_id - Match on inner VLAN ID. Value only: x or value/mask: x/y. cvlan_prio - Match on inner VLAN PCP. Value only: x or value/mask: x/y. cvlan_ethtype - Match on EtherType after inner VLAN. See page Classification (IS0/IS1) for documentation regarding supported match keys in the different IS1 keys. The supported actions in IS1 are: pass - a do-nothing action used to stop lookup in the VCAP. vlan modify id [priority ] - set the classified VID and PCP. Classified PCP is set to 0 if priority is not present. skbedit priority - set the classified priority to PRIO goto chain Every flower filter requires a goto as the last action and this is enforced by the driver. On a SW target, these goto’s are needed in order to simulate the behaviour of the VCAP, where the search stops after the first match. On the HW target, these goto’s are actually only needed in IS1 Lookup 2, where the PAG (Policy Association Group) value is assigned based on the goto action. To keep the same configuration on both kinds of platforms the goto is required in all flower filters. At IS2 Lookup 1 and ES0 Lookup 0, where the pipeline ends, there is no next chain to go to. In this case, a goto with a chain number greater than the current one is accepted and required by the driver. You cannot goto a chain with a lower number than the current one. This is enforced when running on the HW target but cannot be enforced on the SW target. Here is an example that contains almost all possible keys and actions and goto chain 8000001 (IS2 lookup 0 PAG 1): $ tc filter add dev eth0 ingress protocol 802.1ad prio 10 handle 0 chain 1200000 flower \\ dst_mac 00:11:22:33:44:55 \\ src_mac 00:44:55:00:00:00/ff:ff:ff:0:0:0 \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype 802.1q \\ cvlan_id 200 \\ cvlan_prio 2 \\ cvlan_ethtype ip \\ dst_ip 10.10.20.42 \\ src_ip 10.10.30.00/255.255.255.0 \\ ip_flags frag/nofirstfrag \\ ip_tos 0x0f/0x3f \\ ip_proto tcp \\ dst_port 1000 \\ src_port 2000 \\ action skbedit priority 6 \\ action vlan modify id 300 3 \\ action goto chain 8000001 You can match a ctag after an stag tag by setting protocol to 802.1ad and vlan_ethtype to 802.1q. You can match an rtag after a ctag tag by setting protocol to 802.1q and vlan_ethtype to 0xf1c1. Both IS2 lookups generate a key based on the content of the frame. The current default configuration is that IPv6 packets are matched against IP4_TCP_UDP or IP4_OTHER entries in both lookups. protocol is the protocol to match. PROTO can be one of: all, 802_2 (LLC), snap, 802.1q, arp, rarp, ip, ipv6 or a 16 bit number for EtherType. + Specifying 0x8809, 0x88ee, or 0x8902 will be treated as OAM packets and will match for all of them. protocol is always the EtherType after mac addresses or vlan tag(s). Set protocol to 'all' if you want to match on all kinds of packets. Setting protocol to other than all limits the matches to the specific kind of packets. If you set protocol to all you cannot match on any fields, which means that all packets are matched. + If you set protocol to 802.1q and vlan_ethtype to all, you can match on all packets on a specific VLAN. Most match keys can be specified as a value or a value/mask. A missing key is the same as a wildcard (mask is all zeros). The following match keys are supported when the protocol is 802.1q. vlan_id - Match on classified VLAN ID. Value only: x or value/mask: x/y. vlan_prio - Match on classified VLAN PCP. Value only: x or value/mask: x/y. vlan_ethtype - Match on EtherType after outer VLAN. See page ACL (IS2) for documentation regarding supported match keys in the different IS2 keys. The supported actions in IS2 are: pass - a do-nothing action used to stop lookup in the VCAP. trap - send the packet to CPU drop - drop the packet police rate burst - police packets. Set rate to BPS bits per second and burst to BYTES bytes. Policers are only supported in the first lookup. mirred - mirror packet on the monitor port goto chain Here is an example that polices all packets on VLAN 100 with rate 1Mbps and goto chain 8100000 (IS2 lookup 1): $ tc filter add dev eth0 ingress protocol 802.1q prio 10 handle 0 chain 8000000 flower \\ vlan_id 100 \\ vlan_ethtype all \\ action police rate 1000000 burst 16000 \\ action goto chain 8100000 Here is an example that mirrors all snap packets with DMAC 00:44:55:66:77:88 on monitor port eth3 and goto chain 8100000 (IS2 lookup 1): $ tc filter add dev eth0 ingress protocol snap prio 10 handle 0 chain 8000000 flower \\ dst_mac 00:44:55:66:77:88 \\ action mirred egress mirror dev eth3 \\ action goto chain 8100000 Here is an example that drops all snap packets with DMAC 00:44:55:XX:XX:XX and goto chain 8100000 (IS2 lookup 1): $ tc filter add dev eth0 ingress protocol snap prio 10 handle 0 chain 8000000 flower \\ dst_mac 00:44:55:00:00:00/ff:ff:ff:0:0:0 \\ action drop \\ action goto chain 8100000 Here is an enhancement of the example above that drops all snap packets with DMAC 00:44:55:XX:XX:XX except DMAC 00:44:55:66:77:88 and goto chain 8100000 (IS2 lookup 1): $ tc filter add dev eth0 ingress protocol snap prio 9 handle 0 chain 8000000 flower \\ dst_mac 00:44:55:66:77:88 \\ action pass \\ action goto chain 8100000 $ tc filter add dev eth0 ingress protocol snap prio 10 handle 0 chain 8000000 flower \\ dst_mac 00:44:55:00:00:00/ff:ff:ff:0:0:0 \\ action drop \\ action goto chain 8100000 Here is an example that traps all arp request packets with SMAC 00:11:22:33:44:55 and goto chain 8100000 (IS2 lookup 1): $ tc filter add dev eth0 ingress protocol arp prio 10 handle 0 chain 8000000 flower \\ src_mac 00:11:22:33:44:55 \\ arp_op request \\ action trap \\ action goto chain 8100000 Here is an example that drops specific ip/udp packets on VLAN 100 and goto chain 8100000 (IS2 lookup 1): $ tc filter add dev eth0 ingress protocol 802.1q prio 10 handle 0 chain 8000000 flower \\ vlan_id 100 \\ vlan_ethtype ip \\ dst_ip 10.10.20.42 \\ src_ip 10.10.30.00/255.255.255.0 \\ ip_flags frag/nofirstfrag \\ ip_tos 0x0f/0x3f \\ ip_proto udp \\ dst_port 1000 \\ src_port 2000 \\ action drop \\ action goto chain 8100000 ES0 has only one lookup (chain 10000000) and the filters are assigned to the egress part of the clsact qdisc. ES0 can only match on the classified VID and PCP values. Note that these values can be different from the values in the packet. protocol is the protocol to match. PROTO can be one of: all or 802.1q. Set protocol to 'all' if you want to match on all kinds of packets. If you set protocol to 'all' you cannot match on any fields, which means that all packets are matched. If you set protocol to '802.1q' and vlan_ethtype to 'all', you can match on all packets on a specific VLAN. Most keys can be specified as a value or a value/mask. A missing key is the same as a wildcard (mask is all zeros). The following keys are supported when the protocol is 802.1q. vlan_id - Match on classified VLAN ID. Value only: x or value/mask: x/y. vlan_prio - Match on classified VLAN PCP. Value only: x or value/mask: x/y. vlan_ethtype - Match on EtherType after outer VLAN. See page Rewriter VLAN Tagging (ES0) for documentation regarding supported match keys. The supported actions in ES0 are: vlan pop - pop vlan tag vlan modify [ protocol ] id [ priority ] - modify VID and PCP. is one of 802.1q (default) or 802.1ad vlan push [ protocol ] id [ priority ] - push a new vlan tag. is one of 802.1q (default) or 802.1ad goto chain Here is an example that matches on VLAN 100, pops it, and goes to chain 10000001 (Dummy lookup): $ tc filter add dev eth0 egress protocol 802.1q prio 10 handle 0 chain 10000000 flower \\ vlan_id 100 \\ vlan_ethtype all \\ action vlan pop \\ action goto chain 300001 Here is an example that matches on VLAN 100, modifies it to VLAN 200 c-tag, and goes to chain 10000001 (Dummy lookup): $ tc filter add dev eth0 egress protocol 802.1q prio 10 handle 0 chain 10000000 flower \\ vlan_id 100 \\ vlan_ethtype all \\ action vlan modify id 200 priority 0 \\ action goto chain 300001 Here is an example that matches on VLAN 100, pushes VLAN 200 as outer s-tag, and goes to chain 10000001 (Dummy lookup): $ tc filter add dev eth0 egress protocol 802.1q prio 10 handle 0 chain 10000000 flower \\ vlan_id 100 \\ vlan_ethtype all \\ action vlan push protocol 802.1ad id 200 priority 0 \\ action goto chain 300001","title":"TC and VCAP","component":"bsp","version":"2024.03","name":"tc-flower-vcap","url":"/bsp/2024.03/tc/tc-flower-vcap.html","titles":[{"text":"1. Introduction","hash":"tc_vcap_intro","id":1},{"text":"2. VCAP Information","hash":"vcap_info","id":2},{"text":"2.1. Sparx5 and LAN969x VCAPs","hash":"_sparx5_and_lan969x_vcaps","id":3},{"text":"2.2. LAN966x VCAPs","hash":"_lan966x_vcaps","id":4},{"text":"3. TC commands","hash":"_tc_commands","id":5},{"text":"4. TC initial setup","hash":"_tc_initial_setup","id":6},{"text":"5. Linking TC filters between VCAPs","hash":"_linking_tc_filters_between_vcaps","id":7},{"text":"6. TC flower syntax","hash":"_tc_flower_syntax","id":8},{"text":"6.1. Prio","hash":"_prio","id":9},{"text":"6.2. Handle","hash":"_handle","id":10},{"text":"6.3. Chain","hash":"_chain","id":11},{"text":"7. LAN966x IS1","hash":"_lan966x_is1","id":12},{"text":"7.1. Protocol","hash":"_protocol","id":13},{"text":"7.2. Keys","hash":"_keys","id":14},{"text":"7.3. Actions","hash":"_actions","id":15},{"text":"7.4. Examples","hash":"_examples","id":16},{"text":"8. LAN966x IS2","hash":"_lan966x_is2","id":17},{"text":"8.1. Protocol","hash":"_protocol_2","id":18},{"text":"8.2. Keys","hash":"_keys_2","id":19},{"text":"8.3. Actions","hash":"_actions_2","id":20},{"text":"8.4. Examples","hash":"_examples_2","id":21},{"text":"9. LAN966x ES0","hash":"_lan966x_es0","id":22},{"text":"9.1. Protocol","hash":"_protocol_3","id":23},{"text":"9.2. Keys","hash":"_keys_3","id":24},{"text":"9.3. Actions","hash":"_actions_3","id":25},{"text":"9.4. Examples","hash":"_examples_3","id":26}]},"176":{"id":176,"text":"The tc command is used to configure Traffic Control in the Linux kernel and is part of the iproute2 package. The tc framework in Linux offers a very capable, flexible, and comprehensive set of features. tc in combination with SwitchDev or DSA, also offers hardware offloading. Comparing with more traditional Switch or Network OS’es, tc covers the following features: Classifying Scheduling Shaping and policing ACLs Push/pop vlans When tc is running in SW without any HW offload, it offers an unlimited number of lookups, all shapers, policers, and filters are available with the full set of parameters. But the performance (both in terms of bandwidth, latency, real-time processing etc) is limited by the CPU and the connectivity between the network ports and the CPU. On the other hand, when tc is offloaded to HW, it can typically offer wire-speed processing, latency, and real-time performance are typically in nano-second granularity, but the features, scaling, and flexibility is limited by the capability of the under-laying HW. This documentation will focus on tc being used on platforms with SwitchDev/DSA offloading, and only cover the features which can be offloaded by the relevant Microchip switches. tc operates on a single network interface and was originally designed to work on egress only. Later on tc was enhanced to also work on ingress but with a more limited feature set. Each network interface has two hooks where tc can affect the traffic. These hooks are adjacent to the network interface as shown in the simplified illustration below. Not all traffic is forwarded. The user application may consume the frame without further forwarding. Also, the user application may produce frames. Other hooks, such as netfilter hooks, are located further away from the network interface, which means that tc is consulted first after receiving an Ethernet frame and last before transmitting an Ethernet frame. Other hooks than tc hooks are not supported by Microchip switches. tc consists of the following components: Qdisc Class Filter Chain Shared filter blocks All components are identified by an ID that has the same syntax: :. Both major and minor are hexadecimal numbers. The nameing conventions of the ID are different in each of the components and will be described under each component. A qdisc (queuing discipline) is defined as a scheduler and/or shaper that decides which frame to send next. There are two qdiscs that do not adhere to this definition, namely the ingress qdisc and the clsact qdisc. These are not really queueing disciplines but creates a location where filters can be attached. The ingress qdisc works on ingress only while the clsact works on both ingress and egress. As the clsact qdisc is more general than the ingress qdisc all examples will use the clsact qdisc. The clsact qdisc can be used simultaneously with all other qdiscs that only work on egress. On ingress, the clsact qdisc is typically used for classifying, dropping, or policing frames. On egress, the clsact qdisc is typically used to add, modify or delete VLAN tags. The clsact qdisc is created by using the tc qdisc command: # tc qdisc add dev eth0 clsact The rest of the qdiscs are for egress only and can be subdivided into two types: Classful qdiscs and Classless qdiscs. Each interface has a default root egress qdisc attached that depends on the network interface. The default root qdisc can be replaced with another qdisc by using the tc qdisc command: # tc qdisc add dev eth0 root handle 1:0 mqprio All qdiscs must be created with a parent and an optional handle. If no handle is specified the system will create one. The example above creates a new root qdisc of type mqprio and with root as the parent and a handle of 1:0. The minor number of a qdisc must always be 0 (or simply omitted in which case handle can be specified as either : or ). Classful qdiscs allow you to create a separate policy for different traffic classes by assigning an arbitrary number of classes to the classful qdisc. These classes can again contain other classes or qdiscs. It is possible to create a very complex tree structure by combining classful qdiscs and classes. A filter attached to the root qdisc or to any of the classes is used to steer the traffic to a specific class. Classless qdiscs do not support classes and filters. The behavior of the qdisc is determined at creation time. Some of the classless qdiscs maps traffic flows to traffic classes but these are not real classes as in a classful qdisc. In most cases, it is possible to assign another qdisc to each of these traffic classes. It is the chosen implementation inside the kernel which decides if it is a classful or classless qdisc. When understanding the TC framework, and when choosing which qdiscs to use in a given configuration scenario, it is much more important to understand the concept of schedulers and shapers. The current implementation in the kernel offers different schedulers (some implemented as classful others as classless), likewise with shapers (some implemented as classful others as classless). The following sections provide an introduction to schedulers and shapers. The qdiscs in TC are very flexible, and allow to nest objects in a recursive way. HW on the other hand is fixed, and to allow HW offload we need to align with the limitation of the HW. The skip_sw flag will cause the driver to return an error if a given configuration cannot be offloaded. A scheduler splits traffic into different traffic classes and decides which frame to send next. The schedulers supported for HW offload by Microchip switches are: mqprio - Multiqueue Priority Qdisc (classless) taprio - Time Aware Priority Shaper (classless) ets - Enhanced Transmission Selection (classful) The mqprio qdisc is the most simple to understand. It basically splits traffic up into eight different queues based on the priority of the frame where frames in high priority queues are sent first. Adding an mqprio qdisc does nothing by itself as this is the way the egress interface works by default. The reason to use it is that it creates eight qdisc classes which map 1:1 to the eight priority queues. On each of these qdisc classes, it is possible to attach another qdisc such as a shaper. An mqprio qdisc can be illustrated like this: In the example above a cbs shaper is attached on traffic class 1:5 (priority 4). A default qdisc is automatically attached to all the other traffic classes. See the Strict scheduling section on the Scheduling page to see how the example above can be implemented. The taprio qdisc is basically an mqprio qdisc with added support for scheduled traffic as described in IEEE Std 802.1Q-2018 Section 8.6.8.4, also known as Time-Aware Scheduling (TAS). A cyclic schedule opens and closes each priority queue relative to a known timescale, e.g. controlled via PTP. When a queue is closed all frames are held back in the queue and when it opens again the frames are transmitted again in priority order. This cycle repeats forever. See the Time Aware Scheduling section on the Scheduling page to see how Time-Aware Scheduling can be implemented. The ets qdisc is basically an mqprio qdisc with added support for Enhanced Transmission Selection (ETS) as described in IEEE Std 802.1Q-2018 Section 37. With the ets qdisc, you can either have eight strict priority queues, in which case it works in the same way as the mqprio qdisc, or you can have up to eight weighted queues where you can configure each queue to have a guaranteed bandwidth in percent of the total bandwidth. If you have less than eight weighted queues the rest of the queues works as strict priority queues. The weighted queues are always allocated from the priority queues with the lowest priority. See the Strict and DWRR scheduling section on the Scheduling page to see how Enhanced Transmission Selection can be implemented. A shaper sends out the traffic with a specified maximum bitrate and buffers all traffic that exceeds this bitrate. In other words: It smooths the traffic and removes bursts. Frames are never discarded unless the buffer is full. The shapers supported for HW offload by Microchip switches are: tbf - Token Bucket Filter (classful) cbs - Credit Based Shaper (classless) The tbf qdisc implements a shaper based on the Token Bucket algorithm. A tbf qdisc is created using the tc qdisc command and can be attached either to the root or to a traffic class in one of the supported schedulers mentioned above. See the Priority Shaping section on the Shaping page for a description of how to implement a tbf shaper. The cbs qdisc implements the shaper algorithm described in IEEE Std 802.1Q-2018 Section 8.6.8.2. A cbs qdisc is created using the tc qdisc command and can be attached to a traffic class in one of the supported schedulers mentioned above. See the Priority Shaping section on the Shaping page for a description of how to implement a cbs shaper. Classes in the traffic control framework can be described by the following statements: A class represents a traffic class and can only exist inside a classful qdisc of the same type as the class. A class can contain other child classes or a single qdisc, which can be a classful or classless qdisc. A class that does not contain a child class is called a leaf class and will always contain a default simple classless qdisc unless another qdisc is assigned. A class must be assigned a parent and a class id when it is created. The following illustration shows an example of a classful qdisc with child classes. The different classes are selected by filters attached to the root qdiscs. Classful qdiscs with user-defined classes are not supported by Microchip switches. A tc filter is used to match frames in some way and apply actions on the matching frames. The filters supported for HW offload by Microchip switches are: matchall - Matches all frames flower - Matches packets via a set of keys, such as src_mac and dst_ip. Microchip switches only support using filters on the clsact qdisc on either ingress or egress. Filters support several general parameters that are independent of the filter type: prio (or pref) - The priority of the filter. The lowest value has the highest priority and are checked first. handle - The filter ID to be used when modifying or deleting the filter. protocol - The protocol to match, such as all, ip, ipv6 or 802.1q. skip_sw - The filter is HW offloaded. All examples expect that a clsact qdisc is created as shown in the Qdisc section. The clsact qdisc creates two new handles, ingress and egress, which are used as parents in the filter commands. Every filter contains one or more actions that are applied when the filter is hit. Not all kinds of actions are supported by each filter as it depends on both the context and the capabilities of the hardware. The following actions are supported in at least one configuration: pass - do nothing trap - send packet to CPU drop - drop packet skbedit priority - modify packet priority to PRIO (qos class) vlan pop - pop vlan tag vlan modify [ protocol ] id [ priority ] - modify VID and PCP. is one of 802.1q (default) or 802.1ad vlan push [ protocol ] id [ priority ] - push a new vlan tag. is one of 802.1q (default) or 802.1ad police rate burst - police traffic mirred egress mirror dev - mirror traffic on monitor port goto chain - goto specified chain Actions are always added last in the filter-specific options. Use tc filter add matchall action help to see all action parameters. The following sections describe briefly how to use matchall and flower filters. They will be described in more detail in the sections where the actual usage is shown. The matchall filter matches all packets and applies one or more actions. Add matchall filter that sets the priority to 4 on all packets received on eth0: # tc filter add dev eth0 ingress prio 10 handle 1 protocol all matchall \\ skip_sw \\ action skbedit priority 4 Use tc filter add matchall help to see all parameters. The flower filter is able to match packets using a set of keys and apply one or more actions on the matching packets Add flower filter that matches on DMAC and drops the matching packets: # tc filter add dev eth0 ingress prio 20 handle 2 protocol all flower \\ skip_sw \\ dst_mac 00:11:22:33:44:55 \\ action drop Use tc filter add flower help to see all parameters. tc filter chains allow us to jump from one filter chain to another using the goto action. Here is an example that matches all in chain 0 (the default) and goto chain 10000. Chain 10000 contains a filter that matches on SMAC and drops the matching packets: # tc filter add dev eth0 ingress prio 20 handle 2 protocol all matchall \\ skip_sw \\ action goto chain 10000 # tc filter add dev eth0 ingress prio 21 handle 3 protocol all chain 10000 flower \\ skip_sw \\ src_mac 00:22:33:44:55:66 \\ action drop Another use of chains is to use the tc chain command: # tc chain add dev eth0 ingress chain 10000 protocol ip flower \\ dst_ip 0.0.0.0 \\ ip_proto tcp The command above creates a chain template that will limit filters created in this chain to only specify protocol as ip and dst_ip and ip_proto as keys. The key parameters given in the chain template are not fixed, only the name of the keys. This filter will be accepted: # tc filter add dev eth0 ingress prio 1 handle 1 protocol ip chain 10000 flower \\ skip_sw \\ dst_ip 10.10.10.10 \\ ip_proto udp \\ action drop This filter will NOT be accepted as it violates the template: # tc filter add dev eth0 ingress prio 2 handle 2 protocol ip chain 10000 flower \\ skip_sw \\ src_ip 20.20.20.20 \\ ip_proto udp \\ action drop tc operates on a single interface only, but if two or more interfaces need exactly the same filter configuration then shared filter blocks are the rescue. The downside is that you cannot combine shared filter blocks with individual filters on a specific interface, so it is all or nothing. Instead of creating the clsact qdisc directly on an interface we add the same ingress_block on the interfaces we want to share the filter configuration: # tc qdisc add dev eth0 ingress_block 10 clsact # tc qdisc add dev eth1 ingress_block 10 clsact # tc qdisc add dev eth3 ingress_block 10 clsact Now create the filters in the shared block: # tc filter add block 10 chain 12000 prio 1 handle 1 protocol all flower skip_sw \\ dst_mac 00:01:01:00:00:00/ff:ff:ff:00:00:00 \\ src_mac 00:02:02:02:02:02 \\ action goto chain 20002 # tc filter add block 10 chain 20002 prio 2 handle 2 protocol all flower skip_sw \\ action drop \\ action goto chain 21000 The kernel will now apply all filters to each interface. It is possible to use a mask in many of the filter keys as shown above for dst_mac. This allows us to match on only a subset of the key. The primary reason for using shared filter blocks is that it allows optimizing the use of TCAM entries where the port mask would be the only difference between the entries. In the example above only one TCAM rule is needed. Secondary it makes it easier to setup the filters. More information about tc can be found in the man pages: $ man tc $ man tc-mqprio $ man tc-taprio $ man tc-ets $ man tc-cbs $ man tc-tbf $ man tc-matchall $ man tc-flower Various HOWTOs: https://tldp.org/HOWTO/Traffic-Control-HOWTO/index.html (version 1.0.2 Oct 2006) https://tldp.org/en/Traffic-Control-HOWTO/ (version 1.1 Jan 2016) https://tldp.org/HOWTO/Adv-Routing-HOWTO/ (version 1.1 Jul 2002) http://borg.uu3.net/traffic_shaping/index.html An introduction to clsact qdisc: https://lwn.net/Articles/671458/ An introduction to tc filter chains: https://lwn.net/Articles/723067/ An introduction to tc shared filter blocks: https://lwn.net/Articles/736338/ https://lwn.net/Articles/743391/","title":"TC","component":"bsp","version":"2024.03","name":"tc-intro","url":"/bsp/2024.03/tc/tc-intro.html","titles":[{"text":"1. Introduction","hash":"tc_intro","id":1},{"text":"2. tc terminology and architecture","hash":"_tc_terminology_and_architecture","id":2},{"text":"2.1. Qdisc","hash":"_qdisc","id":3},{"text":"2.1.1. Classful vs Classless qdiscs","hash":"_classful_vs_classless_qdiscs","id":4},{"text":"2.1.2. Schedulers","hash":"_schedulers","id":5},{"text":"mqprio","hash":"_mqprio","id":6},{"text":"taprio","hash":"_taprio","id":7},{"text":"ets","hash":"_ets","id":8},{"text":"2.1.3. Shapers","hash":"_shapers","id":9},{"text":"tbf","hash":"_tbf","id":10},{"text":"cbs","hash":"_cbs","id":11},{"text":"2.2. Class","hash":"_class","id":12},{"text":"2.3. Filter","hash":"_filter","id":13},{"text":"2.3.1. tc filter actions","hash":"_tc_filter_actions","id":14},{"text":"2.3.2. matchall filter","hash":"_matchall_filter","id":15},{"text":"2.3.3. flower filter","hash":"_flower_filter","id":16},{"text":"2.4. Chain","hash":"tc_chain","id":17},{"text":"2.5. Shared Filter Blocks","hash":"shared_filter_blocks","id":18},{"text":"3. References","hash":"_references","id":19}]},"177":{"id":177,"text":"When a frame is received on a port it is classified into one of these Traffic Types: Traffic Type Sparx5 (IS0) LAN966x (IS1) IPv4 ✔ ✔ IPv6 ✔ ✔ Other ✔ ✔ All frame types are subject to the appropriate lookups according to the VCAP. See VCAP Information. Each port is configured to generate a specific keyset (a set of key values extracted from a frame) for each combination of Traffic Type and lookup. A keyset is an internal value used by the hardware. A flower key is what the user specifies in the tc flower filter command. The valid combinations of Sparx5 IS0 lookup keyset versus Traffic Type are: Sparx5 IS0 keyset - Traffic Type Size IPv4 IPv6 Other NORMAL_5TUPLE_IP4 6 ✔ ✔ ✔ NORMAL_7TUPLE 12 ✔ ✔ ✔ The default IS0 lookup keyset is NORMAL_7TUPLE for IPv6 and Other, and NORMAL_5TUPLE_IP4 for IPv4 traffic. The other IS0 lookup keys can be selected by using a tc chain template. The MPLS and MBLS traffic types selects the NORMAL_7TUPLE keyset as they are configured to follow 'Other'. IS0 on Sparx5 has some additional traffic types that are currently configured to follow the 'Other' traffic type classification as they are not being used. The valid combinations of LAN966x IS1 lookup keyset versus Traffic Type are: LAN966x IS1 keyset - Traffic Type Size IPv4 IPv6 Other 7TUPLE 4 ✔ ✔ ✔ NORMAL_IP6 4 · ✔ · 5TUPLE_IP6 4 · ✔ · NORMAL 2 ✔ ✔ ✔ 5TUPLE_IP4 2 ✔ ✔ ✔ DMAC_VID 1 ✔ ✔ ✔ The default IS1 lookup keyset is 7TUPLE. The other IS1 lookup keys can be selected by using a tc chain template. Size denotes the size of the IS1 keyset. Using smaller keys makes it possible to have more rules in the IS1 VCAP. Each IS1 lookup is configured by using the chain option in the tc filter commands. The supported flower keys for each IS1 lookup keyset are described next and here is also shown examples on how to use the actions. A more thorough description of the actions is found in the section IS0/IS1 Actions The NORMAL_5TUPLE_IP4 keyset can be used for both IPv4 and IPv6 frames. It can match on two simultaneous VLAN tags. It cannot match on IPv6 addresses but it is able to match on both IPv4 source and destination addresses simultaneously. Flower key Value Example IPv4 IPv6 Other vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 ✔ ✔ · vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 ✔ ✔ · vlan_ethtype vlan_ethtype 802.1q or vlan_ethtype ipv6 ✔ ✔ · cvlan_id or / cvlan_id 1234 or cvlan_id 0x100/0xff0 ✔ ✔ · cvlan_prio or / cvlan_prio 3 or cvlan_id 0x0/0x1 ✔ ✔ · cvlan_ethtype vlan_ethtype ipv6 ✔ ✔ · ip_flags [/] ip_flags { [no]frag | [no]firstfrag } ✔ · · src_ip or / src_ip 10.10.10.10 or src_ip 10.10.0.0/255.255.0.0 ✔ · · dst_ip or / dst_ip 20.20.20.20, dst_ip 20.20.0.0/255.255.0.0 ✔ · · ip_proto ip_proto 0x12 or ip_proto tcp. ✔ ✔ · You can see some example of IPv4 filters here IS0/IS1 IPv4 filter examples The NORMAL_7TUPLE keyset is the most general but cannot match on IPv4 addresses, and only on TCP/UDP source ports. Flower key Value Example IPv4 IPv6 Other src_mac or / src_mac 00:33:33:33:33:33 or src_mac 00:33:33:00:00:00/ff:ff:ff:00:00:00 ✔ ✔ ✔ dst_mac or / dst_mac 00:44:44:44:44:44 or dst_mac 00:44:44:00:00:00/ff:ff:ff:00:00:00 ✔ ✔ ✔ vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 ✔ ✔ ✔ vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 ✔ ✔ ✔ vlan_ethtype vlan_ethtype 802.1q or vlan_ethtype ip Note: Supports the same values as in tc filter protocol field. ✔ ✔ ✔ cvlan_id or / cvlan_id 1234 or cvlan_id 0x100/0xff0 ✔ ✔ ✔ cvlan_prio or / cvlan_prio 3 or cvlan_id 0x0/0x1 ✔ ✔ ✔ cvlan_ethtype cvlan_ethtype 0xf1c1 or vlan_ethtype ip Note: Supports the same values as in tc filter protocol field. ✔ ✔ ✔ ip_flags [/] ip_flags { [no]frag | [no]firstfrag } ✔ · · src_ip src_ip 2001:0:0:0:e1de:2244:0ff8:0123 ✔ ✔ · dst_ip dst_ip 2001:0:0:0:e1de:2244:0ff8:4567 ✔ ✔ · ip_proto ip_proto 0x12 or ip_proto tcp. ✔ ✔ · src_port or / src_port 1000 or src_port 0x200/0xff0 ✔ ✔ · The filter below matches on MAC addresses, two VLAN tags and all supported IPv6 matches. The filter in inserted into chain 1000000 (first lookup), and drops the matched frames and goes to second lookup in IS1 (chain 1100000). # tc qdisc add dev eth0 clsact # tc filter add dev eth12 ingress chain 1000000 prio 100 handle 100 protocol 802.1ad flower skip_sw \\ src_mac 00:33:33:33:33:33 \\ dst_mac 00:44:44:44:00:00/ff:ff:ff:ff:00:00 \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype 802.1q \\ cvlan_id 200 \\ cvlan_prio 2 \\ cvlan_ethtype ipv6 \\ ip_flags frag/nofirstfrag \\ src_ip 1:2::3:4 \\ dst_ip 5:6::7:8 \\ ip_proto tcp \\ action mirred egress mirror dev eth49 \\ action goto chain 1100000 The 7TUPLE keyset is used by default for all IS1 Frame Type and lookup combinations. Apart from only partial support of IPv6 addresses it is the most general keyset but it is also one of the largest keysets in LAN966x. Flower key Value Example IPv4 IPv6 Other src_mac or / src_mac 00:33:33:33:33:33 or src_mac 00:33:33:00:00:00/ff:ff:ff:00:00:00 ✔ ✔ ✔ dst_mac or / dst_mac 00:44:44:44:44:44 or dst_mac 00:44:44:00:00:00/ff:ff:ff:00:00:00 ✔ ✔ ✔ vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 ✔ ✔ ✔ vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 ✔ ✔ ✔ vlan_ethtype vlan_ethtype 802.1q or vlan_ethtype ip Note: Supports the same values as in tc filter protocol field. ✔ ✔ ✔ cvlan_id or / cvlan_id 1234 or cvlan_id 0x100/0xff0 ✔ ✔ ✔ cvlan_prio or / cvlan_prio 3 or cvlan_id 0x0/0x1 ✔ ✔ ✔ cvlan_ethtype cvlan_ethtype 0xf1c1 or vlan_ethtype ip Note: Supports the same values as in tc filter protocol field. ✔ ✔ ✔ ip_tos or / ip_tos 0x12 or ip_tos 0x4/0x3f. Note: Only the 6 LSBs can be matched in IS1 (The DSCP part). ✔ ✔ · ip_flags [/] ip_flags { [no]frag | [no]firstfrag } ✔ · · src_ip or / when IPv4 and when IPv6 src_ip 10.10.10.10, src_ip 10.10.0.0/255.255.0.0 or src_ip 2001:0:0:0:e1de:2244:0ff8:0123 Note: IPv6 cannot be masked and even all the blocks can’t be used for matching, only the non-zero blocks from above example can be used to match an IPv6 address. ✔ ✔ · dst_ip or / when IPv4 and when IPv6 dst_ip 20.20.20.20, dst_ip 20.20.0.0/255.255.0.0 or dst_ip 2001:0:0:0:e1de:2244:0ff8:4567 Note: IPv6 cannot be masked and even all the blocks can’t be used for matching, only the non-zero blocks from above example can be used to match an IPv6 address. ✔ ✔ · ip_proto ip_proto 0x12 or ip_proto tcp. ✔ ✔ · src_port or / src_port 1000 or src_port 0x200/0xff0 ✔ ✔ · dst_port or / dst_port 2000 or dst_port 0x100/0xff0 ✔ ✔ · The 7TUPLE LAN966x IS1 keyset is the default keyset and can be used without specifying a chain template. The filter below matches on MAC addresses, two VLAN tags and all supported IPv4 matches. The filter is inserted into chain 1000000 (first lookup), classifies all matching packets to priority 5 and goes to second lookup in IS1 (chain 1100000). # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 1000000 prio 10 handle 42 protocol 802.1ad flower skip_sw \\ src_mac 00:33:33:33:33:33 \\ dst_mac 00:44:44:44:00:00/ff:ff:ff:ff:00:00 \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype 802.1q \\ cvlan_id 200 \\ cvlan_prio 2 \\ cvlan_ethtype ipv4 \\ ip_tos 0xf/0x3f \\ ip_flags frag/nofirstfrag \\ src_ip 10.10.10.10 \\ dst_ip 20.20.20.20 \\ ip_proto tcp \\ src_port 1000 \\ dst_port 2000 \\ action skbedit priority 5 \\ action goto chain 1100000 This filter is the same as above but with only one VLAN tag match. # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 1000000 prio 10 handle 42 protocol 802.1q flower skip_sw \\ src_mac 00:33:33:33:33:33 \\ dst_mac 00:44:44:44:00:00/ff:ff:ff:ff:00:00 \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype ipv4 \\ ip_tos 0xf/0x3f \\ ip_flags frag/nofirstfrag \\ src_ip 10.10.10.10 \\ dst_ip 20.20.20.20 \\ ip_proto tcp \\ src_port 1000 \\ dst_port 2000 \\ action skbedit priority 5 \\ action goto chain 1100000 This filter is the same as above but without VLAN matching. # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 1000000 prio 10 handle 42 protocol ipv4 flower skip_sw \\ src_mac 00:33:33:33:33:33 \\ dst_mac 00:44:44:44:00:00/ff:ff:ff:ff:00:00 \\ ip_tos 0xf/0x3f \\ ip_flags frag/nofirstfrag \\ src_ip 10.10.10.10 \\ dst_ip 20.20.20.20 \\ ip_proto tcp \\ src_port 1000 \\ dst_port 2000 \\ action skbedit priority 5 \\ action goto chain 1100000 This filter matches on MAC addresses and ARP frames. # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 1000000 prio 10 handle 42 protocol arp flower skip_sw \\ src_mac 00:33:33:33:33:33 \\ dst_mac 00:44:44:44:44:44 \\ action skbedit priority 5 \\ action goto chain 1100000 This filter matches on MAC addresses and all kind of frames. # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 1000000 prio 10 handle 42 protocol all flower skip_sw \\ src_mac 00:33:33:33:33:33 \\ dst_mac 00:44:44:44:44:44 \\ action skbedit priority 5 \\ action goto chain 1100000 The NORMAL_IP6 keyset can only be used for IPv6 lookups. It is the only keyset that is able to match on both MAC address and full IPv6 address simultaneously. On the other hand it is only possible to match on either source or destination MAC/IPv6 addresses. A tc chain template is required in order to use it. The template selects whether to use source or destination addresses. Flower key Value Example IPv4 IPv6 Other src_mac or dst_mac or / src_mac 00:33:33:33:33:33, src_mac 00:33:33:00:00:00/ff:ff:ff:00:00:00, dst_mac 00:44:44:44:44:44 or dst_mac 00:44:44:00:00:00/ff:ff:ff:00:00:00 · ✔ · vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 · ✔ · vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 · ✔ · vlan_ethtype vlan_ethtype 802.1q or vlan_ethtype ipv6 · ✔ · cvlan_id or / cvlan_id 1234 or cvlan_id 0x100/0xff0 · ✔ · cvlan_prio or / cvlan_prio 3 or cvlan_id 0x0/0x1 · ✔ · cvlan_ethtype vlan_ethtype ipv6 · ✔ · ip_tos or / ip_tos 0x12 or ip_tos 0x4/0x3f. Note: Only the 6 LSBs can be matched in IS1 (The DSCP part). · ✔ · src_ip or dst_ip src_ip 2001:0:0:0:e1de:2244:0ff8:0123 or dst_ip 2001:0:0:0:e1de:2244:0ff8:4567 · ✔ · ip_proto ip_proto 0x12 or ip_proto tcp. · ✔ · This IS1 keyset requires a chain template. This filter matches on two VLAN tags and source MAC and IPv6 address. The filter in inserted into chain 1000000 (first lookup), classifies all matching packets to priority 5 and goes to second lookup in IS1 (chain 1100000). # tc qdisc add dev eth0 clsact # tc chain add dev eth0 ingress chain 1000000 protocol 802.1ad flower skip_sw \\ src_mac 00:00:00:00:00:00 \\ vlan_id 0 \\ vlan_prio 0 \\ vlan_ethtype 802.1q \\ cvlan_id 0 \\ cvlan_prio 0 \\ cvlan_ethtype ipv6 \\ ip_tos 0x00/0x3f \\ src_ip 0::0 \\ ip_proto udp # tc filter add dev eth0 ingress chain 1000000 prio 10 handle 42 protocol 802.1ad flower skip_sw \\ src_mac 00:33:33:33:33:33 \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype 802.1q \\ cvlan_id 200 \\ cvlan_prio 2 \\ cvlan_ethtype ipv6 \\ ip_tos 0xf/0x3f \\ src_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:0123 \\ ip_proto tcp \\ action skbedit priority 5 \\ action goto chain 1100000 This filter matches on destination MAC and IPv6 address. The filter in inserted into chain 1000000 (first lookup), classifies all matching packets to priority 5 and goes to second lookup in IS1 (chain 1100000). # tc qdisc add dev eth0 clsact # tc chain add dev eth0 ingress chain 1000000 protocol ipv6 flower skip_sw \\ dst_mac 00:00:00:00:00:00 \\ ip_tos 0x00/0x3f \\ dst_ip 0::0 \\ ip_proto udp # tc filter add dev eth0 ingress chain 1000000 prio 10 handle 42 protocol ipv6 flower skip_sw \\ dst_mac 00:44:44:44:44:44 \\ ip_tos 0xf/0x3f \\ dst_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:4567 \\ ip_proto tcp \\ action skbedit priority 5 \\ action goto chain 1100000 The 5TUPLE_IP6 keyset can only be used for IPv6 lookups. It is the only keyset that is able to match full IPv6 source and destination addresses simultaneously. A tc chain template is required in order to use it. Flower key Value Example IPv4 IPv6 Other vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 · ✔ · vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 · ✔ · vlan_ethtype vlan_ethtype 802.1q or vlan_ethtype ipv6 · ✔ · cvlan_id or / cvlan_id 1234 or cvlan_id 0x100/0xff0 · ✔ · cvlan_prio or / cvlan_prio 3 or cvlan_id 0x0/0x1 · ✔ · cvlan_ethtype vlan_ethtype ipv6 · ✔ · ip_tos or / ip_tos 0x12 or ip_tos 0x4/0x3f. Note: Only the 6 LSBs can be matched in IS1 (The DSCP part). · ✔ · src_ip src_ip 2001:0:0:0:e1de:2244:0ff8:0123 · ✔ · dst_ip dst_ip 2001:0:0:0:e1de:2244:0ff8:4567 · ✔ · ip_proto ip_proto 0x12 or ip_proto tcp. · ✔ · This IS1 keyset requires a chain template. This filter matches on two VLAN tags and source and destination IPv6 addresses. The filter in inserted into chain 1000000 (first lookup), classifies all matching packets to priority 5 and goes to second lookup in IS1 (chain 1100000). # tc qdisc add dev eth0 clsact # tc chain add dev eth0 ingress chain 1000000 protocol 802.1ad flower skip_sw \\ vlan_id 0 \\ vlan_prio 0 \\ vlan_ethtype 802.1q \\ cvlan_id 0 \\ cvlan_prio 0 \\ cvlan_ethtype ipv6 \\ ip_tos 0x00/0x3f \\ src_ip 0::0 \\ dst_ip 0::0 \\ ip_proto udp # tc filter add dev eth0 ingress chain 1000000 prio 10 handle 42 protocol 802.1ad flower skip_sw \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype 802.1q \\ cvlan_id 200 \\ cvlan_prio 2 \\ cvlan_ethtype ipv6 \\ ip_tos 0xf/0x3f \\ src_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:0123 \\ dst_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:4567 \\ ip_proto tcp \\ action skbedit priority 5 \\ action goto chain 1100000 This filter is the same as above but without VLAN matching. The filter in inserted into chain 1000000 (first lookup), classifies all matching packets to priority 5 and goes to second lookup in IS1 (chain 1100000). # tc qdisc add dev eth0 clsact # tc chain add dev eth0 ingress chain 1000000 protocol ipv6 flower skip_sw \\ ip_tos 0x00/0x3f \\ src_ip 0::0 \\ dst_ip 0::0 \\ ip_proto udp # tc filter add dev eth0 ingress chain 1000000 prio 10 handle 42 protocol ipv6 flower skip_sw \\ ip_tos 0xf/0x3f \\ src_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:0123 \\ dst_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:4567 \\ ip_proto tcp \\ action skbedit priority 5 \\ action goto chain 1100000 The NORMAL keyset can be used with all Traffic Types but is more limited compared with 7TUPLE. It can only match on a single VLAN header. It cannot match on IPv6 addresses but it is able to match on both MAC address and IPv4 address simultaneously as long as you match on either source or destination MAC/IP addresses. A tc chain template is required in order to use it. The template selects whether to use source or destination addresses. Flower key Value Example IPv4 IPv6 Other src_mac or dst_mac or / src_mac 00:33:33:33:33:33, src_mac 00:33:33:00:00:00/ff:ff:ff:00:00:00, dst_mac 00:44:44:44:44:44 or dst_mac 00:44:44:00:00:00/ff:ff:ff:00:00:00 ✔ ✔ ✔ vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 ✔ ✔ ✔ vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 ✔ ✔ ✔ vlan_ethtype vlan_ethtype ip or vlan_ethtype ipv6 ✔ ✔ ✔ ip_tos or / ip_tos 0x12 or ip_tos 0x4/0x3f. Note: Only the 6 LSBs can be matched in IS1 (The DSCP part). ✔ ✔ · ip_flags [/] ip_flags { [no]frag | [no]firstfrag } ✔ · · src_ip or dst_ip or / src_ip 10.10.10.10, src_ip 10.10.0.0/255.255.0.0, dst_ip 20.20.20.20 or dst_ip 20.20.0.0/255.255.0.0 ✔ · · ip_proto ip_proto 0x12 or ip_proto tcp. ✔ ✔ · src_port or / src_port 1000 or src_port 0x200/0xff0 ✔ ✔ · dst_port or / dst_port 2000 or dst_port 0x100/0xff0 ✔ ✔ · This IS1 keyset requires a chain template. This filter matches on one VLAN tag and source MAC and IPv4 addresses. The filter in inserted into chain 1000000 (first lookup), classifies all matching packets to priority 5 and goes to second lookup in IS1 (chain 1100000). # tc qdisc add dev eth0 clsact # tc chain add dev eth0 ingress chain 1000000 protocol 802.1q flower skip_sw \\ src_mac 00:00:00:00:00:00 \\ vlan_id 0 \\ vlan_prio 0 \\ vlan_ethtype ipv4 \\ ip_tos 0x00/0x3f \\ ip_flags frag/firstfrag \\ src_ip 0.0.0.0 \\ ip_proto udp \\ src_port 100 \\ dst_port 200 # tc filter add dev eth0 ingress chain 1000000 prio 10 handle 42 protocol 802.1q flower skip_sw \\ src_mac 00:33:33:33:33:33 \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype ipv4 \\ ip_tos 0xf/0x3f \\ ip_flags frag/nofirstfrag \\ src_ip 10.10.10.10 \\ ip_proto tcp \\ src_port 1000 \\ dst_port 2000 action skbedit priority 5 \\ action goto chain 1100000 This filter matches on destination MAC and IPv4 addresses. The filter in inserted into chain 1000000 (first lookup), classifies all matching packets to priority 5 and goes to second lookup in IS1 (chain 1100000). # tc qdisc add dev eth0 clsact # tc chain add dev eth0 ingress chain 1000000 protocol ipv4 flower skip_sw \\ dst_mac 00:00:00:00:00:00 \\ ip_tos 0x00/0x3f \\ ip_flags frag/firstfrag \\ src_ip 0.0.0.0 \\ ip_proto udp \\ src_port 100 \\ dst_port 200 # tc filter add dev eth0 ingress chain 1000000 prio 10 handle 42 protocol ipv4 flower skip_sw \\ dst_mac 00:44:44:44:44:44 \\ ip_tos 0xf/0x3f \\ ip_flags frag/nofirstfrag \\ dst_ip 20.20.20.20 \\ ip_proto tcp \\ src_port 1000 \\ dst_port 2000 action skbedit priority 5 \\ action goto chain 1100000 The 5TUPLE_IP4 keyset can be used for both IPv4 and IPv6 lookups. It cannot match on IPv6 addresses but it is able to match on both IPv4 source and destination addresses simultaneously. A tc chain template is required in order to use it. Flower key Value Example IPv4 IPv6 Other vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 ✔ ✔ · vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 ✔ ✔ · vlan_ethtype vlan_ethtype 802.1q or vlan_ethtype ipv6 ✔ ✔ · cvlan_id or / cvlan_id 1234 or cvlan_id 0x100/0xff0 ✔ ✔ · cvlan_prio or / cvlan_prio 3 or cvlan_id 0x0/0x1 ✔ ✔ · cvlan_ethtype vlan_ethtype ipv6 ✔ ✔ · ip_flags [/] ip_flags { [no]frag | [no]firstfrag } ✔ · · src_ip or / src_ip 10.10.10.10 or src_ip 10.10.0.0/255.255.0.0 ✔ · · dst_ip or / dst_ip 20.20.20.20, dst_ip 20.20.0.0/255.255.0.0 ✔ · · ip_proto ip_proto 0x12 or ip_proto tcp. ✔ ✔ · This IS1 keyset requires a chain template. You can see some example of IPv4 filters here IS0/IS1 IPv4 filter examples The DMAC_VID keyset can be used for all IS1 Frame Type and lookup combinations. It is a short keyset that can be used to match on a VLAN and either source or destination MAC address. A tc chain template is required in order to use it. The template selects whether to use source or destination MAC address. Flower key Value Example IPv4 IPv6 Other src_mac or dst_mac or / src_mac 00:33:33:33:33:33, src_mac 00:33:33:00:00:00/ff:ff:ff:00:00:00, dst_mac 00:44:44:44:44:44 or dst_mac 00:44:44:00:00:00/ff:ff:ff:00:00:00 ✔ ✔ ✔ vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 ✔ ✔ ✔ vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 ✔ ✔ ✔ vlan_ethtype vlan_ethtype ip or vlan_ethtype ipv6 ✔ ✔ ✔ This IS1 keyset requires a chain template. This filter matches on one VLAN tag, source MAC address and all protocols The filter in inserted into chain 1000000 (first lookup), classifies all matching packets to priority 5 and goes to second lookup in IS1 (chain 1100000). # tc qdisc add dev eth0 clsact # tc chain add dev eth0 ingress chain 1000000 protocol 802.1q flower skip_sw \\ src_mac 00:00:00:00:00:00 \\ vlan_id 0 \\ vlan_prio 0 \\ vlan_ethtype all # tc filter add dev eth0 ingress chain 1000000 prio 10 handle 42 protocol 802.1q flower skip_sw \\ src_mac 00:33:33:33:33:33 \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype all \\ action skbedit priority 5 \\ action goto chain 1100000 This filter matches on one VLAN tag, destination MAC address and all protocols # tc qdisc add dev eth0 clsact # tc chain add dev eth0 ingress chain 1000000 protocol 802.1q flower skip_sw \\ dst_mac 00:00:00:00:00:00 \\ vlan_id 0 \\ vlan_prio 0 \\ vlan_ethtype all # tc filter add dev eth0 ingress chain 1000000 prio 10 handle 42 protocol 802.1q flower skip_sw \\ dst_mac 00:44:44:44:44:44 \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype all \\ action skbedit priority 5 \\ action goto chain 1100000 The following filter matches on two VLAN tags and source and destination IPv4 addresses. The filter in inserted into chain 1000000 (first lookup), classifies all matching packets to priority 5 and goes to second lookup in IS0/IS1 (chain 1100000). The Sparx5 IS0 VCAP does not support the ip_tos key and the skbedit action. # tc qdisc add dev eth0 clsact # tc chain add dev eth0 ingress chain 1000000 protocol 802.1ad flower skip_sw \\ vlan_id 0 \\ vlan_prio 0 \\ vlan_ethtype 802.1q \\ cvlan_id 0 \\ cvlan_prio 0 \\ cvlan_ethtype ipv4 \\ ip_tos 0x00/0x3f \\ ip_flags frag/firstfrag \\ src_ip 0.0.0.0 \\ dst_ip 0.0.0.0 \\ ip_proto udp # tc filter add dev eth0 ingress chain 1000000 prio 10 handle 42 protocol 802.1ad flower skip_sw \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype 802.1q \\ cvlan_id 200 \\ cvlan_prio 2 \\ cvlan_ethtype ipv4 \\ ip_tos 0xf/0x3f \\ ip_flags frag/nofirstfrag \\ src_ip 10.10.10.10 \\ dst_ip 20.20.20.20 \\ ip_proto tcp \\ action skbedit priority 5 \\ action goto chain 1100000 The following filter is the same as the filter above but without VLAN matching. The filter in inserted into chain 1000000 (first lookup), classifies all matching packets to priority 5 and goes to second lookup in IS1 (chain 1100000). # tc qdisc add dev eth0 clsact # tc chain add dev eth0 ingress chain 1000000 protocol ipv4 flower skip_sw \\ ip_tos 0x00/0x3f \\ ip_flags frag/firstfrag \\ src_ip 0.0.0.0 \\ dst_ip 0.0.0.0 \\ ip_proto udp # tc filter add dev eth0 ingress chain 1000000 prio 10 handle 42 protocol ipv4 flower skip_sw \\ ip_tos 0xf/0x3f \\ ip_flags frag/nofirstfrag \\ src_ip 10.10.10.10 \\ dst_ip 20.20.20.20 \\ ip_proto tcp \\ action skbedit priority 5 \\ action goto chain 1100000 These are the actions supported in the IS0 or IS1 VCAPs: Flower action Sparx5 LAN966x Example Description pass ✔ ✔ action pass This is a no-op action. vlan modify id priority ✔ ✔ action vlan modify id 100 priority 3 Classifies the packet to a specific VID and PCP. skbedit priority · ✔ action skbedit priority 5 Classifies the packet to a specific priority. gate [basetime ] sched-entry [IPV] [MAX_OCTETS] …​ ✔ ✔ action gate base-time 0 sched-entry open 10000000 3 8m sched-entry close 90000000 Gate is open in 10 mS and closed in 90 mS. Frames that passes the gate are assigned an internal priority value of 3. A maximum of 8 mega bytes can pass the gate during open time. police rate burst [mtu ] ✔ ✔ action police rate 100kbit burst 16000 mtu 1200 Police the frames to a specific bit rate and optionally discards frames larger than MTU. mirred dev ✔ · action mirred egress mirror dev eth2 Send copied of matched frames to the mirror port goto chain ✔ ✔ action goto chain 1100000 Which chain to go to after this match. A no-op action in first and second lookup. In third lookup the chain number is used to set the PAG value to be used in IS2 lookups. Use the tc filter show command to see the filter configuration for a specific port. Add -s to also see the statistics: # tc -s filter show dev eth2 ingress filter protocol 802.1Q pref 1 flower chain 1000000 filter protocol 802.1Q pref 1 flower chain 1000000 handle 0x3e8 vlan_id 100 vlan_ethtype all dst_mac 00:00:00:00:00:22 eth_type 0003 skip_sw in_hw in_hw_count 1 action order 1: priority wildcard clockid TAI flags 0x88a64 base-time 0ns cycle-time 1ms cycle-time-ext 0ns schedule: number 0 gate-state open interval 200us ipv 4 max-octets 8Mb number 1 gate-state close interval 800us ipv wildcard max-octets wildcard pipe index 42 ref 2 bind 1 installed 6 sec used 2 sec Action statistics: Sent 0 bytes 10000 pkt (dropped 7999, overlimits 0 requeues 0) Sent software 0 bytes 0 pkt Sent hardware 0 bytes 10000 pkt backlog 0b 0p requeues 0 used_hw_stats immediate action order 2: gact action goto chain 1100000 random type none pass val 0 index 1 ref 1 bind 1 installed 6 sec used 2 sec Action statistics: Sent 0 bytes 10000 pkt (dropped 7999, overlimits 0 requeues 0) Sent software 0 bytes 0 pkt Sent hardware 0 bytes 10000 pkt backlog 0b 0p requeues 0 used_hw_stats immediate First comes information about the filter, then the match and finally the actions including statistics. The number of frames that has his the filter is shown as Sent hardware 0 bytes 10000 pkt. Note that the hardware does not support counting the number of bytes. In this case there is a policer involved and the number of dropped frames are shown as (dropped 7999, …​). In the current kernel the same statistics are shown for all actions. This might change in the future.","title":"Classification (IS0/IS1)","component":"bsp","version":"2024.03","name":"tc-is1","url":"/bsp/2024.03/tc/tc-is1.html","titles":[{"text":"1. Sparx5 IS0 Classification","hash":"_sparx5_is0_classification","id":1},{"text":"2. LAN966x IS1 Classification","hash":"_lan966x_is1_classification","id":2},{"text":"3. IS0/IS1 Keysets","hash":"_is0is1_keysets","id":3},{"text":"3.1. NORMAL_5TUPLE_IP4","hash":"_normal_5tuple_ip4","id":4},{"text":"3.2. NORMAL_7TUPLE","hash":"_normal_7tuple","id":5},{"text":"3.3. 7TUPLE","hash":"_7tuple","id":6},{"text":"3.4. NORMAL_IP6","hash":"_normal_ip6","id":7},{"text":"3.5. 5TUPLE_IP6","hash":"_5tuple_ip6","id":8},{"text":"3.6. NORMAL","hash":"_normal","id":9},{"text":"3.7. 5TUPLE_IP4","hash":"_5tuple_ip4","id":10},{"text":"3.8. DMAC_VID","hash":"_dmac_vid","id":11},{"text":"4. IS0/IS1 IPv4 filter examples","hash":"ip4_filter_examples","id":12},{"text":"5. IS0/IS1 Actions","hash":"is0_is1_actions","id":13},{"text":"6. IS0/IS1 Status","hash":"_is0is1_status","id":14}]},"178":{"id":178,"text":"ACL (access-control list) in Microchip switch products is based on VCAP IS2 lookups and can be used for the following purposes: Permit frame Drop frame Police frame Mirror frame Extract frame to CPU When a frame is received on a port it is classified into one of the following traffic types by the IS2 VCAP: Traffic Type Sparx5 LAN966x IPv4 MC ✔ · IPv4 UC ✔ · IPv6 MC ✔ · IPv6 UC ✔ · IPv4 TCP/UDP · ✔ IPv4 Other · ✔ IPv6 TCP/UDP · ✔ IPv6 Other · ✔ OAM · ✔ SNAP · ✔ LLC · ✔ ARP/RARP ✔ ✔ Other frames ✔ ✔ All frame types are subject to the appropriate lookups according to the VCAP. See VCAP Information. Each port is configured to generate a specific keyset (a set of key values extracted from a frame) for each combination of Traffic Type and lookup. A keyset is an internal value used by the hardware. A flower key is what the user specifies in the tc flower filter command. The valid combinations of Sparx5 IS2 lookup keyset versus Traffic Type are: Sparx5 IS2 keyset - Traffic Type Size IPv4 UC/MC IPv6 UC/MC ARP/RARP Other ARP 6 · · ✔ · IP4_OTHER 6 ✔ ✔ · · IP4_TCP_UDP 6 ✔ ✔ · · IP_7TUPLE 12 ✔ ✔ · · MAC_ETYPE 6 ✔ ✔ · ✔ The unicast and multicast configurations are set to the same value. The IPv4 configuration can be setup to generate IP4_TCP_UDP for IPv4 TCP/UDP traffic and IP4_OTHER for non-TCP/UDP IPv4 traffic. Similarly the IPv6 configuration can be setup to generate IP4_TCP_UDP for IPv6 TCP/UDP traffic and IP4_OTHER for non-TCP/UDP IPv6 traffic. In this release the Sparx5s port keyset configuration varies for the 4 IS2 lookups: Sparx5 IS2 Lookup - Traffic Type IPv4 UC/MC IPv6 UC/MC ARP/RARP Other Lookup 0 MAC_ETYPE MAC_ETYPE MAC_ETYPE MAC_ETYPE Lookup 1 IP4_TCP_UDP IP4_OTHER IP_7TUPLE ARP MAC_ETYPE Lookup 2 IP_7TUPLE IP_7TUPLE ARP MAC_ETYPE Lookup 3 IP_7TUPLE IP_7TUPLE MAC_ETYPE MAC_ETYPE This will most likely be changed so that all lookups use the same configuration in a future release, as it is possible to change the configuration by using a template, and LAN966x uses the same configuration for all lookups. The valid combinations of Sparx5 IS2 lookup keyset versus Traffic Type are: LAN966x IS2 keyset - Traffic Type Size IPv4 TCP/UDP IPv4 Other IPv6 TCP/UDP IP6 Other OAM SNAP ARP/RARP Other ARP 2 · · · · · · ✔ · IP4_OTHER 2 · ✔ · ✔ · · · · IP4_TCP_UDP 2 ✔ · ✔ · · · · · IP6_OTHER 4 · · · ✔ · · · · IP6_TCP_UDP 4 · · ✔ · · · · · MAC_ETYPE 2 ✔ ✔ ✔ ✔ ✔ · ✔ ✔ MAC_LLC 2 · · · · · ✔ · · MAC_SNAP 2 · · · · · ✔ · · OAM 2 · · · · ✔ · · · The IS2 VCAP has two additional lookup keys, IP6_STD and CUSTOM, which are currently not used. The IP6 keys are twice as large as the other keys which means that they occupy twice as much space in the VCAP when used. The supported flower keys for each IS2 lookup keyset are described next and here is also shown examples on how to use the actions. A more thorough description of the actions is found in the section IS2 Actions This keyset is used for both IPv4 and IPv6 traffic. It does not have IPv4 source and destination addresses though. Flower key Value Example src_mac or / src_mac 00:33:33:33:33:33 or src_mac 00:33:33:00:00:00/ff:ff:ff:00:00:00 dst_mac or / dst_mac 00:44:44:44:44:44 or dst_mac 00:44:44:00:00:00/ff:ff:ff:00:00:00 vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 vlan_ethtype vlan_ethtype 802.1q or vlan_ethtype ip Note: Supports the same values as in tc filter protocol field. ip_flags [/] ip_flags { [no]frag | [no]firstfrag } ip_tos or / ip_tos 0x12 or ip_tos 0x4/0x3f. Note: Only the 6 LSBs can be matched in IS1 (The DSCP part). src_ip src_ip 2001:0:0:0:e1de:2244:0ff8:0123 dst_ip dst_ip 2001:0:0:0:e1de:2244:0ff8:4567 ip_proto ip_proto 6, ip_proto tcp, ip_proto 17 or ip_proto udp. src_port or / src_port 1000 or src_port 0x200/0xff0 dst_port or / dst_port 2000 or dst_port 0x100/0xff0 This filter matches on classified VLAN tag, and all supported IPv6/TCP fields. The filter in inserted into chain 8200000 (lookup 2), traps all matching packets and goes to lookup 3 in IS2 (chain 8300000). # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 8200000 prio 10 handle 42 protocol 802.1q flower skip_sw \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype ipv6 \\ ip_ttl 1 \\ ip_tos 0xf/0x3f \\ src_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:0123 \\ dst_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:4567/64 \\ ip_proto tcp \\ tcp_flags 0x10/0x3f \\ src_port 1000 \\ dst_port 2000 \\ action trap \\ action goto chain 8300000 This keyset is generated when Ethertype is 0x86dd and Next header is either TCP (6) or UDP (17). Flower key Value Example vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 vlan_ethtype vlan_ethtype ipv6 ip_ttl ip_ttl 1 ip_tos or / ip_tos 0x12 or ip_tos 0x4/0x3f src_ip or / src_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:0123 or src_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:0123/32 dst_ip or / dst_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:4567 or dst_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:4567/64 ip_proto ip_proto 6, ip_proto tcp, ip_proto 17 or ip_proto udp. tcp_flags or / tcp_flags 0x1a or tcp_flags 0x10/0x3f src_port or / src_port 1000 or src_port 0x200/0xff0 dst_port or / dst_port 2000 or dst_port 0x100/0xff0 This filter matches on classified VLAN tag, and all supported IPv6/TCP fields. The filter in inserted into chain 8000000 (first lookup), drops all matching packets and goes to second lookup in IS2 (chain 8100000). # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 8000000 prio 10 handle 42 protocol 802.1q flower skip_sw \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype ipv6 \\ ip_ttl 1 \\ ip_tos 0xf/0x3f \\ src_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:0123 \\ dst_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:4567/64 \\ ip_proto tcp \\ tcp_flags 0x10/0x3f \\ src_port 1000 \\ dst_port 2000 \\ action drop \\ action goto chain 8100000 This filter is the same as above but without VLAN matching. # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 8000000 prio 10 handle 42 protocol ipv6 flower skip_sw \\ ip_ttl 1 \\ ip_tos 0xf/0x3f \\ src_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:0123 \\ dst_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:4567/64 \\ ip_proto tcp \\ tcp_flags 0x10/0x3f \\ src_port 1000 \\ dst_port 2000 \\ action drop \\ action goto chain 8100000 This keyset is generated when Ethertype is 0x86dd and Next header is neither TCP (6) nor UDP (17). Flower key Value Example vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 vlan_ethtype vlan_ethtype ipv6 ip_ttl ip_ttl 1 ip_tos or / ip_tos 0x12 or ip_tos 0x4/0x3f src_ip or / src_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:0123 or src_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:0123/32 dst_ip or / dst_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:4567 or dst_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:4567/64 ip_proto ip_proto 58 or ip_proto icmpv6. This filter matches on classified VLAN tag, and all supported IPv6 fields. The filter in inserted into chain 8000000 (first lookup), drops all matching packets and goes to second lookup in IS2 (chain 8100000). # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 8000000 prio 10 handle 42 protocol 802.1q flower skip_sw \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype ipv6 \\ ip_ttl 1 \\ ip_tos 0xf/0x3f \\ src_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:0123 \\ dst_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:4567/64 \\ ip_proto icmpv6 \\ action drop \\ action goto chain 8100000 This filter is the same as above but without VLAN matching. # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 8000000 prio 10 handle 42 protocol ipv6 flower skip_sw \\ ip_ttl 1 \\ ip_tos 0xf/0x3f \\ src_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:0123 \\ dst_ip 2001:0db8:3c4d:0015:e1de:2244:0ff8:4567/64 \\ ip_proto icmpv6 \\ action drop \\ action goto chain 8100000 This keyset is generated when Ethertype is 0x0800 and IP protocol is either TCP (6) or UDP (17). Flower key Value Example vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 vlan_ethtype vlan_ethtype ipv4 ip_ttl ip_ttl 1 ip_tos or / ip_tos 0x12 or ip_tos 0x4/0x3f ip_flags [/] ip_flags { [no]frag | [no]firstfrag } src_ip or / src_ip 10.10.10.10 or src_ip 10.10.0.0/255.255.0.0 dst_ip or / dst_ip 20.20.20.20, dst_ip 20.20.0.0/255.255.0.0 ip_proto ip_proto 6, ip_proto tcp, ip_proto 17 or ip_proto udp. tcp_flags or / tcp_flags 0x1a or tcp_flags 0x10/0x3f src_port or / src_port 1000 or src_port 0x200/0xff0 dst_port or / dst_port 2000 or dst_port 0x100/0xff0 NOTE: Sparx5: Use Lookup 1 as this is configured with the IP4_OTHER keyset. The drop action is not available for IS2. This filter matches on classified VLAN tag, and all supported IPv4/TCP fields. The filter in inserted into chain 8000000 (first lookup), drops all matching packets and goes to second lookup in IS2 (chain 8100000). # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 8000000 prio 10 handle 42 protocol 802.1q flower skip_sw \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype ipv4 \\ ip_ttl 1 \\ ip_tos 0xf/0x3f \\ ip_flags frag/nofirstfrag \\ src_ip 10.10.10.10 \\ dst_ip 20.20.20.20/255.255.0.0 \\ ip_proto tcp \\ tcp_flags 0x10/0x3f \\ src_port 1000 \\ dst_port 2000 \\ action drop \\ action goto chain 8100000 This filter is the same as above but without VLAN matching. # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 8000000 prio 10 handle 42 protocol ipv4 flower skip_sw \\ ip_ttl 1 \\ ip_tos 0xf/0x3f \\ ip_flags frag/nofirstfrag \\ src_ip 10.10.10.10 \\ dst_ip 20.20.20.20/255.255.0.0 \\ ip_proto tcp \\ tcp_flags 0x10/0x3f \\ src_port 1000 \\ dst_port 2000 \\ action drop \\ action goto chain 8100000 This keyset is generated when Ethertype is 0x0800 and IP protocol is neither TCP (6) nor UDP (17). Flower key Value Example vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 vlan_ethtype vlan_ethtype ipv4 ip_ttl ip_ttl 1 ip_tos or / ip_tos 0x12 or ip_tos 0x4/0x3f ip_flags [/] ip_flags { [no]frag | [no]firstfrag } src_ip or / src_ip 10.10.10.10 or src_ip 10.10.0.0/255.255.0.0 dst_ip or / dst_ip 20.20.20.20, dst_ip 20.20.0.0/255.255.0.0 ip_proto ip_proto 1 or ip_proto icmp. This filter matches on classified VLAN tag, and all supported IPv4 fields. The filter in inserted into chain 8000000 (first lookup), drops all matching packets and goes to second lookup in IS2 (chain 8100000). Sparx5: Use Lookup 1 as this is configured with the IP4_OTHER keyset. The drop action is not available for IS2. # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 8000000 prio 10 handle 42 protocol 802.1q flower skip_sw \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype ipv4 \\ ip_ttl 1 \\ ip_tos 0xf/0x3f \\ ip_flags frag/nofirstfrag \\ src_ip 10.10.10.10 \\ dst_ip 20.20.20.20/255.255.0.0 \\ ip_proto icmp \\ action drop \\ action goto chain 8100000 This filter is the same as above but without VLAN matching. # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 8000000 prio 10 handle 42 protocol ipv4 flower skip_sw \\ ip_ttl 1 \\ ip_tos 0xf/0x3f \\ ip_flags frag/nofirstfrag \\ src_ip 10.10.10.10 \\ dst_ip 20.20.20.20/255.255.0.0 \\ ip_proto icmp \\ action drop \\ action goto chain 8100000 This keyset is generated when Ethertype is 0x0806 (ARP) or 0x8035 (RARP). Flower key Value Example vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 vlan_ethtype vlan_ethtype arp or vlan_ethtype rarp src_mac or / src_mac 00:33:33:33:33:33 or src_mac 00:33:33:00:00:00/ff:ff:ff:00:00:00 arp_tip or / arp_tip 10.10.10.10 or arp_tip 10.10.0.0/255.255.0.0 arp_sip or / arp_sip 10.10.10.10 or arp_sip 10.10.0.0/255.255.0.0 arp_op request or reply arp_op request or arp_op reply This filter matches on classified VLAN tag, and all supported IPv4 fields. The filter in inserted into chain 8000000 (first lookup), drops all matching packets and goes to second lookup in IS2 (chain 8100000). # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 8000000 prio 10 handle 42 protocol 802.1q flower skip_sw \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype arp \\ src_mac 00:33:33:33:33:33 \\ arp_tip 10.10.10.10 \\ arp_sip 20.20.20.20/255.255.0.0 \\ arp_op reply \\ action drop \\ action goto chain 8100000 This filter is the same as above but without VLAN matching. # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 8000000 prio 10 handle 42 protocol arp flower skip_sw \\ src_mac 00:33:33:33:33:33 \\ arp_tip 10.10.10.10 \\ arp_sip 20.20.20.20/255.255.0.0 \\ arp_op reply \\ action drop \\ action goto chain 8100000 Sparx5: Use Lookup 1 or 2 as this is configured with the ARP keyset. The drop action is not available for IS2. This keyset is generated when Ethertype is 0x8809 (Ethernet slow protocols), 0x88ee (MEF 16 E-LMI) or 0x8902 (IEEE 802.1ag Connectivity Fault Management). Flower key Value Example vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 vlan_ethtype vlan_ethtype 0x8809, vlan_ethtype 0x88ee or vlan_ethtype 0x8902 src_mac or / src_mac 00:33:33:33:33:33 or src_mac 00:33:33:00:00:00/ff:ff:ff:00:00:00 dst_mac or / dst_mac 00:44:44:44:44:44 or dst_mac 00:44:44:00:00:00/ff:ff:ff:00:00:00 This filter matches on classified VLAN tag, and all supported OAM fields. The filter in inserted into chain 8000000 (first lookup), drops all matching packets and goes to second lookup in IS2 (chain 8100000). # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 8000000 prio 10 handle 42 protocol 802.1q flower skip_sw \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype 0x8809 \\ src_mac 00:33:33:33:33:33 \\ dst_mac 00:44:44:44:00:00/ff:ff:ff:ff:00:00 \\ action drop \\ action goto chain 8100000 This filter is the same as above but without VLAN matching. # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 8000000 prio 10 handle 42 protocol 0x8809 flower skip_sw \\ src_mac 00:33:33:33:33:33 \\ dst_mac 00:44:44:44:00:00/ff:ff:ff:ff:00:00 \\ action drop \\ action goto chain 8100000 This keyset is generated when Ethertype is less than 0x600 and LLC header is a SNAP header (0xaaaa03). Flower key Value Example vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 vlan_ethtype vlan_ethtype snap src_mac or / src_mac 00:33:33:33:33:33 or src_mac 00:33:33:00:00:00/ff:ff:ff:00:00:00 dst_mac or / dst_mac 00:44:44:44:44:44 or dst_mac 00:44:44:00:00:00/ff:ff:ff:00:00:00 This filter matches on classified VLAN tag, and all supported SNAP fields. The filter in inserted into chain 8000000 (first lookup), drops all matching packets and goes to second lookup in IS2 (chain 8100000). # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 8000000 prio 10 handle 42 protocol 802.1q flower skip_sw \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype snap \\ src_mac 00:33:33:33:33:33 \\ dst_mac 00:44:44:44:00:00/ff:ff:ff:ff:00:00 \\ action drop \\ action goto chain 8100000 This filter is the same as above but without VLAN matching. # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 8000000 prio 10 handle 42 protocol snap flower skip_sw \\ src_mac 00:33:33:33:33:33 \\ dst_mac 00:44:44:44:00:00/ff:ff:ff:ff:00:00 \\ action drop \\ action goto chain 8100000 This keyset is generated when Ethertype is less than 0x600 and LLC header is not a SNAP header. Flower key Value Example vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 vlan_ethtype vlan_ethtype 802_2 src_mac or / src_mac 00:33:33:33:33:33 or src_mac 00:33:33:00:00:00/ff:ff:ff:00:00:00 dst_mac or / dst_mac 00:44:44:44:44:44 or dst_mac 00:44:44:00:00:00/ff:ff:ff:00:00:00 This filter matches on classified VLAN tag, and all supported LLC fields. The filter in inserted into chain 8000000 (first lookup), drops all matching packets and goes to second lookup in IS2 (chain 8100000). # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 8000000 prio 10 handle 42 protocol 802.1q flower skip_sw \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype 802_2 \\ src_mac 00:33:33:33:33:33 \\ dst_mac 00:44:44:44:00:00/ff:ff:ff:ff:00:00 \\ action drop \\ action goto chain 8100000 This filter is the same as above but without VLAN matching. # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 8000000 prio 10 handle 42 protocol 802_2 flower skip_sw \\ src_mac 00:33:33:33:33:33 \\ dst_mac 00:44:44:44:00:00/ff:ff:ff:ff:00:00 \\ action drop \\ action goto chain 8100000 This keyset is generated when frame is not classified to one of the above keys. Flower key Value Example vlan_id or / vlan_id 1234 or vlan_id 0x100/0xff0 vlan_prio or / vlan_prio 3 or vlan_id 0x0/0x1 vlan_ethtype vlan_ethtype 0x892f or vlan_ethtype hsr src_mac or / src_mac 00:33:33:33:33:33 or src_mac 00:33:33:00:00:00/ff:ff:ff:00:00:00 dst_mac or / dst_mac 00:44:44:44:44:44 or dst_mac 00:44:44:00:00:00/ff:ff:ff:00:00:00 This filter matches on classified VLAN tag, and all supported ETYPE fields. The filter in inserted into chain 8000000 (first lookup), drops all matching packets and goes to second lookup in IS2 (chain 8100000). # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 8000000 prio 10 handle 42 protocol 802.1q flower skip_sw \\ vlan_id 100 \\ vlan_prio 1 \\ vlan_ethtype hsr \\ src_mac 00:33:33:33:33:33 \\ dst_mac 00:44:44:44:00:00/ff:ff:ff:ff:00:00 \\ action drop \\ action goto chain 8100000 Sparx5: The HSR ethtype is not supported. The drop action is not available for IS2. This filter is the same as above but without VLAN matching. # tc qdisc add dev eth0 clsact # tc filter add dev eth0 ingress chain 8000000 prio 10 handle 42 protocol hsr flower skip_sw \\ src_mac 00:33:33:33:33:33 \\ dst_mac 00:44:44:44:00:00/ff:ff:ff:ff:00:00 \\ action drop \\ action goto chain 8100000 The IS2 lookups supports the actions shown in this table. Some actions are only supported on one switch and some action are not available in all lookups. Flower action Example Description Sparx5 LAN966x pass action pass This is a no-op action. ✔ ✔ trap action trap Drop the frame and send a copy to the CPU. ✔ ✔ drop action drop Drop the frame. ✔ ✔ police rate burst action police rate 100kbit burst 16000 Police the frames to a specific bit rate. ✔ Only Lookup 0 mirror to dev action mirred egress mirror dev eth3 Mirror the frame on monitor port eth3. ✔ ✔ redirect to dev action mirred egress redirect dev eth3 Redirect the frame to port eth3. ✔ · goto chain action goto chain 8100000 Which chain to go to after this match. A no-op action in second lookup. In first lookup the chain number is used to match the PAG value that was assigned in the third lookup in the IS1 VCAP. ✔ ✔ Use the tc filter show command to see the filter configuration for a specific port. Add -s to also see the statistics: # tc -s filter show dev eth2 ingress filter protocol all pref 65535 flower chain 1200000 filter protocol all pref 65535 flower chain 1200000 handle 0x2a dst_mac 00:44:44:44:44:44/24 src_mac 00:33:33:33:33:33/24 skip_sw in_hw in_hw_count 1 action order 1: gact action goto chain 8000002 random type none pass val 0 index 1 ref 1 bind 1 installed 11 sec used 11 sec Action statistics: Sent 0 bytes 10014 pkt (dropped 0, overlimits 0 requeues 0) Sent software 0 bytes 0 pkt Sent hardware 0 bytes 10014 pkt backlog 0b 0p requeues 0 used_hw_stats immediate filter protocol all pref 100 flower chain 8000002 filter protocol all pref 100 flower chain 8000002 handle 0xc8 skip_sw in_hw in_hw_count 1 action order 1: police 0xa rate 100Mbit burst 16000b mtu 2Kb action reclassify overhead 0b ref 2 bind 1 installed 6 sec used 6 sec Action statistics: Sent 0 bytes 10000 pkt (dropped 0, overlimits 0 requeues 0) Sent software 0 bytes 0 pkt Sent hardware 0 bytes 10000 pkt backlog 0b 0p requeues 0 used_hw_stats immediate action order 2: gact action goto chain 8100000 random type none pass val 0 index 2 ref 1 bind 1 installed 6 sec used 6 sec Action statistics: Sent 0 bytes 10000 pkt (dropped 0, overlimits 0 requeues 0) Sent software 0 bytes 0 pkt Sent hardware 0 bytes 10000 pkt backlog 0b 0p requeues 0 used_hw_stats immediate First comes information about the filter, then the match and finally the actions including statistics. The number of frames that has his the filter is shown as Sent hardware 0 bytes 10000 pkt. Note that the hardware does not support counting the number of bytes and frames dropped by a policer when using IS2. In the current kernel the same statistics are shown for all actions in a filter. This might change in the future. The example above also includes a rule in LAN966x IS1, chain 1200000, with a single action goto chain 8000002.","title":"ACL (IS2)","component":"bsp","version":"2024.03","name":"tc-is2","url":"/bsp/2024.03/tc/tc-is2.html","titles":[{"text":"1. Sparx5 IS2 ACL frame classification","hash":"_sparx5_is2_acl_frame_classification","id":1},{"text":"2. LAN966x IS2 ACL frame classification","hash":"_lan966x_is2_acl_frame_classification","id":2},{"text":"3. IS2 keysets","hash":"_is2_keysets","id":3},{"text":"3.1. IP_7TUPLE","hash":"_ip_7tuple","id":4},{"text":"3.2. IP6_TCP_UDP","hash":"_ip6_tcp_udp","id":5},{"text":"3.3. IP6_OTHER","hash":"_ip6_other","id":6},{"text":"3.4. IP4_TCP_UDP","hash":"_ip4_tcp_udp","id":7},{"text":"3.5. IP4_OTHER","hash":"_ip4_other","id":8},{"text":"3.6. ARP","hash":"_arp","id":9},{"text":"3.7. OAM","hash":"_oam","id":10},{"text":"3.8. MAC_SNAP","hash":"_mac_snap","id":11},{"text":"3.9. MAC_LLC","hash":"_mac_llc","id":12},{"text":"3.10. MAC_ETYPE","hash":"_mac_etype","id":13},{"text":"3.11. IS2 Actions","hash":"is2-actions","id":14},{"text":"3.12. IS2 Status","hash":"_is2_status","id":15}]}},"components":{},"componentVersions":{"bsp/2024.03":{"displayVersion":"2024.03","title":"BSP Releases","version":"2024.03","name":"bsp","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Microchip UNG BSP Documentation"},"sourcemap":false},"url":"/bsp/2024.03/index.html","navigation":[{"items":[{"content":"ReadMe","url":"/bsp/2024.03/index.html","urlType":"internal"},{"content":"Release Notes","url":"/bsp/2024.03/release-notes/nav.html","urlType":"internal"},{"content":"Introduction","url":"/bsp/2024.03/introduction.html","urlType":"internal"},{"content":"Getting started","url":"/bsp/2024.03/getting-started.html","urlType":"internal"},{"content":"Bootloader","url":"/bsp/2024.03/bootloader.html","urlType":"internal"},{"content":"Supported HW","items":[{"content":"LAN966x","url":"/bsp/2024.03/supported-hw/lan966x.html","urlType":"internal","items":[{"content":"Booting","url":"/bsp/2024.03/supported-hw/lan966x-boot.html","urlType":"internal"},{"content":"Restoring SecureBoot Images","url":"/bsp/2024.03/supported-hw/lan966x-restore-secureboot.html","urlType":"internal"},{"content":"SecureBoot","url":"/bsp/2024.03/supported-hw/lan966x-tfa.html","urlType":"internal"},{"content":"TFA_CTL","url":"/bsp/2024.03/supported-hw/lan966x-tfa_ctl.html","urlType":"internal"},{"content":"Overlays","url":"/bsp/2024.03/supported-hw/lan966x-overlays.html","urlType":"internal"},{"content":"FLEXCOM","url":"/bsp/2024.03/supported-hw/lan966x-flexcom.html","urlType":"internal"},{"content":"USART","url":"/bsp/2024.03/supported-hw/lan966x-usart.html","urlType":"internal"},{"content":"SPI","url":"/bsp/2024.03/supported-hw/lan966x-spi.html","urlType":"internal"},{"content":"I2C","url":"/bsp/2024.03/supported-hw/lan966x-i2c.html","urlType":"internal"},{"content":"QSPI","url":"/bsp/2024.03/supported-hw/lan966x-qspi.html","urlType":"internal"},{"content":"MMC","url":"/bsp/2024.03/supported-hw/lan966x-mmc.html","urlType":"internal"},{"content":"GPIO","url":"/bsp/2024.03/supported-hw/lan966x-pinctrl.html","urlType":"internal"},{"content":"MCAN","url":"/bsp/2024.03/supported-hw/lan966x-mcan.html","urlType":"internal"},{"content":"Watchdog Timer","url":"/bsp/2024.03/supported-hw/lan966x-wdt.html","urlType":"internal"},{"content":"Crypto HW Accelerators","url":"/bsp/2024.03/supported-hw/lan966x-aes-sha.html","urlType":"internal"},{"content":"OTP","url":"/bsp/2024.03/supported-hw/lan966x-otp.html","urlType":"internal"},{"content":"UDPHS - USB Device","url":"/bsp/2024.03/supported-hw/lan966x-udphs.html","urlType":"internal"},{"content":"PCIe NIC with RPI CM4","url":"/bsp/2024.03/supported-hw/lan966x-pcie-rpi4cm.html","urlType":"internal"}]},{"content":"Sparx5","url":"/bsp/2024.03/supported-hw/sparx5.html","urlType":"internal"},{"content":"LAN969x","url":"/bsp/2024.03/supported-hw/lan969x.html","urlType":"internal","items":[{"content":"Booting","url":"/bsp/2024.03/supported-hw/lan969x-boot.html","urlType":"internal"},{"content":"Restoring SecureBoot Images","url":"/bsp/2024.03/supported-hw/restore-secureboot.html","urlType":"internal"},{"content":"SecureBoot","url":"/bsp/2024.03/supported-hw/lan969x-tfa.html","urlType":"internal"},{"content":"Verified Boot","url":"/bsp/2024.03/supported-hw/lan969x-verified-boot.html","urlType":"internal"},{"content":"FLEXCOM","url":"/bsp/2024.03/supported-hw/lan969x-flexcom.html","urlType":"internal"},{"content":"USART","url":"/bsp/2024.03/supported-hw/lan969x-usart.html","urlType":"internal"},{"content":"SPI","url":"/bsp/2024.03/supported-hw/lan969x-spi.html","urlType":"internal"},{"content":"I2C","url":"/bsp/2024.03/supported-hw/lan969x-i2c.html","urlType":"internal"},{"content":"QSPI","url":"/bsp/2024.03/supported-hw/lan969x-qspi.html","urlType":"internal"},{"content":"MMC","url":"/bsp/2024.03/supported-hw/lan969x-mmc.html","urlType":"internal"},{"content":"GPIO","url":"/bsp/2024.03/supported-hw/lan969x-pinctrl.html","urlType":"internal"},{"content":"SGPIO","url":"/bsp/2024.03/supported-hw/lan969x-sgpio.html","urlType":"internal"},{"content":"MCAN","url":"/bsp/2024.03/supported-hw/lan969x-mcan.html","urlType":"internal"},{"content":"Watchdog Timer","url":"/bsp/2024.03/supported-hw/lan969x-wdt.html","urlType":"internal"},{"content":"USB Host Device","url":"/bsp/2024.03/supported-hw/lan969x-usb.html","urlType":"internal"}]}]},{"content":"Network","items":[{"content":"Overview","url":"/bsp/2024.03/network_overview.html","urlType":"internal"},{"content":"Tools","url":"/bsp/2024.03/tools_overview.html","urlType":"internal"},{"content":"Front Ports","url":"/bsp/2024.03/front_ports.html","urlType":"internal"},{"content":"L2 Bridge","items":[{"content":"Bridge Configuration","url":"/bsp/2024.03/bridge_configuration.html","urlType":"internal"},{"content":"Frame Forwarding","items":[{"content":"Forwarding Overview","url":"/bsp/2024.03/forwarding_overview.html","urlType":"internal"},{"content":"Frame Metadata","url":"/bsp/2024.03/frame_meta_data.html","urlType":"internal"},{"content":"TC Introduction","url":"/bsp/2024.03/tc/tc-intro.html","urlType":"internal"},{"content":"TC and VCAP","url":"/bsp/2024.03/tc/tc-flower-vcap.html","urlType":"internal"},{"content":"VCAP tool","url":"/bsp/2024.03/vcap_tool.html","urlType":"internal"},{"content":"Ingress","items":[{"content":"Basic QoS","url":"/bsp/2024.03/basic_qos.html","urlType":"internal"},{"content":"Classification (IS0/IS1)","url":"/bsp/2024.03/tc/tc-is1.html","urlType":"internal"},{"content":"ACL (IS2)","url":"/bsp/2024.03/tc/tc-is2.html","urlType":"internal"},{"content":"Policing","url":"/bsp/2024.03/policing.html","urlType":"internal"}]},{"content":"Egress","items":[{"content":"Scheduling","url":"/bsp/2024.03/scheduling.html","urlType":"internal"},{"content":"Frame Preemption","url":"/bsp/2024.03/frame_preemption.html","urlType":"internal"},{"content":"Shaping","url":"/bsp/2024.03/shaping.html","urlType":"internal"},{"content":"Egress ACL (ES2)","url":"/bsp/2024.03/tc/tc-es2.html","urlType":"internal"},{"content":"Basic VLAN tagging","url":"/bsp/2024.03/tc/tc-etag.html","urlType":"internal"},{"content":"Rewriter VLAN tagging (ES0)","url":"/bsp/2024.03/tc/tc-es0.html","urlType":"internal"},{"content":"PSFP","url":"/bsp/2024.03/psfp.html","urlType":"internal"},{"content":"FRER","url":"/bsp/2024.03/frer.html","urlType":"internal"}]}]}]},{"content":"Protection switching","items":[{"content":"MRP","url":"/bsp/2024.03/mrp.html","urlType":"internal"}]},{"content":"CFM","url":"/bsp/2024.03/cfm.html","urlType":"internal"},{"content":"PTP","url":"/bsp/2024.03/ptp.html","urlType":"internal"}]}],"root":true,"order":0}]},"bsp/2023.12":{"displayVersion":"2023.12","title":"BSP Releases","version":"2023.12","name":"bsp","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Microchip UNG BSP Documentation"},"sourcemap":false},"url":"/bsp/2023.12/index.html","navigation":[{"items":[{"content":"ReadMe","url":"/bsp/2023.12/index.html","urlType":"internal"},{"content":"Release Notes","url":"/bsp/2023.12/release-notes/nav.html","urlType":"internal"},{"content":"Introduction","url":"/bsp/2023.12/introduction.html","urlType":"internal"},{"content":"Getting started","url":"/bsp/2023.12/getting-started.html","urlType":"internal"},{"content":"Bootloader","url":"/bsp/2023.12/bootloader.html","urlType":"internal"},{"content":"Supported HW","items":[{"content":"LAN966x","url":"/bsp/2023.12/supported-hw/lan966x.html","urlType":"internal","items":[{"content":"Booting","url":"/bsp/2023.12/supported-hw/lan966x-boot.html","urlType":"internal"},{"content":"Restoring SecureBoot Images","url":"/bsp/2023.12/supported-hw/lan966x-restore-secureboot.html","urlType":"internal"},{"content":"SecureBoot","url":"/bsp/2023.12/supported-hw/lan966x-tfa.html","urlType":"internal"},{"content":"TFA_CTL","url":"/bsp/2023.12/supported-hw/lan966x-tfa_ctl.html","urlType":"internal"},{"content":"FLEXCOM","url":"/bsp/2023.12/supported-hw/lan966x-flexcom.html","urlType":"internal"},{"content":"USART","url":"/bsp/2023.12/supported-hw/lan966x-usart.html","urlType":"internal"},{"content":"SPI","url":"/bsp/2023.12/supported-hw/lan966x-spi.html","urlType":"internal"},{"content":"I2C","url":"/bsp/2023.12/supported-hw/lan966x-i2c.html","urlType":"internal"},{"content":"QSPI","url":"/bsp/2023.12/supported-hw/lan966x-qspi.html","urlType":"internal"},{"content":"MMC","url":"/bsp/2023.12/supported-hw/lan966x-mmc.html","urlType":"internal"},{"content":"GPIO","url":"/bsp/2023.12/supported-hw/lan966x-pinctrl.html","urlType":"internal"},{"content":"MCAN","url":"/bsp/2023.12/supported-hw/lan966x-mcan.html","urlType":"internal"},{"content":"Watchdog Timer","url":"/bsp/2023.12/supported-hw/lan966x-wdt.html","urlType":"internal"},{"content":"Crypto HW Accelerators","url":"/bsp/2023.12/supported-hw/lan966x-aes-sha.html","urlType":"internal"},{"content":"OTP","url":"/bsp/2023.12/supported-hw/lan966x-otp.html","urlType":"internal"},{"content":"UDPHS - USB Device","url":"/bsp/2023.12/supported-hw/lan966x-udphs.html","urlType":"internal"}]},{"content":"Sparx5","url":"/bsp/2023.12/supported-hw/sparx5.html","urlType":"internal"},{"content":"LAN969x","url":"/bsp/2023.12/supported-hw/lan969x.html","urlType":"internal","items":[{"content":"Booting","url":"/bsp/2023.12/supported-hw/lan969x-boot.html","urlType":"internal"},{"content":"Restoring SecureBoot Images","url":"/bsp/2023.12/supported-hw/restore-secureboot.html","urlType":"internal"},{"content":"SecureBoot","url":"/bsp/2023.12/supported-hw/lan969x-tfa.html","urlType":"internal"},{"content":"FLEXCOM","url":"/bsp/2023.12/supported-hw/lan969x-flexcom.html","urlType":"internal"},{"content":"USART","url":"/bsp/2023.12/supported-hw/lan969x-usart.html","urlType":"internal"},{"content":"SPI","url":"/bsp/2023.12/supported-hw/lan969x-spi.html","urlType":"internal"},{"content":"I2C","url":"/bsp/2023.12/supported-hw/lan969x-i2c.html","urlType":"internal"},{"content":"QSPI","url":"/bsp/2023.12/supported-hw/lan969x-qspi.html","urlType":"internal"},{"content":"MMC","url":"/bsp/2023.12/supported-hw/lan969x-mmc.html","urlType":"internal"},{"content":"GPIO","url":"/bsp/2023.12/supported-hw/lan969x-pinctrl.html","urlType":"internal"},{"content":"SGPIO","url":"/bsp/2023.12/supported-hw/lan969x-sgpio.html","urlType":"internal"},{"content":"MCAN","url":"/bsp/2023.12/supported-hw/lan969x-mcan.html","urlType":"internal"},{"content":"Watchdog Timer","url":"/bsp/2023.12/supported-hw/lan969x-wdt.html","urlType":"internal"},{"content":"USB Host Device","url":"/bsp/2023.12/supported-hw/lan969x-usb.html","urlType":"internal"}]}]},{"content":"Network","items":[{"content":"Overview","url":"/bsp/2023.12/network_overview.html","urlType":"internal"},{"content":"Tools","url":"/bsp/2023.12/tools_overview.html","urlType":"internal"},{"content":"Front Ports","url":"/bsp/2023.12/front_ports.html","urlType":"internal"},{"content":"L2 Bridge","items":[{"content":"Bridge Configuration","url":"/bsp/2023.12/bridge_configuration.html","urlType":"internal"},{"content":"Frame Forwarding","items":[{"content":"Forwarding Overview","url":"/bsp/2023.12/forwarding_overview.html","urlType":"internal"},{"content":"Frame Metadata","url":"/bsp/2023.12/frame_meta_data.html","urlType":"internal"},{"content":"TC Introduction","url":"/bsp/2023.12/tc/tc-intro.html","urlType":"internal"},{"content":"TC and VCAP","url":"/bsp/2023.12/tc/tc-flower-vcap.html","urlType":"internal"},{"content":"VCAP tool","url":"/bsp/2023.12/vcap_tool.html","urlType":"internal"},{"content":"Ingress","items":[{"content":"Basic QoS","url":"/bsp/2023.12/basic_qos.html","urlType":"internal"},{"content":"Classification (IS0/IS1)","url":"/bsp/2023.12/tc/tc-is1.html","urlType":"internal"},{"content":"ACL (IS2)","url":"/bsp/2023.12/tc/tc-is2.html","urlType":"internal"},{"content":"Policing","url":"/bsp/2023.12/policing.html","urlType":"internal"}]},{"content":"Egress","items":[{"content":"Scheduling","url":"/bsp/2023.12/scheduling.html","urlType":"internal"},{"content":"Frame Preemption","url":"/bsp/2023.12/frame_preemption.html","urlType":"internal"},{"content":"Shaping","url":"/bsp/2023.12/shaping.html","urlType":"internal"},{"content":"Egress ACL (ES2)","url":"/bsp/2023.12/tc/tc-es2.html","urlType":"internal"},{"content":"Basic VLAN tagging","url":"/bsp/2023.12/tc/tc-etag.html","urlType":"internal"},{"content":"Rewriter VLAN tagging (ES0)","url":"/bsp/2023.12/tc/tc-es0.html","urlType":"internal"},{"content":"PSFP","url":"/bsp/2023.12/psfp.html","urlType":"internal"},{"content":"FRER","url":"/bsp/2023.12/frer.html","urlType":"internal"}]}]}]},{"content":"Protection switching","items":[{"content":"MRP","url":"/bsp/2023.12/mrp.html","urlType":"internal"}]},{"content":"CFM","url":"/bsp/2023.12/cfm.html","urlType":"internal"},{"content":"PTP","url":"/bsp/2023.12/ptp.html","urlType":"internal"}]}],"root":true,"order":0}]}}}})